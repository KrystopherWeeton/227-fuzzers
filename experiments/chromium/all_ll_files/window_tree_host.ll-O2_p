; ModuleID = '../../ui/aura/window_tree_host.cc'
source_filename = "../../ui/aura/window_tree_host.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%union.anon.795 = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon.151 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.368", %"class.std::__1::unique_ptr.372", %"class.std::__1::unique_ptr.397", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.408", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.415" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.330", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.343", %"class.std::__1::vector.61", i32, i32, i32, [4 x i8], %"class.base::ObserverList.349", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.361", %"class.base::WeakPtr.367" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList.275" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type { %"class.ui::LayerAnimationDelegate", %"class.cc::ContentLayerClient", %"class.cc::TextureLayerClient", i32, %"class.ui::Compositor"*, %"class.ui::Layer"*, %"class.std::__1::vector.185", %"class.std::__1::vector.192", %"class.ui::Layer"*, %"class.base::internal::flat_tree.200", i8, i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.201", i8, i8, i8, i8, %"class.cc::Region", %"class.cc::Region", float, float, float, float, i8, float, %"class.ui::Layer"*, %"class.ui::Layer"*, float, i32, %"class.std::__1::unique_ptr.207", %"class.std::__1::basic_string", %"class.ui::LayerDelegate"*, %"class.base::ObserverList.213", %"class.ui::LayerOwner"*, %class.scoped_refptr.217, %class.scoped_refptr.241, %class.scoped_refptr.242, %class.scoped_refptr.243, %class.scoped_refptr.244, %class.scoped_refptr.245, %class.scoped_refptr.246, %"class.cc::Layer"*, float, %"class.gfx::ImageSkia", %"class.gfx::Rect", %"struct.viz::TransferableResource", %"class.base::OnceCallback", %"class.gfx::Size", i32, i32, float, i32, %"class.base::WeakPtrFactory.271" }
%"class.ui::LayerAnimationDelegate" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.ui::Compositor" = type { %"class.cc::LayerTreeHostClient", %"class.cc::LayerTreeHostSingleThreadClient", %"class.viz::HostFrameSinkClient", %"class.ui::ThroughputTrackerHost", %"class.gfx::Size", %"class.ui::ContextFactory"*, %"class.viz::mojom::DisplayPrivate"*, %"class.viz::mojom::ExternalBeginFrameController"*, %"class.std::__1::unique_ptr.9", %"class.ui::Layer"*, %"class.base::ObserverList", %"class.base::ObserverList.18", i32, i32, float, [4 x i8], %"class.std::__1::unordered_set", i8, i8, %"class.viz::FrameSinkId", %class.scoped_refptr.40, %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.base::WeakPtr", %class.scoped_refptr.130, %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i8, i8, float, %"class.ui::LayerAnimatorCollection", %class.scoped_refptr.140, %"class.std::__1::unique_ptr.141", %class.SkMatrix44, %"class.gfx::DisplayColorSpaces", i8, i8, %"class.ui::CompositorLockManager", %"class.std::__1::unique_ptr.168", i8, i64, %"class.base::flat_map.174", %"class.base::WeakPtrFactory.184", %"class.base::WeakPtrFactory.184" }
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSingleThreadClient" = type { i32 (...)** }
%"class.ui::ThroughputTrackerHost" = type { i32 (...)** }
%"class.ui::ContextFactory" = type { i32 (...)** }
%"class.viz::mojom::DisplayPrivate" = type opaque
%"class.viz::mojom::ExternalBeginFrameController" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.ui::PendingBeginFrameArgs"* }
%"struct.ui::PendingBeginFrameArgs" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.13" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.18" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.19", i64, i32, [4 x i8] }>
%"class.base::LinkedList.19" = type { %"class.base::LinkNode.20" }
%"class.base::LinkNode.20" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.37", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { float }
%class.scoped_refptr.40 = type { %"class.cc::Layer"* }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.cc::AnimationHost"* }
%"class.cc::AnimationHost" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.cc::LayerTreeHost"* }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.424", %class.scoped_refptr.425, %"class.std::__1::unique_ptr.426", i32, %"class.std::__1::unique_ptr.432", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.444", i32, %"class.std::__1::unique_ptr.450", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.474", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.40, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.489", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.637, %"class.base::flat_map.638", %"class.base::internal::flat_tree.648", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.679", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.705", %"class.std::__1::unordered_map.713", %"class.std::__1::vector.737", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.745", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.766", %"class.std::__1::vector.772", %"class.base::flat_map.780", %"class.base::WeakPtrFactory.790" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.416", %class.scoped_refptr.130 }
%"class.std::__1::vector.416" = type { %"class.std::__1::__vector_base.417" }
%"class.std::__1::__vector_base.417" = type { %"class.std::__1::unique_ptr.418"*, %"class.std::__1::unique_ptr.418"*, %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::unique_ptr.418" = type opaque
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.std::__1::unique_ptr.418"* }
%"class.base::WeakPtr.424" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.129 }
%class.scoped_refptr.129 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.425 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.131" }>
%"class.base::RefCountedThreadSafe.131" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.130, %class.scoped_refptr.130 }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.456", %"class.std::__1::set.464" }
%"class.std::__1::vector.456" = type { %"class.std::__1::__vector_base.457" }
%"class.std::__1::__vector_base.457" = type { %"class.std::__1::unique_ptr.458"*, %"class.std::__1::unique_ptr.458"*, %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.std::__1::unique_ptr.458"* }
%"class.std::__1::set.464" = type { %"class.std::__1::__tree.465" }
%"class.std::__1::__tree.465" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.477, %class.scoped_refptr.478, %class.scoped_refptr.130, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.479", i64, %"class.base::WeakPtrFactory.485" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.477 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.478 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory.485" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.495", %"class.base::flat_map.495", %"class.base::flat_map.495", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.495" = type { %"class.base::internal::flat_tree.496" }
%"class.base::internal::flat_tree.496" = type { %"class.std::__1::vector.497" }
%"class.std::__1::vector.497" = type { %"class.std::__1::__vector_base.498" }
%"class.std::__1::__vector_base.498" = type { %"struct.std::__1::pair.499"*, %"struct.std::__1::pair.499"*, %"class.std::__1::__compressed_pair.500" }
%"struct.std::__1::pair.499" = type opaque
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"struct.std::__1::pair.499"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.512", %"class.std::__1::vector.519", %"class.std::__1::vector.526" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.505", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.507" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { i32*, i32*, %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { i32* }
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.521" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.526" = type { %"class.std::__1::__vector_base.527" }
%"class.std::__1::__vector_base.527" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.528" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.533", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.572" }
%"class.cc::PropertyTree.533" = type { i32 (...)**, %"class.std::__1::vector.534", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.534" = type { %"class.std::__1::__vector_base.535" }
%"class.std::__1::__vector_base.535" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.544" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.73", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.68" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.61", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.60, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.60 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.536" }
%"class.base::internal::flat_tree.536" = type { %"class.std::__1::vector.537" }
%"class.std::__1::vector.537" = type { %"class.std::__1::__vector_base.538" }
%"class.std::__1::__vector_base.538" = type { i32*, i32*, %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { i32* }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.549" }
%"class.std::__1::__hash_table.549" = type <{ %"class.std::__1::unique_ptr.550", %"class.std::__1::__compressed_pair.560", %"class.std::__1::__compressed_pair.565", %"class.std::__1::__compressed_pair.567", [4 x i8] }>
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552", %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"struct.std::__1::__hash_node_base.553"** }
%"struct.std::__1::__hash_node_base.553" = type { %"struct.std::__1::__hash_node_base.553"* }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.std::__1::__bucket_list_deallocator.555" }
%"class.std::__1::__bucket_list_deallocator.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.std::__1::__hash_node_base.553" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::vector.572" = type { %"class.std::__1::__vector_base.573" }
%"class.std::__1::__vector_base.573" = type { %"class.std::__1::unique_ptr.574"*, %"class.std::__1::unique_ptr.574"*, %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.std::__1::unique_ptr.574"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.585" }
%"class.cc::PropertyTree.585" = type { i32 (...)**, %"class.std::__1::vector.586", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.588" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.593", i32, %"class.base::flat_map.601", %"class.base::flat_map.611", %"class.base::WeakPtr.621" }
%"class.cc::PropertyTree.593" = type { i32 (...)**, %"class.std::__1::vector.594", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.594" = type { %"class.std::__1::__vector_base.595" }
%"class.std::__1::__vector_base.595" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.596" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.601" = type { %"class.base::internal::flat_tree.602" }
%"class.base::internal::flat_tree.602" = type { %"class.std::__1::vector.603" }
%"class.std::__1::vector.603" = type { %"class.std::__1::__vector_base.604" }
%"class.std::__1::__vector_base.604" = type { %"struct.std::__1::pair.605"*, %"struct.std::__1::pair.605"*, %"class.std::__1::__compressed_pair.606" }
%"struct.std::__1::pair.605" = type opaque
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"struct.std::__1::pair.605"* }
%"class.base::flat_map.611" = type { %"class.base::internal::flat_tree.612" }
%"class.base::internal::flat_tree.612" = type { %"class.std::__1::vector.613" }
%"class.std::__1::vector.613" = type { %"class.std::__1::__vector_base.614" }
%"class.std::__1::__vector_base.614" = type { %"struct.std::__1::pair.615"*, %"struct.std::__1::pair.615"*, %"class.std::__1::__compressed_pair.616" }
%"struct.std::__1::pair.615" = type opaque
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::pair.615"* }
%"class.base::WeakPtr.621" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.622", %"class.std::__1::vector.629" }
%"class.std::__1::vector.622" = type { %"class.std::__1::__vector_base.623" }
%"class.std::__1::__vector_base.623" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.624" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.629" = type { %"class.std::__1::__vector_base.630" }
%"class.std::__1::__vector_base.630" = type { %"class.std::__1::vector.631"*, %"class.std::__1::vector.631"*, %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::vector.631" = type opaque
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.std::__1::vector.631"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.637 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.638" = type { %"class.base::internal::flat_tree.639" }
%"class.base::internal::flat_tree.639" = type { %"class.std::__1::vector.640" }
%"class.std::__1::vector.640" = type { %"class.std::__1::__vector_base.641" }
%"class.std::__1::__vector_base.641" = type { %"struct.std::__1::pair.642"*, %"struct.std::__1::pair.642"*, %"class.std::__1::__compressed_pair.643" }
%"struct.std::__1::pair.642" = type opaque
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"struct.std::__1::pair.642"* }
%"class.base::internal::flat_tree.648" = type { %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.656" }
%"class.std::__1::__hash_table.656" = type <{ %"class.std::__1::unique_ptr.657", %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.672", %"class.std::__1::__compressed_pair.675", [4 x i8] }>
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659", %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"struct.std::__1::__hash_node_base.660"** }
%"struct.std::__1::__hash_node_base.660" = type { %"struct.std::__1::__hash_node_base.660"* }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.std::__1::__bucket_list_deallocator.662" }
%"class.std::__1::__bucket_list_deallocator.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"struct.std::__1::__hash_node_base.660" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unordered_map.679" = type { %"class.std::__1::__hash_table.680" }
%"class.std::__1::__hash_table.680" = type <{ %"class.std::__1::unique_ptr.681", %"class.std::__1::__compressed_pair.691", %"class.std::__1::__compressed_pair.696", %"class.std::__1::__compressed_pair.699", [4 x i8] }>
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683", %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"struct.std::__1::__hash_node_base.684"** }
%"struct.std::__1::__hash_node_base.684" = type { %"struct.std::__1::__hash_node_base.684"* }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.std::__1::__bucket_list_deallocator.686" }
%"class.std::__1::__bucket_list_deallocator.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"struct.std::__1::__hash_node_base.684" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.705" = type { %"class.std::__1::__vector_base.706" }
%"class.std::__1::__vector_base.706" = type { %"struct.std::__1::pair.707"*, %"struct.std::__1::pair.707"*, %"class.std::__1::__compressed_pair.708" }
%"struct.std::__1::pair.707" = type opaque
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"struct.std::__1::pair.707"* }
%"class.std::__1::unordered_map.713" = type { %"class.std::__1::__hash_table.714" }
%"class.std::__1::__hash_table.714" = type <{ %"class.std::__1::unique_ptr.715", %"class.std::__1::__compressed_pair.725", %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.733", [4 x i8] }>
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717", %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"struct.std::__1::__hash_node_base.718"** }
%"struct.std::__1::__hash_node_base.718" = type { %"struct.std::__1::__hash_node_base.718"* }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.std::__1::__bucket_list_deallocator.720" }
%"class.std::__1::__bucket_list_deallocator.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"struct.std::__1::__hash_node_base.718" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::vector.737" = type { %"class.std::__1::__vector_base.738" }
%"class.std::__1::__vector_base.738" = type { %"class.base::OnceCallback.739"*, %"class.base::OnceCallback.739"*, %"class.std::__1::__compressed_pair.740" }
%"class.base::OnceCallback.739" = type opaque
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.base::OnceCallback.739"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.382" }
%"class.base::OnceCallback.382" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.78 }
%class.scoped_refptr.78 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.79", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.79" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.751", %"class.std::__1::vector.758" }
%"class.std::__1::vector.751" = type { %"class.std::__1::__vector_base.752" }
%"class.std::__1::__vector_base.752" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.753" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.std::__1::unique_ptr.760"*, %"class.std::__1::unique_ptr.760"*, %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.917", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.917" = type { %"class.absl::optional_internal::optional_data.918" }
%"class.absl::optional_internal::optional_data.918" = type { %"class.absl::optional_internal::optional_data_base.919" }
%"class.absl::optional_internal::optional_data_base.919" = type { %"class.absl::optional_internal::optional_data_dtor_base.920" }
%"class.absl::optional_internal::optional_data_dtor_base.920" = type { i8, %union.anon.921 }
%union.anon.921 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.std::__1::unique_ptr.760"* }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.std::__1::unique_ptr.774"*, %"class.std::__1::unique_ptr.774"*, %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::unique_ptr.774" = type opaque
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.std::__1::unique_ptr.774"* }
%"class.base::flat_map.780" = type { %"class.base::internal::flat_tree.781" }
%"class.base::internal::flat_tree.781" = type { %"class.std::__1::vector.782" }
%"class.std::__1::vector.782" = type { %"class.std::__1::__vector_base.783" }
%"class.std::__1::__vector_base.783" = type { %"struct.std::__1::pair.784"*, %"struct.std::__1::pair.784"*, %"class.std::__1::__compressed_pair.785" }
%"struct.std::__1::pair.784" = type opaque
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"struct.std::__1::pair.784"* }
%"class.base::WeakPtrFactory.790" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.130 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.ui::LayerAnimatorCollection" = type { %"class.ui::CompositorAnimationObserver", %"class.ui::Compositor"*, %"class.base::TimeTicks", %"class.std::__1::set" }
%"class.ui::CompositorAnimationObserver" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem" }
%class.scoped_refptr.140 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.ui::ScopedAnimationDurationScaleMode"* }
%"class.ui::ScopedAnimationDurationScaleMode" = type opaque
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.147" }
%"class.absl::optional.147" = type { %"class.absl::optional_internal::optional_data.148" }
%"class.absl::optional_internal::optional_data.148" = type { %"class.absl::optional_internal::optional_data_base.149" }
%"class.absl::optional_internal::optional_data_base.149" = type { %"class.absl::optional_internal::optional_data_dtor_base.150" }
%"class.absl::optional_internal::optional_data_dtor_base.150" = type { i8, %union.anon.151 }
%"class.ui::CompositorLockManager" = type { %class.scoped_refptr.130, %"class.base::TimeTicks", i8, %"class.std::__1::vector.152", %"class.base::WeakPtrFactory.167", %"class.base::WeakPtrFactory.167" }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"**, %"class.std::__1::__compressed_pair.162" }
%"class.ui::CompositorLock" = type { %"class.ui::CompositorLockClient"*, %"class.std::__1::unique_ptr.154", %"class.base::WeakPtr.161" }
%"class.ui::CompositorLockClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type { %"class.base::WeakPtr.157" }
%"class.base::WeakPtr.157" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.161" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.ui::CompositorLock"** }
%"class.base::WeakPtrFactory.167" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.ui::ScrollInputHandler"* }
%"class.ui::ScrollInputHandler" = type opaque
%"class.base::flat_map.174" = type { %"class.base::internal::flat_tree.175" }
%"class.base::internal::flat_tree.175" = type { %"class.std::__1::vector.176" }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"struct.std::__1::pair.178"*, %"struct.std::__1::pair.178"*, %"class.std::__1::__compressed_pair.179" }
%"struct.std::__1::pair.178" = type opaque
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::pair.178"* }
%"class.base::WeakPtrFactory.184" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.ui::Layer"** }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::unique_ptr.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::unique_ptr.194"* }
%"class.base::internal::flat_tree.200" = type { %"class.std::__1::vector.185" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.ui::Layer::SubpixelPositionOffsetCache"* }
%"class.ui::Layer::SubpixelPositionOffsetCache" = type opaque
%"class.cc::Region" = type { %class.SkRegion }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.std::__1::vector.61"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.96 }
%union.anon.96 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList.213" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.214", i64, i32, [4 x i8] }>
%"class.base::LinkedList.214" = type { %"class.base::LinkNode.215" }
%"class.base::LinkNode.215" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.217 = type { %"class.ui::LayerAnimator"* }
%"class.ui::LayerAnimator" = type { %"class.ui::LayerThreadedAnimationDelegate", %"class.base::RefCounted.218", %"class.cc::AnimationDelegate", %"class.base::circular_deque", %"class.ui::LayerAnimationDelegate"*, %class.scoped_refptr.220, %"class.std::__1::vector.221", i32, i8, %"class.base::TimeDelta", i32, %"class.base::TimeTicks", i8, i8, i8, [5 x i8], %"class.base::ObserverList.229", %"class.std::__1::vector.233" }
%"class.ui::LayerThreadedAnimationDelegate" = type { i32 (...)** }
%"class.base::RefCounted.218" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.219"*, i64 }
%"class.std::__1::unique_ptr.219" = type opaque
%class.scoped_refptr.220 = type { %"class.cc::Animation"* }
%"class.cc::Animation" = type opaque
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"class.ui::LayerAnimator::RunningAnimation"*, %"class.ui::LayerAnimator::RunningAnimation"*, %"class.std::__1::__compressed_pair.224" }
%"class.ui::LayerAnimator::RunningAnimation" = type { %"class.base::WeakPtr.223" }
%"class.base::WeakPtr.223" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.ui::LayerAnimator::RunningAnimation"* }
%"class.base::ObserverList.229" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.230", i64, i32, [4 x i8] }>
%"class.base::LinkedList.230" = type { %"class.base::LinkNode.231" }
%"class.base::LinkNode.231" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"class.std::__1::unique_ptr.235"*, %"class.std::__1::unique_ptr.235"*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::unique_ptr.235" = type opaque
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::unique_ptr.235"* }
%class.scoped_refptr.241 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.242 = type { %"class.cc::MirrorLayer"* }
%"class.cc::MirrorLayer" = type opaque
%class.scoped_refptr.243 = type { %"class.cc::NinePatchLayer"* }
%"class.cc::NinePatchLayer" = type opaque
%class.scoped_refptr.244 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%class.scoped_refptr.245 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%class.scoped_refptr.246 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.247", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.253", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.55", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.91" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.41", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %class.scoped_refptr.40*, %class.scoped_refptr.40*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.scoped_refptr.40* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.48" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.73", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.80" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"class.std::__1::unique_ptr.82"*, %"class.std::__1::unique_ptr.82"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::unique_ptr.82" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::unique_ptr.82"* }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.100", %"class.std::__1::vector.100", %"class.std::__1::vector.107" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { i8**, i8**, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { i8** }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.109" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.base::RepeatingCallback.247" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.248", %"class.viz::SurfaceId" }
%"class.absl::optional.248" = type { %"class.absl::optional_internal::optional_data.249" }
%"class.absl::optional_internal::optional_data.249" = type { %"class.absl::optional_internal::optional_data_base.250" }
%"class.absl::optional_internal::optional_data_base.250" = type { %"class.absl::optional_internal::optional_data_dtor_base.251" }
%"class.absl::optional_internal::optional_data_dtor_base.251" = type { i8, %union.anon.252 }
%union.anon.252 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.absl::optional.253" = type { %"class.absl::optional_internal::optional_data.254" }
%"class.absl::optional_internal::optional_data.254" = type { %"class.absl::optional_internal::optional_data_base.255" }
%"class.absl::optional_internal::optional_data_base.255" = type { %"class.absl::optional_internal::optional_data_dtor_base.256" }
%"class.absl::optional_internal::optional_data_dtor_base.256" = type { i8, %union.anon.257 }
%union.anon.257 = type { i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.261", i8, i32, i8, [7 x i8], %"class.absl::optional.266" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.259", i64 }
%"class.util::IdType.259" = type { %"class.base::StrongAlias.260" }
%"class.base::StrongAlias.260" = type { i64 }
%"class.absl::optional.261" = type { %"class.absl::optional_internal::optional_data.262" }
%"class.absl::optional_internal::optional_data.262" = type { %"class.absl::optional_internal::optional_data_base.263" }
%"class.absl::optional_internal::optional_data_base.263" = type { %"class.absl::optional_internal::optional_data_dtor_base.264" }
%"class.absl::optional_internal::optional_data_dtor_base.264" = type { i8, %union.anon.265 }
%union.anon.265 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.266" = type { %"class.absl::optional_internal::optional_data.267" }
%"class.absl::optional_internal::optional_data.267" = type { %"class.absl::optional_internal::optional_data_base.268" }
%"class.absl::optional_internal::optional_data_base.268" = type { %"class.absl::optional_internal::optional_data_dtor_base.269" }
%"class.absl::optional_internal::optional_data_dtor_base.269" = type { i8, [7 x i8], %union.anon.270 }
%union.anon.270 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.271" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.275" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.276", i64, i32, [4 x i8] }>
%"class.base::LinkedList.276" = type { %"class.base::LinkNode.277" }
%"class.base::LinkNode.277" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.279", %"class.std::__1::vector.300", %"class.ui::EventHandler"* }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.307" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque.281" }
%"class.base::circular_deque.281" = type { %"class.base::internal::VectorBuffer.282", i64, i64 }
%"class.base::internal::VectorBuffer.282" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.300" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.293" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.283", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.283" = type { %"class.base::internal::flat_tree.284" }
%"class.base::internal::flat_tree.284" = type { %"class.std::__1::vector.285" }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"struct.std::__1::pair.287"*, %"struct.std::__1::pair.287"*, %"class.std::__1::__compressed_pair.288" }
%"struct.std::__1::pair.287" = type opaque
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::pair.287"* }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.base::flat_map.296"* }
%"class.base::flat_map.296" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.312" }
%"class.std::__1::__tree.312" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.321" }
%"class.std::__1::map.321" = type { %"class.std::__1::__tree.322" }
%"class.std::__1::__tree.322" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.323", %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type { %"class.ui::EventTargeter", %"class.aura::Window"*, %"class.gfx::Insets", %"class.gfx::Insets" }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.349" = type <{ %"class.std::__1::vector.350", %"class.base::LinkedList.358", i64, i32, [4 x i8] }>
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.353" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.352" }
%"class.base::WeakPtr.352" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.358" = type { %"class.base::LinkNode.359" }
%"class.base::LinkNode.359" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.367" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::ObserverList.368" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.369", i64, i32, [4 x i8] }>
%"class.base::LinkedList.369" = type { %"class.base::LinkNode.370" }
%"class.base::LinkNode.370" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type { %"class.ui::EventProcessor", %"class.ui::GestureEventHelper", %"class.aura::client::CaptureDelegate", %"class.aura::WindowObserver", %"class.aura::EnvObserver", %"class.aura::WindowTreeHost"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.ui::FractionOfTimeWithoutUserInputRecorder", i8, i8, i32, %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.376", %"class.ui::LocatedEvent"*, %"class.base::ScopedMultiSourceObservation", %"class.std::__1::unique_ptr.343", i8, %"class.base::OnceCallback.382", %"class.std::__1::queue", i8, %"class.base::WeakPtrFactory.393", %"class.base::WeakPtrFactory.393" }
%"class.ui::EventProcessor" = type { %"class.ui::EventDispatcherDelegate", %"class.ui::EventSink", %"class.base::WeakPtrFactory.375" }
%"class.ui::EventSink" = type { i32 (...)** }
%"class.base::WeakPtrFactory.375" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::GestureEventHelper" = type { i32 (...)** }
%"class.aura::client::CaptureDelegate" = type { i32 (...)** }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.aura::EnvObserver" = type { i32 (...)** }
%"class.ui::FractionOfTimeWithoutUserInputRecorder" = type { i32 (...)**, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.ui::LocatedEvent"* }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.base::ScopedMultiSourceObservation" = type { %"class.aura::WindowObserver"*, %"class.std::__1::vector.330" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.389" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.383"**, %"class.std::__1::unique_ptr.383"**, %"class.std::__1::unique_ptr.383"**, %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::unique_ptr.383" = type opaque
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.std::__1::unique_ptr.383"** }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::WeakPtrFactory.393" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.ui::Compositor"* }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.403, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.403 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted.404", [4 x i8] }>
%"class.base::RefCounted.404" = type { %"class.base::subtle::RefCountedBase" }
%class.SkBitmap = type { %class.sk_sp.405, %class.SkPixmap, %class.sk_sp.407 }
%class.sk_sp.405 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.406, i32, i32 }
%class.sk_sp.406 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.407 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type { %class.scoped_refptr.411 }
%class.scoped_refptr.411 = type { %"class.ui::ViewProp::Data"* }
%"class.ui::ViewProp::Data" = type opaque
%"class.ui::InputMethod" = type { i32 (...)** }
%"class.base::WeakPtrFactory.415" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional.791", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional.791" = type { %"class.absl::optional_internal::optional_data.792" }
%"class.absl::optional_internal::optional_data.792" = type { %"class.absl::optional_internal::optional_data_base.793" }
%"class.absl::optional_internal::optional_data_base.793" = type { %"class.absl::optional_internal::optional_data_dtor_base.794" }
%"class.absl::optional_internal::optional_data_dtor_base.794" = type { i8, %union.anon.795 }
%"class.aura::Env" = type { %"class.ui::EventTarget", %"class.base::SupportsUserData.base", [7 x i8], %"class.base::ObserverList.805", %"class.base::ObserverList.809", %"class.base::ObserverList.813", %"class.std::__1::set.817", %"class.std::__1::unique_ptr.827", i32, %"class.gfx::Point", i8, %"class.std::__1::unique_ptr.833", %"class.std::__1::unique_ptr.839", %"class.std::__1::unique_ptr.845", %"class.std::__1::unique_ptr.851", %"class.ui::ContextFactory"*, i8, %"class.std::__1::unique_ptr.857", %"class.std::__1::vector.863" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.796", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.796" = type { %"class.std::__1::__tree.797" }
%"class.std::__1::__tree.797" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.798", %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ObserverList.805" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.806", i64, i32, [4 x i8] }>
%"class.base::LinkedList.806" = type { %"class.base::LinkNode.807" }
%"class.base::LinkNode.807" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.809" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.810", i64, i32, [4 x i8] }>
%"class.base::LinkedList.810" = type { %"class.base::LinkNode.811" }
%"class.base::LinkNode.811" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.813" = type <{ %"class.std::__1::vector.350", %"class.base::LinkedList.814", i64, i32, [4 x i8] }>
%"class.base::LinkedList.814" = type { %"class.base::LinkNode.815" }
%"class.base::LinkNode.815" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set.817" = type { %"class.std::__1::__tree.818" }
%"class.std::__1::__tree.818" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.819", %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.aura::EnvInputStateController"* }
%"class.aura::EnvInputStateController" = type opaque
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.ui::GestureRecognizer"* }
%"class.ui::GestureRecognizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.ui::CursorFactory"* }
%"class.ui::CursorFactory" = type opaque
%"class.std::__1::unique_ptr.845" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.aura::InputStateLookup"* }
%"class.aura::InputStateLookup" = type opaque
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type opaque
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.aura::WindowOcclusionTracker"* }
%"class.aura::WindowOcclusionTracker" = type opaque
%"class.std::__1::vector.863" = type { %"class.std::__1::__vector_base.864" }
%"class.std::__1::__vector_base.864" = type { %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"**, %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.aura::WindowTreeHost"** }
%"class.aura::WindowTreeHostObserver" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::WeakPtr.870" = type { %"class.base::internal::WeakPtrBase" }
%"class.aura::client::CursorClient" = type { i32 (...)** }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::DomKey" = type { i32 }
%"class.aura::ScopedKeyboardHook" = type { i32 (...)**, %"class.base::WeakPtr.870" }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.base::internal::flat_tree.888" }
%"class.base::internal::flat_tree.888" = type { %"class.std::__1::vector.889" }
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { i32*, i32*, %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { i32* }
%"class.aura::ScopedSimpleKeyboardHook" = type { %"class.aura::ScopedKeyboardHook", %"class.absl::optional.883" }
%"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.370", %"class.base::ObserverList.368"* }
%"class.aura::ScopedEnableUnadjustedMouseEvents" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.941", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.941" = type { %"class.std::__1::__vector_base.942" }
%"class.std::__1::__vector_base.942" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.943", i64, i64 }
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.954" }
%"class.std::__1::list.954" = type { %"class.std::__1::__list_imp.955" }
%"class.std::__1::__list_imp.955" = type { %"struct.std::__1::__list_node_base.956", %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::__list_node_base.956" = type { %"struct.std::__1::__list_node_base.956"*, %"struct.std::__1::__list_node_base.956"* }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::internal::flat_tree.914" = type opaque
%"struct.gfx::PresentationFeedback" = type opaque

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN2ui18CompositorObserver22OnCompositingDidCommitEPNS_10CompositorE = comdat any

$_ZN2ui18CompositorObserver20OnCompositingStartedEPNS_10CompositorEN4base9TimeTicksE = comdat any

$_ZN2ui18CompositorObserver36OnCompositingCompleteSwapWithNewSizeEPNS_10CompositorERKN3gfx4SizeE = comdat any

$_ZN2ui18CompositorObserver25OnCompositingShuttingDownEPNS_10CompositorE = comdat any

$_ZN2ui18CompositorObserver27OnDidPresentCompositorFrameEjRKN3gfx20PresentationFeedbackE = comdat any

$_ZN2ui18CompositorObserver23OnFirstAnimationStartedEPNS_10CompositorE = comdat any

$_ZN2ui18CompositorObserver20OnLastAnimationEndedEPNS_10CompositorE = comdat any

$_ZN2ui8internal19InputMethodDelegateD2Ev = comdat any

$_ZN2ui8internal19InputMethodDelegateD0Ev = comdat any

$_ZTVN2ui8internal19InputMethodDelegateE = comdat any

@_ZTVN4aura14WindowTreeHostE = hidden unnamed_addr constant { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] } { [38 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::WindowTreeHost"*)* @_ZN4aura14WindowTreeHostD2Ev to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*)* @_ZN4aura14WindowTreeHostD0Ev to i8*), i8* bitcast (i24 (%"class.aura::WindowTreeHost"*, %"class.ui::KeyEvent"*)* @_ZN4aura14WindowTreeHost23DispatchKeyEventPostIMEEPN2ui8KeyEventE to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)* @_ZNK4aura14WindowTreeHost16GetRootTransformEv to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowTreeHost16SetRootTransformERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)* @_ZNK4aura14WindowTreeHost23GetInverseRootTransformEv to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)* @_ZNK4aura14WindowTreeHost40GetRootTransformForLocalEventCoordinatesEv to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)* @_ZNK4aura14WindowTreeHost47GetInverseRootTransformForLocalEventCoordinatesEv to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)* @_ZNK4aura14WindowTreeHost18ConvertDIPToPixelsEPN3gfx5PointE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)* @_ZNK4aura14WindowTreeHost18ConvertPixelsToDIPEPN3gfx5PointE to i8*), i8* bitcast (%"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)* @_ZN4aura14WindowTreeHost12GetEventSinkEv to i8*), i8* bitcast (i64 (%"class.aura::WindowTreeHost"*)* @_ZN4aura14WindowTreeHost12GetDisplayIdEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.aura::WindowTreeHost"*)* @_ZN4aura14WindowTreeHost23ShouldSendKeyEventToImeEv to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, i32)* @_ZN4aura14WindowTreeHost29SetNativeWindowOcclusionStateENS_6Window14OcclusionStateE to i8*), i8* bitcast (%"class.aura::ScopedEnableUnadjustedMouseEvents"* (%"class.aura::WindowTreeHost"*)* @_ZN4aura14WindowTreeHost25RequestUnadjustedMovementEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.display::Display"*, i32)* @_ZN4aura14WindowTreeHost23OnDisplayMetricsChangedERKN7display7DisplayEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)* @_ZNK4aura14WindowTreeHost38GetTransformedRootWindowBoundsInPixelsERKN3gfx4SizeE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.ui::Compositor"*)* @_ZN4aura14WindowTreeHost18OnCompositingEndedEPN2ui10CompositorE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.ui::Compositor"*)* @_ZN4aura14WindowTreeHost26OnCompositingChildResizingEPN2ui10CompositorE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)* @_ZN4aura14WindowTreeHost29OnFrameSinksToThrottleUpdatedERKN4base8internal9flat_treeIN3viz11FrameSinkIdENS1_8identityENSt3__14lessIvEENS7_6vectorIS5_NS7_9allocatorIS5_EEEEEE to i8*)], [6 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowTreeHost"*)* @_ZThn8_N4aura14WindowTreeHostD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*)* @_ZThn8_N4aura14WindowTreeHostD0Ev to i8*), i8* bitcast (%"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)* @_ZThn8_N4aura14WindowTreeHost12GetEventSinkEv to i8*), i8* bitcast (i24 (%"class.ui::EventSource"*, %"class.ui::Event"*)* @_ZN2ui11EventSource18DeliverEventToSinkEPNS_5EventE to i8*)], [11 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowTreeHost"*)* @_ZThn40_N4aura14WindowTreeHostD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*)* @_ZThn40_N4aura14WindowTreeHostD0Ev to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*)* @_ZN7display15DisplayObserver27OnWillProcessDisplayChangesEv to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*)* @_ZN7display15DisplayObserver26OnDidProcessDisplayChangesEv to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, %"class.display::Display"*)* @_ZN7display15DisplayObserver14OnDisplayAddedERKNS_7DisplayE to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, %"class.display::Display"*)* @_ZN7display15DisplayObserver16OnDisplayRemovedERKNS_7DisplayE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.display::Display"*, i32)* @_ZThn40_N4aura14WindowTreeHost23OnDisplayMetricsChangedERKN7display7DisplayEj to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, %"class.std::__1::basic_string"*)* @_ZN7display15DisplayObserver25OnCurrentWorkspaceChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, i32)* @_ZN7display15DisplayObserver27OnDisplayTabletStateChangedENS_11TabletStateE to i8*)], [14 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowTreeHost"*)* @_ZThn64_N4aura14WindowTreeHostD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*)* @_ZThn64_N4aura14WindowTreeHostD0Ev to i8*), i8* bitcast (void (%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*)* @_ZN2ui18CompositorObserver22OnCompositingDidCommitEPNS_10CompositorE to i8*), i8* bitcast (void (%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*, i64)* @_ZN2ui18CompositorObserver20OnCompositingStartedEPNS_10CompositorEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.ui::Compositor"*)* @_ZThn64_N4aura14WindowTreeHost18OnCompositingEndedEPN2ui10CompositorE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.ui::Compositor"*)* @_ZThn64_N4aura14WindowTreeHost26OnCompositingChildResizingEPN2ui10CompositorE to i8*), i8* bitcast (void (%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*, %"class.gfx::Size"*)* @_ZN2ui18CompositorObserver36OnCompositingCompleteSwapWithNewSizeEPNS_10CompositorERKN3gfx4SizeE to i8*), i8* bitcast (void (%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*)* @_ZN2ui18CompositorObserver25OnCompositingShuttingDownEPNS_10CompositorE to i8*), i8* bitcast (void (%"class.ui::CompositorObserver"*, i32, %"struct.gfx::PresentationFeedback"*)* @_ZN2ui18CompositorObserver27OnDidPresentCompositorFrameEjRKN3gfx20PresentationFeedbackE to i8*), i8* bitcast (void (%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*)* @_ZN2ui18CompositorObserver23OnFirstAnimationStartedEPNS_10CompositorE to i8*), i8* bitcast (void (%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*)* @_ZN2ui18CompositorObserver20OnLastAnimationEndedEPNS_10CompositorE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)* @_ZThn64_N4aura14WindowTreeHost29OnFrameSinksToThrottleUpdatedERKN4base8internal9flat_treeIN3viz11FrameSinkIdENS1_8identityENSt3__14lessIvEENS7_6vectorIS5_NS7_9allocatorIS5_EEEEEE to i8*)] }, align 8
@_ZN4aura12_GLOBAL__N_135kWindowTreeHostForAcceleratedWidgetE = internal constant [45 x i8] c"__AURA_WINDOW_TREE_HOST_ACCELERATED_WIDGET__\00", align 16
@__const._ZNK4aura14WindowTreeHost47GetInverseRootTransformForLocalEventCoordinatesEv.transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@_ZN8features19kSystemKeyboardLockE = external global %"struct.base::Feature", align 8
@.str = private unnamed_addr constant [11 x i8] c"RootWindow\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [36 x i8] c"WindowTreeHost::OnHostMovedInPixels\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@__const._ZN4aura14WindowTreeHost20OnHostDisplayChangedEv.display = private unnamed_addr constant { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.795 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.151 } } } } }, i32, i32, i8, [3 x i8], i32 } { i64 -6148914691236517206, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.795 } } } } { { { { i8, [3 x i8], %union.anon.795 } } } { { { i8, [3 x i8], %union.anon.795 } } { { i8, [3 x i8], %union.anon.795 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.795 { i32 -1431655766 } } } } }, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.151 } } } } } { [6 x %"class.gfx::ColorSpace"] [%"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }], [6 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.151 } } } } { { { { i8, [7 x i8], %union.anon.151 } } } { { { i8, [7 x i8], %union.anon.151 } } { { i8, [7 x i8], %union.anon.151 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.151 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@_ZN2cc5Layer18kIdentityTransformE = external constant { { [4 x [4 x float]], i8 } }, align 4
@_ZTVN2ui8internal19InputMethodDelegateE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::internal::InputMethodDelegate"*)* @_ZN2ui8internal19InputMethodDelegateD2Ev to i8*), i8* bitcast (void (%"class.ui::internal::InputMethodDelegate"*)* @_ZN2ui8internal19InputMethodDelegateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN4aura14WindowTreeHostD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowTreeHost"*), void (%"class.aura::WindowTreeHost"*)* @_ZN4aura14WindowTreeHostD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHostD2Ev(%"class.aura::WindowTreeHost"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 1
  %3 = bitcast %"class.aura::WindowTreeHost"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }, { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }* @_ZTVN4aura14WindowTreeHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }, { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }* @_ZTVN4aura14WindowTreeHostE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }, { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }* @_ZTVN4aura14WindowTreeHostE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }, { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }* @_ZTVN4aura14WindowTreeHostE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %8 = icmp eq %"class.display::Screen"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %11 = bitcast %"class.display::Screen"* %10 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %12 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %12, i64 17
  %14 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %13, align 8
  tail call void %14(%"class.display::Screen"* %10, %"class.display::DisplayObserver"* %4) #16
  br label %15

15:                                               ; preds = %1, %9
  %16 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 15
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 14
  %21 = load %"class.ui::InputMethod"*, %"class.ui::InputMethod"** %20, align 8
  %22 = icmp eq %"class.ui::InputMethod"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.ui::InputMethod"* %21 to void (%"class.ui::InputMethod"*)***
  %25 = load void (%"class.ui::InputMethod"*)**, void (%"class.ui::InputMethod"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.ui::InputMethod"*)*, void (%"class.ui::InputMethod"*)** %25, i64 1
  %27 = load void (%"class.ui::InputMethod"*)*, void (%"class.ui::InputMethod"*)** %26, align 8
  tail call void %27(%"class.ui::InputMethod"* nonnull %21) #16
  br label %28

28:                                               ; preds = %23, %19
  store %"class.ui::InputMethod"* null, %"class.ui::InputMethod"** %20, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 18, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %30) #16
  %31 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %32 = load %"class.ui::ViewProp"*, %"class.ui::ViewProp"** %31, align 8
  store %"class.ui::ViewProp"* null, %"class.ui::ViewProp"** %31, align 8
  %33 = icmp eq %"class.ui::ViewProp"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  tail call void @_ZN2ui8ViewPropD1Ev(%"class.ui::ViewProp"* nonnull %32) #16
  %35 = bitcast %"class.ui::ViewProp"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 11
  tail call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* %37) #16
  %38 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %39 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %38, align 8
  store %"class.ui::Compositor"* null, %"class.ui::Compositor"** %38, align 8
  %40 = icmp eq %"class.ui::Compositor"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.ui::Compositor"* %39 to void (%"class.ui::Compositor"*)***
  %43 = load void (%"class.ui::Compositor"*)**, void (%"class.ui::Compositor"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.ui::Compositor"*)*, void (%"class.ui::Compositor"*)** %43, i64 29
  %45 = load void (%"class.ui::Compositor"*)*, void (%"class.ui::Compositor"*)** %44, align 8
  tail call void %45(%"class.ui::Compositor"* nonnull %39) #16
  br label %46

46:                                               ; preds = %36, %41
  %47 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %48 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %47, align 8
  store %"class.aura::WindowEventDispatcher"* null, %"class.aura::WindowEventDispatcher"** %47, align 8
  %49 = icmp eq %"class.aura::WindowEventDispatcher"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.aura::WindowEventDispatcher"* %48 to void (%"class.aura::WindowEventDispatcher"*)***
  %52 = load void (%"class.aura::WindowEventDispatcher"*)**, void (%"class.aura::WindowEventDispatcher"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcher"*)** %52, i64 1
  %54 = load void (%"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcher"*)** %53, align 8
  tail call void %54(%"class.aura::WindowEventDispatcher"* nonnull %48) #16
  br label %55

55:                                               ; preds = %46, %50
  %56 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 1
  %57 = bitcast %"class.base::internal::LinkNodeBase"** %56 to %"class.base::LinkNode.370"**
  %58 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0
  %59 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %57, align 8
  %60 = icmp eq %"class.base::LinkNode.370"* %59, %58
  br i1 %60, label %73, label %61

61:                                               ; preds = %55, %70
  %62 = phi %"class.base::LinkNode.370"* [ %71, %70 ], [ %59, %55 ]
  %63 = getelementptr inbounds %"class.base::LinkNode.370", %"class.base::LinkNode.370"* %62, i64 1
  %64 = bitcast %"class.base::LinkNode.370"* %63 to %"class.base::ObserverList.368"**
  %65 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %64, align 8
  %66 = icmp eq %"class.base::ObserverList.368"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %64, align 8
  %68 = getelementptr inbounds %"class.base::LinkNode.370", %"class.base::LinkNode.370"* %62, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %68) #16
  %69 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %57, align 8
  br label %70

70:                                               ; preds = %67, %61
  %71 = phi %"class.base::LinkNode.370"* [ %62, %61 ], [ %69, %67 ]
  %72 = icmp eq %"class.base::LinkNode.370"* %71, %58
  br i1 %72, label %73, label %61

73:                                               ; preds = %70, %55
  %74 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %75 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %74, align 8
  %76 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %79 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %80 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %75 to i8*
  tail call void @_ZdlPv(i8* %81) #17
  br label %82

82:                                               ; preds = %73, %77
  tail call void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"* %4) #16
  tail call void @_ZN2ui11EventSourceD2Ev(%"class.ui::EventSource"* %2) #16
  ret void
}

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui11EventSourceD2Ev(%"class.ui::EventSource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N4aura14WindowTreeHostD1Ev(%"class.aura::WindowTreeHost"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 -1, i32 18, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.aura::WindowTreeHost"*
  tail call void @_ZN4aura14WindowTreeHostD2Ev(%"class.aura::WindowTreeHost"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N4aura14WindowTreeHostD1Ev(%"class.aura::WindowTreeHost"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 -1, i32 13
  %3 = bitcast %"class.std::__1::unique_ptr.408"* %2 to %"class.aura::WindowTreeHost"*
  tail call void @_ZN4aura14WindowTreeHostD2Ev(%"class.aura::WindowTreeHost"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N4aura14WindowTreeHostD1Ev(%"class.aura::WindowTreeHost"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 -1, i32 11, i32 4, i32 1, i32 2, i32 1
  %3 = bitcast %struct.SkISize* %2 to %"class.aura::WindowTreeHost"*
  tail call void @_ZN4aura14WindowTreeHostD2Ev(%"class.aura::WindowTreeHost"* %3) #16
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHostD0Ev(%"class.aura::WindowTreeHost"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn8_N4aura14WindowTreeHostD0Ev(%"class.aura::WindowTreeHost"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn40_N4aura14WindowTreeHostD0Ev(%"class.aura::WindowTreeHost"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn64_N4aura14WindowTreeHostD0Ev(%"class.aura::WindowTreeHost"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::WindowTreeHost"* @_ZN4aura14WindowTreeHost23GetForAcceleratedWidgetEj(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN2ui8ViewProp8GetValueEjPKc(i32 %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @_ZN4aura12_GLOBAL__N_135kWindowTreeHostForAcceleratedWidgetE, i64 0, i64 0)) #16
  %3 = bitcast i8* %2 to %"class.aura::WindowTreeHost"*
  ret %"class.aura::WindowTreeHost"* %3
}

declare i8* @_ZN2ui8ViewProp8GetValueEjPKc(i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost8InitHostEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %"class.display::Display", align 8
  %6 = alloca %"class.display::Display", align 8
  %7 = bitcast %"class.display::Display"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %7) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.795 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.151 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN4aura14WindowTreeHost20OnHostDisplayChangedEv.display to i8*), i64 568, i1 false)
  %8 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %9 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = bitcast %"class.display::Screen"* %8 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %12 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %12, i64 8
  %14 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %13, align 8
  call void %14(%"class.display::Display"* nonnull sret %6, %"class.display::Screen"* %8, %"class.aura::Window"* %10) #16
  %15 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %6, i64 0, i32 4
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 10
  %19 = bitcast float* %18 to i32*
  store i32 %17, i32* %19, align 8
  %20 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %21 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #16
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %23 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  %24 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %25 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %24, align 8
  %26 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %25, i64 15
  %27 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %26, align 8
  %28 = call { i64, i64 } %27(%"class.aura::WindowTreeHost"* %0) #16
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %30 = extractvalue { i64, i64 } %28, 0
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %32 = extractvalue { i64, i64 } %28, 1
  store i64 %32, i64* %31, align 8
  %33 = bitcast i64* %31 to %"class.gfx::Size"*
  %34 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)***
  %35 = load { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*** %34, align 8
  %36 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)** %35, i64 32
  %37 = load { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)** %36, align 8
  %38 = call { i64, i64 } %37(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Size"* dereferenceable(8) %33) #16
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %40 = extractvalue { i64, i64 } %38, 0
  store i64 %40, i64* %39, align 8
  %41 = extractvalue { i64, i64 } %38, 1
  store i64 %41, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  %42 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %42, %"class.gfx::Rect"* nonnull dereferenceable(16) %20) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #16
  %43 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %44 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %43, align 8
  %45 = load float, float* %18, align 8
  %46 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #16
  %47 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %24, align 8
  %48 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %47, i64 15
  %49 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %48, align 8
  %50 = call { i64, i64 } %49(%"class.aura::WindowTreeHost"* %0) #16
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %52 = extractvalue { i64, i64 } %50, 0
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %54 = extractvalue { i64, i64 } %50, 1
  store i64 %54, i64* %53, align 8
  %55 = bitcast i64* %53 to %"class.gfx::Size"*
  %56 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %57 = call dereferenceable(24) %"class.viz::LocalSurfaceId"* @_ZN4aura6Window17GetLocalSurfaceIdEv(%"class.aura::Window"* %56) #16
  call void @_ZN2ui10Compositor15SetScaleAndSizeEfRKN3gfx4SizeERKN3viz14LocalSurfaceIdE(%"class.ui::Compositor"* %44, float %45, %"class.gfx::Size"* dereferenceable(8) %55, %"class.viz::LocalSurfaceId"* dereferenceable(24) %57) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #16
  %58 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %43, align 8
  %59 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %60 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %59, i64 0, i32 1, i32 2
  %61 = load %"class.ui::Layer"*, %"class.ui::Layer"** %60, align 8
  call void @_ZN2ui10Compositor12SetRootLayerEPNS_5LayerE(%"class.ui::Compositor"* %58, %"class.ui::Layer"* %61) #16
  %62 = bitcast %"class.display::Display"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %62) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.795 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.151 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN4aura14WindowTreeHost20OnHostDisplayChangedEv.display to i8*), i64 568, i1 false) #16
  %63 = call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %64 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %65 = bitcast %"class.display::Screen"* %63 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %66 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %66, i64 8
  %68 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %67, align 8
  call void %68(%"class.display::Display"* nonnull sret %5, %"class.display::Screen"* %63, %"class.aura::Window"* %64) #16
  %69 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %43, align 8
  %70 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %5, i64 0, i32 10
  call void @_ZN2ui10Compositor21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE(%"class.ui::Compositor"* %69, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %70) #16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %62) #16
  %71 = call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #16
  call void @_ZN4aura3Env21NotifyHostInitializedEPNS_14WindowTreeHostE(%"class.aura::Env"* %71, %"class.aura::WindowTreeHost"* %0) #16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %7) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost28UpdateRootWindowSizeInPixelsEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %7 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %9 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %8, align 8
  %10 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %9, i64 15
  %11 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %10, align 8
  %12 = tail call { i64, i64 } %11(%"class.aura::WindowTreeHost"* %0) #16
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %14 = extractvalue { i64, i64 } %12, 0
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %16 = extractvalue { i64, i64 } %12, 1
  store i64 %16, i64* %15, align 8
  %17 = bitcast i64* %15 to %"class.gfx::Size"*
  %18 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)***
  %19 = load { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*** %18, align 8
  %20 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)** %19, i64 32
  %21 = load { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)** %20, align 8
  %22 = call { i64, i64 } %21(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Size"* dereferenceable(8) %17) #16
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %24 = extractvalue { i64, i64 } %22, 0
  store i64 %24, i64* %23, align 8
  %25 = extractvalue { i64, i64 } %22, 1
  store i64 %25, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  %26 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %26, align 8
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %27, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost14InitCompositorEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca %"class.display::Display", align 8
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 10
  %7 = load float, float* %6, align 8
  %8 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %10 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %9, align 8
  %11 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %10, i64 15
  %12 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %11, align 8
  %13 = tail call { i64, i64 } %12(%"class.aura::WindowTreeHost"* %0) #16
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %15 = extractvalue { i64, i64 } %13, 0
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %17 = extractvalue { i64, i64 } %13, 1
  store i64 %17, i64* %16, align 8
  %18 = bitcast i64* %16 to %"class.gfx::Size"*
  %19 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = tail call dereferenceable(24) %"class.viz::LocalSurfaceId"* @_ZN4aura6Window17GetLocalSurfaceIdEv(%"class.aura::Window"* %20) #16
  call void @_ZN2ui10Compositor15SetScaleAndSizeEfRKN3gfx4SizeERKN3viz14LocalSurfaceIdE(%"class.ui::Compositor"* %5, float %7, %"class.gfx::Size"* dereferenceable(8) %18, %"class.viz::LocalSurfaceId"* dereferenceable(24) %21) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  %22 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %4, align 8
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %24 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %23, i64 0, i32 1, i32 2
  %25 = load %"class.ui::Layer"*, %"class.ui::Layer"** %24, align 8
  call void @_ZN2ui10Compositor12SetRootLayerEPNS_5LayerE(%"class.ui::Compositor"* %22, %"class.ui::Layer"* %25) #16
  %26 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %26) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.795 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.151 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN4aura14WindowTreeHost20OnHostDisplayChangedEv.display to i8*), i64 568, i1 false)
  %27 = call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %28 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %29 = bitcast %"class.display::Screen"* %27 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %30 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %30, i64 8
  %32 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %31, align 8
  call void %32(%"class.display::Display"* nonnull sret %3, %"class.display::Screen"* %27, %"class.aura::Window"* %28) #16
  %33 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %4, align 8
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 10
  call void @_ZN2ui10Compositor21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE(%"class.ui::Compositor"* %33, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %34) #16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %26) #16
  ret void
}

declare %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4aura3Env21NotifyHostInitializedEPNS_14WindowTreeHostE(%"class.aura::Env"*, %"class.aura::WindowTreeHost"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost11AddObserverEPNS_22WindowTreeHostObserverE(%"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHostObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7
  %4 = icmp eq %"class.aura::WindowTreeHostObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.aura::WindowTreeHostObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.aura::WindowTreeHostObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.368"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.368"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #18
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #18
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #17
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #16
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #17
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost14RemoveObserverEPNS_22WindowTreeHostObserverE(%"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHostObserver"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.aura::WindowTreeHostObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.370"**
  %32 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %31, align 8
  %33 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.370"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #16
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4aura14WindowTreeHost11HasObserverEPKNS_22WindowTreeHostObserverE(%"class.aura::WindowTreeHost"* nocapture readonly, %"class.aura::WindowTreeHostObserver"* readnone) local_unnamed_addr #6 align 2 {
  %3 = icmp eq %"class.aura::WindowTreeHostObserver"* %1, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %6, %8
  %10 = bitcast %"class.aura::WindowTreeHostObserver"* %1 to i8*
  br i1 %9, label %19, label %11

11:                                               ; preds = %4, %16
  %12 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %17, %16 ], [ %6, %4 ]
  %13 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, %10
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %12, i64 1
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %17, %8
  br i1 %18, label %19, label %11

19:                                               ; preds = %16, %11, %4
  %20 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %6, %4 ], [ %8, %16 ], [ %12, %11 ]
  %21 = icmp ne %"class.base::internal::UncheckedObserverAdapter"* %20, %8
  br label %22

22:                                               ; preds = %2, %19
  %23 = phi i1 [ %21, %19 ], [ false, %2 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost10GetWeakPtrEv(%"class.base::WeakPtr.870"* noalias sret, %"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16, !noalias !3
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %1, i64 0, i32 18, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #16, !noalias !3
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %1, i64 0, i32 18, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !3
  %8 = getelementptr inbounds %"class.base::WeakPtr.870", %"class.base::WeakPtr.870"* %0, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %8, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %7) #16
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16, !noalias !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura14WindowTreeHost16GetRootTransformEv(%"class.gfx::Transform"* noalias sret, %"class.aura::WindowTreeHost"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK4aura14WindowTreeHost47GetInverseRootTransformForLocalEventCoordinatesEv.transform to i8*), i64 68, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %1, i64 0, i32 10
  %6 = load float, float* %5, align 8
  tail call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* %0, float %6, float %6) #16
  %7 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %1, i64 0, i32 4
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  %9 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %8, i64 0, i32 1, i32 2
  %10 = load %"class.ui::Layer"*, %"class.ui::Layer"** %9, align 8
  %11 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %10, i64 0, i32 42
  %12 = load %"class.cc::Layer"*, %"class.cc::Layer"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %12, i64 0, i32 6, i32 0, i32 0, i32 0
  %14 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %13, align 8
  %15 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %14, null
  %16 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %14, i64 0, i32 6
  %17 = select i1 %15, %"class.gfx::Transform"* bitcast ({ { [4 x [4 x float]], i8 } }* @_ZN2cc5Layer18kIdentityTransformE to %"class.gfx::Transform"*), %"class.gfx::Transform"* %16
  tail call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* %0, %"class.gfx::Transform"* dereferenceable(68) %17) #16
  ret void
}

declare void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost16SetRootTransformERKN3gfx9TransformE(%"class.aura::WindowTreeHost"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  tail call void @_ZN4aura6Window12SetTransformERKN3gfx9TransformE(%"class.aura::Window"* %6, %"class.gfx::Transform"* dereferenceable(68) %1) #16
  %7 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %8 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %10 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %12 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %11, align 8
  %13 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %12, i64 15
  %14 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %13, align 8
  %15 = tail call { i64, i64 } %14(%"class.aura::WindowTreeHost"* %0) #16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %17 = extractvalue { i64, i64 } %15, 0
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %19 = extractvalue { i64, i64 } %15, 1
  store i64 %19, i64* %18, align 8
  %20 = bitcast i64* %18 to %"class.gfx::Size"*
  %21 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)***
  %22 = load { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*** %21, align 8
  %23 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)** %22, i64 32
  %24 = load { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)** %23, align 8
  %25 = call { i64, i64 } %24(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Size"* dereferenceable(8) %20) #16
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %27 = extractvalue { i64, i64 } %25, 0
  store i64 %27, i64* %26, align 8
  %28 = extractvalue { i64, i64 } %25, 1
  store i64 %28, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  %29 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %29, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret void
}

declare void @_ZN4aura6Window12SetTransformERKN3gfx9TransformE(%"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura14WindowTreeHost23GetInverseRootTransformEv(%"class.gfx::Transform"* noalias nocapture sret, %"class.aura::WindowTreeHost"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %5) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK4aura14WindowTreeHost47GetInverseRootTransformForLocalEventCoordinatesEv.transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %7) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK4aura14WindowTreeHost47GetInverseRootTransformForLocalEventCoordinatesEv.transform to i8*), i64 68, i1 false)
  %8 = bitcast %"class.aura::WindowTreeHost"* %1 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %9 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %9, i64 3
  %11 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %10, align 8
  call void %11(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %1) #16
  %12 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* nonnull %3) #16
  %13 = bitcast %"class.gfx::Transform"* %0 to i8*
  %14 = select i1 %12, i8* %5, i8* %7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* nonnull align 4 %14, i64 68, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %5) #16
  ret void
}

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost23SetDisplayTransformHintEN3gfx16OverlayTransformE(%"class.aura::WindowTreeHost"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %4, align 8
  %6 = getelementptr inbounds %"class.ui::Compositor", %"class.ui::Compositor"* %5, i64 0, i32 22, i32 0, i32 0, i32 0
  %7 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %7, i64 0, i32 50
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %37, label %11

11:                                               ; preds = %2
  tail call void @_ZN2ui10Compositor23SetDisplayTransformHintEN3gfx16OverlayTransformE(%"class.ui::Compositor"* %5, i32 %1) #16
  %12 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %13 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %12, align 8
  %14 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %13, i64 15
  %15 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %14, align 8
  %16 = tail call { i64, i64 } %15(%"class.aura::WindowTreeHost"* %0) #16
  %17 = extractvalue { i64, i64 } %16, 1
  %18 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %22 = bitcast %"class.gfx::Size"* %21 to i64*
  store i64 %17, i64* %22, align 4
  %23 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %4, align 8
  %24 = getelementptr inbounds %"class.ui::Compositor", %"class.ui::Compositor"* %23, i64 0, i32 22, i32 0, i32 0, i32 0
  %25 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %24, align 8
  %26 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %25, i64 0, i32 50
  %27 = load i32, i32* %26, align 4
  switch i32 %27, label %29 [
    i32 4, label %28
    i32 6, label %28
  ]

28:                                               ; preds = %11, %11
  call void @_ZN3gfx4Rect9TransposeEv(%"class.gfx::Rect"* nonnull %3) #16
  br label %29

29:                                               ; preds = %11, %28
  %30 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %31 = load %"class.aura::Window"*, %"class.aura::Window"** %30, align 8
  call void @_ZN4aura6Window22AllocateLocalSurfaceIdEv(%"class.aura::Window"* %31) #16
  %32 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %4, align 8
  %33 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 10
  %34 = load float, float* %33, align 8
  %35 = load %"class.aura::Window"*, %"class.aura::Window"** %30, align 8
  %36 = call dereferenceable(24) %"class.viz::LocalSurfaceId"* @_ZN4aura6Window17GetLocalSurfaceIdEv(%"class.aura::Window"* %35) #16
  call void @_ZN2ui10Compositor15SetScaleAndSizeEfRKN3gfx4SizeERKN3viz14LocalSurfaceIdE(%"class.ui::Compositor"* %32, float %34, %"class.gfx::Size"* dereferenceable(8) %21, %"class.viz::LocalSurfaceId"* dereferenceable(24) %36) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  br label %37

37:                                               ; preds = %2, %29
  ret void
}

declare void @_ZN2ui10Compositor23SetDisplayTransformHintEN3gfx16OverlayTransformE(%"class.ui::Compositor"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost28UpdateCompositorScaleAndSizeERKN3gfx4SizeE(%"class.aura::WindowTreeHost"* nocapture readonly, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %8 = bitcast %"class.gfx::Size"* %1 to i64*
  %9 = bitcast %"class.gfx::Size"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  %11 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %11, align 8
  %13 = getelementptr inbounds %"class.ui::Compositor", %"class.ui::Compositor"* %12, i64 0, i32 22, i32 0, i32 0, i32 0
  %14 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %13, align 8
  %15 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %14, i64 0, i32 50
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %18 [
    i32 4, label %17
    i32 6, label %17
  ]

17:                                               ; preds = %2, %2
  call void @_ZN3gfx4Rect9TransposeEv(%"class.gfx::Rect"* nonnull %3) #16
  br label %18

18:                                               ; preds = %2, %17
  %19 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  call void @_ZN4aura6Window22AllocateLocalSurfaceIdEv(%"class.aura::Window"* %20) #16
  %21 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %11, align 8
  %22 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 10
  %23 = load float, float* %22, align 8
  %24 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %25 = call dereferenceable(24) %"class.viz::LocalSurfaceId"* @_ZN4aura6Window17GetLocalSurfaceIdEv(%"class.aura::Window"* %24) #16
  call void @_ZN2ui10Compositor15SetScaleAndSizeEfRKN3gfx4SizeERKN3viz14LocalSurfaceIdE(%"class.ui::Compositor"* %21, float %23, %"class.gfx::Size"* dereferenceable(8) %7, %"class.viz::LocalSurfaceId"* dereferenceable(24) %25) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura14WindowTreeHost40GetRootTransformForLocalEventCoordinatesEv(%"class.gfx::Transform"* noalias sret, %"class.aura::WindowTreeHost"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.aura::WindowTreeHost"* %1 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %4 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %4, i64 3
  %6 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %5, align 8
  tail call void %6(%"class.gfx::Transform"* sret %0, %"class.aura::WindowTreeHost"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura14WindowTreeHost47GetInverseRootTransformForLocalEventCoordinatesEv(%"class.gfx::Transform"* noalias nocapture sret, %"class.aura::WindowTreeHost"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %5) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK4aura14WindowTreeHost47GetInverseRootTransformForLocalEventCoordinatesEv.transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %7) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK4aura14WindowTreeHost47GetInverseRootTransformForLocalEventCoordinatesEv.transform to i8*), i64 68, i1 false)
  %8 = bitcast %"class.aura::WindowTreeHost"* %1 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %9 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %9, i64 6
  %11 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %10, align 8
  call void %11(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %1) #16
  %12 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* nonnull %3) #16
  %13 = bitcast %"class.gfx::Transform"* %0 to i8*
  %14 = select i1 %12, i8* %5, i8* %7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* nonnull align 4 %14, i64 68, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %5) #16
  ret void
}

declare void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx4Rect9TransposeEv(%"class.gfx::Rect"*) local_unnamed_addr #1

declare void @_ZN4aura6Window22AllocateLocalSurfaceIdEv(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN2ui10Compositor15SetScaleAndSizeEfRKN3gfx4SizeERKN3viz14LocalSurfaceIdE(%"class.ui::Compositor"*, float, %"class.gfx::Size"* dereferenceable(8), %"class.viz::LocalSurfaceId"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.viz::LocalSurfaceId"* @_ZN4aura6Window17GetLocalSurfaceIdEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura14WindowTreeHost26ConvertDIPToScreenInPixelsEPN3gfx5PointE(%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)***
  %4 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %4, i64 8
  %6 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %5, align 8
  tail call void %6(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Point"* %1) #16
  %7 = bitcast %"class.aura::WindowTreeHost"* %0 to i64 (%"class.aura::WindowTreeHost"*)***
  %8 = load i64 (%"class.aura::WindowTreeHost"*)**, i64 (%"class.aura::WindowTreeHost"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %8, i64 22
  %10 = load i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %9, align 8
  %11 = tail call i64 %10(%"class.aura::WindowTreeHost"* %0) #16
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %12, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %12) #16
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !6
  store i32 %22, i32* %15, align 4
  %23 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %14, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %14) #16
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !6
  store i32 %30, i32* %23, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura14WindowTreeHost26ConvertScreenInPixelsToDIPEPN3gfx5PointE(%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.aura::WindowTreeHost"* %0 to i64 (%"class.aura::WindowTreeHost"*)***
  %4 = load i64 (%"class.aura::WindowTreeHost"*)**, i64 (%"class.aura::WindowTreeHost"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %4, i64 22
  %6 = load i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %5, align 8
  %7 = tail call i64 %6(%"class.aura::WindowTreeHost"* %0) #16
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = sub nsw i32 0, %8
  %12 = sub nsw i32 0, %10
  %13 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %8, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #16
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !6
  store i32 %20, i32* %13, align 4
  %21 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %10, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %12) #16
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !6
  store i32 %28, i32* %21, align 4
  %29 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)***
  %30 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %30, i64 9
  %32 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %31, align 8
  tail call void %32(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Point"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura14WindowTreeHost18ConvertDIPToPixelsEPN3gfx5PointE(%"class.aura::WindowTreeHost"*, %"class.gfx::Point"* nocapture) unnamed_addr #7 align 2 {
  %3 = alloca %"class.gfx::Point3F", align 8
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::PointF"*
  %7 = bitcast %"class.gfx::Point3F"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  store float %13, float* %8, align 8
  store float %16, float* %9, align 4
  store float 0.000000e+00, float* %10, align 8
  %17 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #16
  %18 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %19 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %19, i64 3
  %21 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %20, align 8
  call void %21(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %0) #16
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Point3F"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #16
  %22 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %23 = bitcast %"class.gfx::Point3F"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast <2 x float>* %5 to i64*
  store i64 %24, i64* %25, align 8
  %26 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* nonnull dereferenceable(8) %6) #16
  %27 = bitcast %"class.gfx::Point"* %1 to i64*
  store i64 %26, i64* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #16
  ret void
}

declare void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"*, %"class.gfx::Point3F"*) local_unnamed_addr #1

declare i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura14WindowTreeHost18ConvertPixelsToDIPEPN3gfx5PointE(%"class.aura::WindowTreeHost"*, %"class.gfx::Point"* nocapture) unnamed_addr #7 align 2 {
  %3 = alloca %"class.gfx::Point3F", align 8
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::PointF"*
  %7 = bitcast %"class.gfx::Point3F"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  store float %13, float* %8, align 8
  store float %16, float* %9, align 4
  store float 0.000000e+00, float* %10, align 8
  %17 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #16
  %18 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %19 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %19, i64 5
  %21 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %20, align 8
  call void %21(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %0) #16
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Point3F"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #16
  %22 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %23 = bitcast %"class.gfx::Point3F"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast <2 x float>* %5 to i64*
  store i64 %24, i64* %25, align 8
  %26 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* nonnull dereferenceable(8) %6) #16
  %27 = bitcast %"class.gfx::Point"* %1 to i64*
  store i64 %26, i64* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost9SetCursorEN2ui6CursorE(%"class.aura::WindowTreeHost"*, %"class.ui::Cursor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.ui::Cursor", align 8
  %4 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 11, i32 0
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 11, i32 1
  %8 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %1, i64 0, i32 1, i32 0
  %9 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %8, align 8
  %10 = icmp eq %"class.ui::PlatformCursor"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %9, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #16
  br label %13

13:                                               ; preds = %11, %2
  %14 = ptrtoint %"class.ui::PlatformCursor"* %9 to i64
  %15 = bitcast %class.scoped_refptr.403* %7 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr.403, %class.scoped_refptr.403* %7, i64 0, i32 0
  %17 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.ui::PlatformCursor"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %17, i64 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCounted.404", %"class.base::RefCounted.404"* %20, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #16
  %22 = getelementptr inbounds %"class.base::RefCounted.404", %"class.base::RefCounted.404"* %20, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::RefCounted.404", %"class.base::RefCounted.404"* %20, i64 -2
  %27 = bitcast %"class.base::RefCounted.404"* %26 to %"class.ui::PlatformCursor"*
  %28 = bitcast %"class.base::RefCounted.404"* %26 to void (%"class.ui::PlatformCursor"*)***
  %29 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %29, i64 1
  %31 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %30, align 8
  tail call void %31(%"class.ui::PlatformCursor"* nonnull %27) #16
  br label %32

32:                                               ; preds = %13, %19, %25
  %33 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 11, i32 2
  %34 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %1, i64 0, i32 2
  %35 = bitcast float* %33 to i8*
  %36 = bitcast float* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 12, i1 false) #16
  %37 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 11, i32 4
  %38 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %1, i64 0, i32 4
  %39 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %37, %class.SkBitmap* dereferenceable(56) %38) #16
  call void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"* nonnull %3, %"class.ui::Cursor"* dereferenceable(88) %1) #16
  %40 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*, %"class.ui::Cursor"*)***
  %41 = load void (%"class.aura::WindowTreeHost"*, %"class.ui::Cursor"*)**, void (%"class.aura::WindowTreeHost"*, %"class.ui::Cursor"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.ui::Cursor"*)*, void (%"class.aura::WindowTreeHost"*, %"class.ui::Cursor"*)** %41, i64 23
  %43 = load void (%"class.aura::WindowTreeHost"*, %"class.ui::Cursor"*)*, void (%"class.aura::WindowTreeHost"*, %"class.ui::Cursor"*)** %42, align 8
  call void %43(%"class.aura::WindowTreeHost"* %0, %"class.ui::Cursor"* nonnull %3) #16
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %3) #16
  ret void
}

declare void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"*, %"class.ui::Cursor"* dereferenceable(88)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost25OnCursorVisibilityChangedEb(%"class.aura::WindowTreeHost"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  br i1 %1, label %13, label %4

4:                                                ; preds = %2
  %5 = bitcast i64* %3 to %"class.gfx::Point"*
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %7 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %6, align 8
  %8 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = tail call i64 @_ZNK4aura21WindowEventDispatcher26GetLastMouseLocationInRootEv(%"class.aura::WindowEventDispatcher"* %7) #16
  store i64 %9, i64* %3, align 8
  %10 = call i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseExitAtPointEPNS_6WindowERKN3gfx5PointEi(%"class.aura::WindowEventDispatcher"* %7, %"class.aura::Window"* null, %"class.gfx::Point"* nonnull dereferenceable(8) %5, i32 1048576) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  %11 = and i24 %10, 1
  %12 = icmp eq i24 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %4, %2
  %14 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*, i1)***
  %15 = load void (%"class.aura::WindowTreeHost"*, i1)**, void (%"class.aura::WindowTreeHost"*, i1)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, i1)*, void (%"class.aura::WindowTreeHost"*, i1)** %15, i64 25
  %17 = load void (%"class.aura::WindowTreeHost"*, i1)*, void (%"class.aura::WindowTreeHost"*, i1)** %16, align 8
  call void %17(%"class.aura::WindowTreeHost"* %0, i1 zeroext %1) #16
  br label %18

18:                                               ; preds = %4, %13
  ret void
}

declare i24 @_ZN4aura21WindowEventDispatcher24DispatchMouseExitAtPointEPNS_6WindowERKN3gfx5PointEi(%"class.aura::WindowEventDispatcher"*, %"class.aura::Window"*, %"class.gfx::Point"* dereferenceable(8), i32) local_unnamed_addr #1

declare i64 @_ZNK4aura21WindowEventDispatcher26GetLastMouseLocationInRootEv(%"class.aura::WindowEventDispatcher"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost25MoveCursorToLocationInDIPERKN3gfx5PointE(%"class.aura::WindowTreeHost"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.display::Display", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Point"*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = bitcast %"class.gfx::Point"* %1 to i64*
  %8 = load i64, i64* %7, align 4
  store i64 %8, i64* %4, align 8
  %9 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)***
  %10 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %10, i64 8
  %12 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %11, align 8
  call void %12(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Point"* nonnull %5) #16
  %13 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 12
  %14 = bitcast %"class.gfx::Point"* %13 to i64*
  %15 = load i64, i64* %4, align 8
  store i64 %15, i64* %14, align 8
  %16 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %9, align 8
  %17 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %16, i64 24
  %18 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %17, align 8
  call void %18(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Point"* nonnull dereferenceable(8) %5) #16
  %19 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %20) #16
  %22 = icmp eq %"class.aura::client::CursorClient"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %2
  %24 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %24) #16
  %25 = call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %26 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %27 = bitcast %"class.display::Screen"* %25 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %28 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %28, i64 8
  %30 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %29, align 8
  call void %30(%"class.display::Display"* nonnull sret %3, %"class.display::Screen"* %25, %"class.aura::Window"* %26) #16
  %31 = bitcast %"class.aura::client::CursorClient"* %21 to void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)***
  %32 = load void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)**, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)** %32, i64 11
  %34 = load void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)** %33, align 8
  call void %34(%"class.aura::client::CursorClient"* nonnull %21, %"class.display::Display"* nonnull dereferenceable(568) %3) #16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %24) #16
  br label %35

35:                                               ; preds = %2, %23
  %36 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %37 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %36, align 8
  call void @_ZN4aura21WindowEventDispatcher27OnCursorMovedToRootLocationERKN3gfx5PointE(%"class.aura::WindowEventDispatcher"* %37, %"class.gfx::Point"* dereferenceable(8) %1) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost20MoveCursorToInternalERKN3gfx5PointES4_(%"class.aura::WindowTreeHost"*, %"class.gfx::Point"* dereferenceable(8), %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.display::Display", align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 12
  %6 = bitcast %"class.gfx::Point"* %2 to i64*
  %7 = bitcast %"class.gfx::Point"* %5 to i64*
  %8 = load i64, i64* %6, align 4
  store i64 %8, i64* %7, align 8
  %9 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)***
  %10 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %10, i64 24
  %12 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %11, align 8
  tail call void %12(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Point"* dereferenceable(8) %2) #16
  %13 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = tail call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %14) #16
  %16 = icmp eq %"class.aura::client::CursorClient"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.display::Display"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %18) #16
  %19 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %21 = bitcast %"class.display::Screen"* %19 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %22 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %22, i64 8
  %24 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %23, align 8
  call void %24(%"class.display::Display"* nonnull sret %4, %"class.display::Screen"* %19, %"class.aura::Window"* %20) #16
  %25 = bitcast %"class.aura::client::CursorClient"* %15 to void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)***
  %26 = load void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)**, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)** %26, i64 11
  %28 = load void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)** %27, align 8
  call void %28(%"class.aura::client::CursorClient"* nonnull %15, %"class.display::Display"* nonnull dereferenceable(568) %4) #16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %18) #16
  br label %29

29:                                               ; preds = %3, %17
  %30 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %31 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %30, align 8
  call void @_ZN4aura21WindowEventDispatcher27OnCursorMovedToRootLocationERKN3gfx5PointE(%"class.aura::WindowEventDispatcher"* %31, %"class.gfx::Point"* dereferenceable(8) %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost28MoveCursorToLocationInPixelsERKN3gfx5PointE(%"class.aura::WindowTreeHost"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.display::Display", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Point"*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = bitcast %"class.gfx::Point"* %1 to i64*
  %8 = load i64, i64* %7, align 4
  store i64 %8, i64* %4, align 8
  %9 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)***
  %10 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %10, i64 9
  %12 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %11, align 8
  call void %12(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Point"* nonnull %5) #16
  %13 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 12
  %14 = bitcast %"class.gfx::Point"* %13 to i64*
  %15 = load i64, i64* %7, align 4
  store i64 %15, i64* %14, align 8
  %16 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %9, align 8
  %17 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %16, i64 24
  %18 = load void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %17, align 8
  call void %18(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Point"* dereferenceable(8) %1) #16
  %19 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %20) #16
  %22 = icmp eq %"class.aura::client::CursorClient"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %2
  %24 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %24) #16
  %25 = call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %26 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %27 = bitcast %"class.display::Screen"* %25 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %28 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %28, i64 8
  %30 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %29, align 8
  call void %30(%"class.display::Display"* nonnull sret %3, %"class.display::Screen"* %25, %"class.aura::Window"* %26) #16
  %31 = bitcast %"class.aura::client::CursorClient"* %21 to void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)***
  %32 = load void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)**, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)** %32, i64 11
  %34 = load void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)*, void (%"class.aura::client::CursorClient"*, %"class.display::Display"*)** %33, align 8
  call void %34(%"class.aura::client::CursorClient"* nonnull %21, %"class.display::Display"* nonnull dereferenceable(568) %3) #16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %24) #16
  br label %35

35:                                               ; preds = %2, %23
  %36 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %37 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %36, align 8
  call void @_ZN4aura21WindowEventDispatcher27OnCursorMovedToRootLocationERKN3gfx5PointE(%"class.aura::WindowEventDispatcher"* %37, %"class.gfx::Point"* nonnull dereferenceable(8) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::InputMethod"* @_ZN4aura14WindowTreeHost14GetInputMethodEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 14
  %3 = load %"class.ui::InputMethod"*, %"class.ui::InputMethod"** %2, align 8
  %4 = icmp eq %"class.ui::InputMethod"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 0
  %7 = bitcast %"class.aura::WindowTreeHost"* %0 to i32 (%"class.aura::WindowTreeHost"*)***
  %8 = load i32 (%"class.aura::WindowTreeHost"*)**, i32 (%"class.aura::WindowTreeHost"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %8, i64 13
  %10 = load i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %9, align 8
  %11 = tail call i32 %10(%"class.aura::WindowTreeHost"* %0) #16
  %12 = tail call %"class.ui::InputMethod"* @_ZN2ui17CreateInputMethodEPNS_8internal19InputMethodDelegateEj(%"class.ui::internal::InputMethodDelegate"* %6, i32 %11) #16
  store %"class.ui::InputMethod"* %12, %"class.ui::InputMethod"** %2, align 8
  %13 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 15
  store i8 1, i8* %13, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi %"class.ui::InputMethod"* [ %3, %1 ], [ %12, %5 ]
  ret %"class.ui::InputMethod"* %15
}

declare %"class.ui::InputMethod"* @_ZN2ui17CreateInputMethodEPNS_8internal19InputMethodDelegateEj(%"class.ui::internal::InputMethodDelegate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost20SetSharedInputMethodEPN2ui11InputMethodE(%"class.aura::WindowTreeHost"* nocapture, %"class.ui::InputMethod"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 14
  %4 = load %"class.ui::InputMethod"*, %"class.ui::InputMethod"** %3, align 8
  %5 = icmp eq %"class.ui::InputMethod"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 15
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.ui::InputMethod"* %4 to void (%"class.ui::InputMethod"*)***
  %12 = load void (%"class.ui::InputMethod"*)**, void (%"class.ui::InputMethod"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.ui::InputMethod"*)*, void (%"class.ui::InputMethod"*)** %12, i64 1
  %14 = load void (%"class.ui::InputMethod"*)*, void (%"class.ui::InputMethod"*)** %13, align 8
  tail call void %14(%"class.ui::InputMethod"* nonnull %4) #16
  br label %15

15:                                               ; preds = %6, %2, %10
  store %"class.ui::InputMethod"* %1, %"class.ui::InputMethod"** %3, align 8
  %16 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 15
  store i8 0, i8* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN4aura14WindowTreeHost23DispatchKeyEventPostIMEEPN2ui8KeyEventE(%"class.aura::WindowTreeHost"*, %"class.ui::KeyEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %4, i64 0, i32 20
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 8
  store %"class.ui::EventTarget"* null, %"class.ui::EventTarget"** %7, align 8
  %8 = bitcast %"class.aura::WindowTreeHost"* %0 to %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)***
  %9 = load %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)**, %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)*, %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)** %9, i64 10
  %11 = load %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)*, %"class.ui::EventSink"* (%"class.aura::WindowTreeHost"*)** %10, align 8
  %12 = tail call %"class.ui::EventSink"* %11(%"class.aura::WindowTreeHost"* %0) #16
  %13 = bitcast %"class.ui::EventSink"* %12 to i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)***
  %14 = load i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)**, i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)*** %13, align 8
  %15 = getelementptr inbounds i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)** %14, i64 2
  %16 = load i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)*, i24 (%"class.ui::EventSink"*, %"class.ui::Event"*)** %15, align 8
  %17 = tail call i24 %16(%"class.ui::EventSink"* %12, %"class.ui::Event"* %6) #16
  %18 = and i24 %17, 1
  %19 = icmp eq i24 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %3, align 8
  %22 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %21, i64 0, i32 20
  store i8 0, i8* %22, align 8
  br label %23

23:                                               ; preds = %2, %20
  ret i24 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::EventSink"* @_ZN4aura14WindowTreeHost12GetEventSinkEv(%"class.aura::WindowTreeHost"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %2, align 8
  %4 = icmp eq %"class.aura::WindowEventDispatcher"* %3, null
  %5 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %3, i64 0, i32 0, i32 1
  %6 = select i1 %4, %"class.ui::EventSink"* null, %"class.ui::EventSink"* %5
  ret %"class.ui::EventSink"* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::EventSink"* @_ZThn8_N4aura14WindowTreeHost12GetEventSinkEv(%"class.aura::WindowTreeHost"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 -1, i32 18, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 18
  %4 = bitcast i64* %3 to %"class.aura::WindowEventDispatcher"**
  %5 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %4, align 8
  %6 = icmp eq %"class.aura::WindowEventDispatcher"* %5, null
  %7 = getelementptr inbounds %"class.aura::WindowEventDispatcher", %"class.aura::WindowEventDispatcher"* %5, i64 0, i32 0, i32 1
  %8 = select i1 %6, %"class.ui::EventSink"* null, %"class.ui::EventSink"* %7
  ret %"class.ui::EventSink"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4aura14WindowTreeHost12GetDisplayIdEv(%"class.aura::WindowTreeHost"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.display::Display", align 8
  %3 = bitcast %"class.display::Display"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %3) #16
  %4 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = bitcast %"class.display::Screen"* %4 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %8 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %8, i64 8
  %10 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %9, align 8
  call void %10(%"class.display::Display"* nonnull sret %2, %"class.display::Screen"* %4, %"class.aura::Window"* %6) #16
  %11 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %3) #16
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost4ShowEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %2, align 8
  tail call void @_ZN2ui10Compositor10SetVisibleEb(%"class.ui::Compositor"* %3, i1 zeroext true) #16
  %4 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*)***
  %5 = load void (%"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHost"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %5, i64 26
  %7 = load void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %6, align 8
  tail call void %7(%"class.aura::WindowTreeHost"* %0) #16
  %8 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  tail call void @_ZN4aura6Window4ShowEv(%"class.aura::Window"* %9) #16
  ret void
}

declare void @_ZN2ui10Compositor10SetVisibleEb(%"class.ui::Compositor"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN4aura6Window4ShowEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost4HideEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.aura::WindowTreeHost"*)***
  %3 = load void (%"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHost"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %3, i64 27
  %5 = load void (%"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHost"*)** %4, align 8
  tail call void %5(%"class.aura::WindowTreeHost"* %0) #16
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %6, align 8
  %8 = icmp eq %"class.ui::Compositor"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN2ui10Compositor10SetVisibleEb(%"class.ui::Compositor"* nonnull %7, i1 zeroext false) #16
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::ScopedKeyboardHook"* @_ZN4aura14WindowTreeHost22CaptureSystemKeyEventsEN4absl8optionalIN4base8internal9flat_treeIN2ui7DomCodeENS3_8identityENSt3__14lessIvEENS9_6vectorIS7_NS9_9allocatorIS7_EEEEEEEE(%"class.aura::WindowTreeHost"*, %"class.absl::optional.883"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.absl::optional.883", align 8
  %5 = alloca %"class.base::WeakPtr.870", align 8
  %6 = alloca %"class.absl::optional.883", align 8
  %7 = alloca %"class.base::WeakPtr.870", align 8
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kSystemKeyboardLockE) #16
  br i1 %8, label %43, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10)
  %11 = tail call i8* @_Znwm(i64 56) #17
  %12 = bitcast i8* %11 to %"class.aura::ScopedSimpleKeyboardHook"*
  %13 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #16
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %"class.base::internal::flat_tree.888"* %17 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = bitcast %"class.base::internal::flat_tree.888"* %18 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %21, align 8
  %22 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast i32** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i32** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.base::internal::flat_tree.888"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #16
  store i8 1, i8* %10, align 8
  br label %28

28:                                               ; preds = %16, %9
  call void @_ZN4aura24ScopedSimpleKeyboardHookC1EN4absl8optionalIN4base8internal9flat_treeIN2ui7DomCodeENS3_8identityENSt3__14lessIvEENS9_6vectorIS7_NS9_9allocatorIS7_EEEEEEEE(%"class.aura::ScopedSimpleKeyboardHook"* nonnull %12, %"class.absl::optional.883"* nonnull %4) #16
  %29 = load i8, i8* %10, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = icmp eq i32* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = ptrtoint i32* %33 to i64
  %37 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast i32* %33 to i8*
  call void @_ZdlPv(i8* %39) #17
  br label %40

40:                                               ; preds = %35, %31
  store i8 0, i8* %10, align 8
  br label %41

41:                                               ; preds = %40, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10)
  %42 = ptrtoint i8* %11 to i64
  br label %96

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 32, i1 false) #16
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = bitcast %"class.base::internal::flat_tree.888"* %49 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  %53 = bitcast %"class.base::internal::flat_tree.888"* %50 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %53, align 8
  %54 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast i32** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"class.base::internal::flat_tree.888"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #16
  store i8 1, i8* %44, align 8
  br label %60

60:                                               ; preds = %43, %48
  %61 = bitcast %"class.aura::WindowTreeHost"* %0 to i1 (%"class.aura::WindowTreeHost"*, %"class.absl::optional.883"*)***
  %62 = load i1 (%"class.aura::WindowTreeHost"*, %"class.absl::optional.883"*)**, i1 (%"class.aura::WindowTreeHost"*, %"class.absl::optional.883"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.aura::WindowTreeHost"*, %"class.absl::optional.883"*)*, i1 (%"class.aura::WindowTreeHost"*, %"class.absl::optional.883"*)** %62, i64 29
  %64 = load i1 (%"class.aura::WindowTreeHost"*, %"class.absl::optional.883"*)*, i1 (%"class.aura::WindowTreeHost"*, %"class.absl::optional.883"*)** %63, align 8
  %65 = call zeroext i1 %64(%"class.aura::WindowTreeHost"* %0, %"class.absl::optional.883"* nonnull %6) #16
  %66 = load i8, i8* %44, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = ptrtoint i32* %70 to i64
  %74 = getelementptr inbounds %"class.absl::optional.883", %"class.absl::optional.883"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast i32** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast i32* %70 to i8*
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %72, %68
  store i8 0, i8* %44, align 8
  br label %78

78:                                               ; preds = %60, %77
  br i1 %65, label %79, label %96

79:                                               ; preds = %78
  %80 = bitcast %"class.base::WeakPtr.870"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #16
  %81 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #16, !noalias !7
  %82 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 18, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %82) #16, !noalias !7
  %83 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 18, i32 0, i32 1
  %84 = load i64, i64* %83, align 8, !noalias !7
  %85 = getelementptr inbounds %"class.base::WeakPtr.870", %"class.base::WeakPtr.870"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %85, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %84) #16
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #16, !noalias !7
  %86 = bitcast %"class.base::WeakPtr.870"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86)
  %87 = call i8* @_Znwm(i64 24) #17
  %88 = bitcast i8* %87 to %"class.aura::ScopedKeyboardHook"*
  %89 = getelementptr inbounds %"class.base::WeakPtr.870", %"class.base::WeakPtr.870"* %5, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.base::WeakPtr.870", %"class.base::WeakPtr.870"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %89, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %90) #16
  %91 = getelementptr inbounds %"class.base::WeakPtr.870", %"class.base::WeakPtr.870"* %5, i64 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.base::WeakPtr.870", %"class.base::WeakPtr.870"* %7, i64 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %91, align 8
  call void @_ZN4aura18ScopedKeyboardHookC1EN4base7WeakPtrINS_14WindowTreeHostEEE(%"class.aura::ScopedKeyboardHook"* nonnull %88, %"class.base::WeakPtr.870"* nonnull %5) #16
  %94 = getelementptr inbounds %"class.base::WeakPtr.870", %"class.base::WeakPtr.870"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %94) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86)
  %95 = ptrtoint i8* %87 to i64
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %85) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #16
  br label %96

96:                                               ; preds = %78, %79, %41
  %97 = phi i64 [ %95, %79 ], [ %42, %41 ], [ 0, %78 ]
  %98 = inttoptr i64 %97 to %"class.aura::ScopedKeyboardHook"*
  ret %"class.aura::ScopedKeyboardHook"* %98
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4aura14WindowTreeHost23ShouldSendKeyEventToImeEv(%"class.aura::WindowTreeHost"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4aura14WindowTreeHost30IsNativeWindowOcclusionEnabledEv(%"class.aura::WindowTreeHost"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost29SetNativeWindowOcclusionStateENS_6Window14OcclusionStateE(%"class.aura::WindowTreeHost"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %342, label %8

8:                                                ; preds = %2
  store i32 %1, i32* %5, align 8
  %9 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7
  %10 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !10
  %17 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8, !noalias !10
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %18
  %20 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %20) #16
  br i1 %19, label %21, label %23

21:                                               ; preds = %8
  %22 = bitcast %"class.base::ObserverList.368"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #16, !alias.scope !10
  br label %63

23:                                               ; preds = %8
  store %"class.base::ObserverList.368"* %9, %"class.base::ObserverList.368"** %11, align 8, !alias.scope !10
  %24 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %20, %"class.base::internal::LinkNodeBase"* %24) #16
  store i64 0, i64* %12, align 8, !alias.scope !10
  %25 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 3
  %26 = load i32, i32* %25, align 8, !noalias !10
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %17 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !10
  %31 = bitcast %"class.base::ObserverList.368"* %9 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !10
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  br label %35

35:                                               ; preds = %28, %23
  %36 = phi i64 [ %34, %28 ], [ -1, %23 ]
  store i64 %36, i64* %13, align 8, !alias.scope !10
  %37 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %11, align 8, !alias.scope !10
  %38 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %37, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::ObserverList.368"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, %36
  %46 = select i1 %45, i64 %44, i64 %36
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = inttoptr i64 %42 to %"class.base::internal::UncheckedObserverAdapter"*
  %50 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %37, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %48, %58
  %55 = phi i64 [ %56, %58 ], [ 0, %48 ]
  %56 = add nuw i64 %55, 1
  store i64 %56, i64* %12, align 8, !alias.scope !10
  %57 = icmp ult i64 %56, %46
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %59, i64 %56, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %54, label %63

63:                                               ; preds = %54, %58, %21, %35, %48
  %64 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #16
  %65 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %67 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %68 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %68) #16
  %70 = bitcast %"class.base::ObserverList.368"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #16, !alias.scope !13
  %71 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %11, align 8
  br label %72

72:                                               ; preds = %312, %63
  %73 = phi %"class.base::ObserverList.368"* [ %71, %63 ], [ %310, %312 ]
  %74 = icmp eq %"class.base::ObserverList.368"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %12, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList.368"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %13, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %65, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %65, align 8
  %92 = icmp eq %"class.base::ObserverList.368"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %66, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList.368"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %67, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList.368"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList.368"* %73, %107
  %109 = load i64, i64* %12, align 8
  %110 = load i64, i64* %66, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %300

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList.368"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList.368"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode.370"**
  %120 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %119, align 8
  %121 = bitcast %"class.base::LinkedList.369"* %117 to %"class.base::LinkNode.370"**
  %122 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode.370"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !16

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %403
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %405, %403 ], [ %173, %171 ]
  %178 = phi i64 [ %404, %403 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %381, label %375

193:                                              ; preds = %403, %171
  %194 = phi i64 [ %172, %171 ], [ %404, %403 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %65, align 8
  %204 = icmp eq %"class.base::ObserverList.368"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %65, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %68) #16
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #16
  %207 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %11, align 8
  %208 = icmp eq %"class.base::ObserverList.368"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode.370"**
  %213 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %212, align 8
  %214 = bitcast %"class.base::LinkedList.369"* %210 to %"class.base::LinkNode.370"**
  %215 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode.370"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !18

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %371
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %373, %371 ], [ %266, %264 ]
  %271 = phi i64 [ %372, %371 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %349, label %343

286:                                              ; preds = %371, %264
  %287 = phi i64 [ %265, %264 ], [ %372, %371 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %11, align 8
  %297 = icmp eq %"class.base::ObserverList.368"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %11, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %20) #16
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #16
  br label %342

300:                                              ; preds = %106
  %301 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %73, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  %303 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %302, i64 %109
  %304 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %303 to %"class.aura::WindowTreeHostObserver"**
  %305 = load %"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHostObserver"** %304, align 8
  %306 = bitcast %"class.aura::WindowTreeHostObserver"* %305 to void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, i32)***
  %307 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, i32)**, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, i32)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, i32)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, i32)** %307, i64 4
  %309 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, i32)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, i32)** %308, align 8
  call void %309(%"class.aura::WindowTreeHostObserver"* %305, %"class.aura::WindowTreeHost"* %0, i32 %1) #16
  %310 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %11, align 8
  %311 = icmp eq %"class.base::ObserverList.368"* %310, null
  br i1 %311, label %312, label %313

312:                                              ; preds = %337, %333, %300, %313, %327
  br label %72

313:                                              ; preds = %300
  %314 = load i64, i64* %12, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %12, align 8
  %316 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %310, i64 0, i32 0, i32 0, i32 1
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.base::ObserverList.368"* %310 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %318, %320
  %322 = ashr exact i64 %321, 3
  %323 = load i64, i64* %13, align 8
  %324 = icmp ult i64 %322, %323
  %325 = select i1 %324, i64 %322, i64 %323
  %326 = icmp ult i64 %315, %325
  br i1 %326, label %327, label %312

327:                                              ; preds = %313
  %328 = inttoptr i64 %320 to %"class.base::internal::UncheckedObserverAdapter"*
  %329 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %310, i64 0, i32 0, i32 0, i32 0
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %328, i64 %315, i32 0
  %331 = load i8*, i8** %330, align 8
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %312

333:                                              ; preds = %327, %337
  %334 = phi i64 [ %335, %337 ], [ %315, %327 ]
  %335 = add nuw i64 %334, 1
  store i64 %335, i64* %12, align 8
  %336 = icmp ult i64 %335, %325
  br i1 %336, label %337, label %312

337:                                              ; preds = %333
  %338 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %335, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %333, label %312

342:                                              ; preds = %2, %299
  ret void

343:                                              ; preds = %281
  %344 = ptrtoint i8* %284 to i64
  %345 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %346 = inttoptr i64 %282 to i64*
  store i64 %344, i64* %346, align 8
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %345, i64 1
  %348 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %347 to i64
  br label %349

349:                                              ; preds = %343, %281
  %350 = phi i64 [ %282, %281 ], [ %348, %343 ]
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = icmp eq i8* %352, null
  br i1 %353, label %360, label %354

354:                                              ; preds = %349
  %355 = ptrtoint i8* %352 to i64
  %356 = inttoptr i64 %350 to %"class.base::internal::UncheckedObserverAdapter"*
  %357 = inttoptr i64 %350 to i64*
  store i64 %355, i64* %357, align 8
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 1
  %359 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %358 to i64
  br label %360

360:                                              ; preds = %354, %349
  %361 = phi i64 [ %350, %349 ], [ %359, %354 ]
  %362 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %371, label %365

365:                                              ; preds = %360
  %366 = ptrtoint i8* %363 to i64
  %367 = inttoptr i64 %361 to %"class.base::internal::UncheckedObserverAdapter"*
  %368 = inttoptr i64 %361 to i64*
  store i64 %366, i64* %368, align 8
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %367, i64 1
  %370 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %369 to i64
  br label %371

371:                                              ; preds = %365, %360
  %372 = phi i64 [ %361, %360 ], [ %370, %365 ]
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %374 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %373, %221
  br i1 %374, label %286, label %269

375:                                              ; preds = %188
  %376 = ptrtoint i8* %191 to i64
  %377 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %378 = inttoptr i64 %189 to i64*
  store i64 %376, i64* %378, align 8
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %377, i64 1
  %380 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %379 to i64
  br label %381

381:                                              ; preds = %375, %188
  %382 = phi i64 [ %189, %188 ], [ %380, %375 ]
  %383 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %384 = load i8*, i8** %383, align 8
  %385 = icmp eq i8* %384, null
  br i1 %385, label %392, label %386

386:                                              ; preds = %381
  %387 = ptrtoint i8* %384 to i64
  %388 = inttoptr i64 %382 to %"class.base::internal::UncheckedObserverAdapter"*
  %389 = inttoptr i64 %382 to i64*
  store i64 %387, i64* %389, align 8
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %388, i64 1
  %391 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %390 to i64
  br label %392

392:                                              ; preds = %386, %381
  %393 = phi i64 [ %382, %381 ], [ %391, %386 ]
  %394 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %395 = load i8*, i8** %394, align 8
  %396 = icmp eq i8* %395, null
  br i1 %396, label %403, label %397

397:                                              ; preds = %392
  %398 = ptrtoint i8* %395 to i64
  %399 = inttoptr i64 %393 to %"class.base::internal::UncheckedObserverAdapter"*
  %400 = inttoptr i64 %393 to i64*
  store i64 %398, i64* %400, align 8
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %399, i64 1
  %402 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %401 to i64
  br label %403

403:                                              ; preds = %397, %392
  %404 = phi i64 [ %393, %392 ], [ %402, %397 ]
  %405 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %406 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %405, %128
  br i1 %406, label %193, label %176
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.aura::ScopedEnableUnadjustedMouseEvents"* @_ZN4aura14WindowTreeHost25RequestUnadjustedMovementEv(%"class.aura::WindowTreeHost"* nocapture readnone) unnamed_addr #8 align 2 {
  ret %"class.aura::ScopedEnableUnadjustedMouseEvents"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHostC2ENSt3__110unique_ptrINS_6WindowENS1_14default_deleteIS3_EEEE(%"class.aura::WindowTreeHost"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.display::Display", align 8
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui8internal19InputMethodDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 1
  tail call void @_ZN2ui11EventSourceC2Ev(%"class.ui::EventSource"* %5) #16
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %6, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %7) #16
  %8 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 3, i32 0
  %10 = bitcast %"class.aura::WindowTreeHost"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }, { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }* @_ZTVN4aura14WindowTreeHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }, { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }* @_ZTVN4aura14WindowTreeHostE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }, { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }* @_ZTVN4aura14WindowTreeHostE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }, { [38 x i8*], [6 x i8*], [11 x i8*], [14 x i8*] }* @_ZTVN4aura14WindowTreeHostE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  store %"class.aura::Window"* %1, %"class.aura::Window"** %11, align 8
  %12 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 5
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7
  %14 = bitcast %"class.base::ObserverList.368"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #16
  %15 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %15, %"class.base::internal::LinkNodeBase"* %15, %"class.base::internal::LinkNodeBase"* %15) #16
  %16 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 2
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 3
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8
  %19 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 10
  %20 = bitcast %"class.std::__1::unique_ptr.372"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  store float 1.000000e+00, float* %19, align 8
  %21 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 11
  tail call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* %21, i32 -1) #16
  %22 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 12, i32 0
  %23 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 18, i32 0
  %24 = ptrtoint %"class.aura::WindowTreeHost"* %0 to i64
  %25 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 27, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %23, i64 %24) #16
  %26 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  %27 = icmp eq %"class.aura::Window"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %2
  %29 = tail call i8* @_Znwm(i64 504) #17
  %30 = bitcast i8* %29 to %"class.aura::Window"*
  tail call void @_ZN4aura6WindowC1EPNS_14WindowDelegateENS_6client10WindowTypeE(%"class.aura::Window"* nonnull %30, %"class.aura::WindowDelegate"* null, i32 0) #16
  %31 = bitcast %"class.aura::Window"** %11 to i8**
  store i8* %29, i8** %31, align 8
  br label %32

32:                                               ; preds = %28, %2
  %33 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %34 = bitcast %"class.display::Screen"* %33 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %35 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %35, i64 16
  %37 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %36, align 8
  tail call void %37(%"class.display::Screen"* %33, %"class.display::DisplayObserver"* %6) #16
  %38 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %38) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.795 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.151 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN4aura14WindowTreeHost20OnHostDisplayChangedEv.display to i8*), i64 568, i1 false)
  %39 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %40 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  %41 = bitcast %"class.display::Screen"* %39 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %42 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %42, i64 8
  %44 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %43, align 8
  call void %44(%"class.display::Display"* nonnull sret %3, %"class.display::Screen"* %39, %"class.aura::Window"* %40) #16
  %45 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 4
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = bitcast float* %19 to i32*
  store i32 %47, i32* %48, align 8
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %38) #16
  ret void
}

declare void @_ZN2ui11EventSourceC2Ev(%"class.ui::EventSource"*) unnamed_addr #1

declare void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"*, i32) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN4aura6WindowC1EPNS_14WindowDelegateENS_6client10WindowTypeE(%"class.aura::Window"*, %"class.aura::WindowDelegate"*, i32) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4aura14WindowTreeHost26IntializeDeviceScaleFactorEf(%"class.aura::WindowTreeHost"* nocapture, float) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 10
  store float %1, float* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost17DestroyCompositorEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %2, align 8
  %4 = icmp eq %"class.ui::Compositor"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 3
  tail call void @_ZN2ui10Compositor14RemoveObserverEPNS_18CompositorObserverE(%"class.ui::Compositor"* nonnull %3, %"class.ui::CompositorObserver"* %6) #16
  %7 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %2, align 8
  store %"class.ui::Compositor"* null, %"class.ui::Compositor"** %2, align 8
  %8 = icmp eq %"class.ui::Compositor"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.ui::Compositor"* %7 to void (%"class.ui::Compositor"*)***
  %11 = load void (%"class.ui::Compositor"*)**, void (%"class.ui::Compositor"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::Compositor"*)*, void (%"class.ui::Compositor"*)** %11, i64 29
  %13 = load void (%"class.ui::Compositor"*)*, void (%"class.ui::Compositor"*)** %12, align 8
  tail call void %13(%"class.ui::Compositor"* nonnull %7) #16
  br label %14

14:                                               ; preds = %1, %9, %5
  ret void
}

declare void @_ZN2ui10Compositor14RemoveObserverEPNS_18CompositorObserverE(%"class.ui::Compositor"*, %"class.ui::CompositorObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost17DestroyDispatcherEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #16
  tail call void @_ZN4aura3Env19NotifyHostDestroyedEPNS_14WindowTreeHostE(%"class.aura::Env"* %2, %"class.aura::WindowTreeHost"* %0) #16
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.aura::Window"* %4 to void (%"class.aura::Window"*)***
  %8 = load void (%"class.aura::Window"*)**, void (%"class.aura::Window"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.aura::Window"*)*, void (%"class.aura::Window"*)** %8, i64 9
  %10 = load void (%"class.aura::Window"*)*, void (%"class.aura::Window"*)** %9, align 8
  tail call void %10(%"class.aura::Window"* nonnull %4) #16
  br label %11

11:                                               ; preds = %6, %1
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  %12 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %13 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %12, align 8
  store %"class.aura::WindowEventDispatcher"* null, %"class.aura::WindowEventDispatcher"** %12, align 8
  %14 = icmp eq %"class.aura::WindowEventDispatcher"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.aura::WindowEventDispatcher"* %13 to void (%"class.aura::WindowEventDispatcher"*)***
  %17 = load void (%"class.aura::WindowEventDispatcher"*)**, void (%"class.aura::WindowEventDispatcher"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcher"*)** %17, i64 1
  %19 = load void (%"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcher"*)** %18, align 8
  tail call void %19(%"class.aura::WindowEventDispatcher"* nonnull %13) #16
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

declare void @_ZN4aura3Env19NotifyHostDestroyedEPNS_14WindowTreeHostE(%"class.aura::Env"*, %"class.aura::WindowTreeHost"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost16CreateCompositorERKN3viz11FrameSinkIdEbbb(%"class.aura::WindowTreeHost"*, %"class.viz::FrameSinkId"* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.viz::FrameSinkId", align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #16
  %9 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %8, i64 0, i32 15
  %10 = load %"class.ui::ContextFactory"*, %"class.ui::ContextFactory"** %9, align 8
  %11 = bitcast %"class.viz::FrameSinkId"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %13, %15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %6, i64 0, i32 0
  store i32 %13, i32* %19, align 4
  %20 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %6, i64 0, i32 1
  store i32 %15, i32* %20, align 4
  br label %26

21:                                               ; preds = %5
  %22 = bitcast %"class.ui::ContextFactory"* %10 to void (%"class.viz::FrameSinkId"*, %"class.ui::ContextFactory"*)***
  %23 = load void (%"class.viz::FrameSinkId"*, %"class.ui::ContextFactory"*)**, void (%"class.viz::FrameSinkId"*, %"class.ui::ContextFactory"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.viz::FrameSinkId"*, %"class.ui::ContextFactory"*)*, void (%"class.viz::FrameSinkId"*, %"class.ui::ContextFactory"*)** %23, i64 8
  %25 = load void (%"class.viz::FrameSinkId"*, %"class.ui::ContextFactory"*)*, void (%"class.viz::FrameSinkId"*, %"class.ui::ContextFactory"*)** %24, align 8
  call void %25(%"class.viz::FrameSinkId"* nonnull sret %6, %"class.ui::ContextFactory"* %10) #16
  br label %26

26:                                               ; preds = %21, %18
  %27 = call dereferenceable(8) %class.scoped_refptr.130* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #16
  %28 = call zeroext i1 @_ZN2ui29IsPixelCanvasRecordingEnabledEv() #16
  %29 = call i8* @_Znwm(i64 1112) #17
  %30 = bitcast i8* %29 to %"class.ui::Compositor"*
  %31 = getelementptr inbounds %class.scoped_refptr.130, %class.scoped_refptr.130* %27, i64 0, i32 0
  %32 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %31, align 8
  %33 = icmp eq %"class.base::SingleThreadTaskRunner"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %26, %34
  call void @_ZN2ui10CompositorC1ERKN3viz11FrameSinkIdEPNS_14ContextFactoryE13scoped_refptrIN4base22SingleThreadTaskRunnerEEbbbb(%"class.ui::Compositor"* nonnull %30, %"class.viz::FrameSinkId"* nonnull dereferenceable(8) %6, %"class.ui::ContextFactory"* %10, %"class.base::SingleThreadTaskRunner"* %32, i1 zeroext %28, i1 zeroext %3, i1 zeroext %2, i1 zeroext %4) #16
  %38 = ptrtoint i8* %29 to i64
  %39 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.397"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %40, align 8
  %42 = bitcast %"class.std::__1::unique_ptr.397"* %39 to i64*
  store i64 %38, i64* %42, align 8
  %43 = icmp eq %"class.ui::Compositor"* %41, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %37
  %45 = bitcast %"class.ui::Compositor"* %41 to void (%"class.ui::Compositor"*)***
  %46 = load void (%"class.ui::Compositor"*)**, void (%"class.ui::Compositor"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.ui::Compositor"*)*, void (%"class.ui::Compositor"*)** %46, i64 29
  %48 = load void (%"class.ui::Compositor"*)*, void (%"class.ui::Compositor"*)** %47, align 8
  call void %48(%"class.ui::Compositor"* nonnull %41) #16
  br label %49

49:                                               ; preds = %44, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  %50 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %51 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %50, align 8
  %52 = icmp eq %"class.aura::WindowEventDispatcher"* %51, null
  br i1 %52, label %53, label %82

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %55 = load %"class.aura::Window"*, %"class.aura::Window"** %54, align 8
  call void @_ZN4aura6Window4InitEN2ui9LayerTypeE(%"class.aura::Window"* %55, i32 0) #16
  %56 = load %"class.aura::Window"*, %"class.aura::Window"** %54, align 8
  %57 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %56, i64 0, i32 8
  store %"class.aura::WindowTreeHost"* %0, %"class.aura::WindowTreeHost"** %57, align 8
  %58 = load %"class.aura::Window"*, %"class.aura::Window"** %54, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #16
  %60 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 10, i8* %61, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #16
  %62 = getelementptr inbounds i8, i8* %59, i64 10
  store i8 0, i8* %62, align 2
  call void @_ZN4aura6Window7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.aura::Window"* %58, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #16
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #17
  br label %68

68:                                               ; preds = %53, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #16
  %69 = call i8* @_Znwm(i64 368) #17
  %70 = bitcast i8* %69 to %"class.aura::WindowEventDispatcher"*
  call void @_ZN4aura21WindowEventDispatcherC1EPNS_14WindowTreeHostE(%"class.aura::WindowEventDispatcher"* nonnull %70, %"class.aura::WindowTreeHost"* %0) #16
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.372", %"class.std::__1::unique_ptr.372"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.372"* %72 to i64*
  store i64 %71, i64* %75, align 8
  %76 = icmp eq %"class.aura::WindowEventDispatcher"* %74, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %68
  %78 = bitcast %"class.aura::WindowEventDispatcher"* %74 to void (%"class.aura::WindowEventDispatcher"*)***
  %79 = load void (%"class.aura::WindowEventDispatcher"*)**, void (%"class.aura::WindowEventDispatcher"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcher"*)** %79, i64 1
  %81 = load void (%"class.aura::WindowEventDispatcher"*)*, void (%"class.aura::WindowEventDispatcher"*)** %80, align 8
  call void %81(%"class.aura::WindowEventDispatcher"* nonnull %74) #16
  br label %82

82:                                               ; preds = %68, %77, %49
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.130* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2ui29IsPixelCanvasRecordingEnabledEv() local_unnamed_addr #1

declare void @_ZN4aura6Window4InitEN2ui9LayerTypeE(%"class.aura::Window"*, i32) local_unnamed_addr #1

declare void @_ZN4aura6Window7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.aura::Window"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN2ui10Compositor12SetRootLayerEPNS_5LayerE(%"class.ui::Compositor"*, %"class.ui::Layer"*) local_unnamed_addr #1

declare void @_ZN2ui10Compositor21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE(%"class.ui::Compositor"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost28OnAcceleratedWidgetAvailableEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %2, align 8
  %4 = bitcast %"class.aura::WindowTreeHost"* %0 to i32 (%"class.aura::WindowTreeHost"*)***
  %5 = load i32 (%"class.aura::WindowTreeHost"*)**, i32 (%"class.aura::WindowTreeHost"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %5, i64 13
  %7 = load i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %6, align 8
  %8 = tail call i32 %7(%"class.aura::WindowTreeHost"* %0) #16
  tail call void @_ZN2ui10Compositor20SetAcceleratedWidgetEj(%"class.ui::Compositor"* %3, i32 %8) #16
  %9 = load i32 (%"class.aura::WindowTreeHost"*)**, i32 (%"class.aura::WindowTreeHost"*)*** %4, align 8
  %10 = getelementptr inbounds i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %9, i64 13
  %11 = load i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %10, align 8
  %12 = tail call i32 %11(%"class.aura::WindowTreeHost"* %0) #16
  %13 = tail call i8* @_Znwm(i64 8) #17
  %14 = bitcast i8* %13 to %"class.ui::ViewProp"*
  %15 = bitcast %"class.aura::WindowTreeHost"* %0 to i8*
  tail call void @_ZN2ui8ViewPropC1EjPKcPv(%"class.ui::ViewProp"* nonnull %14, i32 %12, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @_ZN4aura12_GLOBAL__N_135kWindowTreeHostForAcceleratedWidgetE, i64 0, i64 0), i8* %15) #16
  %16 = ptrtoint i8* %13 to i64
  %17 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 13
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.408"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.ui::ViewProp"*, %"class.ui::ViewProp"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.408"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.ui::ViewProp"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %1
  tail call void @_ZN2ui8ViewPropD1Ev(%"class.ui::ViewProp"* nonnull %19) #16
  %23 = bitcast %"class.ui::ViewProp"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

declare void @_ZN2ui10Compositor20SetAcceleratedWidgetEj(%"class.ui::Compositor"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost19OnHostMovedInPixelsERKN3gfx5PointE(%"class.aura::WindowTreeHost"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %20, label %9, !prof !19

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  call void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::Point"* %1) #16
  %11 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #17
  br label %19

19:                                               ; preds = %9, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  br label %20

20:                                               ; preds = %2, %19
  %21 = phi i64 [ -6148914691236517206, %2 ], [ %11, %19 ]
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), %19 ]
  %23 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), %19 ]
  %24 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7
  %25 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %29 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %24, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 40, i1 false)
  %31 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %29, align 8, !noalias !20
  %32 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %33 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %32, align 8, !noalias !20
  %34 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %31, %33
  %35 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %35) #16
  br i1 %34, label %36, label %38

36:                                               ; preds = %20
  %37 = bitcast %"class.base::ObserverList.368"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #16, !alias.scope !20
  br label %78

38:                                               ; preds = %20
  store %"class.base::ObserverList.368"* %24, %"class.base::ObserverList.368"** %26, align 8, !alias.scope !20
  %39 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %35, %"class.base::internal::LinkNodeBase"* %39) #16
  store i64 0, i64* %27, align 8, !alias.scope !20
  %40 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 3
  %41 = load i32, i32* %40, align 8, !noalias !20
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !20
  %46 = bitcast %"class.base::ObserverList.368"* %24 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !20
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  br label %50

50:                                               ; preds = %43, %38
  %51 = phi i64 [ %49, %43 ], [ -1, %38 ]
  store i64 %51, i64* %28, align 8, !alias.scope !20
  %52 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %26, align 8, !alias.scope !20
  %53 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %52, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.base::ObserverList.368"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %55, %57
  %59 = ashr exact i64 %58, 3
  %60 = icmp ult i64 %59, %51
  %61 = select i1 %60, i64 %59, i64 %51
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %50
  %64 = inttoptr i64 %57 to %"class.base::internal::UncheckedObserverAdapter"*
  %65 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %52, i64 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %64, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %78

69:                                               ; preds = %63, %73
  %70 = phi i64 [ %71, %73 ], [ 0, %63 ]
  %71 = add nuw i64 %70, 1
  store i64 %71, i64* %27, align 8, !alias.scope !20
  %72 = icmp ult i64 %71, %61
  br i1 %72, label %73, label %78

73:                                               ; preds = %69
  %74 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %65, align 8
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %71, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %69, label %78

78:                                               ; preds = %69, %73, %36, %50, %63
  %79 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %79) #16
  %80 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %82 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %83 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %83) #16
  %85 = bitcast %"class.base::ObserverList.368"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #16, !alias.scope !23
  %86 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %26, align 8
  br label %87

87:                                               ; preds = %333, %78
  %88 = phi %"class.base::ObserverList.368"* [ %86, %78 ], [ %331, %333 ]
  %89 = icmp eq %"class.base::ObserverList.368"* %88, null
  br i1 %89, label %105, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %27, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList.368"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %28, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %90
  %104 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %80, align 8
  br label %121

105:                                              ; preds = %90, %87
  %106 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %80, align 8
  %107 = icmp eq %"class.base::ObserverList.368"* %106, null
  br i1 %107, label %221, label %108

108:                                              ; preds = %105
  %109 = load i64, i64* %81, align 8
  %110 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %106, i64 0, i32 0, i32 0, i32 1
  %111 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.base::ObserverList.368"* %106 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %112, %114
  %116 = ashr exact i64 %115, 3
  %117 = load i64, i64* %82, align 8
  %118 = icmp ult i64 %116, %117
  %119 = select i1 %118, i64 %116, i64 %117
  %120 = icmp eq i64 %109, %119
  br i1 %120, label %130, label %121

121:                                              ; preds = %108, %103
  %122 = phi %"class.base::ObserverList.368"* [ %104, %103 ], [ %106, %108 ]
  %123 = icmp eq %"class.base::ObserverList.368"* %88, %122
  %124 = load i64, i64* %27, align 8
  %125 = load i64, i64* %81, align 8
  %126 = icmp eq i64 %124, %125
  %127 = and i1 %123, %126
  br i1 %127, label %128, label %321

128:                                              ; preds = %121
  %129 = icmp eq %"class.base::ObserverList.368"* %88, null
  br i1 %129, label %221, label %130

130:                                              ; preds = %108, %128
  %131 = phi %"class.base::ObserverList.368"* [ %88, %128 ], [ %106, %108 ]
  %132 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %131, i64 0, i32 1
  %133 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %131, i64 0, i32 1, i32 0, i32 0, i32 1
  %134 = bitcast %"class.base::internal::LinkNodeBase"** %133 to %"class.base::LinkNode.370"**
  %135 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %134, align 8
  %136 = bitcast %"class.base::LinkedList.369"* %132 to %"class.base::LinkNode.370"**
  %137 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %136, align 8
  %138 = icmp eq %"class.base::LinkNode.370"* %135, %137
  br i1 %138, label %139, label %217

139:                                              ; preds = %130
  %140 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %131, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  %142 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %131, i64 0, i32 0, i32 0, i32 1
  %143 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %142, align 8
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %141, %143
  br i1 %144, label %153, label %145

145:                                              ; preds = %139, %150
  %146 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %151, %150 ], [ %141, %139 ]
  %147 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %146, i64 0, i32 0
  %148 = load i8*, i8** %147, align 8
  %149 = icmp eq i8* %148, null
  br i1 %149, label %153, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %146, i64 1
  %152 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %151, %143
  br i1 %152, label %217, label %145

153:                                              ; preds = %145, %139
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %141, %139 ], [ %146, %145 ]
  %155 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %154 to i64
  %156 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %154, %143
  br i1 %156, label %217, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %159 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %158, %143
  br i1 %159, label %212, label %160

160:                                              ; preds = %157
  %161 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %143, i64 -2, i32 0
  %162 = ptrtoint i8** %161 to i64
  %163 = sub i64 %162, %155
  %164 = lshr i64 %163, 3
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 3
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %186, label %168

168:                                              ; preds = %160, %181
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %183, %181 ], [ %158, %160 ]
  %170 = phi i64 [ %182, %181 ], [ %155, %160 ]
  %171 = phi i64 [ %184, %181 ], [ %166, %160 ]
  %172 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %169, i64 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = icmp eq i8* %173, null
  br i1 %174, label %181, label %175

175:                                              ; preds = %168
  %176 = ptrtoint i8* %173 to i64
  %177 = inttoptr i64 %170 to %"class.base::internal::UncheckedObserverAdapter"*
  %178 = inttoptr i64 %170 to i64*
  store i64 %176, i64* %178, align 8
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1
  %180 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %179 to i64
  br label %181

181:                                              ; preds = %175, %168
  %182 = phi i64 [ %170, %168 ], [ %180, %175 ]
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %169, i64 1
  %184 = add i64 %171, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %168, !llvm.loop !26

186:                                              ; preds = %181, %160
  %187 = phi i64 [ undef, %160 ], [ %182, %181 ]
  %188 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %158, %160 ], [ %183, %181 ]
  %189 = phi i64 [ %155, %160 ], [ %182, %181 ]
  %190 = icmp ult i64 %163, 24
  br i1 %190, label %208, label %191

191:                                              ; preds = %186, %423
  %192 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %425, %423 ], [ %188, %186 ]
  %193 = phi i64 [ %424, %423 ], [ %189, %186 ]
  %194 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %192, i64 0, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = icmp eq i8* %195, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %191
  %198 = ptrtoint i8* %195 to i64
  %199 = inttoptr i64 %193 to %"class.base::internal::UncheckedObserverAdapter"*
  %200 = inttoptr i64 %193 to i64*
  store i64 %198, i64* %200, align 8
  %201 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %199, i64 1
  %202 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %201 to i64
  br label %203

203:                                              ; preds = %197, %191
  %204 = phi i64 [ %193, %191 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %192, i64 1, i32 0
  %206 = load i8*, i8** %205, align 8
  %207 = icmp eq i8* %206, null
  br i1 %207, label %401, label %395

208:                                              ; preds = %423, %186
  %209 = phi i64 [ %187, %186 ], [ %424, %423 ]
  %210 = inttoptr i64 %209 to %"class.base::internal::UncheckedObserverAdapter"*
  %211 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %142, align 8
  br label %212

212:                                              ; preds = %208, %157
  %213 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %157 ], [ %211, %208 ]
  %214 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %154, %157 ], [ %210, %208 ]
  %215 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %213
  br i1 %215, label %217, label %216

216:                                              ; preds = %212
  store %"class.base::internal::UncheckedObserverAdapter"* %214, %"class.base::internal::UncheckedObserverAdapter"** %142, align 8
  br label %217

217:                                              ; preds = %150, %216, %212, %153, %130
  %218 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %80, align 8
  %219 = icmp eq %"class.base::ObserverList.368"* %218, null
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %80, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %83) #16
  br label %221

221:                                              ; preds = %105, %128, %217, %220
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %79) #16
  %222 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %26, align 8
  %223 = icmp eq %"class.base::ObserverList.368"* %222, null
  br i1 %223, label %314, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %222, i64 0, i32 1
  %226 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %222, i64 0, i32 1, i32 0, i32 0, i32 1
  %227 = bitcast %"class.base::internal::LinkNodeBase"** %226 to %"class.base::LinkNode.370"**
  %228 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %227, align 8
  %229 = bitcast %"class.base::LinkedList.369"* %225 to %"class.base::LinkNode.370"**
  %230 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %229, align 8
  %231 = icmp eq %"class.base::LinkNode.370"* %228, %230
  br i1 %231, label %232, label %310

232:                                              ; preds = %224
  %233 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %222, i64 0, i32 0, i32 0, i32 0
  %234 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  %235 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %222, i64 0, i32 0, i32 0, i32 1
  %236 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %235, align 8
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %234, %236
  br i1 %237, label %246, label %238

238:                                              ; preds = %232, %243
  %239 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %244, %243 ], [ %234, %232 ]
  %240 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %239, i64 0, i32 0
  %241 = load i8*, i8** %240, align 8
  %242 = icmp eq i8* %241, null
  br i1 %242, label %246, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %239, i64 1
  %245 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %244, %236
  br i1 %245, label %310, label %238

246:                                              ; preds = %238, %232
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %232 ], [ %239, %238 ]
  %248 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %247 to i64
  %249 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %247, %236
  br i1 %249, label %310, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %252 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %251, %236
  br i1 %252, label %305, label %253

253:                                              ; preds = %250
  %254 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %236, i64 -2, i32 0
  %255 = ptrtoint i8** %254 to i64
  %256 = sub i64 %255, %248
  %257 = lshr i64 %256, 3
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %279, label %261

261:                                              ; preds = %253, %274
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %276, %274 ], [ %251, %253 ]
  %263 = phi i64 [ %275, %274 ], [ %248, %253 ]
  %264 = phi i64 [ %277, %274 ], [ %259, %253 ]
  %265 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %262, i64 0, i32 0
  %266 = load i8*, i8** %265, align 8
  %267 = icmp eq i8* %266, null
  br i1 %267, label %274, label %268

268:                                              ; preds = %261
  %269 = ptrtoint i8* %266 to i64
  %270 = inttoptr i64 %263 to %"class.base::internal::UncheckedObserverAdapter"*
  %271 = inttoptr i64 %263 to i64*
  store i64 %269, i64* %271, align 8
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1
  %273 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %272 to i64
  br label %274

274:                                              ; preds = %268, %261
  %275 = phi i64 [ %263, %261 ], [ %273, %268 ]
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %262, i64 1
  %277 = add i64 %264, -1
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %261, !llvm.loop !27

279:                                              ; preds = %274, %253
  %280 = phi i64 [ undef, %253 ], [ %275, %274 ]
  %281 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %251, %253 ], [ %276, %274 ]
  %282 = phi i64 [ %248, %253 ], [ %275, %274 ]
  %283 = icmp ult i64 %256, 24
  br i1 %283, label %301, label %284

284:                                              ; preds = %279, %391
  %285 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %393, %391 ], [ %281, %279 ]
  %286 = phi i64 [ %392, %391 ], [ %282, %279 ]
  %287 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 0, i32 0
  %288 = load i8*, i8** %287, align 8
  %289 = icmp eq i8* %288, null
  br i1 %289, label %296, label %290

290:                                              ; preds = %284
  %291 = ptrtoint i8* %288 to i64
  %292 = inttoptr i64 %286 to %"class.base::internal::UncheckedObserverAdapter"*
  %293 = inttoptr i64 %286 to i64*
  store i64 %291, i64* %293, align 8
  %294 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %292, i64 1
  %295 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %294 to i64
  br label %296

296:                                              ; preds = %290, %284
  %297 = phi i64 [ %286, %284 ], [ %295, %290 ]
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 1, i32 0
  %299 = load i8*, i8** %298, align 8
  %300 = icmp eq i8* %299, null
  br i1 %300, label %369, label %363

301:                                              ; preds = %391, %279
  %302 = phi i64 [ %280, %279 ], [ %392, %391 ]
  %303 = inttoptr i64 %302 to %"class.base::internal::UncheckedObserverAdapter"*
  %304 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %235, align 8
  br label %305

305:                                              ; preds = %301, %250
  %306 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %250 ], [ %304, %301 ]
  %307 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %247, %250 ], [ %303, %301 ]
  %308 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %307, %306
  br i1 %308, label %310, label %309

309:                                              ; preds = %305
  store %"class.base::internal::UncheckedObserverAdapter"* %307, %"class.base::internal::UncheckedObserverAdapter"** %235, align 8
  br label %310

310:                                              ; preds = %243, %309, %305, %246, %224
  %311 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %26, align 8
  %312 = icmp eq %"class.base::ObserverList.368"* %311, null
  br i1 %312, label %314, label %313

313:                                              ; preds = %310
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %26, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %35) #16
  br label %314

314:                                              ; preds = %221, %310, %313
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #16
  %315 = icmp eq i8* %23, null
  br i1 %315, label %320, label %316

316:                                              ; preds = %314
  %317 = load i8, i8* %23, align 1
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %320, label %319

319:                                              ; preds = %316
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %22, i64 %21) #16
  br label %320

320:                                              ; preds = %314, %316, %319
  ret void

321:                                              ; preds = %121
  %322 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %88, i64 0, i32 0, i32 0, i32 0
  %323 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %322, align 8
  %324 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %124
  %325 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %324 to %"class.aura::WindowTreeHostObserver"**
  %326 = load %"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHostObserver"** %325, align 8
  %327 = bitcast %"class.aura::WindowTreeHostObserver"* %326 to void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)***
  %328 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)**, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %328, i64 1
  %330 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)** %329, align 8
  call void %330(%"class.aura::WindowTreeHostObserver"* %326, %"class.aura::WindowTreeHost"* %0, %"class.gfx::Point"* dereferenceable(8) %1) #16
  %331 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %26, align 8
  %332 = icmp eq %"class.base::ObserverList.368"* %331, null
  br i1 %332, label %333, label %334

333:                                              ; preds = %358, %354, %321, %334, %348
  br label %87

334:                                              ; preds = %321
  %335 = load i64, i64* %27, align 8
  %336 = add i64 %335, 1
  store i64 %336, i64* %27, align 8
  %337 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %331, i64 0, i32 0, i32 0, i32 1
  %338 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = bitcast %"class.base::ObserverList.368"* %331 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %339, %341
  %343 = ashr exact i64 %342, 3
  %344 = load i64, i64* %28, align 8
  %345 = icmp ult i64 %343, %344
  %346 = select i1 %345, i64 %343, i64 %344
  %347 = icmp ult i64 %336, %346
  br i1 %347, label %348, label %333

348:                                              ; preds = %334
  %349 = inttoptr i64 %341 to %"class.base::internal::UncheckedObserverAdapter"*
  %350 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %331, i64 0, i32 0, i32 0, i32 0
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 %336, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = icmp eq i8* %352, null
  br i1 %353, label %354, label %333

354:                                              ; preds = %348, %358
  %355 = phi i64 [ %356, %358 ], [ %336, %348 ]
  %356 = add nuw i64 %355, 1
  store i64 %356, i64* %27, align 8
  %357 = icmp ult i64 %356, %346
  br i1 %357, label %358, label %333

358:                                              ; preds = %354
  %359 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %350, align 8
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %359, i64 %356, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = icmp eq i8* %361, null
  br i1 %362, label %354, label %333

363:                                              ; preds = %296
  %364 = ptrtoint i8* %299 to i64
  %365 = inttoptr i64 %297 to %"class.base::internal::UncheckedObserverAdapter"*
  %366 = inttoptr i64 %297 to i64*
  store i64 %364, i64* %366, align 8
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %365, i64 1
  %368 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %367 to i64
  br label %369

369:                                              ; preds = %363, %296
  %370 = phi i64 [ %297, %296 ], [ %368, %363 ]
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 2, i32 0
  %372 = load i8*, i8** %371, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %380, label %374

374:                                              ; preds = %369
  %375 = ptrtoint i8* %372 to i64
  %376 = inttoptr i64 %370 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %370 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %369
  %381 = phi i64 [ %370, %369 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 3, i32 0
  %383 = load i8*, i8** %382, align 8
  %384 = icmp eq i8* %383, null
  br i1 %384, label %391, label %385

385:                                              ; preds = %380
  %386 = ptrtoint i8* %383 to i64
  %387 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %381 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %380
  %392 = phi i64 [ %381, %380 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 4
  %394 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %393, %236
  br i1 %394, label %301, label %284

395:                                              ; preds = %203
  %396 = ptrtoint i8* %206 to i64
  %397 = inttoptr i64 %204 to %"class.base::internal::UncheckedObserverAdapter"*
  %398 = inttoptr i64 %204 to i64*
  store i64 %396, i64* %398, align 8
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %397, i64 1
  %400 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %399 to i64
  br label %401

401:                                              ; preds = %395, %203
  %402 = phi i64 [ %204, %203 ], [ %400, %395 ]
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %192, i64 2, i32 0
  %404 = load i8*, i8** %403, align 8
  %405 = icmp eq i8* %404, null
  br i1 %405, label %412, label %406

406:                                              ; preds = %401
  %407 = ptrtoint i8* %404 to i64
  %408 = inttoptr i64 %402 to %"class.base::internal::UncheckedObserverAdapter"*
  %409 = inttoptr i64 %402 to i64*
  store i64 %407, i64* %409, align 8
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %408, i64 1
  %411 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %410 to i64
  br label %412

412:                                              ; preds = %406, %401
  %413 = phi i64 [ %402, %401 ], [ %411, %406 ]
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %192, i64 3, i32 0
  %415 = load i8*, i8** %414, align 8
  %416 = icmp eq i8* %415, null
  br i1 %416, label %423, label %417

417:                                              ; preds = %412
  %418 = ptrtoint i8* %415 to i64
  %419 = inttoptr i64 %413 to %"class.base::internal::UncheckedObserverAdapter"*
  %420 = inttoptr i64 %413 to i64*
  store i64 %418, i64* %420, align 8
  %421 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %419, i64 1
  %422 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %421 to i64
  br label %423

423:                                              ; preds = %417, %412
  %424 = phi i64 [ %413, %412 ], [ %422, %417 ]
  %425 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %192, i64 4
  %426 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %425, %143
  br i1 %426, label %208, label %191
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #11 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #16
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #16
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #16
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #16
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #16
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #16
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #17
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  ret i64 %29
}

declare void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Point"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost21OnHostResizedInPixelsERKN3gfx4SizeE(%"class.aura::WindowTreeHost"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"class.display::Display", align 8
  %7 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %8 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %9 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %10 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %9, align 8
  %11 = icmp eq %"class.ui::Compositor"* %10, null
  br i1 %11, label %400, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.display::Display"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %13) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.795 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.151 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN4aura14WindowTreeHost20OnHostDisplayChangedEv.display to i8*), i64 568, i1 false)
  %14 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %15 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %16 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  %17 = bitcast %"class.display::Screen"* %14 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %18 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %18, i64 8
  %20 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %19, align 8
  call void %20(%"class.display::Display"* nonnull sret %6, %"class.display::Screen"* %14, %"class.aura::Window"* %16) #16
  %21 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %6, i64 0, i32 4
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 10
  %25 = bitcast float* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %27 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #16
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %29 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #16
  %30 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %31 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %30, align 8
  %32 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %31, i64 15
  %33 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %32, align 8
  %34 = call { i64, i64 } %33(%"class.aura::WindowTreeHost"* %0) #16
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %36 = extractvalue { i64, i64 } %34, 0
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %38 = extractvalue { i64, i64 } %34, 1
  store i64 %38, i64* %37, align 8
  %39 = bitcast i64* %37 to %"class.gfx::Size"*
  %40 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)***
  %41 = load { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*** %40, align 8
  %42 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)** %41, i64 32
  %43 = load { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*, %"class.gfx::Size"*)** %42, align 8
  %44 = call { i64, i64 } %43(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Size"* dereferenceable(8) %39) #16
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %46 = extractvalue { i64, i64 } %44, 0
  store i64 %46, i64* %45, align 8
  %47 = extractvalue { i64, i64 } %44, 1
  store i64 %47, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #16
  %48 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %48, %"class.gfx::Rect"* nonnull dereferenceable(16) %26) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #16
  %49 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #16
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %50, align 4
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %53 = bitcast %"class.gfx::Size"* %1 to i64*
  %54 = bitcast %"class.gfx::Size"* %52 to i64*
  %55 = load i64, i64* %53, align 4
  store i64 %55, i64* %54, align 4
  %56 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %9, align 8
  %57 = getelementptr inbounds %"class.ui::Compositor", %"class.ui::Compositor"* %56, i64 0, i32 22, i32 0, i32 0, i32 0
  %58 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %57, align 8
  %59 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %58, i64 0, i32 50
  %60 = load i32, i32* %59, align 4
  switch i32 %60, label %62 [
    i32 4, label %61
    i32 6, label %61
  ]

61:                                               ; preds = %12, %12
  call void @_ZN3gfx4Rect9TransposeEv(%"class.gfx::Rect"* nonnull %3) #16
  br label %62

62:                                               ; preds = %12, %61
  %63 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  call void @_ZN4aura6Window22AllocateLocalSurfaceIdEv(%"class.aura::Window"* %63) #16
  %64 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %9, align 8
  %65 = load float, float* %24, align 8
  %66 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  %67 = call dereferenceable(24) %"class.viz::LocalSurfaceId"* @_ZN4aura6Window17GetLocalSurfaceIdEv(%"class.aura::Window"* %66) #16
  call void @_ZN2ui10Compositor15SetScaleAndSizeEfRKN3gfx4SizeERKN3viz14LocalSurfaceIdE(%"class.ui::Compositor"* %64, float %65, %"class.gfx::Size"* dereferenceable(8) %52, %"class.viz::LocalSurfaceId"* dereferenceable(24) %67) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #16
  %68 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7
  %69 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %69) #16
  %70 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 1
  %72 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 2
  %73 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %68, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 40, i1 false)
  %75 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %73, align 8, !noalias !28
  %76 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %77 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %76, align 8, !noalias !28
  %78 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %75, %77
  %79 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %79) #16
  br i1 %78, label %80, label %82

80:                                               ; preds = %62
  %81 = bitcast %"class.base::ObserverList.368"** %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #16, !alias.scope !28
  br label %122

82:                                               ; preds = %62
  store %"class.base::ObserverList.368"* %68, %"class.base::ObserverList.368"** %70, align 8, !alias.scope !28
  %83 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %79, %"class.base::internal::LinkNodeBase"* %83) #16
  store i64 0, i64* %71, align 8, !alias.scope !28
  %84 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 3
  %85 = load i32, i32* %84, align 8, !noalias !28
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %76 to i64*
  %89 = load i64, i64* %88, align 8, !noalias !28
  %90 = bitcast %"class.base::ObserverList.368"* %68 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !28
  %92 = sub i64 %89, %91
  %93 = ashr exact i64 %92, 3
  br label %94

94:                                               ; preds = %87, %82
  %95 = phi i64 [ %93, %87 ], [ -1, %82 ]
  store i64 %95, i64* %72, align 8, !alias.scope !28
  %96 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %70, align 8, !alias.scope !28
  %97 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %96, i64 0, i32 0, i32 0, i32 1
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.base::ObserverList.368"* %96 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %99, %101
  %103 = ashr exact i64 %102, 3
  %104 = icmp ult i64 %103, %95
  %105 = select i1 %104, i64 %103, i64 %95
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %122, label %107

107:                                              ; preds = %94
  %108 = inttoptr i64 %101 to %"class.base::internal::UncheckedObserverAdapter"*
  %109 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %96, i64 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %108, i64 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = icmp eq i8* %111, null
  br i1 %112, label %113, label %122

113:                                              ; preds = %107, %117
  %114 = phi i64 [ %115, %117 ], [ 0, %107 ]
  %115 = add nuw i64 %114, 1
  store i64 %115, i64* %71, align 8, !alias.scope !28
  %116 = icmp ult i64 %115, %105
  br i1 %116, label %117, label %122

117:                                              ; preds = %113
  %118 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %109, align 8
  %119 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %118, i64 %115, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %113, label %122

122:                                              ; preds = %113, %117, %80, %94, %107
  %123 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #16
  %124 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8, i64 0, i32 0, i32 1
  %125 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8, i64 0, i32 1
  %126 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8, i64 0, i32 2
  %127 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %127) #16
  %129 = bitcast %"class.base::ObserverList.368"** %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #16, !alias.scope !31
  %130 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %70, align 8
  br label %131

131:                                              ; preds = %370, %122
  %132 = phi %"class.base::ObserverList.368"* [ %130, %122 ], [ %368, %370 ]
  %133 = icmp eq %"class.base::ObserverList.368"* %132, null
  br i1 %133, label %149, label %134

134:                                              ; preds = %131
  %135 = load i64, i64* %71, align 8
  %136 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %132, i64 0, i32 0, i32 0, i32 1
  %137 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.base::ObserverList.368"* %132 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %138, %140
  %142 = ashr exact i64 %141, 3
  %143 = load i64, i64* %72, align 8
  %144 = icmp ult i64 %142, %143
  %145 = select i1 %144, i64 %142, i64 %143
  %146 = icmp eq i64 %135, %145
  br i1 %146, label %149, label %147

147:                                              ; preds = %134
  %148 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %124, align 8
  br label %165

149:                                              ; preds = %134, %131
  %150 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %124, align 8
  %151 = icmp eq %"class.base::ObserverList.368"* %150, null
  br i1 %151, label %265, label %152

152:                                              ; preds = %149
  %153 = load i64, i64* %125, align 8
  %154 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %150, i64 0, i32 0, i32 0, i32 1
  %155 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.base::ObserverList.368"* %150 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %156, %158
  %160 = ashr exact i64 %159, 3
  %161 = load i64, i64* %126, align 8
  %162 = icmp ult i64 %160, %161
  %163 = select i1 %162, i64 %160, i64 %161
  %164 = icmp eq i64 %153, %163
  br i1 %164, label %174, label %165

165:                                              ; preds = %152, %147
  %166 = phi %"class.base::ObserverList.368"* [ %148, %147 ], [ %150, %152 ]
  %167 = icmp eq %"class.base::ObserverList.368"* %132, %166
  %168 = load i64, i64* %71, align 8
  %169 = load i64, i64* %125, align 8
  %170 = icmp eq i64 %168, %169
  %171 = and i1 %167, %170
  br i1 %171, label %172, label %359

172:                                              ; preds = %165
  %173 = icmp eq %"class.base::ObserverList.368"* %132, null
  br i1 %173, label %265, label %174

174:                                              ; preds = %152, %172
  %175 = phi %"class.base::ObserverList.368"* [ %132, %172 ], [ %150, %152 ]
  %176 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %175, i64 0, i32 1
  %177 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %175, i64 0, i32 1, i32 0, i32 0, i32 1
  %178 = bitcast %"class.base::internal::LinkNodeBase"** %177 to %"class.base::LinkNode.370"**
  %179 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %178, align 8
  %180 = bitcast %"class.base::LinkedList.369"* %176 to %"class.base::LinkNode.370"**
  %181 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %180, align 8
  %182 = icmp eq %"class.base::LinkNode.370"* %179, %181
  br i1 %182, label %183, label %261

183:                                              ; preds = %174
  %184 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %175, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %184, align 8
  %186 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %175, i64 0, i32 0, i32 0, i32 1
  %187 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %186, align 8
  %188 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %185, %187
  br i1 %188, label %197, label %189

189:                                              ; preds = %183, %194
  %190 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %195, %194 ], [ %185, %183 ]
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 0, i32 0
  %192 = load i8*, i8** %191, align 8
  %193 = icmp eq i8* %192, null
  br i1 %193, label %197, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 1
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %187
  br i1 %196, label %261, label %189

197:                                              ; preds = %189, %183
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %185, %183 ], [ %190, %189 ]
  %199 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %198 to i64
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %187
  br i1 %200, label %261, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1
  %203 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %202, %187
  br i1 %203, label %256, label %204

204:                                              ; preds = %201
  %205 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %187, i64 -2, i32 0
  %206 = ptrtoint i8** %205 to i64
  %207 = sub i64 %206, %199
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = and i64 %209, 3
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %230, label %212

212:                                              ; preds = %204, %225
  %213 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %225 ], [ %202, %204 ]
  %214 = phi i64 [ %226, %225 ], [ %199, %204 ]
  %215 = phi i64 [ %228, %225 ], [ %210, %204 ]
  %216 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %213, i64 0, i32 0
  %217 = load i8*, i8** %216, align 8
  %218 = icmp eq i8* %217, null
  br i1 %218, label %225, label %219

219:                                              ; preds = %212
  %220 = ptrtoint i8* %217 to i64
  %221 = inttoptr i64 %214 to %"class.base::internal::UncheckedObserverAdapter"*
  %222 = inttoptr i64 %214 to i64*
  store i64 %220, i64* %222, align 8
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1
  %224 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %223 to i64
  br label %225

225:                                              ; preds = %219, %212
  %226 = phi i64 [ %214, %212 ], [ %224, %219 ]
  %227 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %213, i64 1
  %228 = add i64 %215, -1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %212, !llvm.loop !34

230:                                              ; preds = %225, %204
  %231 = phi i64 [ undef, %204 ], [ %226, %225 ]
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %202, %204 ], [ %227, %225 ]
  %233 = phi i64 [ %199, %204 ], [ %226, %225 ]
  %234 = icmp ult i64 %207, 24
  br i1 %234, label %252, label %235

235:                                              ; preds = %230, %461
  %236 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %463, %461 ], [ %232, %230 ]
  %237 = phi i64 [ %462, %461 ], [ %233, %230 ]
  %238 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %236, i64 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %247, label %241

241:                                              ; preds = %235
  %242 = ptrtoint i8* %239 to i64
  %243 = inttoptr i64 %237 to %"class.base::internal::UncheckedObserverAdapter"*
  %244 = inttoptr i64 %237 to i64*
  store i64 %242, i64* %244, align 8
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %246 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %245 to i64
  br label %247

247:                                              ; preds = %241, %235
  %248 = phi i64 [ %237, %235 ], [ %246, %241 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %236, i64 1, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %439, label %433

252:                                              ; preds = %461, %230
  %253 = phi i64 [ %231, %230 ], [ %462, %461 ]
  %254 = inttoptr i64 %253 to %"class.base::internal::UncheckedObserverAdapter"*
  %255 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %186, align 8
  br label %256

256:                                              ; preds = %252, %201
  %257 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %187, %201 ], [ %255, %252 ]
  %258 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %198, %201 ], [ %254, %252 ]
  %259 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %258, %257
  br i1 %259, label %261, label %260

260:                                              ; preds = %256
  store %"class.base::internal::UncheckedObserverAdapter"* %258, %"class.base::internal::UncheckedObserverAdapter"** %186, align 8
  br label %261

261:                                              ; preds = %194, %260, %256, %197, %174
  %262 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %124, align 8
  %263 = icmp eq %"class.base::ObserverList.368"* %262, null
  br i1 %263, label %265, label %264

264:                                              ; preds = %261
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %124, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %127) #16
  br label %265

265:                                              ; preds = %149, %172, %261, %264
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %123) #16
  %266 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %70, align 8
  %267 = icmp eq %"class.base::ObserverList.368"* %266, null
  br i1 %267, label %358, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %266, i64 0, i32 1
  %270 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %266, i64 0, i32 1, i32 0, i32 0, i32 1
  %271 = bitcast %"class.base::internal::LinkNodeBase"** %270 to %"class.base::LinkNode.370"**
  %272 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %271, align 8
  %273 = bitcast %"class.base::LinkedList.369"* %269 to %"class.base::LinkNode.370"**
  %274 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %273, align 8
  %275 = icmp eq %"class.base::LinkNode.370"* %272, %274
  br i1 %275, label %276, label %354

276:                                              ; preds = %268
  %277 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %266, i64 0, i32 0, i32 0, i32 0
  %278 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %277, align 8
  %279 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %266, i64 0, i32 0, i32 0, i32 1
  %280 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %279, align 8
  %281 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %278, %280
  br i1 %281, label %290, label %282

282:                                              ; preds = %276, %287
  %283 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %288, %287 ], [ %278, %276 ]
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 0, i32 0
  %285 = load i8*, i8** %284, align 8
  %286 = icmp eq i8* %285, null
  br i1 %286, label %290, label %287

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 1
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %280
  br i1 %289, label %354, label %282

290:                                              ; preds = %282, %276
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %278, %276 ], [ %283, %282 ]
  %292 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %291 to i64
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %280
  br i1 %293, label %354, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1
  %296 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %295, %280
  br i1 %296, label %349, label %297

297:                                              ; preds = %294
  %298 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %280, i64 -2, i32 0
  %299 = ptrtoint i8** %298 to i64
  %300 = sub i64 %299, %292
  %301 = lshr i64 %300, 3
  %302 = add nuw nsw i64 %301, 1
  %303 = and i64 %302, 3
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %323, label %305

305:                                              ; preds = %297, %318
  %306 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %320, %318 ], [ %295, %297 ]
  %307 = phi i64 [ %319, %318 ], [ %292, %297 ]
  %308 = phi i64 [ %321, %318 ], [ %303, %297 ]
  %309 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %306, i64 0, i32 0
  %310 = load i8*, i8** %309, align 8
  %311 = icmp eq i8* %310, null
  br i1 %311, label %318, label %312

312:                                              ; preds = %305
  %313 = ptrtoint i8* %310 to i64
  %314 = inttoptr i64 %307 to %"class.base::internal::UncheckedObserverAdapter"*
  %315 = inttoptr i64 %307 to i64*
  store i64 %313, i64* %315, align 8
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 1
  %317 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %316 to i64
  br label %318

318:                                              ; preds = %312, %305
  %319 = phi i64 [ %307, %305 ], [ %317, %312 ]
  %320 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %306, i64 1
  %321 = add i64 %308, -1
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %305, !llvm.loop !35

323:                                              ; preds = %318, %297
  %324 = phi i64 [ undef, %297 ], [ %319, %318 ]
  %325 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %295, %297 ], [ %320, %318 ]
  %326 = phi i64 [ %292, %297 ], [ %319, %318 ]
  %327 = icmp ult i64 %300, 24
  br i1 %327, label %345, label %328

328:                                              ; preds = %323, %429
  %329 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %431, %429 ], [ %325, %323 ]
  %330 = phi i64 [ %430, %429 ], [ %326, %323 ]
  %331 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 0, i32 0
  %332 = load i8*, i8** %331, align 8
  %333 = icmp eq i8* %332, null
  br i1 %333, label %340, label %334

334:                                              ; preds = %328
  %335 = ptrtoint i8* %332 to i64
  %336 = inttoptr i64 %330 to %"class.base::internal::UncheckedObserverAdapter"*
  %337 = inttoptr i64 %330 to i64*
  store i64 %335, i64* %337, align 8
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 1
  %339 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %338 to i64
  br label %340

340:                                              ; preds = %334, %328
  %341 = phi i64 [ %330, %328 ], [ %339, %334 ]
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 1, i32 0
  %343 = load i8*, i8** %342, align 8
  %344 = icmp eq i8* %343, null
  br i1 %344, label %407, label %401

345:                                              ; preds = %429, %323
  %346 = phi i64 [ %324, %323 ], [ %430, %429 ]
  %347 = inttoptr i64 %346 to %"class.base::internal::UncheckedObserverAdapter"*
  %348 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %279, align 8
  br label %349

349:                                              ; preds = %345, %294
  %350 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %280, %294 ], [ %348, %345 ]
  %351 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %291, %294 ], [ %347, %345 ]
  %352 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %351, %350
  br i1 %352, label %354, label %353

353:                                              ; preds = %349
  store %"class.base::internal::UncheckedObserverAdapter"* %351, %"class.base::internal::UncheckedObserverAdapter"** %279, align 8
  br label %354

354:                                              ; preds = %287, %353, %349, %290, %268
  %355 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %70, align 8
  %356 = icmp eq %"class.base::ObserverList.368"* %355, null
  br i1 %356, label %358, label %357

357:                                              ; preds = %354
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %70, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %79) #16
  br label %358

358:                                              ; preds = %265, %354, %357
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %69) #16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %13) #16
  br label %400

359:                                              ; preds = %165
  %360 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %132, i64 0, i32 0, i32 0, i32 0
  %361 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %360, align 8
  %362 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 %168
  %363 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %362 to %"class.aura::WindowTreeHostObserver"**
  %364 = load %"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHostObserver"** %363, align 8
  %365 = bitcast %"class.aura::WindowTreeHostObserver"* %364 to void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)***
  %366 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)*** %365, align 8
  %367 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)** %366, align 8
  call void %367(%"class.aura::WindowTreeHostObserver"* %364, %"class.aura::WindowTreeHost"* %0) #16
  %368 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %70, align 8
  %369 = icmp eq %"class.base::ObserverList.368"* %368, null
  br i1 %369, label %370, label %371

370:                                              ; preds = %395, %391, %359, %371, %385
  br label %131

371:                                              ; preds = %359
  %372 = load i64, i64* %71, align 8
  %373 = add i64 %372, 1
  store i64 %373, i64* %71, align 8
  %374 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %368, i64 0, i32 0, i32 0, i32 1
  %375 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %374 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = bitcast %"class.base::ObserverList.368"* %368 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = sub i64 %376, %378
  %380 = ashr exact i64 %379, 3
  %381 = load i64, i64* %72, align 8
  %382 = icmp ult i64 %380, %381
  %383 = select i1 %382, i64 %380, i64 %381
  %384 = icmp ult i64 %373, %383
  br i1 %384, label %385, label %370

385:                                              ; preds = %371
  %386 = inttoptr i64 %378 to %"class.base::internal::UncheckedObserverAdapter"*
  %387 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %368, i64 0, i32 0, i32 0, i32 0
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %386, i64 %373, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %391, label %370

391:                                              ; preds = %385, %395
  %392 = phi i64 [ %393, %395 ], [ %373, %385 ]
  %393 = add nuw i64 %392, 1
  store i64 %393, i64* %71, align 8
  %394 = icmp ult i64 %393, %383
  br i1 %394, label %395, label %370

395:                                              ; preds = %391
  %396 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %387, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 %393, i32 0
  %398 = load i8*, i8** %397, align 8
  %399 = icmp eq i8* %398, null
  br i1 %399, label %391, label %370

400:                                              ; preds = %2, %358
  ret void

401:                                              ; preds = %340
  %402 = ptrtoint i8* %343 to i64
  %403 = inttoptr i64 %341 to %"class.base::internal::UncheckedObserverAdapter"*
  %404 = inttoptr i64 %341 to i64*
  store i64 %402, i64* %404, align 8
  %405 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %403, i64 1
  %406 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %405 to i64
  br label %407

407:                                              ; preds = %401, %340
  %408 = phi i64 [ %341, %340 ], [ %406, %401 ]
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 2, i32 0
  %410 = load i8*, i8** %409, align 8
  %411 = icmp eq i8* %410, null
  br i1 %411, label %418, label %412

412:                                              ; preds = %407
  %413 = ptrtoint i8* %410 to i64
  %414 = inttoptr i64 %408 to %"class.base::internal::UncheckedObserverAdapter"*
  %415 = inttoptr i64 %408 to i64*
  store i64 %413, i64* %415, align 8
  %416 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %414, i64 1
  %417 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %416 to i64
  br label %418

418:                                              ; preds = %412, %407
  %419 = phi i64 [ %408, %407 ], [ %417, %412 ]
  %420 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 3, i32 0
  %421 = load i8*, i8** %420, align 8
  %422 = icmp eq i8* %421, null
  br i1 %422, label %429, label %423

423:                                              ; preds = %418
  %424 = ptrtoint i8* %421 to i64
  %425 = inttoptr i64 %419 to %"class.base::internal::UncheckedObserverAdapter"*
  %426 = inttoptr i64 %419 to i64*
  store i64 %424, i64* %426, align 8
  %427 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %425, i64 1
  %428 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %427 to i64
  br label %429

429:                                              ; preds = %423, %418
  %430 = phi i64 [ %419, %418 ], [ %428, %423 ]
  %431 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 4
  %432 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %431, %280
  br i1 %432, label %345, label %328

433:                                              ; preds = %247
  %434 = ptrtoint i8* %250 to i64
  %435 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %436 = inttoptr i64 %248 to i64*
  store i64 %434, i64* %436, align 8
  %437 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %435, i64 1
  %438 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %437 to i64
  br label %439

439:                                              ; preds = %433, %247
  %440 = phi i64 [ %248, %247 ], [ %438, %433 ]
  %441 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %236, i64 2, i32 0
  %442 = load i8*, i8** %441, align 8
  %443 = icmp eq i8* %442, null
  br i1 %443, label %450, label %444

444:                                              ; preds = %439
  %445 = ptrtoint i8* %442 to i64
  %446 = inttoptr i64 %440 to %"class.base::internal::UncheckedObserverAdapter"*
  %447 = inttoptr i64 %440 to i64*
  store i64 %445, i64* %447, align 8
  %448 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %446, i64 1
  %449 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %448 to i64
  br label %450

450:                                              ; preds = %444, %439
  %451 = phi i64 [ %440, %439 ], [ %449, %444 ]
  %452 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %236, i64 3, i32 0
  %453 = load i8*, i8** %452, align 8
  %454 = icmp eq i8* %453, null
  br i1 %454, label %461, label %455

455:                                              ; preds = %450
  %456 = ptrtoint i8* %453 to i64
  %457 = inttoptr i64 %451 to %"class.base::internal::UncheckedObserverAdapter"*
  %458 = inttoptr i64 %451 to i64*
  store i64 %456, i64* %458, align 8
  %459 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %457, i64 1
  %460 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %459 to i64
  br label %461

461:                                              ; preds = %455, %450
  %462 = phi i64 [ %451, %450 ], [ %460, %455 ]
  %463 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %236, i64 4
  %464 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %463, %187
  br i1 %464, label %252, label %235
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost22OnHostWorkspaceChangedEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7
  %5 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !36
  %12 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !36
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #16
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList.368"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #16, !alias.scope !36
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList.368"* %4, %"class.base::ObserverList.368"** %6, align 8, !alias.scope !36
  %19 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #16
  store i64 0, i64* %7, align 8, !alias.scope !36
  %20 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 3
  %21 = load i32, i32* %20, align 8, !noalias !36
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !36
  %26 = bitcast %"class.base::ObserverList.368"* %4 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !36
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8, !alias.scope !36
  %32 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8, !alias.scope !36
  %33 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList.368"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8, !alias.scope !36
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %53, %16, %30, %43
  %59 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #16
  %60 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #16
  %65 = bitcast %"class.base::ObserverList.368"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #16, !alias.scope !39
  %66 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8
  br label %67

67:                                               ; preds = %307, %58
  %68 = phi %"class.base::ObserverList.368"* [ %66, %58 ], [ %305, %307 ]
  %69 = icmp eq %"class.base::ObserverList.368"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList.368"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = load i64, i64* %8, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %60, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %60, align 8
  %87 = icmp eq %"class.base::ObserverList.368"* %86, null
  br i1 %87, label %201, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %61, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList.368"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %62, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList.368"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList.368"* %68, %102
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %61, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %295

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList.368"* %68, null
  br i1 %109, label %201, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList.368"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode.370"**
  %115 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %114, align 8
  %116 = bitcast %"class.base::LinkedList.369"* %112 to %"class.base::LinkNode.370"**
  %117 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode.370"* %115, %117
  br i1 %118, label %119, label %197

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %121, %123
  br i1 %124, label %133, label %125

125:                                              ; preds = %119, %130
  %126 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %130 ], [ %121, %119 ]
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 1
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %123
  br i1 %132, label %197, label %125

133:                                              ; preds = %125, %119
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %121, %119 ], [ %126, %125 ]
  %135 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %134 to i64
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %123
  br i1 %136, label %197, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %123
  br i1 %139, label %192, label %140

140:                                              ; preds = %137
  %141 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 -2, i32 0
  %142 = ptrtoint i8** %141 to i64
  %143 = sub i64 %142, %135
  %144 = lshr i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %140, %161
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %161 ], [ %138, %140 ]
  %150 = phi i64 [ %162, %161 ], [ %135, %140 ]
  %151 = phi i64 [ %164, %161 ], [ %146, %140 ]
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i8* %153 to i64
  %157 = inttoptr i64 %150 to %"class.base::internal::UncheckedObserverAdapter"*
  %158 = inttoptr i64 %150 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  br label %161

161:                                              ; preds = %155, %148
  %162 = phi i64 [ %150, %148 ], [ %160, %155 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %164 = add i64 %151, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %148, !llvm.loop !42

166:                                              ; preds = %161, %140
  %167 = phi i64 [ undef, %140 ], [ %162, %161 ]
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %140 ], [ %163, %161 ]
  %169 = phi i64 [ %135, %140 ], [ %162, %161 ]
  %170 = icmp ult i64 %143, 24
  br i1 %170, label %188, label %171

171:                                              ; preds = %166, %397
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %168, %166 ]
  %173 = phi i64 [ %398, %397 ], [ %169, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %173 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %171
  %184 = phi i64 [ %173, %171 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %375, label %369

188:                                              ; preds = %397, %166
  %189 = phi i64 [ %167, %166 ], [ %398, %397 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %192

192:                                              ; preds = %188, %137
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %137 ], [ %191, %188 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %137 ], [ %190, %188 ]
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %194, %193
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  store %"class.base::internal::UncheckedObserverAdapter"* %194, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %197

197:                                              ; preds = %130, %196, %192, %133, %110
  %198 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %60, align 8
  %199 = icmp eq %"class.base::ObserverList.368"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #16
  br label %201

201:                                              ; preds = %85, %108, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #16
  %202 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8
  %203 = icmp eq %"class.base::ObserverList.368"* %202, null
  br i1 %203, label %294, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %202, i64 0, i32 1
  %206 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %202, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.base::internal::LinkNodeBase"** %206 to %"class.base::LinkNode.370"**
  %208 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %207, align 8
  %209 = bitcast %"class.base::LinkedList.369"* %205 to %"class.base::LinkNode.370"**
  %210 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %209, align 8
  %211 = icmp eq %"class.base::LinkNode.370"* %208, %210
  br i1 %211, label %212, label %290

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %202, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %202, i64 0, i32 0, i32 0, i32 1
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %212, %223
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %223 ], [ %214, %212 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %216
  br i1 %225, label %290, label %218

226:                                              ; preds = %218, %212
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %214, %212 ], [ %219, %218 ]
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %216
  br i1 %229, label %290, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %216
  br i1 %232, label %285, label %233

233:                                              ; preds = %230
  %234 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 -2, i32 0
  %235 = ptrtoint i8** %234 to i64
  %236 = sub i64 %235, %228
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %233, %254
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %254 ], [ %231, %233 ]
  %243 = phi i64 [ %255, %254 ], [ %228, %233 ]
  %244 = phi i64 [ %257, %254 ], [ %239, %233 ]
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = ptrtoint i8* %246 to i64
  %250 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %251 = inttoptr i64 %243 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %253 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %252 to i64
  br label %254

254:                                              ; preds = %248, %241
  %255 = phi i64 [ %243, %241 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %257 = add i64 %244, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %241, !llvm.loop !43

259:                                              ; preds = %254, %233
  %260 = phi i64 [ undef, %233 ], [ %255, %254 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %233 ], [ %256, %254 ]
  %262 = phi i64 [ %228, %233 ], [ %255, %254 ]
  %263 = icmp ult i64 %236, 24
  br i1 %263, label %281, label %264

264:                                              ; preds = %259, %365
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %261, %259 ]
  %266 = phi i64 [ %366, %365 ], [ %262, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi i64 [ %266, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %343, label %337

281:                                              ; preds = %365, %259
  %282 = phi i64 [ %260, %259 ], [ %366, %365 ]
  %283 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %285

285:                                              ; preds = %281, %230
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %230 ], [ %284, %281 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %230 ], [ %283, %281 ]
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %287, %286
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  store %"class.base::internal::UncheckedObserverAdapter"* %287, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %290

290:                                              ; preds = %223, %289, %285, %226, %204
  %291 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8
  %292 = icmp eq %"class.base::ObserverList.368"* %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #16
  br label %294

294:                                              ; preds = %201, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #16
  ret void

295:                                              ; preds = %101
  %296 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %68, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %296, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 %104
  %299 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %298 to %"class.aura::WindowTreeHostObserver"**
  %300 = load %"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHostObserver"** %299, align 8
  %301 = bitcast %"class.aura::WindowTreeHostObserver"* %300 to void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)***
  %302 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)** %302, i64 2
  %304 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)** %303, align 8
  call void %304(%"class.aura::WindowTreeHostObserver"* %300, %"class.aura::WindowTreeHost"* %0) #16
  %305 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8
  %306 = icmp eq %"class.base::ObserverList.368"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %295, %308, %322
  br label %67

308:                                              ; preds = %295
  %309 = load i64, i64* %7, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %7, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList.368"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %8, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %7, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %276
  %338 = ptrtoint i8* %279 to i64
  %339 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %277 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %276
  %344 = phi i64 [ %277, %276 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %216
  br i1 %368, label %281, label %264

369:                                              ; preds = %183
  %370 = ptrtoint i8* %186 to i64
  %371 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %184 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %183
  %376 = phi i64 [ %184, %183 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %123
  br i1 %400, label %188, label %171
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost20OnHostDisplayChangedEv(%"class.aura::WindowTreeHost"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.display::Display", align 8
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %3, align 8
  %5 = icmp eq %"class.ui::Compositor"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.display::Display"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %7) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.795 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.151 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN4aura14WindowTreeHost20OnHostDisplayChangedEv.display to i8*), i64 568, i1 false)
  %8 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #16
  %9 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = bitcast %"class.display::Screen"* %8 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %12 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %12, i64 8
  %14 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %13, align 8
  call void %14(%"class.display::Display"* nonnull sret %2, %"class.display::Screen"* %8, %"class.aura::Window"* %10) #16
  %15 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %3, align 8
  %16 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 10
  call void @_ZN2ui10Compositor21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE(%"class.ui::Compositor"* %15, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %16) #16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %7) #16
  br label %17

17:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost20OnHostCloseRequestedEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7
  %5 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !44
  %12 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !44
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #16
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList.368"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #16, !alias.scope !44
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList.368"* %4, %"class.base::ObserverList.368"** %6, align 8, !alias.scope !44
  %19 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #16
  store i64 0, i64* %7, align 8, !alias.scope !44
  %20 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 3
  %21 = load i32, i32* %20, align 8, !noalias !44
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !44
  %26 = bitcast %"class.base::ObserverList.368"* %4 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !44
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8, !alias.scope !44
  %32 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8, !alias.scope !44
  %33 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList.368"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8, !alias.scope !44
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %53, %16, %30, %43
  %59 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #16
  %60 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #16
  %65 = bitcast %"class.base::ObserverList.368"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #16, !alias.scope !47
  %66 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8
  br label %67

67:                                               ; preds = %307, %58
  %68 = phi %"class.base::ObserverList.368"* [ %66, %58 ], [ %305, %307 ]
  %69 = icmp eq %"class.base::ObserverList.368"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList.368"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = load i64, i64* %8, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %60, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %60, align 8
  %87 = icmp eq %"class.base::ObserverList.368"* %86, null
  br i1 %87, label %201, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %61, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList.368"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %62, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList.368"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList.368"* %68, %102
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %61, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %295

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList.368"* %68, null
  br i1 %109, label %201, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList.368"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode.370"**
  %115 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %114, align 8
  %116 = bitcast %"class.base::LinkedList.369"* %112 to %"class.base::LinkNode.370"**
  %117 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode.370"* %115, %117
  br i1 %118, label %119, label %197

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %121, %123
  br i1 %124, label %133, label %125

125:                                              ; preds = %119, %130
  %126 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %130 ], [ %121, %119 ]
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 1
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %123
  br i1 %132, label %197, label %125

133:                                              ; preds = %125, %119
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %121, %119 ], [ %126, %125 ]
  %135 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %134 to i64
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %123
  br i1 %136, label %197, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %123
  br i1 %139, label %192, label %140

140:                                              ; preds = %137
  %141 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 -2, i32 0
  %142 = ptrtoint i8** %141 to i64
  %143 = sub i64 %142, %135
  %144 = lshr i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %140, %161
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %161 ], [ %138, %140 ]
  %150 = phi i64 [ %162, %161 ], [ %135, %140 ]
  %151 = phi i64 [ %164, %161 ], [ %146, %140 ]
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i8* %153 to i64
  %157 = inttoptr i64 %150 to %"class.base::internal::UncheckedObserverAdapter"*
  %158 = inttoptr i64 %150 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  br label %161

161:                                              ; preds = %155, %148
  %162 = phi i64 [ %150, %148 ], [ %160, %155 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %164 = add i64 %151, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %148, !llvm.loop !50

166:                                              ; preds = %161, %140
  %167 = phi i64 [ undef, %140 ], [ %162, %161 ]
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %140 ], [ %163, %161 ]
  %169 = phi i64 [ %135, %140 ], [ %162, %161 ]
  %170 = icmp ult i64 %143, 24
  br i1 %170, label %188, label %171

171:                                              ; preds = %166, %397
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %168, %166 ]
  %173 = phi i64 [ %398, %397 ], [ %169, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %173 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %171
  %184 = phi i64 [ %173, %171 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %375, label %369

188:                                              ; preds = %397, %166
  %189 = phi i64 [ %167, %166 ], [ %398, %397 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %192

192:                                              ; preds = %188, %137
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %137 ], [ %191, %188 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %137 ], [ %190, %188 ]
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %194, %193
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  store %"class.base::internal::UncheckedObserverAdapter"* %194, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %197

197:                                              ; preds = %130, %196, %192, %133, %110
  %198 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %60, align 8
  %199 = icmp eq %"class.base::ObserverList.368"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #16
  br label %201

201:                                              ; preds = %85, %108, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #16
  %202 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8
  %203 = icmp eq %"class.base::ObserverList.368"* %202, null
  br i1 %203, label %294, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %202, i64 0, i32 1
  %206 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %202, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.base::internal::LinkNodeBase"** %206 to %"class.base::LinkNode.370"**
  %208 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %207, align 8
  %209 = bitcast %"class.base::LinkedList.369"* %205 to %"class.base::LinkNode.370"**
  %210 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %209, align 8
  %211 = icmp eq %"class.base::LinkNode.370"* %208, %210
  br i1 %211, label %212, label %290

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %202, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %202, i64 0, i32 0, i32 0, i32 1
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %212, %223
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %223 ], [ %214, %212 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %216
  br i1 %225, label %290, label %218

226:                                              ; preds = %218, %212
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %214, %212 ], [ %219, %218 ]
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %216
  br i1 %229, label %290, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %216
  br i1 %232, label %285, label %233

233:                                              ; preds = %230
  %234 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 -2, i32 0
  %235 = ptrtoint i8** %234 to i64
  %236 = sub i64 %235, %228
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %233, %254
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %254 ], [ %231, %233 ]
  %243 = phi i64 [ %255, %254 ], [ %228, %233 ]
  %244 = phi i64 [ %257, %254 ], [ %239, %233 ]
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = ptrtoint i8* %246 to i64
  %250 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %251 = inttoptr i64 %243 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %253 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %252 to i64
  br label %254

254:                                              ; preds = %248, %241
  %255 = phi i64 [ %243, %241 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %257 = add i64 %244, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %241, !llvm.loop !51

259:                                              ; preds = %254, %233
  %260 = phi i64 [ undef, %233 ], [ %255, %254 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %233 ], [ %256, %254 ]
  %262 = phi i64 [ %228, %233 ], [ %255, %254 ]
  %263 = icmp ult i64 %236, 24
  br i1 %263, label %281, label %264

264:                                              ; preds = %259, %365
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %261, %259 ]
  %266 = phi i64 [ %366, %365 ], [ %262, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi i64 [ %266, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %343, label %337

281:                                              ; preds = %365, %259
  %282 = phi i64 [ %260, %259 ], [ %366, %365 ]
  %283 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %285

285:                                              ; preds = %281, %230
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %230 ], [ %284, %281 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %230 ], [ %283, %281 ]
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %287, %286
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  store %"class.base::internal::UncheckedObserverAdapter"* %287, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %290

290:                                              ; preds = %223, %289, %285, %226, %204
  %291 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8
  %292 = icmp eq %"class.base::ObserverList.368"* %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #16
  br label %294

294:                                              ; preds = %201, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #16
  ret void

295:                                              ; preds = %101
  %296 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %68, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %296, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 %104
  %299 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %298 to %"class.aura::WindowTreeHostObserver"**
  %300 = load %"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHostObserver"** %299, align 8
  %301 = bitcast %"class.aura::WindowTreeHostObserver"* %300 to void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)***
  %302 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)**, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)** %302, i64 3
  %304 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)** %303, align 8
  call void %304(%"class.aura::WindowTreeHostObserver"* %300, %"class.aura::WindowTreeHost"* %0) #16
  %305 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %6, align 8
  %306 = icmp eq %"class.base::ObserverList.368"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %295, %308, %322
  br label %67

308:                                              ; preds = %295
  %309 = load i64, i64* %7, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %7, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList.368"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %8, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %7, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %276
  %338 = ptrtoint i8* %279 to i64
  %339 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %277 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %276
  %344 = phi i64 [ %277, %276 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %216
  br i1 %368, label %281, label %264

369:                                              ; preds = %183
  %370 = ptrtoint i8* %186 to i64
  %371 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %184 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %183
  %376 = phi i64 [ %184, %183 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %123
  br i1 %400, label %188, label %171
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost23OnHostLostWindowCaptureEv(%"class.aura::WindowTreeHost"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 4
  %3 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.aura::Window"* @_ZN4aura6client16GetCaptureWindowEPNS_6WindowE(%"class.aura::Window"* nonnull %3) #16
  %7 = icmp eq %"class.aura::Window"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* nonnull %6) #16
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  %11 = icmp eq %"class.aura::Window"* %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @_ZN4aura6Window14ReleaseCaptureEv(%"class.aura::Window"* nonnull %6) #16
  br label %13

13:                                               ; preds = %8, %12, %5, %1
  ret void
}

declare %"class.aura::Window"* @_ZN4aura6client16GetCaptureWindowEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4aura6Window14ReleaseCaptureEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost23OnDisplayMetricsChangedERKN7display7DisplayEj(%"class.aura::WindowTreeHost"*, %"class.display::Display"* dereferenceable(568), i32) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = and i32 %2, 64
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %9 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %8, align 8
  %10 = icmp eq %"class.ui::Compositor"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.aura::WindowTreeHost"* %0 to i64 (%"class.aura::WindowTreeHost"*)***
  %15 = load i64 (%"class.aura::WindowTreeHost"*)**, i64 (%"class.aura::WindowTreeHost"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %15, i64 11
  %17 = load i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %16, align 8
  %18 = tail call i64 %17(%"class.aura::WindowTreeHost"* %0) #16
  %19 = icmp eq i64 %13, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %11
  %21 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %8, align 8
  %22 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 10
  tail call void @_ZN2ui10Compositor21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE(%"class.ui::Compositor"* %21, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %22) #16
  br label %23

23:                                               ; preds = %7, %3, %20, %11
  %24 = and i32 %2, 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %47, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.aura::WindowTreeHost"* %0 to i64 (%"class.aura::WindowTreeHost"*)***
  %30 = load i64 (%"class.aura::WindowTreeHost"*)**, i64 (%"class.aura::WindowTreeHost"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %30, i64 11
  %32 = load i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %31, align 8
  %33 = tail call i64 %32(%"class.aura::WindowTreeHost"* %0) #16
  %34 = icmp eq i64 %28, %33
  br i1 %34, label %35, label %47

35:                                               ; preds = %26
  %36 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #16
  %37 = bitcast %"class.aura::WindowTreeHost"* %0 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %38 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %37, align 8
  %39 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %38, i64 15
  %40 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %39, align 8
  %41 = tail call { i64, i64 } %40(%"class.aura::WindowTreeHost"* %0) #16
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %43 = extractvalue { i64, i64 } %41, 0
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %45 = extractvalue { i64, i64 } %41, 1
  store i64 %45, i64* %44, align 8
  %46 = bitcast i64* %44 to %"class.gfx::Size"*
  call void @_ZN4aura14WindowTreeHost21OnHostResizedInPixelsERKN3gfx4SizeE(%"class.aura::WindowTreeHost"* %0, %"class.gfx::Size"* dereferenceable(8) %46)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #16
  br label %47

47:                                               ; preds = %23, %35, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N4aura14WindowTreeHost23OnDisplayMetricsChangedERKN7display7DisplayEj(%"class.aura::WindowTreeHost"*, %"class.display::Display"* dereferenceable(568), i32) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 -1, i32 13
  %6 = bitcast %"class.std::__1::unique_ptr.408"* %5 to %"class.aura::WindowTreeHost"*
  %7 = and i32 %2, 64
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.408"* %5, i64 19
  %11 = bitcast %"class.std::__1::unique_ptr.408"* %10 to %"class.ui::Compositor"**
  %12 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %11, align 8
  %13 = icmp eq %"class.ui::Compositor"* %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.408"* %5 to i64 (%"class.aura::WindowTreeHost"*)***
  %18 = load i64 (%"class.aura::WindowTreeHost"*)**, i64 (%"class.aura::WindowTreeHost"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %18, i64 11
  %20 = load i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %19, align 8
  %21 = tail call i64 %20(%"class.aura::WindowTreeHost"* %6) #16
  %22 = icmp eq i64 %16, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %14
  %24 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %11, align 8
  %25 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 10
  tail call void @_ZN2ui10Compositor21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE(%"class.ui::Compositor"* %24, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %25) #16
  br label %26

26:                                               ; preds = %23, %14, %9, %3
  %27 = and i32 %2, 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %50, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.408"* %5 to i64 (%"class.aura::WindowTreeHost"*)***
  %33 = load i64 (%"class.aura::WindowTreeHost"*)**, i64 (%"class.aura::WindowTreeHost"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %33, i64 11
  %35 = load i64 (%"class.aura::WindowTreeHost"*)*, i64 (%"class.aura::WindowTreeHost"*)** %34, align 8
  %36 = tail call i64 %35(%"class.aura::WindowTreeHost"* %6) #16
  %37 = icmp eq i64 %31, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %29
  %39 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #16
  %40 = bitcast %"class.std::__1::unique_ptr.408"* %5 to { i64, i64 } (%"class.aura::WindowTreeHost"*)***
  %41 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)**, { i64, i64 } (%"class.aura::WindowTreeHost"*)*** %40, align 8
  %42 = getelementptr inbounds { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %41, i64 15
  %43 = load { i64, i64 } (%"class.aura::WindowTreeHost"*)*, { i64, i64 } (%"class.aura::WindowTreeHost"*)** %42, align 8
  %44 = tail call { i64, i64 } %43(%"class.aura::WindowTreeHost"* %6) #16
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %46 = extractvalue { i64, i64 } %44, 0
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %48 = extractvalue { i64, i64 } %44, 1
  store i64 %48, i64* %47, align 8
  %49 = bitcast i64* %47 to %"class.gfx::Size"*
  call void @_ZN4aura14WindowTreeHost21OnHostResizedInPixelsERKN3gfx4SizeE(%"class.aura::WindowTreeHost"* %6, %"class.gfx::Size"* dereferenceable(8) %49) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #16
  br label %50

50:                                               ; preds = %26, %29, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK4aura14WindowTreeHost38GetTransformedRootWindowBoundsInPixelsERKN3gfx4SizeE(%"class.aura::WindowTreeHost"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::RectF", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = bitcast %"class.gfx::RectF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %3, i64 0, i32 1, i32 1
  %10 = bitcast %"class.gfx::Size"* %1 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  store float 0.000000e+00, float* %6, align 4
  store float 0.000000e+00, float* %7, align 4
  %15 = icmp sgt i32 %12, 0
  %16 = select i1 %15, i32 %12, i32 0
  %17 = sitofp i32 %16 to float
  store float %17, float* %8, align 4
  %18 = icmp sgt i32 %14, 0
  %19 = select i1 %18, i32 %14, i32 0
  %20 = sitofp i32 %19 to float
  store float %20, float* %9, align 4
  %21 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %21) #16
  %22 = bitcast %"class.aura::WindowTreeHost"* %0 to void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)***
  %23 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)**, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %23, i64 5
  %25 = load void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)*, void (%"class.gfx::Transform"*, %"class.aura::WindowTreeHost"*)** %24, align 8
  call void %25(%"class.gfx::Transform"* nonnull sret %4, %"class.aura::WindowTreeHost"* %0) #16
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* nonnull %4, %"class.gfx::RectF"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %21) #16
  %26 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret { i64, i64 } %26
}

declare void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4aura14WindowTreeHost31SetNativeWindowOcclusionEnabledEb(%"class.aura::WindowTreeHost"* nocapture, i1 zeroext) local_unnamed_addr #10 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 17
  store i8 %3, i8* %4, align 2
  ret void
}

declare %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4aura21WindowEventDispatcher27OnCursorMovedToRootLocationERKN3gfx5PointE(%"class.aura::WindowEventDispatcher"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost18OnCompositingEndedEPN2ui10CompositorE(%"class.aura::WindowTreeHost"* nocapture, %"class.ui::Compositor"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 16
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %8 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %7, align 8
  tail call void @_ZN4aura21WindowEventDispatcher19ReleasePointerMovesEv(%"class.aura::WindowEventDispatcher"* %8) #16
  store i8 0, i8* %3, align 1
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN4aura21WindowEventDispatcher19ReleasePointerMovesEv(%"class.aura::WindowEventDispatcher"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N4aura14WindowTreeHost18OnCompositingEndedEPN2ui10CompositorE(%"class.aura::WindowTreeHost"* nocapture, %"class.ui::Compositor"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 -1, i32 11, i32 4, i32 1, i32 2, i32 1
  %4 = bitcast %struct.SkISize* %3 to %"class.aura::WindowTreeHost"*
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %4, i64 0, i32 16
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %3, i64 18
  %10 = bitcast %struct.SkISize* %9 to %"class.aura::WindowEventDispatcher"**
  %11 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %10, align 8
  tail call void @_ZN4aura21WindowEventDispatcher19ReleasePointerMovesEv(%"class.aura::WindowEventDispatcher"* %11) #16
  store i8 0, i8* %5, align 1
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost26OnCompositingChildResizingEPN2ui10CompositorE(%"class.aura::WindowTreeHost"* nocapture, %"class.ui::Compositor"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #16
  %4 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %3, i64 0, i32 16
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 16
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %13 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %12, align 8
  tail call void @_ZN4aura21WindowEventDispatcher16HoldPointerMovesEv(%"class.aura::WindowEventDispatcher"* %13) #16
  store i8 1, i8* %8, align 1
  br label %14

14:                                               ; preds = %2, %7, %11
  ret void
}

declare void @_ZN4aura21WindowEventDispatcher16HoldPointerMovesEv(%"class.aura::WindowEventDispatcher"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N4aura14WindowTreeHost26OnCompositingChildResizingEPN2ui10CompositorE(%"class.aura::WindowTreeHost"* nocapture, %"class.ui::Compositor"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 -1, i32 11, i32 4, i32 1, i32 2, i32 1
  %4 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #16
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %4, i64 0, i32 16
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.SkISize* %3 to %"class.aura::WindowTreeHost"*
  %10 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %9, i64 0, i32 16
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %3, i64 18
  %15 = bitcast %struct.SkISize* %14 to %"class.aura::WindowEventDispatcher"**
  %16 = load %"class.aura::WindowEventDispatcher"*, %"class.aura::WindowEventDispatcher"** %15, align 8
  tail call void @_ZN4aura21WindowEventDispatcher16HoldPointerMovesEv(%"class.aura::WindowEventDispatcher"* %16) #16
  store i8 1, i8* %10, align 1
  br label %17

17:                                               ; preds = %2, %8, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura14WindowTreeHost29OnFrameSinksToThrottleUpdatedERKN4base8internal9flat_treeIN3viz11FrameSinkIdENS1_8identityENSt3__14lessIvEENS7_6vectorIS5_NS7_9allocatorIS5_EEEEEE(%"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7
  %6 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !52
  %13 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !52
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #16
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList.368"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #16, !alias.scope !52
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList.368"* %5, %"class.base::ObserverList.368"** %7, align 8, !alias.scope !52
  %20 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #16
  store i64 0, i64* %8, align 8, !alias.scope !52
  %21 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 0, i32 7, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !52
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !52
  %27 = bitcast %"class.base::ObserverList.368"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !52
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !52
  %33 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %7, align 8, !alias.scope !52
  %34 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList.368"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !52
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #16
  %61 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<aura::WindowTreeHostObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #16
  %66 = bitcast %"class.base::ObserverList.368"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #16, !alias.scope !55
  %67 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %7, align 8
  br label %68

68:                                               ; preds = %308, %59
  %69 = phi %"class.base::ObserverList.368"* [ %67, %59 ], [ %306, %308 ]
  %70 = icmp eq %"class.base::ObserverList.368"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList.368"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList.368"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList.368"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList.368"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList.368"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList.368"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList.368"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode.370"**
  %116 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %115, align 8
  %117 = bitcast %"class.base::LinkedList.369"* %113 to %"class.base::LinkNode.370"**
  %118 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode.370"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !58

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %398
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %400, %398 ], [ %169, %167 ]
  %174 = phi i64 [ %399, %398 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %376, label %370

189:                                              ; preds = %398, %167
  %190 = phi i64 [ %168, %167 ], [ %399, %398 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList.368"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #16
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #16
  %203 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList.368"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode.370"**
  %209 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %208, align 8
  %210 = bitcast %"class.base::LinkedList.369"* %206 to %"class.base::LinkNode.370"**
  %211 = load %"class.base::LinkNode.370"*, %"class.base::LinkNode.370"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode.370"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !59

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %366
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %368, %366 ], [ %262, %260 ]
  %267 = phi i64 [ %367, %366 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %344, label %338

282:                                              ; preds = %366, %260
  %283 = phi i64 [ %261, %260 ], [ %367, %366 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList.368"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList.368"* null, %"class.base::ObserverList.368"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #16
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #16
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %"class.aura::WindowTreeHostObserver"**
  %301 = load %"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHostObserver"** %300, align 8
  %302 = bitcast %"class.aura::WindowTreeHostObserver"* %301 to void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)***
  %303 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)**, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)** %303, i64 7
  %305 = load void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)*, void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*)** %304, align 8
  call void %305(%"class.aura::WindowTreeHostObserver"* %301, %"class.aura::WindowTreeHost"* %0, %"class.base::internal::flat_tree.914"* %1) #16
  %306 = load %"class.base::ObserverList.368"*, %"class.base::ObserverList.368"** %7, align 8
  %307 = icmp eq %"class.base::ObserverList.368"* %306, null
  br i1 %307, label %308, label %309

308:                                              ; preds = %333, %329, %296, %309, %323
  br label %68

309:                                              ; preds = %296
  %310 = load i64, i64* %8, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %8, align 8
  %312 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %306, i64 0, i32 0, i32 0, i32 1
  %313 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.base::ObserverList.368"* %306 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = sub i64 %314, %316
  %318 = ashr exact i64 %317, 3
  %319 = load i64, i64* %9, align 8
  %320 = icmp ult i64 %318, %319
  %321 = select i1 %320, i64 %318, i64 %319
  %322 = icmp ult i64 %311, %321
  br i1 %322, label %323, label %308

323:                                              ; preds = %309
  %324 = inttoptr i64 %316 to %"class.base::internal::UncheckedObserverAdapter"*
  %325 = getelementptr inbounds %"class.base::ObserverList.368", %"class.base::ObserverList.368"* %306, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 %311, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %329, label %308

329:                                              ; preds = %323, %333
  %330 = phi i64 [ %331, %333 ], [ %311, %323 ]
  %331 = add nuw i64 %330, 1
  store i64 %331, i64* %8, align 8
  %332 = icmp ult i64 %331, %321
  br i1 %332, label %333, label %308

333:                                              ; preds = %329
  %334 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %325, align 8
  %335 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %331, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %329, label %308

338:                                              ; preds = %277
  %339 = ptrtoint i8* %280 to i64
  %340 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %341 = inttoptr i64 %278 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %340, i64 1
  %343 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %342 to i64
  br label %344

344:                                              ; preds = %338, %277
  %345 = phi i64 [ %278, %277 ], [ %343, %338 ]
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  br i1 %348, label %355, label %349

349:                                              ; preds = %344
  %350 = ptrtoint i8* %347 to i64
  %351 = inttoptr i64 %345 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %345 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %344
  %356 = phi i64 [ %345, %344 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %369 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %368, %217
  br i1 %369, label %282, label %265

370:                                              ; preds = %184
  %371 = ptrtoint i8* %187 to i64
  %372 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %185 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %184
  %377 = phi i64 [ %185, %184 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %401 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %400, %124
  br i1 %401, label %189, label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N4aura14WindowTreeHost29OnFrameSinksToThrottleUpdatedERKN4base8internal9flat_treeIN3viz11FrameSinkIdENS1_8identityENSt3__14lessIvEENS7_6vectorIS5_NS7_9allocatorIS5_EEEEEE(%"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.914"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %0, i64 -1, i32 11, i32 4, i32 1, i32 2, i32 1
  %4 = bitcast %struct.SkISize* %3 to %"class.aura::WindowTreeHost"*
  tail call void @_ZN4aura14WindowTreeHost29OnFrameSinksToThrottleUpdatedERKN4base8internal9flat_treeIN3viz11FrameSinkIdENS1_8identityENSt3__14lessIvEENS7_6vectorIS5_NS7_9allocatorIS5_EEEEEE(%"class.aura::WindowTreeHost"* %4, %"class.base::internal::flat_tree.914"* %1)
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare i24 @_ZN2ui11EventSource18DeliverEventToSinkEPNS_5EventE(%"class.ui::EventSource"*, %"class.ui::Event"*) unnamed_addr #1

declare void @_ZN7display15DisplayObserver27OnWillProcessDisplayChangesEv(%"class.display::DisplayObserver"*) unnamed_addr #1

declare void @_ZN7display15DisplayObserver26OnDidProcessDisplayChangesEv(%"class.display::DisplayObserver"*) unnamed_addr #1

declare void @_ZN7display15DisplayObserver14OnDisplayAddedERKNS_7DisplayE(%"class.display::DisplayObserver"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #1

declare void @_ZN7display15DisplayObserver16OnDisplayRemovedERKNS_7DisplayE(%"class.display::DisplayObserver"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #1

declare void @_ZN7display15DisplayObserver25OnCurrentWorkspaceChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.display::DisplayObserver"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN7display15DisplayObserver27OnDisplayTabletStateChangedENS_11TabletStateE(%"class.display::DisplayObserver"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18CompositorObserver22OnCompositingDidCommitEPNS_10CompositorE(%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18CompositorObserver20OnCompositingStartedEPNS_10CompositorEN4base9TimeTicksE(%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18CompositorObserver36OnCompositingCompleteSwapWithNewSizeEPNS_10CompositorERKN3gfx4SizeE(%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18CompositorObserver25OnCompositingShuttingDownEPNS_10CompositorE(%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18CompositorObserver27OnDidPresentCompositorFrameEjRKN3gfx20PresentationFeedbackE(%"class.ui::CompositorObserver"*, i32, %"struct.gfx::PresentationFeedback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18CompositorObserver23OnFirstAnimationStartedEPNS_10CompositorE(%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui18CompositorObserver20OnLastAnimationEndedEPNS_10CompositorE(%"class.ui::CompositorObserver"*, %"class.ui::Compositor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #12

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui8internal19InputMethodDelegateD2Ev(%"class.ui::internal::InputMethodDelegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui8internal19InputMethodDelegateD0Ev(%"class.ui::internal::InputMethodDelegate"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui8ViewPropD1Ev(%"class.ui::ViewProp"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #15

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

declare void @_ZN4aura24ScopedSimpleKeyboardHookC1EN4absl8optionalIN4base8internal9flat_treeIN2ui7DomCodeENS3_8identityENSt3__14lessIvEENS9_6vectorIS7_NS9_9allocatorIS7_EEEEEEEE(%"class.aura::ScopedSimpleKeyboardHook"*, %"class.absl::optional.883"*) unnamed_addr #1

declare void @_ZN4aura18ScopedKeyboardHookC1EN4base7WeakPtrINS_14WindowTreeHostEEE(%"class.aura::ScopedKeyboardHook"*, %"class.base::WeakPtr.870"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN2ui10CompositorC1ERKN3viz11FrameSinkIdEPNS_14ContextFactoryE13scoped_refptrIN4base22SingleThreadTaskRunnerEEbbbb(%"class.ui::Compositor"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"class.ui::ContextFactory"*, %"class.base::SingleThreadTaskRunner"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZN4aura21WindowEventDispatcherC1EPNS_14WindowTreeHostE(%"class.aura::WindowEventDispatcher"*, %"class.aura::WindowTreeHost"*) unnamed_addr #1

declare void @_ZN2ui8ViewPropC1EjPKcPv(%"class.ui::ViewProp"*, i32, i8*, i8*) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN4aura14WindowTreeHostEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN4aura14WindowTreeHostEE10GetWeakPtrEv"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base14WeakPtrFactoryIN4aura14WindowTreeHostEE10GetWeakPtrEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base14WeakPtrFactoryIN4aura14WindowTreeHostEE10GetWeakPtrEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = !{!"branch_weights", i32 2000, i32 1}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !17}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!34 = distinct !{!34, !17}
!35 = distinct !{!35, !17}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!38 = distinct !{!38, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!41 = distinct !{!41, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!42 = distinct !{!42, !17}
!43 = distinct !{!43, !17}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!46 = distinct !{!46, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!49 = distinct !{!49, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!50 = distinct !{!50, !17}
!51 = distinct !{!51, !17}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!54 = distinct !{!54, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!57 = distinct !{!57, !"_ZNK4base12ObserverListIN4aura22WindowTreeHostObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!58 = distinct !{!58, !17}
!59 = distinct !{!59, !17}
