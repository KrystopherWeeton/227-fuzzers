; ModuleID = '../../third_party/blink/renderer/core/animation/css/css_transition_data.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css/css_transition_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AnimationTimeDelta" = type { double }
%union.anon = type { %"class.blink::AnimationTimeDelta" }
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.6" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector", %"class.WTF::Vector", %"class.WTF::Vector.0" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %class.scoped_refptr*, i32, i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF6VectorIN5blink17CSSTransitionData18TransitionPropertyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink17CSSTransitionData18TransitionPropertyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17CSSTransitionData18TransitionPropertyEEEmm = comdat any

@__const._ZNK5blink17CSSTransitionData15ConvertToTimingEm.timing = private unnamed_addr constant <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon } } } }, i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }> <{ %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr { %"class.blink::TimingFunction"* inttoptr (i64 -6148914691236517206 to %"class.blink::TimingFunction"*) }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSTransitionData18TransitionPropertyEEEPKcv = private unnamed_addr constant [92 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSTransitionData::TransitionProperty]\00", align 1

@_ZN5blink17CSSTransitionDataC1Ev = hidden unnamed_addr alias void (%"class.blink::CSSTransitionData"*), void (%"class.blink::CSSTransitionData"*)* @_ZN5blink17CSSTransitionDataC2Ev
@_ZN5blink17CSSTransitionDataC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"*), void (%"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"*)* @_ZN5blink17CSSTransitionDataC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSTransitionDataC2Ev(%"class.blink::CSSTransitionData"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::CSSTransitionData::TransitionProperty", align 8
  %3 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataC2Ev(%"class.blink::CSSTimingData"* %3) #7
  %4 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 1
  %5 = bitcast %"class.WTF::Vector.6"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #7
  %6 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %2 to i64*
  store i64 146028888065, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  call void @_ZN3WTF6VectorIN5blink17CSSTransitionData18TransitionPropertyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.6"* %4, %"struct.blink::CSSTransitionData::TransitionProperty"* nonnull dereferenceable(16) %2) #7
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #7
  br label %24

24:                                               ; preds = %1, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

declare void @_ZN5blink13CSSTimingDataC2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSTransitionDataC2ERKS0_(%"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %1, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataC2ERKS0_(%"class.blink::CSSTimingData"* %3, %"class.blink::CSSTimingData"* dereferenceable(48) %4) #7
  %5 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17CSSTransitionData18TransitionPropertyEEEmm(i64 %12) #7
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSTransitionData18TransitionPropertyEEEPKcv, i64 0, i64 0)) #7
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.6"* %5 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = bitcast i8* %14 to %"struct.blink::CSSTransitionData::TransitionProperty"*
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ null, %2 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %25, align 8
  %27 = load i32, i32* %22, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %62, label %31

31:                                               ; preds = %20, %58
  %32 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %59, %58 ], [ %21, %20 ]
  %33 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %60, %58 ], [ %26, %20 ]
  %34 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %33 to i64*
  %35 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %32 to i64*
  %36 = load i64, i64* %34, align 8
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %33, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %32, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #7
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !2

55:                                               ; preds = %46
  tail call void @llvm.trap() #7
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %31
  %59 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %32, i64 1
  %60 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %33, i64 1
  %61 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %60, %29
  br i1 %61, label %62, label %31

62:                                               ; preds = %58, %20
  ret void
}

declare void @_ZN5blink13CSSTimingDataC2ERKS0_(%"class.blink::CSSTimingData"*, %"class.blink::CSSTimingData"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CSSTransitionData30TransitionsMatchForStyleRecalcERKS0_(%"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %45

8:                                                ; preds = %2
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %13, align 8
  %15 = zext i32 %4 to i64
  %16 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %12, i64 %15
  br label %17

17:                                               ; preds = %37, %10
  %18 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %39, %37 ], [ %14, %10 ]
  %19 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %38, %37 ], [ %12, %10 ]
  %20 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %18, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %25, label %45

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %19, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %18, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %45

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %45

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %19, i64 1
  %39 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %18, i64 1
  %40 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %38, %16
  br i1 %40, label %41, label %17

41:                                               ; preds = %37, %8
  %42 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %0, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %1, i64 0, i32 0
  %44 = tail call zeroext i1 @_ZNK5blink13CSSTimingData25TimingMatchForStyleRecalcERKS0_(%"class.blink::CSSTimingData"* %42, %"class.blink::CSSTimingData"* dereferenceable(48) %43) #7
  br label %45

45:                                               ; preds = %31, %25, %17, %2, %41
  %46 = phi i1 [ %44, %41 ], [ false, %2 ], [ false, %17 ], [ false, %25 ], [ false, %31 ]
  ret i1 %46
}

declare zeroext i1 @_ZNK5blink13CSSTimingData25TimingMatchForStyleRecalcERKS0_(%"class.blink::CSSTimingData"*, %"class.blink::CSSTimingData"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17CSSTransitionData15ConvertToTimingEm(%"struct.blink::Timing"* noalias sret, %"class.blink::CSSTransitionData"*, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.blink::Timing"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 bitcast (<{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon } } } }, i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>* @__const._ZNK5blink17CSSTransitionData15ConvertToTimingEm.timing to i8*), i64 80, i1 false)
  %5 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %1, i64 0, i32 0
  tail call void @_ZNK5blink13CSSTimingData15ConvertToTimingEm(%"struct.blink::Timing"* sret %0, %"class.blink::CSSTimingData"* %5, i64 %2) #7
  %6 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  store i32 2, i32* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNK5blink13CSSTimingData15ConvertToTimingEm(%"struct.blink::Timing"* sret, %"class.blink::CSSTimingData"*, i64) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink17CSSTransitionData18TransitionPropertyELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.6"*, %"struct.blink::CSSTransitionData::TransitionProperty"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %6, align 8
  %8 = icmp ugt %"struct.blink::CSSTransitionData::TransitionProperty"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::CSSTransitionData::TransitionProperty"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17CSSTransitionData18TransitionPropertyEEEmm(i64 %27) #7
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSTransitionData18TransitionPropertyEEEPKcv, i64 0, i64 0)) #7
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::CSSTransitionData::TransitionProperty"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink17CSSTransitionData18TransitionPropertyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.6"* %0, i32 %22) #7
  %36 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::CSSTransitionData::TransitionProperty"* %1 to i64
  %39 = ptrtoint %"struct.blink::CSSTransitionData::TransitionProperty"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17CSSTransitionData18TransitionPropertyEEEmm(i64 %55) #7
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSTransitionData18TransitionPropertyEEEPKcv, i64 0, i64 0)) #7
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::CSSTransitionData::TransitionProperty"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink17CSSTransitionData18TransitionPropertyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.6"* %0, i32 %50) #7
  %64 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %69, i64 %72
  %74 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %70 to i64*
  %75 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %73 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %69, i64 %72, i32 2
  %78 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %70, i64 0, i32 2
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::AtomicString"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.WTF::AtomicString"* %77 to i64*
  store i64 %81, i64* %82, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %83 = load i32, i32* %3, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink17CSSTransitionData18TransitionPropertyELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %92

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %90, label %14

14:                                               ; preds = %4
  %15 = shl nuw nsw i64 %9, 4
  %16 = add nsw i64 %15, -16
  %17 = lshr exact i64 %16, 4
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %38, label %21

21:                                               ; preds = %14, %21
  %22 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %35, %21 ], [ %6, %14 ]
  %23 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %34, %21 ], [ null, %14 ]
  %24 = phi i64 [ %36, %21 ], [ %19, %14 ]
  %25 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %22 to i64*
  %26 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %23, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %22, i64 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.WTF::AtomicString"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.WTF::AtomicString"* %28 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %30, align 8
  %34 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %23, i64 1
  %35 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %22, i64 1
  %36 = add i64 %24, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %21, !llvm.loop !4

38:                                               ; preds = %21, %14
  %39 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %6, %14 ], [ %35, %21 ]
  %40 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ null, %14 ], [ %34, %21 ]
  %41 = icmp ult i64 %16, 48
  br i1 %41, label %90, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %88, %42 ], [ %39, %38 ]
  %44 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %87, %42 ], [ %40, %38 ]
  %45 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %43 to i64*
  %46 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %44 to i64*
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %44, i64 0, i32 2
  %49 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %43, i64 0, i32 2
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.WTF::AtomicString"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.WTF::AtomicString"* %48 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %54 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %44, i64 1
  %55 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %43, i64 1
  %56 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %55 to i64*
  %57 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %54 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %44, i64 1, i32 2
  %60 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %43, i64 1, i32 2
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::AtomicString"* %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.WTF::AtomicString"* %59 to i64*
  store i64 %63, i64* %64, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %65 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %44, i64 2
  %66 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %43, i64 2
  %67 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %66 to i64*
  %68 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %44, i64 2, i32 2
  %71 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %43, i64 2, i32 2
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.WTF::AtomicString"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.WTF::AtomicString"* %70 to i64*
  store i64 %74, i64* %75, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  %76 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %44, i64 3
  %77 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %43, i64 3
  %78 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %77 to i64*
  %79 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %76 to i64*
  %80 = load i64, i64* %78, align 8
  store i64 %80, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %44, i64 3, i32 2
  %82 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %43, i64 3, i32 2
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::AtomicString"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::AtomicString"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %44, i64 4
  %88 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %43, i64 4
  %89 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %88, %10
  br i1 %89, label %90, label %42

90:                                               ; preds = %38, %42, %4
  %91 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #7
  br label %192

92:                                               ; preds = %2
  %93 = zext i32 %1 to i64
  %94 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17CSSTransitionData18TransitionPropertyEEEmm(i64 %93) #7
  %95 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %94, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSTransitionData18TransitionPropertyEEEPKcv, i64 0, i64 0)) #7
  %96 = lshr i64 %94, 4
  %97 = ptrtoint i8* %95 to i64
  %98 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %99 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %98, align 8
  %100 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %99, i64 %102
  %104 = icmp eq i32 %101, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %92
  %106 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %99 to i8*
  br label %187

107:                                              ; preds = %92
  %108 = bitcast i8* %95 to %"struct.blink::CSSTransitionData::TransitionProperty"*
  %109 = shl nuw nsw i64 %102, 4
  %110 = add nsw i64 %109, -16
  %111 = lshr exact i64 %110, 4
  %112 = add nuw nsw i64 %111, 1
  %113 = and i64 %112, 3
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %132, label %115

115:                                              ; preds = %107, %115
  %116 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %129, %115 ], [ %99, %107 ]
  %117 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %128, %115 ], [ %108, %107 ]
  %118 = phi i64 [ %130, %115 ], [ %113, %107 ]
  %119 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %116 to i64*
  %120 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %117 to i64*
  %121 = load i64, i64* %119, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %117, i64 0, i32 2
  %123 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %116, i64 0, i32 2
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.WTF::AtomicString"* %123 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.WTF::AtomicString"* %122 to i64*
  store i64 %126, i64* %127, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %124, align 8
  %128 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %117, i64 1
  %129 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %116, i64 1
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %115, !llvm.loop !6

132:                                              ; preds = %115, %107
  %133 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %99, %107 ], [ %129, %115 ]
  %134 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %108, %107 ], [ %128, %115 ]
  %135 = icmp ult i64 %110, 48
  br i1 %135, label %184, label %136

136:                                              ; preds = %132, %136
  %137 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %182, %136 ], [ %133, %132 ]
  %138 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %181, %136 ], [ %134, %132 ]
  %139 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %137 to i64*
  %140 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %138 to i64*
  %141 = load i64, i64* %139, align 8
  store i64 %141, i64* %140, align 8
  %142 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %138, i64 0, i32 2
  %143 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %137, i64 0, i32 2
  %144 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.WTF::AtomicString"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.WTF::AtomicString"* %142 to i64*
  store i64 %146, i64* %147, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %144, align 8
  %148 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %138, i64 1
  %149 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %137, i64 1
  %150 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %149 to i64*
  %151 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %148 to i64*
  %152 = load i64, i64* %150, align 8
  store i64 %152, i64* %151, align 8
  %153 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %138, i64 1, i32 2
  %154 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %137, i64 1, i32 2
  %155 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = bitcast %"class.WTF::AtomicString"* %154 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.WTF::AtomicString"* %153 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %155, align 8
  %159 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %138, i64 2
  %160 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %137, i64 2
  %161 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %160 to i64*
  %162 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %159 to i64*
  %163 = load i64, i64* %161, align 8
  store i64 %163, i64* %162, align 8
  %164 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %138, i64 2, i32 2
  %165 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %137, i64 2, i32 2
  %166 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.WTF::AtomicString"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.WTF::AtomicString"* %164 to i64*
  store i64 %168, i64* %169, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %166, align 8
  %170 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %138, i64 3
  %171 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %137, i64 3
  %172 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %171 to i64*
  %173 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %170 to i64*
  %174 = load i64, i64* %172, align 8
  store i64 %174, i64* %173, align 8
  %175 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %138, i64 3, i32 2
  %176 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %137, i64 3, i32 2
  %177 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %176, i64 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.WTF::AtomicString"* %176 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.WTF::AtomicString"* %175 to i64*
  store i64 %179, i64* %180, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %177, align 8
  %181 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %138, i64 4
  %182 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %137, i64 4
  %183 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %182, %103
  br i1 %183, label %184, label %136

184:                                              ; preds = %136, %132
  %185 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %186 = load i8*, i8** %185, align 8
  br label %187

187:                                              ; preds = %105, %184
  %188 = phi i8* [ %186, %184 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %188) #7
  %189 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %97, i64* %189 monotonic, align 8
  %190 = trunc i64 %96 to i32
  %191 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %190, i32* %191, align 8
  br label %192

192:                                              ; preds = %187, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17CSSTransitionData18TransitionPropertyEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
