; ModuleID = '../../gpu/config/gpu_util.cc'
source_filename = "../../gpu/config/gpu_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crash_reporter::CrashKeyStringCombined" = type { %"class.crash_reporter::internal::CrashKeyStringCombinedImpl", %"class.crash_reporter::CrashKeyStringBreakpad", %"class.crashpad::StringAnnotation" }
%"class.crash_reporter::internal::CrashKeyStringCombinedImpl" = type { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"* }
%"class.crash_reporter::internal::CrashKeyStringImpl" = type { i8*, i64*, i64 }
%"class.crashpad::Annotation" = type <{ %"struct.std::__1::atomic", i8*, i8*, i32, i16, [2 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.crashpad::Annotation"* }
%"class.crash_reporter::CrashKeyStringBreakpad" = type { %"class.crash_reporter::internal::CrashKeyStringImpl", %"struct.crash_reporter::internal::InitializedArrayImpl" }
%"struct.crash_reporter::internal::InitializedArrayImpl" = type { [1 x i64] }
%"class.crashpad::StringAnnotation" = type { %"class.crashpad::Annotation.base", [16 x i8], [2 x i8] }
%"class.crashpad::Annotation.base" = type <{ %"struct.std::__1::atomic", i8*, i8*, i32, i16 }>
%"class.crash_reporter::CrashKeyStringCombined.158" = type { %"class.crash_reporter::internal::CrashKeyStringCombinedImpl", %"class.crash_reporter::CrashKeyStringBreakpad.159", %"class.crashpad::StringAnnotation.160" }
%"class.crash_reporter::CrashKeyStringBreakpad.159" = type { %"class.crash_reporter::internal::CrashKeyStringImpl", %"struct.crash_reporter::internal::InitializedArrayImpl" }
%"class.crashpad::StringAnnotation.160" = type { %"class.crashpad::Annotation.base", [64 x i8], [2 x i8] }
%"class.crash_reporter::CrashKeyStringCombined.162" = type { %"class.crash_reporter::internal::CrashKeyStringCombinedImpl", %"class.crash_reporter::CrashKeyStringBreakpad.163", %"class.crashpad::StringAnnotation.165" }
%"class.crash_reporter::CrashKeyStringBreakpad.163" = type { %"class.crash_reporter::internal::CrashKeyStringImpl", %"struct.crash_reporter::internal::InitializedArrayImpl.164" }
%"struct.crash_reporter::internal::InitializedArrayImpl.164" = type { [3 x i64] }
%"class.crashpad::StringAnnotation.165" = type { %"class.crashpad::Annotation.base", [256 x i8], [2 x i8] }
%"class.crash_reporter::CrashKeyStringCombined.167" = type { %"class.crash_reporter::internal::CrashKeyStringCombinedImpl", %"class.crash_reporter::CrashKeyStringBreakpad.168", %"class.crashpad::StringAnnotation.170" }
%"class.crash_reporter::CrashKeyStringBreakpad.168" = type { %"class.crash_reporter::internal::CrashKeyStringImpl", %"struct.crash_reporter::internal::InitializedArrayImpl.169" }
%"struct.crash_reporter::internal::InitializedArrayImpl.169" = type { [2 x i64] }
%"class.crashpad::StringAnnotation.170" = type { %"class.crashpad::Annotation.base", [128 x i8], [2 x i8] }
%"struct.gpu::GPUInfo" = type { %"class.base::TimeDelta", i8, i8, [6 x i8], %"struct.gpu::GPUInfo::GPUDevice", %"class.std::__1::vector.20", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.std::__1::basic_string", i8, i8, i8, i8, [4 x i8], %"struct.gpu::VideoDecodeAcceleratorCapabilities", %"class.std::__1::vector.34", i8, %"class.std::__1::vector.41", i8, i8, %"class.absl::optional" }
%"class.base::TimeDelta" = type { i64 }
%"struct.gpu::GPUInfo::GPUDevice" = type <{ i32, i32, i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.gpu::GPUInfo::GPUDevice"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.gpu::VideoDecodeAcceleratorCapabilities" = type <{ %"class.std::__1::vector.27", i32, [4 x i8] }>
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.29" }
%"struct.gpu::VideoDecodeAcceleratorSupportedProfile" = type <{ i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.36" }
%"struct.gpu::VideoEncodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", i32, i32 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.50" }
%"struct.gpu::ImageDecodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::vector.43" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { i32*, i32*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i32* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"class.gpu::VulkanInfo" }
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector.56", %"class.std::__1::vector.63", %"class.std::__1::vector.70", %"class.std::__1::vector.77" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair.58" }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %struct.VkExtensionProperties* }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { i8**, i8**, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i8** }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.72" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.86" }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector.56", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.79" }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.81" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%"struct.gpu::GpuFeatureInfo" = type { [10 x i32], %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.13" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"struct.base::Feature" = type { i8*, i32 }
%"struct.std::nothrow_t" = type { i8 }
%"struct.gpu::GpuPreferences" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.91", i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.98", %"class.std::__1::vector.98", i8, i8, [2 x i8], i32, i8, i8, [6 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.93" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::basic_string"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector.98", %"class.std::__1::map", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.113" }
%"class.std::__1::__tree.113" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.142" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.144" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.base::BasicStringPiece"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gpu::GpuBlocklist" = type { %"class.gpu::GpuControlList" }
%"class.gpu::GpuControlList" = type { i32 (...)**, i64, %"struct.gpu::GpuControlList::Entry"*, %"class.std::__1::vector.6", i32, i8, [3 x i8], %"class.std::__1::unordered_map", i8, %"class.std::__1::basic_string" }
%"struct.gpu::GpuControlList::Entry" = type { i32, i8*, i64, i32*, i64, i8**, i64, i8**, i64, i32*, %"struct.gpu::GpuControlList::Conditions", i64, %"struct.gpu::GpuControlList::Conditions"* }
%"struct.gpu::GpuControlList::Conditions" = type { i32, %"struct.gpu::GpuControlList::Version", i32, i64, %"struct.gpu::GpuControlList::Device"*, i32, i32, %"struct.gpu::GpuControlList::DriverInfo"*, %"struct.gpu::GpuControlList::GLStrings"*, %"struct.gpu::GpuControlList::MachineModelInfo"*, i64, i32*, %"struct.gpu::GpuControlList::Version", %"struct.gpu::GpuControlList::More"* }
%"struct.gpu::GpuControlList::Device" = type { i32, i32 }
%"struct.gpu::GpuControlList::DriverInfo" = type { i8*, %"struct.gpu::GpuControlList::Version" }
%"struct.gpu::GpuControlList::GLStrings" = type { i8*, i8*, i8*, i8* }
%"struct.gpu::GpuControlList::MachineModelInfo" = type { i64, i8**, %"struct.gpu::GpuControlList::Version" }
%"struct.gpu::GpuControlList::Version" = type { i32, i32, i32, i8*, i8* }
%"struct.gpu::GpuControlList::More" = type { i32, %"struct.gpu::GpuControlList::Version", %"struct.gpu::GpuControlList::Version", i8, i32, %"struct.gpu::GpuControlList::Version", %"struct.gpu::GpuControlList::Version", i32, i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.138", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { float }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.base::FeatureList" = type <{ %"class.base::flat_map", %"class.base::Lock", %"class.std::__1::map.197", %"class.base::FieldTrialList"*, i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.189" }
%"class.base::internal::flat_tree.189" = type { %"class.std::__1::vector.190" }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.base::FieldTrialList" = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.gpu::GpuDriverBugList" = type { %"class.gpu::GpuControlList" }
%"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.gpu::DevicePerfInfo" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, [3 x i8], %union.anon.178 }
%union.anon.178 = type { %"struct.gpu::DevicePerfInfo" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.184", [4 x i8] }>
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i32 }
%"struct.std::__1::__split_buffer.213" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.145", %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.std::__1::allocator.147"* }
%"class.std::__1::allocator.147" = type { i8 }

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE6insertINS3_11__wrap_iterIPS6_EEEEvT_SJ_ = comdat any

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE6insertINS3_11__wrap_iterIPNS3_12basic_stringIcS5_NSB_IcEEEEEEEEvT_SM_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_21__tree_const_iteratorIiPNS_11__tree_nodeIiPvEElEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPiEEE4typeENSG_IPKiEESC_SC_ = comdat any

$_ZN3gpu7GPUInfoaSERKS0_ = comdat any

$_ZNSt3__16vectorIN3gpu7GPUInfo9GPUDeviceENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__16vectorIN3gpu38VideoDecodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN3gpu38VideoEncodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN3gpu38ImageDecodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE13append_uniqueIRS6_EENS3_4pairINS3_11__wrap_iterIPS6_EEbEESK_SK_OT_ = comdat any

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPS6_EESH_ = comdat any

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE21emplace_hint_key_argsIS6_JRKS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEENSJ_IPSG_EERKT_DpOT0_ = comdat any

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE16emplace_key_argsIS6_JRKS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN4base16BasicStringPieceIcNS_11char_traitsIcEEEERNS_9allocatorIS5_EEE12emplace_backIJRKS5_EEEvDpOT_ = comdat any

$_ZNSt3__16uniqueINS_11__wrap_iterIPN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEENS2_8internal9NotFnImplINS9_9flat_treeIS6_NS2_8identityENS_4lessIvEENS_6vectorIS6_NS_9allocatorIS6_EEEEE13value_compareEEEEET_SM_SM_T0_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_PNS_15iterator_traitsISL_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeE = comdat any

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE13append_uniqueIRNS3_12basic_stringIcS5_NSB_IcEEEEEENS3_4pairINS3_11__wrap_iterIPS6_EEbEESN_SN_OT_ = comdat any

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE21emplace_hint_key_argsIS6_JS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEENSH_IPKS6_EERKT_DpOT0_ = comdat any

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE16emplace_key_argsIS6_JS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE7emplaceIJS5_EEENS_11__wrap_iterIPS5_EENSA_IPKS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN4base16BasicStringPieceIcNS_11char_traitsIcEEEERNS_9allocatorIS5_EEE12emplace_backIJS5_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRNS_12basic_stringIcS4_NS6_IcEEEEEEEvDpOT_ = comdat any

@_ZN8switches6kUseGLE = external constant [0 x i8], align 1
@_ZN2gl32kGLImplementationSwiftShaderNameE = external constant [0 x i8], align 1
@_ZN2gl26kGLImplementationANGLENameE = external constant [0 x i8], align 1
@_ZN8switches9kUseANGLEE = external constant [0 x i8], align 1
@_ZN2gl35kANGLEImplementationSwiftShaderNameE = external constant [0 x i8], align 1
@_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE = external constant [0 x i8], align 1
@_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE = external constant [0 x i8], align 1
@_ZN2gl29kGLImplementationDisabledNameE = external constant [0 x i8], align 1
@_ZN8switches14kUseGpuInTestsE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [14 x i8] c"gpu_blocklist\00", align 1
@_ZN8switches22kGpuBlocklistTestGroupE = external constant [0 x i8], align 1
@_ZN8switches20kDisableGLExtensionsE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [4 x i8] c", ;\00", align 1
@_ZN8switches31kDisableGpuDriverBugWorkaroundsE = external constant [0 x i8], align 1
@_ZN8switches26kGpuDriverBugListTestGroupE = external constant [0 x i8], align 1
@_ZN3gpu10crash_keys13gpu_vendor_idE = external global %"class.crash_reporter::CrashKeyStringCombined", align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"0x%04x\00", align 1
@_ZN3gpu10crash_keys13gpu_device_idE = external global %"class.crash_reporter::CrashKeyStringCombined", align 8
@_ZN3gpu10crash_keys18gpu_driver_versionE = external global %"class.crash_reporter::CrashKeyStringCombined.158", align 8
@_ZN3gpu10crash_keys24gpu_pixel_shader_versionE = external global %"class.crash_reporter::CrashKeyStringCombined", align 8
@_ZN3gpu10crash_keys25gpu_vertex_shader_versionE = external global %"class.crash_reporter::CrashKeyStringCombined", align 8
@_ZN3gpu10crash_keys20gpu_generation_intelE = external global %"class.crash_reporter::CrashKeyStringCombined", align 8
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@_ZN3gpu10crash_keys10gpu_vendorE = external global %"class.crash_reporter::CrashKeyStringCombined.162", align 8
@_ZN3gpu10crash_keys12gpu_rendererE = external global %"class.crash_reporter::CrashKeyStringCombined.167", align 8
@_ZN3gpu12_GLOBAL__N_116g_gpu_info_cacheE = internal unnamed_addr global %"struct.gpu::GPUInfo"* null, align 8
@_ZN3gpu12_GLOBAL__N_124g_gpu_feature_info_cacheE = internal unnamed_addr global %"struct.gpu::GpuFeatureInfo"* null, align 8
@.str.14 = private unnamed_addr constant [24 x i8] c"Hardware.TotalDiskSpace\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"Hardware.Concurrency\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"GPU.IntelGpuGeneration\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"GPU.SoftwareRendering\00", align 1
@_ZN8switches24kDisableGpuRasterizationE = external constant [0 x i8], align 1
@_ZN8switches23kEnableGpuRasterizationE = external constant [0 x i8], align 1
@_ZN8features30kDefaultEnableGpuRasterizationE = external global %"struct.base::Feature", align 8
@_ZN8features30kDefaultEnableOopRasterizationE = external global %"struct.base::Feature", align 8
@_ZN8switches13kDisableD3D11E = external constant [0 x i8], align 1
@_ZN8switches20kDisableES3GLContextE = external constant [0 x i8], align 1
@_ZN8switches30kDisableES3GLContextForTestingE = external constant [0 x i8], align 1
@_ZZN3gpu12_GLOBAL__N_132EstimateAmountOfTotalDiskSpaceMBEvE9kPathKeys = internal constant [3 x i32] [i32 2, i32 5, i32 6], align 4
@.str.21 = private unnamed_addr constant [20 x i8] c"GPU.MultiGpu.Nvidia\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"GPU.MultiGpu.AMD\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu53ComputeGpuFeatureInfoWithHardwareAccelerationDisabledEv(%"struct.gpu::GpuFeatureInfo"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -86, i64 184, i1 false)
  tail call void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"* %0) #15
  %3 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to <4 x i32>*
  store <4 x i32> <i32 3, i32 3, i32 2, i32 2>, <4 x i32>* %3, align 8
  %4 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 4
  %5 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 3, i32 2, i32 2, i32 2>, <4 x i32>* %5, align 8
  %6 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 8
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 9
  store i32 2, i32* %7, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu14GpuFeatureInfoD1Ev(%"struct.gpu::GpuFeatureInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu30ComputeGpuFeatureInfoWithNoGpuEv(%"struct.gpu::GpuFeatureInfo"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -86, i64 184, i1 false)
  tail call void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"* %0) #15
  %3 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to <4 x i32>*
  store <4 x i32> <i32 3, i32 2, i32 2, i32 2>, <4 x i32>* %3, align 8
  %4 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 4
  %5 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %5, align 8
  %6 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 8
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 9
  store i32 2, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu35ComputeGpuFeatureInfoForSwiftShaderEv(%"struct.gpu::GpuFeatureInfo"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -86, i64 184, i1 false)
  tail call void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"* %0) #15
  %3 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to <4 x i32>*
  store <4 x i32> <i32 3, i32 3, i32 2, i32 2>, <4 x i32>* %3, align 8
  %4 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 4
  %5 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 3, i32 2, i32 2, i32 2>, <4 x i32>* %5, align 8
  %6 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 8
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 9
  store i32 2, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu21ComputeGpuFeatureInfoERKNS_7GPUInfoERKNS_14GpuPreferencesEPN4base11CommandLineEPb(%"struct.gpu::GpuFeatureInfo"* noalias sret, %"struct.gpu::GPUInfo"* dereferenceable(696), %"struct.gpu::GpuPreferences"* nocapture readonly dereferenceable(184), %"class.base::CommandLine"*, i8*) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.gpu::GpuFeatureInfo", align 8
  %10 = alloca %"class.std::__1::set", align 16
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::set", align 16
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.base::internal::flat_tree", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::vector.142", align 8
  %19 = alloca %"class.std::__1::set", align 16
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::set", align 16
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::vector.98", align 8
  %25 = alloca %"class.base::internal::flat_tree", align 8
  %26 = alloca %"class.std::__1::vector.98", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #15
  br i1 %29, label %30, label %169

30:                                               ; preds = %5
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  %35 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #15
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0), i64 %35) #15
  %36 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl32kGLImplementationSwiftShaderNameE, i64 0, i64 0)) #15
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i64, i64* %33, align 8
  %42 = zext i8 %39 to i64
  %43 = select i1 %40, i64 %41, i64 %42
  %44 = icmp eq i64 %36, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %30
  %46 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl32kGLImplementationSwiftShaderNameE, i64 0, i64 0), i64 %36) #15
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %158, label %48

48:                                               ; preds = %45
  %49 = load i8, i8* %38, align 1
  %50 = load i64, i64* %33, align 8
  %51 = zext i8 %49 to i64
  br label %52

52:                                               ; preds = %48, %30
  %53 = phi i64 [ %51, %48 ], [ %42, %30 ]
  %54 = phi i64 [ %50, %48 ], [ %41, %30 ]
  %55 = phi i8 [ %49, %48 ], [ %39, %30 ]
  %56 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl26kGLImplementationANGLENameE, i64 0, i64 0)) #15
  %57 = icmp slt i8 %55, 0
  %58 = select i1 %57, i64 %54, i64 %53
  %59 = icmp eq i64 %56, %58
  br i1 %59, label %60, label %118

60:                                               ; preds = %52
  %61 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl26kGLImplementationANGLENameE, i64 0, i64 0), i64 %56) #15
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %60
  %64 = load i8, i8* %38, align 1
  %65 = load i64, i64* %33, align 8
  %66 = zext i8 %64 to i64
  br label %118

67:                                               ; preds = %60
  %68 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0)) #15
  br i1 %68, label %69, label %158

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #15
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  %74 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0)) #15
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0), i64 %74) #15
  %75 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationSwiftShaderNameE, i64 0, i64 0)) #15
  %76 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i64, i64* %72, align 8
  %81 = zext i8 %78 to i64
  %82 = select i1 %79, i64 %80, i64 %81
  %83 = icmp eq i64 %75, %82
  br i1 %83, label %84, label %91

84:                                               ; preds = %69
  %85 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %8, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationSwiftShaderNameE, i64 0, i64 0), i64 %75) #15
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %109, label %87

87:                                               ; preds = %84
  %88 = load i8, i8* %77, align 1
  %89 = load i64, i64* %72, align 8
  %90 = zext i8 %88 to i64
  br label %91

91:                                               ; preds = %87, %69
  %92 = phi i64 [ %90, %87 ], [ %81, %69 ]
  %93 = phi i64 [ %89, %87 ], [ %80, %69 ]
  %94 = phi i8 [ %88, %87 ], [ %78, %69 ]
  %95 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE, i64 0, i64 0)) #15
  %96 = icmp slt i8 %94, 0
  %97 = select i1 %96, i64 %93, i64 %92
  %98 = icmp eq i64 %95, %97
  br i1 %98, label %99, label %109

99:                                               ; preds = %91
  %100 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %8, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE, i64 0, i64 0), i64 %95) #15
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %99
  %103 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 -86, i64 184, i1 false) #15, !alias.scope !2
  call void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"* %0) #15
  %104 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to <4 x i32>*
  store <4 x i32> <i32 3, i32 3, i32 2, i32 2>, <4 x i32>* %104, align 8, !alias.scope !2
  %105 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> <i32 3, i32 2, i32 2, i32 2>, <4 x i32>* %106, align 8, !alias.scope !2
  %107 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 8
  store i32 2, i32* %107, align 8, !alias.scope !2
  %108 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 9
  store i32 2, i32* %108, align 4, !alias.scope !2
  br label %109

109:                                              ; preds = %91, %99, %84, %102
  %110 = phi i32 [ 1, %102 ], [ 0, %84 ], [ 0, %99 ], [ 0, %91 ]
  %111 = phi i8 [ 0, %102 ], [ 1, %84 ], [ 0, %99 ], [ 0, %91 ]
  %112 = load i8, i8* %77, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  %115 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %115) #16
  br label %116

116:                                              ; preds = %109, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #15
  %117 = icmp eq i32 %110, 0
  br i1 %117, label %158, label %160

118:                                              ; preds = %63, %52
  %119 = phi i64 [ %66, %63 ], [ %53, %52 ]
  %120 = phi i64 [ %65, %63 ], [ %54, %52 ]
  %121 = phi i8 [ %64, %63 ], [ %55, %52 ]
  %122 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE, i64 0, i64 0)) #15
  %123 = icmp slt i8 %121, 0
  %124 = select i1 %123, i64 %120, i64 %119
  %125 = icmp eq i64 %122, %124
  br i1 %125, label %126, label %140

126:                                              ; preds = %118
  %127 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE, i64 0, i64 0), i64 %122) #15
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %126
  %130 = load i8, i8* %38, align 1
  %131 = load i64, i64* %33, align 8
  %132 = zext i8 %130 to i64
  br label %140

133:                                              ; preds = %126
  %134 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 -86, i64 184, i1 false) #15, !alias.scope !5
  call void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"* %0) #15
  %135 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to <4 x i32>*
  store <4 x i32> <i32 3, i32 3, i32 2, i32 2>, <4 x i32>* %135, align 8, !alias.scope !5
  %136 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> <i32 3, i32 2, i32 2, i32 2>, <4 x i32>* %137, align 8, !alias.scope !5
  %138 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 8
  store i32 2, i32* %138, align 8, !alias.scope !5
  %139 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 9
  store i32 2, i32* %139, align 4, !alias.scope !5
  br label %160

140:                                              ; preds = %129, %118
  %141 = phi i64 [ %132, %129 ], [ %119, %118 ]
  %142 = phi i64 [ %131, %129 ], [ %120, %118 ]
  %143 = phi i8 [ %130, %129 ], [ %121, %118 ]
  %144 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kGLImplementationDisabledNameE, i64 0, i64 0)) #15
  %145 = icmp slt i8 %143, 0
  %146 = select i1 %145, i64 %142, i64 %141
  %147 = icmp eq i64 %144, %146
  br i1 %147, label %148, label %158

148:                                              ; preds = %140
  %149 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kGLImplementationDisabledNameE, i64 0, i64 0), i64 %144) #15
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %158

151:                                              ; preds = %148
  %152 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 -86, i64 184, i1 false) #15, !alias.scope !8
  call void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"* %0) #15
  %153 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to <4 x i32>*
  store <4 x i32> <i32 3, i32 2, i32 2, i32 2>, <4 x i32>* %153, align 8, !alias.scope !8
  %154 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %155, align 8, !alias.scope !8
  %156 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 8
  store i32 2, i32* %156, align 8, !alias.scope !8
  %157 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 9
  store i32 2, i32* %157, align 4, !alias.scope !8
  br label %160

158:                                              ; preds = %140, %45, %116, %67, %148
  %159 = phi i8 [ %111, %116 ], [ 0, %67 ], [ 0, %148 ], [ 1, %45 ], [ 0, %140 ]
  br label %160

160:                                              ; preds = %116, %158, %151, %133
  %161 = phi i32 [ 0, %158 ], [ 1, %116 ], [ 1, %133 ], [ 1, %151 ]
  %162 = phi i8 [ %159, %158 ], [ %111, %116 ], [ 0, %133 ], [ 0, %151 ]
  %163 = load i8, i8* %38, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %166) #16
  br label %167

167:                                              ; preds = %160, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  %168 = icmp eq i32 %161, 0
  br i1 %168, label %169, label %761

169:                                              ; preds = %167, %5
  %170 = phi i8 [ %162, %167 ], [ 0, %5 ]
  %171 = getelementptr inbounds %"struct.gpu::GpuPreferences", %"struct.gpu::GpuPreferences"* %2, i64 0, i32 44
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %172, 3
  %174 = bitcast %"struct.gpu::GpuFeatureInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %174) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 184, i1 false)
  call void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"* nonnull %9) #15
  %175 = bitcast %"class.std::__1::set"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #15
  %176 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %178 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %179 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %180 = bitcast %"class.std::__1::__tree_node_base"** %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %179, %"class.std::__1::__tree_end_node"** %176, align 16
  %181 = getelementptr inbounds %"struct.gpu::GpuPreferences", %"struct.gpu::GpuPreferences"* %2, i64 0, i32 37
  %182 = load i8, i8* %181, align 8, !range !11
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %294

184:                                              ; preds = %169
  %185 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches14kUseGpuInTestsE, i64 0, i64 0)) #15
  br i1 %185, label %294, label %186

186:                                              ; preds = %184
  %187 = call %"class.gpu::GpuBlocklist"* @_ZN3gpu12GpuBlocklist6CreateEv() #15
  %188 = getelementptr inbounds %"struct.gpu::GpuPreferences", %"struct.gpu::GpuPreferences"* %2, i64 0, i32 10
  %189 = load i8, i8* %188, align 2, !range !11
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %214, label %191

191:                                              ; preds = %186
  %192 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #15
  %193 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  store i8 13, i8* %194, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %192, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13, i1 false) #15
  %195 = getelementptr inbounds i8, i8* %192, i64 13
  store i8 0, i8* %195, align 1
  %196 = getelementptr inbounds %"class.gpu::GpuBlocklist", %"class.gpu::GpuBlocklist"* %187, i64 0, i32 0, i32 8
  store i8 1, i8* %196, align 8
  %197 = getelementptr inbounds %"class.gpu::GpuBlocklist", %"class.gpu::GpuBlocklist"* %187, i64 0, i32 0, i32 9
  %198 = icmp eq %"class.std::__1::basic_string"* %197, %11
  br i1 %198, label %213, label %199

199:                                              ; preds = %191
  %200 = bitcast %"class.std::__1::basic_string"* %197 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %199
  %205 = bitcast %"class.std::__1::basic_string"* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* nonnull align 8 %192, i64 24, i1 false) #15
  br label %213

206:                                              ; preds = %199
  %207 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %197, i8* nonnull %192, i64 13) #15
  %208 = load i8, i8* %194, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #16
  br label %213

213:                                              ; preds = %204, %191, %206, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #15
  br label %214

214:                                              ; preds = %186, %213
  %215 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %215) #15
  store i32 0, i32* %12, align 4
  %216 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22kGpuBlocklistTestGroupE, i64 0, i64 0)) #15
  br i1 %216, label %217, label %240

217:                                              ; preds = %214
  %218 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #15
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %221 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 -86, i64 24, i1 false)
  %222 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22kGpuBlocklistTestGroupE, i64 0, i64 0)) #15
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %13, %"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches22kGpuBlocklistTestGroupE, i64 0, i64 0), i64 %222) #15
  %223 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  %227 = load i8*, i8** %219, align 8
  %228 = select i1 %226, i8* %227, i8* %218
  %229 = load i64, i64* %220, align 8
  %230 = zext i8 %225 to i64
  %231 = select i1 %226, i64 %229, i64 %230
  %232 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %228, i64 %231, i32* nonnull %12) #15
  br i1 %232, label %234, label %233

233:                                              ; preds = %217
  store i32 0, i32* %12, align 4
  br label %234

234:                                              ; preds = %217, %233
  %235 = load i8, i8* %224, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %234
  %238 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %238) #16
  br label %239

239:                                              ; preds = %234, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #15
  br label %240

240:                                              ; preds = %239, %214
  %241 = bitcast %"class.std::__1::set"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #15
  %242 = getelementptr inbounds %"class.gpu::GpuBlocklist", %"class.gpu::GpuBlocklist"* %187, i64 0, i32 0
  %243 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %243, i8 0, i64 24, i1 false) #15
  %244 = load i32, i32* %12, align 4
  call void @_ZN3gpu14GpuControlList12MakeDecisionENS0_6OsTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_7GPUInfoEj(%"class.std::__1::set"* nonnull sret %14, %"class.gpu::GpuControlList"* %242, i32 6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15, %"struct.gpu::GPUInfo"* dereferenceable(696) %1, i32 %244) #15
  %245 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0
  %246 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node"**
  %247 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %246, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"* nonnull %245, %"class.std::__1::__tree_node"* %247) #15
  %248 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %249 = bitcast %"class.std::__1::set"* %14 to <2 x i64>*
  %250 = load <2 x i64>, <2 x i64>* %249, align 16
  %251 = bitcast %"class.std::__1::set"* %10 to <2 x i64>*
  store <2 x i64> %250, <2 x i64>* %251, align 16
  %252 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %253 = load i64, i64* %252, align 16
  store i64 %253, i64* %178, align 16
  %254 = icmp eq i64 %253, 0
  %255 = extractelement <2 x i64> %250, i32 1
  br i1 %254, label %256, label %258

256:                                              ; preds = %240
  %257 = inttoptr i64 %255 to %"class.std::__1::__tree_node"*
  store %"class.std::__1::__tree_end_node"* %179, %"class.std::__1::__tree_end_node"** %176, align 16
  br label %263

258:                                              ; preds = %240
  %259 = inttoptr i64 %255 to %"class.std::__1::__tree_node_base"*
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %259, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %179, %"class.std::__1::__tree_end_node"** %260, align 8
  %261 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %14, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %248, %"class.std::__1::__tree_end_node"** %261, align 16
  %262 = bitcast %"class.std::__1::__tree_end_node"* %248 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 16, i1 false) #15
  br label %263

263:                                              ; preds = %256, %258
  %264 = phi %"class.std::__1::__tree_node"* [ %257, %256 ], [ null, %258 ]
  %265 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %14, i64 0, i32 0
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"* nonnull %265, %"class.std::__1::__tree_node"* %264) #15
  %266 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %266, i64 0, i32 1, i32 0
  %268 = load i8, i8* %267, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %270, label %273

270:                                              ; preds = %263
  %271 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  call void @_ZdlPv(i8* %272) #16
  br label %273

273:                                              ; preds = %263, %270
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #15
  %274 = call dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK3gpu14GpuControlList16GetActiveEntriesEv(%"class.gpu::GpuControlList"* %242) #15
  %275 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 4
  %276 = icmp eq %"class.std::__1::vector.6"* %275, %274
  br i1 %276, label %282, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %274, i64 0, i32 0, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %274, i64 0, i32 0, i32 1
  %281 = load i32*, i32** %280, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.6"* %275, i32* %279, i32* %281) #15
  br label %282

282:                                              ; preds = %273, %277
  %283 = icmp eq i8* %4, null
  br i1 %283, label %287, label %284

284:                                              ; preds = %282
  %285 = getelementptr inbounds %"class.gpu::GpuBlocklist", %"class.gpu::GpuBlocklist"* %187, i64 0, i32 0, i32 5
  %286 = load i8, i8* %285, align 4, !range !11
  store i8 %286, i8* %4, align 1
  br label %287

287:                                              ; preds = %282, %284
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %215) #15
  %288 = icmp eq %"class.gpu::GpuBlocklist"* %187, null
  br i1 %288, label %294, label %289

289:                                              ; preds = %287
  %290 = bitcast %"class.gpu::GpuBlocklist"* %187 to void (%"class.gpu::GpuBlocklist"*)***
  %291 = load void (%"class.gpu::GpuBlocklist"*)**, void (%"class.gpu::GpuBlocklist"*)*** %290, align 8
  %292 = getelementptr inbounds void (%"class.gpu::GpuBlocklist"*)*, void (%"class.gpu::GpuBlocklist"*)** %291, i64 1
  %293 = load void (%"class.gpu::GpuBlocklist"*)*, void (%"class.gpu::GpuBlocklist"*)** %292, align 8
  call void %293(%"class.gpu::GpuBlocklist"* nonnull %187) #15
  br label %294

294:                                              ; preds = %289, %287, %169, %184
  %295 = call fastcc i32 @_ZN3gpu12_GLOBAL__N_132GetGpuRasterizationFeatureStatusERKNSt3__13setIiNS1_4lessIiEENS1_9allocatorIiEEEERKN4base11CommandLineE(%"class.std::__1::set"* nonnull dereferenceable(24) %10, %"class.base::CommandLine"* dereferenceable(56) %3)
  %296 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 3
  store i32 %295, i32* %296, align 4
  %297 = and i8 %170, 1
  %298 = icmp ne i8 %297, 0
  %299 = or i1 %173, %298
  br i1 %299, label %365, label %300

300:                                              ; preds = %294
  %301 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node"**
  %302 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %301, align 8
  %303 = icmp eq %"class.std::__1::__tree_node"* %302, null
  br i1 %303, label %304, label %306

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 1
  store i32 0, i32* %305, align 4
  br label %325

306:                                              ; preds = %300, %318
  %307 = phi %"class.std::__1::__tree_node"* [ %320, %318 ], [ %302, %300 ]
  %308 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = icmp sgt i32 %309, 1
  br i1 %310, label %311, label %313

311:                                              ; preds = %306
  %312 = bitcast %"class.std::__1::__tree_node"* %307 to %"class.std::__1::__tree_node"**
  br label %318

313:                                              ; preds = %306
  %314 = icmp eq i32 %309, 1
  br i1 %314, label %322, label %315

315:                                              ; preds = %313
  %316 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 1
  %317 = bitcast %"class.std::__1::__tree_node_base"** %316 to %"class.std::__1::__tree_node"**
  br label %318

318:                                              ; preds = %315, %311
  %319 = phi %"class.std::__1::__tree_node"** [ %312, %311 ], [ %317, %315 ]
  %320 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %319, align 8
  %321 = icmp eq %"class.std::__1::__tree_node"* %320, null
  br i1 %321, label %322, label %306

322:                                              ; preds = %318, %313
  %323 = phi i32 [ 0, %318 ], [ 1, %313 ]
  %324 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 1
  store i32 %323, i32* %324, align 4
  br i1 %303, label %325, label %327

325:                                              ; preds = %322, %304
  %326 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 4
  store i32 0, i32* %326, align 8
  br label %346

327:                                              ; preds = %322, %339
  %328 = phi %"class.std::__1::__tree_node"* [ %341, %339 ], [ %302, %322 ]
  %329 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %328, i64 0, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = icmp sgt i32 %330, 4
  br i1 %331, label %332, label %334

332:                                              ; preds = %327
  %333 = bitcast %"class.std::__1::__tree_node"* %328 to %"class.std::__1::__tree_node"**
  br label %339

334:                                              ; preds = %327
  %335 = icmp eq i32 %330, 4
  br i1 %335, label %343, label %336

336:                                              ; preds = %334
  %337 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %328, i64 0, i32 0, i32 1
  %338 = bitcast %"class.std::__1::__tree_node_base"** %337 to %"class.std::__1::__tree_node"**
  br label %339

339:                                              ; preds = %336, %332
  %340 = phi %"class.std::__1::__tree_node"** [ %333, %332 ], [ %338, %336 ]
  %341 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %340, align 8
  %342 = icmp eq %"class.std::__1::__tree_node"* %341, null
  br i1 %342, label %343, label %327

343:                                              ; preds = %339, %334
  %344 = phi i32 [ 0, %339 ], [ 1, %334 ]
  %345 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 4
  store i32 %344, i32* %345, align 8
  br i1 %303, label %346, label %349

346:                                              ; preds = %343, %325
  %347 = phi i32* [ %326, %325 ], [ %345, %343 ]
  %348 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 0
  store i32 0, i32* %348, align 8
  br label %388

349:                                              ; preds = %343, %361
  %350 = phi %"class.std::__1::__tree_node"* [ %363, %361 ], [ %302, %343 ]
  %351 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %350, i64 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = icmp sgt i32 %352, 0
  br i1 %353, label %354, label %356

354:                                              ; preds = %349
  %355 = bitcast %"class.std::__1::__tree_node"* %350 to %"class.std::__1::__tree_node"**
  br label %361

356:                                              ; preds = %349
  %357 = icmp slt i32 %352, 0
  br i1 %357, label %358, label %369

358:                                              ; preds = %356
  %359 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %350, i64 0, i32 0, i32 1
  %360 = bitcast %"class.std::__1::__tree_node_base"** %359 to %"class.std::__1::__tree_node"**
  br label %361

361:                                              ; preds = %358, %354
  %362 = phi %"class.std::__1::__tree_node"** [ %355, %354 ], [ %360, %358 ]
  %363 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %362, align 8
  %364 = icmp eq %"class.std::__1::__tree_node"* %363, null
  br i1 %364, label %369, label %349

365:                                              ; preds = %294
  %366 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 1
  store i32 0, i32* %366, align 4
  %367 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 4
  store i32 0, i32* %367, align 8
  %368 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 0
  store i32 0, i32* %368, align 8
  br label %388

369:                                              ; preds = %361, %356
  %370 = phi i32 [ 0, %361 ], [ 3, %356 ]
  %371 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 0
  store i32 %370, i32* %371, align 8
  br i1 %303, label %388, label %372

372:                                              ; preds = %369, %384
  %373 = phi %"class.std::__1::__tree_node"* [ %386, %384 ], [ %302, %369 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %373, i64 0, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = icmp sgt i32 %375, 2
  br i1 %376, label %377, label %379

377:                                              ; preds = %372
  %378 = bitcast %"class.std::__1::__tree_node"* %373 to %"class.std::__1::__tree_node"**
  br label %384

379:                                              ; preds = %372
  %380 = icmp eq i32 %375, 2
  br i1 %380, label %388, label %381

381:                                              ; preds = %379
  %382 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %373, i64 0, i32 0, i32 1
  %383 = bitcast %"class.std::__1::__tree_node_base"** %382 to %"class.std::__1::__tree_node"**
  br label %384

384:                                              ; preds = %381, %377
  %385 = phi %"class.std::__1::__tree_node"** [ %378, %377 ], [ %383, %381 ]
  %386 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %385, align 8
  %387 = icmp eq %"class.std::__1::__tree_node"* %386, null
  br i1 %387, label %388, label %372

388:                                              ; preds = %379, %384, %346, %365, %369
  %389 = phi i32* [ %345, %369 ], [ %367, %365 ], [ %347, %346 ], [ %345, %384 ], [ %345, %379 ]
  %390 = phi i32 [ 0, %369 ], [ 0, %365 ], [ 0, %346 ], [ 1, %379 ], [ 0, %384 ]
  %391 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 2
  store i32 %390, i32* %391, align 8
  %392 = call fastcc i32 @_ZN3gpu12_GLOBAL__N_132GetGpuRasterizationFeatureStatusERKNSt3__13setIiNS1_4lessIiEENS1_9allocatorIiEEEERKN4base11CommandLineE(%"class.std::__1::set"* nonnull dereferenceable(24) %10, %"class.base::CommandLine"* dereferenceable(56) %3) #15
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %450

394:                                              ; preds = %388
  %395 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 30
  %396 = load i8, i8* %395, align 8, !range !11
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %450, label %398

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"struct.gpu::GpuPreferences", %"struct.gpu::GpuPreferences"* %2, i64 0, i32 39
  %400 = load i8, i8* %399, align 2, !range !11
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %402, label %450

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"struct.gpu::GpuPreferences", %"struct.gpu::GpuPreferences"* %2, i64 0, i32 38
  %404 = load i8, i8* %403, align 1, !range !11
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %450

406:                                              ; preds = %402
  %407 = call zeroext i1 @_ZN8features13IsUsingVulkanEv() #15
  br i1 %407, label %408, label %447

408:                                              ; preds = %406
  %409 = call %"class.base::FeatureList"* @_ZN4base11FeatureList11GetInstanceEv() #15
  %410 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %410) #15
  %411 = load i8*, i8** getelementptr inbounds (%"struct.base::Feature", %"struct.base::Feature"* @_ZN8features30kDefaultEnableOopRasterizationE, i64 0, i32 0), align 8
  %412 = call i64 @strlen(i8* %411) #15
  %413 = icmp ugt i64 %412, -17
  br i1 %413, label %414, label %416

414:                                              ; preds = %408
  %415 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %415) #17
  unreachable

416:                                              ; preds = %408
  %417 = icmp ult i64 %412, 23
  br i1 %417, label %427, label %418

418:                                              ; preds = %416
  %419 = add nuw i64 %412, 16
  %420 = and i64 %419, -16
  %421 = call i8* @_Znwm(i64 %420) #16
  %422 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %421, i8** %422, align 8
  %423 = or i64 %420, -9223372036854775808
  %424 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %423, i64* %424, align 8
  %425 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %412, i64* %425, align 8
  %426 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %432

427:                                              ; preds = %416
  %428 = trunc i64 %412 to i8
  %429 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  store i8 %428, i8* %430, align 1
  %431 = icmp eq i64 %412, 0
  br i1 %431, label %435, label %432

432:                                              ; preds = %427, %418
  %433 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %429, %427 ], [ %426, %418 ]
  %434 = phi i8* [ %410, %427 ], [ %421, %418 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %434, i8* align 1 %411, i64 %412, i1 false) #15
  br label %435

435:                                              ; preds = %432, %427
  %436 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %433, %432 ], [ %429, %427 ]
  %437 = phi i8* [ %434, %432 ], [ %410, %427 ]
  %438 = getelementptr inbounds i8, i8* %437, i64 %412
  store i8 0, i8* %438, align 1
  %439 = call zeroext i1 @_ZNK4base11FeatureList34IsFeatureOverriddenFromCommandLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_13OverrideStateE(%"class.base::FeatureList"* %409, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 1) #15
  %440 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %436, i64 0, i32 1, i32 0
  %441 = load i8, i8* %440, align 1
  %442 = icmp slt i8 %441, 0
  br i1 %442, label %443, label %446

443:                                              ; preds = %435
  %444 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = load i8*, i8** %444, align 8
  call void @_ZdlPv(i8* %445) #16
  br label %446

446:                                              ; preds = %443, %435
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %410) #15
  br i1 %439, label %447, label %450

447:                                              ; preds = %446, %406
  %448 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features30kDefaultEnableOopRasterizationE) #15
  %449 = select i1 %448, i32 0, i32 2
  br label %450

450:                                              ; preds = %388, %394, %398, %402, %446, %447
  %451 = phi i32 [ %392, %388 ], [ 2, %394 ], [ 2, %398 ], [ 0, %402 ], [ 0, %446 ], [ %449, %447 ]
  %452 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 5
  store i32 %451, i32* %452, align 4
  %453 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 6
  store i32 2, i32* %453, align 8
  br i1 %299, label %474, label %454

454:                                              ; preds = %450
  %455 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node"**
  %456 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %455, align 8
  %457 = icmp eq %"class.std::__1::__tree_node"* %456, null
  br i1 %457, label %474, label %458

458:                                              ; preds = %454, %470
  %459 = phi %"class.std::__1::__tree_node"* [ %472, %470 ], [ %456, %454 ]
  %460 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %459, i64 0, i32 1
  %461 = load i32, i32* %460, align 4
  %462 = icmp sgt i32 %461, 7
  br i1 %462, label %463, label %465

463:                                              ; preds = %458
  %464 = bitcast %"class.std::__1::__tree_node"* %459 to %"class.std::__1::__tree_node"**
  br label %470

465:                                              ; preds = %458
  %466 = icmp eq i32 %461, 7
  br i1 %466, label %474, label %467

467:                                              ; preds = %465
  %468 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %459, i64 0, i32 0, i32 1
  %469 = bitcast %"class.std::__1::__tree_node_base"** %468 to %"class.std::__1::__tree_node"**
  br label %470

470:                                              ; preds = %467, %463
  %471 = phi %"class.std::__1::__tree_node"** [ %464, %463 ], [ %469, %467 ]
  %472 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %471, align 8
  %473 = icmp eq %"class.std::__1::__tree_node"* %472, null
  br i1 %473, label %474, label %458

474:                                              ; preds = %465, %470, %450, %454
  %475 = phi i32 [ 0, %450 ], [ 0, %454 ], [ 1, %465 ], [ 0, %470 ]
  %476 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 7
  store i32 %475, i32* %476, align 4
  %477 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 8
  store i32 2, i32* %477, align 8
  %478 = load i32, i32* %171, align 4
  %479 = icmp eq i32 %478, 1
  br i1 %479, label %480, label %500

480:                                              ; preds = %474
  %481 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node"**
  %482 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %481, align 8
  %483 = icmp eq %"class.std::__1::__tree_node"* %482, null
  br i1 %483, label %500, label %484

484:                                              ; preds = %480, %496
  %485 = phi %"class.std::__1::__tree_node"* [ %498, %496 ], [ %482, %480 ]
  %486 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %485, i64 0, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = icmp sgt i32 %487, 9
  br i1 %488, label %489, label %491

489:                                              ; preds = %484
  %490 = bitcast %"class.std::__1::__tree_node"* %485 to %"class.std::__1::__tree_node"**
  br label %496

491:                                              ; preds = %484
  %492 = icmp eq i32 %487, 9
  br i1 %492, label %503, label %493

493:                                              ; preds = %491
  %494 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %485, i64 0, i32 0, i32 1
  %495 = bitcast %"class.std::__1::__tree_node_base"** %494 to %"class.std::__1::__tree_node"**
  br label %496

496:                                              ; preds = %493, %489
  %497 = phi %"class.std::__1::__tree_node"** [ %490, %489 ], [ %495, %493 ]
  %498 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %497, align 8
  %499 = icmp eq %"class.std::__1::__tree_node"* %498, null
  br i1 %499, label %500, label %484

500:                                              ; preds = %496, %480, %474
  %501 = icmp eq i32 %478, 0
  %502 = select i1 %501, i32 2, i32 0
  br label %503

503:                                              ; preds = %491, %500
  %504 = phi i32 [ %502, %500 ], [ 1, %491 ]
  %505 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 0, i64 9
  store i32 %504, i32* %505, align 4
  %506 = bitcast %"class.base::internal::flat_tree"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %506) #15
  %507 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %16, i64 0, i32 0, i32 0, i32 0
  %508 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %16, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %506, i8 0, i64 24, i1 false) #15
  %509 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %509) #15
  %510 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %512 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %512, i8 -86, i64 24, i1 false)
  %513 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kDisableGLExtensionsE, i64 0, i64 0)) #15
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %17, %"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kDisableGLExtensionsE, i64 0, i64 0), i64 %513) #15
  %514 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %515 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %514, i64 0, i32 1, i32 0
  %516 = load i8, i8* %515, align 1
  %517 = icmp slt i8 %516, 0
  %518 = load i64, i64* %511, align 8
  %519 = zext i8 %516 to i64
  %520 = select i1 %517, i64 %518, i64 %519
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %538, label %522

522:                                              ; preds = %503
  %523 = bitcast %"class.std::__1::vector.142"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %523) #15
  %524 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %18, i64 0, i32 0, i32 0
  %525 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %18, i64 0, i32 0, i32 1
  %526 = bitcast %"class.std::__1::vector.142"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %526, i8 -86, i64 24, i1 false)
  %527 = load i8*, i8** %510, align 8
  %528 = select i1 %517, i8* %527, i8* %509
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.142"* nonnull sret %18, i8* %528, i64 %520, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i32 0, i32 1) #15
  %529 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %524, align 8
  %530 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %525, align 8
  call void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE6insertINS3_11__wrap_iterIPS6_EEEEvT_SJ_(%"class.base::internal::flat_tree"* nonnull %16, %"class.base::BasicStringPiece"* %529, %"class.base::BasicStringPiece"* %530)
  %531 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %524, align 8
  %532 = icmp eq %"class.base::BasicStringPiece"* %531, null
  br i1 %532, label %537, label %533

533:                                              ; preds = %522
  %534 = ptrtoint %"class.base::BasicStringPiece"* %531 to i64
  %535 = bitcast %"class.base::BasicStringPiece"** %525 to i64*
  store i64 %534, i64* %535, align 8
  %536 = bitcast %"class.base::BasicStringPiece"* %531 to i8*
  call void @_ZdlPv(i8* %536) #16
  br label %537

537:                                              ; preds = %522, %533
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %523) #15
  br label %538

538:                                              ; preds = %537, %503
  %539 = bitcast %"class.std::__1::set"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %539) #15
  %540 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %19, i64 0, i32 0, i32 0
  %541 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %19, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %542 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %543 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %544 = bitcast %"class.std::__1::__tree_node_base"** %541 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %544, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %543, %"class.std::__1::__tree_end_node"** %540, align 16
  %545 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches31kDisableGpuDriverBugWorkaroundsE, i64 0, i64 0)) #15
  br i1 %545, label %681, label %546

546:                                              ; preds = %538
  %547 = call %"class.gpu::GpuDriverBugList"* @_ZN3gpu16GpuDriverBugList6CreateEv() #15
  %548 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %548) #15
  store i32 0, i32* %20, align 4
  %549 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches26kGpuDriverBugListTestGroupE, i64 0, i64 0)) #15
  br i1 %549, label %550, label %573

550:                                              ; preds = %546
  %551 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %551) #15
  %552 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %554 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %554, i8 -86, i64 24, i1 false)
  %555 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches26kGpuDriverBugListTestGroupE, i64 0, i64 0)) #15
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %21, %"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches26kGpuDriverBugListTestGroupE, i64 0, i64 0), i64 %555) #15
  %556 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %557 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %556, i64 0, i32 1, i32 0
  %558 = load i8, i8* %557, align 1
  %559 = icmp slt i8 %558, 0
  %560 = load i8*, i8** %552, align 8
  %561 = select i1 %559, i8* %560, i8* %551
  %562 = load i64, i64* %553, align 8
  %563 = zext i8 %558 to i64
  %564 = select i1 %559, i64 %562, i64 %563
  %565 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %561, i64 %564, i32* nonnull %20) #15
  br i1 %565, label %567, label %566

566:                                              ; preds = %550
  store i32 0, i32* %20, align 4
  br label %567

567:                                              ; preds = %550, %566
  %568 = load i8, i8* %557, align 1
  %569 = icmp slt i8 %568, 0
  br i1 %569, label %570, label %572

570:                                              ; preds = %567
  %571 = load i8*, i8** %552, align 8
  call void @_ZdlPv(i8* %571) #16
  br label %572

572:                                              ; preds = %567, %570
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %551) #15
  br label %573

573:                                              ; preds = %572, %546
  %574 = bitcast %"class.std::__1::set"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %574) #15
  %575 = getelementptr inbounds %"class.gpu::GpuDriverBugList", %"class.gpu::GpuDriverBugList"* %547, i64 0, i32 0
  %576 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %576) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %576, i8 0, i64 24, i1 false) #15
  %577 = load i32, i32* %20, align 4
  call void @_ZN3gpu14GpuControlList12MakeDecisionENS0_6OsTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_7GPUInfoEj(%"class.std::__1::set"* nonnull sret %22, %"class.gpu::GpuControlList"* %575, i32 6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23, %"struct.gpu::GPUInfo"* dereferenceable(696) %1, i32 %577) #15
  %578 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %19, i64 0, i32 0
  %579 = bitcast %"class.std::__1::__tree_end_node"* %543 to %"class.std::__1::__tree_node"**
  %580 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %579, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"* nonnull %578, %"class.std::__1::__tree_node"* %580) #15
  %581 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  %582 = bitcast %"class.std::__1::set"* %22 to <2 x i64>*
  %583 = load <2 x i64>, <2 x i64>* %582, align 16
  %584 = bitcast %"class.std::__1::set"* %19 to <2 x i64>*
  store <2 x i64> %583, <2 x i64>* %584, align 16
  %585 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %586 = load i64, i64* %585, align 16
  store i64 %586, i64* %542, align 16
  %587 = icmp eq i64 %586, 0
  %588 = extractelement <2 x i64> %583, i32 1
  br i1 %587, label %589, label %591

589:                                              ; preds = %573
  %590 = inttoptr i64 %588 to %"class.std::__1::__tree_node"*
  store %"class.std::__1::__tree_end_node"* %543, %"class.std::__1::__tree_end_node"** %540, align 16
  br label %596

591:                                              ; preds = %573
  %592 = inttoptr i64 %588 to %"class.std::__1::__tree_node_base"*
  %593 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %592, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %543, %"class.std::__1::__tree_end_node"** %593, align 8
  %594 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %22, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %581, %"class.std::__1::__tree_end_node"** %594, align 16
  %595 = bitcast %"class.std::__1::__tree_end_node"* %581 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %595, i8 0, i64 16, i1 false) #15
  br label %596

596:                                              ; preds = %589, %591
  %597 = phi %"class.std::__1::__tree_node"* [ %590, %589 ], [ null, %591 ]
  %598 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %22, i64 0, i32 0
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"* nonnull %598, %"class.std::__1::__tree_node"* %597) #15
  %599 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %600 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %599, i64 0, i32 1, i32 0
  %601 = load i8, i8* %600, align 1
  %602 = icmp slt i8 %601, 0
  br i1 %602, label %603, label %606

603:                                              ; preds = %596
  %604 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load i8*, i8** %604, align 8
  call void @_ZdlPv(i8* %605) #16
  br label %606

606:                                              ; preds = %596, %603
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %576) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %574) #15
  %607 = call dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK3gpu14GpuControlList16GetActiveEntriesEv(%"class.gpu::GpuControlList"* %575) #15
  %608 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 5
  %609 = icmp eq %"class.std::__1::vector.6"* %608, %607
  br i1 %609, label %615, label %610

610:                                              ; preds = %606
  %611 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %607, i64 0, i32 0, i32 0
  %612 = load i32*, i32** %611, align 8
  %613 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %607, i64 0, i32 0, i32 1
  %614 = load i32*, i32** %613, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.6"* %608, i32* %612, i32* %614) #15
  br label %615

615:                                              ; preds = %610, %606
  %616 = bitcast %"class.std::__1::vector.98"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %616) #15
  call void @_ZN3gpu14GpuControlList21GetDisabledExtensionsEv(%"class.std::__1::vector.98"* nonnull sret %24, %"class.gpu::GpuControlList"* %575) #15
  %617 = bitcast %"class.std::__1::vector.98"* %24 to i64*
  %618 = load i64, i64* %617, align 8
  %619 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %24, i64 0, i32 0, i32 1
  %620 = bitcast %"class.std::__1::basic_string"** %619 to i64*
  %621 = load i64, i64* %620, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %616) #15
  %622 = inttoptr i64 %618 to %"class.std::__1::basic_string"*
  %623 = inttoptr i64 %621 to %"class.std::__1::basic_string"*
  call void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE6insertINS3_11__wrap_iterIPNS3_12basic_stringIcS5_NSB_IcEEEEEEEEvT_SM_(%"class.base::internal::flat_tree"* nonnull %16, %"class.std::__1::basic_string"* %622, %"class.std::__1::basic_string"* %623)
  %624 = bitcast %"class.base::internal::flat_tree"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %624) #15
  %625 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %25, i64 0, i32 0, i32 0, i32 0
  %626 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %25, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %624, i8 0, i64 24, i1 false) #15
  %627 = bitcast %"class.std::__1::vector.98"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %627) #15
  %628 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %26, i64 0, i32 0, i32 0
  %629 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %26, i64 0, i32 0, i32 1
  %630 = bitcast %"class.std::__1::vector.98"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %630, i8 -86, i64 24, i1 false)
  call void @_ZN3gpu14GpuControlList26GetDisabledWebGLExtensionsEv(%"class.std::__1::vector.98"* nonnull sret %26, %"class.gpu::GpuControlList"* %575) #15
  %631 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %628, align 8
  %632 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %629, align 8
  call void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE6insertINS3_11__wrap_iterIPNS3_12basic_stringIcS5_NSB_IcEEEEEEEEvT_SM_(%"class.base::internal::flat_tree"* nonnull %25, %"class.std::__1::basic_string"* %631, %"class.std::__1::basic_string"* %632)
  %633 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %633) #15
  call void @_ZN3gfx19MakeExtensionStringERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEE(%"class.std::__1::basic_string"* nonnull sret %27, %"class.base::internal::flat_tree"* nonnull dereferenceable(24) %25) #15
  %634 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 3
  %635 = bitcast %"class.std::__1::basic_string"* %634 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %636 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %635, i64 0, i32 1, i32 0
  %637 = load i8, i8* %636, align 1
  %638 = icmp slt i8 %637, 0
  br i1 %638, label %639, label %642

639:                                              ; preds = %615
  %640 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %634, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %641 = load i8*, i8** %640, align 8
  call void @_ZdlPv(i8* %641) #16
  br label %642

642:                                              ; preds = %639, %615
  %643 = bitcast %"class.std::__1::basic_string"* %634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %643, i8* nonnull align 8 %633, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %633) #15
  %644 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %628, align 8
  %645 = icmp eq %"class.std::__1::basic_string"* %644, null
  br i1 %645, label %667, label %646

646:                                              ; preds = %642
  %647 = bitcast %"class.std::__1::basic_string"* %644 to i8*
  %648 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %629, align 8
  %649 = icmp eq %"class.std::__1::basic_string"* %648, %644
  br i1 %649, label %665, label %650

650:                                              ; preds = %646, %660
  %651 = phi %"class.std::__1::basic_string"* [ %652, %660 ], [ %648, %646 ]
  %652 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %651, i64 -1
  %653 = bitcast %"class.std::__1::basic_string"* %652 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %654 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %653, i64 0, i32 1, i32 0
  %655 = load i8, i8* %654, align 1
  %656 = icmp slt i8 %655, 0
  br i1 %656, label %657, label %660

657:                                              ; preds = %650
  %658 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %652, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %659 = load i8*, i8** %658, align 8
  call void @_ZdlPv(i8* %659) #16
  br label %660

660:                                              ; preds = %657, %650
  %661 = icmp eq %"class.std::__1::basic_string"* %652, %644
  br i1 %661, label %662, label %650

662:                                              ; preds = %660
  %663 = bitcast %"class.std::__1::vector.98"* %26 to i8**
  %664 = load i8*, i8** %663, align 8
  br label %665

665:                                              ; preds = %662, %646
  %666 = phi i8* [ %664, %662 ], [ %647, %646 ]
  store %"class.std::__1::basic_string"* %644, %"class.std::__1::basic_string"** %629, align 8
  call void @_ZdlPv(i8* %666) #16
  br label %667

667:                                              ; preds = %642, %665
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %627) #15
  %668 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %625, align 8
  %669 = icmp eq %"class.base::BasicStringPiece"* %668, null
  br i1 %669, label %674, label %670

670:                                              ; preds = %667
  %671 = ptrtoint %"class.base::BasicStringPiece"* %668 to i64
  %672 = bitcast %"class.base::BasicStringPiece"** %626 to i64*
  store i64 %671, i64* %672, align 8
  %673 = bitcast %"class.base::BasicStringPiece"* %668 to i8*
  call void @_ZdlPv(i8* %673) #16
  br label %674

674:                                              ; preds = %667, %670
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %624) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %548) #15
  %675 = icmp eq %"class.gpu::GpuDriverBugList"* %547, null
  br i1 %675, label %681, label %676

676:                                              ; preds = %674
  %677 = bitcast %"class.gpu::GpuDriverBugList"* %547 to void (%"class.gpu::GpuDriverBugList"*)***
  %678 = load void (%"class.gpu::GpuDriverBugList"*)**, void (%"class.gpu::GpuDriverBugList"*)*** %677, align 8
  %679 = getelementptr inbounds void (%"class.gpu::GpuDriverBugList"*)*, void (%"class.gpu::GpuDriverBugList"*)** %678, i64 1
  %680 = load void (%"class.gpu::GpuDriverBugList"*)*, void (%"class.gpu::GpuDriverBugList"*)** %679, align 8
  call void %680(%"class.gpu::GpuDriverBugList"* nonnull %547) #15
  br label %681

681:                                              ; preds = %676, %674, %538
  %682 = phi i64 [ 0, %538 ], [ %621, %674 ], [ %621, %676 ]
  %683 = phi i64 [ 0, %538 ], [ %618, %674 ], [ %618, %676 ]
  call void @_ZN3gpu16GpuDriverBugList32AppendWorkaroundsFromCommandLineEPNSt3__13setIiNS1_4lessIiEENS1_9allocatorIiEEEERKN4base11CommandLineE(%"class.std::__1::set"* nonnull %19, %"class.base::CommandLine"* dereferenceable(56) %3) #15
  %684 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 1
  %685 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %684, i64 0, i32 0, i32 0
  %686 = load i32*, i32** %685, align 8
  %687 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %540, align 16
  %688 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_21__tree_const_iteratorIiPNS_11__tree_nodeIiPvEElEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPiEEE4typeENSG_IPKiEESC_SC_(%"class.std::__1::vector"* %684, i32* %686, %"class.std::__1::__tree_end_node"* %687, %"class.std::__1::__tree_end_node"* %543)
  %689 = bitcast %"class.base::BasicStringPiece"** %508 to i64*
  %690 = load i64, i64* %689, align 8
  %691 = bitcast %"class.base::internal::flat_tree"* %16 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = icmp eq i64 %690, %692
  br i1 %693, label %706, label %694

694:                                              ; preds = %681
  %695 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %695) #15
  call void @_ZN3gfx19MakeExtensionStringERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEE(%"class.std::__1::basic_string"* nonnull sret %28, %"class.base::internal::flat_tree"* nonnull dereferenceable(24) %16) #15
  %696 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %9, i64 0, i32 2
  %697 = bitcast %"class.std::__1::basic_string"* %696 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  %699 = load i8, i8* %698, align 1
  %700 = icmp slt i8 %699, 0
  br i1 %700, label %701, label %704

701:                                              ; preds = %694
  %702 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %696, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = load i8*, i8** %702, align 8
  call void @_ZdlPv(i8* %703) #16
  br label %704

704:                                              ; preds = %701, %694
  %705 = bitcast %"class.std::__1::basic_string"* %696 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %705, i8* nonnull align 8 %695, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %695) #15
  br label %706

706:                                              ; preds = %681, %704
  %707 = call zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"* nonnull %9, i32 25) #15
  br i1 %707, label %710, label %708

708:                                              ; preds = %706
  %709 = call zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"* nonnull %9, i32 37) #15
  br i1 %709, label %710, label %711

710:                                              ; preds = %708, %706
  store i32 1, i32* %389, align 8
  br label %711

711:                                              ; preds = %708, %710
  %712 = call zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"* nonnull %9, i32 25) #15
  br i1 %712, label %713, label %715

713:                                              ; preds = %711
  %714 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches13kDisableD3D11E, i64 0, i64 0)) #15
  call void @_ZN4base11CommandLine12AppendSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches13kDisableD3D11E, i64 0, i64 0), i64 %714) #15
  br label %715

715:                                              ; preds = %713, %711
  %716 = call zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"* nonnull %9, i32 37) #15
  br i1 %716, label %717, label %719

717:                                              ; preds = %715
  %718 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kDisableES3GLContextE, i64 0, i64 0)) #15
  call void @_ZN4base11CommandLine12AppendSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kDisableES3GLContextE, i64 0, i64 0), i64 %718) #15
  br label %719

719:                                              ; preds = %717, %715
  %720 = call zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"* nonnull %9, i32 38) #15
  br i1 %720, label %721, label %723

721:                                              ; preds = %719
  %722 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kDisableES3GLContextForTestingE, i64 0, i64 0)) #15
  call void @_ZN4base11CommandLine12AppendSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kDisableES3GLContextForTestingE, i64 0, i64 0), i64 %722) #15
  br label %723

723:                                              ; preds = %719, %721
  call void @_ZN3gpu14GpuFeatureInfoC1EOS0_(%"struct.gpu::GpuFeatureInfo"* %0, %"struct.gpu::GpuFeatureInfo"* nonnull dereferenceable(184) %9) #15
  %724 = inttoptr i64 %683 to %"class.std::__1::basic_string"*
  %725 = icmp eq i64 %683, 0
  br i1 %725, label %743, label %726

726:                                              ; preds = %723
  %727 = inttoptr i64 %682 to %"class.std::__1::basic_string"*
  %728 = icmp eq %"class.std::__1::basic_string"* %727, %724
  br i1 %728, label %741, label %729

729:                                              ; preds = %726, %739
  %730 = phi %"class.std::__1::basic_string"* [ %731, %739 ], [ %727, %726 ]
  %731 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %730, i64 -1
  %732 = bitcast %"class.std::__1::basic_string"* %731 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %733 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %732, i64 0, i32 1, i32 0
  %734 = load i8, i8* %733, align 1
  %735 = icmp slt i8 %734, 0
  br i1 %735, label %736, label %739

736:                                              ; preds = %729
  %737 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %731, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %738 = load i8*, i8** %737, align 8
  call void @_ZdlPv(i8* %738) #16
  br label %739

739:                                              ; preds = %736, %729
  %740 = icmp eq %"class.std::__1::basic_string"* %731, %724
  br i1 %740, label %741, label %729

741:                                              ; preds = %739, %726
  %742 = inttoptr i64 %683 to i8*
  call void @_ZdlPv(i8* %742) #16
  br label %743

743:                                              ; preds = %723, %741
  %744 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %19, i64 0, i32 0
  %745 = bitcast %"class.std::__1::__tree_end_node"* %543 to %"class.std::__1::__tree_node"**
  %746 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %745, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"* nonnull %744, %"class.std::__1::__tree_node"* %746) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %539) #15
  %747 = load i8, i8* %515, align 1
  %748 = icmp slt i8 %747, 0
  br i1 %748, label %749, label %751

749:                                              ; preds = %743
  %750 = load i8*, i8** %510, align 8
  call void @_ZdlPv(i8* %750) #16
  br label %751

751:                                              ; preds = %743, %749
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %509) #15
  %752 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %507, align 8
  %753 = icmp eq %"class.base::BasicStringPiece"* %752, null
  br i1 %753, label %757, label %754

754:                                              ; preds = %751
  %755 = ptrtoint %"class.base::BasicStringPiece"* %752 to i64
  store i64 %755, i64* %689, align 8
  %756 = bitcast %"class.base::BasicStringPiece"* %752 to i8*
  call void @_ZdlPv(i8* %756) #16
  br label %757

757:                                              ; preds = %751, %754
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %506) #15
  %758 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0
  %759 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_node"**
  %760 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %759, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"* nonnull %758, %"class.std::__1::__tree_node"* %760) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #15
  call void @_ZN3gpu14GpuFeatureInfoD1Ev(%"struct.gpu::GpuFeatureInfo"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %174) #15
  br label %761

761:                                              ; preds = %167, %757
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.gpu::GpuBlocklist"* @_ZN3gpu12GpuBlocklist6CreateEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #2

declare void @_ZN3gpu14GpuControlList12MakeDecisionENS0_6OsTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_7GPUInfoEj(%"class.std::__1::set"* sret, %"class.gpu::GpuControlList"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.gpu::GPUInfo"* dereferenceable(696), i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.6"* @_ZNK3gpu14GpuControlList16GetActiveEntriesEv(%"class.gpu::GpuControlList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3gpu12_GLOBAL__N_132GetGpuRasterizationFeatureStatusERKNSt3__13setIiNS1_4lessIiEENS1_9allocatorIiEEEERKN4base11CommandLineE(%"class.std::__1::set"* nocapture readonly dereferenceable(24), %"class.base::CommandLine"* dereferenceable(56)) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kDisableGpuRasterizationE, i64 0, i64 0)) #15
  br i1 %4, label %72, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kEnableGpuRasterizationE, i64 0, i64 0)) #15
  br i1 %6, label %72, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %24
  %13 = phi %"class.std::__1::__tree_node"* [ %26, %24 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 3
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node"**
  br label %24

19:                                               ; preds = %12
  %20 = icmp eq i32 %15, 3
  br i1 %20, label %72, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node"**
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi %"class.std::__1::__tree_node"** [ %18, %17 ], [ %23, %21 ]
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node"* %26, null
  br i1 %27, label %28, label %12

28:                                               ; preds = %24, %7
  %29 = tail call zeroext i1 @_ZN8features13IsUsingVulkanEv() #15
  br i1 %29, label %30, label %69

30:                                               ; preds = %28
  %31 = tail call %"class.base::FeatureList"* @_ZN4base11FeatureList11GetInstanceEv() #15
  %32 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #15
  %33 = load i8*, i8** getelementptr inbounds (%"struct.base::Feature", %"struct.base::Feature"* @_ZN8features30kDefaultEnableGpuRasterizationE, i64 0, i32 0), align 8
  %34 = tail call i64 @strlen(i8* %33) #15
  %35 = icmp ugt i64 %34, -17
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #17
  unreachable

38:                                               ; preds = %30
  %39 = icmp ult i64 %34, 23
  br i1 %39, label %49, label %40

40:                                               ; preds = %38
  %41 = add nuw i64 %34, 16
  %42 = and i64 %41, -16
  %43 = tail call i8* @_Znwm(i64 %42) #16
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %43, i8** %44, align 8
  %45 = or i64 %42, -9223372036854775808
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %47, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %54

49:                                               ; preds = %38
  %50 = trunc i64 %34 to i8
  %51 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 %50, i8* %52, align 1
  %53 = icmp eq i64 %34, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %40
  %55 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %51, %49 ], [ %48, %40 ]
  %56 = phi i8* [ %32, %49 ], [ %43, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 %33, i64 %34, i1 false) #15
  br label %57

57:                                               ; preds = %54, %49
  %58 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %55, %54 ], [ %51, %49 ]
  %59 = phi i8* [ %56, %54 ], [ %32, %49 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %34
  store i8 0, i8* %60, align 1
  %61 = call zeroext i1 @_ZNK4base11FeatureList34IsFeatureOverriddenFromCommandLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_13OverrideStateE(%"class.base::FeatureList"* %31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 1) #15
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #16
  br label %68

68:                                               ; preds = %65, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #15
  br i1 %61, label %69, label %72

69:                                               ; preds = %68, %28
  %70 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features30kDefaultEnableGpuRasterizationE) #15
  %71 = select i1 %70, i32 0, i32 2
  br label %72

72:                                               ; preds = %19, %68, %69, %5, %2
  %73 = phi i32 [ 2, %2 ], [ 0, %5 ], [ 0, %68 ], [ %71, %69 ], [ 1, %19 ]
  ret i32 %73
}

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.142"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE6insertINS3_11__wrap_iterIPS6_EEEEvT_SJ_(%"class.base::internal::flat_tree"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare", align 1
  %5 = icmp eq %"class.base::BasicStringPiece"* %1, %2
  br i1 %5, label %81, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 1
  %8 = icmp eq %"class.base::BasicStringPiece"* %7, %2
  %9 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  br i1 %8, label %10, label %13

10:                                               ; preds = %6
  %11 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %12 = tail call { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE21emplace_hint_key_argsIS6_JRKS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEENSJ_IPSG_EERKT_DpOT0_(%"class.base::internal::flat_tree"* %0, %"class.base::BasicStringPiece"* %11, %"class.base::BasicStringPiece"* dereferenceable(16) %1, %"class.base::BasicStringPiece"* dereferenceable(16) %1) #15
  br label %81

13:                                               ; preds = %6
  %14 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 4
  %20 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = inttoptr i64 %17 to %"class.base::BasicStringPiece"*
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 %19
  br label %23

23:                                               ; preds = %13, %43
  %24 = phi %"class.base::BasicStringPiece"* [ %22, %13 ], [ %48, %43 ]
  %25 = phi %"class.base::BasicStringPiece"* [ %21, %13 ], [ %44, %43 ]
  %26 = phi %"class.base::BasicStringPiece"* [ %1, %13 ], [ %46, %43 ]
  %27 = phi i64 [ %19, %13 ], [ %45, %43 ]
  %28 = tail call { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE13append_uniqueIRS6_EENS3_4pairINS3_11__wrap_iterIPS6_EEbEESK_SK_OT_(%"class.base::internal::flat_tree"* %0, %"class.base::BasicStringPiece"* %25, %"class.base::BasicStringPiece"* %24, %"class.base::BasicStringPiece"* dereferenceable(16) %26)
  %29 = extractvalue { %"class.base::BasicStringPiece"*, i8 } %28, 1
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %20, align 8
  br label %43

34:                                               ; preds = %23
  %35 = extractvalue { %"class.base::BasicStringPiece"*, i8 } %28, 0
  %36 = load i64, i64* %16, align 8
  %37 = ptrtoint %"class.base::BasicStringPiece"* %35 to i64
  %38 = sub i64 %37, %36
  %39 = ashr exact i64 %38, 4
  %40 = icmp slt i64 %39, %27
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = inttoptr i64 %36 to %"class.base::BasicStringPiece"*
  br label %43

43:                                               ; preds = %32, %34
  %44 = phi %"class.base::BasicStringPiece"* [ %33, %32 ], [ %42, %34 ]
  %45 = phi i64 [ %27, %32 ], [ %41, %34 ]
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %26, i64 1
  %47 = icmp eq %"class.base::BasicStringPiece"* %46, %2
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %44, i64 %19
  br i1 %47, label %49, label %23

49:                                               ; preds = %43
  %50 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  tail call void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPS6_EESH_(%"class.base::internal::flat_tree"* %0, %"class.base::BasicStringPiece"* %48, %"class.base::BasicStringPiece"* %50)
  %51 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %20, align 8
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %51, i64 %45
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %51, i64 %19
  %54 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %55 = getelementptr inbounds %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare", %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55)
  %56 = ptrtoint %"class.base::BasicStringPiece"* %52 to i64
  %57 = ptrtoint %"class.base::BasicStringPiece"* %53 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 4
  %60 = ptrtoint %"class.base::BasicStringPiece"* %54 to i64
  %61 = sub i64 %60, %57
  %62 = ashr exact i64 %61, 4
  %63 = icmp slt i64 %62, %59
  %64 = select i1 %63, i64 %62, i64 %59
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %49
  %67 = icmp slt i64 %64, 576460752303423487
  %68 = select i1 %67, i64 %64, i64 576460752303423487
  br label %69

69:                                               ; preds = %74, %66
  %70 = phi i64 [ %75, %74 ], [ %68, %66 ]
  %71 = shl i64 %70, 4
  %72 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %71, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #15
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = lshr i64 %70, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69

77:                                               ; preds = %74, %49
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::BasicStringPiece"* %52, %"class.base::BasicStringPiece"* %53, %"class.base::BasicStringPiece"* %54, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %59, i64 %62, %"class.base::BasicStringPiece"* null, i64 0) #15
  br label %80

78:                                               ; preds = %69
  %79 = bitcast i8* %72 to %"class.base::BasicStringPiece"*
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::BasicStringPiece"* %52, %"class.base::BasicStringPiece"* %53, %"class.base::BasicStringPiece"* %54, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %59, i64 %62, %"class.base::BasicStringPiece"* nonnull %79, i64 %70) #15
  call void @_ZdlPv(i8* nonnull %72) #16
  br label %80

80:                                               ; preds = %77, %78
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55)
  br label %81

81:                                               ; preds = %3, %80, %10
  ret void
}

declare %"class.gpu::GpuDriverBugList"* @_ZN3gpu16GpuDriverBugList6CreateEv() local_unnamed_addr #2

declare void @_ZN3gpu14GpuControlList21GetDisabledExtensionsEv(%"class.std::__1::vector.98"* sret, %"class.gpu::GpuControlList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE6insertINS3_11__wrap_iterIPNS3_12basic_stringIcS5_NSB_IcEEEEEEEEvT_SM_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare", align 1
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %6, label %97, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %9 = icmp eq %"class.std::__1::basic_string"* %8, %2
  %10 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  br i1 %9, label %11, label %29

11:                                               ; preds = %7
  %12 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %13 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  store i8* %22, i8** %14, align 8
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %17 to i64
  %27 = select i1 %18, i64 %25, i64 %26
  store i64 %27, i64* %23, align 8
  %28 = call { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE21emplace_hint_key_argsIS6_JS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEENSH_IPKS6_EERKT_DpOT0_(%"class.base::internal::flat_tree"* %0, %"class.base::BasicStringPiece"* %12, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br label %97

29:                                               ; preds = %7
  %30 = bitcast %"class.base::BasicStringPiece"** %10 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 4
  %36 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = inttoptr i64 %33 to %"class.base::BasicStringPiece"*
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 %35
  br label %39

39:                                               ; preds = %29, %59
  %40 = phi %"class.base::BasicStringPiece"* [ %38, %29 ], [ %64, %59 ]
  %41 = phi %"class.base::BasicStringPiece"* [ %37, %29 ], [ %60, %59 ]
  %42 = phi %"class.std::__1::basic_string"* [ %1, %29 ], [ %62, %59 ]
  %43 = phi i64 [ %35, %29 ], [ %61, %59 ]
  %44 = tail call { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE13append_uniqueIRNS3_12basic_stringIcS5_NSB_IcEEEEEENS3_4pairINS3_11__wrap_iterIPS6_EEbEESN_SN_OT_(%"class.base::internal::flat_tree"* %0, %"class.base::BasicStringPiece"* %41, %"class.base::BasicStringPiece"* %40, %"class.std::__1::basic_string"* dereferenceable(24) %42)
  %45 = extractvalue { %"class.base::BasicStringPiece"*, i8 } %44, 1
  %46 = and i8 %45, 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %39
  %49 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %36, align 8
  br label %59

50:                                               ; preds = %39
  %51 = extractvalue { %"class.base::BasicStringPiece"*, i8 } %44, 0
  %52 = load i64, i64* %32, align 8
  %53 = ptrtoint %"class.base::BasicStringPiece"* %51 to i64
  %54 = sub i64 %53, %52
  %55 = ashr exact i64 %54, 4
  %56 = icmp slt i64 %55, %43
  %57 = select i1 %56, i64 %55, i64 %43
  %58 = inttoptr i64 %52 to %"class.base::BasicStringPiece"*
  br label %59

59:                                               ; preds = %48, %50
  %60 = phi %"class.base::BasicStringPiece"* [ %49, %48 ], [ %58, %50 ]
  %61 = phi i64 [ %43, %48 ], [ %57, %50 ]
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %62, %2
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %60, i64 %35
  br i1 %63, label %65, label %39

65:                                               ; preds = %59
  %66 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  tail call void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPS6_EESH_(%"class.base::internal::flat_tree"* %0, %"class.base::BasicStringPiece"* %64, %"class.base::BasicStringPiece"* %66)
  %67 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %36, align 8
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 %61
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 %35
  %70 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %71 = getelementptr inbounds %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare", %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71)
  %72 = ptrtoint %"class.base::BasicStringPiece"* %68 to i64
  %73 = ptrtoint %"class.base::BasicStringPiece"* %69 to i64
  %74 = sub i64 %73, %72
  %75 = ashr exact i64 %74, 4
  %76 = ptrtoint %"class.base::BasicStringPiece"* %70 to i64
  %77 = sub i64 %76, %73
  %78 = ashr exact i64 %77, 4
  %79 = icmp slt i64 %78, %75
  %80 = select i1 %79, i64 %78, i64 %75
  %81 = icmp sgt i64 %80, 0
  br i1 %81, label %82, label %93

82:                                               ; preds = %65
  %83 = icmp slt i64 %80, 576460752303423487
  %84 = select i1 %83, i64 %80, i64 576460752303423487
  br label %85

85:                                               ; preds = %90, %82
  %86 = phi i64 [ %91, %90 ], [ %84, %82 ]
  %87 = shl i64 %86, 4
  %88 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %87, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #15
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = lshr i64 %86, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %85

93:                                               ; preds = %90, %65
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::BasicStringPiece"* %68, %"class.base::BasicStringPiece"* %69, %"class.base::BasicStringPiece"* %70, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %75, i64 %78, %"class.base::BasicStringPiece"* null, i64 0) #15
  br label %96

94:                                               ; preds = %85
  %95 = bitcast i8* %88 to %"class.base::BasicStringPiece"*
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::BasicStringPiece"* %68, %"class.base::BasicStringPiece"* %69, %"class.base::BasicStringPiece"* %70, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %75, i64 %78, %"class.base::BasicStringPiece"* nonnull %95, i64 %86) #15
  call void @_ZdlPv(i8* nonnull %88) #16
  br label %96

96:                                               ; preds = %93, %94
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71)
  br label %97

97:                                               ; preds = %3, %96, %11
  ret void
}

declare void @_ZN3gpu14GpuControlList26GetDisabledWebGLExtensionsEv(%"class.std::__1::vector.98"* sret, %"class.gpu::GpuControlList"*) local_unnamed_addr #2

declare void @_ZN3gfx19MakeExtensionStringERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEE(%"class.std::__1::basic_string"* sret, %"class.base::internal::flat_tree"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3gpu16GpuDriverBugList32AppendWorkaroundsFromCommandLineEPNSt3__13setIiNS1_4lessIiEENS1_9allocatorIiEEEERKN4base11CommandLineE(%"class.std::__1::set"*, %"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_21__tree_const_iteratorIiPNS_11__tree_nodeIiPvEElEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPiEEE4typeENSG_IPKiEESC_SC_(%"class.std::__1::vector"*, i32*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = bitcast i32* %1 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %2, %3
  br i1 %8, label %635, label %9

9:                                                ; preds = %4, %40
  %10 = phi i64 [ %12, %40 ], [ 0, %4 ]
  %11 = phi %"class.std::__1::__tree_end_node"* [ %41, %40 ], [ %2, %4 ]
  %12 = add nuw nsw i64 %10, 1
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %14 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node_base"* %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %9
  %17 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_end_node"**
  %20 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 0, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, %17
  br i1 %23, label %40, label %31

24:                                               ; preds = %9, %24
  %25 = phi %"class.std::__1::__tree_node_base"* [ %27, %24 ], [ %14, %9 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 0
  br label %40

31:                                               ; preds = %16, %31
  %32 = phi %"class.std::__1::__tree_end_node"** [ %35, %31 ], [ %19, %16 ]
  %33 = bitcast %"class.std::__1::__tree_end_node"** %32 to %"class.std::__1::__tree_node_base"**
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %34
  br i1 %39, label %40, label %31

40:                                               ; preds = %31, %29, %16
  %41 = phi %"class.std::__1::__tree_end_node"* [ %30, %29 ], [ %20, %16 ], [ %36, %31 ]
  %42 = icmp eq %"class.std::__1::__tree_end_node"* %41, %3
  br i1 %42, label %43, label %9

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %48 = load i32*, i32** %47, align 8
  %49 = ptrtoint i32* %48 to i64
  %50 = sub i64 %46, %49
  %51 = ashr exact i64 %50, 2
  %52 = icmp slt i64 %10, %51
  %53 = bitcast i32** %47 to i64*
  br i1 %52, label %54, label %346

54:                                               ; preds = %43
  %55 = sub i64 %49, %5
  %56 = ashr exact i64 %55, 2
  %57 = icmp slt i64 %10, %56
  br i1 %57, label %170, label %58

58:                                               ; preds = %54
  %59 = icmp sgt i64 %55, -4
  br i1 %59, label %60, label %96

60:                                               ; preds = %58
  %61 = icmp eq i64 %55, 0
  br i1 %61, label %123, label %62

62:                                               ; preds = %60, %92
  %63 = phi %"class.std::__1::__tree_end_node"* [ %93, %92 ], [ %2, %60 ]
  %64 = phi i64 [ %94, %92 ], [ %56, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 1, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %76

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::__tree_node_base"*
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 2
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_end_node"**
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, %69
  br i1 %75, label %92, label %83

76:                                               ; preds = %62, %76
  %77 = phi %"class.std::__1::__tree_node_base"* [ %79, %76 ], [ %66, %62 ]
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %81, label %76

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %77, i64 0, i32 0
  br label %92

83:                                               ; preds = %68, %83
  %84 = phi %"class.std::__1::__tree_end_node"** [ %87, %83 ], [ %71, %68 ]
  %85 = bitcast %"class.std::__1::__tree_end_node"** %84 to %"class.std::__1::__tree_node_base"**
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 2
  %88 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, %86
  br i1 %91, label %92, label %83

92:                                               ; preds = %83, %81, %68
  %93 = phi %"class.std::__1::__tree_end_node"* [ %82, %81 ], [ %72, %68 ], [ %88, %83 ]
  %94 = add nsw i64 %64, -1
  %95 = icmp sgt i64 %94, 0
  br i1 %95, label %62, label %123

96:                                               ; preds = %58, %118
  %97 = phi %"class.std::__1::__tree_end_node"* [ %120, %118 ], [ %2, %58 ]
  %98 = phi i64 [ %121, %118 ], [ %56, %58 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %96, %102
  %103 = phi %"class.std::__1::__tree_node_base"* [ %105, %102 ], [ %100, %96 ]
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 1
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %118, label %102

107:                                              ; preds = %96, %107
  %108 = phi %"class.std::__1::__tree_end_node"* [ %112, %107 ], [ %97, %96 ]
  %109 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"class.std::__1::__tree_node_base"*
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 2
  %111 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.std::__1::__tree_end_node"**
  %112 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, %109
  br i1 %115, label %107, label %116

116:                                              ; preds = %107
  %117 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node_base"*
  br label %118

118:                                              ; preds = %102, %116
  %119 = phi %"class.std::__1::__tree_node_base"* [ %117, %116 ], [ %103, %102 ]
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %119, i64 0, i32 0
  %121 = add nsw i64 %98, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %96

123:                                              ; preds = %118, %92, %60
  %124 = phi %"class.std::__1::__tree_end_node"* [ %2, %60 ], [ %93, %92 ], [ %120, %118 ]
  %125 = icmp eq %"class.std::__1::__tree_end_node"* %124, %3
  br i1 %125, label %165, label %126

126:                                              ; preds = %123, %159
  %127 = phi i32* [ %161, %159 ], [ %48, %123 ]
  %128 = phi %"class.std::__1::__tree_end_node"* [ %160, %159 ], [ %124, %123 ]
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::__tree_node"*
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %127, align 4
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %135, label %143

135:                                              ; preds = %126
  %136 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::__tree_node_base"*
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 2
  %138 = bitcast %"class.std::__1::__tree_end_node"* %137 to %"class.std::__1::__tree_end_node"**
  %139 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 0, i32 0
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_node_base"* %141, %136
  br i1 %142, label %159, label %150

143:                                              ; preds = %126, %143
  %144 = phi %"class.std::__1::__tree_node_base"* [ %146, %143 ], [ %133, %126 ]
  %145 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %148, label %143

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 0
  br label %159

150:                                              ; preds = %135, %150
  %151 = phi %"class.std::__1::__tree_end_node"** [ %154, %150 ], [ %138, %135 ]
  %152 = bitcast %"class.std::__1::__tree_end_node"** %151 to %"class.std::__1::__tree_node_base"**
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 2
  %155 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %155, i64 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, %153
  br i1 %158, label %159, label %150

159:                                              ; preds = %150, %148, %135
  %160 = phi %"class.std::__1::__tree_end_node"* [ %149, %148 ], [ %139, %135 ], [ %155, %150 ]
  %161 = getelementptr inbounds i32, i32* %127, i64 1
  %162 = icmp eq %"class.std::__1::__tree_end_node"* %160, %3
  br i1 %162, label %163, label %126

163:                                              ; preds = %159
  %164 = ptrtoint i32* %161 to i64
  br label %165

165:                                              ; preds = %163, %123
  %166 = phi i64 [ %49, %123 ], [ %164, %163 ]
  store i64 %166, i64* %53, align 8
  %167 = icmp sgt i64 %55, 0
  br i1 %167, label %168, label %635

168:                                              ; preds = %165
  %169 = inttoptr i64 %166 to i32*
  br label %170

170:                                              ; preds = %168, %54
  %171 = phi i64 [ %166, %168 ], [ %49, %54 ]
  %172 = phi i32* [ %169, %168 ], [ %48, %54 ]
  %173 = phi %"class.std::__1::__tree_end_node"* [ %124, %168 ], [ %3, %54 ]
  %174 = getelementptr inbounds i32, i32* %1, i64 %12
  %175 = ptrtoint i32* %174 to i64
  %176 = sub i64 %171, %175
  %177 = ashr exact i64 %176, 2
  %178 = getelementptr inbounds i32, i32* %1, i64 %177
  %179 = icmp ult i32* %178, %48
  br i1 %179, label %180, label %293

180:                                              ; preds = %170
  %181 = sub nsw i64 0, %177
  %182 = getelementptr i32, i32* %48, i64 %181
  %183 = bitcast i32* %182 to i8*
  %184 = xor i64 %5, -1
  %185 = getelementptr i8, i8* %183, i64 %184
  %186 = ptrtoint i8* %185 to i64
  %187 = lshr i64 %186, 2
  %188 = add nuw nsw i64 %187, 1
  %189 = icmp ult i64 %188, 8
  br i1 %189, label %190, label %193

190:                                              ; preds = %288, %193, %180
  %191 = phi i32* [ %172, %193 ], [ %172, %180 ], [ %211, %288 ]
  %192 = phi i32* [ %178, %193 ], [ %178, %180 ], [ %212, %288 ]
  br label %300

193:                                              ; preds = %180
  %194 = sub nsw i64 0, %177
  %195 = getelementptr i32, i32* %48, i64 %194
  %196 = bitcast i32* %195 to i8*
  %197 = xor i64 %5, -1
  %198 = getelementptr i8, i8* %196, i64 %197
  %199 = ptrtoint i8* %198 to i64
  %200 = lshr i64 %199, 2
  %201 = add nuw nsw i64 %200, 1
  %202 = getelementptr i32, i32* %172, i64 %201
  %203 = add nsw i64 %177, %200
  %204 = add i64 %203, 1
  %205 = getelementptr i32, i32* %1, i64 %204
  %206 = icmp ult i32* %172, %205
  %207 = icmp ult i32* %178, %202
  %208 = and i1 %206, %207
  br i1 %208, label %190, label %209

209:                                              ; preds = %193
  %210 = and i64 %188, 9223372036854775800
  %211 = getelementptr i32, i32* %172, i64 %210
  %212 = getelementptr i32, i32* %178, i64 %210
  %213 = add nsw i64 %210, -8
  %214 = lshr exact i64 %213, 3
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 3
  %217 = icmp ult i64 %213, 24
  br i1 %217, label %269, label %218

218:                                              ; preds = %209
  %219 = sub nsw i64 %215, %216
  br label %220

220:                                              ; preds = %220, %218
  %221 = phi i64 [ 0, %218 ], [ %266, %220 ]
  %222 = phi i64 [ %219, %218 ], [ %267, %220 ]
  %223 = getelementptr i32, i32* %172, i64 %221
  %224 = getelementptr i32, i32* %178, i64 %221
  %225 = bitcast i32* %224 to <4 x i32>*
  %226 = load <4 x i32>, <4 x i32>* %225, align 4, !alias.scope !12
  %227 = getelementptr i32, i32* %224, i64 4
  %228 = bitcast i32* %227 to <4 x i32>*
  %229 = load <4 x i32>, <4 x i32>* %228, align 4, !alias.scope !12
  %230 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %226, <4 x i32>* %230, align 4, !alias.scope !15, !noalias !12
  %231 = getelementptr i32, i32* %223, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %232, align 4, !alias.scope !15, !noalias !12
  %233 = or i64 %221, 8
  %234 = getelementptr i32, i32* %172, i64 %233
  %235 = getelementptr i32, i32* %178, i64 %233
  %236 = bitcast i32* %235 to <4 x i32>*
  %237 = load <4 x i32>, <4 x i32>* %236, align 4, !alias.scope !12
  %238 = getelementptr i32, i32* %235, i64 4
  %239 = bitcast i32* %238 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !12
  %241 = bitcast i32* %234 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %241, align 4, !alias.scope !15, !noalias !12
  %242 = getelementptr i32, i32* %234, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %243, align 4, !alias.scope !15, !noalias !12
  %244 = or i64 %221, 16
  %245 = getelementptr i32, i32* %172, i64 %244
  %246 = getelementptr i32, i32* %178, i64 %244
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4, !alias.scope !12
  %249 = getelementptr i32, i32* %246, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !12
  %252 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %248, <4 x i32>* %252, align 4, !alias.scope !15, !noalias !12
  %253 = getelementptr i32, i32* %245, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %254, align 4, !alias.scope !15, !noalias !12
  %255 = or i64 %221, 24
  %256 = getelementptr i32, i32* %172, i64 %255
  %257 = getelementptr i32, i32* %178, i64 %255
  %258 = bitcast i32* %257 to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 4, !alias.scope !12
  %260 = getelementptr i32, i32* %257, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !12
  %263 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %263, align 4, !alias.scope !15, !noalias !12
  %264 = getelementptr i32, i32* %256, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %265, align 4, !alias.scope !15, !noalias !12
  %266 = add i64 %221, 32
  %267 = add i64 %222, -4
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %220, !llvm.loop !17

269:                                              ; preds = %220, %209
  %270 = phi i64 [ 0, %209 ], [ %266, %220 ]
  %271 = icmp eq i64 %216, 0
  br i1 %271, label %288, label %272

272:                                              ; preds = %269, %272
  %273 = phi i64 [ %285, %272 ], [ %270, %269 ]
  %274 = phi i64 [ %286, %272 ], [ %216, %269 ]
  %275 = getelementptr i32, i32* %172, i64 %273
  %276 = getelementptr i32, i32* %178, i64 %273
  %277 = bitcast i32* %276 to <4 x i32>*
  %278 = load <4 x i32>, <4 x i32>* %277, align 4, !alias.scope !12
  %279 = getelementptr i32, i32* %276, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 4, !alias.scope !12
  %282 = bitcast i32* %275 to <4 x i32>*
  store <4 x i32> %278, <4 x i32>* %282, align 4, !alias.scope !15, !noalias !12
  %283 = getelementptr i32, i32* %275, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  store <4 x i32> %281, <4 x i32>* %284, align 4, !alias.scope !15, !noalias !12
  %285 = add i64 %273, 8
  %286 = add i64 %274, -1
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %272, !llvm.loop !19

288:                                              ; preds = %272, %269
  %289 = icmp eq i64 %188, %210
  br i1 %289, label %290, label %190

290:                                              ; preds = %300, %288
  %291 = phi i32* [ %211, %288 ], [ %305, %300 ]
  %292 = ptrtoint i32* %291 to i64
  br label %293

293:                                              ; preds = %290, %170
  %294 = phi i64 [ %292, %290 ], [ %171, %170 ]
  store i64 %294, i64* %53, align 8
  %295 = icmp eq i64 %176, 0
  br i1 %295, label %307, label %296

296:                                              ; preds = %293
  %297 = sub nsw i64 0, %177
  %298 = getelementptr inbounds i32, i32* %172, i64 %297
  %299 = bitcast i32* %298 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %299, i8* align 4 %6, i64 %176, i1 false) #15
  br label %307

300:                                              ; preds = %190, %300
  %301 = phi i32* [ %305, %300 ], [ %191, %190 ]
  %302 = phi i32* [ %304, %300 ], [ %192, %190 ]
  %303 = load i32, i32* %302, align 4
  store i32 %303, i32* %301, align 4
  %304 = getelementptr inbounds i32, i32* %302, i64 1
  %305 = getelementptr inbounds i32, i32* %301, i64 1
  %306 = icmp ult i32* %304, %48
  br i1 %306, label %300, label %290, !llvm.loop !21

307:                                              ; preds = %293, %296
  %308 = icmp eq %"class.std::__1::__tree_end_node"* %173, %2
  br i1 %308, label %635, label %309

309:                                              ; preds = %307, %342
  %310 = phi i32* [ %344, %342 ], [ %1, %307 ]
  %311 = phi %"class.std::__1::__tree_end_node"* [ %343, %342 ], [ %2, %307 ]
  %312 = bitcast %"class.std::__1::__tree_end_node"* %311 to %"class.std::__1::__tree_node"*
  %313 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %312, i64 0, i32 1
  %314 = load i32, i32* %313, align 4
  store i32 %314, i32* %310, align 4
  %315 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 1, i32 0
  %316 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %317 = icmp eq %"class.std::__1::__tree_node_base"* %316, null
  br i1 %317, label %318, label %326

318:                                              ; preds = %309
  %319 = bitcast %"class.std::__1::__tree_end_node"* %311 to %"class.std::__1::__tree_node_base"*
  %320 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 2
  %321 = bitcast %"class.std::__1::__tree_end_node"* %320 to %"class.std::__1::__tree_end_node"**
  %322 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %321, align 8
  %323 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 0, i32 0
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = icmp eq %"class.std::__1::__tree_node_base"* %324, %319
  br i1 %325, label %342, label %333

326:                                              ; preds = %309, %326
  %327 = phi %"class.std::__1::__tree_node_base"* [ %329, %326 ], [ %316, %309 ]
  %328 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %327, i64 0, i32 0, i32 0
  %329 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node_base"* %329, null
  br i1 %330, label %331, label %326

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %327, i64 0, i32 0
  br label %342

333:                                              ; preds = %318, %333
  %334 = phi %"class.std::__1::__tree_end_node"** [ %337, %333 ], [ %321, %318 ]
  %335 = bitcast %"class.std::__1::__tree_end_node"** %334 to %"class.std::__1::__tree_node_base"**
  %336 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %335, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %336, i64 0, i32 2
  %338 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %337, align 8
  %339 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %338, i64 0, i32 0
  %340 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %339, align 8
  %341 = icmp eq %"class.std::__1::__tree_node_base"* %340, %336
  br i1 %341, label %342, label %333

342:                                              ; preds = %333, %331, %318
  %343 = phi %"class.std::__1::__tree_end_node"* [ %332, %331 ], [ %322, %318 ], [ %338, %333 ]
  %344 = getelementptr inbounds i32, i32* %310, i64 1
  %345 = icmp eq %"class.std::__1::__tree_end_node"* %343, %173
  br i1 %345, label %635, label %309

346:                                              ; preds = %43
  %347 = bitcast %"class.std::__1::vector"* %0 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = sub i64 %49, %348
  %350 = ashr exact i64 %349, 2
  %351 = add i64 %350, %12
  %352 = icmp ugt i64 %351, 4611686018427387903
  br i1 %352, label %353, label %355

353:                                              ; preds = %346
  %354 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %354) #17
  unreachable

355:                                              ; preds = %346
  %356 = sub i64 %46, %348
  %357 = ashr exact i64 %356, 2
  %358 = icmp ult i64 %357, 2305843009213693951
  br i1 %358, label %362, label %359

359:                                              ; preds = %355
  %360 = sub i64 %5, %348
  %361 = ashr exact i64 %360, 2
  br label %372

362:                                              ; preds = %355
  %363 = ashr exact i64 %356, 1
  %364 = icmp ult i64 %363, %351
  %365 = select i1 %364, i64 %351, i64 %363
  %366 = sub i64 %5, %348
  %367 = ashr exact i64 %366, 2
  %368 = icmp eq i64 %365, 0
  br i1 %368, label %378, label %369

369:                                              ; preds = %362
  %370 = icmp ugt i64 %365, 4611686018427387903
  br i1 %370, label %371, label %372

371:                                              ; preds = %369
  tail call void @abort() #17
  unreachable

372:                                              ; preds = %359, %369
  %373 = phi i64 [ 4611686018427387903, %359 ], [ %365, %369 ]
  %374 = phi i64 [ %361, %359 ], [ %367, %369 ]
  %375 = shl i64 %373, 2
  %376 = tail call i8* @_Znwm(i64 %375) #16
  %377 = bitcast i8* %376 to i32*
  br label %378

378:                                              ; preds = %372, %362
  %379 = phi i64 [ %374, %372 ], [ %367, %362 ]
  %380 = phi i64 [ %373, %372 ], [ 0, %362 ]
  %381 = phi i32* [ %377, %372 ], [ null, %362 ]
  %382 = getelementptr inbounds i32, i32* %381, i64 %379
  %383 = getelementptr inbounds i32, i32* %381, i64 %380
  %384 = ptrtoint i32* %383 to i64
  br label %385

385:                                              ; preds = %378, %416
  %386 = phi i64 [ %388, %416 ], [ 0, %378 ]
  %387 = phi %"class.std::__1::__tree_end_node"* [ %417, %416 ], [ %2, %378 ]
  %388 = add nuw nsw i64 %386, 1
  %389 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %387, i64 1, i32 0
  %390 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %389, align 8
  %391 = icmp eq %"class.std::__1::__tree_node_base"* %390, null
  br i1 %391, label %392, label %400

392:                                              ; preds = %385
  %393 = bitcast %"class.std::__1::__tree_end_node"* %387 to %"class.std::__1::__tree_node_base"*
  %394 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %387, i64 2
  %395 = bitcast %"class.std::__1::__tree_end_node"* %394 to %"class.std::__1::__tree_end_node"**
  %396 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %395, align 8
  %397 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %396, i64 0, i32 0
  %398 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %397, align 8
  %399 = icmp eq %"class.std::__1::__tree_node_base"* %398, %393
  br i1 %399, label %416, label %407

400:                                              ; preds = %385, %400
  %401 = phi %"class.std::__1::__tree_node_base"* [ %403, %400 ], [ %390, %385 ]
  %402 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %401, i64 0, i32 0, i32 0
  %403 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %402, align 8
  %404 = icmp eq %"class.std::__1::__tree_node_base"* %403, null
  br i1 %404, label %405, label %400

405:                                              ; preds = %400
  %406 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %401, i64 0, i32 0
  br label %416

407:                                              ; preds = %392, %407
  %408 = phi %"class.std::__1::__tree_end_node"** [ %411, %407 ], [ %395, %392 ]
  %409 = bitcast %"class.std::__1::__tree_end_node"** %408 to %"class.std::__1::__tree_node_base"**
  %410 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %409, align 8
  %411 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %410, i64 0, i32 2
  %412 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %411, align 8
  %413 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %412, i64 0, i32 0
  %414 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %413, align 8
  %415 = icmp eq %"class.std::__1::__tree_node_base"* %414, %410
  br i1 %415, label %416, label %407

416:                                              ; preds = %407, %405, %392
  %417 = phi %"class.std::__1::__tree_end_node"* [ %406, %405 ], [ %396, %392 ], [ %412, %407 ]
  %418 = icmp eq %"class.std::__1::__tree_end_node"* %417, %3
  br i1 %418, label %419, label %385

419:                                              ; preds = %416
  %420 = getelementptr inbounds i32, i32* %382, i64 %388
  br label %421

421:                                              ; preds = %455, %419
  %422 = phi i32* [ %427, %455 ], [ %382, %419 ]
  %423 = phi %"class.std::__1::__tree_end_node"* [ %456, %455 ], [ %2, %419 ]
  %424 = bitcast %"class.std::__1::__tree_end_node"* %423 to %"class.std::__1::__tree_node"*
  %425 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %424, i64 0, i32 1
  %426 = load i32, i32* %425, align 4
  store i32 %426, i32* %422, align 4
  %427 = getelementptr inbounds i32, i32* %422, i64 1
  %428 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %423, i64 1, i32 0
  %429 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %428, align 8
  %430 = icmp eq %"class.std::__1::__tree_node_base"* %429, null
  br i1 %430, label %431, label %439

431:                                              ; preds = %421
  %432 = bitcast %"class.std::__1::__tree_end_node"* %423 to %"class.std::__1::__tree_node_base"*
  %433 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %423, i64 2
  %434 = bitcast %"class.std::__1::__tree_end_node"* %433 to %"class.std::__1::__tree_end_node"**
  %435 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %434, align 8
  %436 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %435, i64 0, i32 0
  %437 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %436, align 8
  %438 = icmp eq %"class.std::__1::__tree_node_base"* %437, %432
  br i1 %438, label %455, label %446

439:                                              ; preds = %421, %439
  %440 = phi %"class.std::__1::__tree_node_base"* [ %442, %439 ], [ %429, %421 ]
  %441 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %440, i64 0, i32 0, i32 0
  %442 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %441, align 8
  %443 = icmp eq %"class.std::__1::__tree_node_base"* %442, null
  br i1 %443, label %444, label %439

444:                                              ; preds = %439
  %445 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %440, i64 0, i32 0
  br label %455

446:                                              ; preds = %431, %446
  %447 = phi %"class.std::__1::__tree_end_node"** [ %450, %446 ], [ %434, %431 ]
  %448 = bitcast %"class.std::__1::__tree_end_node"** %447 to %"class.std::__1::__tree_node_base"**
  %449 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %448, align 8
  %450 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %449, i64 0, i32 2
  %451 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %450, align 8
  %452 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %451, i64 0, i32 0
  %453 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %452, align 8
  %454 = icmp eq %"class.std::__1::__tree_node_base"* %453, %449
  br i1 %454, label %455, label %446

455:                                              ; preds = %446, %444, %431
  %456 = phi %"class.std::__1::__tree_end_node"* [ %445, %444 ], [ %435, %431 ], [ %451, %446 ]
  %457 = icmp eq i32* %420, %427
  br i1 %457, label %458, label %421

458:                                              ; preds = %455
  %459 = load i32*, i32** %7, align 8
  %460 = ptrtoint i32* %459 to i64
  %461 = sub i64 %5, %460
  %462 = ashr exact i64 %461, 2
  %463 = sub nsw i64 0, %462
  %464 = getelementptr inbounds i32, i32* %382, i64 %463
  %465 = ptrtoint i32* %464 to i64
  %466 = icmp sgt i64 %461, 0
  br i1 %466, label %467, label %470

467:                                              ; preds = %458
  %468 = bitcast i32* %464 to i8*
  %469 = bitcast i32* %459 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %468, i8* align 4 %469, i64 %461, i1 false) #15
  br label %470

470:                                              ; preds = %467, %458
  %471 = load i32*, i32** %47, align 8
  %472 = icmp eq i32* %471, %1
  br i1 %472, label %628, label %473

473:                                              ; preds = %470
  %474 = getelementptr i32, i32* %471, i64 -1
  %475 = ptrtoint i32* %474 to i64
  %476 = sub i64 %475, %5
  %477 = lshr i64 %476, 2
  %478 = add nuw nsw i64 %477, 1
  %479 = icmp ult i64 %478, 8
  br i1 %479, label %575, label %480

480:                                              ; preds = %473
  %481 = add i64 %379, %388
  %482 = getelementptr i32, i32* %471, i64 -1
  %483 = ptrtoint i32* %482 to i64
  %484 = sub i64 %483, %5
  %485 = lshr i64 %484, 2
  %486 = add i64 %481, %485
  %487 = add i64 %486, 1
  %488 = getelementptr i32, i32* %381, i64 %487
  %489 = add nuw nsw i64 %485, 1
  %490 = getelementptr i32, i32* %1, i64 %489
  %491 = icmp ult i32* %420, %490
  %492 = icmp ugt i32* %488, %1
  %493 = and i1 %491, %492
  br i1 %493, label %575, label %494

494:                                              ; preds = %480
  %495 = and i64 %478, 9223372036854775800
  %496 = getelementptr i32, i32* %420, i64 %495
  %497 = getelementptr i32, i32* %1, i64 %495
  %498 = add nsw i64 %495, -8
  %499 = lshr exact i64 %498, 3
  %500 = add nuw nsw i64 %499, 1
  %501 = and i64 %500, 3
  %502 = icmp ult i64 %498, 24
  br i1 %502, label %554, label %503

503:                                              ; preds = %494
  %504 = sub nsw i64 %500, %501
  br label %505

505:                                              ; preds = %505, %503
  %506 = phi i64 [ 0, %503 ], [ %551, %505 ]
  %507 = phi i64 [ %504, %503 ], [ %552, %505 ]
  %508 = getelementptr i32, i32* %420, i64 %506
  %509 = getelementptr i32, i32* %1, i64 %506
  %510 = bitcast i32* %509 to <4 x i32>*
  %511 = load <4 x i32>, <4 x i32>* %510, align 4, !alias.scope !22
  %512 = getelementptr i32, i32* %509, i64 4
  %513 = bitcast i32* %512 to <4 x i32>*
  %514 = load <4 x i32>, <4 x i32>* %513, align 4, !alias.scope !22
  %515 = bitcast i32* %508 to <4 x i32>*
  store <4 x i32> %511, <4 x i32>* %515, align 4, !alias.scope !25, !noalias !22
  %516 = getelementptr i32, i32* %508, i64 4
  %517 = bitcast i32* %516 to <4 x i32>*
  store <4 x i32> %514, <4 x i32>* %517, align 4, !alias.scope !25, !noalias !22
  %518 = or i64 %506, 8
  %519 = getelementptr i32, i32* %420, i64 %518
  %520 = getelementptr i32, i32* %1, i64 %518
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4, !alias.scope !22
  %523 = getelementptr i32, i32* %520, i64 4
  %524 = bitcast i32* %523 to <4 x i32>*
  %525 = load <4 x i32>, <4 x i32>* %524, align 4, !alias.scope !22
  %526 = bitcast i32* %519 to <4 x i32>*
  store <4 x i32> %522, <4 x i32>* %526, align 4, !alias.scope !25, !noalias !22
  %527 = getelementptr i32, i32* %519, i64 4
  %528 = bitcast i32* %527 to <4 x i32>*
  store <4 x i32> %525, <4 x i32>* %528, align 4, !alias.scope !25, !noalias !22
  %529 = or i64 %506, 16
  %530 = getelementptr i32, i32* %420, i64 %529
  %531 = getelementptr i32, i32* %1, i64 %529
  %532 = bitcast i32* %531 to <4 x i32>*
  %533 = load <4 x i32>, <4 x i32>* %532, align 4, !alias.scope !22
  %534 = getelementptr i32, i32* %531, i64 4
  %535 = bitcast i32* %534 to <4 x i32>*
  %536 = load <4 x i32>, <4 x i32>* %535, align 4, !alias.scope !22
  %537 = bitcast i32* %530 to <4 x i32>*
  store <4 x i32> %533, <4 x i32>* %537, align 4, !alias.scope !25, !noalias !22
  %538 = getelementptr i32, i32* %530, i64 4
  %539 = bitcast i32* %538 to <4 x i32>*
  store <4 x i32> %536, <4 x i32>* %539, align 4, !alias.scope !25, !noalias !22
  %540 = or i64 %506, 24
  %541 = getelementptr i32, i32* %420, i64 %540
  %542 = getelementptr i32, i32* %1, i64 %540
  %543 = bitcast i32* %542 to <4 x i32>*
  %544 = load <4 x i32>, <4 x i32>* %543, align 4, !alias.scope !22
  %545 = getelementptr i32, i32* %542, i64 4
  %546 = bitcast i32* %545 to <4 x i32>*
  %547 = load <4 x i32>, <4 x i32>* %546, align 4, !alias.scope !22
  %548 = bitcast i32* %541 to <4 x i32>*
  store <4 x i32> %544, <4 x i32>* %548, align 4, !alias.scope !25, !noalias !22
  %549 = getelementptr i32, i32* %541, i64 4
  %550 = bitcast i32* %549 to <4 x i32>*
  store <4 x i32> %547, <4 x i32>* %550, align 4, !alias.scope !25, !noalias !22
  %551 = add i64 %506, 32
  %552 = add i64 %507, -4
  %553 = icmp eq i64 %552, 0
  br i1 %553, label %554, label %505, !llvm.loop !27

554:                                              ; preds = %505, %494
  %555 = phi i64 [ 0, %494 ], [ %551, %505 ]
  %556 = icmp eq i64 %501, 0
  br i1 %556, label %573, label %557

557:                                              ; preds = %554, %557
  %558 = phi i64 [ %570, %557 ], [ %555, %554 ]
  %559 = phi i64 [ %571, %557 ], [ %501, %554 ]
  %560 = getelementptr i32, i32* %420, i64 %558
  %561 = getelementptr i32, i32* %1, i64 %558
  %562 = bitcast i32* %561 to <4 x i32>*
  %563 = load <4 x i32>, <4 x i32>* %562, align 4, !alias.scope !22
  %564 = getelementptr i32, i32* %561, i64 4
  %565 = bitcast i32* %564 to <4 x i32>*
  %566 = load <4 x i32>, <4 x i32>* %565, align 4, !alias.scope !22
  %567 = bitcast i32* %560 to <4 x i32>*
  store <4 x i32> %563, <4 x i32>* %567, align 4, !alias.scope !25, !noalias !22
  %568 = getelementptr i32, i32* %560, i64 4
  %569 = bitcast i32* %568 to <4 x i32>*
  store <4 x i32> %566, <4 x i32>* %569, align 4, !alias.scope !25, !noalias !22
  %570 = add i64 %558, 8
  %571 = add i64 %559, -1
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %557, !llvm.loop !28

573:                                              ; preds = %557, %554
  %574 = icmp eq i64 %478, %495
  br i1 %574, label %628, label %575

575:                                              ; preds = %573, %480, %473
  %576 = phi i32* [ %420, %480 ], [ %420, %473 ], [ %496, %573 ]
  %577 = phi i32* [ %1, %480 ], [ %1, %473 ], [ %497, %573 ]
  %578 = ptrtoint i32* %577 to i64
  %579 = getelementptr i32, i32* %471, i64 -1
  %580 = ptrtoint i32* %579 to i64
  %581 = sub i64 %580, %578
  %582 = lshr i64 %581, 2
  %583 = add nuw nsw i64 %582, 1
  %584 = and i64 %583, 7
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %595, label %586

586:                                              ; preds = %575, %586
  %587 = phi i32* [ %592, %586 ], [ %576, %575 ]
  %588 = phi i32* [ %591, %586 ], [ %577, %575 ]
  %589 = phi i64 [ %593, %586 ], [ %584, %575 ]
  %590 = load i32, i32* %588, align 4
  store i32 %590, i32* %587, align 4
  %591 = getelementptr inbounds i32, i32* %588, i64 1
  %592 = getelementptr inbounds i32, i32* %587, i64 1
  %593 = add i64 %589, -1
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %595, label %586, !llvm.loop !29

595:                                              ; preds = %586, %575
  %596 = phi i32* [ undef, %575 ], [ %592, %586 ]
  %597 = phi i32* [ %576, %575 ], [ %592, %586 ]
  %598 = phi i32* [ %577, %575 ], [ %591, %586 ]
  %599 = icmp ult i64 %581, 28
  br i1 %599, label %628, label %600

600:                                              ; preds = %595, %600
  %601 = phi i32* [ %626, %600 ], [ %597, %595 ]
  %602 = phi i32* [ %625, %600 ], [ %598, %595 ]
  %603 = load i32, i32* %602, align 4
  store i32 %603, i32* %601, align 4
  %604 = getelementptr inbounds i32, i32* %602, i64 1
  %605 = getelementptr inbounds i32, i32* %601, i64 1
  %606 = load i32, i32* %604, align 4
  store i32 %606, i32* %605, align 4
  %607 = getelementptr inbounds i32, i32* %602, i64 2
  %608 = getelementptr inbounds i32, i32* %601, i64 2
  %609 = load i32, i32* %607, align 4
  store i32 %609, i32* %608, align 4
  %610 = getelementptr inbounds i32, i32* %602, i64 3
  %611 = getelementptr inbounds i32, i32* %601, i64 3
  %612 = load i32, i32* %610, align 4
  store i32 %612, i32* %611, align 4
  %613 = getelementptr inbounds i32, i32* %602, i64 4
  %614 = getelementptr inbounds i32, i32* %601, i64 4
  %615 = load i32, i32* %613, align 4
  store i32 %615, i32* %614, align 4
  %616 = getelementptr inbounds i32, i32* %602, i64 5
  %617 = getelementptr inbounds i32, i32* %601, i64 5
  %618 = load i32, i32* %616, align 4
  store i32 %618, i32* %617, align 4
  %619 = getelementptr inbounds i32, i32* %602, i64 6
  %620 = getelementptr inbounds i32, i32* %601, i64 6
  %621 = load i32, i32* %619, align 4
  store i32 %621, i32* %620, align 4
  %622 = getelementptr inbounds i32, i32* %602, i64 7
  %623 = getelementptr inbounds i32, i32* %601, i64 7
  %624 = load i32, i32* %622, align 4
  store i32 %624, i32* %623, align 4
  %625 = getelementptr inbounds i32, i32* %602, i64 8
  %626 = getelementptr inbounds i32, i32* %601, i64 8
  %627 = icmp eq i32* %625, %471
  br i1 %627, label %628, label %600, !llvm.loop !30

628:                                              ; preds = %595, %600, %573, %470
  %629 = phi i32* [ %420, %470 ], [ %496, %573 ], [ %596, %595 ], [ %626, %600 ]
  %630 = ptrtoint i32* %629 to i64
  %631 = load i32*, i32** %7, align 8
  store i64 %465, i64* %347, align 8
  store i64 %630, i64* %53, align 8
  store i64 %384, i64* %45, align 8
  %632 = icmp eq i32* %631, null
  br i1 %632, label %635, label %633

633:                                              ; preds = %628
  %634 = bitcast i32* %631 to i8*
  tail call void @_ZdlPv(i8* %634) #16
  br label %635

635:                                              ; preds = %342, %633, %628, %165, %307, %4
  %636 = phi i32* [ %1, %4 ], [ %1, %307 ], [ %1, %165 ], [ %382, %628 ], [ %382, %633 ], [ %1, %342 ]
  ret i32* %636
}

declare void @_ZN3gpu14GpuFeatureInfoC1EOS0_(%"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"* dereferenceable(184)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu22SetKeysForCrashLoggingERKNS_7GPUInfoE(%"struct.gpu::GPUInfo"* dereferenceable(696)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call dereferenceable(120) %"struct.gpu::GPUInfo::GPUDevice"* @_ZNK3gpu7GPUInfo10active_gpuEv(%"struct.gpu::GPUInfo"* %0) #15
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %5, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %8) #15
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %6
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %11 to i64
  %19 = select i1 %12, i64 %17, i64 %18
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys13gpu_vendor_idE, i64 0, i32 1, i32 0), i8* %15, i64 %19) #15
  %20 = call i1 @llvm.is.constant.i64(i64 %19) #15
  %21 = icmp ult i64 %19, 4294967296
  %22 = trunc i64 %19 to i32
  %23 = select i1 %21, i32 %22, i32 -1
  %24 = icmp ult i64 %19, 4294967295
  %25 = select i1 %24, i64 %19, i64 4294967295
  %26 = trunc i64 %25 to i32
  %27 = select i1 %20, i32 %26, i32 %23
  %28 = icmp ult i32 %27, 16
  %29 = select i1 %28, i32 %27, i32 16
  %30 = zext i32 %29 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys13gpu_vendor_idE, i64 0, i32 2, i32 1, i64 0), i8* align 1 %15, i64 %30, i1 false) #15
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::StringAnnotation"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys13gpu_vendor_idE, i64 0, i32 2) to %"class.crashpad::Annotation"*), i32 %29) #15
  %31 = load i8, i8* %10, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %1
  %34 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %34) #16
  br label %35

35:                                               ; preds = %1, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  %36 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #15
  %37 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %5, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %38) #15
  %39 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = select i1 %42, i8* %44, i8* %36
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %41 to i64
  %49 = select i1 %42, i64 %47, i64 %48
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys13gpu_device_idE, i64 0, i32 1, i32 0), i8* %45, i64 %49) #15
  %50 = call i1 @llvm.is.constant.i64(i64 %49) #15
  %51 = icmp ult i64 %49, 4294967296
  %52 = trunc i64 %49 to i32
  %53 = select i1 %51, i32 %52, i32 -1
  %54 = icmp ult i64 %49, 4294967295
  %55 = select i1 %54, i64 %49, i64 4294967295
  %56 = trunc i64 %55 to i32
  %57 = select i1 %50, i32 %56, i32 %53
  %58 = icmp ult i32 %57, 16
  %59 = select i1 %58, i32 %57, i32 16
  %60 = zext i32 %59 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys13gpu_device_idE, i64 0, i32 2, i32 1, i64 0), i8* align 1 %45, i64 %60, i1 false) #15
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::StringAnnotation"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys13gpu_device_idE, i64 0, i32 2) to %"class.crashpad::Annotation"*), i32 %59) #15
  %61 = load i8, i8* %40, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %35
  %64 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %64) #16
  br label %65

65:                                               ; preds = %35, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #15
  %66 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %5, i64 0, i32 7
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %74 = select i1 %70, i8* %72, i8* %73
  %75 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %69 to i64
  %78 = select i1 %70, i64 %76, i64 %77
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.158", %"class.crash_reporter::CrashKeyStringCombined.158"* @_ZN3gpu10crash_keys18gpu_driver_versionE, i64 0, i32 1, i32 0), i8* %74, i64 %78) #15
  %79 = call i1 @llvm.is.constant.i64(i64 %78) #15
  %80 = icmp ult i64 %78, 4294967296
  %81 = trunc i64 %78 to i32
  %82 = select i1 %80, i32 %81, i32 -1
  %83 = icmp ult i64 %78, 4294967295
  %84 = select i1 %83, i64 %78, i64 4294967295
  %85 = trunc i64 %84 to i32
  %86 = select i1 %79, i32 %85, i32 %82
  %87 = icmp ult i32 %86, 64
  %88 = select i1 %87, i32 %86, i32 64
  %89 = zext i32 %88 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.158", %"class.crash_reporter::CrashKeyStringCombined.158"* @_ZN3gpu10crash_keys18gpu_driver_versionE, i64 0, i32 2, i32 1, i64 0), i8* align 1 %74, i64 %89, i1 false) #15
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::StringAnnotation.160"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.158", %"class.crash_reporter::CrashKeyStringCombined.158"* @_ZN3gpu10crash_keys18gpu_driver_versionE, i64 0, i32 2) to %"class.crashpad::Annotation"*), i32 %88) #15
  %90 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 6
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %98 = select i1 %94, i8* %96, i8* %97
  %99 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = zext i8 %93 to i64
  %102 = select i1 %94, i64 %100, i64 %101
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys24gpu_pixel_shader_versionE, i64 0, i32 1, i32 0), i8* %98, i64 %102) #15
  %103 = call i1 @llvm.is.constant.i64(i64 %102) #15
  %104 = icmp ult i64 %102, 4294967296
  %105 = trunc i64 %102 to i32
  %106 = select i1 %104, i32 %105, i32 -1
  %107 = icmp ult i64 %102, 4294967295
  %108 = select i1 %107, i64 %102, i64 4294967295
  %109 = trunc i64 %108 to i32
  %110 = select i1 %103, i32 %109, i32 %106
  %111 = icmp ult i32 %110, 16
  %112 = select i1 %111, i32 %110, i32 16
  %113 = zext i32 %112 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys24gpu_pixel_shader_versionE, i64 0, i32 2, i32 1, i64 0), i8* align 1 %98, i64 %113, i1 false) #15
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::StringAnnotation"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys24gpu_pixel_shader_versionE, i64 0, i32 2) to %"class.crashpad::Annotation"*), i32 %112) #15
  %114 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 7
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  %122 = select i1 %118, i8* %120, i8* %121
  %123 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = zext i8 %117 to i64
  %126 = select i1 %118, i64 %124, i64 %125
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys25gpu_vertex_shader_versionE, i64 0, i32 1, i32 0), i8* %122, i64 %126) #15
  %127 = call i1 @llvm.is.constant.i64(i64 %126) #15
  %128 = icmp ult i64 %126, 4294967296
  %129 = trunc i64 %126 to i32
  %130 = select i1 %128, i32 %129, i32 -1
  %131 = icmp ult i64 %126, 4294967295
  %132 = select i1 %131, i64 %126, i64 4294967295
  %133 = trunc i64 %132 to i32
  %134 = select i1 %127, i32 %133, i32 %130
  %135 = icmp ult i32 %134, 16
  %136 = select i1 %135, i32 %134, i32 16
  %137 = zext i32 %136 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys25gpu_vertex_shader_versionE, i64 0, i32 2, i32 1, i64 0), i8* align 1 %122, i64 %137, i1 false) #15
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::StringAnnotation"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys25gpu_vertex_shader_versionE, i64 0, i32 2) to %"class.crashpad::Annotation"*), i32 %136) #15
  %138 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #15
  %139 = call i32 @_ZN3gpu21GetIntelGpuGenerationERKNS_7GPUInfoE(%"struct.gpu::GPUInfo"* dereferenceable(696) %0)
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %139) #15
  %140 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = select i1 %143, i8* %145, i8* %138
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = zext i8 %142 to i64
  %150 = select i1 %143, i64 %148, i64 %149
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys20gpu_generation_intelE, i64 0, i32 1, i32 0), i8* %146, i64 %150) #15
  %151 = call i1 @llvm.is.constant.i64(i64 %150) #15
  %152 = icmp ult i64 %150, 4294967296
  %153 = trunc i64 %150 to i32
  %154 = select i1 %152, i32 %153, i32 -1
  %155 = icmp ult i64 %150, 4294967295
  %156 = select i1 %155, i64 %150, i64 4294967295
  %157 = trunc i64 %156 to i32
  %158 = select i1 %151, i32 %157, i32 %154
  %159 = icmp ult i32 %158, 16
  %160 = select i1 %159, i32 %158, i32 16
  %161 = zext i32 %160 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys20gpu_generation_intelE, i64 0, i32 2, i32 1, i64 0), i8* align 1 %146, i64 %161, i1 false) #15
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::StringAnnotation"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined", %"class.crash_reporter::CrashKeyStringCombined"* @_ZN3gpu10crash_keys20gpu_generation_intelE, i64 0, i32 2) to %"class.crashpad::Annotation"*), i32 %160) #15
  %162 = load i8, i8* %141, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %65
  %165 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %165) #16
  br label %166

166:                                              ; preds = %65, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #15
  %167 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12
  %168 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  %175 = select i1 %171, i8* %173, i8* %174
  %176 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = zext i8 %170 to i64
  %179 = select i1 %171, i64 %177, i64 %178
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.162", %"class.crash_reporter::CrashKeyStringCombined.162"* @_ZN3gpu10crash_keys10gpu_vendorE, i64 0, i32 1, i32 0), i8* %175, i64 %179) #15
  %180 = call i1 @llvm.is.constant.i64(i64 %179) #15
  %181 = icmp ult i64 %179, 4294967296
  %182 = trunc i64 %179 to i32
  %183 = select i1 %181, i32 %182, i32 -1
  %184 = icmp ult i64 %179, 4294967295
  %185 = select i1 %184, i64 %179, i64 4294967295
  %186 = trunc i64 %185 to i32
  %187 = select i1 %180, i32 %186, i32 %183
  %188 = icmp ult i32 %187, 256
  %189 = select i1 %188, i32 %187, i32 256
  %190 = zext i32 %189 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.162", %"class.crash_reporter::CrashKeyStringCombined.162"* @_ZN3gpu10crash_keys10gpu_vendorE, i64 0, i32 2, i32 1, i64 0), i8* align 1 %175, i64 %190, i1 false) #15
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::StringAnnotation.165"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.162", %"class.crash_reporter::CrashKeyStringCombined.162"* @_ZN3gpu10crash_keys10gpu_vendorE, i64 0, i32 2) to %"class.crashpad::Annotation"*), i32 %189) #15
  %191 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13
  %192 = bitcast %"class.std::__1::basic_string"* %191 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = bitcast %"class.std::__1::basic_string"* %191 to i8*
  %199 = select i1 %195, i8* %197, i8* %198
  %200 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = zext i8 %194 to i64
  %203 = select i1 %195, i64 %201, i64 %202
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.167", %"class.crash_reporter::CrashKeyStringCombined.167"* @_ZN3gpu10crash_keys12gpu_rendererE, i64 0, i32 1, i32 0), i8* %199, i64 %203) #15
  %204 = call i1 @llvm.is.constant.i64(i64 %203) #15
  %205 = icmp ult i64 %203, 4294967296
  %206 = trunc i64 %203 to i32
  %207 = select i1 %205, i32 %206, i32 -1
  %208 = icmp ult i64 %203, 4294967295
  %209 = select i1 %208, i64 %203, i64 4294967295
  %210 = trunc i64 %209 to i32
  %211 = select i1 %204, i32 %210, i32 %207
  %212 = icmp ult i32 %211, 128
  %213 = select i1 %212, i32 %211, i32 128
  %214 = zext i32 %213 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.167", %"class.crash_reporter::CrashKeyStringCombined.167"* @_ZN3gpu10crash_keys12gpu_rendererE, i64 0, i32 2, i32 1, i64 0), i8* align 1 %199, i64 %214, i1 false) #15
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::StringAnnotation.170"* getelementptr inbounds (%"class.crash_reporter::CrashKeyStringCombined.167", %"class.crash_reporter::CrashKeyStringCombined.167"* @_ZN3gpu10crash_keys12gpu_rendererE, i64 0, i32 2) to %"class.crashpad::Annotation"*), i32 %213) #15
  ret void
}

declare dereferenceable(120) %"struct.gpu::GPUInfo::GPUDevice"* @_ZNK3gpu7GPUInfo10active_gpuEv(%"struct.gpu::GPUInfo"*) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu21GetIntelGpuGenerationERKNS_7GPUInfoE(%"struct.gpu::GPUInfo"* nocapture readonly dereferenceable(696)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::vector.6", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.std::__1::vector.6"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #15
  %9 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 32902
  br i1 %11, label %12, label %24

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 1
  %14 = bitcast i32** %7 to i64*
  %15 = bitcast %"class.std::__1::vector.6"* %2 to i64*
  %16 = bitcast i32** %8 to i64*
  %17 = tail call i8* @_Znwm(i64 4) #16
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  %20 = bitcast i8* %19 to i32*
  %21 = ptrtoint i8* %19 to i64
  %22 = load i32, i32* %13, align 4
  store i32 %22, i32* %18, align 4
  %23 = ptrtoint i8* %17 to i64
  store i64 %23, i64* %15, align 8
  store i64 %21, i64* %14, align 8
  store i64 %21, i64* %16, align 8
  br label %24

24:                                               ; preds = %12, %1
  %25 = phi i32* [ %20, %12 ], [ null, %1 ]
  %26 = phi i32* [ %18, %12 ], [ null, %1 ]
  %27 = phi i64 [ %21, %12 ], [ 0, %1 ]
  %28 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %29 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %28, align 8
  %30 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %31 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %30, align 8
  %32 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %29, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %24
  %34 = bitcast i32** %7 to i64*
  %35 = bitcast %"class.std::__1::vector.6"* %2 to i64*
  %36 = bitcast i32** %8 to i64*
  br label %53

37:                                               ; preds = %115
  %38 = load i32*, i32** %6, align 8
  br label %39

39:                                               ; preds = %37, %24
  %40 = phi i32* [ %116, %37 ], [ %25, %24 ]
  %41 = phi i32* [ %38, %37 ], [ %26, %24 ]
  %42 = icmp eq i32* %41, %40
  br i1 %42, label %155, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %49 = getelementptr inbounds i8, i8* %44, i64 2
  %50 = getelementptr inbounds i8, i8* %44, i64 1
  %51 = bitcast i32* %4 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %121

53:                                               ; preds = %33, %115
  %54 = phi i32* [ %25, %33 ], [ %116, %115 ]
  %55 = phi i64 [ %27, %33 ], [ %117, %115 ]
  %56 = phi i32* [ %25, %33 ], [ %118, %115 ]
  %57 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %29, %33 ], [ %119, %115 ]
  %58 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 32902
  br i1 %60, label %61, label %115

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %57, i64 0, i32 1
  %63 = load i32*, i32** %8, align 8
  %64 = icmp eq i32* %56, %63
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = load i32, i32* %62, align 4
  store i32 %66, i32* %56, align 4
  %67 = getelementptr inbounds i32, i32* %56, i64 1
  %68 = ptrtoint i32* %67 to i64
  store i64 %68, i64* %34, align 8
  br label %115

69:                                               ; preds = %61
  %70 = ptrtoint i32* %63 to i64
  %71 = load i64, i64* %35, align 8
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 2
  %74 = add nsw i64 %73, 1
  %75 = icmp ugt i64 %74, 4611686018427387903
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = bitcast %"class.std::__1::vector.6"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %77) #17
  unreachable

78:                                               ; preds = %69
  %79 = icmp ult i64 %73, 2305843009213693951
  br i1 %79, label %80, label %88

80:                                               ; preds = %78
  %81 = ashr exact i64 %72, 1
  %82 = icmp ult i64 %81, %74
  %83 = select i1 %82, i64 %74, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 4611686018427387903
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call void @abort() #17
  unreachable

88:                                               ; preds = %85, %78
  %89 = phi i64 [ %83, %85 ], [ 4611686018427387903, %78 ]
  %90 = shl i64 %89, 2
  %91 = tail call i8* @_Znwm(i64 %90) #16
  %92 = bitcast i8* %91 to i32*
  br label %93

93:                                               ; preds = %88, %80
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi i32* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds i32, i32* %95, i64 %73
  %97 = getelementptr inbounds i32, i32* %95, i64 %94
  %98 = ptrtoint i32* %97 to i64
  %99 = load i32, i32* %62, align 4
  store i32 %99, i32* %96, align 4
  %100 = getelementptr inbounds i32, i32* %96, i64 1
  %101 = ptrtoint i32* %100 to i64
  %102 = sub i64 %55, %71
  %103 = ashr exact i64 %102, 2
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds i32, i32* %96, i64 %104
  %106 = ptrtoint i32* %105 to i64
  %107 = icmp sgt i64 %102, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %93
  %109 = bitcast i32* %105 to i8*
  %110 = inttoptr i64 %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 %102, i1 false) #15
  br label %111

111:                                              ; preds = %108, %93
  store i64 %106, i64* %35, align 8
  store i64 %101, i64* %34, align 8
  store i64 %98, i64* %36, align 8
  %112 = icmp eq i64 %71, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = inttoptr i64 %71 to i8*
  tail call void @_ZdlPv(i8* %114) #16
  br label %115

115:                                              ; preds = %113, %111, %65, %53
  %116 = phi i32* [ %100, %113 ], [ %100, %111 ], [ %67, %65 ], [ %54, %53 ]
  %117 = phi i64 [ %101, %113 ], [ %101, %111 ], [ %68, %65 ], [ %55, %53 ]
  %118 = phi i32* [ %100, %113 ], [ %100, %111 ], [ %67, %65 ], [ %56, %53 ]
  %119 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %57, i64 1
  %120 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %119, %31
  br i1 %120, label %37, label %53

121:                                              ; preds = %43, %149
  %122 = phi i32 [ 1, %43 ], [ %150, %149 ]
  %123 = phi i32* [ %41, %43 ], [ %151, %149 ]
  %124 = load i32, i32* %123, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #15
  %125 = call i32 @_ZN3gpu21GetIntelGpuSeriesTypeEjj(i32 32902, i32 %124) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false)
  switch i32 %125, label %135 [
    i32 16, label %126
    i32 17, label %126
    i32 18, label %127
    i32 1, label %128
    i32 2, label %129
    i32 3, label %129
    i32 4, label %129
    i32 5, label %130
    i32 6, label %130
    i32 7, label %131
    i32 8, label %131
    i32 9, label %131
    i32 10, label %131
    i32 11, label %131
    i32 12, label %131
    i32 13, label %131
    i32 14, label %132
    i32 15, label %133
    i32 19, label %133
    i32 20, label %133
    i32 21, label %134
  ]

126:                                              ; preds = %121, %121
  store i8 1, i8* %47, align 1, !alias.scope !31
  store i8 52, i8* %44, align 8, !alias.scope !31
  store i8 0, i8* %50, align 1, !alias.scope !31
  br label %136

127:                                              ; preds = %121
  store i8 1, i8* %47, align 1, !alias.scope !31
  store i8 53, i8* %44, align 8, !alias.scope !31
  store i8 0, i8* %50, align 1, !alias.scope !31
  br label %136

128:                                              ; preds = %121
  store i8 1, i8* %47, align 1, !alias.scope !31
  store i8 54, i8* %44, align 8, !alias.scope !31
  store i8 0, i8* %50, align 1, !alias.scope !31
  br label %136

129:                                              ; preds = %121, %121, %121
  store i8 1, i8* %47, align 1, !alias.scope !31
  store i8 55, i8* %44, align 8, !alias.scope !31
  store i8 0, i8* %50, align 1, !alias.scope !31
  br label %136

130:                                              ; preds = %121, %121
  store i8 1, i8* %47, align 1, !alias.scope !31
  store i8 56, i8* %44, align 8, !alias.scope !31
  store i8 0, i8* %50, align 1, !alias.scope !31
  br label %136

131:                                              ; preds = %121, %121, %121, %121, %121, %121, %121
  store i8 1, i8* %47, align 1, !alias.scope !31
  store i8 57, i8* %44, align 8, !alias.scope !31
  store i8 0, i8* %50, align 1, !alias.scope !31
  br label %136

132:                                              ; preds = %121
  store i8 2, i8* %47, align 1, !alias.scope !31
  store i16 12337, i16* %48, align 8, !alias.scope !31
  store i8 0, i8* %49, align 2, !alias.scope !31
  br label %136

133:                                              ; preds = %121, %121, %121
  store i8 2, i8* %47, align 1, !alias.scope !31
  store i16 12593, i16* %48, align 8, !alias.scope !31
  store i8 0, i8* %49, align 2, !alias.scope !31
  br label %136

134:                                              ; preds = %121
  store i8 2, i8* %47, align 1, !alias.scope !31
  store i16 12849, i16* %48, align 8, !alias.scope !31
  store i8 0, i8* %49, align 2, !alias.scope !31
  br label %136

135:                                              ; preds = %121
  store i8 0, i8* %47, align 1, !alias.scope !31
  store i8 0, i8* %44, align 8, !alias.scope !31
  br label %149

136:                                              ; preds = %126, %127, %128, %129, %130, %131, %132, %133, %134
  %137 = phi i64 [ 2, %134 ], [ 2, %133 ], [ 2, %132 ], [ 1, %131 ], [ 1, %130 ], [ 1, %129 ], [ 1, %128 ], [ 1, %127 ], [ 1, %126 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #15
  store i32 0, i32* %4, align 4
  %138 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* nonnull %44, i64 %137, i32* nonnull %4) #15
  br i1 %138, label %139, label %143

139:                                              ; preds = %136
  %140 = load i32, i32* %4, align 4
  %141 = icmp sgt i32 %140, %122
  %142 = select i1 %141, i32 %140, i32 %122
  br label %143

143:                                              ; preds = %136, %139
  %144 = phi i32 [ %122, %136 ], [ %142, %139 ]
  %145 = load i8, i8* %47, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #15
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %143
  %148 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %148) #16
  br label %149

149:                                              ; preds = %135, %143, %147
  %150 = phi i32 [ %122, %135 ], [ %144, %143 ], [ %144, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #15
  %151 = getelementptr inbounds i32, i32* %123, i64 1
  %152 = icmp eq i32* %151, %40
  br i1 %152, label %153, label %121

153:                                              ; preds = %149
  %154 = load i32*, i32** %6, align 8
  br label %155

155:                                              ; preds = %153, %39
  %156 = phi i32* [ %154, %153 ], [ %40, %39 ]
  %157 = phi i32 [ %150, %153 ], [ 0, %39 ]
  %158 = icmp eq i32* %156, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %156 to i64
  %161 = bitcast i32** %7 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast i32* %156 to i8*
  call void @_ZdlPv(i8* %162) #16
  br label %163

163:                                              ; preds = %155, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret i32 %157
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12CacheGPUInfoERKNS_7GPUInfoE(%"struct.gpu::GPUInfo"* dereferenceable(696)) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 696) #16
  %3 = bitcast i8* %2 to %"struct.gpu::GPUInfo"*
  tail call void @_ZN3gpu7GPUInfoC1Ev(%"struct.gpu::GPUInfo"* nonnull %3) #15
  store i8* %2, i8** bitcast (%"struct.gpu::GPUInfo"** @_ZN3gpu12_GLOBAL__N_116g_gpu_info_cacheE to i8**), align 8
  %4 = tail call dereferenceable(696) %"struct.gpu::GPUInfo"* @_ZN3gpu7GPUInfoaSERKS0_(%"struct.gpu::GPUInfo"* nonnull %3, %"struct.gpu::GPUInfo"* dereferenceable(696) %0)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN3gpu7GPUInfoC1Ev(%"struct.gpu::GPUInfo"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(696) %"struct.gpu::GPUInfo"* @_ZN3gpu7GPUInfoaSERKS0_(%"struct.gpu::GPUInfo"*, %"struct.gpu::GPUInfo"* dereferenceable(696)) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"struct.gpu::GPUInfo"* %0 to i8*
  %4 = bitcast %"struct.gpu::GPUInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 10, i1 false)
  %5 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 4
  %7 = tail call dereferenceable(120) %"struct.gpu::GPUInfo::GPUDevice"* @_ZN3gpu7GPUInfo9GPUDeviceaSERKS1_(%"struct.gpu::GPUInfo::GPUDevice"* %5, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120) %6) #15
  %8 = icmp eq %"struct.gpu::GPUInfo"* %0, %1
  br i1 %8, label %421, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 5, i32 0, i32 0
  %12 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %11, align 8
  %13 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %14 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %13, align 8
  tail call void @_ZNSt3__16vectorIN3gpu7GPUInfo9GPUDeviceENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.20"* %10, %"struct.gpu::GPUInfo::GPUDevice"* %12, %"struct.gpu::GPUInfo::GPUDevice"* %14) #15
  %15 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 6
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %20, label %35, label %25

25:                                               ; preds = %9
  br i1 %24, label %29, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #15
  br label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %15, i8* %31, i64 %33) #15
  br label %45

35:                                               ; preds = %9
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %41 = zext i8 %23 to i64
  %42 = select i1 %24, i8* %37, i8* %40
  %43 = select i1 %24, i64 %39, i64 %41
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %15, i8* %42, i64 %43) #15
  br label %45

45:                                               ; preds = %26, %29, %35
  %46 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 7
  %47 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 7
  %48 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %51, label %66, label %56

56:                                               ; preds = %45
  br i1 %55, label %60, label %57

57:                                               ; preds = %56
  %58 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #15
  br label %76

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %46, i8* %62, i64 %64) #15
  br label %76

66:                                               ; preds = %45
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %72 = zext i8 %54 to i64
  %73 = select i1 %55, i8* %68, i8* %71
  %74 = select i1 %55, i64 %70, i64 %72
  %75 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %46, i8* %73, i64 %74) #15
  br label %76

76:                                               ; preds = %57, %60, %66
  %77 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 8
  %78 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 8
  %79 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %82, label %97, label %87

87:                                               ; preds = %76
  br i1 %86, label %91, label %88

88:                                               ; preds = %87
  %89 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #15
  br label %107

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %77, i8* %93, i64 %95) #15
  br label %107

97:                                               ; preds = %76
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %103 = zext i8 %85 to i64
  %104 = select i1 %86, i8* %99, i8* %102
  %105 = select i1 %86, i64 %101, i64 %103
  %106 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %77, i8* %104, i64 %105) #15
  br label %107

107:                                              ; preds = %88, %91, %97
  %108 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 9
  %109 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 9
  %110 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %113, label %128, label %118

118:                                              ; preds = %107
  br i1 %117, label %122, label %119

119:                                              ; preds = %118
  %120 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  %121 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 24, i1 false) #15
  br label %138

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %108, i8* %124, i64 %126) #15
  br label %138

128:                                              ; preds = %107
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %134 = zext i8 %116 to i64
  %135 = select i1 %117, i8* %130, i8* %133
  %136 = select i1 %117, i64 %132, i64 %134
  %137 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %108, i8* %135, i64 %136) #15
  br label %138

138:                                              ; preds = %119, %122, %128
  %139 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 10
  %140 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 10
  %141 = bitcast %"class.std::__1::basic_string"* %139 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = bitcast %"class.std::__1::basic_string"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %144, label %159, label %149

149:                                              ; preds = %138
  br i1 %148, label %153, label %150

150:                                              ; preds = %149
  %151 = bitcast %"class.std::__1::basic_string"* %139 to i8*
  %152 = bitcast %"class.std::__1::basic_string"* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 24, i1 false) #15
  br label %169

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %139, i8* %155, i64 %157) #15
  br label %169

159:                                              ; preds = %138
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.std::__1::basic_string"* %140 to i8*
  %165 = zext i8 %147 to i64
  %166 = select i1 %148, i8* %161, i8* %164
  %167 = select i1 %148, i64 %163, i64 %165
  %168 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %139, i8* %166, i64 %167) #15
  br label %169

169:                                              ; preds = %150, %153, %159
  %170 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 11
  %171 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 11
  %172 = bitcast %"class.std::__1::basic_string"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  %176 = bitcast %"class.std::__1::basic_string"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %175, label %190, label %180

180:                                              ; preds = %169
  br i1 %179, label %184, label %181

181:                                              ; preds = %180
  %182 = bitcast %"class.std::__1::basic_string"* %170 to i8*
  %183 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 24, i1 false) #15
  br label %200

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %170, i8* %186, i64 %188) #15
  br label %200

190:                                              ; preds = %169
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  %193 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  %196 = zext i8 %178 to i64
  %197 = select i1 %179, i8* %192, i8* %195
  %198 = select i1 %179, i64 %194, i64 %196
  %199 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %170, i8* %197, i64 %198) #15
  br label %200

200:                                              ; preds = %181, %184, %190
  %201 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 12
  %202 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 12
  %203 = bitcast %"class.std::__1::basic_string"* %201 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  %207 = bitcast %"class.std::__1::basic_string"* %202 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %206, label %221, label %211

211:                                              ; preds = %200
  br i1 %210, label %215, label %212

212:                                              ; preds = %211
  %213 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  %214 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* align 8 %214, i64 24, i1 false) #15
  br label %231

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  %218 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %219 = load i64, i64* %218, align 8
  %220 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %201, i8* %217, i64 %219) #15
  br label %231

221:                                              ; preds = %200
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  %227 = zext i8 %209 to i64
  %228 = select i1 %210, i8* %223, i8* %226
  %229 = select i1 %210, i64 %225, i64 %227
  %230 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %201, i8* %228, i64 %229) #15
  br label %231

231:                                              ; preds = %212, %215, %221
  %232 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 13
  %233 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 13
  %234 = bitcast %"class.std::__1::basic_string"* %232 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  %238 = bitcast %"class.std::__1::basic_string"* %233 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %237, label %252, label %242

242:                                              ; preds = %231
  br i1 %241, label %246, label %243

243:                                              ; preds = %242
  %244 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  %245 = bitcast %"class.std::__1::basic_string"* %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 24, i1 false) #15
  br label %262

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %232, i8* %248, i64 %250) #15
  br label %262

252:                                              ; preds = %231
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.std::__1::basic_string"* %233 to i8*
  %258 = zext i8 %240 to i64
  %259 = select i1 %241, i8* %254, i8* %257
  %260 = select i1 %241, i64 %256, i64 %258
  %261 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %232, i8* %259, i64 %260) #15
  br label %262

262:                                              ; preds = %243, %246, %252
  %263 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 14
  %264 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 14
  %265 = bitcast %"class.std::__1::basic_string"* %263 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %265, i64 0, i32 1, i32 0
  %267 = load i8, i8* %266, align 1
  %268 = icmp slt i8 %267, 0
  %269 = bitcast %"class.std::__1::basic_string"* %264 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %269, i64 0, i32 1, i32 0
  %271 = load i8, i8* %270, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %268, label %283, label %273

273:                                              ; preds = %262
  br i1 %272, label %277, label %274

274:                                              ; preds = %273
  %275 = bitcast %"class.std::__1::basic_string"* %263 to i8*
  %276 = bitcast %"class.std::__1::basic_string"* %264 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* align 8 %276, i64 24, i1 false) #15
  br label %293

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %263, i8* %279, i64 %281) #15
  br label %293

283:                                              ; preds = %262
  %284 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load i8*, i8** %284, align 8
  %286 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.std::__1::basic_string"* %264 to i8*
  %289 = zext i8 %271 to i64
  %290 = select i1 %272, i8* %285, i8* %288
  %291 = select i1 %272, i64 %287, i64 %289
  %292 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %263, i8* %290, i64 %291) #15
  br label %293

293:                                              ; preds = %274, %277, %283
  %294 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 15
  %295 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 15
  %296 = bitcast %"class.std::__1::basic_string"* %294 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %296, i64 0, i32 1, i32 0
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  %300 = bitcast %"class.std::__1::basic_string"* %295 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  %302 = load i8, i8* %301, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %299, label %314, label %304

304:                                              ; preds = %293
  br i1 %303, label %308, label %305

305:                                              ; preds = %304
  %306 = bitcast %"class.std::__1::basic_string"* %294 to i8*
  %307 = bitcast %"class.std::__1::basic_string"* %295 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %306, i8* align 8 %307, i64 24, i1 false) #15
  br label %324

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %295, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load i8*, i8** %309, align 8
  %311 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %312 = load i64, i64* %311, align 8
  %313 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %294, i8* %310, i64 %312) #15
  br label %324

314:                                              ; preds = %293
  %315 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %295, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load i8*, i8** %315, align 8
  %317 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.std::__1::basic_string"* %295 to i8*
  %320 = zext i8 %302 to i64
  %321 = select i1 %303, i8* %316, i8* %319
  %322 = select i1 %303, i64 %318, i64 %320
  %323 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %294, i8* %321, i64 %322) #15
  br label %324

324:                                              ; preds = %305, %308, %314
  %325 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 16
  %326 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 16
  %327 = bitcast %"class.std::__1::basic_string"* %325 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %328 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %327, i64 0, i32 1, i32 0
  %329 = load i8, i8* %328, align 1
  %330 = icmp slt i8 %329, 0
  %331 = bitcast %"class.std::__1::basic_string"* %326 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %330, label %345, label %335

335:                                              ; preds = %324
  br i1 %334, label %339, label %336

336:                                              ; preds = %335
  %337 = bitcast %"class.std::__1::basic_string"* %325 to i8*
  %338 = bitcast %"class.std::__1::basic_string"* %326 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %337, i8* align 8 %338, i64 24, i1 false) #15
  br label %355

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %326, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load i8*, i8** %340, align 8
  %342 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %343 = load i64, i64* %342, align 8
  %344 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %325, i8* %341, i64 %343) #15
  br label %355

345:                                              ; preds = %324
  %346 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %326, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.std::__1::basic_string"* %326 to i8*
  %351 = zext i8 %333 to i64
  %352 = select i1 %334, i8* %347, i8* %350
  %353 = select i1 %334, i64 %349, i64 %351
  %354 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %325, i8* %352, i64 %353) #15
  br label %355

355:                                              ; preds = %336, %339, %345
  %356 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 17
  %357 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 17
  %358 = bitcast %"class.std::__1::basic_string"* %356 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %359 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %358, i64 0, i32 1, i32 0
  %360 = load i8, i8* %359, align 1
  %361 = icmp slt i8 %360, 0
  %362 = bitcast %"class.std::__1::basic_string"* %357 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %363 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %362, i64 0, i32 1, i32 0
  %364 = load i8, i8* %363, align 1
  %365 = icmp slt i8 %364, 0
  br i1 %361, label %376, label %366

366:                                              ; preds = %355
  br i1 %365, label %370, label %367

367:                                              ; preds = %366
  %368 = bitcast %"class.std::__1::basic_string"* %356 to i8*
  %369 = bitcast %"class.std::__1::basic_string"* %357 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %368, i8* align 8 %369, i64 24, i1 false) #15
  br label %386

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %357, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load i8*, i8** %371, align 8
  %373 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %374 = load i64, i64* %373, align 8
  %375 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %356, i8* %372, i64 %374) #15
  br label %386

376:                                              ; preds = %355
  %377 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %357, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %380 = load i64, i64* %379, align 8
  %381 = bitcast %"class.std::__1::basic_string"* %357 to i8*
  %382 = zext i8 %364 to i64
  %383 = select i1 %365, i8* %378, i8* %381
  %384 = select i1 %365, i64 %380, i64 %382
  %385 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %356, i8* %383, i64 %384) #15
  br label %386

386:                                              ; preds = %367, %370, %376
  %387 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 18
  %388 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 18
  %389 = bitcast i32* %387 to i8*
  %390 = bitcast i32* %388 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %389, i8* align 8 %390, i64 5, i1 false)
  %391 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 20
  %392 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 20
  %393 = bitcast %"class.std::__1::basic_string"* %391 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %393, i64 0, i32 1, i32 0
  %395 = load i8, i8* %394, align 1
  %396 = icmp slt i8 %395, 0
  %397 = bitcast %"class.std::__1::basic_string"* %392 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %397, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %396, label %411, label %401

401:                                              ; preds = %386
  br i1 %400, label %405, label %402

402:                                              ; preds = %401
  %403 = bitcast %"class.std::__1::basic_string"* %391 to i8*
  %404 = bitcast %"class.std::__1::basic_string"* %392 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %403, i8* align 8 %404, i64 24, i1 false) #15
  br label %437

405:                                              ; preds = %401
  %406 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %392, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = load i8*, i8** %406, align 8
  %408 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %409 = load i64, i64* %408, align 8
  %410 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %391, i8* %407, i64 %409) #15
  br label %437

411:                                              ; preds = %386
  %412 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %392, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load i8*, i8** %412, align 8
  %414 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %415 = load i64, i64* %414, align 8
  %416 = bitcast %"class.std::__1::basic_string"* %392 to i8*
  %417 = zext i8 %399 to i64
  %418 = select i1 %400, i8* %413, i8* %416
  %419 = select i1 %400, i64 %415, i64 %417
  %420 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %391, i8* %418, i64 %419) #15
  br label %437

421:                                              ; preds = %2
  %422 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 18
  %423 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 18
  %424 = bitcast i32* %422 to i8*
  %425 = bitcast i32* %423 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %424, i8* align 8 %425, i64 5, i1 false)
  %426 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 21
  %427 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 21
  %428 = bitcast i8* %427 to i32*
  %429 = bitcast i8* %426 to i32*
  %430 = load i32, i32* %428, align 8
  store i32 %430, i32* %429, align 8
  %431 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 26, i32 1
  %432 = load i32, i32* %431, align 8
  %433 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 26, i32 1
  store i32 %432, i32* %433, align 8
  %434 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 28
  %435 = load i8, i8* %434, align 8, !range !11
  %436 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 28
  store i8 %435, i8* %436, align 8
  br label %464

437:                                              ; preds = %402, %405, %411
  %438 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 21
  %439 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 21
  %440 = bitcast i8* %439 to i32*
  %441 = bitcast i8* %438 to i32*
  %442 = load i32, i32* %440, align 8
  store i32 %442, i32* %441, align 8
  %443 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 26, i32 0
  %444 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 26, i32 0, i32 0, i32 0
  %445 = load %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %444, align 8
  %446 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 26, i32 0, i32 0, i32 1
  %447 = load %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %446, align 8
  tail call void @_ZNSt3__16vectorIN3gpu38VideoDecodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.27"* %443, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %445, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %447) #15
  %448 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 26, i32 1
  %449 = load i32, i32* %448, align 8
  %450 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 26, i32 1
  store i32 %449, i32* %450, align 8
  %451 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 27
  %452 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 27, i32 0, i32 0
  %453 = load %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %452, align 8
  %454 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 27, i32 0, i32 1
  %455 = load %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %454, align 8
  tail call void @_ZNSt3__16vectorIN3gpu38VideoEncodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.34"* %451, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %453, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %455) #15
  %456 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 28
  %457 = load i8, i8* %456, align 8, !range !11
  %458 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 28
  store i8 %457, i8* %458, align 8
  %459 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 29
  %460 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 29, i32 0, i32 0
  %461 = load %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %460, align 8
  %462 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 29, i32 0, i32 1
  %463 = load %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %462, align 8
  tail call void @_ZNSt3__16vectorIN3gpu38ImageDecodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.41"* %459, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %461, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %463) #15
  br label %464

464:                                              ; preds = %421, %437
  %465 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 30
  %466 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 30
  %467 = bitcast i8* %466 to i16*
  %468 = bitcast i8* %465 to i16*
  %469 = load i16, i16* %467, align 8
  store i16 %469, i16* %468, align 8
  %470 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 32
  %471 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %472 = load i8, i8* %471, align 8, !range !11
  %473 = icmp eq i8 %472, 0
  br i1 %473, label %483, label %474

474:                                              ; preds = %464
  %475 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0
  %476 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %470, i64 0, i32 0, i32 0, i32 0, i32 0
  %477 = load i8, i8* %476, align 8, !range !11
  %478 = icmp eq i8 %477, 0
  %479 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %478, label %482, label %480

480:                                              ; preds = %474
  %481 = tail call dereferenceable(104) %"class.gpu::VulkanInfo"* @_ZN3gpu10VulkanInfoaSERKS0_(%"class.gpu::VulkanInfo"* %479, %"class.gpu::VulkanInfo"* dereferenceable(104) %475) #15
  br label %489

482:                                              ; preds = %474
  tail call void @_ZN3gpu10VulkanInfoC1ERKS0_(%"class.gpu::VulkanInfo"* %479, %"class.gpu::VulkanInfo"* dereferenceable(104) %475) #15
  store i8 1, i8* %476, align 8
  br label %489

483:                                              ; preds = %464
  %484 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %470, i64 0, i32 0, i32 0, i32 0, i32 0
  %485 = load i8, i8* %484, align 8, !range !11
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %489, label %487

487:                                              ; preds = %483
  %488 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gpu10VulkanInfoD1Ev(%"class.gpu::VulkanInfo"* %488) #15
  store i8 0, i8* %484, align 8
  br label %489

489:                                              ; preds = %480, %482, %483, %487
  ret %"struct.gpu::GPUInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu15PopGPUInfoCacheEPNS_7GPUInfoE(%"struct.gpu::GPUInfo"*) local_unnamed_addr #0 {
  %2 = load %"struct.gpu::GPUInfo"*, %"struct.gpu::GPUInfo"** @_ZN3gpu12_GLOBAL__N_116g_gpu_info_cacheE, align 8
  %3 = icmp eq %"struct.gpu::GPUInfo"* %2, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = tail call dereferenceable(696) %"struct.gpu::GPUInfo"* @_ZN3gpu7GPUInfoaSERKS0_(%"struct.gpu::GPUInfo"* %0, %"struct.gpu::GPUInfo"* nonnull dereferenceable(696) %2)
  %6 = load %"struct.gpu::GPUInfo"*, %"struct.gpu::GPUInfo"** @_ZN3gpu12_GLOBAL__N_116g_gpu_info_cacheE, align 8
  %7 = icmp eq %"struct.gpu::GPUInfo"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_ZN3gpu7GPUInfoD1Ev(%"struct.gpu::GPUInfo"* nonnull %6) #15
  %9 = bitcast %"struct.gpu::GPUInfo"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %8, %4
  store %"struct.gpu::GPUInfo"* null, %"struct.gpu::GPUInfo"** @_ZN3gpu12_GLOBAL__N_116g_gpu_info_cacheE, align 8
  br label %11

11:                                               ; preds = %1, %10
  %12 = phi i1 [ true, %10 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind
declare void @_ZN3gpu7GPUInfoD1Ev(%"struct.gpu::GPUInfo"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CacheGpuFeatureInfoERKNS_14GpuFeatureInfoE(%"struct.gpu::GpuFeatureInfo"* dereferenceable(184)) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 184) #16
  %3 = bitcast i8* %2 to %"struct.gpu::GpuFeatureInfo"*
  tail call void @_ZN3gpu14GpuFeatureInfoC1Ev(%"struct.gpu::GpuFeatureInfo"* nonnull %3) #15
  store i8* %2, i8** bitcast (%"struct.gpu::GpuFeatureInfo"** @_ZN3gpu12_GLOBAL__N_124g_gpu_feature_info_cacheE to i8**), align 8
  %4 = tail call dereferenceable(184) %"struct.gpu::GpuFeatureInfo"* @_ZN3gpu14GpuFeatureInfoaSERKS0_(%"struct.gpu::GpuFeatureInfo"* nonnull %3, %"struct.gpu::GpuFeatureInfo"* dereferenceable(184) %0) #15
  ret void
}

declare dereferenceable(184) %"struct.gpu::GpuFeatureInfo"* @_ZN3gpu14GpuFeatureInfoaSERKS0_(%"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"* dereferenceable(184)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu22PopGpuFeatureInfoCacheEPNS_14GpuFeatureInfoE(%"struct.gpu::GpuFeatureInfo"*) local_unnamed_addr #0 {
  %2 = load %"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"** @_ZN3gpu12_GLOBAL__N_124g_gpu_feature_info_cacheE, align 8
  %3 = icmp eq %"struct.gpu::GpuFeatureInfo"* %2, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = tail call dereferenceable(184) %"struct.gpu::GpuFeatureInfo"* @_ZN3gpu14GpuFeatureInfoaSERKS0_(%"struct.gpu::GpuFeatureInfo"* %0, %"struct.gpu::GpuFeatureInfo"* nonnull dereferenceable(184) %2) #15
  %6 = load %"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"** @_ZN3gpu12_GLOBAL__N_124g_gpu_feature_info_cacheE, align 8
  %7 = icmp eq %"struct.gpu::GpuFeatureInfo"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_ZN3gpu14GpuFeatureInfoD1Ev(%"struct.gpu::GpuFeatureInfo"* nonnull %6) #15
  %9 = bitcast %"struct.gpu::GpuFeatureInfo"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %8, %4
  store %"struct.gpu::GpuFeatureInfo"* null, %"struct.gpu::GpuFeatureInfo"** @_ZN3gpu12_GLOBAL__N_124g_gpu_feature_info_cacheE, align 8
  br label %11

11:                                               ; preds = %1, %10
  %12 = phi i1 [ true, %10 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu25EnableSwiftShaderIfNeededEPN4base11CommandLineERKNS_14GpuFeatureInfoEbb(%"class.base::CommandLine"*, %"struct.gpu::GpuFeatureInfo"* nocapture readonly dereferenceable(184), i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %5 = or i1 %2, %3
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #15
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 0, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 0, i64 7
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %12, %8
  tail call void @_ZN2gl35SetSoftwareWebGLCommandLineSwitchesEPN4base11CommandLineEb(%"class.base::CommandLine"* %0, i1 zeroext true) #15
  br label %17

17:                                               ; preds = %12, %6, %4, %16
  %18 = phi i1 [ true, %16 ], [ false, %4 ], [ false, %6 ], [ false, %12 ]
  ret i1 %18
}

declare void @_ZN2gl35SetSoftwareWebGLCommandLineSwitchesEPN4base11CommandLineEb(%"class.base::CommandLine"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3gpu21GetIntelGpuSeriesTypeEjj(i32, i32) local_unnamed_addr #7 {
  %3 = icmp eq i32 %0, 32902
  br i1 %3, label %4, label %57

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i16
  %6 = and i16 %5, -256
  switch i16 %6, label %57 [
    i16 10496, label %55
    i16 10752, label %7
    i16 11776, label %12
    i16 0, label %13
    i16 256, label %14
    i16 3840, label %24
    i16 2560, label %25
    i16 1024, label %28
    i16 3072, label %28
    i16 3328, label %28
    i16 8704, label %29
    i16 5632, label %30
    i16 23040, label %31
    i16 6400, label %35
    i16 6656, label %36
    i16 12544, label %37
    i16 22784, label %38
    i16 -30976, label %39
    i16 15872, label %41
    i16 -25856, label %45
    i16 -30208, label %46
    i16 17664, label %47
    i16 19968, label %48
    i16 -26112, label %49
  ]

7:                                                ; preds = %4
  %8 = or i32 %1, 16
  %9 = icmp eq i32 %8, 10770
  br i1 %9, label %55, label %10

10:                                               ; preds = %7
  %11 = icmp eq i32 %1, 10818
  br i1 %11, label %55, label %57

12:                                               ; preds = %4
  br label %55

13:                                               ; preds = %4
  br label %55

14:                                               ; preds = %4
  %15 = add i32 %1, -338
  %16 = lshr i32 %15, 2
  %17 = shl i32 %15, 30
  %18 = or i32 %16, %17
  %19 = icmp ult i32 %18, 7
  br i1 %19, label %50, label %20

20:                                               ; preds = %50, %14
  %21 = or i32 %1, 2
  %22 = icmp eq i32 %21, 343
  %23 = select i1 %22, i32 2, i32 1
  br label %55

24:                                               ; preds = %4
  br label %55

25:                                               ; preds = %4
  %26 = icmp eq i32 %1, 2692
  %27 = select i1 %26, i32 7, i32 4
  br label %55

28:                                               ; preds = %4, %4, %4
  br label %55

29:                                               ; preds = %4
  br label %55

30:                                               ; preds = %4
  br label %55

31:                                               ; preds = %4
  %32 = or i32 %1, 1
  %33 = icmp eq i32 %32, 23173
  %34 = select i1 %33, i32 7, i32 14
  br label %55

35:                                               ; preds = %4
  br label %55

36:                                               ; preds = %4
  br label %55

37:                                               ; preds = %4
  br label %55

38:                                               ; preds = %4
  br label %55

39:                                               ; preds = %4
  switch i32 %1, label %57 [
    i32 34752, label %55
    i32 34762, label %40
  ]

40:                                               ; preds = %39
  br label %55

41:                                               ; preds = %4
  %42 = add i32 %1, -16032
  %43 = icmp ult i32 %42, 5
  %44 = select i1 %43, i32 12, i32 11
  br label %55

45:                                               ; preds = %4
  br label %55

46:                                               ; preds = %4
  br label %55

47:                                               ; preds = %4
  br label %55

48:                                               ; preds = %4
  br label %55

49:                                               ; preds = %4
  br label %55

50:                                               ; preds = %14
  %51 = trunc i32 %16 to i8
  %52 = lshr i8 119, %51
  %53 = and i8 %52, 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %20, label %55

55:                                               ; preds = %50, %49, %48, %47, %46, %45, %40, %38, %37, %36, %35, %30, %29, %28, %24, %13, %12, %4, %7, %10, %20, %25, %31, %39, %41
  %56 = phi i32 [ %44, %41 ], [ 10, %39 ], [ %34, %31 ], [ %27, %25 ], [ %23, %20 ], [ 17, %10 ], [ 16, %7 ], [ 16, %4 ], [ 17, %12 ], [ 18, %13 ], [ 2, %24 ], [ 4, %28 ], [ 5, %29 ], [ 6, %30 ], [ 8, %35 ], [ 7, %36 ], [ 9, %37 ], [ 10, %38 ], [ 11, %40 ], [ 13, %45 ], [ 15, %46 ], [ 19, %47 ], [ 20, %48 ], [ 21, %49 ], [ 3, %50 ]
  br label %57

57:                                               ; preds = %2, %10, %4, %39, %55
  %58 = phi i32 [ %56, %55 ], [ 0, %39 ], [ 0, %4 ], [ 0, %10 ], [ 0, %2 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu21GetIntelGpuGenerationEjj(%"class.std::__1::basic_string"* noalias sret, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 32902
  br i1 %4, label %5, label %55

5:                                                ; preds = %3
  %6 = tail call i32 @_ZN3gpu21GetIntelGpuSeriesTypeEjj(i32 32902, i32 %2)
  switch i32 %6, label %55 [
    i32 16, label %7
    i32 17, label %7
    i32 18, label %12
    i32 1, label %17
    i32 2, label %22
    i32 3, label %22
    i32 4, label %22
    i32 5, label %27
    i32 6, label %27
    i32 7, label %32
    i32 8, label %32
    i32 9, label %32
    i32 10, label %32
    i32 11, label %32
    i32 12, label %32
    i32 13, label %32
    i32 14, label %37
    i32 15, label %43
    i32 19, label %43
    i32 20, label %43
    i32 21, label %49
  ]

7:                                                ; preds = %5, %5
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 1, i8* %9, align 1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 52, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 0, i8* %11, align 1
  br label %59

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 1, i8* %14, align 1
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 53, i8* %15, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  store i8 0, i8* %16, align 1
  br label %59

17:                                               ; preds = %5
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 1, i8* %19, align 1
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 54, i8* %20, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 1
  store i8 0, i8* %21, align 1
  br label %59

22:                                               ; preds = %5, %5, %5
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 1, i8* %24, align 1
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 55, i8* %25, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 0, i8* %26, align 1
  br label %59

27:                                               ; preds = %5, %5
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 1, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 56, i8* %30, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 0, i8* %31, align 1
  br label %59

32:                                               ; preds = %5, %5, %5, %5, %5, %5, %5
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 1, i8* %34, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 57, i8* %35, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  store i8 0, i8* %36, align 1
  br label %59

37:                                               ; preds = %5
  %38 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 2, i8* %39, align 1
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 12337, i16* %41, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 2
  store i8 0, i8* %42, align 2
  br label %59

43:                                               ; preds = %5, %5, %5
  %44 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 2, i8* %45, align 1
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 12593, i16* %47, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 0, i8* %48, align 2
  br label %59

49:                                               ; preds = %5
  %50 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 2, i8* %51, align 1
  %52 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 12849, i16* %53, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 2
  store i8 0, i8* %54, align 2
  br label %59

55:                                               ; preds = %5, %3
  %56 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 0, i8* %57, align 1
  %58 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %58, align 8
  br label %59

59:                                               ; preds = %7, %12, %17, %22, %27, %32, %37, %43, %49, %55
  ret void
}

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu21CollectDevicePerfInfoEPNS_14DevicePerfInfoEb(%"struct.gpu::DevicePerfInfo"* nocapture, i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.6", align 8
  %4 = alloca %"class.std::__1::vector.6", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = tail call i64 @_ZN4base7SysInfo22AmountOfPhysicalMemoryEv() #15
  %7 = sdiv i64 %6, 1048576
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %"struct.gpu::DevicePerfInfo", %"struct.gpu::DevicePerfInfo"* %0, i64 0, i32 0
  store i32 %8, i32* %9, align 4
  br i1 %1, label %180, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %3, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #15
  %15 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #15
  %19 = bitcast %"class.base::FilePath"* %5 to i8*
  %20 = bitcast i32** %13 to i64*
  %21 = bitcast %"class.std::__1::vector.6"* %3 to i64*
  %22 = bitcast i32** %14 to i64*
  %23 = bitcast i32** %17 to i64*
  %24 = bitcast %"class.std::__1::vector.6"* %4 to i64*
  %25 = bitcast i32** %18 to i64*
  br label %38

26:                                               ; preds = %174
  %27 = load i32*, i32** %16, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = ptrtoint i32* %27 to i64
  store i64 %30, i64* %23, align 8
  %31 = bitcast i32* %27 to i8*
  call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %29, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  %33 = load i32*, i32** %12, align 8
  %34 = icmp eq i32* %33, null
  br i1 %34, label %178, label %35

35:                                               ; preds = %32
  %36 = ptrtoint i32* %33 to i64
  store i64 %36, i64* %20, align 8
  %37 = bitcast i32* %33 to i8*
  call void @_ZdlPv(i8* %37) #16
  br label %178

38:                                               ; preds = %174, %10
  %39 = phi i32 [ 0, %10 ], [ %175, %174 ]
  %40 = phi i32* [ getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3gpu12_GLOBAL__N_132EstimateAmountOfTotalDiskSpaceMBEvE9kPathKeys, i64 0, i64 0), %10 ], [ %176, %174 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false) #15
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %5) #15
  %41 = load i32, i32* %40, align 4
  %42 = call zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32 %41, %"class.base::FilePath"* nonnull %5) #15
  br i1 %42, label %43, label %174

43:                                               ; preds = %38
  %44 = call i64 @_ZN4base7SysInfo22AmountOfTotalDiskSpaceERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %5) #15
  %45 = sdiv i64 %44, 1048576
  %46 = trunc i64 %45 to i32
  %47 = call i64 @_ZN4base7SysInfo21AmountOfFreeDiskSpaceERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %5) #15
  %48 = sdiv i64 %47, 1048576
  %49 = trunc i64 %48 to i32
  %50 = load i64, i64* %20, align 8
  %51 = load i64, i64* %21, align 8
  %52 = icmp eq i64 %50, %51
  %53 = inttoptr i64 %51 to i32*
  %54 = inttoptr i64 %50 to i32*
  br i1 %52, label %71, label %55

55:                                               ; preds = %43
  %56 = load i32*, i32** %16, align 8
  %57 = sub i64 %50, %51
  %58 = ashr exact i64 %57, 2
  br label %59

59:                                               ; preds = %68, %55
  %60 = phi i64 [ 0, %55 ], [ %69, %68 ]
  %61 = getelementptr inbounds i32, i32* %53, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %46
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds i32, i32* %56, i64 %60
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %49
  br i1 %67, label %174, label %68

68:                                               ; preds = %64, %59
  %69 = add nuw i64 %60, 1
  %70 = icmp ult i64 %69, %58
  br i1 %70, label %59, label %71

71:                                               ; preds = %68, %43
  %72 = phi i64 [ %50, %43 ], [ %51, %68 ]
  %73 = load i32*, i32** %14, align 8
  %74 = icmp eq i32* %73, %54
  br i1 %74, label %78, label %75

75:                                               ; preds = %71
  store i32 %46, i32* %54, align 4
  %76 = getelementptr inbounds i32, i32* %54, i64 1
  %77 = ptrtoint i32* %76 to i64
  store i64 %77, i64* %20, align 8
  br label %121

78:                                               ; preds = %71
  %79 = sub i64 %50, %72
  %80 = ashr exact i64 %79, 2
  %81 = add nsw i64 %80, 1
  %82 = icmp ugt i64 %81, 4611686018427387903
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = bitcast %"class.std::__1::vector.6"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %84) #17
  unreachable

85:                                               ; preds = %78
  %86 = icmp ult i64 %80, 2305843009213693951
  br i1 %86, label %87, label %95

87:                                               ; preds = %85
  %88 = ashr exact i64 %79, 1
  %89 = icmp ult i64 %88, %81
  %90 = select i1 %89, i64 %81, i64 %88
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %87
  %93 = icmp ugt i64 %90, 4611686018427387903
  br i1 %93, label %94, label %95

94:                                               ; preds = %92
  call void @abort() #17
  unreachable

95:                                               ; preds = %92, %85
  %96 = phi i64 [ %90, %92 ], [ 4611686018427387903, %85 ]
  %97 = shl i64 %96, 2
  %98 = call i8* @_Znwm(i64 %97) #16
  %99 = bitcast i8* %98 to i32*
  br label %100

100:                                              ; preds = %95, %87
  %101 = phi i64 [ %96, %95 ], [ 0, %87 ]
  %102 = phi i32* [ %99, %95 ], [ null, %87 ]
  %103 = getelementptr inbounds i32, i32* %102, i64 %80
  %104 = getelementptr inbounds i32, i32* %102, i64 %101
  %105 = ptrtoint i32* %104 to i64
  store i32 %46, i32* %103, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 1
  %107 = ptrtoint i32* %106 to i64
  %108 = sub i64 %50, %51
  %109 = ashr exact i64 %108, 2
  %110 = sub nsw i64 0, %109
  %111 = getelementptr inbounds i32, i32* %103, i64 %110
  %112 = ptrtoint i32* %111 to i64
  %113 = icmp sgt i64 %108, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %100
  %115 = bitcast i32* %111 to i8*
  %116 = inttoptr i64 %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %116, i64 %108, i1 false) #15
  br label %117

117:                                              ; preds = %114, %100
  store i64 %112, i64* %21, align 8
  store i64 %107, i64* %20, align 8
  store i64 %105, i64* %22, align 8
  %118 = icmp eq i64 %51, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = inttoptr i64 %51 to i8*
  call void @_ZdlPv(i8* %120) #16
  br label %121

121:                                              ; preds = %119, %117, %75
  %122 = load i32*, i32** %17, align 8
  %123 = load i32*, i32** %18, align 8
  %124 = icmp eq i32* %122, %123
  %125 = ptrtoint i32* %123 to i64
  br i1 %124, label %129, label %126

126:                                              ; preds = %121
  store i32 %49, i32* %122, align 4
  %127 = getelementptr inbounds i32, i32* %122, i64 1
  %128 = ptrtoint i32* %127 to i64
  store i64 %128, i64* %23, align 8
  br label %172

129:                                              ; preds = %121
  %130 = ptrtoint i32* %122 to i64
  %131 = load i64, i64* %24, align 8
  %132 = sub i64 %130, %131
  %133 = ashr exact i64 %132, 2
  %134 = add nsw i64 %133, 1
  %135 = icmp ugt i64 %134, 4611686018427387903
  br i1 %135, label %136, label %138

136:                                              ; preds = %129
  %137 = bitcast %"class.std::__1::vector.6"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %137) #17
  unreachable

138:                                              ; preds = %129
  %139 = sub i64 %125, %131
  %140 = ashr exact i64 %139, 2
  %141 = icmp ult i64 %140, 2305843009213693951
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = ashr exact i64 %139, 1
  %144 = icmp ult i64 %143, %134
  %145 = select i1 %144, i64 %134, i64 %143
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %142
  %148 = icmp ugt i64 %145, 4611686018427387903
  br i1 %148, label %149, label %150

149:                                              ; preds = %147
  call void @abort() #17
  unreachable

150:                                              ; preds = %147, %138
  %151 = phi i64 [ %145, %147 ], [ 4611686018427387903, %138 ]
  %152 = shl i64 %151, 2
  %153 = call i8* @_Znwm(i64 %152) #16
  %154 = bitcast i8* %153 to i32*
  br label %155

155:                                              ; preds = %150, %142
  %156 = phi i64 [ %151, %150 ], [ 0, %142 ]
  %157 = phi i8* [ %153, %150 ], [ null, %142 ]
  %158 = phi i32* [ %154, %150 ], [ null, %142 ]
  %159 = getelementptr inbounds i32, i32* %158, i64 %133
  %160 = getelementptr inbounds i32, i32* %158, i64 %156
  %161 = ptrtoint i32* %160 to i64
  store i32 %49, i32* %159, align 4
  %162 = getelementptr inbounds i32, i32* %159, i64 1
  %163 = ptrtoint i32* %162 to i64
  %164 = ptrtoint i32* %158 to i64
  %165 = icmp sgt i64 %132, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %155
  %167 = inttoptr i64 %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %157, i8* align 4 %167, i64 %132, i1 false) #15
  br label %168

168:                                              ; preds = %166, %155
  store i64 %164, i64* %24, align 8
  store i64 %163, i64* %23, align 8
  store i64 %161, i64* %25, align 8
  %169 = icmp eq i64 %131, 0
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = inttoptr i64 %131 to i8*
  call void @_ZdlPv(i8* %171) #16
  br label %172

172:                                              ; preds = %170, %168, %126
  %173 = add i32 %39, %46
  br label %174

174:                                              ; preds = %64, %172, %38
  %175 = phi i32 [ %39, %38 ], [ %173, %172 ], [ %39, %64 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  %176 = getelementptr inbounds i32, i32* %40, i64 1
  %177 = icmp eq i32* %176, getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN3gpu12_GLOBAL__N_132EstimateAmountOfTotalDiskSpaceMBEvE9kPathKeys, i64 1, i64 0)
  br i1 %177, label %26, label %38

178:                                              ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  %179 = getelementptr inbounds %"struct.gpu::DevicePerfInfo", %"struct.gpu::DevicePerfInfo"* %0, i64 0, i32 1
  store i32 %175, i32* %179, align 4
  br label %180

180:                                              ; preds = %178, %2
  %181 = call i32 @_ZNSt3__16thread20hardware_concurrencyEv() #15
  %182 = getelementptr inbounds %"struct.gpu::DevicePerfInfo", %"struct.gpu::DevicePerfInfo"* %0, i64 0, i32 2
  store i32 %181, i32* %182, align 4
  ret void
}

; Function Attrs: nounwind
declare i32 @_ZNSt3__16thread20hardware_concurrencyEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu30RecordDevicePerfInfoHistogramsEv() local_unnamed_addr #0 {
  %1 = alloca %"class.absl::optional.174", align 4
  %2 = getelementptr inbounds %"class.absl::optional.174", %"class.absl::optional.174"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #15
  %3 = getelementptr inbounds %"class.absl::optional.174", %"class.absl::optional.174"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %4 = getelementptr inbounds %"class.absl::optional.174", %"class.absl::optional.174"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %5 = getelementptr inbounds %"class.absl::optional.174", %"class.absl::optional.174"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %6 = getelementptr inbounds %"class.absl::optional.174", %"class.absl::optional.174"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2, i8 -86, i64 24, i1 false)
  call void @_ZN3gpu17GetDevicePerfInfoEv(%"class.absl::optional.174"* nonnull sret %1) #15
  %7 = load i8, i8* %2, align 4, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %76, label %9

9:                                                ; preds = %0
  %10 = load atomic i64, i64* @_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %11 = inttoptr i64 %10 to %"class.base::HistogramBase"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #15
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  store atomic i64 %15, i64* @_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi %"class.base::HistogramBase"* [ %11, %9 ], [ %14, %13 ]
  %18 = load i8, i8* %2, align 4, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !34

20:                                               ; preds = %16
  call void @llvm.trap() #15
  unreachable

21:                                               ; preds = %16
  %22 = load i32, i32* %3, align 4
  %23 = lshr i32 %22, 10
  %24 = bitcast %"class.base::HistogramBase"* %17 to void (%"class.base::HistogramBase"*, i32)***
  %25 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %25, i64 6
  %27 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %26, align 8
  call void %27(%"class.base::HistogramBase"* %17, i32 %23) #15
  %28 = load atomic i64, i64* @_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %29 = inttoptr i64 %28 to %"class.base::HistogramBase"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #15
  %33 = ptrtoint %"class.base::HistogramBase"* %32 to i64
  store atomic i64 %33, i64* @_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %34

34:                                               ; preds = %21, %31
  %35 = phi %"class.base::HistogramBase"* [ %29, %21 ], [ %32, %31 ]
  %36 = load i8, i8* %2, align 4, !range !11
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39, !prof !34

38:                                               ; preds = %34
  call void @llvm.trap() #15
  unreachable

39:                                               ; preds = %34
  %40 = load i32, i32* %4, align 4
  %41 = bitcast %"class.base::HistogramBase"* %35 to void (%"class.base::HistogramBase"*, i32)***
  %42 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %42, i64 6
  %44 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %43, align 8
  call void %44(%"class.base::HistogramBase"* %35, i32 %40) #15
  %45 = load atomic i64, i64* @_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %46 = inttoptr i64 %45 to %"class.base::HistogramBase"*
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %39
  %49 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i32 1, i32 13, i32 14, i32 1) #15
  %50 = ptrtoint %"class.base::HistogramBase"* %49 to i64
  store atomic i64 %50, i64* @_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %51

51:                                               ; preds = %39, %48
  %52 = phi %"class.base::HistogramBase"* [ %46, %39 ], [ %49, %48 ]
  %53 = load i8, i8* %2, align 4, !range !11
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %56, !prof !34

55:                                               ; preds = %51
  call void @llvm.trap() #15
  unreachable

56:                                               ; preds = %51
  %57 = load i32, i32* %5, align 4
  %58 = bitcast %"class.base::HistogramBase"* %52 to void (%"class.base::HistogramBase"*, i32)***
  %59 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %59, i64 6
  %61 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %60, align 8
  call void %61(%"class.base::HistogramBase"* %52, i32 %57) #15
  %62 = load atomic i64, i64* @_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %63 = inttoptr i64 %62 to %"class.base::HistogramBase"*
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %56
  %66 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i32 1) #15
  %67 = ptrtoint %"class.base::HistogramBase"* %66 to i64
  store atomic i64 %67, i64* @_ZZN3gpu30RecordDevicePerfInfoHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %68

68:                                               ; preds = %56, %65
  %69 = phi %"class.base::HistogramBase"* [ %63, %56 ], [ %66, %65 ]
  %70 = load i8, i8* %2, align 4, !range !11
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %73, !prof !34

72:                                               ; preds = %68
  call void @llvm.trap() #15
  unreachable

73:                                               ; preds = %68
  %74 = load i8, i8* %6, align 4, !range !11
  %75 = icmp ne i8 %74, 0
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %69, i1 zeroext %75) #15
  br label %76

76:                                               ; preds = %0, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #15
  ret void
}

declare void @_ZN3gpu17GetDevicePerfInfoEv(%"class.absl::optional.174"* sret) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27RecordDiscreteGpuHistogramsERKNS_7GPUInfoE(%"struct.gpu::GPUInfo"* dereferenceable(696)) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZNK3gpu7GPUInfo8GpuCountEv(%"struct.gpu::GPUInfo"* %0) #15
  %3 = icmp ult i32 %2, 2
  br i1 %3, label %22, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 4, i32 1
  %8 = load i32, i32* %7, align 4
  tail call fastcc void @_ZN3gpu12_GLOBAL__N_118RecordGpuHistogramEjj(i32 %6, i32 %8)
  %9 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %9, align 8
  %11 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %12 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %11, align 8
  %13 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %20, %14 ], [ %10, %4 ]
  %16 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  tail call fastcc void @_ZN3gpu12_GLOBAL__N_118RecordGpuHistogramEjj(i32 %17, i32 %19)
  %20 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %15, i64 1
  %21 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %20, %12
  br i1 %21, label %22, label %14

22:                                               ; preds = %14, %4, %1
  ret void
}

declare i32 @_ZNK3gpu7GPUInfo8GpuCountEv(%"struct.gpu::GPUInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3gpu12_GLOBAL__N_118RecordGpuHistogramEjj(i32, i32) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  switch i32 %0, label %38 [
    i32 4318, label %5
    i32 4098, label %20
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 19, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i64 19, i1 false) #15
  %9 = getelementptr inbounds i8, i8* %6, i64 19
  store i8 0, i8* %9, align 1
  %10 = call %"class.base::HistogramBase"* @_ZN4base15SparseHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 1) #15
  %11 = bitcast %"class.base::HistogramBase"* %10 to void (%"class.base::HistogramBase"*, i32)***
  %12 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, i64 6
  %14 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, align 8
  call void %14(%"class.base::HistogramBase"* %10, i32 %1) #15
  %15 = load i8, i8* %8, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %36

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #16
  br label %36

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 16, i8* %23, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i64 16, i1 false) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast i64* %24 to i8*
  store i8 0, i8* %25, align 8
  %26 = call %"class.base::HistogramBase"* @_ZN4base15SparseHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 1) #15
  %27 = bitcast %"class.base::HistogramBase"* %26 to void (%"class.base::HistogramBase"*, i32)***
  %28 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %28, i64 6
  %30 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %29, align 8
  call void %30(%"class.base::HistogramBase"* %26, i32 %1) #15
  %31 = load i8, i8* %23, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %33, %20, %17, %5
  %37 = phi i8* [ %6, %5 ], [ %6, %17 ], [ %21, %20 ], [ %21, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #15
  br label %38

38:                                               ; preds = %36, %2
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN8features13IsUsingVulkanEv() local_unnamed_addr #2

declare %"class.base::FeatureList"* @_ZN4base11FeatureList11GetInstanceEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11FeatureList34IsFeatureOverriddenFromCommandLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_13OverrideStateE(%"class.base::FeatureList"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"*, i32) local_unnamed_addr #2

declare void @_ZN4base11CommandLine12AppendSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(120) %"struct.gpu::GPUInfo::GPUDevice"* @_ZN3gpu7GPUInfo9GPUDeviceaSERKS1_(%"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gpu7GPUInfo9GPUDeviceENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.20"*, %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %2 to i64
  %5 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 120
  %8 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 120
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.gpu::GPUInfo::GPUDevice"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 120
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %1, i64 %22
  %25 = select i1 %23, %"struct.gpu::GPUInfo::GPUDevice"* %24, %"struct.gpu::GPUInfo::GPUDevice"* %2
  %26 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(120) %"struct.gpu::GPUInfo::GPUDevice"* @_ZN3gpu7GPUInfo9GPUDeviceaSERKS1_(%"struct.gpu::GPUInfo::GPUDevice"* %28, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120) %29) #15
  %31 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %29, i64 1
  %32 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %28, i64 1
  %33 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.gpu::GPUInfo::GPUDevice"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN3gpu7GPUInfo9GPUDeviceC1ERKS1_(%"struct.gpu::GPUInfo::GPUDevice"* %42, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120) %43) #15
  %44 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %43, i64 1
  %45 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %42, i64 1
  %46 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %18, align 8
  %53 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %55, i64 -1
  tail call void @_ZN3gpu7GPUInfo9GPUDeviceD1Ev(%"struct.gpu::GPUInfo::GPUDevice"* %56) #15
  %57 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"struct.gpu::GPUInfo::GPUDevice"* %35, %"struct.gpu::GPUInfo::GPUDevice"** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %64 = load %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"** %63, align 8
  %65 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %67, i64 -1
  tail call void @_ZN3gpu7GPUInfo9GPUDeviceD1Ev(%"struct.gpu::GPUInfo::GPUDevice"* %68) #15
  %69 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector.20"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"struct.gpu::GPUInfo::GPUDevice"* %16, %"struct.gpu::GPUInfo::GPUDevice"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #16
  %75 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #15
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 153722867280912930
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #17
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 120
  %83 = icmp ult i64 %82, 76861433640456465
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 153722867280912930, %81 ]
  %90 = mul i64 %89, 120
  %91 = tail call i8* @_Znwm(i64 %90) #16
  %92 = bitcast i8* %91 to %"struct.gpu::GPUInfo::GPUDevice"*
  %93 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector.20"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %92, i64 %89
  store %"struct.gpu::GPUInfo::GPUDevice"* %96, %"struct.gpu::GPUInfo::GPUDevice"** %8, align 8
  %97 = bitcast %"struct.gpu::GPUInfo::GPUDevice"** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %"struct.gpu::GPUInfo::GPUDevice"* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN3gpu7GPUInfo9GPUDeviceC1ERKS1_(%"struct.gpu::GPUInfo::GPUDevice"* %101, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120) %102) #15
  %103 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %102, i64 1
  %104 = getelementptr inbounds %"struct.gpu::GPUInfo::GPUDevice", %"struct.gpu::GPUInfo::GPUDevice"* %101, i64 1
  %105 = icmp eq %"struct.gpu::GPUInfo::GPUDevice"* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %"struct.gpu::GPUInfo::GPUDevice"* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare void @_ZN3gpu7GPUInfo9GPUDeviceC1ERKS1_(%"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu7GPUInfo9GPUDeviceD1Ev(%"struct.gpu::GPUInfo::GPUDevice"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gpu38VideoDecodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.27"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %2 to i64
  %5 = ptrtoint %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.27"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.gpu::VideoDecodeAcceleratorSupportedProfile", %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %1, i64 %22
  %25 = select i1 %23, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %24, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %2
  %26 = ptrtoint %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 24
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #15
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = udiv exact i64 %36, 24
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #15
  %42 = inttoptr i64 %35 to %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*
  %43 = getelementptr inbounds %"struct.gpu::VideoDecodeAcceleratorSupportedProfile", %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %42, i64 %39
  %44 = ptrtoint %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %87

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.gpu::VideoDecodeAcceleratorSupportedProfile", %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %16, i64 %28
  store %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %48, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %18, align 8
  br label %87

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #16
  %55 = bitcast %"class.std::__1::vector.27"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #15
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 768614336404564650
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.27"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #17
  unreachable

61:                                               ; preds = %56
  %62 = sdiv exact i64 %57, 24
  %63 = icmp ult i64 %62, 384307168202282325
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %7
  %67 = select i1 %66, i64 %7, i64 %65
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i64 [ %67, %64 ], [ 768614336404564650, %61 ]
  %70 = mul i64 %69, 24
  %71 = tail call i8* @_Znwm(i64 %70) #16
  %72 = bitcast i8* %71 to %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*
  %73 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 1
  %74 = bitcast %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector.27"* %0 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %"struct.gpu::VideoDecodeAcceleratorSupportedProfile", %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %72, i64 %69
  store %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %76, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %8, align 8
  %77 = bitcast %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"** %73 to i64*
  %78 = ptrtoint i8* %71 to i64
  %79 = icmp sgt i64 %6, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = udiv exact i64 %6, 24
  %82 = bitcast %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %82, i64 %6, i1 false) #15
  %83 = getelementptr inbounds %"struct.gpu::VideoDecodeAcceleratorSupportedProfile", %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %72, i64 %81
  %84 = ptrtoint %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* %83 to i64
  br label %85

85:                                               ; preds = %68, %80
  %86 = phi i64 [ %84, %80 ], [ %78, %68 ]
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %45, %47, %85
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gpu38VideoEncodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.34"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %2 to i64
  %5 = ptrtoint %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 28
  %8 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.34"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 28
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 28
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.gpu::VideoEncodeAcceleratorSupportedProfile", %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %1, i64 %22
  %25 = select i1 %23, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %24, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %2
  %26 = ptrtoint %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 28
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #15
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = udiv exact i64 %36, 28
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #15
  %42 = inttoptr i64 %35 to %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*
  %43 = getelementptr inbounds %"struct.gpu::VideoEncodeAcceleratorSupportedProfile", %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %42, i64 %39
  %44 = ptrtoint %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %87

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.gpu::VideoEncodeAcceleratorSupportedProfile", %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %16, i64 %28
  store %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %48, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %18, align 8
  br label %87

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #16
  %55 = bitcast %"class.std::__1::vector.34"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #15
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 658812288346769700
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.34"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #17
  unreachable

61:                                               ; preds = %56
  %62 = sdiv exact i64 %57, 28
  %63 = icmp ult i64 %62, 329406144173384850
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %7
  %67 = select i1 %66, i64 %7, i64 %65
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i64 [ %67, %64 ], [ 658812288346769700, %61 ]
  %70 = mul i64 %69, 28
  %71 = tail call i8* @_Znwm(i64 %70) #16
  %72 = bitcast i8* %71 to %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*
  %73 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %74 = bitcast %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector.34"* %0 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %"struct.gpu::VideoEncodeAcceleratorSupportedProfile", %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %72, i64 %69
  store %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %76, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %8, align 8
  %77 = bitcast %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"** %73 to i64*
  %78 = ptrtoint i8* %71 to i64
  %79 = icmp sgt i64 %6, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = udiv exact i64 %6, 28
  %82 = bitcast %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %82, i64 %6, i1 false) #15
  %83 = getelementptr inbounds %"struct.gpu::VideoEncodeAcceleratorSupportedProfile", %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %72, i64 %81
  %84 = ptrtoint %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* %83 to i64
  br label %85

85:                                               ; preds = %68, %80
  %86 = phi i64 [ %84, %80 ], [ %78, %68 ]
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %45, %47, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gpu38ImageDecodeAcceleratorSupportedProfileENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.41"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %2 to i64
  %5 = ptrtoint %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.41"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %1, i64 %22
  %25 = select i1 %23, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %24, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %2
  %26 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(48) %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* @_ZN3gpu38ImageDecodeAcceleratorSupportedProfileaSERKS0_(%"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %28, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* dereferenceable(48) %29) #15
  %31 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %29, i64 1
  %32 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %28, i64 1
  %33 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN3gpu38ImageDecodeAcceleratorSupportedProfileC1ERKS0_(%"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %42, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* dereferenceable(48) %43) #15
  %44 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %43, i64 1
  %45 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %42, i64 1
  %46 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %18, align 8
  %53 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %55, i64 -1
  tail call void @_ZN3gpu38ImageDecodeAcceleratorSupportedProfileD1Ev(%"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %56) #15
  %57 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %35, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %64 = load %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %63, align 8
  %65 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %67, i64 -1
  tail call void @_ZN3gpu38ImageDecodeAcceleratorSupportedProfileD1Ev(%"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %68) #15
  %69 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector.41"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %16, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #16
  %75 = bitcast %"class.std::__1::vector.41"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #15
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 384307168202282325
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector.41"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #17
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 48
  %83 = icmp ult i64 %82, 192153584101141162
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 384307168202282325, %81 ]
  %90 = mul i64 %89, 48
  %91 = tail call i8* @_Znwm(i64 %90) #16
  %92 = bitcast i8* %91 to %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*
  %93 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector.41"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %92, i64 %89
  store %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %96, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %8, align 8
  %97 = bitcast %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN3gpu38ImageDecodeAcceleratorSupportedProfileC1ERKS0_(%"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %101, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* dereferenceable(48) %102) #15
  %103 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %102, i64 1
  %104 = getelementptr inbounds %"struct.gpu::ImageDecodeAcceleratorSupportedProfile", %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %101, i64 1
  %105 = icmp eq %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare dereferenceable(48) %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* @_ZN3gpu38ImageDecodeAcceleratorSupportedProfileaSERKS0_(%"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN3gpu38ImageDecodeAcceleratorSupportedProfileC1ERKS0_(%"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* dereferenceable(48)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu38ImageDecodeAcceleratorSupportedProfileD1Ev(%"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*) unnamed_addr #3

declare dereferenceable(104) %"class.gpu::VulkanInfo"* @_ZN3gpu10VulkanInfoaSERKS0_(%"class.gpu::VulkanInfo"*, %"class.gpu::VulkanInfo"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN3gpu10VulkanInfoC1ERKS0_(%"class.gpu::VulkanInfo"*, %"class.gpu::VulkanInfo"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu10VulkanInfoD1Ev(%"class.gpu::VulkanInfo"*) unnamed_addr #3

declare i64 @_ZN4base7SysInfo22AmountOfPhysicalMemoryEv() local_unnamed_addr #2

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #2

declare zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32, %"class.base::FilePath"*) local_unnamed_addr #2

declare i64 @_ZN4base7SysInfo22AmountOfTotalDiskSpaceERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare i64 @_ZN4base7SysInfo21AmountOfFreeDiskSpaceERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base15SparseHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.113"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.6"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #15
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #15
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #16
  %55 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #15
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #17
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #17
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #16
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #15
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE13append_uniqueIRS6_EENS3_4pairINS3_11__wrap_iterIPS6_EEbEESK_SK_OT_(%"class.base::internal::flat_tree"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %6 = ptrtoint %"class.base::BasicStringPiece"* %2 to i64
  %7 = sub i64 %6, %5
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %42, label %9

9:                                                ; preds = %4
  %10 = ashr exact i64 %7, 4
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %15

15:                                               ; preds = %36, %9
  %16 = phi %"class.base::BasicStringPiece"* [ %1, %9 ], [ %38, %36 ]
  %17 = phi i64 [ %10, %9 ], [ %37, %36 ]
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 %18
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 %18, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ugt i64 %23, %14
  %25 = select i1 %24, i64 %14, i64 %23
  %26 = tail call i32 @memcmp(i8* %21, i8* %12, i64 %25) #15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %15
  %29 = icmp ult i64 %23, %14
  br i1 %29, label %32, label %36

30:                                               ; preds = %15
  %31 = icmp slt i32 %26, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %30, %28
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 1
  %34 = xor i64 %18, -1
  %35 = add i64 %17, %34
  br label %36

36:                                               ; preds = %32, %30, %28
  %37 = phi i64 [ %35, %32 ], [ %18, %30 ], [ %18, %28 ]
  %38 = phi %"class.base::BasicStringPiece"* [ %33, %32 ], [ %16, %30 ], [ %16, %28 ]
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %15

40:                                               ; preds = %36
  %41 = ptrtoint %"class.base::BasicStringPiece"* %38 to i64
  br label %42

42:                                               ; preds = %40, %4
  %43 = phi i64 [ %41, %40 ], [ %5, %4 ]
  %44 = phi %"class.base::BasicStringPiece"* [ %38, %40 ], [ %1, %4 ]
  %45 = icmp eq %"class.base::BasicStringPiece"* %44, %2
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %44, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %44, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp ugt i64 %50, %54
  %56 = select i1 %55, i64 %54, i64 %50
  %57 = tail call i32 @memcmp(i8* %48, i8* %52, i64 %56) #15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %46
  %60 = icmp ult i64 %50, %54
  br i1 %60, label %63, label %140

61:                                               ; preds = %46
  %62 = icmp slt i32 %57, 0
  br i1 %62, label %63, label %140

63:                                               ; preds = %59, %42, %61
  %64 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %43, %66
  %68 = ashr exact i64 %67, 4
  %69 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %70 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %69, align 8
  %71 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %72 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %71, align 8
  %73 = icmp ult %"class.base::BasicStringPiece"* %70, %72
  %74 = ptrtoint %"class.base::BasicStringPiece"* %72 to i64
  br i1 %73, label %75, label %81

75:                                               ; preds = %63
  %76 = bitcast %"class.base::BasicStringPiece"* %70 to i8*
  %77 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false) #15
  %78 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %70, i64 1
  %79 = ptrtoint %"class.base::BasicStringPiece"* %78 to i64
  %80 = bitcast %"class.base::BasicStringPiece"** %69 to i64*
  store i64 %79, i64* %80, align 8
  br label %136

81:                                               ; preds = %63
  %82 = ptrtoint %"class.base::BasicStringPiece"* %70 to i64
  %83 = bitcast %"class.base::BasicStringPiece"** %69 to i64*
  %84 = sub i64 %82, %66
  %85 = ashr exact i64 %84, 4
  %86 = add nsw i64 %85, 1
  %87 = icmp ugt i64 %86, 1152921504606846975
  br i1 %87, label %88, label %90

88:                                               ; preds = %81
  %89 = bitcast %"class.base::internal::flat_tree"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #17
  unreachable

90:                                               ; preds = %81
  %91 = bitcast %"class.base::BasicStringPiece"** %71 to i64*
  %92 = sub i64 %74, %66
  %93 = ashr exact i64 %92, 4
  %94 = icmp ult i64 %93, 576460752303423487
  br i1 %94, label %95, label %103

95:                                               ; preds = %90
  %96 = ashr exact i64 %92, 3
  %97 = icmp ult i64 %96, %86
  %98 = select i1 %97, i64 %86, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %95
  %101 = icmp ugt i64 %98, 1152921504606846975
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  tail call void @abort() #17
  unreachable

103:                                              ; preds = %100, %90
  %104 = phi i64 [ %98, %100 ], [ 1152921504606846975, %90 ]
  %105 = shl i64 %104, 4
  %106 = tail call i8* @_Znwm(i64 %105) #16
  %107 = bitcast i8* %106 to %"class.base::BasicStringPiece"*
  br label %108

108:                                              ; preds = %103, %95
  %109 = phi i64 [ %104, %103 ], [ 0, %95 ]
  %110 = phi %"class.base::BasicStringPiece"* [ %107, %103 ], [ null, %95 ]
  %111 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %110, i64 %85
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %110, i64 %109
  %113 = ptrtoint %"class.base::BasicStringPiece"* %112 to i64
  %114 = bitcast %"class.base::BasicStringPiece"* %111 to i8*
  %115 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false) #15
  %116 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %111, i64 1
  %117 = ptrtoint %"class.base::BasicStringPiece"* %116 to i64
  %118 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %64, align 8
  %119 = load i64, i64* %83, align 8
  %120 = ptrtoint %"class.base::BasicStringPiece"* %118 to i64
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 4
  %123 = sub nsw i64 0, %122
  %124 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %111, i64 %123
  %125 = ptrtoint %"class.base::BasicStringPiece"* %124 to i64
  %126 = icmp sgt i64 %121, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %108
  %128 = bitcast %"class.base::BasicStringPiece"* %124 to i8*
  %129 = bitcast %"class.base::BasicStringPiece"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 %121, i1 false) #15
  %130 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %64, align 8
  br label %131

131:                                              ; preds = %127, %108
  %132 = phi %"class.base::BasicStringPiece"* [ %118, %108 ], [ %130, %127 ]
  store i64 %125, i64* %65, align 8
  store i64 %117, i64* %83, align 8
  store i64 %113, i64* %91, align 8
  %133 = icmp eq %"class.base::BasicStringPiece"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = bitcast %"class.base::BasicStringPiece"* %132 to i8*
  tail call void @_ZdlPv(i8* %135) #16
  br label %136

136:                                              ; preds = %75, %131, %134
  %137 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %64, align 8
  %138 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %137, i64 %68
  %139 = ptrtoint %"class.base::BasicStringPiece"* %138 to i64
  br label %140

140:                                              ; preds = %59, %61, %136
  %141 = phi i64 [ %139, %136 ], [ %43, %61 ], [ %43, %59 ]
  %142 = phi i8 [ 1, %136 ], [ 0, %61 ], [ 0, %59 ]
  %143 = inttoptr i64 %141 to %"class.base::BasicStringPiece"*
  %144 = insertvalue { %"class.base::BasicStringPiece"*, i8 } undef, %"class.base::BasicStringPiece"* %143, 0
  %145 = insertvalue { %"class.base::BasicStringPiece"*, i8 } %144, i8 %142, 1
  ret { %"class.base::BasicStringPiece"*, i8 } %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPS6_EESH_(%"class.base::internal::flat_tree"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare", align 1
  %5 = ptrtoint %"class.base::BasicStringPiece"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare", %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = icmp sgt i64 %8, 2048
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 576460752303423487
  %13 = select i1 %12, i64 %9, i64 576460752303423487
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = shl i64 %15, 4
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #15
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* %2, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.base::BasicStringPiece"* null, i64 0) #15
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"class.base::BasicStringPiece"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* %2, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.base::BasicStringPiece"* nonnull %24, i64 %15) #15
  call void @_ZdlPv(i8* nonnull %17) #16
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = call %"class.base::BasicStringPiece"* @_ZNSt3__16uniqueINS_11__wrap_iterIPN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEENS2_8internal9NotFnImplINS9_9flat_treeIS6_NS2_8identityENS_4lessIvEENS_6vectorIS6_NS_9allocatorIS6_EEEEE13value_compareEEEEET_SM_SM_T0_(%"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* %2)
  %27 = icmp eq %"class.base::BasicStringPiece"* %26, %2
  br i1 %27, label %40, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = bitcast %"class.base::BasicStringPiece"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %5
  %33 = ashr exact i64 %32, 4
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.base::BasicStringPiece"* %26 to i8*
  %37 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 %32, i1 false) #15
  br label %38

38:                                               ; preds = %35, %28
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %26, i64 %33
  store %"class.base::BasicStringPiece"* %39, %"class.base::BasicStringPiece"** %29, align 8
  br label %40

40:                                               ; preds = %25, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE21emplace_hint_key_argsIS6_JRKS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEENSJ_IPSG_EERKT_DpOT0_(%"class.base::internal::flat_tree"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %5, align 8
  %7 = icmp eq %"class.base::BasicStringPiece"* %6, %1
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %12, %16
  %18 = select i1 %17, i64 %16, i64 %12
  %19 = tail call i32 @memcmp(i8* %10, i8* %14, i64 %18) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %8
  %22 = icmp ult i64 %12, %16
  br i1 %22, label %25, label %58

23:                                               ; preds = %8
  %24 = icmp slt i32 %19, 0
  br i1 %24, label %25, label %58

25:                                               ; preds = %21, %4, %23
  %26 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %28 = icmp eq %"class.base::BasicStringPiece"* %27, %1
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %33, %37
  %39 = select i1 %38, i64 %37, i64 %33
  %40 = tail call i32 @memcmp(i8* %31, i8* %35, i64 %39) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %29
  %43 = icmp ult i64 %33, %37
  br i1 %43, label %46, label %49

44:                                               ; preds = %29
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %42, %25, %44
  %47 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %48 = tail call %"class.base::BasicStringPiece"* @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.142"* %47, %"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* dereferenceable(16) %3) #15
  br label %62

49:                                               ; preds = %42, %44
  %50 = tail call i32 @memcmp(i8* %35, i8* %31, i64 %39) #15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = icmp eq i64 %37, %33
  %54 = xor i1 %38, true
  %55 = or i1 %53, %54
  br i1 %55, label %62, label %58

56:                                               ; preds = %49
  %57 = icmp slt i32 %50, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %52, %21, %56, %23
  %59 = tail call { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE16emplace_key_argsIS6_JRKS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree"* %0, %"class.base::BasicStringPiece"* dereferenceable(16) %2, %"class.base::BasicStringPiece"* dereferenceable(16) %3)
  %60 = extractvalue { %"class.base::BasicStringPiece"*, i8 } %59, 0
  %61 = extractvalue { %"class.base::BasicStringPiece"*, i8 } %59, 1
  br label %62

62:                                               ; preds = %56, %52, %58, %46
  %63 = phi %"class.base::BasicStringPiece"* [ %48, %46 ], [ %60, %58 ], [ %1, %52 ], [ %1, %56 ]
  %64 = phi i8 [ 1, %46 ], [ %61, %58 ], [ 0, %52 ], [ 0, %56 ]
  %65 = insertvalue { %"class.base::BasicStringPiece"*, i8 } undef, %"class.base::BasicStringPiece"* %63, 0
  %66 = insertvalue { %"class.base::BasicStringPiece"*, i8 } %65, i8 %64, 1
  ret { %"class.base::BasicStringPiece"*, i8 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE16emplace_key_argsIS6_JRKS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::BasicStringPiece"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.base::BasicStringPiece"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"class.base::BasicStringPiece"*
  br i1 %11, label %46, label %13

13:                                               ; preds = %3
  %14 = ashr exact i64 %10, 4
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %19

19:                                               ; preds = %40, %13
  %20 = phi %"class.base::BasicStringPiece"* [ %5, %13 ], [ %42, %40 ]
  %21 = phi i64 [ %14, %13 ], [ %41, %40 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 %22
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 %22, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %27, %18
  %29 = select i1 %28, i64 %18, i64 %27
  %30 = tail call i32 @memcmp(i8* %25, i8* %16, i64 %29) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %19
  %33 = icmp ult i64 %27, %18
  br i1 %33, label %36, label %40

34:                                               ; preds = %19
  %35 = icmp slt i32 %30, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %34, %32
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 1
  %38 = xor i64 %22, -1
  %39 = add i64 %21, %38
  br label %40

40:                                               ; preds = %36, %34, %32
  %41 = phi i64 [ %39, %36 ], [ %22, %34 ], [ %22, %32 ]
  %42 = phi %"class.base::BasicStringPiece"* [ %37, %36 ], [ %20, %34 ], [ %20, %32 ]
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %40
  %45 = ptrtoint %"class.base::BasicStringPiece"* %42 to i64
  br label %46

46:                                               ; preds = %44, %3
  %47 = phi i64 [ %45, %44 ], [ %9, %3 ]
  %48 = phi %"class.base::BasicStringPiece"* [ %42, %44 ], [ %5, %3 ]
  %49 = icmp eq %"class.base::BasicStringPiece"* %48, %12
  br i1 %49, label %67, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %48, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %48, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp ugt i64 %54, %58
  %60 = select i1 %59, i64 %58, i64 %54
  %61 = tail call i32 @memcmp(i8* %52, i8* %56, i64 %60) #15
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %50
  %64 = icmp ult i64 %54, %58
  br i1 %64, label %67, label %71

65:                                               ; preds = %50
  %66 = icmp slt i32 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %63, %46, %65
  %68 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %69 = tail call %"class.base::BasicStringPiece"* @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.142"* %68, %"class.base::BasicStringPiece"* %48, %"class.base::BasicStringPiece"* dereferenceable(16) %2) #15
  %70 = ptrtoint %"class.base::BasicStringPiece"* %69 to i64
  br label %71

71:                                               ; preds = %63, %65, %67
  %72 = phi i64 [ %70, %67 ], [ %47, %65 ], [ %47, %63 ]
  %73 = phi i8 [ 1, %67 ], [ 0, %65 ], [ 0, %63 ]
  %74 = inttoptr i64 %72 to %"class.base::BasicStringPiece"*
  %75 = insertvalue { %"class.base::BasicStringPiece"*, i8 } undef, %"class.base::BasicStringPiece"* %74, 0
  %76 = insertvalue { %"class.base::BasicStringPiece"*, i8 } %75, i8 %73, 1
  ret { %"class.base::BasicStringPiece"*, i8 } %76
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::BasicStringPiece"* @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.142"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.213", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %11 = icmp ult %"class.base::BasicStringPiece"* %8, %10
  %12 = ptrtoint %"class.base::BasicStringPiece"* %8 to i64
  %13 = ptrtoint %"class.base::BasicStringPiece"* %10 to i64
  br i1 %11, label %14, label %140

14:                                               ; preds = %3
  %15 = icmp eq %"class.base::BasicStringPiece"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  %18 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #15
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 1
  %20 = ptrtoint %"class.base::BasicStringPiece"* %19 to i64
  %21 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %291

22:                                               ; preds = %14
  %23 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  %24 = load i8, i8* %23, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %23, i64 2
  %28 = load i8, i8* %27, align 2
  %29 = getelementptr inbounds i8, i8* %23, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds i8, i8* %23, i64 4
  %32 = load i8, i8* %31, align 4
  %33 = getelementptr inbounds i8, i8* %23, i64 5
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %23, i64 6
  %36 = load i8, i8* %35, align 2
  %37 = getelementptr inbounds i8, i8* %23, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %40 = bitcast i64* %39 to i8*
  %41 = load i8, i8* %40, align 8
  %42 = getelementptr inbounds i8, i8* %23, i64 9
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %23, i64 10
  %45 = load i8, i8* %44, align 2
  %46 = getelementptr inbounds i8, i8* %23, i64 11
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds i8, i8* %23, i64 12
  %49 = load i8, i8* %48, align 4
  %50 = getelementptr inbounds i8, i8* %23, i64 13
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds i8, i8* %23, i64 14
  %53 = load i8, i8* %52, align 2
  %54 = getelementptr inbounds i8, i8* %23, i64 15
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 1
  %57 = ptrtoint %"class.base::BasicStringPiece"* %56 to i64
  %58 = sub i64 %12, %57
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 %59
  %61 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  %62 = icmp ult %"class.base::BasicStringPiece"* %60, %8
  br i1 %62, label %63, label %92

63:                                               ; preds = %22
  %64 = sub nsw i64 0, %59
  %65 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 %64, i32 0
  %66 = bitcast i8** %65 to i8*
  %67 = xor i64 %4, -1
  %68 = getelementptr i8, i8* %66, i64 %67
  %69 = ptrtoint i8* %68 to i64
  %70 = lshr i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %63, %74
  %75 = phi %"class.base::BasicStringPiece"* [ %81, %74 ], [ %8, %63 ]
  %76 = phi %"class.base::BasicStringPiece"* [ %80, %74 ], [ %60, %63 ]
  %77 = phi i64 [ %82, %74 ], [ %72, %63 ]
  %78 = bitcast %"class.base::BasicStringPiece"* %75 to i8*
  %79 = bitcast %"class.base::BasicStringPiece"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false) #15
  %80 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %76, i64 1
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %75, i64 1
  %82 = add i64 %77, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %74, !llvm.loop !35

84:                                               ; preds = %74, %63
  %85 = phi %"class.base::BasicStringPiece"* [ %8, %63 ], [ %81, %74 ]
  %86 = phi %"class.base::BasicStringPiece"* [ %60, %63 ], [ %80, %74 ]
  %87 = phi %"class.base::BasicStringPiece"* [ undef, %63 ], [ %81, %74 ]
  %88 = icmp ult i8* %68, inttoptr (i64 48 to i8*)
  br i1 %88, label %89, label %102

89:                                               ; preds = %102, %84
  %90 = phi %"class.base::BasicStringPiece"* [ %87, %84 ], [ %120, %102 ]
  %91 = ptrtoint %"class.base::BasicStringPiece"* %90 to i64
  br label %92

92:                                               ; preds = %89, %22
  %93 = phi i64 [ %91, %89 ], [ %12, %22 ]
  store i64 %93, i64* %61, align 8
  %94 = icmp eq i64 %58, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  br label %122

97:                                               ; preds = %92
  %98 = sub nsw i64 0, %59
  %99 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 %98
  %100 = bitcast %"class.base::BasicStringPiece"* %99 to i8*
  %101 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 %58, i1 false) #15
  br label %122

102:                                              ; preds = %84, %102
  %103 = phi %"class.base::BasicStringPiece"* [ %120, %102 ], [ %85, %84 ]
  %104 = phi %"class.base::BasicStringPiece"* [ %119, %102 ], [ %86, %84 ]
  %105 = bitcast %"class.base::BasicStringPiece"* %103 to i8*
  %106 = bitcast %"class.base::BasicStringPiece"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #15
  %107 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %104, i64 1
  %108 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 1
  %109 = bitcast %"class.base::BasicStringPiece"* %108 to i8*
  %110 = bitcast %"class.base::BasicStringPiece"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #15
  %111 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %104, i64 2
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 2
  %113 = bitcast %"class.base::BasicStringPiece"* %112 to i8*
  %114 = bitcast %"class.base::BasicStringPiece"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #15
  %115 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %104, i64 3
  %116 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 3
  %117 = bitcast %"class.base::BasicStringPiece"* %116 to i8*
  %118 = bitcast %"class.base::BasicStringPiece"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #15
  %119 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %104, i64 4
  %120 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 4
  %121 = icmp ult %"class.base::BasicStringPiece"* %119, %8
  br i1 %121, label %102, label %89

122:                                              ; preds = %95, %97
  %123 = phi i8* [ %96, %95 ], [ %101, %97 ]
  store i8 %24, i8* %123, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  store i8 %26, i8* %124, align 1
  %125 = getelementptr inbounds i8, i8* %123, i64 2
  store i8 %28, i8* %125, align 2
  %126 = getelementptr inbounds i8, i8* %123, i64 3
  store i8 %30, i8* %126, align 1
  %127 = getelementptr inbounds i8, i8* %123, i64 4
  store i8 %32, i8* %127, align 4
  %128 = getelementptr inbounds i8, i8* %123, i64 5
  store i8 %34, i8* %128, align 1
  %129 = getelementptr inbounds i8, i8* %123, i64 6
  store i8 %36, i8* %129, align 2
  %130 = getelementptr inbounds i8, i8* %123, i64 7
  store i8 %38, i8* %130, align 1
  %131 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %132 = bitcast i64* %131 to i8*
  store i8 %41, i8* %132, align 8
  %133 = getelementptr inbounds i8, i8* %123, i64 9
  store i8 %43, i8* %133, align 1
  %134 = getelementptr inbounds i8, i8* %123, i64 10
  store i8 %45, i8* %134, align 2
  %135 = getelementptr inbounds i8, i8* %123, i64 11
  store i8 %47, i8* %135, align 1
  %136 = getelementptr inbounds i8, i8* %123, i64 12
  store i8 %49, i8* %136, align 4
  %137 = getelementptr inbounds i8, i8* %123, i64 13
  store i8 %51, i8* %137, align 1
  %138 = getelementptr inbounds i8, i8* %123, i64 14
  store i8 %53, i8* %138, align 2
  %139 = getelementptr inbounds i8, i8* %123, i64 15
  store i8 %55, i8* %139, align 1
  br label %291

140:                                              ; preds = %3
  %141 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2
  %142 = bitcast %"struct.std::__1::__split_buffer.213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %142) #15
  %143 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 0
  %144 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 1
  %145 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 2
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 3, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 3, i32 1, i32 0
  %148 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  %149 = bitcast %"class.std::__1::vector.142"* %0 to i64*
  %150 = bitcast %"struct.std::__1::__split_buffer.213"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 40, i1 false)
  %151 = load i64, i64* %149, align 8
  %152 = sub i64 %12, %151
  %153 = ashr exact i64 %152, 4
  %154 = add nsw i64 %153, 1
  %155 = icmp ugt i64 %154, 1152921504606846975
  br i1 %155, label %156, label %158

156:                                              ; preds = %140
  %157 = bitcast %"class.std::__1::vector.142"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %157) #17
  unreachable

158:                                              ; preds = %140
  %159 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %160 = sub i64 %13, %151
  %161 = ashr exact i64 %160, 4
  %162 = icmp ult i64 %161, 576460752303423487
  br i1 %162, label %167, label %163

163:                                              ; preds = %158
  %164 = sub i64 %4, %151
  %165 = ashr exact i64 %164, 4
  store %"class.base::BasicStringPiece"* null, %"class.base::BasicStringPiece"** %146, align 8
  %166 = bitcast %"class.std::__1::allocator.147"** %147 to %"class.std::__1::__compressed_pair.144"**
  store %"class.std::__1::__compressed_pair.144"* %141, %"class.std::__1::__compressed_pair.144"** %166, align 8
  br label %178

167:                                              ; preds = %158
  %168 = ashr exact i64 %160, 3
  %169 = icmp ult i64 %168, %154
  %170 = select i1 %169, i64 %154, i64 %168
  %171 = sub i64 %4, %151
  %172 = ashr exact i64 %171, 4
  store %"class.base::BasicStringPiece"* null, %"class.base::BasicStringPiece"** %146, align 8
  %173 = bitcast %"class.std::__1::allocator.147"** %147 to %"class.std::__1::__compressed_pair.144"**
  store %"class.std::__1::__compressed_pair.144"* %141, %"class.std::__1::__compressed_pair.144"** %173, align 8
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %167
  %176 = icmp ugt i64 %170, 1152921504606846975
  br i1 %176, label %177, label %178

177:                                              ; preds = %175
  tail call void @abort() #17
  unreachable

178:                                              ; preds = %163, %175
  %179 = phi i64 [ 1152921504606846975, %163 ], [ %170, %175 ]
  %180 = phi i64 [ %165, %163 ], [ %172, %175 ]
  %181 = shl i64 %179, 4
  %182 = tail call i8* @_Znwm(i64 %181) #16
  %183 = bitcast i8* %182 to %"class.base::BasicStringPiece"*
  br label %184

184:                                              ; preds = %167, %178
  %185 = phi i64 [ %180, %178 ], [ %172, %167 ]
  %186 = phi i64 [ %179, %178 ], [ 0, %167 ]
  %187 = phi %"class.base::BasicStringPiece"* [ %183, %178 ], [ null, %167 ]
  store %"class.base::BasicStringPiece"* %187, %"class.base::BasicStringPiece"** %143, align 8
  %188 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %187, i64 %185
  store %"class.base::BasicStringPiece"* %188, %"class.base::BasicStringPiece"** %145, align 8
  store %"class.base::BasicStringPiece"* %188, %"class.base::BasicStringPiece"** %144, align 8
  %189 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %187, i64 %186
  store %"class.base::BasicStringPiece"* %189, %"class.base::BasicStringPiece"** %146, align 8
  call void @_ZNSt3__114__split_bufferIN4base16BasicStringPieceIcNS_11char_traitsIcEEEERNS_9allocatorIS5_EEE12emplace_backIJRKS5_EEEvDpOT_(%"struct.std::__1::__split_buffer.213"* nonnull %5, %"class.base::BasicStringPiece"* dereferenceable(16) %2)
  %190 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %144, align 8
  %191 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %192 = ptrtoint %"class.base::BasicStringPiece"* %191 to i64
  %193 = sub i64 %4, %192
  %194 = ashr exact i64 %193, 4
  %195 = sub nsw i64 0, %194
  %196 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %190, i64 %195
  store %"class.base::BasicStringPiece"* %196, %"class.base::BasicStringPiece"** %144, align 8
  %197 = icmp sgt i64 %193, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %184
  %199 = bitcast %"class.base::BasicStringPiece"* %196 to i8*
  %200 = bitcast %"class.base::BasicStringPiece"* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 %193, i1 false) #15
  br label %201

201:                                              ; preds = %198, %184
  %202 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %203 = icmp eq %"class.base::BasicStringPiece"* %202, %1
  br i1 %203, label %204, label %208

204:                                              ; preds = %201
  %205 = ptrtoint %"class.base::BasicStringPiece"* %202 to i64
  %206 = bitcast %"class.base::BasicStringPiece"** %145 to i64*
  %207 = load i64, i64* %206, align 8
  br label %265

208:                                              ; preds = %201
  %209 = bitcast %"class.base::BasicStringPiece"** %145 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %202, i64 -1, i32 0
  %212 = ptrtoint i8** %211 to i64
  %213 = sub i64 %212, %4
  %214 = lshr i64 %213, 4
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 3
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %231, label %218

218:                                              ; preds = %208, %218
  %219 = phi i8* [ %226, %218 ], [ %210, %208 ]
  %220 = phi %"class.base::BasicStringPiece"* [ %223, %218 ], [ %1, %208 ]
  %221 = phi i64 [ %227, %218 ], [ %216, %208 ]
  %222 = bitcast %"class.base::BasicStringPiece"* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %222, i64 16, i1 false) #15
  %223 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %220, i64 1
  %224 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %225 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %224, i64 1
  store %"class.base::BasicStringPiece"* %225, %"class.base::BasicStringPiece"** %145, align 8
  %226 = bitcast %"class.base::BasicStringPiece"* %225 to i8*
  %227 = add i64 %221, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %218, !llvm.loop !36

229:                                              ; preds = %218
  %230 = bitcast %"class.base::BasicStringPiece"* %225 to i8*
  br label %231

231:                                              ; preds = %208, %229
  %232 = phi %"class.base::BasicStringPiece"* [ undef, %208 ], [ %225, %229 ]
  %233 = phi i8* [ %210, %208 ], [ %230, %229 ]
  %234 = phi %"class.base::BasicStringPiece"* [ %1, %208 ], [ %223, %229 ]
  %235 = icmp ult i64 %213, 48
  br i1 %235, label %260, label %236

236:                                              ; preds = %231, %236
  %237 = phi i8* [ %259, %236 ], [ %233, %231 ]
  %238 = phi %"class.base::BasicStringPiece"* [ %255, %236 ], [ %234, %231 ]
  %239 = bitcast %"class.base::BasicStringPiece"* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %239, i64 16, i1 false) #15
  %240 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 1
  %241 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %242 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %241, i64 1
  store %"class.base::BasicStringPiece"* %242, %"class.base::BasicStringPiece"** %145, align 8
  %243 = bitcast %"class.base::BasicStringPiece"* %242 to i8*
  %244 = bitcast %"class.base::BasicStringPiece"* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %244, i64 16, i1 false) #15
  %245 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 2
  %246 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %247 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %246, i64 1
  store %"class.base::BasicStringPiece"* %247, %"class.base::BasicStringPiece"** %145, align 8
  %248 = bitcast %"class.base::BasicStringPiece"* %247 to i8*
  %249 = bitcast %"class.base::BasicStringPiece"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 8 %249, i64 16, i1 false) #15
  %250 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 3
  %251 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %252 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %251, i64 1
  store %"class.base::BasicStringPiece"* %252, %"class.base::BasicStringPiece"** %145, align 8
  %253 = bitcast %"class.base::BasicStringPiece"* %252 to i8*
  %254 = bitcast %"class.base::BasicStringPiece"* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 16, i1 false) #15
  %255 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 4
  %256 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %257 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %256, i64 1
  store %"class.base::BasicStringPiece"* %257, %"class.base::BasicStringPiece"** %145, align 8
  %258 = icmp eq %"class.base::BasicStringPiece"* %255, %202
  %259 = bitcast %"class.base::BasicStringPiece"* %257 to i8*
  br i1 %258, label %260, label %236

260:                                              ; preds = %236, %231
  %261 = phi %"class.base::BasicStringPiece"* [ %232, %231 ], [ %257, %236 ]
  %262 = ptrtoint %"class.base::BasicStringPiece"* %261 to i64
  %263 = load i64, i64* %148, align 8
  %264 = bitcast %"class.base::BasicStringPiece"** %145 to i64*
  br label %265

265:                                              ; preds = %204, %260
  %266 = phi i64* [ %206, %204 ], [ %264, %260 ]
  %267 = phi i64 [ %207, %204 ], [ %262, %260 ]
  %268 = phi i64 [ %205, %204 ], [ %263, %260 ]
  %269 = load i64, i64* %149, align 8
  %270 = bitcast %"class.base::BasicStringPiece"** %144 to i64*
  %271 = load i64, i64* %270, align 8
  store i64 %271, i64* %149, align 8
  store i64 %269, i64* %270, align 8
  store i64 %267, i64* %148, align 8
  store i64 %268, i64* %266, align 8
  %272 = load i64, i64* %159, align 8
  %273 = bitcast %"class.base::BasicStringPiece"** %146 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %159, align 8
  store i64 %272, i64* %273, align 8
  %275 = bitcast %"struct.std::__1::__split_buffer.213"* %5 to i64*
  store i64 %269, i64* %275, align 8
  %276 = inttoptr i64 %269 to %"class.base::BasicStringPiece"*
  %277 = inttoptr i64 %268 to %"class.base::BasicStringPiece"*
  %278 = icmp eq %"class.base::BasicStringPiece"* %277, %276
  br i1 %278, label %286, label %279

279:                                              ; preds = %265
  %280 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %277, i64 -1, i32 0
  %281 = ptrtoint i8** %280 to i64
  %282 = sub i64 %281, %269
  %283 = lshr i64 %282, 4
  %284 = xor i64 %283, -1
  %285 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %277, i64 %284
  store %"class.base::BasicStringPiece"* %285, %"class.base::BasicStringPiece"** %145, align 8
  br label %286

286:                                              ; preds = %279, %265
  %287 = icmp eq i64 %269, 0
  br i1 %287, label %290, label %288

288:                                              ; preds = %286
  %289 = inttoptr i64 %269 to i8*
  call void @_ZdlPv(i8* %289) #16
  br label %290

290:                                              ; preds = %286, %288
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %142) #15
  br label %291

291:                                              ; preds = %16, %122, %290
  %292 = phi %"class.base::BasicStringPiece"* [ %1, %16 ], [ %1, %122 ], [ %190, %290 ]
  ret %"class.base::BasicStringPiece"* %292
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4base16BasicStringPieceIcNS_11char_traitsIcEEEERNS_9allocatorIS5_EEE12emplace_backIJRKS5_EEEvDpOT_(%"struct.std::__1::__split_buffer.213"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %0, i64 0, i32 2
  %4 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %5, align 8
  %7 = icmp eq %"class.base::BasicStringPiece"* %4, %6
  %8 = ptrtoint %"class.base::BasicStringPiece"* %6 to i64
  %9 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  br i1 %7, label %10, label %123

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %0, i64 0, i32 1
  %12 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %0, i64 0, i32 0
  %14 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %13, align 8
  %15 = icmp ugt %"class.base::BasicStringPiece"* %12, %14
  %16 = ptrtoint %"class.base::BasicStringPiece"* %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.base::BasicStringPiece"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 4
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 %22
  %24 = ptrtoint %"class.base::BasicStringPiece"* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 4
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  %30 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.base::BasicStringPiece"* [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 %26
  store %"class.base::BasicStringPiece"* %34, %"class.base::BasicStringPiece"** %3, align 8
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 %22
  store %"class.base::BasicStringPiece"* %35, %"class.base::BasicStringPiece"** %11, align 8
  %36 = bitcast %"class.base::BasicStringPiece"* %34 to i8*
  br label %123

37:                                               ; preds = %10
  %38 = bitcast %"class.base::BasicStringPiece"** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.213"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 3
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 1152921504606846975
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 4
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to %"class.base::BasicStringPiece"*
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %50, i64 %47
  %53 = ptrtoint %"class.base::BasicStringPiece"* %52 to i64
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %50, i64 %43
  %55 = ptrtoint %"class.base::BasicStringPiece"* %54 to i64
  %56 = ptrtoint %"class.base::BasicStringPiece"* %12 to i64
  %57 = ptrtoint %"class.base::BasicStringPiece"* %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %112, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -16
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.base::BasicStringPiece"* [ %75, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %76, %68 ], [ %53, %62 ]
  %71 = phi %"class.base::BasicStringPiece"* [ %77, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %78, %68 ], [ %66, %62 ]
  %73 = inttoptr i64 %70 to i8*
  %74 = bitcast %"class.base::BasicStringPiece"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #15
  %75 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 1
  %76 = ptrtoint %"class.base::BasicStringPiece"* %75 to i64
  %77 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %71, i64 1
  %78 = add i64 %72, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %68, !llvm.loop !37

80:                                               ; preds = %68
  %81 = ptrtoint %"class.base::BasicStringPiece"* %75 to i64
  br label %82

82:                                               ; preds = %62, %80
  %83 = phi %"class.base::BasicStringPiece"* [ %52, %62 ], [ %75, %80 ]
  %84 = phi i64 [ %53, %62 ], [ %81, %80 ]
  %85 = phi %"class.base::BasicStringPiece"* [ %12, %62 ], [ %77, %80 ]
  %86 = icmp ult i64 %63, 48
  br i1 %86, label %109, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"class.base::BasicStringPiece"* [ %105, %87 ], [ %83, %82 ]
  %89 = phi i64 [ %106, %87 ], [ %84, %82 ]
  %90 = phi %"class.base::BasicStringPiece"* [ %107, %87 ], [ %85, %82 ]
  %91 = inttoptr i64 %89 to i8*
  %92 = bitcast %"class.base::BasicStringPiece"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 16, i1 false) #15
  %93 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 1
  %94 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 1
  %95 = bitcast %"class.base::BasicStringPiece"* %93 to i8*
  %96 = bitcast %"class.base::BasicStringPiece"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #15
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 2
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 2
  %99 = bitcast %"class.base::BasicStringPiece"* %97 to i8*
  %100 = bitcast %"class.base::BasicStringPiece"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #15
  %101 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 3
  %102 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 3
  %103 = bitcast %"class.base::BasicStringPiece"* %101 to i8*
  %104 = bitcast %"class.base::BasicStringPiece"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 16, i1 false) #15
  %105 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 4
  %106 = ptrtoint %"class.base::BasicStringPiece"* %105 to i64
  %107 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 4
  %108 = icmp eq %"class.base::BasicStringPiece"* %60, %105
  br i1 %108, label %109, label %87

109:                                              ; preds = %87, %82
  %110 = ptrtoint %"class.base::BasicStringPiece"* %60 to i64
  %111 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %13, align 8
  br label %112

112:                                              ; preds = %46, %109
  %113 = phi %"class.base::BasicStringPiece"* [ %111, %109 ], [ %14, %46 ]
  %114 = phi i64 [ %110, %109 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %115 = bitcast %"class.base::BasicStringPiece"** %11 to i64*
  store i64 %53, i64* %115, align 8
  %116 = bitcast %"class.base::BasicStringPiece"** %3 to i64*
  store i64 %114, i64* %116, align 8
  store i64 %55, i64* %38, align 8
  %117 = icmp eq %"class.base::BasicStringPiece"* %113, null
  %118 = inttoptr i64 %114 to i8*
  br i1 %117, label %123, label %119

119:                                              ; preds = %112
  %120 = bitcast %"class.base::BasicStringPiece"* %113 to i8*
  tail call void @_ZdlPv(i8* %120) #16
  %121 = bitcast %"class.base::BasicStringPiece"** %3 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %119, %112, %32, %2
  %124 = phi i8* [ %122, %119 ], [ %118, %112 ], [ %36, %32 ], [ %9, %2 ]
  %125 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #15
  %126 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %3, align 8
  %127 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %126, i64 1
  store %"class.base::BasicStringPiece"* %127, %"class.base::BasicStringPiece"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::BasicStringPiece"* @_ZNSt3__16uniqueINS_11__wrap_iterIPN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEENS2_8internal9NotFnImplINS9_9flat_treeIS6_NS2_8identityENS_4lessIvEENS_6vectorIS6_NS_9allocatorIS6_EEEEE13value_compareEEEEET_SM_SM_T0_(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.base::BasicStringPiece"* %0, %1
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 1
  %6 = icmp eq %"class.base::BasicStringPiece"* %5, %1
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %10

10:                                               ; preds = %28, %7
  %11 = phi i8* [ %17, %28 ], [ %9, %7 ]
  %12 = phi %"class.base::BasicStringPiece"* [ %29, %28 ], [ %5, %7 ]
  %13 = phi %"class.base::BasicStringPiece"* [ %12, %28 ], [ %0, %7 ]
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %15, %19
  %21 = select i1 %20, i64 %19, i64 %15
  %22 = tail call i32 @memcmp(i8* %11, i8* %17, i64 %21) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %10
  %25 = icmp ult i64 %15, %19
  br i1 %25, label %28, label %33

26:                                               ; preds = %10
  %27 = icmp sgt i32 %22, -1
  br i1 %27, label %33, label %28

28:                                               ; preds = %26, %24
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 1
  %30 = icmp eq %"class.base::BasicStringPiece"* %29, %1
  br i1 %30, label %31, label %10

31:                                               ; preds = %28, %4
  %32 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  br label %79

33:                                               ; preds = %24, %26, %2
  %34 = phi %"class.base::BasicStringPiece"* [ %0, %2 ], [ %13, %26 ], [ %13, %24 ]
  %35 = ptrtoint %"class.base::BasicStringPiece"* %34 to i64
  %36 = icmp eq %"class.base::BasicStringPiece"* %34, %1
  br i1 %36, label %79, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %34, i64 2
  %39 = icmp eq %"class.base::BasicStringPiece"* %38, %1
  br i1 %39, label %75, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %34, i64 1
  br label %42

42:                                               ; preds = %40, %68
  %43 = phi %"class.base::BasicStringPiece"* [ %72, %68 ], [ %34, %40 ]
  %44 = phi %"class.base::BasicStringPiece"* [ %70, %68 ], [ %38, %40 ]
  %45 = phi %"class.base::BasicStringPiece"* [ %44, %68 ], [ %41, %40 ]
  %46 = phi i64 [ %69, %68 ], [ %35, %40 ]
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %43, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %43, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %44, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp ugt i64 %50, %54
  %56 = select i1 %55, i64 %54, i64 %50
  %57 = tail call i32 @memcmp(i8* %48, i8* %52, i64 %56) #15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %42
  %60 = icmp ult i64 %50, %54
  br i1 %60, label %63, label %68

61:                                               ; preds = %42
  %62 = icmp sgt i32 %57, -1
  br i1 %62, label %68, label %63

63:                                               ; preds = %59, %61
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %43, i64 1
  %65 = ptrtoint %"class.base::BasicStringPiece"* %64 to i64
  %66 = bitcast %"class.base::BasicStringPiece"* %64 to i8*
  %67 = bitcast %"class.base::BasicStringPiece"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false)
  br label %68

68:                                               ; preds = %59, %63, %61
  %69 = phi i64 [ %46, %61 ], [ %65, %63 ], [ %46, %59 ]
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %44, i64 1
  %71 = icmp eq %"class.base::BasicStringPiece"* %70, %1
  %72 = inttoptr i64 %69 to %"class.base::BasicStringPiece"*
  br i1 %71, label %73, label %42

73:                                               ; preds = %68
  %74 = inttoptr i64 %69 to %"class.base::BasicStringPiece"*
  br label %75

75:                                               ; preds = %73, %37
  %76 = phi %"class.base::BasicStringPiece"* [ %34, %37 ], [ %74, %73 ]
  %77 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %76, i64 1
  %78 = ptrtoint %"class.base::BasicStringPiece"* %77 to i64
  br label %79

79:                                               ; preds = %33, %31, %75
  %80 = phi i64 [ %78, %75 ], [ %35, %33 ], [ %32, %31 ]
  %81 = inttoptr i64 %80 to %"class.base::BasicStringPiece"*
  ret %"class.base::BasicStringPiece"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1), i64, %"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %30 [
    i64 0, label %207
    i64 1, label %207
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %12, %16
  %18 = select i1 %17, i64 %16, i64 %12
  %19 = tail call i32 @memcmp(i8* %10, i8* %14, i64 %18) #15
  %20 = icmp eq i32 %19, 0
  %21 = ptrtoint i8* %14 to i64
  br i1 %20, label %22, label %24

22:                                               ; preds = %7
  %23 = icmp ult i64 %12, %16
  br i1 %23, label %26, label %207

24:                                               ; preds = %7
  %25 = icmp slt i32 %19, 0
  br i1 %25, label %26, label %207

26:                                               ; preds = %22, %24
  %27 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  %28 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false) #15
  %29 = bitcast %"class.base::BasicStringPiece"* %8 to i64*
  store i64 %21, i64* %29, align 8
  store i64 %16, i64* %11, align 8
  br label %207

30:                                               ; preds = %6
  %31 = icmp slt i64 %3, 129
  br i1 %31, label %32, label %70

32:                                               ; preds = %30
  %33 = icmp eq %"class.base::BasicStringPiece"* %0, %1
  br i1 %33, label %207, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 1
  %36 = icmp eq %"class.base::BasicStringPiece"* %35, %1
  br i1 %36, label %207, label %37

37:                                               ; preds = %34, %60
  %38 = phi %"class.base::BasicStringPiece"* [ %64, %60 ], [ %35, %34 ]
  %39 = phi %"class.base::BasicStringPiece"* [ %38, %60 ], [ %0, %34 ]
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %39, i64 1, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq %"class.base::BasicStringPiece"* %38, %0
  br i1 %44, label %60, label %45

45:                                               ; preds = %37, %66
  %46 = phi %"class.base::BasicStringPiece"* [ %47, %66 ], [ %38, %37 ]
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %46, i64 -1
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %47, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %46, i64 -1, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ugt i64 %43, %51
  %53 = select i1 %52, i64 %51, i64 %43
  %54 = tail call i32 @memcmp(i8* %41, i8* %49, i64 %53) #15
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %45
  %57 = icmp ult i64 %43, %51
  br i1 %57, label %66, label %60

58:                                               ; preds = %45
  %59 = icmp slt i32 %54, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %66, %58, %56, %37
  %61 = phi %"class.base::BasicStringPiece"* [ %0, %37 ], [ %46, %58 ], [ %46, %56 ], [ %0, %66 ]
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %61, i64 0, i32 0
  store i8* %41, i8** %62, align 8
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %61, i64 0, i32 1
  store i64 %43, i64* %63, align 8
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 1
  %65 = icmp eq %"class.base::BasicStringPiece"* %64, %1
  br i1 %65, label %207, label %37

66:                                               ; preds = %58, %56
  %67 = bitcast %"class.base::BasicStringPiece"* %46 to i8*
  %68 = bitcast %"class.base::BasicStringPiece"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false) #15
  %69 = icmp eq %"class.base::BasicStringPiece"* %47, %0
  br i1 %69, label %60, label %45

70:                                               ; preds = %30
  %71 = lshr i64 %3, 1
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 %71
  %73 = icmp sgt i64 %3, %5
  br i1 %73, label %205, label %74

74:                                               ; preds = %70
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %72, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %2, i64 %71, %"class.base::BasicStringPiece"* %4)
  %75 = sub nsw i64 %3, %71
  %76 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 %71
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"class.base::BasicStringPiece"* %72, %"class.base::BasicStringPiece"* %1, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %2, i64 %75, %"class.base::BasicStringPiece"* %76)
  %77 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 %3
  br label %104

78:                                               ; preds = %180
  %79 = icmp eq %"class.base::BasicStringPiece"* %181, %77
  br i1 %79, label %207, label %80

80:                                               ; preds = %78
  %81 = ptrtoint %"class.base::BasicStringPiece"* %181 to i64
  %82 = add i64 %3, -1
  %83 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 %82, i32 0
  %84 = ptrtoint i8** %83 to i64
  %85 = sub i64 %84, %81
  %86 = lshr i64 %85, 4
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 3
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %80, %90
  %91 = phi %"class.base::BasicStringPiece"* [ %96, %90 ], [ %181, %80 ]
  %92 = phi %"class.base::BasicStringPiece"* [ %97, %90 ], [ %183, %80 ]
  %93 = phi i64 [ %98, %90 ], [ %88, %80 ]
  %94 = bitcast %"class.base::BasicStringPiece"* %92 to i8*
  %95 = bitcast %"class.base::BasicStringPiece"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #15
  %96 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 1
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %92, i64 1
  %98 = add i64 %93, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %90, !llvm.loop !38

100:                                              ; preds = %90, %80
  %101 = phi %"class.base::BasicStringPiece"* [ %181, %80 ], [ %96, %90 ]
  %102 = phi %"class.base::BasicStringPiece"* [ %183, %80 ], [ %97, %90 ]
  %103 = icmp ult i64 %85, 48
  br i1 %103, label %207, label %185

104:                                              ; preds = %74, %180
  %105 = phi %"class.base::BasicStringPiece"* [ %182, %180 ], [ %4, %74 ]
  %106 = phi %"class.base::BasicStringPiece"* [ %181, %180 ], [ %76, %74 ]
  %107 = phi %"class.base::BasicStringPiece"* [ %183, %180 ], [ %0, %74 ]
  %108 = icmp eq %"class.base::BasicStringPiece"* %106, %77
  br i1 %108, label %109, label %155

109:                                              ; preds = %104
  %110 = icmp eq %"class.base::BasicStringPiece"* %105, %76
  br i1 %110, label %207, label %111

111:                                              ; preds = %109
  %112 = ptrtoint %"class.base::BasicStringPiece"* %105 to i64
  %113 = add nsw i64 %71, -1
  %114 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 %113, i32 0
  %115 = ptrtoint i8** %114 to i64
  %116 = sub i64 %115, %112
  %117 = lshr i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %111, %121
  %122 = phi %"class.base::BasicStringPiece"* [ %127, %121 ], [ %105, %111 ]
  %123 = phi %"class.base::BasicStringPiece"* [ %128, %121 ], [ %107, %111 ]
  %124 = phi i64 [ %129, %121 ], [ %119, %111 ]
  %125 = bitcast %"class.base::BasicStringPiece"* %123 to i8*
  %126 = bitcast %"class.base::BasicStringPiece"* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #15
  %127 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %122, i64 1
  %128 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %123, i64 1
  %129 = add i64 %124, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %121, !llvm.loop !39

131:                                              ; preds = %121, %111
  %132 = phi %"class.base::BasicStringPiece"* [ %105, %111 ], [ %127, %121 ]
  %133 = phi %"class.base::BasicStringPiece"* [ %107, %111 ], [ %128, %121 ]
  %134 = icmp ult i64 %116, 48
  br i1 %134, label %207, label %135

135:                                              ; preds = %131, %135
  %136 = phi %"class.base::BasicStringPiece"* [ %152, %135 ], [ %132, %131 ]
  %137 = phi %"class.base::BasicStringPiece"* [ %153, %135 ], [ %133, %131 ]
  %138 = bitcast %"class.base::BasicStringPiece"* %137 to i8*
  %139 = bitcast %"class.base::BasicStringPiece"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 16, i1 false) #15
  %140 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %136, i64 1
  %141 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %137, i64 1
  %142 = bitcast %"class.base::BasicStringPiece"* %141 to i8*
  %143 = bitcast %"class.base::BasicStringPiece"* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 16, i1 false) #15
  %144 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %136, i64 2
  %145 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %137, i64 2
  %146 = bitcast %"class.base::BasicStringPiece"* %145 to i8*
  %147 = bitcast %"class.base::BasicStringPiece"* %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 16, i1 false) #15
  %148 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %136, i64 3
  %149 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %137, i64 3
  %150 = bitcast %"class.base::BasicStringPiece"* %149 to i8*
  %151 = bitcast %"class.base::BasicStringPiece"* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 16, i1 false) #15
  %152 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %136, i64 4
  %153 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %137, i64 4
  %154 = icmp eq %"class.base::BasicStringPiece"* %152, %76
  br i1 %154, label %207, label %135

155:                                              ; preds = %104
  %156 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %106, i64 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %106, i64 0, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %105, i64 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %105, i64 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = icmp ugt i64 %159, %163
  %165 = select i1 %164, i64 %163, i64 %159
  %166 = tail call i32 @memcmp(i8* %157, i8* %161, i64 %165) #15
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %155
  %169 = icmp ult i64 %159, %163
  br i1 %169, label %172, label %176

170:                                              ; preds = %155
  %171 = icmp slt i32 %166, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %170, %168
  %173 = bitcast %"class.base::BasicStringPiece"* %107 to i8*
  %174 = bitcast %"class.base::BasicStringPiece"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 16, i1 false) #15
  %175 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %106, i64 1
  br label %180

176:                                              ; preds = %170, %168
  %177 = bitcast %"class.base::BasicStringPiece"* %107 to i8*
  %178 = bitcast %"class.base::BasicStringPiece"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #15
  %179 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %105, i64 1
  br label %180

180:                                              ; preds = %176, %172
  %181 = phi %"class.base::BasicStringPiece"* [ %175, %172 ], [ %106, %176 ]
  %182 = phi %"class.base::BasicStringPiece"* [ %105, %172 ], [ %179, %176 ]
  %183 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %107, i64 1
  %184 = icmp eq %"class.base::BasicStringPiece"* %182, %76
  br i1 %184, label %78, label %104

185:                                              ; preds = %100, %185
  %186 = phi %"class.base::BasicStringPiece"* [ %202, %185 ], [ %101, %100 ]
  %187 = phi %"class.base::BasicStringPiece"* [ %203, %185 ], [ %102, %100 ]
  %188 = bitcast %"class.base::BasicStringPiece"* %187 to i8*
  %189 = bitcast %"class.base::BasicStringPiece"* %186 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 16, i1 false) #15
  %190 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %186, i64 1
  %191 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %187, i64 1
  %192 = bitcast %"class.base::BasicStringPiece"* %191 to i8*
  %193 = bitcast %"class.base::BasicStringPiece"* %190 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %192, i8* align 8 %193, i64 16, i1 false) #15
  %194 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %186, i64 2
  %195 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %187, i64 2
  %196 = bitcast %"class.base::BasicStringPiece"* %195 to i8*
  %197 = bitcast %"class.base::BasicStringPiece"* %194 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 16, i1 false) #15
  %198 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %186, i64 3
  %199 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %187, i64 3
  %200 = bitcast %"class.base::BasicStringPiece"* %199 to i8*
  %201 = bitcast %"class.base::BasicStringPiece"* %198 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %201, i64 16, i1 false) #15
  %202 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %186, i64 4
  %203 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %187, i64 4
  %204 = icmp eq %"class.base::BasicStringPiece"* %202, %77
  br i1 %204, label %207, label %185

205:                                              ; preds = %70
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %72, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %2, i64 %71, %"class.base::BasicStringPiece"* %4, i64 %5)
  %206 = sub nsw i64 %3, %71
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::BasicStringPiece"* %72, %"class.base::BasicStringPiece"* %1, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %2, i64 %206, %"class.base::BasicStringPiece"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %72, %"class.base::BasicStringPiece"* %1, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %2, i64 %71, i64 %206, %"class.base::BasicStringPiece"* %4, i64 %5)
  ret void

207:                                              ; preds = %100, %185, %131, %135, %60, %22, %109, %78, %34, %32, %24, %26, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1), i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %41 [
    i64 0, label %180
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  %8 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %180

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %14, %18
  %20 = select i1 %19, i64 %18, i64 %14
  %21 = tail call i32 @memcmp(i8* %12, i8* %16, i64 %20) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %9
  %24 = icmp ult i64 %14, %18
  %25 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  br i1 %24, label %29, label %35

26:                                               ; preds = %9
  %27 = icmp slt i32 %21, 0
  %28 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  br i1 %27, label %29, label %35

29:                                               ; preds = %23, %26
  %30 = phi i8* [ %28, %26 ], [ %25, %23 ]
  %31 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 16, i1 false)
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 1
  %33 = bitcast %"class.base::BasicStringPiece"* %32 to i8*
  %34 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false)
  br label %180

35:                                               ; preds = %23, %26
  %36 = phi i8* [ %28, %26 ], [ %25, %23 ]
  %37 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false)
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 1
  %39 = bitcast %"class.base::BasicStringPiece"* %38 to i8*
  %40 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  br label %180

41:                                               ; preds = %5
  %42 = icmp slt i64 %3, 9
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_PNS_15iterator_traitsISL_E10value_typeET_(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* %4, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %2)
  br label %180

44:                                               ; preds = %41
  %45 = lshr i64 %3, 1
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 %45
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::BasicStringPiece"* %0, %"class.base::BasicStringPiece"* %46, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %2, i64 %45, %"class.base::BasicStringPiece"* %4, i64 %45)
  %47 = sub nsw i64 %3, %45
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 %45
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::BasicStringPiece"* %46, %"class.base::BasicStringPiece"* %1, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %2, i64 %47, %"class.base::BasicStringPiece"* %48, i64 %47)
  %49 = icmp eq i64 %45, 0
  br i1 %49, label %50, label %97

50:                                               ; preds = %175, %44
  %51 = phi %"class.base::BasicStringPiece"* [ %46, %44 ], [ %176, %175 ]
  %52 = phi %"class.base::BasicStringPiece"* [ %4, %44 ], [ %178, %175 ]
  %53 = icmp eq %"class.base::BasicStringPiece"* %51, %1
  br i1 %53, label %180, label %54

54:                                               ; preds = %50
  %55 = ptrtoint %"class.base::BasicStringPiece"* %51 to i64
  %56 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 0
  %57 = ptrtoint i8** %56 to i64
  %58 = sub i64 %57, %55
  %59 = lshr i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %54, %63
  %64 = phi %"class.base::BasicStringPiece"* [ %70, %63 ], [ %52, %54 ]
  %65 = phi %"class.base::BasicStringPiece"* [ %69, %63 ], [ %51, %54 ]
  %66 = phi i64 [ %71, %63 ], [ %61, %54 ]
  %67 = bitcast %"class.base::BasicStringPiece"* %64 to i8*
  %68 = bitcast %"class.base::BasicStringPiece"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false) #15
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %65, i64 1
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 1
  %71 = add i64 %66, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %63, !llvm.loop !40

73:                                               ; preds = %63, %54
  %74 = phi %"class.base::BasicStringPiece"* [ %52, %54 ], [ %70, %63 ]
  %75 = phi %"class.base::BasicStringPiece"* [ %51, %54 ], [ %69, %63 ]
  %76 = icmp ult i64 %58, 48
  br i1 %76, label %180, label %77

77:                                               ; preds = %73, %77
  %78 = phi %"class.base::BasicStringPiece"* [ %95, %77 ], [ %74, %73 ]
  %79 = phi %"class.base::BasicStringPiece"* [ %94, %77 ], [ %75, %73 ]
  %80 = bitcast %"class.base::BasicStringPiece"* %78 to i8*
  %81 = bitcast %"class.base::BasicStringPiece"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false) #15
  %82 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %79, i64 1
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %78, i64 1
  %84 = bitcast %"class.base::BasicStringPiece"* %83 to i8*
  %85 = bitcast %"class.base::BasicStringPiece"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 16, i1 false) #15
  %86 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %79, i64 2
  %87 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %78, i64 2
  %88 = bitcast %"class.base::BasicStringPiece"* %87 to i8*
  %89 = bitcast %"class.base::BasicStringPiece"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #15
  %90 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %79, i64 3
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %78, i64 3
  %92 = bitcast %"class.base::BasicStringPiece"* %91 to i8*
  %93 = bitcast %"class.base::BasicStringPiece"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false) #15
  %94 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %79, i64 4
  %95 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %78, i64 4
  %96 = icmp eq %"class.base::BasicStringPiece"* %94, %1
  br i1 %96, label %180, label %77

97:                                               ; preds = %44, %175
  %98 = phi %"class.base::BasicStringPiece"* [ %178, %175 ], [ %4, %44 ]
  %99 = phi %"class.base::BasicStringPiece"* [ %177, %175 ], [ %0, %44 ]
  %100 = phi %"class.base::BasicStringPiece"* [ %176, %175 ], [ %46, %44 ]
  %101 = icmp eq %"class.base::BasicStringPiece"* %100, %1
  br i1 %101, label %102, label %148

102:                                              ; preds = %97
  %103 = icmp eq %"class.base::BasicStringPiece"* %99, %46
  br i1 %103, label %180, label %104

104:                                              ; preds = %102
  %105 = ptrtoint %"class.base::BasicStringPiece"* %99 to i64
  %106 = add nsw i64 %45, -1
  %107 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 %106, i32 0
  %108 = ptrtoint i8** %107 to i64
  %109 = sub i64 %108, %105
  %110 = lshr i64 %109, 4
  %111 = add nuw nsw i64 %110, 1
  %112 = and i64 %111, 3
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %124, label %114

114:                                              ; preds = %104, %114
  %115 = phi %"class.base::BasicStringPiece"* [ %121, %114 ], [ %98, %104 ]
  %116 = phi %"class.base::BasicStringPiece"* [ %120, %114 ], [ %99, %104 ]
  %117 = phi i64 [ %122, %114 ], [ %112, %104 ]
  %118 = bitcast %"class.base::BasicStringPiece"* %115 to i8*
  %119 = bitcast %"class.base::BasicStringPiece"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 16, i1 false) #15
  %120 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %116, i64 1
  %121 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %115, i64 1
  %122 = add i64 %117, -1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %114, !llvm.loop !41

124:                                              ; preds = %114, %104
  %125 = phi %"class.base::BasicStringPiece"* [ %98, %104 ], [ %121, %114 ]
  %126 = phi %"class.base::BasicStringPiece"* [ %99, %104 ], [ %120, %114 ]
  %127 = icmp ult i64 %109, 48
  br i1 %127, label %180, label %128

128:                                              ; preds = %124, %128
  %129 = phi %"class.base::BasicStringPiece"* [ %146, %128 ], [ %125, %124 ]
  %130 = phi %"class.base::BasicStringPiece"* [ %145, %128 ], [ %126, %124 ]
  %131 = bitcast %"class.base::BasicStringPiece"* %129 to i8*
  %132 = bitcast %"class.base::BasicStringPiece"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #15
  %133 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %130, i64 1
  %134 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %129, i64 1
  %135 = bitcast %"class.base::BasicStringPiece"* %134 to i8*
  %136 = bitcast %"class.base::BasicStringPiece"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #15
  %137 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %130, i64 2
  %138 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %129, i64 2
  %139 = bitcast %"class.base::BasicStringPiece"* %138 to i8*
  %140 = bitcast %"class.base::BasicStringPiece"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false) #15
  %141 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %130, i64 3
  %142 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %129, i64 3
  %143 = bitcast %"class.base::BasicStringPiece"* %142 to i8*
  %144 = bitcast %"class.base::BasicStringPiece"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #15
  %145 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %130, i64 4
  %146 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %129, i64 4
  %147 = icmp eq %"class.base::BasicStringPiece"* %145, %46
  br i1 %147, label %180, label %128

148:                                              ; preds = %97
  %149 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %100, i64 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %100, i64 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %99, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %99, i64 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = icmp ugt i64 %152, %156
  %158 = select i1 %157, i64 %156, i64 %152
  %159 = tail call i32 @memcmp(i8* %150, i8* %154, i64 %158) #15
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %148
  %162 = icmp ult i64 %152, %156
  %163 = bitcast %"class.base::BasicStringPiece"* %98 to i8*
  br i1 %162, label %167, label %171

164:                                              ; preds = %148
  %165 = icmp slt i32 %159, 0
  %166 = bitcast %"class.base::BasicStringPiece"* %98 to i8*
  br i1 %165, label %167, label %171

167:                                              ; preds = %164, %161
  %168 = phi i8* [ %166, %164 ], [ %163, %161 ]
  %169 = bitcast %"class.base::BasicStringPiece"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #15
  %170 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %100, i64 1
  br label %175

171:                                              ; preds = %164, %161
  %172 = phi i8* [ %166, %164 ], [ %163, %161 ]
  %173 = bitcast %"class.base::BasicStringPiece"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 16, i1 false) #15
  %174 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %99, i64 1
  br label %175

175:                                              ; preds = %171, %167
  %176 = phi %"class.base::BasicStringPiece"* [ %170, %167 ], [ %100, %171 ]
  %177 = phi %"class.base::BasicStringPiece"* [ %99, %167 ], [ %174, %171 ]
  %178 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %98, i64 1
  %179 = icmp eq %"class.base::BasicStringPiece"* %177, %46
  br i1 %179, label %50, label %97

180:                                              ; preds = %124, %128, %73, %77, %102, %50, %29, %35, %5, %43, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1), i64, i64, %"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %319, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %12 = ptrtoint %"class.base::BasicStringPiece"* %0 to i64
  br label %13

13:                                               ; preds = %10, %312
  %14 = phi %"class.base::BasicStringPiece"* [ %317, %312 ], [ %2, %10 ]
  %15 = phi i64 [ %316, %312 ], [ %4, %10 ]
  %16 = phi i64 [ %315, %312 ], [ %5, %10 ]
  %17 = phi i64 [ %314, %312 ], [ %11, %10 ]
  %18 = phi i64 [ %313, %312 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %30

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %319, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"class.base::BasicStringPiece"*
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %33

30:                                               ; preds = %13
  %31 = inttoptr i64 %18 to %"class.base::BasicStringPiece"*
  %32 = inttoptr i64 %17 to %"class.base::BasicStringPiece"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeE(%"class.base::BasicStringPiece"* %31, %"class.base::BasicStringPiece"* %32, %"class.base::BasicStringPiece"* %14, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %3, i64 %15, i64 %16, %"class.base::BasicStringPiece"* %6)
  br label %319

33:                                               ; preds = %24, %49
  %34 = phi i64 [ %15, %24 ], [ %52, %49 ]
  %35 = phi i64 [ %18, %24 ], [ %51, %49 ]
  %36 = inttoptr i64 %35 to %"class.base::BasicStringPiece"*
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %36, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ugt i64 %29, %40
  %42 = select i1 %41, i64 %40, i64 %29
  %43 = tail call i32 @memcmp(i8* %27, i8* %38, i64 %42) #15
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %33
  %46 = icmp ult i64 %29, %40
  br i1 %46, label %54, label %49

47:                                               ; preds = %33
  %48 = icmp slt i32 %43, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %45, %47
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %36, i64 1
  %51 = ptrtoint %"class.base::BasicStringPiece"* %50 to i64
  %52 = add nsw i64 %34, -1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %319, label %33

54:                                               ; preds = %45, %47
  %55 = inttoptr i64 %35 to %"class.base::BasicStringPiece"*
  %56 = icmp slt i64 %34, %16
  br i1 %56, label %57, label %97

57:                                               ; preds = %54
  %58 = sdiv i64 %16, 2
  %59 = sub i64 %17, %35
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %92, label %61

61:                                               ; preds = %57
  %62 = ashr exact i64 %59, 4
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 %58, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 %58, i32 1
  %66 = load i64, i64* %65, align 8
  br label %67

67:                                               ; preds = %88, %61
  %68 = phi %"class.base::BasicStringPiece"* [ %55, %61 ], [ %90, %88 ]
  %69 = phi i64 [ %62, %61 ], [ %89, %88 ]
  %70 = lshr i64 %69, 1
  %71 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 %70
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %71, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 %70, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = icmp ugt i64 %66, %75
  %77 = select i1 %76, i64 %75, i64 %66
  %78 = tail call i32 @memcmp(i8* %64, i8* %73, i64 %77) #15
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %67
  %81 = icmp ult i64 %66, %75
  br i1 %81, label %88, label %84

82:                                               ; preds = %67
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %82, %80
  %85 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %71, i64 1
  %86 = xor i64 %70, -1
  %87 = add i64 %69, %86
  br label %88

88:                                               ; preds = %84, %82, %80
  %89 = phi i64 [ %87, %84 ], [ %70, %82 ], [ %70, %80 ]
  %90 = phi %"class.base::BasicStringPiece"* [ %85, %84 ], [ %68, %82 ], [ %68, %80 ]
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %92, label %67

92:                                               ; preds = %88, %57
  %93 = phi %"class.base::BasicStringPiece"* [ %55, %57 ], [ %90, %88 ]
  %94 = ptrtoint %"class.base::BasicStringPiece"* %93 to i64
  %95 = sub i64 %94, %35
  %96 = ashr exact i64 %95, 4
  br label %152

97:                                               ; preds = %54
  %98 = icmp eq i64 %34, 1
  br i1 %98, label %99, label %107

99:                                               ; preds = %97
  %100 = inttoptr i64 %17 to %"class.base::BasicStringPiece"*
  %101 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %100, i64 0, i32 1
  %102 = inttoptr i64 %35 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %35 to i8*
  %105 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false) #15
  %106 = inttoptr i64 %17 to i64*
  store i64 %103, i64* %106, align 8
  store i64 %40, i64* %101, align 8
  br label %319

107:                                              ; preds = %97
  %108 = sdiv i64 %34, 2
  %109 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %55, i64 %108
  %110 = ptrtoint %"class.base::BasicStringPiece"* %109 to i64
  %111 = ptrtoint %"class.base::BasicStringPiece"* %14 to i64
  %112 = sub i64 %111, %17
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %146, label %114

114:                                              ; preds = %107
  %115 = ashr exact i64 %112, 4
  %116 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %109, i64 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %55, i64 %108, i32 1
  %119 = load i64, i64* %118, align 8
  br label %120

120:                                              ; preds = %142, %114
  %121 = phi i64 [ 0, %114 ], [ %144, %142 ]
  %122 = phi i64 [ %115, %114 ], [ %143, %142 ]
  %123 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 %121
  %124 = lshr i64 %122, 1
  %125 = add nsw i64 %124, %121
  %126 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 %125, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %123, i64 %124, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = icmp ugt i64 %129, %119
  %131 = select i1 %130, i64 %119, i64 %129
  %132 = tail call i32 @memcmp(i8* %127, i8* %117, i64 %131) #15
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %120
  %135 = icmp ult i64 %129, %119
  br i1 %135, label %138, label %142

136:                                              ; preds = %120
  %137 = icmp slt i32 %132, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %136, %134
  %139 = add nsw i64 %125, 1
  %140 = xor i64 %124, -1
  %141 = add i64 %122, %140
  br label %142

142:                                              ; preds = %138, %136, %134
  %143 = phi i64 [ %141, %138 ], [ %124, %136 ], [ %124, %134 ]
  %144 = phi i64 [ %139, %138 ], [ %121, %136 ], [ %121, %134 ]
  %145 = icmp eq i64 %143, 0
  br i1 %145, label %146, label %120

146:                                              ; preds = %142, %107
  %147 = phi i64 [ 0, %107 ], [ %144, %142 ]
  %148 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 %147
  %149 = ptrtoint %"class.base::BasicStringPiece"* %148 to i64
  %150 = sub i64 %149, %17
  %151 = ashr exact i64 %150, 4
  br label %152

152:                                              ; preds = %146, %92
  %153 = phi i64 [ %94, %92 ], [ %110, %146 ]
  %154 = phi i64 [ %58, %92 ], [ %147, %146 ]
  %155 = phi i64 [ %58, %92 ], [ %151, %146 ]
  %156 = phi i64 [ %96, %92 ], [ %108, %146 ]
  %157 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 %154
  %158 = ptrtoint %"class.base::BasicStringPiece"* %157 to i64
  %159 = sub nsw i64 %34, %156
  %160 = sub nsw i64 %16, %155
  %161 = inttoptr i64 %153 to %"class.base::BasicStringPiece"*
  %162 = icmp eq %"class.base::BasicStringPiece"* %161, %25
  br i1 %162, label %304, label %163

163:                                              ; preds = %152
  %164 = icmp eq i64 %154, 0
  br i1 %164, label %304, label %165

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %161, i64 1
  %167 = icmp eq %"class.base::BasicStringPiece"* %166, %25
  br i1 %167, label %168, label %183

168:                                              ; preds = %165
  %169 = inttoptr i64 %153 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %161, i64 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %158, %17
  %174 = ashr exact i64 %173, 4
  %175 = icmp eq i64 %173, 0
  br i1 %175, label %179, label %176

176:                                              ; preds = %168
  %177 = inttoptr i64 %153 to i8*
  %178 = inttoptr i64 %17 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 %173, i1 false) #15
  br label %179

179:                                              ; preds = %176, %168
  %180 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %161, i64 %174
  %181 = bitcast %"class.base::BasicStringPiece"* %180 to i64*
  store i64 %170, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %161, i64 %174, i32 1
  store i64 %172, i64* %182, align 8
  br label %304

183:                                              ; preds = %165
  %184 = icmp eq i64 %154, 1
  br i1 %184, label %185, label %204

185:                                              ; preds = %183
  %186 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %157, i64 -1
  %187 = bitcast %"class.base::BasicStringPiece"* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %157, i64 -1, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = ptrtoint %"class.base::BasicStringPiece"* %186 to i64
  %192 = sub i64 %191, %153
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %200, label %194

194:                                              ; preds = %185
  %195 = ashr exact i64 %192, 4
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %157, i64 %196
  %198 = bitcast %"class.base::BasicStringPiece"* %197 to i8*
  %199 = inttoptr i64 %153 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 %192, i1 false) #15
  br label %200

200:                                              ; preds = %194, %185
  %201 = phi %"class.base::BasicStringPiece"* [ %197, %194 ], [ %157, %185 ]
  %202 = inttoptr i64 %153 to i64*
  store i64 %188, i64* %202, align 8
  %203 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %161, i64 0, i32 1
  store i64 %190, i64* %203, align 8
  br label %304

204:                                              ; preds = %183
  %205 = sub i64 %17, %153
  %206 = ashr exact i64 %205, 4
  %207 = sub i64 %158, %17
  %208 = ashr exact i64 %207, 4
  %209 = icmp eq i64 %206, %208
  br i1 %209, label %210, label %269

210:                                              ; preds = %204
  %211 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %25, i64 -1
  %212 = bitcast %"class.base::BasicStringPiece"* %211 to i8*
  %213 = sub i64 0, %153
  %214 = getelementptr i8, i8* %212, i64 %213
  %215 = ptrtoint i8* %214 to i64
  %216 = lshr i64 %215, 4
  %217 = add nuw nsw i64 %216, 1
  %218 = and i64 %217, 3
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %233, label %220

220:                                              ; preds = %210, %220
  %221 = phi %"class.base::BasicStringPiece"* [ %230, %220 ], [ %25, %210 ]
  %222 = phi %"class.base::BasicStringPiece"* [ %229, %220 ], [ %161, %210 ]
  %223 = phi i64 [ %231, %220 ], [ %218, %210 ]
  %224 = bitcast %"class.base::BasicStringPiece"* %222 to <2 x i64>*
  %225 = load <2 x i64>, <2 x i64>* %224, align 8
  %226 = bitcast %"class.base::BasicStringPiece"* %222 to i8*
  %227 = bitcast %"class.base::BasicStringPiece"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 16, i1 false) #15
  %228 = bitcast %"class.base::BasicStringPiece"* %221 to <2 x i64>*
  store <2 x i64> %225, <2 x i64>* %228, align 8
  %229 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %222, i64 1
  %230 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %221, i64 1
  %231 = add i64 %223, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %220, !llvm.loop !42

233:                                              ; preds = %220, %210
  %234 = phi %"class.base::BasicStringPiece"* [ %25, %210 ], [ %230, %220 ]
  %235 = phi %"class.base::BasicStringPiece"* [ %161, %210 ], [ %229, %220 ]
  %236 = icmp ult i8* %214, inttoptr (i64 48 to i8*)
  br i1 %236, label %304, label %237

237:                                              ; preds = %233, %237
  %238 = phi %"class.base::BasicStringPiece"* [ %267, %237 ], [ %234, %233 ]
  %239 = phi %"class.base::BasicStringPiece"* [ %266, %237 ], [ %235, %233 ]
  %240 = bitcast %"class.base::BasicStringPiece"* %239 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 8
  %242 = bitcast %"class.base::BasicStringPiece"* %239 to i8*
  %243 = bitcast %"class.base::BasicStringPiece"* %238 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %243, i64 16, i1 false) #15
  %244 = bitcast %"class.base::BasicStringPiece"* %238 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %244, align 8
  %245 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %239, i64 1
  %246 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 1
  %247 = bitcast %"class.base::BasicStringPiece"* %245 to <2 x i64>*
  %248 = load <2 x i64>, <2 x i64>* %247, align 8
  %249 = bitcast %"class.base::BasicStringPiece"* %245 to i8*
  %250 = bitcast %"class.base::BasicStringPiece"* %246 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %249, i8* align 8 %250, i64 16, i1 false) #15
  %251 = bitcast %"class.base::BasicStringPiece"* %246 to <2 x i64>*
  store <2 x i64> %248, <2 x i64>* %251, align 8
  %252 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %239, i64 2
  %253 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 2
  %254 = bitcast %"class.base::BasicStringPiece"* %252 to <2 x i64>*
  %255 = load <2 x i64>, <2 x i64>* %254, align 8
  %256 = bitcast %"class.base::BasicStringPiece"* %252 to i8*
  %257 = bitcast %"class.base::BasicStringPiece"* %253 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #15
  %258 = bitcast %"class.base::BasicStringPiece"* %253 to <2 x i64>*
  store <2 x i64> %255, <2 x i64>* %258, align 8
  %259 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %239, i64 3
  %260 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 3
  %261 = bitcast %"class.base::BasicStringPiece"* %259 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8
  %263 = bitcast %"class.base::BasicStringPiece"* %259 to i8*
  %264 = bitcast %"class.base::BasicStringPiece"* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %264, i64 16, i1 false) #15
  %265 = bitcast %"class.base::BasicStringPiece"* %260 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %265, align 8
  %266 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %239, i64 4
  %267 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 4
  %268 = icmp eq %"class.base::BasicStringPiece"* %266, %25
  br i1 %268, label %304, label %237

269:                                              ; preds = %204, %269
  %270 = phi i64 [ %272, %269 ], [ %208, %204 ]
  %271 = phi i64 [ %270, %269 ], [ %206, %204 ]
  %272 = srem i64 %271, %270
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %269

274:                                              ; preds = %269
  %275 = icmp eq i64 %270, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %274
  %277 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %161, i64 %270
  br label %280

278:                                              ; preds = %301, %274
  %279 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %161, i64 %208
  br label %304

280:                                              ; preds = %301, %276
  %281 = phi %"class.base::BasicStringPiece"* [ %282, %301 ], [ %277, %276 ]
  %282 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %281, i64 -1
  %283 = ptrtoint %"class.base::BasicStringPiece"* %282 to i64
  %284 = bitcast %"class.base::BasicStringPiece"* %282 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8
  %286 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 %206
  br label %287

287:                                              ; preds = %287, %280
  %288 = phi i64 [ %283, %280 ], [ %290, %287 ]
  %289 = phi %"class.base::BasicStringPiece"* [ %286, %280 ], [ %299, %287 ]
  %290 = ptrtoint %"class.base::BasicStringPiece"* %289 to i64
  %291 = inttoptr i64 %288 to i8*
  %292 = bitcast %"class.base::BasicStringPiece"* %289 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* align 8 %292, i64 16, i1 false) #15
  %293 = sub i64 %158, %290
  %294 = ashr exact i64 %293, 4
  %295 = icmp slt i64 %206, %294
  %296 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %289, i64 %206
  %297 = sub nsw i64 %206, %294
  %298 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %161, i64 %297
  %299 = select i1 %295, %"class.base::BasicStringPiece"* %296, %"class.base::BasicStringPiece"* %298
  %300 = icmp eq %"class.base::BasicStringPiece"* %299, %282
  br i1 %300, label %301, label %287

301:                                              ; preds = %287
  %302 = bitcast %"class.base::BasicStringPiece"* %289 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %302, align 8
  %303 = icmp eq %"class.base::BasicStringPiece"* %282, %161
  br i1 %303, label %278, label %280

304:                                              ; preds = %233, %237, %278, %200, %179, %152, %163
  %305 = phi %"class.base::BasicStringPiece"* [ %161, %163 ], [ %157, %152 ], [ %180, %179 ], [ %201, %200 ], [ %279, %278 ], [ %25, %237 ], [ %25, %233 ]
  %306 = add nsw i64 %156, %155
  %307 = add nsw i64 %159, %160
  %308 = icmp slt i64 %306, %307
  br i1 %308, label %309, label %311

309:                                              ; preds = %304
  %310 = ptrtoint %"class.base::BasicStringPiece"* %305 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::BasicStringPiece"* %55, %"class.base::BasicStringPiece"* %161, %"class.base::BasicStringPiece"* %305, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %3, i64 %156, i64 %155, %"class.base::BasicStringPiece"* %6, i64 %7)
  br label %312

311:                                              ; preds = %304
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::BasicStringPiece"* %305, %"class.base::BasicStringPiece"* %157, %"class.base::BasicStringPiece"* %14, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1) %3, i64 %159, i64 %160, %"class.base::BasicStringPiece"* %6, i64 %7)
  br label %312

312:                                              ; preds = %309, %311
  %313 = phi i64 [ %310, %309 ], [ %35, %311 ]
  %314 = phi i64 [ %158, %309 ], [ %153, %311 ]
  %315 = phi i64 [ %160, %309 ], [ %155, %311 ]
  %316 = phi i64 [ %159, %309 ], [ %156, %311 ]
  %317 = phi %"class.base::BasicStringPiece"* [ %14, %309 ], [ %305, %311 ]
  %318 = icmp eq i64 %315, 0
  br i1 %318, label %319, label %13

319:                                              ; preds = %312, %22, %49, %8, %99, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_PNS_15iterator_traitsISL_E10value_typeET_(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.base::BasicStringPiece"* %0, %1
  br i1 %5, label %67, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  %8 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 1
  %10 = icmp eq %"class.base::BasicStringPiece"* %9, %1
  br i1 %10, label %67, label %11

11:                                               ; preds = %6, %62
  %12 = phi %"class.base::BasicStringPiece"* [ %65, %62 ], [ %9, %6 ]
  %13 = phi %"class.base::BasicStringPiece"* [ %15, %62 ], [ %2, %6 ]
  %14 = phi %"class.base::BasicStringPiece"* [ %12, %62 ], [ %0, %6 ]
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 1
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %23, i64 %19
  %26 = tail call i32 @memcmp(i8* %17, i8* %21, i64 %25) #15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %11
  %29 = icmp ult i64 %19, %23
  %30 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  br i1 %29, label %34, label %62

31:                                               ; preds = %11
  %32 = icmp slt i32 %26, 0
  %33 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  br i1 %32, label %34, label %62

34:                                               ; preds = %28, %31
  %35 = phi i8* [ %33, %31 ], [ %30, %28 ]
  %36 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
  %37 = icmp eq %"class.base::BasicStringPiece"* %13, %2
  br i1 %37, label %62, label %38

38:                                               ; preds = %34, %55
  %39 = phi %"class.base::BasicStringPiece"* [ %40, %55 ], [ %13, %34 ]
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %39, i64 -1
  %41 = load i8*, i8** %16, align 8
  %42 = load i64, i64* %18, align 8
  %43 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %40, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %39, i64 -1, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ugt i64 %42, %46
  %48 = select i1 %47, i64 %46, i64 %42
  %49 = tail call i32 @memcmp(i8* %41, i8* %44, i64 %48) #15
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %38
  %52 = icmp ult i64 %42, %46
  br i1 %52, label %55, label %59

53:                                               ; preds = %38
  %54 = icmp slt i32 %49, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %51, %53
  %56 = bitcast %"class.base::BasicStringPiece"* %39 to i8*
  %57 = bitcast %"class.base::BasicStringPiece"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false)
  %58 = icmp eq %"class.base::BasicStringPiece"* %40, %2
  br i1 %58, label %59, label %38

59:                                               ; preds = %51, %55, %53
  %60 = phi %"class.base::BasicStringPiece"* [ %39, %53 ], [ %2, %55 ], [ %39, %51 ]
  %61 = bitcast %"class.base::BasicStringPiece"* %60 to i8*
  br label %62

62:                                               ; preds = %31, %28, %34, %59
  %63 = phi i8* [ %61, %59 ], [ %7, %34 ], [ %33, %31 ], [ %30, %28 ]
  %64 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false)
  %65 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 1
  %66 = icmp eq %"class.base::BasicStringPiece"* %65, %1
  br i1 %66, label %67, label %11

67:                                               ; preds = %62, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeE(%"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::identity, std::__1::less<void>, std::__1::vector<base::BasicStringPiece<char>, std::__1::allocator<base::BasicStringPiece<char> > > >::value_compare"* dereferenceable(1), i64, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #0 comdat {
  %8 = ptrtoint %"class.base::BasicStringPiece"* %0 to i64
  %9 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %10 = ptrtoint %"class.base::BasicStringPiece"* %6 to i64
  %11 = icmp sgt i64 %4, %5
  br i1 %11, label %37, label %12

12:                                               ; preds = %7
  %13 = icmp eq %"class.base::BasicStringPiece"* %0, %1
  br i1 %13, label %227, label %14

14:                                               ; preds = %12
  %15 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 0
  %16 = ptrtoint i8** %15 to i64
  %17 = sub i64 %16, %8
  %18 = lshr i64 %17, 4
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %14, %22
  %23 = phi %"class.base::BasicStringPiece"* [ %29, %22 ], [ %6, %14 ]
  %24 = phi %"class.base::BasicStringPiece"* [ %28, %22 ], [ %0, %14 ]
  %25 = phi i64 [ %30, %22 ], [ %20, %14 ]
  %26 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  %27 = bitcast %"class.base::BasicStringPiece"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %24, i64 1
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %22, !llvm.loop !43

32:                                               ; preds = %22, %14
  %33 = phi %"class.base::BasicStringPiece"* [ undef, %14 ], [ %29, %22 ]
  %34 = phi %"class.base::BasicStringPiece"* [ %6, %14 ], [ %29, %22 ]
  %35 = phi %"class.base::BasicStringPiece"* [ %0, %14 ], [ %28, %22 ]
  %36 = icmp ult i64 %17, 48
  br i1 %36, label %62, label %108

37:                                               ; preds = %7
  %38 = icmp eq %"class.base::BasicStringPiece"* %1, %2
  br i1 %38, label %227, label %39

39:                                               ; preds = %37
  %40 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 -1, i32 0
  %41 = ptrtoint i8** %40 to i64
  %42 = sub i64 %41, %9
  %43 = lshr i64 %42, 4
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %39, %47
  %48 = phi %"class.base::BasicStringPiece"* [ %54, %47 ], [ %6, %39 ]
  %49 = phi %"class.base::BasicStringPiece"* [ %53, %47 ], [ %1, %39 ]
  %50 = phi i64 [ %55, %47 ], [ %45, %39 ]
  %51 = bitcast %"class.base::BasicStringPiece"* %48 to i8*
  %52 = bitcast %"class.base::BasicStringPiece"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 16, i1 false)
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %49, i64 1
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %48, i64 1
  %55 = add i64 %50, -1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %47, !llvm.loop !44

57:                                               ; preds = %47, %39
  %58 = phi %"class.base::BasicStringPiece"* [ undef, %39 ], [ %54, %47 ]
  %59 = phi %"class.base::BasicStringPiece"* [ %6, %39 ], [ %54, %47 ]
  %60 = phi %"class.base::BasicStringPiece"* [ %1, %39 ], [ %53, %47 ]
  %61 = icmp ult i64 %42, 48
  br i1 %61, label %128, label %207

62:                                               ; preds = %108, %32
  %63 = phi %"class.base::BasicStringPiece"* [ %33, %32 ], [ %126, %108 ]
  %64 = icmp eq %"class.base::BasicStringPiece"* %63, %6
  br i1 %64, label %227, label %65

65:                                               ; preds = %62, %103
  %66 = phi %"class.base::BasicStringPiece"* [ %105, %103 ], [ %6, %62 ]
  %67 = phi %"class.base::BasicStringPiece"* [ %106, %103 ], [ %0, %62 ]
  %68 = phi %"class.base::BasicStringPiece"* [ %104, %103 ], [ %1, %62 ]
  %69 = icmp eq %"class.base::BasicStringPiece"* %68, %2
  br i1 %69, label %70, label %78

70:                                               ; preds = %65
  %71 = ptrtoint %"class.base::BasicStringPiece"* %63 to i64
  %72 = ptrtoint %"class.base::BasicStringPiece"* %66 to i64
  %73 = sub i64 %71, %72
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %227, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.base::BasicStringPiece"* %67 to i8*
  %77 = bitcast %"class.base::BasicStringPiece"* %66 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %73, i1 false) #15
  br label %227

78:                                               ; preds = %65
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %66, i64 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %66, i64 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp ugt i64 %82, %86
  %88 = select i1 %87, i64 %86, i64 %82
  %89 = tail call i32 @memcmp(i8* %80, i8* %84, i64 %88) #15
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %78
  %92 = icmp ult i64 %82, %86
  br i1 %92, label %95, label %99

93:                                               ; preds = %78
  %94 = icmp slt i32 %89, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %93, %91
  %96 = bitcast %"class.base::BasicStringPiece"* %67 to i8*
  %97 = bitcast %"class.base::BasicStringPiece"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 16, i1 false) #15
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %68, i64 1
  br label %103

99:                                               ; preds = %93, %91
  %100 = bitcast %"class.base::BasicStringPiece"* %67 to i8*
  %101 = bitcast %"class.base::BasicStringPiece"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #15
  %102 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %66, i64 1
  br label %103

103:                                              ; preds = %99, %95
  %104 = phi %"class.base::BasicStringPiece"* [ %98, %95 ], [ %68, %99 ]
  %105 = phi %"class.base::BasicStringPiece"* [ %66, %95 ], [ %102, %99 ]
  %106 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %67, i64 1
  %107 = icmp eq %"class.base::BasicStringPiece"* %105, %63
  br i1 %107, label %227, label %65

108:                                              ; preds = %32, %108
  %109 = phi %"class.base::BasicStringPiece"* [ %126, %108 ], [ %34, %32 ]
  %110 = phi %"class.base::BasicStringPiece"* [ %125, %108 ], [ %35, %32 ]
  %111 = bitcast %"class.base::BasicStringPiece"* %109 to i8*
  %112 = bitcast %"class.base::BasicStringPiece"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false)
  %113 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %110, i64 1
  %114 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %109, i64 1
  %115 = bitcast %"class.base::BasicStringPiece"* %114 to i8*
  %116 = bitcast %"class.base::BasicStringPiece"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 16, i1 false)
  %117 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %110, i64 2
  %118 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %109, i64 2
  %119 = bitcast %"class.base::BasicStringPiece"* %118 to i8*
  %120 = bitcast %"class.base::BasicStringPiece"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false)
  %121 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %110, i64 3
  %122 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %109, i64 3
  %123 = bitcast %"class.base::BasicStringPiece"* %122 to i8*
  %124 = bitcast %"class.base::BasicStringPiece"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false)
  %125 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %110, i64 4
  %126 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %109, i64 4
  %127 = icmp eq %"class.base::BasicStringPiece"* %125, %1
  br i1 %127, label %62, label %108

128:                                              ; preds = %207, %57
  %129 = phi %"class.base::BasicStringPiece"* [ %58, %57 ], [ %225, %207 ]
  %130 = icmp eq %"class.base::BasicStringPiece"* %129, %6
  br i1 %130, label %227, label %131

131:                                              ; preds = %128, %198
  %132 = phi %"class.base::BasicStringPiece"* [ %205, %198 ], [ %2, %128 ]
  %133 = phi %"class.base::BasicStringPiece"* [ %201, %198 ], [ %129, %128 ]
  %134 = phi %"class.base::BasicStringPiece"* [ %200, %198 ], [ %1, %128 ]
  %135 = icmp eq %"class.base::BasicStringPiece"* %134, %0
  br i1 %135, label %136, label %178

136:                                              ; preds = %131
  %137 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 -1, i32 0
  %138 = ptrtoint i8** %137 to i64
  %139 = sub i64 %138, %10
  %140 = lshr i64 %139, 4
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 3
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %154, label %144

144:                                              ; preds = %136, %144
  %145 = phi %"class.base::BasicStringPiece"* [ %148, %144 ], [ %133, %136 ]
  %146 = phi %"class.base::BasicStringPiece"* [ %149, %144 ], [ %132, %136 ]
  %147 = phi i64 [ %152, %144 ], [ %142, %136 ]
  %148 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %145, i64 -1
  %149 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %146, i64 -1
  %150 = bitcast %"class.base::BasicStringPiece"* %149 to i8*
  %151 = bitcast %"class.base::BasicStringPiece"* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 16, i1 false) #15
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %144, !llvm.loop !45

154:                                              ; preds = %144, %136
  %155 = phi %"class.base::BasicStringPiece"* [ %133, %136 ], [ %148, %144 ]
  %156 = phi %"class.base::BasicStringPiece"* [ %132, %136 ], [ %149, %144 ]
  %157 = icmp ult i64 %139, 48
  br i1 %157, label %227, label %158

158:                                              ; preds = %154, %158
  %159 = phi %"class.base::BasicStringPiece"* [ %173, %158 ], [ %155, %154 ]
  %160 = phi %"class.base::BasicStringPiece"* [ %174, %158 ], [ %156, %154 ]
  %161 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %159, i64 -1
  %162 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %160, i64 -1
  %163 = bitcast %"class.base::BasicStringPiece"* %162 to i8*
  %164 = bitcast %"class.base::BasicStringPiece"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 16, i1 false) #15
  %165 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %159, i64 -2
  %166 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %160, i64 -2
  %167 = bitcast %"class.base::BasicStringPiece"* %166 to i8*
  %168 = bitcast %"class.base::BasicStringPiece"* %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 16, i1 false) #15
  %169 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %159, i64 -3
  %170 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %160, i64 -3
  %171 = bitcast %"class.base::BasicStringPiece"* %170 to i8*
  %172 = bitcast %"class.base::BasicStringPiece"* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %172, i64 16, i1 false) #15
  %173 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %159, i64 -4
  %174 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %160, i64 -4
  %175 = bitcast %"class.base::BasicStringPiece"* %174 to i8*
  %176 = bitcast %"class.base::BasicStringPiece"* %173 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %176, i64 16, i1 false) #15
  %177 = icmp eq %"class.base::BasicStringPiece"* %173, %6
  br i1 %177, label %227, label %158

178:                                              ; preds = %131
  %179 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %134, i64 -1
  %180 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 -1
  %181 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %180, i64 0, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 -1, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %179, i64 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %134, i64 -1, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = icmp ugt i64 %184, %188
  %190 = select i1 %189, i64 %188, i64 %184
  %191 = tail call i32 @memcmp(i8* %182, i8* %186, i64 %190) #15
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %178
  %194 = icmp ult i64 %184, %188
  br i1 %194, label %198, label %197

195:                                              ; preds = %178
  %196 = icmp slt i32 %191, 0
  br i1 %196, label %198, label %197

197:                                              ; preds = %195, %193
  br label %198

198:                                              ; preds = %193, %195, %197
  %199 = phi %"class.base::BasicStringPiece"* [ %180, %197 ], [ %179, %195 ], [ %179, %193 ]
  %200 = phi %"class.base::BasicStringPiece"* [ %134, %197 ], [ %179, %195 ], [ %179, %193 ]
  %201 = phi %"class.base::BasicStringPiece"* [ %180, %197 ], [ %133, %195 ], [ %133, %193 ]
  %202 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %132, i64 -1
  %203 = bitcast %"class.base::BasicStringPiece"* %202 to i8*
  %204 = bitcast %"class.base::BasicStringPiece"* %199 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 16, i1 false) #15
  %205 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %132, i64 -1
  %206 = icmp eq %"class.base::BasicStringPiece"* %201, %6
  br i1 %206, label %227, label %131

207:                                              ; preds = %57, %207
  %208 = phi %"class.base::BasicStringPiece"* [ %225, %207 ], [ %59, %57 ]
  %209 = phi %"class.base::BasicStringPiece"* [ %224, %207 ], [ %60, %57 ]
  %210 = bitcast %"class.base::BasicStringPiece"* %208 to i8*
  %211 = bitcast %"class.base::BasicStringPiece"* %209 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %211, i64 16, i1 false)
  %212 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %209, i64 1
  %213 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %208, i64 1
  %214 = bitcast %"class.base::BasicStringPiece"* %213 to i8*
  %215 = bitcast %"class.base::BasicStringPiece"* %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* align 8 %215, i64 16, i1 false)
  %216 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %209, i64 2
  %217 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %208, i64 2
  %218 = bitcast %"class.base::BasicStringPiece"* %217 to i8*
  %219 = bitcast %"class.base::BasicStringPiece"* %216 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 16, i1 false)
  %220 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %209, i64 3
  %221 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %208, i64 3
  %222 = bitcast %"class.base::BasicStringPiece"* %221 to i8*
  %223 = bitcast %"class.base::BasicStringPiece"* %220 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 16, i1 false)
  %224 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %209, i64 4
  %225 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %208, i64 4
  %226 = icmp eq %"class.base::BasicStringPiece"* %224, %2
  br i1 %226, label %128, label %207

227:                                              ; preds = %103, %198, %154, %158, %37, %12, %128, %75, %70, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE13append_uniqueIRNS3_12basic_stringIcS5_NSB_IcEEEEEENS3_4pairINS3_11__wrap_iterIPS6_EEbEESN_SN_OT_(%"class.base::internal::flat_tree"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %6 = ptrtoint %"class.base::BasicStringPiece"* %2 to i64
  %7 = sub i64 %6, %5
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %50, label %9

9:                                                ; preds = %4
  %10 = ashr exact i64 %7, 4
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  br label %23

23:                                               ; preds = %44, %9
  %24 = phi %"class.base::BasicStringPiece"* [ %1, %9 ], [ %46, %44 ]
  %25 = phi i64 [ %10, %9 ], [ %45, %44 ]
  %26 = lshr i64 %25, 1
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %24, i64 %26
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %24, i64 %26, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, %22
  %33 = select i1 %32, i64 %22, i64 %31
  %34 = tail call i32 @memcmp(i8* %29, i8* %18, i64 %33) #15
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %23
  %37 = icmp ult i64 %31, %22
  br i1 %37, label %40, label %44

38:                                               ; preds = %23
  %39 = icmp slt i32 %34, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %38, %36
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 1
  %42 = xor i64 %26, -1
  %43 = add i64 %25, %42
  br label %44

44:                                               ; preds = %40, %38, %36
  %45 = phi i64 [ %43, %40 ], [ %26, %38 ], [ %26, %36 ]
  %46 = phi %"class.base::BasicStringPiece"* [ %41, %40 ], [ %24, %38 ], [ %24, %36 ]
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %23

48:                                               ; preds = %44
  %49 = ptrtoint %"class.base::BasicStringPiece"* %46 to i64
  br label %50

50:                                               ; preds = %48, %4
  %51 = phi i64 [ %49, %48 ], [ %5, %4 ]
  %52 = phi %"class.base::BasicStringPiece"* [ %46, %48 ], [ %1, %4 ]
  %53 = icmp eq %"class.base::BasicStringPiece"* %52, %2
  br i1 %53, label %79, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %62 = select i1 %58, i8* %60, i8* %61
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %57 to i64
  %66 = select i1 %58, i64 %64, i64 %65
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp ugt i64 %66, %70
  %72 = select i1 %71, i64 %70, i64 %66
  %73 = tail call i32 @memcmp(i8* %62, i8* %68, i64 %72) #15
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %54
  %76 = icmp ult i64 %66, %70
  br i1 %76, label %79, label %116

77:                                               ; preds = %54
  %78 = icmp slt i32 %73, 0
  br i1 %78, label %79, label %116

79:                                               ; preds = %75, %50, %77
  %80 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %51, %82
  %84 = ashr exact i64 %83, 4
  %85 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %86 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %85, align 8
  %87 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %88 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %87, align 8
  %89 = icmp ult %"class.base::BasicStringPiece"* %86, %88
  br i1 %89, label %90, label %110

90:                                               ; preds = %79
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %86, i64 0, i32 0
  %92 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %99 = select i1 %95, i8* %97, i8* %98
  store i8* %99, i8** %91, align 8
  %100 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %86, i64 0, i32 1
  %101 = load i8, i8* %93, align 1
  %102 = icmp slt i8 %101, 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = zext i8 %101 to i64
  %106 = select i1 %102, i64 %104, i64 %105
  store i64 %106, i64* %100, align 8
  %107 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %86, i64 1
  %108 = ptrtoint %"class.base::BasicStringPiece"* %107 to i64
  %109 = bitcast %"class.base::BasicStringPiece"** %85 to i64*
  store i64 %108, i64* %109, align 8
  br label %112

110:                                              ; preds = %79
  %111 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRNS_12basic_stringIcS4_NS6_IcEEEEEEEvDpOT_(%"class.std::__1::vector.142"* %111, %"class.std::__1::basic_string"* dereferenceable(24) %3) #15
  br label %112

112:                                              ; preds = %90, %110
  %113 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %80, align 8
  %114 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %113, i64 %84
  %115 = ptrtoint %"class.base::BasicStringPiece"* %114 to i64
  br label %116

116:                                              ; preds = %75, %77, %112
  %117 = phi i64 [ %115, %112 ], [ %51, %77 ], [ %51, %75 ]
  %118 = phi i8 [ 1, %112 ], [ 0, %77 ], [ 0, %75 ]
  %119 = inttoptr i64 %117 to %"class.base::BasicStringPiece"*
  %120 = insertvalue { %"class.base::BasicStringPiece"*, i8 } undef, %"class.base::BasicStringPiece"* %119, 0
  %121 = insertvalue { %"class.base::BasicStringPiece"*, i8 } %120, i8 %118, 1
  ret { %"class.base::BasicStringPiece"*, i8 } %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE21emplace_hint_key_argsIS6_JS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEENSH_IPKS6_EERKT_DpOT0_(%"class.base::internal::flat_tree"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %5, align 8
  %7 = icmp eq %"class.base::BasicStringPiece"* %6, %1
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 -1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %12, %16
  %18 = select i1 %17, i64 %16, i64 %12
  %19 = tail call i32 @memcmp(i8* %10, i8* %14, i64 %18) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %8
  %22 = icmp ult i64 %12, %16
  br i1 %22, label %25, label %58

23:                                               ; preds = %8
  %24 = icmp slt i32 %19, 0
  br i1 %24, label %25, label %58

25:                                               ; preds = %21, %4, %23
  %26 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %28 = icmp eq %"class.base::BasicStringPiece"* %27, %1
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %33, %37
  %39 = select i1 %38, i64 %37, i64 %33
  %40 = tail call i32 @memcmp(i8* %31, i8* %35, i64 %39) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %29
  %43 = icmp ult i64 %33, %37
  br i1 %43, label %46, label %49

44:                                               ; preds = %29
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %42, %25, %44
  %47 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %48 = tail call %"class.base::BasicStringPiece"* @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE7emplaceIJS5_EEENS_11__wrap_iterIPS5_EENSA_IPKS5_EEDpOT_(%"class.std::__1::vector.142"* %47, %"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* dereferenceable(16) %3) #15
  br label %62

49:                                               ; preds = %42, %44
  %50 = tail call i32 @memcmp(i8* %35, i8* %31, i64 %39) #15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = icmp eq i64 %37, %33
  %54 = xor i1 %38, true
  %55 = or i1 %53, %54
  br i1 %55, label %62, label %58

56:                                               ; preds = %49
  %57 = icmp slt i32 %50, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %52, %21, %56, %23
  %59 = tail call { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE16emplace_key_argsIS6_JS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree"* %0, %"class.base::BasicStringPiece"* dereferenceable(16) %2, %"class.base::BasicStringPiece"* dereferenceable(16) %3)
  %60 = extractvalue { %"class.base::BasicStringPiece"*, i8 } %59, 0
  %61 = extractvalue { %"class.base::BasicStringPiece"*, i8 } %59, 1
  br label %62

62:                                               ; preds = %56, %52, %58, %46
  %63 = phi %"class.base::BasicStringPiece"* [ %48, %46 ], [ %60, %58 ], [ %1, %52 ], [ %1, %56 ]
  %64 = phi i8 [ 1, %46 ], [ %61, %58 ], [ 0, %52 ], [ 0, %56 ]
  %65 = insertvalue { %"class.base::BasicStringPiece"*, i8 } undef, %"class.base::BasicStringPiece"* %63, 0
  %66 = insertvalue { %"class.base::BasicStringPiece"*, i8 } %65, i8 %64, 1
  ret { %"class.base::BasicStringPiece"*, i8 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::BasicStringPiece"*, i8 } @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8identityENS3_4lessIvEENS3_6vectorIS6_NS3_9allocatorIS6_EEEEE16emplace_key_argsIS6_JS6_EEENS3_4pairINS3_11__wrap_iterIPS6_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::BasicStringPiece"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.base::BasicStringPiece"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"class.base::BasicStringPiece"*
  br i1 %11, label %46, label %13

13:                                               ; preds = %3
  %14 = ashr exact i64 %10, 4
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %19

19:                                               ; preds = %40, %13
  %20 = phi %"class.base::BasicStringPiece"* [ %5, %13 ], [ %42, %40 ]
  %21 = phi i64 [ %14, %13 ], [ %41, %40 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 %22
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 %22, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %27, %18
  %29 = select i1 %28, i64 %18, i64 %27
  %30 = tail call i32 @memcmp(i8* %25, i8* %16, i64 %29) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %19
  %33 = icmp ult i64 %27, %18
  br i1 %33, label %36, label %40

34:                                               ; preds = %19
  %35 = icmp slt i32 %30, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %34, %32
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 1
  %38 = xor i64 %22, -1
  %39 = add i64 %21, %38
  br label %40

40:                                               ; preds = %36, %34, %32
  %41 = phi i64 [ %39, %36 ], [ %22, %34 ], [ %22, %32 ]
  %42 = phi %"class.base::BasicStringPiece"* [ %37, %36 ], [ %20, %34 ], [ %20, %32 ]
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %40
  %45 = ptrtoint %"class.base::BasicStringPiece"* %42 to i64
  br label %46

46:                                               ; preds = %44, %3
  %47 = phi i64 [ %45, %44 ], [ %9, %3 ]
  %48 = phi %"class.base::BasicStringPiece"* [ %42, %44 ], [ %5, %3 ]
  %49 = icmp eq %"class.base::BasicStringPiece"* %48, %12
  br i1 %49, label %67, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %48, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %48, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp ugt i64 %54, %58
  %60 = select i1 %59, i64 %58, i64 %54
  %61 = tail call i32 @memcmp(i8* %52, i8* %56, i64 %60) #15
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %50
  %64 = icmp ult i64 %54, %58
  br i1 %64, label %67, label %71

65:                                               ; preds = %50
  %66 = icmp slt i32 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %63, %46, %65
  %68 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %69 = tail call %"class.base::BasicStringPiece"* @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE7emplaceIJS5_EEENS_11__wrap_iterIPS5_EENSA_IPKS5_EEDpOT_(%"class.std::__1::vector.142"* %68, %"class.base::BasicStringPiece"* %48, %"class.base::BasicStringPiece"* dereferenceable(16) %2) #15
  %70 = ptrtoint %"class.base::BasicStringPiece"* %69 to i64
  br label %71

71:                                               ; preds = %63, %65, %67
  %72 = phi i64 [ %70, %67 ], [ %47, %65 ], [ %47, %63 ]
  %73 = phi i8 [ 1, %67 ], [ 0, %65 ], [ 0, %63 ]
  %74 = inttoptr i64 %72 to %"class.base::BasicStringPiece"*
  %75 = insertvalue { %"class.base::BasicStringPiece"*, i8 } undef, %"class.base::BasicStringPiece"* %74, 0
  %76 = insertvalue { %"class.base::BasicStringPiece"*, i8 } %75, i8 %73, 1
  ret { %"class.base::BasicStringPiece"*, i8 } %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::BasicStringPiece"* @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE7emplaceIJS5_EEENS_11__wrap_iterIPS5_EENSA_IPKS5_EEDpOT_(%"class.std::__1::vector.142"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.base::BasicStringPiece"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.213", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %11 = icmp ult %"class.base::BasicStringPiece"* %8, %10
  %12 = ptrtoint %"class.base::BasicStringPiece"* %8 to i64
  %13 = ptrtoint %"class.base::BasicStringPiece"* %10 to i64
  br i1 %11, label %14, label %140

14:                                               ; preds = %3
  %15 = icmp eq %"class.base::BasicStringPiece"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  %18 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #15
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 1
  %20 = ptrtoint %"class.base::BasicStringPiece"* %19 to i64
  %21 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %291

22:                                               ; preds = %14
  %23 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  %24 = load i8, i8* %23, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %23, i64 2
  %28 = load i8, i8* %27, align 2
  %29 = getelementptr inbounds i8, i8* %23, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds i8, i8* %23, i64 4
  %32 = load i8, i8* %31, align 4
  %33 = getelementptr inbounds i8, i8* %23, i64 5
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %23, i64 6
  %36 = load i8, i8* %35, align 2
  %37 = getelementptr inbounds i8, i8* %23, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %40 = bitcast i64* %39 to i8*
  %41 = load i8, i8* %40, align 8
  %42 = getelementptr inbounds i8, i8* %23, i64 9
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %23, i64 10
  %45 = load i8, i8* %44, align 2
  %46 = getelementptr inbounds i8, i8* %23, i64 11
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds i8, i8* %23, i64 12
  %49 = load i8, i8* %48, align 4
  %50 = getelementptr inbounds i8, i8* %23, i64 13
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds i8, i8* %23, i64 14
  %53 = load i8, i8* %52, align 2
  %54 = getelementptr inbounds i8, i8* %23, i64 15
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 1
  %57 = ptrtoint %"class.base::BasicStringPiece"* %56 to i64
  %58 = sub i64 %12, %57
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 %59
  %61 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  %62 = icmp ult %"class.base::BasicStringPiece"* %60, %8
  br i1 %62, label %63, label %92

63:                                               ; preds = %22
  %64 = sub nsw i64 0, %59
  %65 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 %64, i32 0
  %66 = bitcast i8** %65 to i8*
  %67 = xor i64 %4, -1
  %68 = getelementptr i8, i8* %66, i64 %67
  %69 = ptrtoint i8* %68 to i64
  %70 = lshr i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %63, %74
  %75 = phi %"class.base::BasicStringPiece"* [ %81, %74 ], [ %8, %63 ]
  %76 = phi %"class.base::BasicStringPiece"* [ %80, %74 ], [ %60, %63 ]
  %77 = phi i64 [ %82, %74 ], [ %72, %63 ]
  %78 = bitcast %"class.base::BasicStringPiece"* %75 to i8*
  %79 = bitcast %"class.base::BasicStringPiece"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false) #15
  %80 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %76, i64 1
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %75, i64 1
  %82 = add i64 %77, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %74, !llvm.loop !46

84:                                               ; preds = %74, %63
  %85 = phi %"class.base::BasicStringPiece"* [ %8, %63 ], [ %81, %74 ]
  %86 = phi %"class.base::BasicStringPiece"* [ %60, %63 ], [ %80, %74 ]
  %87 = phi %"class.base::BasicStringPiece"* [ undef, %63 ], [ %81, %74 ]
  %88 = icmp ult i8* %68, inttoptr (i64 48 to i8*)
  br i1 %88, label %89, label %102

89:                                               ; preds = %102, %84
  %90 = phi %"class.base::BasicStringPiece"* [ %87, %84 ], [ %120, %102 ]
  %91 = ptrtoint %"class.base::BasicStringPiece"* %90 to i64
  br label %92

92:                                               ; preds = %89, %22
  %93 = phi i64 [ %91, %89 ], [ %12, %22 ]
  store i64 %93, i64* %61, align 8
  %94 = icmp eq i64 %58, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  br label %122

97:                                               ; preds = %92
  %98 = sub nsw i64 0, %59
  %99 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 %98
  %100 = bitcast %"class.base::BasicStringPiece"* %99 to i8*
  %101 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 %58, i1 false) #15
  br label %122

102:                                              ; preds = %84, %102
  %103 = phi %"class.base::BasicStringPiece"* [ %120, %102 ], [ %85, %84 ]
  %104 = phi %"class.base::BasicStringPiece"* [ %119, %102 ], [ %86, %84 ]
  %105 = bitcast %"class.base::BasicStringPiece"* %103 to i8*
  %106 = bitcast %"class.base::BasicStringPiece"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #15
  %107 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %104, i64 1
  %108 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 1
  %109 = bitcast %"class.base::BasicStringPiece"* %108 to i8*
  %110 = bitcast %"class.base::BasicStringPiece"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #15
  %111 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %104, i64 2
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 2
  %113 = bitcast %"class.base::BasicStringPiece"* %112 to i8*
  %114 = bitcast %"class.base::BasicStringPiece"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #15
  %115 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %104, i64 3
  %116 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 3
  %117 = bitcast %"class.base::BasicStringPiece"* %116 to i8*
  %118 = bitcast %"class.base::BasicStringPiece"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #15
  %119 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %104, i64 4
  %120 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 4
  %121 = icmp ult %"class.base::BasicStringPiece"* %119, %8
  br i1 %121, label %102, label %89

122:                                              ; preds = %95, %97
  %123 = phi i8* [ %96, %95 ], [ %101, %97 ]
  store i8 %24, i8* %123, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  store i8 %26, i8* %124, align 1
  %125 = getelementptr inbounds i8, i8* %123, i64 2
  store i8 %28, i8* %125, align 2
  %126 = getelementptr inbounds i8, i8* %123, i64 3
  store i8 %30, i8* %126, align 1
  %127 = getelementptr inbounds i8, i8* %123, i64 4
  store i8 %32, i8* %127, align 4
  %128 = getelementptr inbounds i8, i8* %123, i64 5
  store i8 %34, i8* %128, align 1
  %129 = getelementptr inbounds i8, i8* %123, i64 6
  store i8 %36, i8* %129, align 2
  %130 = getelementptr inbounds i8, i8* %123, i64 7
  store i8 %38, i8* %130, align 1
  %131 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %132 = bitcast i64* %131 to i8*
  store i8 %41, i8* %132, align 8
  %133 = getelementptr inbounds i8, i8* %123, i64 9
  store i8 %43, i8* %133, align 1
  %134 = getelementptr inbounds i8, i8* %123, i64 10
  store i8 %45, i8* %134, align 2
  %135 = getelementptr inbounds i8, i8* %123, i64 11
  store i8 %47, i8* %135, align 1
  %136 = getelementptr inbounds i8, i8* %123, i64 12
  store i8 %49, i8* %136, align 4
  %137 = getelementptr inbounds i8, i8* %123, i64 13
  store i8 %51, i8* %137, align 1
  %138 = getelementptr inbounds i8, i8* %123, i64 14
  store i8 %53, i8* %138, align 2
  %139 = getelementptr inbounds i8, i8* %123, i64 15
  store i8 %55, i8* %139, align 1
  br label %291

140:                                              ; preds = %3
  %141 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2
  %142 = bitcast %"struct.std::__1::__split_buffer.213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %142) #15
  %143 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 0
  %144 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 1
  %145 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 2
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 3, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %5, i64 0, i32 3, i32 1, i32 0
  %148 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  %149 = bitcast %"class.std::__1::vector.142"* %0 to i64*
  %150 = bitcast %"struct.std::__1::__split_buffer.213"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 40, i1 false)
  %151 = load i64, i64* %149, align 8
  %152 = sub i64 %12, %151
  %153 = ashr exact i64 %152, 4
  %154 = add nsw i64 %153, 1
  %155 = icmp ugt i64 %154, 1152921504606846975
  br i1 %155, label %156, label %158

156:                                              ; preds = %140
  %157 = bitcast %"class.std::__1::vector.142"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %157) #17
  unreachable

158:                                              ; preds = %140
  %159 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  %160 = sub i64 %13, %151
  %161 = ashr exact i64 %160, 4
  %162 = icmp ult i64 %161, 576460752303423487
  br i1 %162, label %167, label %163

163:                                              ; preds = %158
  %164 = sub i64 %4, %151
  %165 = ashr exact i64 %164, 4
  store %"class.base::BasicStringPiece"* null, %"class.base::BasicStringPiece"** %146, align 8
  %166 = bitcast %"class.std::__1::allocator.147"** %147 to %"class.std::__1::__compressed_pair.144"**
  store %"class.std::__1::__compressed_pair.144"* %141, %"class.std::__1::__compressed_pair.144"** %166, align 8
  br label %178

167:                                              ; preds = %158
  %168 = ashr exact i64 %160, 3
  %169 = icmp ult i64 %168, %154
  %170 = select i1 %169, i64 %154, i64 %168
  %171 = sub i64 %4, %151
  %172 = ashr exact i64 %171, 4
  store %"class.base::BasicStringPiece"* null, %"class.base::BasicStringPiece"** %146, align 8
  %173 = bitcast %"class.std::__1::allocator.147"** %147 to %"class.std::__1::__compressed_pair.144"**
  store %"class.std::__1::__compressed_pair.144"* %141, %"class.std::__1::__compressed_pair.144"** %173, align 8
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %167
  %176 = icmp ugt i64 %170, 1152921504606846975
  br i1 %176, label %177, label %178

177:                                              ; preds = %175
  tail call void @abort() #17
  unreachable

178:                                              ; preds = %163, %175
  %179 = phi i64 [ 1152921504606846975, %163 ], [ %170, %175 ]
  %180 = phi i64 [ %165, %163 ], [ %172, %175 ]
  %181 = shl i64 %179, 4
  %182 = tail call i8* @_Znwm(i64 %181) #16
  %183 = bitcast i8* %182 to %"class.base::BasicStringPiece"*
  br label %184

184:                                              ; preds = %167, %178
  %185 = phi i64 [ %180, %178 ], [ %172, %167 ]
  %186 = phi i64 [ %179, %178 ], [ 0, %167 ]
  %187 = phi %"class.base::BasicStringPiece"* [ %183, %178 ], [ null, %167 ]
  store %"class.base::BasicStringPiece"* %187, %"class.base::BasicStringPiece"** %143, align 8
  %188 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %187, i64 %185
  store %"class.base::BasicStringPiece"* %188, %"class.base::BasicStringPiece"** %145, align 8
  store %"class.base::BasicStringPiece"* %188, %"class.base::BasicStringPiece"** %144, align 8
  %189 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %187, i64 %186
  store %"class.base::BasicStringPiece"* %189, %"class.base::BasicStringPiece"** %146, align 8
  call void @_ZNSt3__114__split_bufferIN4base16BasicStringPieceIcNS_11char_traitsIcEEEERNS_9allocatorIS5_EEE12emplace_backIJS5_EEEvDpOT_(%"struct.std::__1::__split_buffer.213"* nonnull %5, %"class.base::BasicStringPiece"* dereferenceable(16) %2)
  %190 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %144, align 8
  %191 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %192 = ptrtoint %"class.base::BasicStringPiece"* %191 to i64
  %193 = sub i64 %4, %192
  %194 = ashr exact i64 %193, 4
  %195 = sub nsw i64 0, %194
  %196 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %190, i64 %195
  store %"class.base::BasicStringPiece"* %196, %"class.base::BasicStringPiece"** %144, align 8
  %197 = icmp sgt i64 %193, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %184
  %199 = bitcast %"class.base::BasicStringPiece"* %196 to i8*
  %200 = bitcast %"class.base::BasicStringPiece"* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 %193, i1 false) #15
  br label %201

201:                                              ; preds = %198, %184
  %202 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %203 = icmp eq %"class.base::BasicStringPiece"* %202, %1
  br i1 %203, label %204, label %208

204:                                              ; preds = %201
  %205 = ptrtoint %"class.base::BasicStringPiece"* %202 to i64
  %206 = bitcast %"class.base::BasicStringPiece"** %145 to i64*
  %207 = load i64, i64* %206, align 8
  br label %265

208:                                              ; preds = %201
  %209 = bitcast %"class.base::BasicStringPiece"** %145 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %202, i64 -1, i32 0
  %212 = ptrtoint i8** %211 to i64
  %213 = sub i64 %212, %4
  %214 = lshr i64 %213, 4
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 3
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %231, label %218

218:                                              ; preds = %208, %218
  %219 = phi i8* [ %226, %218 ], [ %210, %208 ]
  %220 = phi %"class.base::BasicStringPiece"* [ %223, %218 ], [ %1, %208 ]
  %221 = phi i64 [ %227, %218 ], [ %216, %208 ]
  %222 = bitcast %"class.base::BasicStringPiece"* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %222, i64 16, i1 false) #15
  %223 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %220, i64 1
  %224 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %225 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %224, i64 1
  store %"class.base::BasicStringPiece"* %225, %"class.base::BasicStringPiece"** %145, align 8
  %226 = bitcast %"class.base::BasicStringPiece"* %225 to i8*
  %227 = add i64 %221, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %218, !llvm.loop !47

229:                                              ; preds = %218
  %230 = bitcast %"class.base::BasicStringPiece"* %225 to i8*
  br label %231

231:                                              ; preds = %208, %229
  %232 = phi %"class.base::BasicStringPiece"* [ undef, %208 ], [ %225, %229 ]
  %233 = phi i8* [ %210, %208 ], [ %230, %229 ]
  %234 = phi %"class.base::BasicStringPiece"* [ %1, %208 ], [ %223, %229 ]
  %235 = icmp ult i64 %213, 48
  br i1 %235, label %260, label %236

236:                                              ; preds = %231, %236
  %237 = phi i8* [ %259, %236 ], [ %233, %231 ]
  %238 = phi %"class.base::BasicStringPiece"* [ %255, %236 ], [ %234, %231 ]
  %239 = bitcast %"class.base::BasicStringPiece"* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %239, i64 16, i1 false) #15
  %240 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 1
  %241 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %242 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %241, i64 1
  store %"class.base::BasicStringPiece"* %242, %"class.base::BasicStringPiece"** %145, align 8
  %243 = bitcast %"class.base::BasicStringPiece"* %242 to i8*
  %244 = bitcast %"class.base::BasicStringPiece"* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %244, i64 16, i1 false) #15
  %245 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 2
  %246 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %247 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %246, i64 1
  store %"class.base::BasicStringPiece"* %247, %"class.base::BasicStringPiece"** %145, align 8
  %248 = bitcast %"class.base::BasicStringPiece"* %247 to i8*
  %249 = bitcast %"class.base::BasicStringPiece"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 8 %249, i64 16, i1 false) #15
  %250 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 3
  %251 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %252 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %251, i64 1
  store %"class.base::BasicStringPiece"* %252, %"class.base::BasicStringPiece"** %145, align 8
  %253 = bitcast %"class.base::BasicStringPiece"* %252 to i8*
  %254 = bitcast %"class.base::BasicStringPiece"* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 16, i1 false) #15
  %255 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 4
  %256 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %145, align 8
  %257 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %256, i64 1
  store %"class.base::BasicStringPiece"* %257, %"class.base::BasicStringPiece"** %145, align 8
  %258 = icmp eq %"class.base::BasicStringPiece"* %255, %202
  %259 = bitcast %"class.base::BasicStringPiece"* %257 to i8*
  br i1 %258, label %260, label %236

260:                                              ; preds = %236, %231
  %261 = phi %"class.base::BasicStringPiece"* [ %232, %231 ], [ %257, %236 ]
  %262 = ptrtoint %"class.base::BasicStringPiece"* %261 to i64
  %263 = load i64, i64* %148, align 8
  %264 = bitcast %"class.base::BasicStringPiece"** %145 to i64*
  br label %265

265:                                              ; preds = %204, %260
  %266 = phi i64* [ %206, %204 ], [ %264, %260 ]
  %267 = phi i64 [ %207, %204 ], [ %262, %260 ]
  %268 = phi i64 [ %205, %204 ], [ %263, %260 ]
  %269 = load i64, i64* %149, align 8
  %270 = bitcast %"class.base::BasicStringPiece"** %144 to i64*
  %271 = load i64, i64* %270, align 8
  store i64 %271, i64* %149, align 8
  store i64 %269, i64* %270, align 8
  store i64 %267, i64* %148, align 8
  store i64 %268, i64* %266, align 8
  %272 = load i64, i64* %159, align 8
  %273 = bitcast %"class.base::BasicStringPiece"** %146 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %159, align 8
  store i64 %272, i64* %273, align 8
  %275 = bitcast %"struct.std::__1::__split_buffer.213"* %5 to i64*
  store i64 %269, i64* %275, align 8
  %276 = inttoptr i64 %269 to %"class.base::BasicStringPiece"*
  %277 = inttoptr i64 %268 to %"class.base::BasicStringPiece"*
  %278 = icmp eq %"class.base::BasicStringPiece"* %277, %276
  br i1 %278, label %286, label %279

279:                                              ; preds = %265
  %280 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %277, i64 -1, i32 0
  %281 = ptrtoint i8** %280 to i64
  %282 = sub i64 %281, %269
  %283 = lshr i64 %282, 4
  %284 = xor i64 %283, -1
  %285 = getelementptr %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %277, i64 %284
  store %"class.base::BasicStringPiece"* %285, %"class.base::BasicStringPiece"** %145, align 8
  br label %286

286:                                              ; preds = %279, %265
  %287 = icmp eq i64 %269, 0
  br i1 %287, label %290, label %288

288:                                              ; preds = %286
  %289 = inttoptr i64 %269 to i8*
  call void @_ZdlPv(i8* %289) #16
  br label %290

290:                                              ; preds = %286, %288
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %142) #15
  br label %291

291:                                              ; preds = %16, %122, %290
  %292 = phi %"class.base::BasicStringPiece"* [ %1, %16 ], [ %1, %122 ], [ %190, %290 ]
  ret %"class.base::BasicStringPiece"* %292
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4base16BasicStringPieceIcNS_11char_traitsIcEEEERNS_9allocatorIS5_EEE12emplace_backIJS5_EEEvDpOT_(%"struct.std::__1::__split_buffer.213"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %0, i64 0, i32 2
  %4 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %5, align 8
  %7 = icmp eq %"class.base::BasicStringPiece"* %4, %6
  %8 = ptrtoint %"class.base::BasicStringPiece"* %6 to i64
  %9 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  br i1 %7, label %10, label %123

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %0, i64 0, i32 1
  %12 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.213", %"struct.std::__1::__split_buffer.213"* %0, i64 0, i32 0
  %14 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %13, align 8
  %15 = icmp ugt %"class.base::BasicStringPiece"* %12, %14
  %16 = ptrtoint %"class.base::BasicStringPiece"* %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.base::BasicStringPiece"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 4
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 %22
  %24 = ptrtoint %"class.base::BasicStringPiece"* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 4
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  %30 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.base::BasicStringPiece"* [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 %26
  store %"class.base::BasicStringPiece"* %34, %"class.base::BasicStringPiece"** %3, align 8
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 %22
  store %"class.base::BasicStringPiece"* %35, %"class.base::BasicStringPiece"** %11, align 8
  %36 = bitcast %"class.base::BasicStringPiece"* %34 to i8*
  br label %123

37:                                               ; preds = %10
  %38 = bitcast %"class.base::BasicStringPiece"** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.213"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 3
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 1152921504606846975
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 4
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to %"class.base::BasicStringPiece"*
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %50, i64 %47
  %53 = ptrtoint %"class.base::BasicStringPiece"* %52 to i64
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %50, i64 %43
  %55 = ptrtoint %"class.base::BasicStringPiece"* %54 to i64
  %56 = ptrtoint %"class.base::BasicStringPiece"* %12 to i64
  %57 = ptrtoint %"class.base::BasicStringPiece"* %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %112, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -16
  %64 = lshr i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.base::BasicStringPiece"* [ %75, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %76, %68 ], [ %53, %62 ]
  %71 = phi %"class.base::BasicStringPiece"* [ %77, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %78, %68 ], [ %66, %62 ]
  %73 = inttoptr i64 %70 to i8*
  %74 = bitcast %"class.base::BasicStringPiece"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #15
  %75 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %69, i64 1
  %76 = ptrtoint %"class.base::BasicStringPiece"* %75 to i64
  %77 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %71, i64 1
  %78 = add i64 %72, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %68, !llvm.loop !48

80:                                               ; preds = %68
  %81 = ptrtoint %"class.base::BasicStringPiece"* %75 to i64
  br label %82

82:                                               ; preds = %62, %80
  %83 = phi %"class.base::BasicStringPiece"* [ %52, %62 ], [ %75, %80 ]
  %84 = phi i64 [ %53, %62 ], [ %81, %80 ]
  %85 = phi %"class.base::BasicStringPiece"* [ %12, %62 ], [ %77, %80 ]
  %86 = icmp ult i64 %63, 48
  br i1 %86, label %109, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"class.base::BasicStringPiece"* [ %105, %87 ], [ %83, %82 ]
  %89 = phi i64 [ %106, %87 ], [ %84, %82 ]
  %90 = phi %"class.base::BasicStringPiece"* [ %107, %87 ], [ %85, %82 ]
  %91 = inttoptr i64 %89 to i8*
  %92 = bitcast %"class.base::BasicStringPiece"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 16, i1 false) #15
  %93 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 1
  %94 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 1
  %95 = bitcast %"class.base::BasicStringPiece"* %93 to i8*
  %96 = bitcast %"class.base::BasicStringPiece"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #15
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 2
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 2
  %99 = bitcast %"class.base::BasicStringPiece"* %97 to i8*
  %100 = bitcast %"class.base::BasicStringPiece"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #15
  %101 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 3
  %102 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 3
  %103 = bitcast %"class.base::BasicStringPiece"* %101 to i8*
  %104 = bitcast %"class.base::BasicStringPiece"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 16, i1 false) #15
  %105 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 4
  %106 = ptrtoint %"class.base::BasicStringPiece"* %105 to i64
  %107 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 4
  %108 = icmp eq %"class.base::BasicStringPiece"* %60, %105
  br i1 %108, label %109, label %87

109:                                              ; preds = %87, %82
  %110 = ptrtoint %"class.base::BasicStringPiece"* %60 to i64
  %111 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %13, align 8
  br label %112

112:                                              ; preds = %46, %109
  %113 = phi %"class.base::BasicStringPiece"* [ %111, %109 ], [ %14, %46 ]
  %114 = phi i64 [ %110, %109 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %115 = bitcast %"class.base::BasicStringPiece"** %11 to i64*
  store i64 %53, i64* %115, align 8
  %116 = bitcast %"class.base::BasicStringPiece"** %3 to i64*
  store i64 %114, i64* %116, align 8
  store i64 %55, i64* %38, align 8
  %117 = icmp eq %"class.base::BasicStringPiece"* %113, null
  %118 = inttoptr i64 %114 to i8*
  br i1 %117, label %123, label %119

119:                                              ; preds = %112
  %120 = bitcast %"class.base::BasicStringPiece"* %113 to i8*
  tail call void @_ZdlPv(i8* %120) #16
  %121 = bitcast %"class.base::BasicStringPiece"** %3 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %119, %112, %32, %2
  %124 = phi i8* [ %122, %119 ], [ %118, %112 ], [ %36, %32 ], [ %9, %2 ]
  %125 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #15
  %126 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %3, align 8
  %127 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %126, i64 1
  store %"class.base::BasicStringPiece"* %127, %"class.base::BasicStringPiece"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRNS_12basic_stringIcS4_NS6_IcEEEEEEEvDpOT_(%"class.std::__1::vector.142"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::BasicStringPiece"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.142"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.142"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::BasicStringPiece"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.base::BasicStringPiece"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::BasicStringPiece"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %36, i64 %35
  %39 = ptrtoint %"class.base::BasicStringPiece"* %38 to i64
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %48 = select i1 %44, i8* %46, i8* %47
  store i8* %48, i8** %40, align 8
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %36, i64 %9, i32 1
  %50 = load i8, i8* %42, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i64 %53, i64 %54
  store i64 %55, i64* %49, align 8
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 1
  %57 = ptrtoint %"class.base::BasicStringPiece"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %58, align 8
  %60 = load i64, i64* %4, align 8
  %61 = ptrtoint %"class.base::BasicStringPiece"* %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 4
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 %64
  %66 = ptrtoint %"class.base::BasicStringPiece"* %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %34
  %69 = bitcast %"class.base::BasicStringPiece"* %65 to i8*
  %70 = bitcast %"class.base::BasicStringPiece"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #15
  %71 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %58, align 8
  br label %72

72:                                               ; preds = %34, %68
  %73 = phi %"class.base::BasicStringPiece"* [ %59, %34 ], [ %71, %68 ]
  store i64 %66, i64* %6, align 8
  store i64 %57, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %74 = icmp eq %"class.base::BasicStringPiece"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.base::BasicStringPiece"* %73 to i8*
  tail call void @_ZdlPv(i8* %76) #16
  br label %77

77:                                               ; preds = %72, %75
  ret void
}

declare void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #13

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3gpu35ComputeGpuFeatureInfoForSwiftShaderEv: argument 0"}
!4 = distinct !{!4, !"_ZN3gpu35ComputeGpuFeatureInfoForSwiftShaderEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3gpu35ComputeGpuFeatureInfoForSwiftShaderEv: argument 0"}
!7 = distinct !{!7, !"_ZN3gpu35ComputeGpuFeatureInfoForSwiftShaderEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3gpu30ComputeGpuFeatureInfoWithNoGpuEv: argument 0"}
!10 = distinct !{!10, !"_ZN3gpu30ComputeGpuFeatureInfoWithNoGpuEv"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !18}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !18}
!28 = distinct !{!28, !20}
!29 = distinct !{!29, !20}
!30 = distinct !{!30, !18}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN3gpu21GetIntelGpuGenerationEjj: argument 0"}
!33 = distinct !{!33, !"_ZN3gpu21GetIntelGpuGenerationEjj"}
!34 = !{!"branch_weights", i32 1, i32 2000}
!35 = distinct !{!35, !20}
!36 = distinct !{!36, !20}
!37 = distinct !{!37, !20}
!38 = distinct !{!38, !20}
!39 = distinct !{!39, !20}
!40 = distinct !{!40, !20}
!41 = distinct !{!41, !20}
!42 = distinct !{!42, !20}
!43 = distinct !{!43, !20}
!44 = distinct !{!44, !20}
!45 = distinct !{!45, !20}
!46 = distinct !{!46, !20}
!47 = distinct !{!47, !20}
!48 = distinct !{!48, !20}
