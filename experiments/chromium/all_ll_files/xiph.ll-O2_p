; ModuleID = '../../third_party/ffmpeg/libavcodec/xiph.c'
source_filename = "../../third_party/ffmpeg/libavcodec/xiph.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @avpriv_split_xiph_headers(i8*, i32, i32, i8** nocapture, i32* nocapture) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %1, 5
  br i1 %6, label %7, label %32

7:                                                ; preds = %5
  %8 = bitcast i8* %0 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9) #2
  %11 = zext i16 %10 to i32
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %13, label %32

13:                                               ; preds = %7
  store i32 %2, i32* %4, align 4
  %14 = getelementptr inbounds i8, i8* %0, i64 2
  store i8* %14, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = sub nsw i32 %1, %15
  %17 = icmp slt i32 %16, 6
  br i1 %17, label %67, label %18

18:                                               ; preds = %13
  %19 = sext i32 %15 to i64
  %20 = getelementptr inbounds i8, i8* %14, i64 %19
  %21 = add nsw i32 %15, 6
  %22 = bitcast i8* %20 to i16*
  %23 = load i16, i16* %22, align 1
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #2
  %25 = zext i16 %24 to i32
  %26 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %20, i64 2
  %28 = getelementptr inbounds i8*, i8** %3, i64 1
  store i8* %27, i8** %28, align 8
  %29 = load i32, i32* %26, align 4
  %30 = sub nsw i32 %1, %29
  %31 = icmp sgt i32 %21, %30
  br i1 %31, label %67, label %69

32:                                               ; preds = %7, %5
  %33 = add i32 %1, -3
  %34 = icmp ult i32 %33, 2147483133
  br i1 %34, label %35, label %67

35:                                               ; preds = %32
  %36 = load i8, i8* %0, align 1
  %37 = icmp eq i8 %36, 2
  br i1 %37, label %38, label %67

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, i8* %0, i64 1
  store i32 0, i32* %4, align 4
  %40 = icmp sgt i32 %1, 3
  br i1 %40, label %45, label %56

41:                                               ; preds = %56
  %42 = getelementptr inbounds i8, i8* %58, i64 1
  %43 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 0, i32* %43, align 4
  %44 = icmp slt i32 %65, %1
  br i1 %44, label %84, label %95

45:                                               ; preds = %38, %51
  %46 = phi i32 [ %52, %51 ], [ 0, %38 ]
  %47 = phi i32 [ %53, %51 ], [ 3, %38 ]
  %48 = phi i8* [ %54, %51 ], [ %39, %38 ]
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, -1
  br i1 %50, label %51, label %56

51:                                               ; preds = %45
  %52 = add nuw nsw i32 %46, 255
  store i32 %52, i32* %4, align 4
  %53 = add nuw nsw i32 %47, 256
  %54 = getelementptr inbounds i8, i8* %48, i64 1
  %55 = icmp slt i32 %53, %1
  br i1 %55, label %45, label %56

56:                                               ; preds = %45, %51, %38
  %57 = phi i32 [ 0, %38 ], [ %52, %51 ], [ %46, %45 ]
  %58 = phi i8* [ %39, %38 ], [ %54, %51 ], [ %48, %45 ]
  %59 = phi i32 [ 3, %38 ], [ %53, %51 ], [ %47, %45 ]
  %60 = load i8, i8* %58, align 1
  %61 = zext i8 %60 to i32
  %62 = add nsw i32 %57, %61
  store i32 %62, i32* %4, align 4
  %63 = load i8, i8* %58, align 1
  %64 = zext i8 %63 to i32
  %65 = add nsw i32 %59, %64
  %66 = icmp sgt i32 %65, %1
  br i1 %66, label %67, label %41

67:                                               ; preds = %56, %95, %13, %18, %106, %32, %35
  %68 = phi i32 [ -1, %35 ], [ -1, %32 ], [ 0, %106 ], [ -1094995529, %13 ], [ -1094995529, %18 ], [ -1094995529, %95 ], [ -1094995529, %56 ]
  ret i32 %68

69:                                               ; preds = %18
  %70 = sext i32 %29 to i64
  %71 = getelementptr inbounds i8, i8* %27, i64 %70
  %72 = add nsw i32 %29, %21
  %73 = bitcast i8* %71 to i16*
  %74 = load i16, i16* %73, align 1
  %75 = tail call i16 @llvm.bswap.i16(i16 %74) #2
  %76 = zext i16 %75 to i32
  %77 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds i8, i8* %71, i64 2
  %79 = getelementptr inbounds i8*, i8** %3, i64 2
  store i8* %78, i8** %79, align 8
  %80 = load i32, i32* %77, align 4
  %81 = sub nsw i32 %1, %80
  %82 = icmp sgt i32 %72, %81
  %83 = select i1 %82, i32 -1094995529, i32 0
  ret i32 %83

84:                                               ; preds = %41, %90
  %85 = phi i32 [ %91, %90 ], [ 0, %41 ]
  %86 = phi i32 [ %92, %90 ], [ %65, %41 ]
  %87 = phi i8* [ %93, %90 ], [ %42, %41 ]
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, -1
  br i1 %89, label %90, label %95

90:                                               ; preds = %84
  %91 = add nuw nsw i32 %85, 255
  store i32 %91, i32* %43, align 4
  %92 = add nsw i32 %86, 256
  %93 = getelementptr inbounds i8, i8* %87, i64 1
  %94 = icmp slt i32 %92, %1
  br i1 %94, label %84, label %95

95:                                               ; preds = %84, %90, %41
  %96 = phi i32 [ 0, %41 ], [ %91, %90 ], [ %85, %84 ]
  %97 = phi i8* [ %42, %41 ], [ %93, %90 ], [ %87, %84 ]
  %98 = phi i32 [ %65, %41 ], [ %92, %90 ], [ %86, %84 ]
  %99 = load i8, i8* %97, align 1
  %100 = zext i8 %99 to i32
  %101 = add nsw i32 %96, %100
  store i32 %101, i32* %43, align 4
  %102 = load i8, i8* %97, align 1
  %103 = zext i8 %102 to i32
  %104 = add nsw i32 %98, %103
  %105 = icmp sgt i32 %104, %1
  br i1 %105, label %67, label %106

106:                                              ; preds = %95
  %107 = getelementptr inbounds i8, i8* %97, i64 1
  %108 = sub nsw i32 %1, %104
  %109 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %108, i32* %109, align 4
  store i8* %107, i8** %3, align 8
  %110 = load i32, i32* %4, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %107, i64 %111
  %113 = getelementptr inbounds i8*, i8** %3, i64 1
  store i8* %112, i8** %113, align 8
  %114 = load i32, i32* %43, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %112, i64 %115
  %117 = getelementptr inbounds i8*, i8** %3, i64 2
  store i8* %116, i8** %117, align 8
  br label %67
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #1

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
