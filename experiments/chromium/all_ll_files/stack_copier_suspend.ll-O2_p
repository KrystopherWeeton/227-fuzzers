; ModuleID = '../../base/profiler/stack_copier_suspend.cc'
source_filename = "../../base/profiler/stack_copier_suspend.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::StackCopierSuspend" = type { %"class.base::StackCopier", %"class.std::__1::unique_ptr" }
%"class.base::StackCopier" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::SuspendableThreadDelegate"* }
%"class.base::SuspendableThreadDelegate" = type { %"class.base::ThreadDelegate" }
%"class.base::ThreadDelegate" = type { i32 (...)** }
%"class.base::StackBuffer" = type { %"class.std::__1::unique_ptr.1", i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%struct.mcontext_t = type { [23 x i64], %struct._libc_fpstate*, [8 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }
%"class.base::StackCopier::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64**, i64**, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64** }
%"class.base::SuspendableThreadDelegate::ScopedSuspendThread" = type { i32 (...)** }

@_ZTVN4base18StackCopierSuspendE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::StackCopierSuspend"*)* @_ZN4base18StackCopierSuspendD2Ev to i8*), i8* bitcast (void (%"class.base::StackCopierSuspend"*)* @_ZN4base18StackCopierSuspendD0Ev to i8*), i8* bitcast (i1 (%"class.base::StackCopierSuspend"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)* @_ZN4base18StackCopierSuspend9CopyStackEPNS_11StackBufferEPmPNS_9TimeTicksEP10mcontext_tPNS_11StackCopier8DelegateE to i8*)] }, align 8

@_ZN4base18StackCopierSuspendC1ENSt3__110unique_ptrINS_25SuspendableThreadDelegateENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.base::StackCopierSuspend"*, %"class.base::SuspendableThreadDelegate"*), void (%"class.base::StackCopierSuspend"*, %"class.base::SuspendableThreadDelegate"*)* @_ZN4base18StackCopierSuspendC2ENSt3__110unique_ptrINS_25SuspendableThreadDelegateENS1_14default_deleteIS3_EEEE
@_ZN4base18StackCopierSuspendD1Ev = hidden unnamed_addr alias void (%"class.base::StackCopierSuspend"*), void (%"class.base::StackCopierSuspend"*)* @_ZN4base18StackCopierSuspendD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18StackCopierSuspendC2ENSt3__110unique_ptrINS_25SuspendableThreadDelegateENS1_14default_deleteIS3_EEEE(%"class.base::StackCopierSuspend"* nocapture, %"class.base::SuspendableThreadDelegate"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SuspendableThreadDelegate"* %1 to i64
  %4 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base18StackCopierSuspendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18StackCopierSuspendD2Ev(%"class.base::StackCopierSuspend"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base18StackCopierSuspendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::SuspendableThreadDelegate"*, %"class.base::SuspendableThreadDelegate"** %3, align 8
  store %"class.base::SuspendableThreadDelegate"* null, %"class.base::SuspendableThreadDelegate"** %3, align 8
  %5 = icmp eq %"class.base::SuspendableThreadDelegate"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::SuspendableThreadDelegate"* %4 to void (%"class.base::SuspendableThreadDelegate"*)***
  %8 = load void (%"class.base::SuspendableThreadDelegate"*)**, void (%"class.base::SuspendableThreadDelegate"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::SuspendableThreadDelegate"*)*, void (%"class.base::SuspendableThreadDelegate"*)** %8, i64 1
  %10 = load void (%"class.base::SuspendableThreadDelegate"*)*, void (%"class.base::SuspendableThreadDelegate"*)** %9, align 8
  tail call void %10(%"class.base::SuspendableThreadDelegate"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 0
  tail call void @_ZN4base11StackCopierD2Ev(%"class.base::StackCopier"* %12) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base11StackCopierD2Ev(%"class.base::StackCopier"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18StackCopierSuspendD0Ev(%"class.base::StackCopierSuspend"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base18StackCopierSuspendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::SuspendableThreadDelegate"*, %"class.base::SuspendableThreadDelegate"** %3, align 8
  store %"class.base::SuspendableThreadDelegate"* null, %"class.base::SuspendableThreadDelegate"** %3, align 8
  %5 = icmp eq %"class.base::SuspendableThreadDelegate"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::SuspendableThreadDelegate"* %4 to void (%"class.base::SuspendableThreadDelegate"*)***
  %8 = load void (%"class.base::SuspendableThreadDelegate"*)**, void (%"class.base::SuspendableThreadDelegate"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::SuspendableThreadDelegate"*)*, void (%"class.base::SuspendableThreadDelegate"*)** %8, i64 1
  %10 = load void (%"class.base::SuspendableThreadDelegate"*)*, void (%"class.base::SuspendableThreadDelegate"*)** %9, align 8
  tail call void %10(%"class.base::SuspendableThreadDelegate"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 0
  tail call void @_ZN4base11StackCopierD2Ev(%"class.base::StackCopier"* %12) #5
  %13 = bitcast %"class.base::StackCopierSuspend"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base18StackCopierSuspend9CopyStackEPNS_11StackBufferEPmPNS_9TimeTicksEP10mcontext_tPNS_11StackCopier8DelegateE(%"class.base::StackCopierSuspend"* nocapture readonly, %"class.base::StackBuffer"* nocapture readonly, i64* nocapture, %"class.base::TimeTicks"* nocapture, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = getelementptr inbounds %"class.base::StackCopierSuspend", %"class.base::StackCopierSuspend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.base::SuspendableThreadDelegate"*, %"class.base::SuspendableThreadDelegate"** %8, align 8
  %10 = getelementptr inbounds %"class.base::SuspendableThreadDelegate", %"class.base::SuspendableThreadDelegate"* %9, i64 0, i32 0
  %11 = bitcast %"class.base::SuspendableThreadDelegate"* %9 to i64 (%"class.base::ThreadDelegate"*)***
  %12 = load i64 (%"class.base::ThreadDelegate"*)**, i64 (%"class.base::ThreadDelegate"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.base::ThreadDelegate"*)*, i64 (%"class.base::ThreadDelegate"*)** %12, i64 3
  %14 = load i64 (%"class.base::ThreadDelegate"*)*, i64 (%"class.base::ThreadDelegate"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::ThreadDelegate"* %10) #5
  %16 = load %"class.base::SuspendableThreadDelegate"*, %"class.base::SuspendableThreadDelegate"** %8, align 8
  %17 = bitcast %"class.base::SuspendableThreadDelegate"* %16 to %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* (%"class.base::SuspendableThreadDelegate"*)***
  %18 = load %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* (%"class.base::SuspendableThreadDelegate"*)**, %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* (%"class.base::SuspendableThreadDelegate"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* (%"class.base::SuspendableThreadDelegate"*)*, %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* (%"class.base::SuspendableThreadDelegate"*)** %18, i64 5
  %20 = load %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* (%"class.base::SuspendableThreadDelegate"*)*, %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* (%"class.base::SuspendableThreadDelegate"*)** %19, align 8
  %21 = tail call %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* %20(%"class.base::SuspendableThreadDelegate"* %16) #5
  %22 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = bitcast %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* %21 to i1 (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)***
  %25 = load i1 (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)**, i1 (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)*, i1 (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)** %25, i64 2
  %27 = load i1 (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)*, i1 (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* %21) #5
  br i1 %28, label %29, label %63

29:                                               ; preds = %6
  %30 = load %"class.base::SuspendableThreadDelegate"*, %"class.base::SuspendableThreadDelegate"** %8, align 8
  %31 = bitcast %"class.base::SuspendableThreadDelegate"* %30 to i1 (%"class.base::SuspendableThreadDelegate"*, %struct.mcontext_t*)***
  %32 = load i1 (%"class.base::SuspendableThreadDelegate"*, %struct.mcontext_t*)**, i1 (%"class.base::SuspendableThreadDelegate"*, %struct.mcontext_t*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.base::SuspendableThreadDelegate"*, %struct.mcontext_t*)*, i1 (%"class.base::SuspendableThreadDelegate"*, %struct.mcontext_t*)** %32, i64 6
  %34 = load i1 (%"class.base::SuspendableThreadDelegate"*, %struct.mcontext_t*)*, i1 (%"class.base::SuspendableThreadDelegate"*, %struct.mcontext_t*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.base::SuspendableThreadDelegate"* %30, %struct.mcontext_t* %4) #5
  br i1 %35, label %36, label %63

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %4, i64 0, i32 0, i64 15
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %15, %38
  %40 = getelementptr inbounds %"class.base::StackBuffer", %"class.base::StackBuffer"* %1, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %39, %41
  br i1 %42, label %63, label %43

43:                                               ; preds = %36
  %44 = load %"class.base::SuspendableThreadDelegate"*, %"class.base::SuspendableThreadDelegate"** %8, align 8
  %45 = bitcast %"class.base::SuspendableThreadDelegate"* %44 to i1 (%"class.base::SuspendableThreadDelegate"*, i64)***
  %46 = load i1 (%"class.base::SuspendableThreadDelegate"*, i64)**, i1 (%"class.base::SuspendableThreadDelegate"*, i64)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.base::SuspendableThreadDelegate"*, i64)*, i1 (%"class.base::SuspendableThreadDelegate"*, i64)** %46, i64 7
  %48 = load i1 (%"class.base::SuspendableThreadDelegate"*, i64)*, i1 (%"class.base::SuspendableThreadDelegate"*, i64)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.base::SuspendableThreadDelegate"* %44, i64 %38) #5
  br i1 %49, label %50, label %63

50:                                               ; preds = %43
  %51 = bitcast %"class.base::StackCopier::Delegate"* %5 to void (%"class.base::StackCopier::Delegate"*)***
  %52 = load void (%"class.base::StackCopier::Delegate"*)**, void (%"class.base::StackCopier::Delegate"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.base::StackCopier::Delegate"*)*, void (%"class.base::StackCopier::Delegate"*)** %52, i64 2
  %54 = load void (%"class.base::StackCopier::Delegate"*)*, void (%"class.base::StackCopier::Delegate"*)** %53, align 8
  tail call void %54(%"class.base::StackCopier::Delegate"* %5) #5
  %55 = inttoptr i64 %38 to i8*
  %56 = inttoptr i64 %15 to i64*
  %57 = bitcast %"class.base::StackBuffer"* %1 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 15
  %60 = and i64 %59, -16
  %61 = inttoptr i64 %60 to i64*
  %62 = tail call i8* @_ZN4base11StackCopier35CopyStackContentsAndRewritePointersEPKhPKmiPm(i8* %55, i64* %56, i32 16, i64* %61) #5
  br label %63

63:                                               ; preds = %43, %36, %29, %6, %50
  %64 = phi i8* [ %62, %50 ], [ null, %6 ], [ null, %29 ], [ null, %36 ], [ null, %43 ]
  %65 = phi i64 [ %38, %50 ], [ 0, %6 ], [ 0, %29 ], [ %38, %36 ], [ %38, %43 ]
  %66 = phi i1 [ true, %50 ], [ false, %6 ], [ false, %29 ], [ false, %36 ], [ false, %43 ]
  %67 = icmp eq %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* %21, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* %21 to void (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)***
  %70 = load void (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)**, void (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)*, void (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)** %70, i64 1
  %72 = load void (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)*, void (%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"*)** %71, align 8
  tail call void %72(%"class.base::SuspendableThreadDelegate::ScopedSuspendThread"* nonnull %21) #5
  br label %73

73:                                               ; preds = %63, %68
  br i1 %66, label %74, label %110

74:                                               ; preds = %73
  %75 = ptrtoint i8* %64 to i64
  %76 = sub i64 %15, %65
  %77 = add i64 %76, %75
  store i64 %77, i64* %2, align 8
  %78 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #5
  %79 = load %"class.base::SuspendableThreadDelegate"*, %"class.base::SuspendableThreadDelegate"** %8, align 8
  %80 = getelementptr inbounds %"class.base::SuspendableThreadDelegate", %"class.base::SuspendableThreadDelegate"* %79, i64 0, i32 0
  %81 = bitcast %"class.base::SuspendableThreadDelegate"* %79 to void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)***
  %82 = load void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)**, void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)*, void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)** %82, i64 4
  %84 = load void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)*, void (%"class.std::__1::vector"*, %"class.base::ThreadDelegate"*, %struct.mcontext_t*)** %83, align 8
  call void %84(%"class.std::__1::vector"* nonnull sret %7, %"class.base::ThreadDelegate"* %80, %struct.mcontext_t* %4) #5
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %86 = load i64**, i64*** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %88 = load i64**, i64*** %87, align 8
  %89 = icmp eq i64** %86, %88
  br i1 %89, label %95, label %90

90:                                               ; preds = %74
  %91 = inttoptr i64 %65 to i8*
  %92 = inttoptr i64 %15 to i64*
  br label %103

93:                                               ; preds = %103
  %94 = load i64**, i64*** %85, align 8
  br label %95

95:                                               ; preds = %93, %74
  %96 = phi i64** [ %94, %93 ], [ %86, %74 ]
  %97 = icmp eq i64** %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %95
  %99 = ptrtoint i64** %96 to i64
  %100 = bitcast i64*** %87 to i64*
  store i64 %99, i64* %100, align 8
  %101 = bitcast i64** %96 to i8*
  call void @_ZdlPv(i8* %101) #6
  br label %102

102:                                              ; preds = %95, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #5
  br label %110

103:                                              ; preds = %90, %103
  %104 = phi i64** [ %86, %90 ], [ %108, %103 ]
  %105 = load i64*, i64** %104, align 8
  %106 = load i64, i64* %105, align 8
  %107 = call i64 @_ZN4base11StackCopier31RewritePointerIfInOriginalStackEPKhPKmS2_m(i8* %91, i64* %92, i8* %64, i64 %106) #5
  store i64 %107, i64* %105, align 8
  %108 = getelementptr inbounds i64*, i64** %104, i64 1
  %109 = icmp eq i64** %108, %88
  br i1 %109, label %93, label %103

110:                                              ; preds = %73, %102
  %111 = phi i1 [ true, %102 ], [ false, %73 ]
  ret i1 %111
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare i8* @_ZN4base11StackCopier35CopyStackContentsAndRewritePointersEPKhPKmiPm(i8*, i64*, i32, i64*) local_unnamed_addr #4

declare i64 @_ZN4base11StackCopier31RewritePointerIfInOriginalStackEPKhPKmS2_m(i8*, i64*, i8*, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
