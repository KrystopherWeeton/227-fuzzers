; ModuleID = '../../third_party/skia/src/core/SkBlitter_Sprite.cpp'
source_filename = "../../third_party/skia/src/core/SkBlitter_Sprite.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSpriteBlitter = type { %class.SkBlitter, %class.SkPixmap, %class.SkPixmap, i32, i32, %class.SkPaint* }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.11, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.8 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.9 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.10 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.11 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSpriteBlitter_Memcpy = type { %class.SkSpriteBlitter }
%class.SkRasterPipelineSpriteBlitter = type { %class.SkSpriteBlitter, %class.SkArenaAlloc*, %class.SkBlitter*, %struct.SkRasterPipeline_MemoryCtx, %struct.SkRGBA4f, %class.sk_sp.8 }
%struct.SkRasterPipeline_MemoryCtx = type { i8*, i32 }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }

$_ZN15SkSpriteBlitterD0Ev = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI22SkSpriteBlitter_MemcpyJRK8SkPixmapEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_ = comdat any

$_ZN15SkSpriteBlitterD2Ev = comdat any

$_ZN22SkSpriteBlitter_MemcpyD0Ev = comdat any

$_ZN22SkSpriteBlitter_Memcpy8blitRectEiiii = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI29SkRasterPipelineSpriteBlitterJRK8SkPixmapRPS_R5sk_spI8SkShaderEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSC_ENUlPcE_8__invokeESL_ = comdat any

$_ZN29SkRasterPipelineSpriteBlitterD2Ev = comdat any

$_ZN29SkRasterPipelineSpriteBlitterD0Ev = comdat any

$_ZN29SkRasterPipelineSpriteBlitter8blitRectEiiii = comdat any

$_ZN29SkRasterPipelineSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint = comdat any

$_ZTV22SkSpriteBlitter_Memcpy = comdat any

$_ZTV29SkRasterPipelineSpriteBlitter = comdat any

@_ZTV15SkSpriteBlitter = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpriteBlitter*)* @_ZN15SkSpriteBlitterD2Ev to i8*), i8* bitcast (void (%class.SkSpriteBlitter*)* @_ZN15SkSpriteBlitterD0Ev to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32)* @_ZN15SkSpriteBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i8*, i16*)* @_ZN15SkSpriteBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32, i8)* @_ZN15SkSpriteBlitter5blitVEiiih to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN15SkSpriteBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)* @_ZN15SkSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint to i8*)] }, align 8
@gUseSkVMBlitter = external local_unnamed_addr global i8, align 1
@_ZTV22SkSpriteBlitter_Memcpy = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpriteBlitter*)* @_ZN15SkSpriteBlitterD2Ev to i8*), i8* bitcast (void (%class.SkSpriteBlitter_Memcpy*)* @_ZN22SkSpriteBlitter_MemcpyD0Ev to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32)* @_ZN15SkSpriteBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i8*, i16*)* @_ZN15SkSpriteBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32, i8)* @_ZN15SkSpriteBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkSpriteBlitter_Memcpy*, i32, i32, i32, i32)* @_ZN22SkSpriteBlitter_Memcpy8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN15SkSpriteBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)* @_ZN15SkSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint to i8*)] }, comdat, align 8
@_ZTV29SkRasterPipelineSpriteBlitter = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRasterPipelineSpriteBlitter*)* @_ZN29SkRasterPipelineSpriteBlitterD2Ev to i8*), i8* bitcast (void (%class.SkRasterPipelineSpriteBlitter*)* @_ZN29SkRasterPipelineSpriteBlitterD0Ev to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32)* @_ZN15SkSpriteBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i8*, i16*)* @_ZN15SkSpriteBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, i32, i32, i32, i8)* @_ZN15SkSpriteBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkRasterPipelineSpriteBlitter*, i32, i32, i32, i32)* @_ZN29SkRasterPipelineSpriteBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkSpriteBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN15SkSpriteBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (i1 (%class.SkRasterPipelineSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)* @_ZN29SkRasterPipelineSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkSpriteBlitterC2ERK8SkPixmap(%class.SkSpriteBlitter* nocapture, %class.SkPixmap* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 0, i32 1
  %5 = bitcast %class.SkAutoMalloc* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 1
  %7 = bitcast %class.SkPixmap* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false) #9
  %8 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 2
  %9 = bitcast %class.SkPixmap* %8 to i8*
  %10 = bitcast %class.SkPixmap* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false) #9
  %11 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %2, %15
  store %class.SkColorSpace* %13, %class.SkColorSpace** %11, align 8
  %19 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %20 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast i32* %20 to i64*
  %22 = bitcast i32* %19 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 2, i32 2, i32 1
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1
  %26 = bitcast %struct.SkISize* %25 to i64*
  %27 = bitcast %struct.SkISize* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint(%class.SkSpriteBlitter*, %class.SkPixmap* readonly dereferenceable(40), i32, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 1
  %7 = bitcast %class.SkPixmap* %6 to i8*
  %8 = bitcast %class.SkPixmap* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false) #9
  %9 = icmp eq %class.SkPixmap* %6, %1
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %14, %10
  %18 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %19 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  store %class.SkColorSpace* %12, %class.SkColorSpace** %18, align 8
  %20 = icmp eq %class.SkColorSpace* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %class.SkColorSpace* %19 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %5, %17, %21, %25
  %28 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %29 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %30 = bitcast i32* %29 to i64*
  %31 = bitcast i32* %28 to i64*
  %32 = load i64, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 1, i32 2, i32 1
  %34 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1
  %35 = bitcast %struct.SkISize* %34 to i64*
  %36 = bitcast %struct.SkISize* %33 to i64*
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 3
  store i32 %2, i32* %38, align 8
  %39 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 4
  store i32 %3, i32* %39, align 4
  %40 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 5
  store %class.SkPaint* %4, %class.SkPaint** %40, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkSpriteBlitter5blitHEiii(%class.SkSpriteBlitter*, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %class.SkSpriteBlitter* %0 to void (%class.SkSpriteBlitter*, i32, i32, i32, i32)***
  %6 = load void (%class.SkSpriteBlitter*, i32, i32, i32, i32)**, void (%class.SkSpriteBlitter*, i32, i32, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkSpriteBlitter*, i32, i32, i32, i32)*, void (%class.SkSpriteBlitter*, i32, i32, i32, i32)** %6, i64 5
  %8 = load void (%class.SkSpriteBlitter*, i32, i32, i32, i32)*, void (%class.SkSpriteBlitter*, i32, i32, i32, i32)** %7, align 8
  tail call void %8(%class.SkSpriteBlitter* %0, i32 %1, i32 %2, i32 %3, i32 1) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15SkSpriteBlitter9blitAntiHEiiPKhPKs(%class.SkSpriteBlitter* nocapture, i32, i32, i8* nocapture, i16* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkSpriteBlitter5blitVEiiih(%class.SkSpriteBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitter5blitVEiiih(%class.SkBlitter* %6, i32 %1, i32 %2, i32 %3, i8 zeroext %4) #9
  ret void
}

declare void @_ZN9SkBlitter5blitVEiiih(%class.SkBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkSpriteBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkSpriteBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter* %4, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %2) #9
  ret void
}

declare void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBlitter* @_ZN9SkBlitter12ChooseSpriteERK8SkPixmapRK7SkPaintS2_iiP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkPixmap* dereferenceable(40), i32, i32, %class.SkArenaAlloc*, %class.sk_sp.8* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp.8, align 8
  %9 = alloca %struct.SkColorSpaceXformSteps, align 4
  %10 = alloca %class.sk_sp.8, align 8
  %11 = ptrtoint %class.SkArenaAlloc* %5 to i64
  %12 = load i8, i8* @gUseSkVMBlitter, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %16 = bitcast %class.sk_sp.8* %6 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.SkShader* null, %class.SkShader** %15, align 8
  %18 = bitcast %class.sk_sp.8* %8 to i64*
  store i64 %17, i64* %18, align 8
  %19 = call %class.SkBlitter* @_Z25SkCreateSkVMSpriteBlitterRK8SkPixmapRK7SkPaintS1_iiP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %1, %class.SkPixmap* dereferenceable(40) %2, i32 %3, i32 %4, %class.SkArenaAlloc* %5, %class.sk_sp.8* nonnull %8) #9
  %20 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %8, i64 0, i32 0
  %21 = load %class.SkShader*, %class.SkShader** %20, align 8
  %22 = icmp eq %class.SkShader* %21, null
  br i1 %22, label %230, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %class.SkShader, %class.SkShader* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %230

27:                                               ; preds = %23
  %28 = bitcast %class.SkShader* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkShader* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  call void %32(%class.SkRefCntBase* nonnull %28) #9
  br label %230

33:                                               ; preds = %7
  %34 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 3
  br i1 %36, label %230, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %38) #9
  %39 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  %41 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8
  %43 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  call void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %9, %class.SkColorSpace* %40, i32 %35, %class.SkColorSpace* %42, i32 %44) #9
  %45 = load i8, i8* %38, align 4, !range !2
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %9, i64 0, i32 0, i32 1
  %48 = bitcast i8* %47 to <4 x i8>*
  %49 = load <4 x i8>, <4 x i8>* %48, align 1
  %50 = icmp eq <4 x i8> %49, zeroinitializer
  %51 = select <4 x i1> %50, <4 x i32> zeroinitializer, <4 x i32> <i32 2, i32 4, i32 8, i32 16>
  %52 = shufflevector <4 x i32> %51, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %53 = or <4 x i32> %51, %52
  %54 = shufflevector <4 x i32> %53, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %55 = or <4 x i32> %53, %54
  %56 = extractelement <4 x i32> %55, i32 0
  %57 = or i32 %56, %46
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %147

59:                                               ; preds = %37
  %60 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %61 = load %class.SkShader*, %class.SkShader** %60, align 8
  %62 = icmp eq %class.SkShader* %61, null
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %38) #9
  br i1 %62, label %63, label %151

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %69, label %139

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %71 = load %class.SkMaskFilter*, %class.SkMaskFilter** %70, align 8
  %72 = icmp eq %class.SkMaskFilter* %71, null
  br i1 %72, label %73, label %137

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3, i32 0
  %75 = load %class.SkColorFilter*, %class.SkColorFilter** %74, align 8
  %76 = icmp eq %class.SkColorFilter* %75, null
  br i1 %76, label %77, label %137

77:                                               ; preds = %73
  %78 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 4, i32 0
  %79 = load %class.SkImageFilter*, %class.SkImageFilter** %78, align 8
  %80 = icmp eq %class.SkImageFilter* %79, null
  br i1 %80, label %81, label %137

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5, i32 3
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, 2.550000e+02
  %85 = fadd float %84, 5.000000e-01
  %86 = call float @llvm.floor.f32(float %85) #9
  %87 = fcmp olt float %86, 0x41DFFFFFE0000000
  %88 = select i1 %87, float %86, float 0x41DFFFFFE0000000
  %89 = fcmp ogt float %88, 0xC1DFFFFFE0000000
  %90 = select i1 %89, float %88, float 0xC1DFFFFFE0000000
  %91 = fptosi float %90 to i32
  %92 = trunc i32 %91 to i8
  %93 = icmp eq i8 %92, -1
  br i1 %93, label %94, label %137

94:                                               ; preds = %81
  %95 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = lshr i32 %96, 10
  %98 = trunc i32 %97 to i8
  switch i8 %98, label %137 [
    i8 1, label %104
    i8 3, label %99
  ]

99:                                               ; preds = %94
  %100 = load i32, i32* %34, align 4
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %65) #9
  br i1 %103, label %104, label %137

104:                                              ; preds = %99, %94, %102
  %105 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %5, i32 129, i32 8) #9
  %106 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %5, i64 0, i32 1
  %107 = bitcast i8** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = ptrtoint i8* %105 to i64
  %110 = sub i64 %109, %108
  %111 = trunc i64 %110 to i32
  %112 = getelementptr inbounds i8, i8* %105, i64 120
  store i8* %112, i8** %106, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %5, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI22SkSpriteBlitter_MemcpyJRK8SkPixmapEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_, i32 %111) #9
  %113 = bitcast i8* %105 to i32 (...)***
  %114 = getelementptr inbounds i8, i8* %105, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %115 = getelementptr inbounds i8, i8* %105, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 40, i1 false) #9
  %116 = getelementptr inbounds i8, i8* %105, i64 64
  %117 = bitcast %class.SkPixmap* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 16, i1 false) #9
  %118 = getelementptr inbounds i8, i8* %105, i64 80
  %119 = bitcast i8* %118 to %class.SkColorSpace**
  %120 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  %121 = icmp eq %class.SkColorSpace* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %104
  %123 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 1 monotonic
  br label %125

125:                                              ; preds = %122, %104
  store %class.SkColorSpace* %120, %class.SkColorSpace** %119, align 8
  %126 = getelementptr inbounds i8, i8* %105, i64 88
  %127 = bitcast i32* %66 to i64*
  %128 = bitcast i8* %126 to i64*
  %129 = load i64, i64* %127, align 8
  store i64 %129, i64* %128, align 8
  %130 = getelementptr inbounds i8, i8* %105, i64 96
  %131 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 1
  %132 = bitcast %struct.SkISize* %131 to i64*
  %133 = bitcast i8* %130 to i64*
  %134 = load i64, i64* %132, align 8
  store i64 %134, i64* %133, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV22SkSpriteBlitter_Memcpy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %135 = bitcast i8* %105 to %class.SkSpriteBlitter*
  %136 = icmp eq i8* %105, null
  br i1 %136, label %137, label %202

137:                                              ; preds = %125, %102, %77, %73, %69, %81, %94
  %138 = load i32, i32* %64, align 8
  br label %139

139:                                              ; preds = %137, %63
  %140 = phi i32 [ %138, %137 ], [ %65, %63 ]
  switch i32 %140, label %151 [
    i32 6, label %141
    i32 2, label %143
    i32 1, label %145
  ]

141:                                              ; preds = %139
  %142 = call %class.SkSpriteBlitter* @_ZN15SkSpriteBlitter9ChooseL32ERK8SkPixmapRK7SkPaintP12SkArenaAlloc(%class.SkPixmap* dereferenceable(40) %2, %class.SkPaint* dereferenceable(72) %1, %class.SkArenaAlloc* %5) #9
  br label %148

143:                                              ; preds = %139
  %144 = call %class.SkSpriteBlitter* @_ZN15SkSpriteBlitter10ChooseL565ERK8SkPixmapRK7SkPaintP12SkArenaAlloc(%class.SkPixmap* dereferenceable(40) %2, %class.SkPaint* dereferenceable(72) %1, %class.SkArenaAlloc* %5) #9
  br label %148

145:                                              ; preds = %139
  %146 = call %class.SkSpriteBlitter* @_ZN15SkSpriteBlitter9ChooseLA8ERK8SkPixmapRK7SkPaintP12SkArenaAlloc(%class.SkPixmap* dereferenceable(40) %2, %class.SkPaint* dereferenceable(72) %1, %class.SkArenaAlloc* %5) #9
  br label %148

147:                                              ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %38) #9
  br label %151

148:                                              ; preds = %145, %143, %141
  %149 = phi %class.SkSpriteBlitter* [ %146, %145 ], [ %144, %143 ], [ %142, %141 ]
  %150 = icmp eq %class.SkSpriteBlitter* %149, null
  br i1 %150, label %151, label %202

151:                                              ; preds = %59, %147, %139, %148
  %152 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %153 = load %class.SkMaskFilter*, %class.SkMaskFilter** %152, align 8
  %154 = icmp eq %class.SkMaskFilter* %153, null
  br i1 %154, label %155, label %211

155:                                              ; preds = %151
  %156 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %5, i32 185, i32 8) #9
  %157 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %5, i64 0, i32 1
  %158 = bitcast i8** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = ptrtoint i8* %156 to i64
  %161 = sub i64 %160, %159
  %162 = trunc i64 %161 to i32
  %163 = getelementptr inbounds i8, i8* %156, i64 176
  store i8* %163, i8** %157, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %5, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI29SkRasterPipelineSpriteBlitterJRK8SkPixmapRPS_R5sk_spI8SkShaderEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSC_ENUlPcE_8__invokeESL_, i32 %162) #9
  %164 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %165 = load %class.SkShader*, %class.SkShader** %164, align 8
  %166 = icmp eq %class.SkShader* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %155
  %168 = getelementptr inbounds %class.SkShader, %class.SkShader* %165, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 1 monotonic
  br label %170

170:                                              ; preds = %167, %155
  %171 = ptrtoint %class.SkShader* %165 to i64
  %172 = bitcast i8* %156 to i32 (...)***
  %173 = getelementptr inbounds i8, i8* %156, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %174 = getelementptr inbounds i8, i8* %156, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 40, i1 false) #9
  %175 = getelementptr inbounds i8, i8* %156, i64 64
  %176 = bitcast %class.SkPixmap* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %176, i64 16, i1 false) #9
  %177 = getelementptr inbounds i8, i8* %156, i64 80
  %178 = bitcast i8* %177 to %class.SkColorSpace**
  %179 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  %180 = icmp eq %class.SkColorSpace* %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %170
  %182 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = atomicrmw add i32* %182, i32 1 monotonic
  br label %184

184:                                              ; preds = %181, %170
  store %class.SkColorSpace* %179, %class.SkColorSpace** %178, align 8
  %185 = getelementptr inbounds i8, i8* %156, i64 88
  %186 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 0, i32 1
  %187 = bitcast i32* %186 to i64*
  %188 = bitcast i8* %185 to i64*
  %189 = load i64, i64* %187, align 8
  store i64 %189, i64* %188, align 8
  %190 = getelementptr inbounds i8, i8* %156, i64 96
  %191 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 1
  %192 = bitcast %struct.SkISize* %191 to i64*
  %193 = bitcast i8* %190 to i64*
  %194 = load i64, i64* %192, align 8
  store i64 %194, i64* %193, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV29SkRasterPipelineSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %195 = getelementptr inbounds i8, i8* %156, i64 120
  %196 = bitcast i8* %195 to i64*
  store i64 %11, i64* %196, align 8
  %197 = getelementptr inbounds i8, i8* %156, i64 128
  %198 = getelementptr inbounds i8, i8* %156, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 20, i1 false) #9
  %199 = bitcast i8* %198 to i64*
  store i64 %171, i64* %199, align 8
  %200 = bitcast i8* %156 to %class.SkSpriteBlitter*
  %201 = icmp eq i8* %156, null
  br i1 %201, label %211, label %202

202:                                              ; preds = %125, %148, %184
  %203 = phi %class.SkSpriteBlitter* [ %200, %184 ], [ %149, %148 ], [ %135, %125 ]
  %204 = bitcast %class.SkSpriteBlitter* %203 to i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)***
  %205 = load i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)**, i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)*** %204, align 8
  %206 = getelementptr inbounds i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)*, i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)** %205, i64 14
  %207 = load i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)*, i1 (%class.SkSpriteBlitter*, %class.SkPixmap*, i32, i32, %class.SkPaint*)** %206, align 8
  %208 = call zeroext i1 %207(%class.SkSpriteBlitter* nonnull %203, %class.SkPixmap* dereferenceable(40) %0, i32 %3, i32 %4, %class.SkPaint* dereferenceable(72) %1) #9
  br i1 %208, label %209, label %211

209:                                              ; preds = %202
  %210 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %203, i64 0, i32 0
  br label %230

211:                                              ; preds = %151, %184, %202
  %212 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %213 = bitcast %class.sk_sp.8* %6 to i64*
  %214 = load i64, i64* %213, align 8
  store %class.SkShader* null, %class.SkShader** %212, align 8
  %215 = bitcast %class.sk_sp.8* %10 to i64*
  store i64 %214, i64* %215, align 8
  %216 = call %class.SkBlitter* @_Z25SkCreateSkVMSpriteBlitterRK8SkPixmapRK7SkPaintS1_iiP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %1, %class.SkPixmap* dereferenceable(40) %2, i32 %3, i32 %4, %class.SkArenaAlloc* %5, %class.sk_sp.8* nonnull %10) #9
  %217 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %10, i64 0, i32 0
  %218 = load %class.SkShader*, %class.SkShader** %217, align 8
  %219 = icmp eq %class.SkShader* %218, null
  br i1 %219, label %230, label %220

220:                                              ; preds = %211
  %221 = getelementptr inbounds %class.SkShader, %class.SkShader* %218, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = atomicrmw add i32* %221, i32 -1 acq_rel
  %223 = icmp eq i32 %222, 1
  br i1 %223, label %224, label %230

224:                                              ; preds = %220
  %225 = bitcast %class.SkShader* %218 to %class.SkRefCntBase*
  %226 = bitcast %class.SkShader* %218 to void (%class.SkRefCntBase*)***
  %227 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %226, align 8
  %228 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %227, i64 2
  %229 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %228, align 8
  call void %229(%class.SkRefCntBase* nonnull %225) #9
  br label %230

230:                                              ; preds = %224, %220, %211, %27, %23, %14, %209, %33
  %231 = phi %class.SkBlitter* [ null, %33 ], [ %210, %209 ], [ %19, %14 ], [ %19, %23 ], [ %19, %27 ], [ %216, %211 ], [ %216, %220 ], [ %216, %224 ]
  ret %class.SkBlitter* %231
}

declare %class.SkBlitter* @_Z25SkCreateSkVMSpriteBlitterRK8SkPixmapRK7SkPaintS1_iiP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkPixmap* dereferenceable(40), i32, i32, %class.SkArenaAlloc*, %class.sk_sp.8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %class.SkSpriteBlitter* @_ZN15SkSpriteBlitter9ChooseL32ERK8SkPixmapRK7SkPaintP12SkArenaAlloc(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkArenaAlloc*) local_unnamed_addr #2

declare %class.SkSpriteBlitter* @_ZN15SkSpriteBlitter10ChooseL565ERK8SkPixmapRK7SkPaintP12SkArenaAlloc(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkArenaAlloc*) local_unnamed_addr #2

declare %class.SkSpriteBlitter* @_ZN15SkSpriteBlitter9ChooseLA8ERK8SkPixmapRK7SkPaintP12SkArenaAlloc(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkArenaAlloc*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkSpriteBlitterD0Ev(%class.SkSpriteBlitter*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN9SkBlitter12blitAntiRectEiiiihh(%class.SkBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #2

declare %class.SkPixmap* @_ZN9SkBlitter17justAnOpaqueColorEPj(%class.SkBlitter*, i32*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #9
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #9
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #9
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #9
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #9
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #9
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #2

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI22SkSpriteBlitter_MemcpyJRK8SkPixmapEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_(i8*) #4 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -129
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %0, i64 -49
  %5 = bitcast i8* %4 to %class.SkColorSpace**
  %6 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  %7 = icmp eq %class.SkColorSpace* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = bitcast %class.SkColorSpace* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %12, %8, %1
  %15 = getelementptr inbounds i8, i8* %0, i64 -89
  %16 = bitcast i8* %15 to %class.SkColorSpace**
  %17 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8
  %18 = icmp eq %class.SkColorSpace* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = bitcast %class.SkColorSpace* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %14, %19, %23
  %26 = bitcast i8* %2 to %class.SkBlitter*
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %26) #9
  ret i8* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkSpriteBlitterD2Ev(%class.SkSpriteBlitter*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %class.SkSpriteBlitter, %class.SkSpriteBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %23) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSpriteBlitter_MemcpyD0Ev(%class.SkSpriteBlitter_Memcpy*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %23) #9
  %24 = bitcast %class.SkSpriteBlitter_Memcpy* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSpriteBlitter_Memcpy8blitRectEiiii(%class.SkSpriteBlitter_Memcpy*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %8, i32 %1, i32 %2, i64 %10) #9
  %12 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = sub nsw i32 %1, %13
  %15 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %2, %16
  %18 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 2, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 2, i32 2
  %21 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 2, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %20, i32 %14, i32 %17, i64 %22) #9
  %24 = load i64, i64* %9, align 8
  %25 = load i64, i64* %21, align 8
  %26 = getelementptr inbounds %class.SkSpriteBlitter_Memcpy, %class.SkSpriteBlitter_Memcpy* %0, i64 0, i32 0, i32 2, i32 2, i32 0
  %27 = tail call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %26) #9
  %28 = shl i32 %3, %27
  %29 = sext i32 %28 to i64
  %30 = icmp sgt i32 %4, 0
  br i1 %30, label %31, label %66

31:                                               ; preds = %5
  %32 = getelementptr inbounds i8, i8* %19, i64 %23
  %33 = getelementptr inbounds i8, i8* %7, i64 %11
  %34 = add nsw i32 %4, -1
  %35 = and i32 %4, 3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %31, %37
  %38 = phi i8* [ %44, %37 ], [ %32, %31 ]
  %39 = phi i8* [ %43, %37 ], [ %33, %31 ]
  %40 = phi i32 [ %42, %37 ], [ %4, %31 ]
  %41 = phi i32 [ %45, %37 ], [ %35, %31 ]
  %42 = add nsw i32 %40, -1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %38, i64 %29, i1 false)
  %43 = getelementptr inbounds i8, i8* %39, i64 %24
  %44 = getelementptr inbounds i8, i8* %38, i64 %25
  %45 = add i32 %41, -1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %37, !llvm.loop !3

47:                                               ; preds = %37, %31
  %48 = phi i8* [ %32, %31 ], [ %44, %37 ]
  %49 = phi i8* [ %33, %31 ], [ %43, %37 ]
  %50 = phi i32 [ %4, %31 ], [ %42, %37 ]
  %51 = icmp ult i32 %34, 3
  br i1 %51, label %66, label %52

52:                                               ; preds = %47, %52
  %53 = phi i8* [ %64, %52 ], [ %48, %47 ]
  %54 = phi i8* [ %63, %52 ], [ %49, %47 ]
  %55 = phi i32 [ %62, %52 ], [ %50, %47 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %53, i64 %29, i1 false)
  %56 = getelementptr inbounds i8, i8* %54, i64 %24
  %57 = getelementptr inbounds i8, i8* %53, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %57, i64 %29, i1 false)
  %58 = getelementptr inbounds i8, i8* %56, i64 %24
  %59 = getelementptr inbounds i8, i8* %57, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %59, i64 %29, i1 false)
  %60 = getelementptr inbounds i8, i8* %58, i64 %24
  %61 = getelementptr inbounds i8, i8* %59, i64 %25
  %62 = add nsw i32 %55, -4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %61, i64 %29, i1 false)
  %63 = getelementptr inbounds i8, i8* %60, i64 %24
  %64 = getelementptr inbounds i8, i8* %61, i64 %25
  %65 = icmp sgt i32 %62, 0
  br i1 %65, label %52, label %66

66:                                               ; preds = %47, %52, %5
  ret void
}

declare i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo*, i32, i32, i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI29SkRasterPipelineSpriteBlitterJRK8SkPixmapRPS_R5sk_spI8SkShaderEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSC_ENUlPcE_8__invokeESL_(i8*) #4 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -185
  %3 = bitcast i8* %2 to %class.SkRasterPipelineSpriteBlitter*
  %4 = bitcast i8* %2 to void (%class.SkRasterPipelineSpriteBlitter*)***
  %5 = load void (%class.SkRasterPipelineSpriteBlitter*)**, void (%class.SkRasterPipelineSpriteBlitter*)*** %4, align 8
  %6 = load void (%class.SkRasterPipelineSpriteBlitter*)*, void (%class.SkRasterPipelineSpriteBlitter*)** %5, align 8
  tail call void %6(%class.SkRasterPipelineSpriteBlitter* %3) #9
  ret i8* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29SkRasterPipelineSpriteBlitterD2Ev(%class.SkRasterPipelineSpriteBlitter*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV29SkRasterPipelineSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 5, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorSpace* %18 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %24, %20, %16
  %27 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %28 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %26, %30, %34
  %37 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %37) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29SkRasterPipelineSpriteBlitterD0Ev(%class.SkRasterPipelineSpriteBlitter*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV29SkRasterPipelineSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 5, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV15SkSpriteBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorSpace* %18 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %24, %20, %16
  %27 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %28 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %26, %30, %34
  %37 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %37) #9
  %38 = bitcast %class.SkRasterPipelineSpriteBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %38) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29SkRasterPipelineSpriteBlitter8blitRectEiiii(%class.SkRasterPipelineSpriteBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 2, i32 0
  %9 = tail call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %8) #9
  %10 = zext i32 %9 to i64
  %11 = lshr i64 %7, %10
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 3, i32 1
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 2
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0
  %16 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %15) #9
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = sub i32 %1, %19
  %21 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 %2, %22
  %24 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %6, align 8
  %27 = tail call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %14, i32 %20, i32 %23, i64 %26) #9
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = sext i32 %1 to i64
  %30 = mul nsw i64 %29, %17
  %31 = sub nsw i64 0, %30
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = sext i32 %2 to i64
  %34 = load i32, i32* %13, align 8
  %35 = sext i32 %34 to i64
  %36 = mul nsw i64 %33, %17
  %37 = mul i64 %36, %35
  %38 = sub i64 0, %37
  %39 = getelementptr inbounds i8, i8* %32, i64 %38
  %40 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 3, i32 0
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 2
  %42 = load %class.SkBlitter*, %class.SkBlitter** %41, align 8
  %43 = bitcast %class.SkBlitter* %42 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %44 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %44, i64 5
  %46 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %45, align 8
  tail call void %46(%class.SkBlitter* %42, i32 %1, i32 %2, i32 %3, i32 %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN29SkRasterPipelineSpriteBlitter5setupERK8SkPixmapiiRK7SkPaint(%class.SkRasterPipelineSpriteBlitter*, %class.SkPixmap* dereferenceable(40), i32, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.SkRasterPipeline, align 8
  %7 = alloca %class.sk_sp.8, align 8
  %8 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 1
  %9 = bitcast %class.SkPixmap* %8 to i8*
  %10 = bitcast %class.SkPixmap* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false) #9
  %11 = icmp eq %class.SkPixmap* %8, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  br label %19

19:                                               ; preds = %16, %12
  %20 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8
  store %class.SkColorSpace* %14, %class.SkColorSpace** %20, align 8
  %22 = icmp eq %class.SkColorSpace* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %class.SkColorSpace* %21 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %5, %19, %23, %27
  %30 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %31 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %32 = bitcast i32* %31 to i64*
  %33 = bitcast i32* %30 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 1
  %36 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1
  %37 = bitcast %struct.SkISize* %36 to i64*
  %38 = bitcast %struct.SkISize* %35 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 3
  store i32 %2, i32* %40, align 8
  %41 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 4
  store i32 %3, i32* %41, align 4
  %42 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 5
  %43 = bitcast %struct.SkRGBA4f* %42 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 4
  %46 = bitcast %struct.SkRGBA4f* %45 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %46, align 8
  %47 = bitcast %class.SkRasterPipeline* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #9
  %48 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 1
  %49 = bitcast %class.SkRasterPipeline* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  %50 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %48, align 8
  call void @_ZN16SkRasterPipelineC1EP12SkArenaAlloc(%class.SkRasterPipeline* nonnull %6, %class.SkArenaAlloc* %50) #9
  %51 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 3
  call void @_ZN16SkRasterPipeline11append_loadE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline* nonnull %6, i32 %52, %struct.SkRasterPipeline_MemoryCtx* %53) #9
  %54 = load i32, i32* %51, align 8
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %59

56:                                               ; preds = %29
  %57 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %48, align 8
  %58 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %45, i64 0, i32 0
  call void @_ZN16SkRasterPipeline14append_set_rgbEP12SkArenaAllocPKf(%class.SkRasterPipeline* nonnull %6, %class.SkArenaAlloc* %57, float* %58) #9
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %6, i32 8, i8* null) #9
  br label %59

59:                                               ; preds = %56, %29
  %60 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %61 = load %class.SkColorSpace*, %class.SkColorSpace** %60, align 8
  %62 = icmp eq %class.SkColorSpace* %61, null
  br i1 %62, label %106, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %65 = load %class.SkColorSpace*, %class.SkColorSpace** %64, align 8
  %66 = icmp eq %class.SkColorSpace* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = load i32, i32* %51, align 8
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %72

70:                                               ; preds = %63, %67
  %71 = call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #9
  br label %72

72:                                               ; preds = %70, %67
  %73 = phi %class.SkColorSpace* [ %71, %70 ], [ %65, %67 ]
  %74 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = load i32, i32* %51, align 8
  %79 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %78) #9
  br i1 %79, label %80, label %81

80:                                               ; preds = %72, %77
  br label %81

81:                                               ; preds = %77, %80
  %82 = phi i32 [ 1, %80 ], [ 2, %77 ]
  %83 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %48, align 8
  %84 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %83, i64 0, i32 1
  %85 = bitcast i8** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 0, %86
  %88 = and i64 %87, 3
  %89 = or i64 %88, 100
  %90 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %83, i64 0, i32 2
  %91 = bitcast i8** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %92, %86
  %94 = icmp ugt i64 %89, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %81
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %83, i32 100, i32 4) #9
  %96 = load i64, i64* %85, align 8
  %97 = sub i64 0, %96
  %98 = and i64 %97, 3
  br label %99

99:                                               ; preds = %81, %95
  %100 = phi i64 [ %96, %95 ], [ %86, %81 ]
  %101 = phi i64 [ %98, %95 ], [ %88, %81 ]
  %102 = inttoptr i64 %100 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 %101
  %104 = getelementptr inbounds i8, i8* %103, i64 100
  store i8* %104, i8** %84, align 8
  %105 = bitcast i8* %103 to %struct.SkColorSpaceXformSteps*
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* %105, %class.SkColorSpace* %73, i32 %82, %class.SkColorSpace* nonnull %61, i32 2) #9
  call void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps* %105, %class.SkRasterPipeline* nonnull %6) #9
  br label %106

106:                                              ; preds = %59, %99
  %107 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 4, i32 3
  %108 = load float, float* %107, align 4
  %109 = fcmp une float %108, 1.000000e+00
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = bitcast float* %107 to i8*
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %6, i32 91, i8* %111) #9
  br label %112

112:                                              ; preds = %110, %106
  %113 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %119, label %116

116:                                              ; preds = %112
  %117 = load i32, i32* %51, align 8
  %118 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %117) #9
  br i1 %118, label %119, label %122

119:                                              ; preds = %112, %116
  %120 = load float, float* %107, align 4
  %121 = fcmp oeq float %120, 1.000000e+00
  br label %122

122:                                              ; preds = %119, %116
  %123 = phi i1 [ false, %116 ], [ %121, %119 ]
  %124 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %48, align 8
  %125 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %7, i64 0, i32 0
  %126 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 5, i32 0
  %127 = load %class.SkShader*, %class.SkShader** %126, align 8
  %128 = icmp eq %class.SkShader* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %class.SkShader, %class.SkShader* %127, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 1 monotonic
  br label %132

132:                                              ; preds = %122, %129
  store %class.SkShader* %127, %class.SkShader** %125, align 8
  %133 = call %class.SkBlitter* @_Z29SkCreateRasterPipelineBlitterRK8SkPixmapRK7SkPaintRK16SkRasterPipelinebP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %8, %class.SkPaint* dereferenceable(72) %4, %class.SkRasterPipeline* nonnull dereferenceable(24) %6, i1 zeroext %123, %class.SkArenaAlloc* %124, %class.sk_sp.8* nonnull %7) #9
  %134 = getelementptr inbounds %class.SkRasterPipelineSpriteBlitter, %class.SkRasterPipelineSpriteBlitter* %0, i64 0, i32 2
  store %class.SkBlitter* %133, %class.SkBlitter** %134, align 8
  %135 = load %class.SkShader*, %class.SkShader** %125, align 8
  %136 = icmp eq %class.SkShader* %135, null
  br i1 %136, label %147, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %class.SkShader, %class.SkShader* %135, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw add i32* %138, i32 -1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %147

141:                                              ; preds = %137
  %142 = bitcast %class.SkShader* %135 to %class.SkRefCntBase*
  %143 = bitcast %class.SkShader* %135 to void (%class.SkRefCntBase*)***
  %144 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %143, align 8
  %145 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %144, i64 2
  %146 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, align 8
  call void %146(%class.SkRefCntBase* nonnull %142) #9
  br label %147

147:                                              ; preds = %132, %137, %141
  %148 = load %class.SkBlitter*, %class.SkBlitter** %134, align 8
  %149 = icmp ne %class.SkBlitter* %148, null
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #9
  ret i1 %149
}

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare void @_ZN16SkRasterPipelineC1EP12SkArenaAlloc(%class.SkRasterPipeline*, %class.SkArenaAlloc*) unnamed_addr #2

declare void @_ZN16SkRasterPipeline11append_loadE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline*, i32, %struct.SkRasterPipeline_MemoryCtx*) local_unnamed_addr #2

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #2

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #2

declare void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps*, %class.SkRasterPipeline*) local_unnamed_addr #2

declare %class.SkBlitter* @_Z29SkCreateRasterPipelineBlitterRK8SkPixmapRK7SkPaintRK16SkRasterPipelinebP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkRasterPipeline* dereferenceable(24), i1 zeroext, %class.SkArenaAlloc*, %class.sk_sp.8*) local_unnamed_addr #2

declare void @_ZN16SkRasterPipeline14append_set_rgbEP12SkArenaAllocPKf(%class.SkRasterPipeline*, %class.SkArenaAlloc*, float*) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
