; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cpdf_type3char.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cpdf_type3char.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.fxcrt::RetainPtr", %class.CFX_Matrix }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.8", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_Type3Char = type { %"class.std::__1::unique_ptr", %"class.fxcrt::RetainPtr", i8, i32, %class.CFX_Matrix, %struct.FX_RECT }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPDF_Font::FormIface"* }
%"class.CPDF_Font::FormIface" = type { i32 (...)** }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }

@__const._ZN14CPDF_Type3Char29LoadBitmapFromSoleImageOfFormEv.result = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"struct.std::__1::pair" { %"class.fxcrt::RetainPtr" { %"class.std::__1::unique_ptr.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*) } } } }, %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } } }, align 8

@_ZN14CPDF_Type3CharC1Ev = hidden unnamed_addr alias void (%class.CPDF_Type3Char*), void (%class.CPDF_Type3Char*)* @_ZN14CPDF_Type3CharC2Ev
@_ZN14CPDF_Type3CharD1Ev = hidden unnamed_addr alias void (%class.CPDF_Type3Char*), void (%class.CPDF_Type3Char*)* @_ZN14CPDF_Type3CharD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3CharC2Ev(%class.CPDF_Type3Char* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 3
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 4, i32 0
  %4 = bitcast %class.CPDF_Type3Char* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 17, i1 false)
  %5 = bitcast float* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %5, align 4
  %6 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 4, i32 4
  %7 = bitcast float* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3CharD2Ev(%class.CPDF_Type3Char* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %2, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %2, align 8
  %4 = icmp eq %class.CFX_DIBitmap* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CFX_DIBitmap* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #5
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.CPDF_Font::FormIface"*, %"class.CPDF_Font::FormIface"** %17, align 8
  store %"class.CPDF_Font::FormIface"* null, %"class.CPDF_Font::FormIface"** %17, align 8
  %19 = icmp eq %"class.CPDF_Font::FormIface"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.CPDF_Font::FormIface"* %18 to void (%"class.CPDF_Font::FormIface"*)***
  %22 = load void (%"class.CPDF_Font::FormIface"*)**, void (%"class.CPDF_Font::FormIface"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %22, i64 1
  %24 = load void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %23, align 8
  tail call void %24(%"class.CPDF_Font::FormIface"* nonnull %18) #5
  br label %25

25:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN14CPDF_Type3Char19TextUnitToGlyphUnitEf(float) local_unnamed_addr #1 align 2 {
  %2 = fmul float %0, 1.000000e+03
  ret float %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3Char27TextUnitRectToGlyphUnitRectEP13CFX_FloatRect(%class.CFX_FloatRect*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN13CFX_FloatRect5ScaleEf(%class.CFX_FloatRect* %0, float 1.000000e+03) #5
  ret void
}

declare void @_ZN13CFX_FloatRect5ScaleEf(%class.CFX_FloatRect*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CPDF_Type3Char29LoadBitmapFromSoleImageOfFormEv(%class.CPDF_Type3Char*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.pdfium::Optional", align 8
  %3 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  %5 = icmp eq %class.CFX_DIBitmap* %4, null
  br i1 %5, label %6, label %80

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.CPDF_Font::FormIface"*, %"class.CPDF_Font::FormIface"** %7, align 8
  %9 = icmp eq %"class.CPDF_Font::FormIface"* %8, null
  br i1 %9, label %80, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %80

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }* @__const._ZN14CPDF_Type3Char29LoadBitmapFromSoleImageOfFormEv.result, i64 0, i32 0, i32 0, i32 0, i32 0), i64 40, i1 false)
  %16 = bitcast %"class.CPDF_Font::FormIface"* %8 to void (%"class.pdfium::Optional"*, %"class.CPDF_Font::FormIface"*)***
  %17 = load void (%"class.pdfium::Optional"*, %"class.CPDF_Font::FormIface"*)**, void (%"class.pdfium::Optional"*, %"class.CPDF_Font::FormIface"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.pdfium::Optional"*, %"class.CPDF_Font::FormIface"*)*, void (%"class.pdfium::Optional"*, %"class.CPDF_Font::FormIface"*)** %17, i64 5
  %19 = load void (%"class.pdfium::Optional"*, %"class.CPDF_Font::FormIface"*)*, void (%"class.pdfium::Optional"*, %"class.CPDF_Font::FormIface"*)** %18, align 8
  call void %19(%"class.pdfium::Optional"* nonnull sret %2, %"class.CPDF_Font::FormIface"* nonnull %8) #5
  %20 = load i8, i8* %15, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %78, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 4
  %24 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  %25 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %25, align 8
  %27 = icmp eq %class.CFX_DIBitmap* %24, %26
  br i1 %27, label %49, label %28

28:                                               ; preds = %22
  %29 = icmp eq %class.CFX_DIBitmap* %26, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %26, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %31, align 8
  %34 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  br label %35

35:                                               ; preds = %30, %28
  %36 = phi %class.CFX_DIBitmap* [ %34, %30 ], [ %24, %28 ]
  store %class.CFX_DIBitmap* %26, %class.CFX_DIBitmap** %3, align 8
  %37 = icmp eq %class.CFX_DIBitmap* %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %36, i64 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %36, i64 0, i32 0, i32 0
  %45 = bitcast %class.CFX_DIBitmap* %36 to void (%"class.fxcrt::Retainable"*)***
  %46 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, i64 1
  %48 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, align 8
  call void %48(%"class.fxcrt::Retainable"* nonnull %44) #5
  br label %49

49:                                               ; preds = %22, %35, %38, %43
  %50 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %51 = bitcast %class.CFX_Matrix* %23 to i8*
  %52 = bitcast %class.CFX_Matrix* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 8 %52, i64 24, i1 false) #5
  %53 = load %"class.CPDF_Font::FormIface"*, %"class.CPDF_Font::FormIface"** %7, align 8
  store %"class.CPDF_Font::FormIface"* null, %"class.CPDF_Font::FormIface"** %7, align 8
  %54 = icmp eq %"class.CPDF_Font::FormIface"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.CPDF_Font::FormIface"* %53 to void (%"class.CPDF_Font::FormIface"*)***
  %57 = load void (%"class.CPDF_Font::FormIface"*)**, void (%"class.CPDF_Font::FormIface"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %57, i64 1
  %59 = load void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %58, align 8
  call void %59(%"class.CPDF_Font::FormIface"* nonnull %53) #5
  br label %60

60:                                               ; preds = %55, %49
  %61 = load i8, i8* %15, align 8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %64, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %64, align 8
  %66 = icmp eq %class.CFX_DIBitmap* %65, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %65, i64 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = add nsw i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %65, i64 0, i32 0, i32 0
  %74 = bitcast %class.CFX_DIBitmap* %65 to void (%"class.fxcrt::Retainable"*)***
  %75 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %75, i64 1
  %77 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, align 8
  call void %77(%"class.fxcrt::Retainable"* nonnull %73) #5
  br label %78

78:                                               ; preds = %14, %60, %63, %67, %72
  %79 = phi i1 [ true, %60 ], [ true, %63 ], [ true, %67 ], [ true, %72 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #5
  br label %80

80:                                               ; preds = %6, %1, %10, %78
  %81 = phi i1 [ %79, %78 ], [ true, %6 ], [ true, %1 ], [ false, %10 ]
  ret i1 %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3Char24InitializeFromStreamDataEbPKf(%class.CPDF_Type3Char* nocapture, i1 zeroext, float* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 2
  store i8 %4, i8* %5, align 8
  %6 = load float, float* %2, align 4
  %7 = fmul float %6, 1.000000e+03
  %8 = tail call i32 @FXSYS_roundf(float %7) #5
  %9 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 3
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds float, float* %2, i64 2
  %11 = load float, float* %10, align 4
  %12 = fmul float %11, 1.000000e+03
  %13 = tail call i32 @FXSYS_roundf(float %12) #5
  %14 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 5, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds float, float* %2, i64 3
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, 1.000000e+03
  %18 = tail call i32 @FXSYS_roundf(float %17) #5
  %19 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 5, i32 3
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds float, float* %2, i64 4
  %21 = load float, float* %20, align 4
  %22 = fmul float %21, 1.000000e+03
  %23 = tail call i32 @FXSYS_roundf(float %22) #5
  %24 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 5, i32 2
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds float, float* %2, i64 5
  %26 = load float, float* %25, align 4
  %27 = fmul float %26, 1.000000e+03
  %28 = tail call i32 @FXSYS_roundf(float %27) #5
  %29 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 5, i32 1
  store i32 %28, i32* %29, align 4
  ret void
}

declare i32 @FXSYS_roundf(float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3Char15WillBeDestroyedEv(%class.CPDF_Type3Char* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.CPDF_Font::FormIface"*, %"class.CPDF_Font::FormIface"** %2, align 8
  store %"class.CPDF_Font::FormIface"* null, %"class.CPDF_Font::FormIface"** %2, align 8
  %4 = icmp eq %"class.CPDF_Font::FormIface"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.CPDF_Font::FormIface"* %3 to void (%"class.CPDF_Font::FormIface"*)***
  %7 = load void (%"class.CPDF_Font::FormIface"*)**, void (%"class.CPDF_Font::FormIface"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %7, i64 1
  %9 = load void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %8, align 8
  tail call void %9(%"class.CPDF_Font::FormIface"* nonnull %3) #5
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3Char9TransformEPN9CPDF_Font9FormIfaceERK10CFX_Matrix(%class.CPDF_Type3Char*, %"class.CPDF_Font::FormIface"*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_FloatRect, align 8
  %5 = alloca %class.CFX_FloatRect, align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %class.CFX_FloatRect*
  %8 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = tail call float @_ZNK10CFX_Matrix8GetXUnitEv(%class.CFX_Matrix* %2) #5
  %12 = fmul float %11, %10
  %13 = fadd float %12, 5.000000e-01
  %14 = fptosi float %13 to i32
  store i32 %14, i32* %8, align 4
  %15 = bitcast %class.CFX_FloatRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #5
  %16 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #5
  %17 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 5
  %18 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 5, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %17, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %3
  %24 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 5, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 5, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %39, label %29

29:                                               ; preds = %23, %3
  %30 = bitcast %"class.CPDF_Font::FormIface"* %1 to { <2 x float>, <2 x float> } (%"class.CPDF_Font::FormIface"*)***
  %31 = load { <2 x float>, <2 x float> } (%"class.CPDF_Font::FormIface"*)**, { <2 x float>, <2 x float> } (%"class.CPDF_Font::FormIface"*)*** %30, align 8
  %32 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.CPDF_Font::FormIface"*)*, { <2 x float>, <2 x float> } (%"class.CPDF_Font::FormIface"*)** %31, i64 4
  %33 = load { <2 x float>, <2 x float> } (%"class.CPDF_Font::FormIface"*)*, { <2 x float>, <2 x float> } (%"class.CPDF_Font::FormIface"*)** %32, align 8
  %34 = tail call { <2 x float>, <2 x float> } %33(%"class.CPDF_Font::FormIface"* %1) #5
  %35 = extractvalue { <2 x float>, <2 x float> } %34, 0
  %36 = extractvalue { <2 x float>, <2 x float> } %34, 1
  %37 = bitcast %class.CFX_FloatRect* %4 to <2 x float>*
  store <2 x float> %35, <2 x float>* %37, align 8
  %38 = bitcast float* %16 to <2 x float>*
  store <2 x float> %36, <2 x float>* %38, align 8
  call void @_ZN13CFX_FloatRect5ScaleEf(%class.CFX_FloatRect* nonnull %4, float 1.000000e+03) #5
  br label %41

39:                                               ; preds = %23
  %40 = bitcast %class.CFX_FloatRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #5
  call void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect* nonnull %5, %struct.FX_RECT* dereferenceable(16) %17) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 4 %40, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #5
  br label %41

41:                                               ; preds = %39, %29
  %42 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #5
  %43 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %2, %class.CFX_FloatRect* nonnull dereferenceable(16) %4) #5
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %45 = extractvalue { <2 x float>, <2 x float> } %43, 0
  store <2 x float> %45, <2 x float>* %44, align 8
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %47 = extractvalue { <2 x float>, <2 x float> } %43, 1
  store <2 x float> %47, <2 x float>* %46, align 8
  %48 = call { i64, i64 } @_ZNK13CFX_FloatRect15ToRoundedFxRectEv(%class.CFX_FloatRect* nonnull %7) #5
  %49 = extractvalue { i64, i64 } %48, 0
  %50 = extractvalue { i64, i64 } %48, 1
  %51 = bitcast %struct.FX_RECT* %17 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast i32* %18 to i64*
  store i64 %50, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #5
  ret void
}

declare float @_ZNK10CFX_Matrix8GetXUnitEv(%class.CFX_Matrix*) local_unnamed_addr #2

declare void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect*, %struct.FX_RECT* dereferenceable(16)) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK13CFX_FloatRect15ToRoundedFxRectEv(%class.CFX_FloatRect*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3Char7SetFormENSt3__110unique_ptrIN9CPDF_Font9FormIfaceENS0_14default_deleteIS3_EEEE(%class.CPDF_Type3Char* nocapture, %"class.CPDF_Font::FormIface"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.CPDF_Font::FormIface"* %1 to i64
  %4 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.CPDF_Font::FormIface"*, %"class.CPDF_Font::FormIface"** %4, align 8
  %6 = bitcast %class.CPDF_Type3Char* %0 to i64*
  store i64 %3, i64* %6, align 8
  %7 = icmp eq %"class.CPDF_Font::FormIface"* %5, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.CPDF_Font::FormIface"* %5 to void (%"class.CPDF_Font::FormIface"*)***
  %10 = load void (%"class.CPDF_Font::FormIface"*)**, void (%"class.CPDF_Font::FormIface"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %10, i64 1
  %12 = load void (%"class.CPDF_Font::FormIface"*)*, void (%"class.CPDF_Font::FormIface"*)** %11, align 8
  tail call void %12(%"class.CPDF_Font::FormIface"* nonnull %5) #5
  br label %13

13:                                               ; preds = %8, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14CPDF_Type3Char9GetBitmapEv(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CPDF_Type3Char* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  %5 = ptrtoint %class.CFX_DIBitmap* %4 to i64
  %6 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CFX_DIBitmap* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.fxcrt::RetainPtr"* @_ZNK14CPDF_Type3Char9GetBitmapEv(%class.CPDF_Type3Char* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Type3Char, %class.CPDF_Type3Char* %0, i64 0, i32 1
  ret %"class.fxcrt::RetainPtr"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
