; ModuleID = '../../components/optimization_guide/core/optimization_guide_navigation_data.cc'
source_filename = "../../components/optimization_guide/core/optimization_guide_navigation_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.OptimizationGuideNavigationData = type { i64, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree.1", %"class.base::flat_map", %"class.absl::optional", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.45", %"class.base::WeakPtrFactory" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.base::internal::flat_tree.1" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.9" }
%"class.base::internal::flat_tree.9" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.optimization_guide::proto::PageHint"* }
%"class.optimization_guide::proto::PageHint" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.24", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.31 }
%union.anon.31 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%"class.ukm::builders::OptimizationGuide" = type { %"class.ukm::internal::UkmEntryBuilderBase" }
%"class.ukm::internal::UkmEntryBuilderBase" = type { i32 (...)**, %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.ukm::mojom::UkmEntry"* }
%"class.ukm::mojom::UkmEntry" = type { i64, i64, %"class.base::flat_map.58" }
%"class.base::flat_map.58" = type { %"class.base::internal::flat_tree.59" }
%"class.base::internal::flat_tree.59" = type { %"class.std::__1::vector.60" }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair.62"*, %"struct.std::__1::pair.62"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair.62" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair.62"* }
%"class.absl::optional.71" = type { %"class.absl::optional_internal::optional_data.72" }
%"class.absl::optional_internal::optional_data.72" = type { %"class.absl::optional_internal::optional_data_base.73" }
%"class.absl::optional_internal::optional_data_base.73" = type { %"class.absl::optional_internal::optional_data_dtor_base.74" }
%"class.absl::optional_internal::optional_data_dtor_base.74" = type { i8, %union.anon.75 }
%union.anon.75 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.ukm::UkmRecorder" = type { i32 (...)** }

@_ZN31OptimizationGuideNavigationDataC1El = hidden unnamed_addr alias void (%class.OptimizationGuideNavigationData*, i64), void (%class.OptimizationGuideNavigationData*, i64)* @_ZN31OptimizationGuideNavigationDataC2El
@_ZN31OptimizationGuideNavigationDataD1Ev = hidden unnamed_addr alias void (%class.OptimizationGuideNavigationData*), void (%class.OptimizationGuideNavigationData*)* @_ZN31OptimizationGuideNavigationDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31OptimizationGuideNavigationDataC2El(%class.OptimizationGuideNavigationData*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 8, i32 0
  %9 = ptrtoint %class.OptimizationGuideNavigationData* %0 to i64
  %10 = bitcast %"class.base::internal::flat_tree"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 73, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %8, i64 %9) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31OptimizationGuideNavigationDataD2Ev(%class.OptimizationGuideNavigationData*) unnamed_addr #0 align 2 {
  tail call void @_ZNK31OptimizationGuideNavigationData26RecordOptimizationGuideUKMEv(%class.OptimizationGuideNavigationData* %0) #5
  %2 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #5
  %3 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.optimization_guide::proto::PageHint"*, %"class.optimization_guide::proto::PageHint"** %7, align 8
  store %"class.optimization_guide::proto::PageHint"* null, %"class.optimization_guide::proto::PageHint"** %7, align 8
  %9 = icmp eq %"class.optimization_guide::proto::PageHint"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.optimization_guide::proto::PageHint"* %8 to void (%"class.optimization_guide::proto::PageHint"*)***
  %12 = load void (%"class.optimization_guide::proto::PageHint"*)**, void (%"class.optimization_guide::proto::PageHint"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.optimization_guide::proto::PageHint"*)*, void (%"class.optimization_guide::proto::PageHint"*)** %12, i64 1
  %14 = load void (%"class.optimization_guide::proto::PageHint"*)*, void (%"class.optimization_guide::proto::PageHint"*)** %13, align 8
  tail call void %14(%"class.optimization_guide::proto::PageHint"* nonnull %8) #5
  br label %15

15:                                               ; preds = %10, %6
  store i8 0, i8* %3, align 8
  br label %16

16:                                               ; preds = %1, %15
  %17 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"struct.std::__1::pair"* %18 to i64
  %22 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"struct.std::__1::pair"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::pair"* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #6
  br label %25

25:                                               ; preds = %16, %20
  %26 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %32 = bitcast i32** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #6
  br label %34

34:                                               ; preds = %25, %29
  %35 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = ptrtoint i32* %36 to i64
  %40 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast i32* %36 to i8*
  tail call void @_ZdlPv(i8* %42) #6
  br label %43

43:                                               ; preds = %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK31OptimizationGuideNavigationData13RecordMetricsEv(%class.OptimizationGuideNavigationData* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK31OptimizationGuideNavigationData26RecordOptimizationGuideUKMEv(%class.OptimizationGuideNavigationData* %0)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK31OptimizationGuideNavigationData26RecordOptimizationGuideUKMEv(%class.OptimizationGuideNavigationData* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.ukm::builders::OptimizationGuide", align 8
  %3 = alloca %"class.absl::optional.71", align 8
  %4 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @_ZN3ukm17ConvertToSourceIdElNS_11SourceIdObj4TypeE(i64 %5, i64 1) #5
  %7 = bitcast %"class.ukm::builders::OptimizationGuide"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  %8 = bitcast %"class.ukm::builders::OptimizationGuide"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN3ukm8builders17OptimizationGuideC1El(%"class.ukm::builders::OptimizationGuide"* nonnull %2, i64 %6) #5
  %9 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %20, %18
  br i1 %21, label %29, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.absl::optional.71", %"class.absl::optional.71"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #5
  %24 = sub nsw i64 %20, %18
  store i8 1, i8* %23, align 8
  %25 = getelementptr inbounds %"class.absl::optional.71", %"class.absl::optional.71"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.absl::optional.71", %"class.absl::optional.71"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %26) #5
  %28 = call dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide37SetNavigationHintsFetchRequestLatencyEl(%"class.ukm::builders::OptimizationGuide"* nonnull %2, i64 %27) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #5
  br label %31

29:                                               ; preds = %16, %12
  %30 = call dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide37SetNavigationHintsFetchRequestLatencyEl(%"class.ukm::builders::OptimizationGuide"* nonnull %2, i64 9223372036854775807) #5
  br label %31

31:                                               ; preds = %1, %22, %29
  %32 = phi i1 [ false, %1 ], [ true, %29 ], [ true, %22 ]
  %33 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = call dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide36SetNavigationHintsFetchAttemptStatusEl(%"class.ukm::builders::OptimizationGuide"* nonnull %2, i64 %39) #5
  br label %41

41:                                               ; preds = %31, %36
  %42 = phi i1 [ true, %36 ], [ %32, %31 ]
  %43 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %46 = load i32*, i32** %45, align 8
  %47 = icmp eq i32* %44, %46
  br i1 %47, label %142, label %48

48:                                               ; preds = %41
  %49 = ptrtoint i32* %44 to i64
  %50 = getelementptr i32, i32* %46, i64 -1
  %51 = ptrtoint i32* %50 to i64
  %52 = sub i64 %51, %49
  %53 = lshr i64 %52, 2
  %54 = add nuw nsw i64 %53, 1
  %55 = icmp ult i64 %54, 4
  br i1 %55, label %56, label %59

56:                                               ; preds = %122, %48
  %57 = phi i64 [ 0, %48 ], [ %128, %122 ]
  %58 = phi i32* [ %44, %48 ], [ %61, %122 ]
  br label %133

59:                                               ; preds = %48
  %60 = and i64 %54, 9223372036854775804
  %61 = getelementptr i32, i32* %44, i64 %60
  %62 = add nsw i64 %60, -4
  %63 = lshr exact i64 %62, 2
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %62, 0
  br i1 %66, label %102, label %67

67:                                               ; preds = %59
  %68 = sub nuw nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %99, %69 ]
  %71 = phi <2 x i64> [ zeroinitializer, %67 ], [ %97, %69 ]
  %72 = phi <2 x i64> [ zeroinitializer, %67 ], [ %98, %69 ]
  %73 = phi i64 [ %68, %67 ], [ %100, %69 ]
  %74 = getelementptr i32, i32* %44, i64 %70
  %75 = bitcast i32* %74 to <2 x i32>*
  %76 = load <2 x i32>, <2 x i32>* %75, align 4
  %77 = getelementptr i32, i32* %74, i64 2
  %78 = bitcast i32* %77 to <2 x i32>*
  %79 = load <2 x i32>, <2 x i32>* %78, align 4
  %80 = shl <2 x i32> <i32 1, i32 1>, %76
  %81 = shl <2 x i32> <i32 1, i32 1>, %79
  %82 = sext <2 x i32> %80 to <2 x i64>
  %83 = sext <2 x i32> %81 to <2 x i64>
  %84 = or <2 x i64> %71, %82
  %85 = or <2 x i64> %72, %83
  %86 = or i64 %70, 4
  %87 = getelementptr i32, i32* %44, i64 %86
  %88 = bitcast i32* %87 to <2 x i32>*
  %89 = load <2 x i32>, <2 x i32>* %88, align 4
  %90 = getelementptr i32, i32* %87, i64 2
  %91 = bitcast i32* %90 to <2 x i32>*
  %92 = load <2 x i32>, <2 x i32>* %91, align 4
  %93 = shl <2 x i32> <i32 1, i32 1>, %89
  %94 = shl <2 x i32> <i32 1, i32 1>, %92
  %95 = sext <2 x i32> %93 to <2 x i64>
  %96 = sext <2 x i32> %94 to <2 x i64>
  %97 = or <2 x i64> %84, %95
  %98 = or <2 x i64> %85, %96
  %99 = add i64 %70, 8
  %100 = add i64 %73, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %69, !llvm.loop !3

102:                                              ; preds = %69, %59
  %103 = phi <2 x i64> [ undef, %59 ], [ %97, %69 ]
  %104 = phi <2 x i64> [ undef, %59 ], [ %98, %69 ]
  %105 = phi i64 [ 0, %59 ], [ %99, %69 ]
  %106 = phi <2 x i64> [ zeroinitializer, %59 ], [ %97, %69 ]
  %107 = phi <2 x i64> [ zeroinitializer, %59 ], [ %98, %69 ]
  %108 = icmp eq i64 %65, 0
  br i1 %108, label %122, label %109

109:                                              ; preds = %102
  %110 = getelementptr i32, i32* %44, i64 %105
  %111 = getelementptr i32, i32* %110, i64 2
  %112 = bitcast i32* %111 to <2 x i32>*
  %113 = load <2 x i32>, <2 x i32>* %112, align 4
  %114 = shl <2 x i32> <i32 1, i32 1>, %113
  %115 = sext <2 x i32> %114 to <2 x i64>
  %116 = or <2 x i64> %107, %115
  %117 = bitcast i32* %110 to <2 x i32>*
  %118 = load <2 x i32>, <2 x i32>* %117, align 4
  %119 = shl <2 x i32> <i32 1, i32 1>, %118
  %120 = sext <2 x i32> %119 to <2 x i64>
  %121 = or <2 x i64> %106, %120
  br label %122

122:                                              ; preds = %102, %109
  %123 = phi <2 x i64> [ %103, %102 ], [ %121, %109 ]
  %124 = phi <2 x i64> [ %104, %102 ], [ %116, %109 ]
  %125 = or <2 x i64> %124, %123
  %126 = shufflevector <2 x i64> %125, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %127 = or <2 x i64> %125, %126
  %128 = extractelement <2 x i64> %127, i32 0
  %129 = icmp eq i64 %54, %60
  br i1 %129, label %130, label %56

130:                                              ; preds = %133, %122
  %131 = phi i64 [ %128, %122 ], [ %139, %133 ]
  %132 = call dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide30SetRegisteredOptimizationTypesEl(%"class.ukm::builders::OptimizationGuide"* nonnull %2, i64 %131) #5
  br label %142

133:                                              ; preds = %56, %133
  %134 = phi i64 [ %139, %133 ], [ %57, %56 ]
  %135 = phi i32* [ %140, %133 ], [ %58, %56 ]
  %136 = load i32, i32* %135, align 4
  %137 = shl i32 1, %136
  %138 = sext i32 %137 to i64
  %139 = or i64 %134, %138
  %140 = getelementptr inbounds i32, i32* %135, i64 1
  %141 = icmp eq i32* %140, %46
  br i1 %141, label %130, label %133, !llvm.loop !5

142:                                              ; preds = %130, %41
  %143 = phi i1 [ %42, %41 ], [ true, %130 ]
  %144 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %147 = load i32*, i32** %146, align 8
  %148 = icmp eq i32* %145, %147
  br i1 %148, label %243, label %149

149:                                              ; preds = %142
  %150 = ptrtoint i32* %145 to i64
  %151 = getelementptr i32, i32* %147, i64 -1
  %152 = ptrtoint i32* %151 to i64
  %153 = sub i64 %152, %150
  %154 = lshr i64 %153, 2
  %155 = add nuw nsw i64 %154, 1
  %156 = icmp ult i64 %155, 4
  br i1 %156, label %157, label %160

157:                                              ; preds = %223, %149
  %158 = phi i64 [ 0, %149 ], [ %229, %223 ]
  %159 = phi i32* [ %145, %149 ], [ %162, %223 ]
  br label %234

160:                                              ; preds = %149
  %161 = and i64 %155, 9223372036854775804
  %162 = getelementptr i32, i32* %145, i64 %161
  %163 = add nsw i64 %161, -4
  %164 = lshr exact i64 %163, 2
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 1
  %167 = icmp eq i64 %163, 0
  br i1 %167, label %203, label %168

168:                                              ; preds = %160
  %169 = sub nuw nsw i64 %165, %166
  br label %170

170:                                              ; preds = %170, %168
  %171 = phi i64 [ 0, %168 ], [ %200, %170 ]
  %172 = phi <2 x i64> [ zeroinitializer, %168 ], [ %198, %170 ]
  %173 = phi <2 x i64> [ zeroinitializer, %168 ], [ %199, %170 ]
  %174 = phi i64 [ %169, %168 ], [ %201, %170 ]
  %175 = getelementptr i32, i32* %145, i64 %171
  %176 = bitcast i32* %175 to <2 x i32>*
  %177 = load <2 x i32>, <2 x i32>* %176, align 4
  %178 = getelementptr i32, i32* %175, i64 2
  %179 = bitcast i32* %178 to <2 x i32>*
  %180 = load <2 x i32>, <2 x i32>* %179, align 4
  %181 = shl <2 x i32> <i32 1, i32 1>, %177
  %182 = shl <2 x i32> <i32 1, i32 1>, %180
  %183 = sext <2 x i32> %181 to <2 x i64>
  %184 = sext <2 x i32> %182 to <2 x i64>
  %185 = or <2 x i64> %172, %183
  %186 = or <2 x i64> %173, %184
  %187 = or i64 %171, 4
  %188 = getelementptr i32, i32* %145, i64 %187
  %189 = bitcast i32* %188 to <2 x i32>*
  %190 = load <2 x i32>, <2 x i32>* %189, align 4
  %191 = getelementptr i32, i32* %188, i64 2
  %192 = bitcast i32* %191 to <2 x i32>*
  %193 = load <2 x i32>, <2 x i32>* %192, align 4
  %194 = shl <2 x i32> <i32 1, i32 1>, %190
  %195 = shl <2 x i32> <i32 1, i32 1>, %193
  %196 = sext <2 x i32> %194 to <2 x i64>
  %197 = sext <2 x i32> %195 to <2 x i64>
  %198 = or <2 x i64> %185, %196
  %199 = or <2 x i64> %186, %197
  %200 = add i64 %171, 8
  %201 = add i64 %174, -2
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %170, !llvm.loop !7

203:                                              ; preds = %170, %160
  %204 = phi <2 x i64> [ undef, %160 ], [ %198, %170 ]
  %205 = phi <2 x i64> [ undef, %160 ], [ %199, %170 ]
  %206 = phi i64 [ 0, %160 ], [ %200, %170 ]
  %207 = phi <2 x i64> [ zeroinitializer, %160 ], [ %198, %170 ]
  %208 = phi <2 x i64> [ zeroinitializer, %160 ], [ %199, %170 ]
  %209 = icmp eq i64 %166, 0
  br i1 %209, label %223, label %210

210:                                              ; preds = %203
  %211 = getelementptr i32, i32* %145, i64 %206
  %212 = getelementptr i32, i32* %211, i64 2
  %213 = bitcast i32* %212 to <2 x i32>*
  %214 = load <2 x i32>, <2 x i32>* %213, align 4
  %215 = shl <2 x i32> <i32 1, i32 1>, %214
  %216 = sext <2 x i32> %215 to <2 x i64>
  %217 = or <2 x i64> %208, %216
  %218 = bitcast i32* %211 to <2 x i32>*
  %219 = load <2 x i32>, <2 x i32>* %218, align 4
  %220 = shl <2 x i32> <i32 1, i32 1>, %219
  %221 = sext <2 x i32> %220 to <2 x i64>
  %222 = or <2 x i64> %207, %221
  br label %223

223:                                              ; preds = %203, %210
  %224 = phi <2 x i64> [ %204, %203 ], [ %222, %210 ]
  %225 = phi <2 x i64> [ %205, %203 ], [ %217, %210 ]
  %226 = or <2 x i64> %225, %224
  %227 = shufflevector <2 x i64> %226, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %228 = or <2 x i64> %226, %227
  %229 = extractelement <2 x i64> %228, i32 0
  %230 = icmp eq i64 %155, %161
  br i1 %230, label %231, label %157

231:                                              ; preds = %234, %223
  %232 = phi i64 [ %229, %223 ], [ %240, %234 ]
  %233 = call dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide32SetRegisteredOptimizationTargetsEl(%"class.ukm::builders::OptimizationGuide"* nonnull %2, i64 %232) #5
  br label %244

234:                                              ; preds = %157, %234
  %235 = phi i64 [ %240, %234 ], [ %158, %157 ]
  %236 = phi i32* [ %241, %234 ], [ %159, %157 ]
  %237 = load i32, i32* %236, align 4
  %238 = shl i32 1, %237
  %239 = sext i32 %238 to i64
  %240 = or i64 %235, %239
  %241 = getelementptr inbounds i32, i32* %236, i64 1
  %242 = icmp eq i32* %241, %147
  br i1 %242, label %231, label %234, !llvm.loop !8

243:                                              ; preds = %142
  br i1 %143, label %244, label %247

244:                                              ; preds = %231, %243
  %245 = getelementptr inbounds %"class.ukm::builders::OptimizationGuide", %"class.ukm::builders::OptimizationGuide"* %2, i64 0, i32 0
  %246 = call %"class.ukm::UkmRecorder"* @_ZN3ukm11UkmRecorder3GetEv() #5
  call void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"* nonnull %245, %"class.ukm::UkmRecorder"* %246) #5
  br label %247

247:                                              ; preds = %244, %243
  call void @_ZN3ukm8builders17OptimizationGuideD1Ev(%"class.ukm::builders::OptimizationGuide"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN3ukm17ConvertToSourceIdElNS_11SourceIdObj4TypeE(i64, i64) local_unnamed_addr #3

declare void @_ZN3ukm8builders17OptimizationGuideC1El(%"class.ukm::builders::OptimizationGuide"*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK31OptimizationGuideNavigationData19hints_fetch_latencyEv(%class.OptimizationGuideNavigationData* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.OptimizationGuideNavigationData, %class.OptimizationGuideNavigationData* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp sge i64 %13, %11
  %15 = sub nsw i64 %13, %11
  %16 = zext i1 %14 to i8
  br label %17

17:                                               ; preds = %5, %1, %9
  %18 = phi i8 [ 0, %5 ], [ 0, %1 ], [ %16, %9 ]
  %19 = phi i64 [ undef, %5 ], [ undef, %1 ], [ %15, %9 ]
  %20 = insertvalue { i8, i64 } undef, i8 %18, 0
  %21 = insertvalue { i8, i64 } %20, i64 %19, 1
  ret { i8, i64 } %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide37SetNavigationHintsFetchRequestLatencyEl(%"class.ukm::builders::OptimizationGuide"*, i64) local_unnamed_addr #3

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #3

declare dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide36SetNavigationHintsFetchAttemptStatusEl(%"class.ukm::builders::OptimizationGuide"*, i64) local_unnamed_addr #3

declare dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide30SetRegisteredOptimizationTypesEl(%"class.ukm::builders::OptimizationGuide"*, i64) local_unnamed_addr #3

declare dereferenceable(16) %"class.ukm::builders::OptimizationGuide"* @_ZN3ukm8builders17OptimizationGuide32SetRegisteredOptimizationTargetsEl(%"class.ukm::builders::OptimizationGuide"*, i64) local_unnamed_addr #3

declare void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #3

declare %"class.ukm::UkmRecorder"* @_ZN3ukm11UkmRecorder3GetEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3ukm8builders17OptimizationGuideD1Ev(%"class.ukm::builders::OptimizationGuide"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6, !4}
!6 = !{!"llvm.loop.unroll.runtime.disable"}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !6, !4}
