; ModuleID = '../../ui/wm/core/default_activation_client.cc'
source_filename = "../../ui/wm/core/default_activation_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.wm::DefaultActivationClient" = type { %"class.wm::ActivationClient", %"class.aura::WindowObserver", %"class.std::__1::vector", %"class.aura::Window"*, %"class.base::ObserverList" }
%"class.wm::ActivationClient" = type { i32 (...)** }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.aura::Window"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.7", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.9" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::vector.64", i32, i32, i32, [4 x i8], %"class.base::ObserverList.71", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.83", %"class.base::WeakPtr.89" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList.17" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.17" = type <{ %"class.std::__1::vector.7", %"class.base::LinkedList.18", i64, i32, [4 x i8] }>
%"class.base::LinkedList.18" = type { %"class.base::LinkNode.19" }
%"class.base::LinkNode.19" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.21", %"class.std::__1::vector.28", %"class.ui::EventHandler"* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.23" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.43" }
%"class.std::__1::map.43" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.71" = type <{ %"class.std::__1::vector.72", %"class.base::LinkedList.80", i64, i32, [4 x i8] }>
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.75" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.80" = type { %"class.base::LinkNode.81" }
%"class.base::LinkNode.81" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.89" = type { %"class.base::internal::WeakPtrBase" }
%"class.wm::ActivationChangeObserver" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"struct.aura::WindowObserver::HierarchyChangeParams" = type { %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, i32, %"class.aura::Window"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.wm::DefaultActivationClient::Deleter" = type { %"class.aura::WindowObserver", %"class.wm::DefaultActivationClient"*, %"class.aura::Window"* }

$_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl = comdat any

$_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE = comdat any

$_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE = comdat any

$_ZN2wm16ActivationClientD2Ev = comdat any

$_ZN2wm16ActivationClientD0Ev = comdat any

$_ZN2wm23DefaultActivationClient7DeleterD0Ev = comdat any

$_ZN2wm23DefaultActivationClient7Deleter17OnWindowDestroyedEPN4aura6WindowE = comdat any

$_ZTVN2wm16ActivationClientE = comdat any

$_ZTVN2wm23DefaultActivationClient7DeleterE = comdat any

@_ZTVN2wm23DefaultActivationClientE = hidden unnamed_addr constant { [13 x i8*], [30 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.wm::DefaultActivationClient"*, %"class.wm::ActivationChangeObserver"*)* @_ZN2wm23DefaultActivationClient11AddObserverEPNS_24ActivationChangeObserverE to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient"*, %"class.wm::ActivationChangeObserver"*)* @_ZN2wm23DefaultActivationClient14RemoveObserverEPNS_24ActivationChangeObserverE to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)* @_ZN2wm23DefaultActivationClient14ActivateWindowEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)* @_ZN2wm23DefaultActivationClient16DeactivateWindowEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::DefaultActivationClient"*)* @_ZNK2wm23DefaultActivationClient15GetActiveWindowEv to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)* @_ZNK2wm23DefaultActivationClient20GetActivatableWindowEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)* @_ZNK2wm23DefaultActivationClient17GetToplevelWindowEPKN4aura6WindowE to i8*), i8* bitcast (i1 (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)* @_ZNK2wm23DefaultActivationClient17CanActivateWindowEPKN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient"*)* @_ZN2wm23DefaultActivationClientD2Ev to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient"*)* @_ZN2wm23DefaultActivationClientD0Ev to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)* @_ZN2wm23DefaultActivationClient17OnWindowDestroyedEPN4aura6WindowE to i8*)], [30 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.wm::DefaultActivationClient"*)* @_ZThn8_N2wm23DefaultActivationClientD1Ev to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient"*)* @_ZThn8_N2wm23DefaultActivationClientD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)* @_ZThn8_N2wm23DefaultActivationClient17OnWindowDestroyedEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, align 8
@_ZTVN2wm16ActivationClientE = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.wm::ActivationClient"*)* @_ZN2wm16ActivationClientD2Ev to i8*), i8* bitcast (void (%"class.wm::ActivationClient"*)* @_ZN2wm16ActivationClientD0Ev to i8*)] }, comdat, align 8
@_ZTVN2wm23DefaultActivationClient7DeleterE = linkonce_odr hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::WindowObserver"*)* @_ZN4aura14WindowObserverD2Ev to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient::Deleter"*)* @_ZN2wm23DefaultActivationClient7DeleterD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.wm::DefaultActivationClient::Deleter"*, %"class.aura::Window"*)* @_ZN2wm23DefaultActivationClient7Deleter17OnWindowDestroyedEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, comdat, align 8

@_ZN2wm23DefaultActivationClientC1EPN4aura6WindowE = hidden unnamed_addr alias void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*), void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)* @_ZN2wm23DefaultActivationClientC2EPN4aura6WindowE
@_ZN2wm23DefaultActivationClientD1Ev = hidden unnamed_addr alias void (%"class.wm::DefaultActivationClient"*), void (%"class.wm::DefaultActivationClient"*)* @_ZN2wm23DefaultActivationClientD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClientC2EPN4aura6WindowE(%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2wm16ActivationClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 1
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %5) #11
  %6 = bitcast %"class.wm::DefaultActivationClient"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [30 x i8*] }, { [13 x i8*], [30 x i8*] }* @_ZTVN2wm23DefaultActivationClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [30 x i8*] }, { [13 x i8*], [30 x i8*] }* @_ZTVN2wm23DefaultActivationClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 56, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %8, %"class.base::internal::LinkNodeBase"* %8, %"class.base::internal::LinkNodeBase"* %8) #11
  %10 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 2
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 3
  store i32 0, i32* %11, align 8
  tail call void @_ZN2wm19SetActivationClientEPN4aura6WindowEPNS_16ActivationClientE(%"class.aura::Window"* %1, %"class.wm::ActivationClient"* %3) #11
  %12 = tail call i8* @_Znwm(i64 40) #12
  %13 = bitcast i8* %12 to %"class.aura::WindowObserver"*
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* nonnull %13) #11
  %14 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN2wm23DefaultActivationClient7DeleterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 24
  %16 = bitcast i8* %15 to %"class.wm::DefaultActivationClient"**
  store %"class.wm::DefaultActivationClient"* %0, %"class.wm::DefaultActivationClient"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %12, i64 32
  %18 = bitcast i8* %17 to %"class.aura::Window"**
  store %"class.aura::Window"* %1, %"class.aura::Window"** %18, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* nonnull %13) #11
  ret void
}

declare void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"*) unnamed_addr #1

declare void @_ZN2wm19SetActivationClientEPN4aura6WindowEPNS_16ActivationClientE(%"class.aura::Window"*, %"class.wm::ActivationClient"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClient11AddObserverEPNS_24ActivationChangeObserverE(%"class.wm::DefaultActivationClient"*, %"class.wm::ActivationChangeObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4
  %4 = icmp eq %"class.wm::ActivationChangeObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.wm::ActivationChangeObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.wm::ActivationChangeObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #13
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #13
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #12
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #11
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClient14RemoveObserverEPNS_24ActivationChangeObserverE(%"class.wm::DefaultActivationClient"*, %"class.wm::ActivationChangeObserver"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.wm::ActivationChangeObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #11
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClient14ActivateWindowEPN4aura6WindowE(%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2wm23DefaultActivationClient18ActivateWindowImplENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::DefaultActivationClient"* %0, i32 0, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClient18ActivateWindowImplENS_24ActivationChangeObserver16ActivationReasonEPN4aura6WindowE(%"class.wm::DefaultActivationClient"*, i32, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = alloca %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %8 = ptrtoint %"class.aura::Window"* %2 to i64
  %9 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 0
  %10 = bitcast %"class.wm::DefaultActivationClient"* %0 to %"class.aura::Window"* (%"class.wm::ActivationClient"*)***
  %11 = load %"class.aura::Window"* (%"class.wm::ActivationClient"*)**, %"class.aura::Window"* (%"class.wm::ActivationClient"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::ActivationClient"*)*, %"class.aura::Window"* (%"class.wm::ActivationClient"*)** %11, i64 4
  %13 = load %"class.aura::Window"* (%"class.wm::ActivationClient"*)*, %"class.aura::Window"* (%"class.wm::ActivationClient"*)** %12, align 8
  %14 = tail call %"class.aura::Window"* %13(%"class.wm::ActivationClient"* %9) #11
  %15 = icmp eq %"class.aura::Window"* %14, %2
  br i1 %15, label %797, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4
  %18 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %21 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %22 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %17, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 40, i1 false)
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %22, align 8, !noalias !2
  %25 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %26 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %25, align 8, !noalias !2
  %27 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %26
  %28 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %28) #11
  br i1 %27, label %29, label %31

29:                                               ; preds = %16
  %30 = bitcast %"class.base::ObserverList"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #11, !alias.scope !2
  br label %71

31:                                               ; preds = %16
  store %"class.base::ObserverList"* %17, %"class.base::ObserverList"** %19, align 8
  %32 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %28, %"class.base::internal::LinkNodeBase"* %32) #11
  store i64 0, i64* %20, align 8
  %33 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::ObserverList"* %17 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 3
  br label %43

43:                                               ; preds = %36, %31
  %44 = phi i64 [ %42, %36 ], [ -1, %31 ]
  store i64 %44, i64* %21, align 8
  %45 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %45, i64 0, i32 0, i32 0, i32 1
  %47 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.base::ObserverList"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %52, %44
  %54 = select i1 %53, i64 %52, i64 %44
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %43
  %57 = inttoptr i64 %50 to %"class.base::internal::UncheckedObserverAdapter"*
  %58 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %45, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %57, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %71

62:                                               ; preds = %56, %66
  %63 = phi i64 [ %64, %66 ], [ 0, %56 ]
  %64 = add nuw i64 %63, 1
  store i64 %64, i64* %20, align 8
  %65 = icmp ult i64 %64, %54
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  %67 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %58, align 8
  %68 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %67, i64 %64, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %62, label %71

71:                                               ; preds = %66, %62, %56, %43, %29
  %72 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %76 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %76) #11
  %78 = bitcast %"class.base::ObserverList"** %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #11, !alias.scope !5
  %79 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  br label %80

80:                                               ; preds = %482, %71
  %81 = phi %"class.base::ObserverList"* [ %79, %71 ], [ %480, %482 ]
  %82 = icmp eq %"class.base::ObserverList"* %81, null
  br i1 %82, label %98, label %83

83:                                               ; preds = %80
  %84 = load i64, i64* %20, align 8
  %85 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %81, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.base::ObserverList"* %81 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 3
  %92 = load i64, i64* %21, align 8
  %93 = icmp ult i64 %91, %92
  %94 = select i1 %93, i64 %91, i64 %92
  %95 = icmp eq i64 %84, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %83
  %97 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  br label %114

98:                                               ; preds = %83, %80
  %99 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %100 = icmp eq %"class.base::ObserverList"* %99, null
  br i1 %100, label %214, label %101

101:                                              ; preds = %98
  %102 = load i64, i64* %74, align 8
  %103 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %99, i64 0, i32 0, i32 0, i32 1
  %104 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.base::ObserverList"* %99 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %105, %107
  %109 = ashr exact i64 %108, 3
  %110 = load i64, i64* %75, align 8
  %111 = icmp ult i64 %109, %110
  %112 = select i1 %111, i64 %109, i64 %110
  %113 = icmp eq i64 %102, %112
  br i1 %113, label %123, label %114

114:                                              ; preds = %101, %96
  %115 = phi %"class.base::ObserverList"* [ %97, %96 ], [ %99, %101 ]
  %116 = icmp eq %"class.base::ObserverList"* %81, %115
  %117 = load i64, i64* %20, align 8
  %118 = load i64, i64* %74, align 8
  %119 = icmp eq i64 %117, %118
  %120 = and i1 %116, %119
  br i1 %120, label %121, label %471

121:                                              ; preds = %114
  %122 = icmp eq %"class.base::ObserverList"* %81, null
  br i1 %122, label %214, label %123

123:                                              ; preds = %101, %121
  %124 = phi %"class.base::ObserverList"* [ %81, %121 ], [ %99, %101 ]
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 1
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 1, i32 0, i32 0, i32 1
  %127 = bitcast %"class.base::internal::LinkNodeBase"** %126 to %"class.base::LinkNode"**
  %128 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %127, align 8
  %129 = bitcast %"class.base::LinkedList"* %125 to %"class.base::LinkNode"**
  %130 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %129, align 8
  %131 = icmp eq %"class.base::LinkNode"* %128, %130
  br i1 %131, label %132, label %210

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  %135 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 1
  %136 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %136
  br i1 %137, label %146, label %138

138:                                              ; preds = %132, %143
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %144, %143 ], [ %134, %132 ]
  %140 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %146, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %145 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %144, %136
  br i1 %145, label %210, label %138

146:                                              ; preds = %138, %132
  %147 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %132 ], [ %139, %138 ]
  %148 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %147 to i64
  %149 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %147, %136
  br i1 %149, label %210, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %147, i64 1
  %152 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %151, %136
  br i1 %152, label %205, label %153

153:                                              ; preds = %150
  %154 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 -2, i32 0
  %155 = ptrtoint i8** %154 to i64
  %156 = sub i64 %155, %148
  %157 = lshr i64 %156, 3
  %158 = add nuw nsw i64 %157, 1
  %159 = and i64 %158, 3
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %179, label %161

161:                                              ; preds = %153, %174
  %162 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %176, %174 ], [ %151, %153 ]
  %163 = phi i64 [ %175, %174 ], [ %148, %153 ]
  %164 = phi i64 [ %177, %174 ], [ %159, %153 ]
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = icmp eq i8* %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %161
  %169 = ptrtoint i8* %166 to i64
  %170 = inttoptr i64 %163 to %"class.base::internal::UncheckedObserverAdapter"*
  %171 = inttoptr i64 %163 to i64*
  store i64 %169, i64* %171, align 8
  %172 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %170, i64 1
  %173 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %172 to i64
  br label %174

174:                                              ; preds = %168, %161
  %175 = phi i64 [ %163, %161 ], [ %173, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %177 = add i64 %164, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %161, !llvm.loop !8

179:                                              ; preds = %174, %153
  %180 = phi i64 [ undef, %153 ], [ %175, %174 ]
  %181 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %151, %153 ], [ %176, %174 ]
  %182 = phi i64 [ %148, %153 ], [ %175, %174 ]
  %183 = icmp ult i64 %156, 24
  br i1 %183, label %201, label %184

184:                                              ; preds = %179, %922
  %185 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %924, %922 ], [ %181, %179 ]
  %186 = phi i64 [ %923, %922 ], [ %182, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %196, label %190

190:                                              ; preds = %184
  %191 = ptrtoint i8* %188 to i64
  %192 = inttoptr i64 %186 to %"class.base::internal::UncheckedObserverAdapter"*
  %193 = inttoptr i64 %186 to i64*
  store i64 %191, i64* %193, align 8
  %194 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %192, i64 1
  %195 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %194 to i64
  br label %196

196:                                              ; preds = %190, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %190 ]
  %198 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 1, i32 0
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, null
  br i1 %200, label %900, label %894

201:                                              ; preds = %922, %179
  %202 = phi i64 [ %180, %179 ], [ %923, %922 ]
  %203 = inttoptr i64 %202 to %"class.base::internal::UncheckedObserverAdapter"*
  %204 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  br label %205

205:                                              ; preds = %201, %150
  %206 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %150 ], [ %204, %201 ]
  %207 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %147, %150 ], [ %203, %201 ]
  %208 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %207, %206
  br i1 %208, label %210, label %209

209:                                              ; preds = %205
  store %"class.base::internal::UncheckedObserverAdapter"* %207, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  br label %210

210:                                              ; preds = %143, %209, %205, %146, %123
  %211 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %212 = icmp eq %"class.base::ObserverList"* %211, null
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %73, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %76) #11
  br label %214

214:                                              ; preds = %98, %121, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #11
  %215 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  %216 = icmp eq %"class.base::ObserverList"* %215, null
  br i1 %216, label %307, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %215, i64 0, i32 1
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %215, i64 0, i32 1, i32 0, i32 0, i32 1
  %220 = bitcast %"class.base::internal::LinkNodeBase"** %219 to %"class.base::LinkNode"**
  %221 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %220, align 8
  %222 = bitcast %"class.base::LinkedList"* %218 to %"class.base::LinkNode"**
  %223 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %222, align 8
  %224 = icmp eq %"class.base::LinkNode"* %221, %223
  br i1 %224, label %225, label %303

225:                                              ; preds = %217
  %226 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %215, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  %228 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %215, i64 0, i32 0, i32 0, i32 1
  %229 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %229
  br i1 %230, label %239, label %231

231:                                              ; preds = %225, %236
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %237, %236 ], [ %227, %225 ]
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = icmp eq i8* %234, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %238 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %237, %229
  br i1 %238, label %303, label %231

239:                                              ; preds = %231, %225
  %240 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %225 ], [ %232, %231 ]
  %241 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %240 to i64
  %242 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %240, %229
  br i1 %242, label %303, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 1
  %245 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %244, %229
  br i1 %245, label %298, label %246

246:                                              ; preds = %243
  %247 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 -2, i32 0
  %248 = ptrtoint i8** %247 to i64
  %249 = sub i64 %248, %241
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 3
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %272, label %254

254:                                              ; preds = %246, %267
  %255 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %269, %267 ], [ %244, %246 ]
  %256 = phi i64 [ %268, %267 ], [ %241, %246 ]
  %257 = phi i64 [ %270, %267 ], [ %252, %246 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = icmp eq i8* %259, null
  br i1 %260, label %267, label %261

261:                                              ; preds = %254
  %262 = ptrtoint i8* %259 to i64
  %263 = inttoptr i64 %256 to %"class.base::internal::UncheckedObserverAdapter"*
  %264 = inttoptr i64 %256 to i64*
  store i64 %262, i64* %264, align 8
  %265 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %263, i64 1
  %266 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %265 to i64
  br label %267

267:                                              ; preds = %261, %254
  %268 = phi i64 [ %256, %254 ], [ %266, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %270 = add i64 %257, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %254, !llvm.loop !10

272:                                              ; preds = %267, %246
  %273 = phi i64 [ undef, %246 ], [ %268, %267 ]
  %274 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %244, %246 ], [ %269, %267 ]
  %275 = phi i64 [ %241, %246 ], [ %268, %267 ]
  %276 = icmp ult i64 %249, 24
  br i1 %276, label %294, label %277

277:                                              ; preds = %272, %890
  %278 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %892, %890 ], [ %274, %272 ]
  %279 = phi i64 [ %891, %890 ], [ %275, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 0, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %289, label %283

283:                                              ; preds = %277
  %284 = ptrtoint i8* %281 to i64
  %285 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = inttoptr i64 %279 to i64*
  store i64 %284, i64* %286, align 8
  %287 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 1
  %288 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %287 to i64
  br label %289

289:                                              ; preds = %283, %277
  %290 = phi i64 [ %279, %277 ], [ %288, %283 ]
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 1, i32 0
  %292 = load i8*, i8** %291, align 8
  %293 = icmp eq i8* %292, null
  br i1 %293, label %868, label %862

294:                                              ; preds = %890, %272
  %295 = phi i64 [ %273, %272 ], [ %891, %890 ]
  %296 = inttoptr i64 %295 to %"class.base::internal::UncheckedObserverAdapter"*
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  br label %298

298:                                              ; preds = %294, %243
  %299 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %243 ], [ %297, %294 ]
  %300 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %240, %243 ], [ %296, %294 ]
  %301 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %300, %299
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  store %"class.base::internal::UncheckedObserverAdapter"* %300, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  br label %303

303:                                              ; preds = %236, %302, %298, %239, %217
  %304 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  %305 = icmp eq %"class.base::ObserverList"* %304, null
  br i1 %305, label %307, label %306

306:                                              ; preds = %303
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %19, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %28) #11
  br label %307

307:                                              ; preds = %214, %303, %306
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  %308 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 3
  store %"class.aura::Window"* %14, %"class.aura::Window"** %308, align 8
  %309 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2
  %310 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2, i32 0, i32 1
  %311 = bitcast %"class.aura::Window"*** %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"class.std::__1::vector"* %309 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = icmp eq i64 %312, %314
  %316 = inttoptr i64 %314 to %"class.aura::Window"**
  %317 = inttoptr i64 %312 to %"class.aura::Window"**
  br i1 %315, label %345, label %318

318:                                              ; preds = %307
  %319 = sub i64 %312, %314
  %320 = ashr exact i64 %319, 3
  br label %324

321:                                              ; preds = %324
  %322 = zext i32 %330 to i64
  %323 = icmp ugt i64 %320, %322
  br i1 %323, label %324, label %345

324:                                              ; preds = %321, %318
  %325 = phi i64 [ 0, %318 ], [ %322, %321 ]
  %326 = phi i32 [ 0, %318 ], [ %330, %321 ]
  %327 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %316, i64 %325
  %328 = load %"class.aura::Window"*, %"class.aura::Window"** %327, align 8
  %329 = icmp eq %"class.aura::Window"* %328, %2
  %330 = add i32 %326, 1
  br i1 %329, label %331, label %321

331:                                              ; preds = %324
  %332 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %316, i64 %325
  %333 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %332, i64 1
  %334 = ptrtoint %"class.aura::Window"** %333 to i64
  %335 = sub i64 %312, %334
  %336 = ashr exact i64 %335, 3
  %337 = icmp eq i64 %335, 0
  br i1 %337, label %341, label %338

338:                                              ; preds = %331
  %339 = bitcast %"class.aura::Window"** %332 to i8*
  %340 = bitcast %"class.aura::Window"** %333 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %339, i8* align 8 %340, i64 %335, i1 false) #11
  br label %341

341:                                              ; preds = %338, %331
  %342 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %332, i64 %336
  store %"class.aura::Window"** %342, %"class.aura::Window"*** %310, align 8
  %343 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 1
  call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %2, %"class.aura::WindowObserver"* %343) #11
  %344 = load %"class.aura::Window"**, %"class.aura::Window"*** %310, align 8
  br label %345

345:                                              ; preds = %321, %307, %341
  %346 = phi %"class.aura::Window"** [ %317, %307 ], [ %344, %341 ], [ %317, %321 ]
  %347 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %348 = load %"class.aura::Window"**, %"class.aura::Window"*** %347, align 8
  %349 = icmp eq %"class.aura::Window"** %346, %348
  br i1 %349, label %354, label %350

350:                                              ; preds = %345
  %351 = bitcast %"class.aura::Window"** %346 to i64*
  store i64 %8, i64* %351, align 8
  %352 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %346, i64 1
  %353 = ptrtoint %"class.aura::Window"** %352 to i64
  store i64 %353, i64* %311, align 8
  br label %407

354:                                              ; preds = %345
  %355 = ptrtoint %"class.aura::Window"** %348 to i64
  %356 = load i64, i64* %313, align 8
  %357 = sub i64 %355, %356
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = icmp ugt i64 %359, 2305843009213693951
  br i1 %360, label %361, label %363

361:                                              ; preds = %354
  %362 = bitcast %"class.std::__1::vector"* %309 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %362) #13
  unreachable

363:                                              ; preds = %354
  %364 = bitcast %"class.aura::Window"*** %347 to i64*
  %365 = icmp ult i64 %358, 1152921504606846975
  br i1 %365, label %366, label %374

366:                                              ; preds = %363
  %367 = ashr exact i64 %357, 2
  %368 = icmp ult i64 %367, %359
  %369 = select i1 %368, i64 %359, i64 %367
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %379, label %371

371:                                              ; preds = %366
  %372 = icmp ugt i64 %369, 2305843009213693951
  br i1 %372, label %373, label %374

373:                                              ; preds = %371
  call void @abort() #13
  unreachable

374:                                              ; preds = %371, %363
  %375 = phi i64 [ %369, %371 ], [ 2305843009213693951, %363 ]
  %376 = shl i64 %375, 3
  %377 = call i8* @_Znwm(i64 %376) #12
  %378 = bitcast i8* %377 to %"class.aura::Window"**
  br label %379

379:                                              ; preds = %374, %366
  %380 = phi i64 [ %375, %374 ], [ 0, %366 ]
  %381 = phi %"class.aura::Window"** [ %378, %374 ], [ null, %366 ]
  %382 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %381, i64 %358
  %383 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %381, i64 %380
  %384 = ptrtoint %"class.aura::Window"** %383 to i64
  %385 = bitcast %"class.aura::Window"** %382 to i64*
  store i64 %8, i64* %385, align 8
  %386 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %382, i64 1
  %387 = ptrtoint %"class.aura::Window"** %386 to i64
  %388 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %309, i64 0, i32 0, i32 0
  %389 = load %"class.aura::Window"**, %"class.aura::Window"*** %388, align 8
  %390 = load i64, i64* %311, align 8
  %391 = ptrtoint %"class.aura::Window"** %389 to i64
  %392 = sub i64 %390, %391
  %393 = ashr exact i64 %392, 3
  %394 = sub nsw i64 0, %393
  %395 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %382, i64 %394
  %396 = ptrtoint %"class.aura::Window"** %395 to i64
  %397 = icmp sgt i64 %392, 0
  br i1 %397, label %398, label %402

398:                                              ; preds = %379
  %399 = bitcast %"class.aura::Window"** %395 to i8*
  %400 = bitcast %"class.aura::Window"** %389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %399, i8* align 8 %400, i64 %392, i1 false) #11
  %401 = load %"class.aura::Window"**, %"class.aura::Window"*** %388, align 8
  br label %402

402:                                              ; preds = %398, %379
  %403 = phi %"class.aura::Window"** [ %389, %379 ], [ %401, %398 ]
  store i64 %396, i64* %313, align 8
  store i64 %387, i64* %311, align 8
  store i64 %384, i64* %364, align 8
  %404 = icmp eq %"class.aura::Window"** %403, null
  br i1 %404, label %407, label %405

405:                                              ; preds = %402
  %406 = bitcast %"class.aura::Window"** %403 to i8*
  call void @_ZdlPv(i8* %406) #12
  br label %407

407:                                              ; preds = %350, %402, %405
  %408 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %2, i64 0, i32 13
  %409 = load %"class.aura::Window"*, %"class.aura::Window"** %408, align 8
  call void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"* %409, %"class.aura::Window"* %2) #11
  %410 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 1
  call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %2, %"class.aura::WindowObserver"* %410) #11
  %411 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %411) #11
  %412 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %413 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %414 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %415 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %415, i8 -86, i64 40, i1 false)
  %416 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %22, align 8, !noalias !11
  %417 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %25, align 8, !noalias !11
  %418 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %416, %417
  %419 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %419) #11
  br i1 %418, label %420, label %422

420:                                              ; preds = %407
  %421 = bitcast %"class.base::ObserverList"** %412 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %421, i8 0, i64 24, i1 false) #11, !alias.scope !11
  br label %462

422:                                              ; preds = %407
  store %"class.base::ObserverList"* %17, %"class.base::ObserverList"** %412, align 8
  %423 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %419, %"class.base::internal::LinkNodeBase"* %423) #11
  store i64 0, i64* %413, align 8
  %424 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 3
  %425 = load i32, i32* %424, align 8
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %434, label %427

427:                                              ; preds = %422
  %428 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.base::ObserverList"* %17 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = sub i64 %429, %431
  %433 = ashr exact i64 %432, 3
  br label %434

434:                                              ; preds = %427, %422
  %435 = phi i64 [ %433, %427 ], [ -1, %422 ]
  store i64 %435, i64* %414, align 8
  %436 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %412, align 8
  %437 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %436, i64 0, i32 0, i32 0, i32 1
  %438 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %437 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"class.base::ObserverList"* %436 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = sub i64 %439, %441
  %443 = ashr exact i64 %442, 3
  %444 = icmp ult i64 %443, %435
  %445 = select i1 %444, i64 %443, i64 %435
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %462, label %447

447:                                              ; preds = %434
  %448 = inttoptr i64 %441 to %"class.base::internal::UncheckedObserverAdapter"*
  %449 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %436, i64 0, i32 0, i32 0, i32 0
  %450 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %448, i64 0, i32 0
  %451 = load i8*, i8** %450, align 8
  %452 = icmp eq i8* %451, null
  br i1 %452, label %453, label %462

453:                                              ; preds = %447, %457
  %454 = phi i64 [ %455, %457 ], [ 0, %447 ]
  %455 = add nuw i64 %454, 1
  store i64 %455, i64* %413, align 8
  %456 = icmp ult i64 %455, %445
  br i1 %456, label %457, label %462

457:                                              ; preds = %453
  %458 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %449, align 8
  %459 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %458, i64 %455, i32 0
  %460 = load i8*, i8** %459, align 8
  %461 = icmp eq i8* %460, null
  br i1 %461, label %453, label %462

462:                                              ; preds = %457, %453, %447, %434, %420
  %463 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %463) #11
  %464 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 1
  %465 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 1
  %466 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 2
  %467 = getelementptr inbounds %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 0, i32 0
  %468 = bitcast %"class.base::ObserverList<wm::ActivationChangeObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %468, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %467) #11
  %469 = bitcast %"class.base::ObserverList"** %464 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %469, i8 0, i64 24, i1 false) #11, !alias.scope !14
  %470 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %412, align 8
  br label %512

471:                                              ; preds = %114
  %472 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %81, i64 0, i32 0, i32 0, i32 0
  %473 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %472, align 8
  %474 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %473, i64 %117
  %475 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %474 to %"class.wm::ActivationChangeObserver"**
  %476 = load %"class.wm::ActivationChangeObserver"*, %"class.wm::ActivationChangeObserver"** %475, align 8
  %477 = bitcast %"class.wm::ActivationChangeObserver"* %476 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %478 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %477, align 8
  %479 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %478, align 8
  call void %479(%"class.wm::ActivationChangeObserver"* %476, i32 %1, %"class.aura::Window"* %2, %"class.aura::Window"* %14) #11
  %480 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %19, align 8
  %481 = icmp eq %"class.base::ObserverList"* %480, null
  br i1 %481, label %482, label %483

482:                                              ; preds = %507, %503, %471, %483, %497
  br label %80

483:                                              ; preds = %471
  %484 = load i64, i64* %20, align 8
  %485 = add i64 %484, 1
  store i64 %485, i64* %20, align 8
  %486 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %480, i64 0, i32 0, i32 0, i32 1
  %487 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = bitcast %"class.base::ObserverList"* %480 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = sub i64 %488, %490
  %492 = ashr exact i64 %491, 3
  %493 = load i64, i64* %21, align 8
  %494 = icmp ult i64 %492, %493
  %495 = select i1 %494, i64 %492, i64 %493
  %496 = icmp ult i64 %485, %495
  br i1 %496, label %497, label %482

497:                                              ; preds = %483
  %498 = inttoptr i64 %490 to %"class.base::internal::UncheckedObserverAdapter"*
  %499 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %480, i64 0, i32 0, i32 0, i32 0
  %500 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %498, i64 %485, i32 0
  %501 = load i8*, i8** %500, align 8
  %502 = icmp eq i8* %501, null
  br i1 %502, label %503, label %482

503:                                              ; preds = %497, %507
  %504 = phi i64 [ %505, %507 ], [ %485, %497 ]
  %505 = add nuw i64 %504, 1
  store i64 %505, i64* %20, align 8
  %506 = icmp ult i64 %505, %495
  br i1 %506, label %507, label %482

507:                                              ; preds = %503
  %508 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %499, align 8
  %509 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %508, i64 %505, i32 0
  %510 = load i8*, i8** %509, align 8
  %511 = icmp eq i8* %510, null
  br i1 %511, label %503, label %482

512:                                              ; preds = %754, %462
  %513 = phi %"class.base::ObserverList"* [ %470, %462 ], [ %752, %754 ]
  %514 = icmp eq %"class.base::ObserverList"* %513, null
  br i1 %514, label %530, label %515

515:                                              ; preds = %512
  %516 = load i64, i64* %413, align 8
  %517 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %513, i64 0, i32 0, i32 0, i32 1
  %518 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.base::ObserverList"* %513 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = sub i64 %519, %521
  %523 = ashr exact i64 %522, 3
  %524 = load i64, i64* %414, align 8
  %525 = icmp ult i64 %523, %524
  %526 = select i1 %525, i64 %523, i64 %524
  %527 = icmp eq i64 %516, %526
  br i1 %527, label %530, label %528

528:                                              ; preds = %515
  %529 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %464, align 8
  br label %546

530:                                              ; preds = %515, %512
  %531 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %464, align 8
  %532 = icmp eq %"class.base::ObserverList"* %531, null
  br i1 %532, label %646, label %533

533:                                              ; preds = %530
  %534 = load i64, i64* %465, align 8
  %535 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %531, i64 0, i32 0, i32 0, i32 1
  %536 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.base::ObserverList"* %531 to i64*
  %539 = load i64, i64* %538, align 8
  %540 = sub i64 %537, %539
  %541 = ashr exact i64 %540, 3
  %542 = load i64, i64* %466, align 8
  %543 = icmp ult i64 %541, %542
  %544 = select i1 %543, i64 %541, i64 %542
  %545 = icmp eq i64 %534, %544
  br i1 %545, label %555, label %546

546:                                              ; preds = %533, %528
  %547 = phi %"class.base::ObserverList"* [ %529, %528 ], [ %531, %533 ]
  %548 = icmp eq %"class.base::ObserverList"* %513, %547
  %549 = load i64, i64* %413, align 8
  %550 = load i64, i64* %465, align 8
  %551 = icmp eq i64 %549, %550
  %552 = and i1 %548, %551
  br i1 %552, label %553, label %742

553:                                              ; preds = %546
  %554 = icmp eq %"class.base::ObserverList"* %513, null
  br i1 %554, label %646, label %555

555:                                              ; preds = %533, %553
  %556 = phi %"class.base::ObserverList"* [ %513, %553 ], [ %531, %533 ]
  %557 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %556, i64 0, i32 1
  %558 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %556, i64 0, i32 1, i32 0, i32 0, i32 1
  %559 = bitcast %"class.base::internal::LinkNodeBase"** %558 to %"class.base::LinkNode"**
  %560 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %559, align 8
  %561 = bitcast %"class.base::LinkedList"* %557 to %"class.base::LinkNode"**
  %562 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %561, align 8
  %563 = icmp eq %"class.base::LinkNode"* %560, %562
  br i1 %563, label %564, label %642

564:                                              ; preds = %555
  %565 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %556, i64 0, i32 0, i32 0, i32 0
  %566 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %565, align 8
  %567 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %556, i64 0, i32 0, i32 0, i32 1
  %568 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %567, align 8
  %569 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %566, %568
  br i1 %569, label %578, label %570

570:                                              ; preds = %564, %575
  %571 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %576, %575 ], [ %566, %564 ]
  %572 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %571, i64 0, i32 0
  %573 = load i8*, i8** %572, align 8
  %574 = icmp eq i8* %573, null
  br i1 %574, label %578, label %575

575:                                              ; preds = %570
  %576 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %571, i64 1
  %577 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %576, %568
  br i1 %577, label %642, label %570

578:                                              ; preds = %570, %564
  %579 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %566, %564 ], [ %571, %570 ]
  %580 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %579 to i64
  %581 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %579, %568
  br i1 %581, label %642, label %582

582:                                              ; preds = %578
  %583 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %579, i64 1
  %584 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %583, %568
  br i1 %584, label %637, label %585

585:                                              ; preds = %582
  %586 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %568, i64 -2, i32 0
  %587 = ptrtoint i8** %586 to i64
  %588 = sub i64 %587, %580
  %589 = lshr i64 %588, 3
  %590 = add nuw nsw i64 %589, 1
  %591 = and i64 %590, 3
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %611, label %593

593:                                              ; preds = %585, %606
  %594 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %608, %606 ], [ %583, %585 ]
  %595 = phi i64 [ %607, %606 ], [ %580, %585 ]
  %596 = phi i64 [ %609, %606 ], [ %591, %585 ]
  %597 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %594, i64 0, i32 0
  %598 = load i8*, i8** %597, align 8
  %599 = icmp eq i8* %598, null
  br i1 %599, label %606, label %600

600:                                              ; preds = %593
  %601 = ptrtoint i8* %598 to i64
  %602 = inttoptr i64 %595 to %"class.base::internal::UncheckedObserverAdapter"*
  %603 = inttoptr i64 %595 to i64*
  store i64 %601, i64* %603, align 8
  %604 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %602, i64 1
  %605 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %604 to i64
  br label %606

606:                                              ; preds = %600, %593
  %607 = phi i64 [ %595, %593 ], [ %605, %600 ]
  %608 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %594, i64 1
  %609 = add i64 %596, -1
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %611, label %593, !llvm.loop !17

611:                                              ; preds = %606, %585
  %612 = phi i64 [ undef, %585 ], [ %607, %606 ]
  %613 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %583, %585 ], [ %608, %606 ]
  %614 = phi i64 [ %580, %585 ], [ %607, %606 ]
  %615 = icmp ult i64 %588, 24
  br i1 %615, label %633, label %616

616:                                              ; preds = %611, %858
  %617 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %860, %858 ], [ %613, %611 ]
  %618 = phi i64 [ %859, %858 ], [ %614, %611 ]
  %619 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %617, i64 0, i32 0
  %620 = load i8*, i8** %619, align 8
  %621 = icmp eq i8* %620, null
  br i1 %621, label %628, label %622

622:                                              ; preds = %616
  %623 = ptrtoint i8* %620 to i64
  %624 = inttoptr i64 %618 to %"class.base::internal::UncheckedObserverAdapter"*
  %625 = inttoptr i64 %618 to i64*
  store i64 %623, i64* %625, align 8
  %626 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %624, i64 1
  %627 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %626 to i64
  br label %628

628:                                              ; preds = %622, %616
  %629 = phi i64 [ %618, %616 ], [ %627, %622 ]
  %630 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %617, i64 1, i32 0
  %631 = load i8*, i8** %630, align 8
  %632 = icmp eq i8* %631, null
  br i1 %632, label %836, label %830

633:                                              ; preds = %858, %611
  %634 = phi i64 [ %612, %611 ], [ %859, %858 ]
  %635 = inttoptr i64 %634 to %"class.base::internal::UncheckedObserverAdapter"*
  %636 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %567, align 8
  br label %637

637:                                              ; preds = %633, %582
  %638 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %568, %582 ], [ %636, %633 ]
  %639 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %579, %582 ], [ %635, %633 ]
  %640 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %639, %638
  br i1 %640, label %642, label %641

641:                                              ; preds = %637
  store %"class.base::internal::UncheckedObserverAdapter"* %639, %"class.base::internal::UncheckedObserverAdapter"** %567, align 8
  br label %642

642:                                              ; preds = %575, %641, %637, %578, %555
  %643 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %464, align 8
  %644 = icmp eq %"class.base::ObserverList"* %643, null
  br i1 %644, label %646, label %645

645:                                              ; preds = %642
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %464, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %467) #11
  br label %646

646:                                              ; preds = %530, %553, %642, %645
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %463) #11
  %647 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %412, align 8
  %648 = icmp eq %"class.base::ObserverList"* %647, null
  br i1 %648, label %739, label %649

649:                                              ; preds = %646
  %650 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %647, i64 0, i32 1
  %651 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %647, i64 0, i32 1, i32 0, i32 0, i32 1
  %652 = bitcast %"class.base::internal::LinkNodeBase"** %651 to %"class.base::LinkNode"**
  %653 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %652, align 8
  %654 = bitcast %"class.base::LinkedList"* %650 to %"class.base::LinkNode"**
  %655 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %654, align 8
  %656 = icmp eq %"class.base::LinkNode"* %653, %655
  br i1 %656, label %657, label %735

657:                                              ; preds = %649
  %658 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %647, i64 0, i32 0, i32 0, i32 0
  %659 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %658, align 8
  %660 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %647, i64 0, i32 0, i32 0, i32 1
  %661 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %660, align 8
  %662 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %659, %661
  br i1 %662, label %671, label %663

663:                                              ; preds = %657, %668
  %664 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %669, %668 ], [ %659, %657 ]
  %665 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %664, i64 0, i32 0
  %666 = load i8*, i8** %665, align 8
  %667 = icmp eq i8* %666, null
  br i1 %667, label %671, label %668

668:                                              ; preds = %663
  %669 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %664, i64 1
  %670 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %669, %661
  br i1 %670, label %735, label %663

671:                                              ; preds = %663, %657
  %672 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %659, %657 ], [ %664, %663 ]
  %673 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %672 to i64
  %674 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %672, %661
  br i1 %674, label %735, label %675

675:                                              ; preds = %671
  %676 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %672, i64 1
  %677 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %676, %661
  br i1 %677, label %730, label %678

678:                                              ; preds = %675
  %679 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %661, i64 -2, i32 0
  %680 = ptrtoint i8** %679 to i64
  %681 = sub i64 %680, %673
  %682 = lshr i64 %681, 3
  %683 = add nuw nsw i64 %682, 1
  %684 = and i64 %683, 3
  %685 = icmp eq i64 %684, 0
  br i1 %685, label %704, label %686

686:                                              ; preds = %678, %699
  %687 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %701, %699 ], [ %676, %678 ]
  %688 = phi i64 [ %700, %699 ], [ %673, %678 ]
  %689 = phi i64 [ %702, %699 ], [ %684, %678 ]
  %690 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %687, i64 0, i32 0
  %691 = load i8*, i8** %690, align 8
  %692 = icmp eq i8* %691, null
  br i1 %692, label %699, label %693

693:                                              ; preds = %686
  %694 = ptrtoint i8* %691 to i64
  %695 = inttoptr i64 %688 to %"class.base::internal::UncheckedObserverAdapter"*
  %696 = inttoptr i64 %688 to i64*
  store i64 %694, i64* %696, align 8
  %697 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %695, i64 1
  %698 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %697 to i64
  br label %699

699:                                              ; preds = %693, %686
  %700 = phi i64 [ %688, %686 ], [ %698, %693 ]
  %701 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %687, i64 1
  %702 = add i64 %689, -1
  %703 = icmp eq i64 %702, 0
  br i1 %703, label %704, label %686, !llvm.loop !18

704:                                              ; preds = %699, %678
  %705 = phi i64 [ undef, %678 ], [ %700, %699 ]
  %706 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %676, %678 ], [ %701, %699 ]
  %707 = phi i64 [ %673, %678 ], [ %700, %699 ]
  %708 = icmp ult i64 %681, 24
  br i1 %708, label %726, label %709

709:                                              ; preds = %704, %826
  %710 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %828, %826 ], [ %706, %704 ]
  %711 = phi i64 [ %827, %826 ], [ %707, %704 ]
  %712 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %710, i64 0, i32 0
  %713 = load i8*, i8** %712, align 8
  %714 = icmp eq i8* %713, null
  br i1 %714, label %721, label %715

715:                                              ; preds = %709
  %716 = ptrtoint i8* %713 to i64
  %717 = inttoptr i64 %711 to %"class.base::internal::UncheckedObserverAdapter"*
  %718 = inttoptr i64 %711 to i64*
  store i64 %716, i64* %718, align 8
  %719 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %717, i64 1
  %720 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %719 to i64
  br label %721

721:                                              ; preds = %715, %709
  %722 = phi i64 [ %711, %709 ], [ %720, %715 ]
  %723 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %710, i64 1, i32 0
  %724 = load i8*, i8** %723, align 8
  %725 = icmp eq i8* %724, null
  br i1 %725, label %804, label %798

726:                                              ; preds = %826, %704
  %727 = phi i64 [ %705, %704 ], [ %827, %826 ]
  %728 = inttoptr i64 %727 to %"class.base::internal::UncheckedObserverAdapter"*
  %729 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %660, align 8
  br label %730

730:                                              ; preds = %726, %675
  %731 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %661, %675 ], [ %729, %726 ]
  %732 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %672, %675 ], [ %728, %726 ]
  %733 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %732, %731
  br i1 %733, label %735, label %734

734:                                              ; preds = %730
  store %"class.base::internal::UncheckedObserverAdapter"* %732, %"class.base::internal::UncheckedObserverAdapter"** %660, align 8
  br label %735

735:                                              ; preds = %668, %734, %730, %671, %649
  %736 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %412, align 8
  %737 = icmp eq %"class.base::ObserverList"* %736, null
  br i1 %737, label %739, label %738

738:                                              ; preds = %735
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %412, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %419) #11
  br label %739

739:                                              ; preds = %646, %735, %738
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %411) #11
  %740 = call %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"* %14) #11
  %741 = icmp eq %"class.wm::ActivationChangeObserver"* %740, null
  br i1 %741, label %789, label %784

742:                                              ; preds = %546
  %743 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %513, i64 0, i32 0, i32 0, i32 0
  %744 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %743, align 8
  %745 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %744, i64 %549
  %746 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %745 to %"class.wm::ActivationChangeObserver"**
  %747 = load %"class.wm::ActivationChangeObserver"*, %"class.wm::ActivationChangeObserver"** %746, align 8
  %748 = bitcast %"class.wm::ActivationChangeObserver"* %747 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %749 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %748, align 8
  %750 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %749, i64 1
  %751 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %750, align 8
  call void %751(%"class.wm::ActivationChangeObserver"* %747, i32 %1, %"class.aura::Window"* %2, %"class.aura::Window"* %14) #11
  %752 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %412, align 8
  %753 = icmp eq %"class.base::ObserverList"* %752, null
  br i1 %753, label %754, label %755

754:                                              ; preds = %779, %775, %742, %755, %769
  br label %512

755:                                              ; preds = %742
  %756 = load i64, i64* %413, align 8
  %757 = add i64 %756, 1
  store i64 %757, i64* %413, align 8
  %758 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %752, i64 0, i32 0, i32 0, i32 1
  %759 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %758 to i64*
  %760 = load i64, i64* %759, align 8
  %761 = bitcast %"class.base::ObserverList"* %752 to i64*
  %762 = load i64, i64* %761, align 8
  %763 = sub i64 %760, %762
  %764 = ashr exact i64 %763, 3
  %765 = load i64, i64* %414, align 8
  %766 = icmp ult i64 %764, %765
  %767 = select i1 %766, i64 %764, i64 %765
  %768 = icmp ult i64 %757, %767
  br i1 %768, label %769, label %754

769:                                              ; preds = %755
  %770 = inttoptr i64 %762 to %"class.base::internal::UncheckedObserverAdapter"*
  %771 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %752, i64 0, i32 0, i32 0, i32 0
  %772 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %770, i64 %757, i32 0
  %773 = load i8*, i8** %772, align 8
  %774 = icmp eq i8* %773, null
  br i1 %774, label %775, label %754

775:                                              ; preds = %769, %779
  %776 = phi i64 [ %777, %779 ], [ %757, %769 ]
  %777 = add nuw i64 %776, 1
  store i64 %777, i64* %413, align 8
  %778 = icmp ult i64 %777, %767
  br i1 %778, label %779, label %754

779:                                              ; preds = %775
  %780 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %771, align 8
  %781 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %780, i64 %777, i32 0
  %782 = load i8*, i8** %781, align 8
  %783 = icmp eq i8* %782, null
  br i1 %783, label %775, label %754

784:                                              ; preds = %739
  %785 = bitcast %"class.wm::ActivationChangeObserver"* %740 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %786 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %785, align 8
  %787 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %786, i64 1
  %788 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %787, align 8
  call void %788(%"class.wm::ActivationChangeObserver"* nonnull %740, i32 %1, %"class.aura::Window"* %2, %"class.aura::Window"* %14) #11
  br label %789

789:                                              ; preds = %739, %784
  %790 = call %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"* %2) #11
  %791 = icmp eq %"class.wm::ActivationChangeObserver"* %790, null
  br i1 %791, label %797, label %792

792:                                              ; preds = %789
  %793 = bitcast %"class.wm::ActivationChangeObserver"* %790 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %794 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %793, align 8
  %795 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %794, i64 1
  %796 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %795, align 8
  call void %796(%"class.wm::ActivationChangeObserver"* nonnull %790, i32 %1, %"class.aura::Window"* %2, %"class.aura::Window"* %14) #11
  br label %797

797:                                              ; preds = %792, %789, %3
  ret void

798:                                              ; preds = %721
  %799 = ptrtoint i8* %724 to i64
  %800 = inttoptr i64 %722 to %"class.base::internal::UncheckedObserverAdapter"*
  %801 = inttoptr i64 %722 to i64*
  store i64 %799, i64* %801, align 8
  %802 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %800, i64 1
  %803 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %802 to i64
  br label %804

804:                                              ; preds = %798, %721
  %805 = phi i64 [ %722, %721 ], [ %803, %798 ]
  %806 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %710, i64 2, i32 0
  %807 = load i8*, i8** %806, align 8
  %808 = icmp eq i8* %807, null
  br i1 %808, label %815, label %809

809:                                              ; preds = %804
  %810 = ptrtoint i8* %807 to i64
  %811 = inttoptr i64 %805 to %"class.base::internal::UncheckedObserverAdapter"*
  %812 = inttoptr i64 %805 to i64*
  store i64 %810, i64* %812, align 8
  %813 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %811, i64 1
  %814 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %813 to i64
  br label %815

815:                                              ; preds = %809, %804
  %816 = phi i64 [ %805, %804 ], [ %814, %809 ]
  %817 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %710, i64 3, i32 0
  %818 = load i8*, i8** %817, align 8
  %819 = icmp eq i8* %818, null
  br i1 %819, label %826, label %820

820:                                              ; preds = %815
  %821 = ptrtoint i8* %818 to i64
  %822 = inttoptr i64 %816 to %"class.base::internal::UncheckedObserverAdapter"*
  %823 = inttoptr i64 %816 to i64*
  store i64 %821, i64* %823, align 8
  %824 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %822, i64 1
  %825 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %824 to i64
  br label %826

826:                                              ; preds = %820, %815
  %827 = phi i64 [ %816, %815 ], [ %825, %820 ]
  %828 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %710, i64 4
  %829 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %828, %661
  br i1 %829, label %726, label %709

830:                                              ; preds = %628
  %831 = ptrtoint i8* %631 to i64
  %832 = inttoptr i64 %629 to %"class.base::internal::UncheckedObserverAdapter"*
  %833 = inttoptr i64 %629 to i64*
  store i64 %831, i64* %833, align 8
  %834 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %832, i64 1
  %835 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %834 to i64
  br label %836

836:                                              ; preds = %830, %628
  %837 = phi i64 [ %629, %628 ], [ %835, %830 ]
  %838 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %617, i64 2, i32 0
  %839 = load i8*, i8** %838, align 8
  %840 = icmp eq i8* %839, null
  br i1 %840, label %847, label %841

841:                                              ; preds = %836
  %842 = ptrtoint i8* %839 to i64
  %843 = inttoptr i64 %837 to %"class.base::internal::UncheckedObserverAdapter"*
  %844 = inttoptr i64 %837 to i64*
  store i64 %842, i64* %844, align 8
  %845 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %843, i64 1
  %846 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %845 to i64
  br label %847

847:                                              ; preds = %841, %836
  %848 = phi i64 [ %837, %836 ], [ %846, %841 ]
  %849 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %617, i64 3, i32 0
  %850 = load i8*, i8** %849, align 8
  %851 = icmp eq i8* %850, null
  br i1 %851, label %858, label %852

852:                                              ; preds = %847
  %853 = ptrtoint i8* %850 to i64
  %854 = inttoptr i64 %848 to %"class.base::internal::UncheckedObserverAdapter"*
  %855 = inttoptr i64 %848 to i64*
  store i64 %853, i64* %855, align 8
  %856 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %854, i64 1
  %857 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %856 to i64
  br label %858

858:                                              ; preds = %852, %847
  %859 = phi i64 [ %848, %847 ], [ %857, %852 ]
  %860 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %617, i64 4
  %861 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %860, %568
  br i1 %861, label %633, label %616

862:                                              ; preds = %289
  %863 = ptrtoint i8* %292 to i64
  %864 = inttoptr i64 %290 to %"class.base::internal::UncheckedObserverAdapter"*
  %865 = inttoptr i64 %290 to i64*
  store i64 %863, i64* %865, align 8
  %866 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %864, i64 1
  %867 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %866 to i64
  br label %868

868:                                              ; preds = %862, %289
  %869 = phi i64 [ %290, %289 ], [ %867, %862 ]
  %870 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 2, i32 0
  %871 = load i8*, i8** %870, align 8
  %872 = icmp eq i8* %871, null
  br i1 %872, label %879, label %873

873:                                              ; preds = %868
  %874 = ptrtoint i8* %871 to i64
  %875 = inttoptr i64 %869 to %"class.base::internal::UncheckedObserverAdapter"*
  %876 = inttoptr i64 %869 to i64*
  store i64 %874, i64* %876, align 8
  %877 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %875, i64 1
  %878 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %877 to i64
  br label %879

879:                                              ; preds = %873, %868
  %880 = phi i64 [ %869, %868 ], [ %878, %873 ]
  %881 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 3, i32 0
  %882 = load i8*, i8** %881, align 8
  %883 = icmp eq i8* %882, null
  br i1 %883, label %890, label %884

884:                                              ; preds = %879
  %885 = ptrtoint i8* %882 to i64
  %886 = inttoptr i64 %880 to %"class.base::internal::UncheckedObserverAdapter"*
  %887 = inttoptr i64 %880 to i64*
  store i64 %885, i64* %887, align 8
  %888 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %886, i64 1
  %889 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %888 to i64
  br label %890

890:                                              ; preds = %884, %879
  %891 = phi i64 [ %880, %879 ], [ %889, %884 ]
  %892 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 4
  %893 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %892, %229
  br i1 %893, label %294, label %277

894:                                              ; preds = %196
  %895 = ptrtoint i8* %199 to i64
  %896 = inttoptr i64 %197 to %"class.base::internal::UncheckedObserverAdapter"*
  %897 = inttoptr i64 %197 to i64*
  store i64 %895, i64* %897, align 8
  %898 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %896, i64 1
  %899 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %898 to i64
  br label %900

900:                                              ; preds = %894, %196
  %901 = phi i64 [ %197, %196 ], [ %899, %894 ]
  %902 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 2, i32 0
  %903 = load i8*, i8** %902, align 8
  %904 = icmp eq i8* %903, null
  br i1 %904, label %911, label %905

905:                                              ; preds = %900
  %906 = ptrtoint i8* %903 to i64
  %907 = inttoptr i64 %901 to %"class.base::internal::UncheckedObserverAdapter"*
  %908 = inttoptr i64 %901 to i64*
  store i64 %906, i64* %908, align 8
  %909 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %907, i64 1
  %910 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %909 to i64
  br label %911

911:                                              ; preds = %905, %900
  %912 = phi i64 [ %901, %900 ], [ %910, %905 ]
  %913 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 3, i32 0
  %914 = load i8*, i8** %913, align 8
  %915 = icmp eq i8* %914, null
  br i1 %915, label %922, label %916

916:                                              ; preds = %911
  %917 = ptrtoint i8* %914 to i64
  %918 = inttoptr i64 %912 to %"class.base::internal::UncheckedObserverAdapter"*
  %919 = inttoptr i64 %912 to i64*
  store i64 %917, i64* %919, align 8
  %920 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %918, i64 1
  %921 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %920 to i64
  br label %922

922:                                              ; preds = %916, %911
  %923 = phi i64 [ %912, %911 ], [ %921, %916 ]
  %924 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 4
  %925 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %924, %136
  br i1 %925, label %201, label %184
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClient18RemoveActiveWindowEPN4aura6WindowE(%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast %"class.aura::Window"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %"class.aura::Window"**
  br i1 %9, label %37, label %11

11:                                               ; preds = %2
  %12 = sub i64 %6, %8
  %13 = ashr exact i64 %12, 3
  br label %17

14:                                               ; preds = %17
  %15 = zext i32 %23 to i64
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %37

17:                                               ; preds = %11, %14
  %18 = phi i64 [ 0, %11 ], [ %15, %14 ]
  %19 = phi i32 [ 0, %11 ], [ %23, %14 ]
  %20 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %10, i64 %18
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = icmp eq %"class.aura::Window"* %21, %1
  %23 = add i32 %19, 1
  br i1 %22, label %24, label %14

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %10, i64 %18
  %26 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %25, i64 1
  %27 = ptrtoint %"class.aura::Window"** %26 to i64
  %28 = sub i64 %6, %27
  %29 = ashr exact i64 %28, 3
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.aura::Window"** %25 to i8*
  %33 = bitcast %"class.aura::Window"** %26 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 %28, i1 false) #11
  br label %34

34:                                               ; preds = %24, %31
  %35 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %25, i64 %29
  store %"class.aura::Window"** %35, %"class.aura::Window"*** %4, align 8
  %36 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 1
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %36) #11
  br label %37

37:                                               ; preds = %14, %2, %34
  ret void
}

declare void @_ZN4aura6Window15StackChildAtTopEPS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

declare %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClient16DeactivateWindowEPN4aura6WindowE(%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"* %1) #11
  %4 = icmp eq %"class.wm::ActivationChangeObserver"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.wm::ActivationChangeObserver"* %3 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %7 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %7, i64 1
  %9 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %8, align 8
  tail call void %9(%"class.wm::ActivationChangeObserver"* nonnull %3, i32 0, %"class.aura::Window"* null, %"class.aura::Window"* %1) #11
  br label %10

10:                                               ; preds = %2, %5
  %11 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 3
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  %13 = icmp eq %"class.aura::Window"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.wm::DefaultActivationClient"* %0 to void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)***
  %16 = load void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)**, void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)*, void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)** %16, i64 2
  %18 = load void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)*, void (%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*)** %17, align 8
  tail call void %18(%"class.wm::DefaultActivationClient"* %0, %"class.aura::Window"* nonnull %12) #11
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.aura::Window"* @_ZNK2wm23DefaultActivationClient15GetActiveWindowEv(%"class.wm::DefaultActivationClient"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.aura::Window"**, %"class.aura::Window"*** %2, align 8
  %4 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"class.aura::Window"**, %"class.aura::Window"*** %4, align 8
  %6 = icmp eq %"class.aura::Window"** %3, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %5, i64 -1
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %"class.aura::Window"* [ %9, %7 ], [ null, %1 ]
  ret %"class.aura::Window"* %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.aura::Window"* @_ZNK2wm23DefaultActivationClient20GetActivatableWindowEPN4aura6WindowE(%"class.wm::DefaultActivationClient"* nocapture readnone, %"class.aura::Window"* nocapture readnone) unnamed_addr #5 align 2 {
  ret %"class.aura::Window"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.aura::Window"* @_ZNK2wm23DefaultActivationClient17GetToplevelWindowEPKN4aura6WindowE(%"class.wm::DefaultActivationClient"* nocapture readnone, %"class.aura::Window"* nocapture readnone) unnamed_addr #5 align 2 {
  ret %"class.aura::Window"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2wm23DefaultActivationClient17CanActivateWindowEPKN4aura6WindowE(%"class.wm::DefaultActivationClient"* nocapture readnone, %"class.aura::Window"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClient17OnWindowDestroyedEPN4aura6WindowE(%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 3
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = bitcast %"class.wm::DefaultActivationClient"* %0 to %"class.aura::Window"* (%"class.wm::DefaultActivationClient"*)***
  %9 = load %"class.aura::Window"* (%"class.wm::DefaultActivationClient"*)**, %"class.aura::Window"* (%"class.wm::DefaultActivationClient"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::DefaultActivationClient"*)*, %"class.aura::Window"* (%"class.wm::DefaultActivationClient"*)** %9, i64 4
  %11 = load %"class.aura::Window"* (%"class.wm::DefaultActivationClient"*)*, %"class.aura::Window"* (%"class.wm::DefaultActivationClient"*)** %10, align 8
  %12 = tail call %"class.aura::Window"* %11(%"class.wm::DefaultActivationClient"* %0) #11
  %13 = icmp eq %"class.aura::Window"* %12, %1
  br i1 %13, label %14, label %34

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load %"class.aura::Window"**, %"class.aura::Window"*** %15, align 8
  %17 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %16, i64 -1
  store %"class.aura::Window"** %17, %"class.aura::Window"*** %15, align 8
  %18 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 0
  %19 = bitcast %"class.wm::DefaultActivationClient"* %0 to %"class.aura::Window"* (%"class.wm::ActivationClient"*)***
  %20 = load %"class.aura::Window"* (%"class.wm::ActivationClient"*)**, %"class.aura::Window"* (%"class.wm::ActivationClient"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::ActivationClient"*)*, %"class.aura::Window"* (%"class.wm::ActivationClient"*)** %20, i64 4
  %22 = load %"class.aura::Window"* (%"class.wm::ActivationClient"*)*, %"class.aura::Window"* (%"class.wm::ActivationClient"*)** %21, align 8
  %23 = tail call %"class.aura::Window"* %22(%"class.wm::ActivationClient"* %18) #11
  %24 = icmp eq %"class.aura::Window"* %23, null
  br i1 %24, label %69, label %25

25:                                               ; preds = %14
  %26 = tail call %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"* nonnull %23) #11
  %27 = icmp eq %"class.wm::ActivationChangeObserver"* %26, null
  br i1 %27, label %69, label %28

28:                                               ; preds = %25
  %29 = tail call %"class.wm::ActivationChangeObserver"* @_ZN2wm27GetActivationChangeObserverEPN4aura6WindowE(%"class.aura::Window"* nonnull %23) #11
  %30 = bitcast %"class.wm::ActivationChangeObserver"* %29 to void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)***
  %31 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %31, i64 1
  %33 = load void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::ActivationChangeObserver"*, i32, %"class.aura::Window"*, %"class.aura::Window"*)** %32, align 8
  tail call void %33(%"class.wm::ActivationChangeObserver"* %29, i32 2, %"class.aura::Window"* nonnull %23, %"class.aura::Window"* null) #11
  br label %69

34:                                               ; preds = %7
  %35 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2
  %36 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast %"class.aura::Window"*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %38, %40
  %42 = inttoptr i64 %40 to %"class.aura::Window"**
  br i1 %41, label %69, label %43

43:                                               ; preds = %34
  %44 = sub i64 %38, %40
  %45 = ashr exact i64 %44, 3
  br label %49

46:                                               ; preds = %49
  %47 = zext i32 %55 to i64
  %48 = icmp ugt i64 %45, %47
  br i1 %48, label %49, label %69

49:                                               ; preds = %46, %43
  %50 = phi i64 [ 0, %43 ], [ %47, %46 ]
  %51 = phi i32 [ 0, %43 ], [ %55, %46 ]
  %52 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %42, i64 %50
  %53 = load %"class.aura::Window"*, %"class.aura::Window"** %52, align 8
  %54 = icmp eq %"class.aura::Window"* %53, %1
  %55 = add i32 %51, 1
  br i1 %54, label %56, label %46

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %42, i64 %50
  %58 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %57, i64 1
  %59 = ptrtoint %"class.aura::Window"** %58 to i64
  %60 = sub i64 %38, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %56
  %64 = bitcast %"class.aura::Window"** %57 to i8*
  %65 = bitcast %"class.aura::Window"** %58 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %60, i1 false) #11
  br label %66

66:                                               ; preds = %63, %56
  %67 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %57, i64 %61
  store %"class.aura::Window"** %67, %"class.aura::Window"*** %36, align 8
  %68 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 1
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %68) #11
  br label %69

69:                                               ; preds = %46, %66, %34, %28, %14, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm23DefaultActivationClient17OnWindowDestroyedEPN4aura6WindowE(%"class.wm::DefaultActivationClient"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 -1, i32 4, i32 3
  %4 = bitcast i32* %3 to %"class.wm::DefaultActivationClient"*
  tail call void @_ZN2wm23DefaultActivationClient17OnWindowDestroyedEPN4aura6WindowE(%"class.wm::DefaultActivationClient"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClientD2Ev(%"class.wm::DefaultActivationClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 1
  %3 = bitcast %"class.wm::DefaultActivationClient"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [30 x i8*] }, { [13 x i8*], [30 x i8*] }* @_ZTVN2wm23DefaultActivationClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [30 x i8*] }, { [13 x i8*], [30 x i8*] }* @_ZTVN2wm23DefaultActivationClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"class.aura::Window"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %11, label %46

11:                                               ; preds = %46, %1
  %12 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %13 = bitcast %"class.base::internal::LinkNodeBase"** %12 to %"class.base::LinkNode"**
  %14 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 1, i32 0
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %13, align 8
  %16 = icmp eq %"class.base::LinkNode"* %15, %14
  br i1 %16, label %29, label %17

17:                                               ; preds = %11, %26
  %18 = phi %"class.base::LinkNode"* [ %27, %26 ], [ %15, %11 ]
  %19 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %18, i64 1
  %20 = bitcast %"class.base::LinkNode"* %19 to %"class.base::ObserverList"**
  %21 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %22 = icmp eq %"class.base::ObserverList"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %20, align 8
  %24 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %18, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %24) #11
  %25 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %13, align 8
  br label %26

26:                                               ; preds = %23, %17
  %27 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %25, %23 ]
  %28 = icmp eq %"class.base::LinkNode"* %27, %14
  br i1 %28, label %29, label %17

29:                                               ; preds = %26, %11
  %30 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %30, align 8
  %32 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %31 to i64
  %35 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %36 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %40 = load %"class.aura::Window"**, %"class.aura::Window"*** %39, align 8
  %41 = icmp eq %"class.aura::Window"** %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = ptrtoint %"class.aura::Window"** %40 to i64
  store i64 %43, i64* %6, align 8
  %44 = bitcast %"class.aura::Window"** %40 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %38, %42
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %2) #11
  ret void

46:                                               ; preds = %1, %46
  %47 = phi i64 [ %56, %46 ], [ %9, %1 ]
  %48 = phi i64 [ %54, %46 ], [ 0, %1 ]
  %49 = phi i32 [ %53, %46 ], [ 0, %1 ]
  %50 = inttoptr i64 %47 to %"class.aura::Window"**
  %51 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %50, i64 %48
  %52 = load %"class.aura::Window"*, %"class.aura::Window"** %51, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %52, %"class.aura::WindowObserver"* %2) #11
  %53 = add i32 %49, 1
  %54 = zext i32 %53 to i64
  %55 = load i64, i64* %6, align 8
  %56 = load i64, i64* %8, align 8
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = icmp ugt i64 %58, %54
  br i1 %59, label %46, label %11
}

declare void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm23DefaultActivationClientD1Ev(%"class.wm::DefaultActivationClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 -1, i32 4, i32 3
  %3 = bitcast i32* %2 to %"class.wm::DefaultActivationClient"*
  tail call void @_ZN2wm23DefaultActivationClientD2Ev(%"class.wm::DefaultActivationClient"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm23DefaultActivationClientD0Ev(%"class.wm::DefaultActivationClient"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2wm23DefaultActivationClientD2Ev(%"class.wm::DefaultActivationClient"* %0) #11
  %2 = bitcast %"class.wm::DefaultActivationClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2wm23DefaultActivationClientD0Ev(%"class.wm::DefaultActivationClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::DefaultActivationClient", %"class.wm::DefaultActivationClient"* %0, i64 -1, i32 4, i32 3
  %3 = bitcast i32* %2 to %"class.wm::DefaultActivationClient"*
  tail call void @_ZN2wm23DefaultActivationClientD2Ev(%"class.wm::DefaultActivationClient"* %3) #11
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2wm16ActivationClientD2Ev(%"class.wm::ActivationClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2wm16ActivationClientD0Ev(%"class.wm::ActivationClient"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2wm23DefaultActivationClient7DeleterD0Ev(%"class.wm::DefaultActivationClient::Deleter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.wm::DefaultActivationClient::Deleter", %"class.wm::DefaultActivationClient::Deleter"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %2) #11
  %3 = bitcast %"class.wm::DefaultActivationClient::Deleter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2wm23DefaultActivationClient7Deleter17OnWindowDestroyedEPN4aura6WindowE(%"class.wm::DefaultActivationClient::Deleter"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.wm::DefaultActivationClient::Deleter", %"class.wm::DefaultActivationClient::Deleter"* %0, i64 0, i32 2
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::DefaultActivationClient::Deleter", %"class.wm::DefaultActivationClient::Deleter"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %4, %"class.aura::WindowObserver"* %5) #11
  %6 = getelementptr inbounds %"class.wm::DefaultActivationClient::Deleter", %"class.wm::DefaultActivationClient::Deleter"* %0, i64 0, i32 1
  %7 = load %"class.wm::DefaultActivationClient"*, %"class.wm::DefaultActivationClient"** %6, align 8
  %8 = icmp eq %"class.wm::DefaultActivationClient"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.wm::DefaultActivationClient"* %7 to void (%"class.wm::DefaultActivationClient"*)***
  %11 = load void (%"class.wm::DefaultActivationClient"*)**, void (%"class.wm::DefaultActivationClient"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.wm::DefaultActivationClient"*)*, void (%"class.wm::DefaultActivationClient"*)** %11, i64 9
  %13 = load void (%"class.wm::DefaultActivationClient"*)*, void (%"class.wm::DefaultActivationClient"*)** %12, align 8
  tail call void %13(%"class.wm::DefaultActivationClient"* nonnull %7) #11
  br label %14

14:                                               ; preds = %9, %2
  %15 = icmp eq %"class.wm::DefaultActivationClient::Deleter"* %0, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.wm::DefaultActivationClient::Deleter"* %0 to void (%"class.wm::DefaultActivationClient::Deleter"*)***
  %18 = load void (%"class.wm::DefaultActivationClient::Deleter"*)**, void (%"class.wm::DefaultActivationClient::Deleter"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.wm::DefaultActivationClient::Deleter"*)*, void (%"class.wm::DefaultActivationClient::Deleter"*)** %18, i64 1
  %20 = load void (%"class.wm::DefaultActivationClient::Deleter"*)*, void (%"class.wm::DefaultActivationClient::Deleter"*)** %19, align 8
  tail call void %20(%"class.wm::DefaultActivationClient::Deleter"* nonnull %0) #11
  br label %21

21:                                               ; preds = %16, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListIN2wm24ActivationChangeObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !9}
