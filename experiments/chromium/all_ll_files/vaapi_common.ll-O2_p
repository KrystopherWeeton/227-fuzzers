; ModuleID = '../../media/gpu/vaapi/vaapi_common.cc'
source_filename = "../../media/gpu/vaapi/vaapi_common.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::VaapiH264Picture" = type { %"class.media::H264Picture.base", %class.scoped_refptr, %class.scoped_refptr }
%"class.media::H264Picture.base" = type { %"class.media::CodecPicture.base", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i32, i8, i8, [32 x %"struct.media::H264DecRefPicMarking"], i32 }
%"class.media::CodecPicture.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.gfx::Rect", %"class.std::__1::unique_ptr", %"class.media::VideoColorSpace" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.absl::optional", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.4" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"struct.media::H264DecRefPicMarking" = type { i32, i32, i32, i32, i32 }
%class.scoped_refptr = type { %"class.media::VASurface"* }
%"class.media::VASurface" = type { %"class.base::RefCountedThreadSafe.11", i32, %"class.gfx::Size", i32, %"class.base::OnceCallback" }
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VaapiVP8Picture" = type { %"class.media::VP8Picture", %class.scoped_refptr }
%"class.media::VP8Picture" = type { %"class.media::CodecPicture.base", %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.media::Vp8FrameHeader"* }
%"struct.media::Vp8FrameHeader" = type <{ i32, i8, i8, i8, i8, i64, i16, i8, i8, i16, i8, i8, %"struct.media::Vp8SegmentationHeader", %"struct.media::Vp8LoopFilterHeader", %"struct.media::Vp8QuantizationHeader", [6 x i8], i64, %"struct.media::Vp8EntropyHeader", i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8*, i64, [8 x i64], i64, i64, i8, i8, i8, i8, [4 x i8] }>
%"struct.media::Vp8SegmentationHeader" = type { i8, i8, i8, i32, [4 x i8], [4 x i8], [3 x i8] }
%"struct.media::Vp8LoopFilterHeader" = type { i32, i8, i8, i8, i8, [4 x i8], [4 x i8] }
%"struct.media::Vp8QuantizationHeader" = type { i8, i8, i8, i8, i8, i8 }
%"struct.media::Vp8EntropyHeader" = type { [4 x [8 x [3 x [11 x i8]]]], [4 x i8], [3 x i8], [2 x [19 x i8]] }
%"class.media::VaapiVP9Picture" = type { %"class.media::VP9Picture", %class.scoped_refptr, %class.scoped_refptr }
%"class.media::VP9Picture" = type { %"class.media::CodecPicture.base", %"class.std::__1::unique_ptr.20", %"class.absl::optional.26" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.media::Vp9FrameHeader"* }
%"struct.media::Vp9FrameHeader" = type { i8, i8, i8, i32, i8, i8, i8, i32, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, [3 x i8], [4 x i8], i8, i32, i8, i8, i8, i8, %"struct.media::Vp9QuantizationParams", i8, i8, i8*, i64, i64, i64, %"struct.media::Vp9CompressedHeader", %"struct.media::Vp9FrameContext", %"struct.media::Vp9FrameContext", %"struct.media::Vp9SegmentationParams", %"struct.media::Vp9LoopFilterParams" }
%"struct.media::Vp9QuantizationParams" = type { i8, i8, i8, i8 }
%"struct.media::Vp9CompressedHeader" = type { i32, i32 }
%"struct.media::Vp9FrameContext" = type { [2 x [1 x i8]], [2 x [2 x i8]], [2 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [3 x i8], [7 x [3 x i8]], [4 x [2 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [3 x i8], [2 x i8], [2 x [10 x i8]], [2 x i8], [2 x [10 x i8]], [2 x [2 x [3 x i8]]], [2 x [3 x i8]], [2 x i8], [2 x i8] }
%"struct.media::Vp9SegmentationParams" = type { i8, i8, [7 x i8], i8, [3 x i8], i8, i8, [8 x [4 x i8]], [8 x [4 x i16]], [8 x [2 x i16]], [8 x [2 x i16]] }
%"struct.media::Vp9LoopFilterParams" = type { i8, i8, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], [8 x [4 x [2 x i8]]] }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"struct.media::Vp9Metadata" }
%"struct.media::Vp9Metadata" = type { i8, i8, i8, %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i8*, i8*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i8* }
%"class.media::VaapiAV1Picture" = type { %"class.media::AV1Picture", %class.scoped_refptr, %class.scoped_refptr }
%"class.media::AV1Picture" = type { %"class.media::CodecPicture.base", %"struct.libgav1::ObuFrameHeader" }
%"struct.libgav1::ObuFrameHeader" = type { i16, i16, i64, [7 x i16], i32, i32, i32, i32, i32, i32, i32, %"struct.libgav1::LoopRestoration", [32 x i32], i32, %"struct.std::__1::array", %"struct.libgav1::TileInfo", %"struct.libgav1::QuantizerParameters", %"struct.libgav1::Segmentation", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, %"struct.libgav1::Delta", %"struct.libgav1::Delta", [7 x i8], [8 x i8], %"struct.libgav1::LoopFilter", %"struct.libgav1::Cdef", %"struct.libgav1::FilmGrainParams" }
%"struct.libgav1::LoopRestoration" = type { [3 x i8], [3 x i32] }
%"struct.std::__1::array" = type { [8 x %"struct.libgav1::GlobalMotion"] }
%"struct.libgav1::GlobalMotion" = type { i8, [6 x i32], i16, i16, i16, i16 }
%"struct.libgav1::TileInfo" = type { i8, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32, [65 x i32], [65 x i32], i16, i8 }
%"struct.libgav1::QuantizerParameters" = type { i8, [3 x i8], [3 x i8], i8, [3 x i8] }
%"struct.libgav1::Segmentation" = type { i8, i8, i8, i8, i8, i8, [8 x [8 x i8]], [8 x [8 x i16]], [8 x i8], [8 x i8] }
%"struct.libgav1::Delta" = type { i8, i8, i8 }
%"struct.libgav1::LoopFilter" = type { %"struct.std::__1::array.39", i8, i8, i8, %"struct.std::__1::array.40", %"struct.std::__1::array.41" }
%"struct.std::__1::array.39" = type { [4 x i8] }
%"struct.std::__1::array.40" = type { [8 x i8] }
%"struct.std::__1::array.41" = type { [2 x i8] }
%"struct.libgav1::Cdef" = type { i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"class.media::H264Picture" = type { %"class.media::CodecPicture.base", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i32, i8, i8, [32 x %"struct.media::H264DecRefPicMarking"], i32, [4 x i8] }
%"class.media::V4L2H264Picture" = type opaque
%"class.media::V4L2VP8Picture" = type opaque
%"class.media::V4L2VP9Picture" = type opaque

@_ZTVN5media16VaapiH264PictureE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::VaapiH264Picture"*)* @_ZN5media16VaapiH264PictureD2Ev to i8*), i8* bitcast (void (%"class.media::VaapiH264Picture"*)* @_ZN5media16VaapiH264PictureD0Ev to i8*), i8* bitcast (%"class.media::V4L2H264Picture"* (%"class.media::H264Picture"*)* @_ZN5media11H264Picture17AsV4L2H264PictureEv to i8*), i8* bitcast (%"class.media::VaapiH264Picture"* (%"class.media::VaapiH264Picture"*)* @_ZN5media16VaapiH264Picture18AsVaapiH264PictureEv to i8*)] }, align 8
@_ZTVN5media15VaapiVP8PictureE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::VaapiVP8Picture"*)* @_ZN5media15VaapiVP8PictureD2Ev to i8*), i8* bitcast (void (%"class.media::VaapiVP8Picture"*)* @_ZN5media15VaapiVP8PictureD0Ev to i8*), i8* bitcast (%"class.media::V4L2VP8Picture"* (%"class.media::VP8Picture"*)* @_ZN5media10VP8Picture16AsV4L2VP8PictureEv to i8*), i8* bitcast (%"class.media::VaapiVP8Picture"* (%"class.media::VaapiVP8Picture"*)* @_ZN5media15VaapiVP8Picture17AsVaapiVP8PictureEv to i8*)] }, align 8
@_ZTVN5media15VaapiVP9PictureE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::VaapiVP9Picture"*)* @_ZN5media15VaapiVP9PictureD2Ev to i8*), i8* bitcast (void (%"class.media::VaapiVP9Picture"*)* @_ZN5media15VaapiVP9PictureD0Ev to i8*), i8* bitcast (%"class.media::V4L2VP9Picture"* (%"class.media::VP9Picture"*)* @_ZN5media10VP9Picture16AsV4L2VP9PictureEv to i8*), i8* bitcast (%"class.media::VaapiVP9Picture"* (%"class.media::VaapiVP9Picture"*)* @_ZN5media15VaapiVP9Picture17AsVaapiVP9PictureEv to i8*), i8* bitcast (%"class.media::VP9Picture"* (%"class.media::VaapiVP9Picture"*)* @_ZN5media15VaapiVP9Picture15CreateDuplicateEv to i8*)] }, align 8
@_ZTVN5media15VaapiAV1PictureE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::VaapiAV1Picture"*)* @_ZN5media15VaapiAV1PictureD2Ev to i8*), i8* bitcast (void (%"class.media::VaapiAV1Picture"*)* @_ZN5media15VaapiAV1PictureD0Ev to i8*), i8* bitcast (%"class.media::AV1Picture"* (%"class.media::VaapiAV1Picture"*)* @_ZN5media15VaapiAV1Picture15CreateDuplicateEv to i8*)] }, align 8

@_ZN5media16VaapiH264PictureC1E13scoped_refptrINS_9VASurfaceEE = hidden unnamed_addr alias void (%"class.media::VaapiH264Picture"*, %"class.media::VASurface"*), void (%"class.media::VaapiH264Picture"*, %"class.media::VASurface"*)* @_ZN5media16VaapiH264PictureC2E13scoped_refptrINS_9VASurfaceEE
@_ZN5media16VaapiH264PictureD1Ev = hidden unnamed_addr alias void (%"class.media::VaapiH264Picture"*), void (%"class.media::VaapiH264Picture"*)* @_ZN5media16VaapiH264PictureD2Ev
@_ZN5media15VaapiVP8PictureC1E13scoped_refptrINS_9VASurfaceEE = hidden unnamed_addr alias void (%"class.media::VaapiVP8Picture"*, %"class.media::VASurface"*), void (%"class.media::VaapiVP8Picture"*, %"class.media::VASurface"*)* @_ZN5media15VaapiVP8PictureC2E13scoped_refptrINS_9VASurfaceEE
@_ZN5media15VaapiVP8PictureD1Ev = hidden unnamed_addr alias void (%"class.media::VaapiVP8Picture"*), void (%"class.media::VaapiVP8Picture"*)* @_ZN5media15VaapiVP8PictureD2Ev
@_ZN5media15VaapiVP9PictureC1E13scoped_refptrINS_9VASurfaceEE = hidden unnamed_addr alias void (%"class.media::VaapiVP9Picture"*, %"class.media::VASurface"*), void (%"class.media::VaapiVP9Picture"*, %"class.media::VASurface"*)* @_ZN5media15VaapiVP9PictureC2E13scoped_refptrINS_9VASurfaceEE
@_ZN5media15VaapiVP9PictureD1Ev = hidden unnamed_addr alias void (%"class.media::VaapiVP9Picture"*), void (%"class.media::VaapiVP9Picture"*)* @_ZN5media15VaapiVP9PictureD2Ev
@_ZN5media15VaapiAV1PictureC1E13scoped_refptrINS_9VASurfaceEES3_ = hidden unnamed_addr alias void (%"class.media::VaapiAV1Picture"*, %"class.media::VASurface"*, %"class.media::VASurface"*), void (%"class.media::VaapiAV1Picture"*, %"class.media::VASurface"*, %"class.media::VASurface"*)* @_ZN5media15VaapiAV1PictureC2E13scoped_refptrINS_9VASurfaceEES3_
@_ZN5media15VaapiAV1PictureD1Ev = hidden unnamed_addr alias void (%"class.media::VaapiAV1Picture"*), void (%"class.media::VaapiAV1Picture"*)* @_ZN5media15VaapiAV1PictureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16VaapiH264PictureC2E13scoped_refptrINS_9VASurfaceEE(%"class.media::VaapiH264Picture"*, %"class.media::VASurface"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.media::VaapiH264Picture"* %0 to %"class.media::H264Picture"*
  tail call void @_ZN5media11H264PictureC2Ev(%"class.media::H264Picture"* %3) #7
  %4 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media16VaapiH264PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 1, i32 0
  store %"class.media::VASurface"* %1, %"class.media::VASurface"** %5, align 8
  %6 = icmp eq %"class.media::VASurface"* %1, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 2, i32 0
  store %"class.media::VASurface"* null, %"class.media::VASurface"** %8, align 8
  br label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  %12 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 2, i32 0
  store %"class.media::VASurface"* null, %"class.media::VASurface"** %12, align 8
  %13 = atomicrmw sub i32* %10, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %1) #7
  %16 = bitcast %"class.media::VASurface"* %1 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %7, %9, %15
  ret void
}

declare void @_ZN5media11H264PictureC2Ev(%"class.media::H264Picture"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16VaapiH264PictureD2Ev(%"class.media::VaapiH264Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media16VaapiH264PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %11 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.media::VASurface"*, %"class.media::VASurface"** %13, align 8
  %15 = icmp eq %"class.media::VASurface"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %14) #7
  %21 = bitcast %"class.media::VASurface"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = bitcast %"class.media::VaapiH264Picture"* %0 to %"class.media::H264Picture"*
  tail call void @_ZN5media11H264PictureD2Ev(%"class.media::H264Picture"* %23) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media11H264PictureD2Ev(%"class.media::H264Picture"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16VaapiH264PictureD0Ev(%"class.media::VaapiH264Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media16VaapiH264PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %11 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.media::VASurface"*, %"class.media::VASurface"** %13, align 8
  %15 = icmp eq %"class.media::VASurface"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %14) #7
  %21 = bitcast %"class.media::VASurface"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = bitcast %"class.media::VaapiH264Picture"* %0 to %"class.media::H264Picture"*
  tail call void @_ZN5media11H264PictureD2Ev(%"class.media::H264Picture"* %23) #7
  %24 = bitcast %"class.media::VaapiH264Picture"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.media::VaapiH264Picture"* @_ZN5media16VaapiH264Picture18AsVaapiH264PictureEv(%"class.media::VaapiH264Picture"* readnone returned) unnamed_addr #4 align 2 {
  ret %"class.media::VaapiH264Picture"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16VaapiH264Picture16SetDecodeSurfaceE13scoped_refptrINS_9VASurfaceEE(%"class.media::VaapiH264Picture"* nocapture, %"class.media::VASurface"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.media::VASurface"* %1 to i64
  %4 = getelementptr inbounds %"class.media::VaapiH264Picture", %"class.media::VaapiH264Picture"* %0, i64 0, i32 2
  %5 = bitcast %class.scoped_refptr* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %7 = load %"class.media::VASurface"*, %"class.media::VASurface"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.media::VASurface"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %7) #7
  %14 = bitcast %"class.media::VASurface"* %7 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %13, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiVP8PictureC2E13scoped_refptrINS_9VASurfaceEE(%"class.media::VaapiVP8Picture"*, %"class.media::VASurface"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10VP8PictureC2Ev(%"class.media::VP8Picture"* %3) #7
  %4 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media15VaapiVP8PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 1, i32 0
  store %"class.media::VASurface"* %1, %"class.media::VASurface"** %5, align 8
  %6 = icmp eq %"class.media::VASurface"* %1, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  %10 = atomicrmw sub i32* %8, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %1) #7
  %13 = bitcast %"class.media::VASurface"* %1 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  br label %14

14:                                               ; preds = %2, %7, %12
  ret void
}

declare void @_ZN5media10VP8PictureC2Ev(%"class.media::VP8Picture"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiVP8PictureD2Ev(%"class.media::VaapiVP8Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media15VaapiVP8PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %11 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10VP8PictureD2Ev(%"class.media::VP8Picture"* %13) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media10VP8PictureD2Ev(%"class.media::VP8Picture"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiVP8PictureD0Ev(%"class.media::VaapiVP8Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media15VaapiVP8PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %11 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.media::VaapiVP8Picture", %"class.media::VaapiVP8Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10VP8PictureD2Ev(%"class.media::VP8Picture"* %13) #7
  %14 = bitcast %"class.media::VaapiVP8Picture"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.media::VaapiVP8Picture"* @_ZN5media15VaapiVP8Picture17AsVaapiVP8PictureEv(%"class.media::VaapiVP8Picture"* readnone returned) unnamed_addr #4 align 2 {
  ret %"class.media::VaapiVP8Picture"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiVP9PictureC2E13scoped_refptrINS_9VASurfaceEE(%"class.media::VaapiVP9Picture"*, %"class.media::VASurface"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10VP9PictureC2Ev(%"class.media::VP9Picture"* %3) #7
  %4 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media15VaapiVP9PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 1, i32 0
  store %"class.media::VASurface"* %1, %"class.media::VASurface"** %5, align 8
  %6 = icmp eq %"class.media::VASurface"* %1, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 2, i32 0
  store %"class.media::VASurface"* null, %"class.media::VASurface"** %8, align 8
  br label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  %12 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 2, i32 0
  store %"class.media::VASurface"* null, %"class.media::VASurface"** %12, align 8
  %13 = atomicrmw sub i32* %10, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %1) #7
  %16 = bitcast %"class.media::VASurface"* %1 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %7, %9, %15
  ret void
}

declare void @_ZN5media10VP9PictureC2Ev(%"class.media::VP9Picture"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiVP9PictureD2Ev(%"class.media::VaapiVP9Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media15VaapiVP9PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %11 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.media::VASurface"*, %"class.media::VASurface"** %13, align 8
  %15 = icmp eq %"class.media::VASurface"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %14) #7
  %21 = bitcast %"class.media::VASurface"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10VP9PictureD2Ev(%"class.media::VP9Picture"* %23) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media10VP9PictureD2Ev(%"class.media::VP9Picture"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiVP9PictureD0Ev(%"class.media::VaapiVP9Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media15VaapiVP9PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %11 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.media::VASurface"*, %"class.media::VASurface"** %13, align 8
  %15 = icmp eq %"class.media::VASurface"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %14) #7
  %21 = bitcast %"class.media::VASurface"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10VP9PictureD2Ev(%"class.media::VP9Picture"* %23) #7
  %24 = bitcast %"class.media::VaapiVP9Picture"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.media::VaapiVP9Picture"* @_ZN5media15VaapiVP9Picture17AsVaapiVP9PictureEv(%"class.media::VaapiVP9Picture"* readnone returned) unnamed_addr #4 align 2 {
  ret %"class.media::VaapiVP9Picture"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiVP9Picture16SetDecodeSurfaceE13scoped_refptrINS_9VASurfaceEE(%"class.media::VaapiVP9Picture"* nocapture, %"class.media::VASurface"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.media::VASurface"* %1 to i64
  %4 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 2
  %5 = bitcast %class.scoped_refptr* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %7 = load %"class.media::VASurface"*, %"class.media::VASurface"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.media::VASurface"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %7) #7
  %14 = bitcast %"class.media::VASurface"* %7 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %13, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VP9Picture"* @_ZN5media15VaapiVP9Picture15CreateDuplicateEv(%"class.media::VaapiVP9Picture"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 112) #8
  %3 = getelementptr inbounds %"class.media::VaapiVP9Picture", %"class.media::VaapiVP9Picture"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = bitcast i8* %2 to %"class.media::VP9Picture"*
  tail call void @_ZN5media10VP9PictureC2Ev(%"class.media::VP9Picture"* nonnull %9) #7
  %10 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media15VaapiVP9PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 96
  %12 = bitcast i8* %11 to %"class.media::VASurface"**
  store %"class.media::VASurface"* %4, %"class.media::VASurface"** %12, align 8
  %13 = atomicrmw add i32* %7, i32 1 monotonic
  %14 = getelementptr inbounds i8, i8* %2, i64 104
  %15 = bitcast i8* %14 to %"class.media::VASurface"**
  store %"class.media::VASurface"* null, %"class.media::VASurface"** %15, align 8
  %16 = atomicrmw sub i32* %7, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %22, label %24

18:                                               ; preds = %1
  %19 = bitcast i8* %2 to %"class.media::VP9Picture"*
  tail call void @_ZN5media10VP9PictureC2Ev(%"class.media::VP9Picture"* nonnull %19) #7
  %20 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media15VaapiVP9PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  br label %24

22:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %23 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %23) #8
  br label %24

24:                                               ; preds = %18, %6, %22
  %25 = phi %"class.media::VP9Picture"* [ %19, %18 ], [ %9, %6 ], [ %9, %22 ]
  %26 = getelementptr inbounds i8, i8* %2, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = atomicrmw add i32* %27, i32 1 monotonic
  ret %"class.media::VP9Picture"* %25
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiAV1PictureC2E13scoped_refptrINS_9VASurfaceEES3_(%"class.media::VaapiAV1Picture"*, %"class.media::VASurface"*, %"class.media::VASurface"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.media::VASurface"* %1 to i64
  %5 = ptrtoint %"class.media::VASurface"* %2 to i64
  %6 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10AV1PictureC2Ev(%"class.media::AV1Picture"* %6) #7
  %7 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media15VaapiAV1PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 1
  %9 = bitcast %class.scoped_refptr* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 2
  %11 = bitcast %class.scoped_refptr* %10 to i64*
  store i64 %5, i64* %11, align 8
  ret void
}

declare void @_ZN5media10AV1PictureC2Ev(%"class.media::AV1Picture"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiAV1PictureD2Ev(%"class.media::VaapiAV1Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media15VaapiAV1PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %11 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.media::VASurface"*, %"class.media::VASurface"** %13, align 8
  %15 = icmp eq %"class.media::VASurface"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %14) #7
  %21 = bitcast %"class.media::VASurface"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10AV1PictureD2Ev(%"class.media::AV1Picture"* %23) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media10AV1PictureD2Ev(%"class.media::AV1Picture"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15VaapiAV1PictureD0Ev(%"class.media::VaapiAV1Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media15VaapiAV1PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %4) #7
  %11 = bitcast %"class.media::VASurface"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.media::VASurface"*, %"class.media::VASurface"** %13, align 8
  %15 = icmp eq %"class.media::VASurface"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"* nonnull %14) #7
  %21 = bitcast %"class.media::VASurface"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %16, %20
  %23 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 0
  tail call void @_ZN5media10AV1PictureD2Ev(%"class.media::AV1Picture"* %23) #7
  %24 = bitcast %"class.media::VaapiAV1Picture"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::AV1Picture"* @_ZN5media15VaapiAV1Picture15CreateDuplicateEv(%"class.media::VaapiAV1Picture"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 2144) #8
  %3 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.media::VASurface"*, %"class.media::VASurface"** %3, align 8
  %5 = icmp eq %"class.media::VASurface"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %"class.media::VaapiAV1Picture", %"class.media::VaapiAV1Picture"* %0, i64 0, i32 2, i32 0
  %11 = load %"class.media::VASurface"*, %"class.media::VASurface"** %10, align 8
  %12 = icmp eq %"class.media::VASurface"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.media::VASurface", %"class.media::VASurface"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %13, %9
  %17 = ptrtoint %"class.media::VASurface"* %4 to i64
  %18 = ptrtoint %"class.media::VASurface"* %11 to i64
  %19 = bitcast i8* %2 to %"class.media::AV1Picture"*
  tail call void @_ZN5media10AV1PictureC2Ev(%"class.media::AV1Picture"* nonnull %19) #7
  %20 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media15VaapiAV1PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 2128
  %22 = bitcast i8* %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %2, i64 2136
  %24 = bitcast i8* %23 to i64*
  store i64 %18, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  ret %"class.media::AV1Picture"* %19
}

declare %"class.media::V4L2H264Picture"* @_ZN5media11H264Picture17AsV4L2H264PictureEv(%"class.media::H264Picture"*) unnamed_addr #1

declare %"class.media::V4L2VP8Picture"* @_ZN5media10VP8Picture16AsV4L2VP8PictureEv(%"class.media::VP8Picture"*) unnamed_addr #1

declare %"class.media::V4L2VP9Picture"* @_ZN5media10VP9Picture16AsV4L2VP9PictureEv(%"class.media::VP9Picture"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5media9VASurfaceD1Ev(%"class.media::VASurface"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
