; ModuleID = '../../ui/accessibility/mojom/ax_action_data_mojom_traits.cc'
source_filename = "../../ui/accessibility/mojom/ax_action_data_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ax::mojom::internal::AXActionData_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, %"class.ax::mojom::internal::AXTreeID_Data", %"struct.mojo::internal::Pointer.0", i32, i32, i32, i32, i32, i32, i32, i32, %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.2", %"struct.mojo::internal::Pointer.0", i32, i32, i32, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.ax::mojom::internal::AXTreeID_Data" = type { i32, i32, %"union.ax::mojom::internal::AXTreeID_Data::Union_" }
%"union.ax::mojom::internal::AXTreeID_Data::Union_" = type { %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.1" = type { i64 }
%"struct.mojo::internal::Pointer.2" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.5", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.3"*, %"class.mojo::ScopedHandleBase.3"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.3" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.3"* }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.16, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.18", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.15", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.16 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17" }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"struct.ui::AXActionData" = type { i32, %"class.ui::AXTreeID", %"class.std::__1::basic_string", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect", %"class.gfx::Point", %"class.std::__1::basic_string", i32, i32, i32, i32 }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.25 }
%union.anon.25 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom20AXActionDataDataViewEN2ui12AXActionDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXActionData_Data"*, %"class.mojo::Message"*, %"struct.ui::AXActionData"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 1
  %7 = icmp ult i32 %6, 38
  %8 = select i1 %7, i32 %6, i32 0
  store i32 %8, i32* %4, align 4
  %9 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 1
  %15 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewEN2ui8AXTreeIDEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeID_Data"* nonnull %9, %"class.mojo::Message"* %1, %"class.ui::AXTreeID"* %14) #4
  br i1 %15, label %16, label %227

16:                                               ; preds = %3, %13
  %17 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 2
  %18 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %18, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = bitcast %"struct.mojo::internal::Pointer.0"* %18 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %20
  br i1 %21, label %69, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = getelementptr inbounds i8, i8* %23, i64 4
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 1
  %29 = zext i32 %28 to i64
  %30 = tail call i1 @llvm.is.constant.i64(i64 %29) #4
  %31 = icmp ult i32 %28, 23
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %51

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  br label %45

42:                                               ; preds = %33
  %43 = trunc i32 %28 to i8
  store i8 %43, i8* %35, align 1
  %44 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  br label %45

45:                                               ; preds = %42, %38
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = icmp eq i32 %28, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %25, i64 %29, i1 false) #4
  br label %49

49:                                               ; preds = %48, %45
  %50 = getelementptr inbounds i8, i8* %46, i64 %29
  store i8 0, i8* %50, align 1
  br label %54

51:                                               ; preds = %24
  %52 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %25, i64 %29) #4
  %53 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %54

54:                                               ; preds = %51, %49
  %55 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %34, %49 ]
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %62 = select i1 %58, i8* %60, i8* %61
  %63 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %57 to i64
  %66 = select i1 %58, i64 %64, i64 %65
  %67 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %62, i64 %66) #4
  br i1 %67, label %69, label %68

68:                                               ; preds = %54
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %69

69:                                               ; preds = %68, %54, %16
  %70 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 2
  %71 = load i32, i32* %70, align 1
  %72 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 3
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 5
  %74 = load i32, i32* %73, align 1
  %75 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 4
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 6
  %77 = load i32, i32* %76, align 1
  %78 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 5
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 7
  %80 = load i32, i32* %79, align 1
  %81 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 6
  store i32 %80, i32* %81, align 4
  %82 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 8
  %83 = load i32, i32* %82, align 1
  %84 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 7
  store i32 %83, i32* %84, align 8
  %85 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 9
  %86 = load i32, i32* %85, align 1
  %87 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 8
  store i32 %86, i32* %87, align 4
  %88 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 10
  %89 = load i32, i32* %88, align 1
  %90 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 9
  store i32 %89, i32* %90, align 8
  %91 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 11
  %92 = load i32, i32* %91, align 1
  %93 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 12
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 16
  %95 = load i32, i32* %94, align 1
  %96 = icmp ult i32 %95, 7
  %97 = select i1 %96, i32 %95, i32 0
  %98 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 17
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 17
  %100 = load i32, i32* %99, align 1
  %101 = icmp ult i32 %100, 7
  %102 = select i1 %101, i32 %100, i32 0
  %103 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 18
  store i32 %102, i32* %103, align 8
  %104 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 18
  %105 = load i32, i32* %104, align 1
  %106 = icmp ult i32 %105, 3
  %107 = select i1 %106, i32 %105, i32 0
  %108 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 19
  store i32 %107, i32* %108, align 4
  %109 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 13
  %110 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %109, i64 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  %113 = bitcast %"struct.mojo::internal::Pointer.1"* %109 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 %111
  br i1 %112, label %152, label %115

115:                                              ; preds = %69
  %116 = getelementptr inbounds i8, i8* %114, i64 16
  %117 = bitcast i8* %116 to i32*
  %118 = load i32, i32* %117, align 1
  %119 = icmp slt i32 %118, 0
  br i1 %119, label %227, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds i8, i8* %114, i64 20
  %122 = bitcast i8* %121 to i32*
  %123 = load i32, i32* %122, align 1
  %124 = icmp slt i32 %123, 0
  br i1 %124, label %227, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds i8, i8* %114, i64 8
  %127 = bitcast i8* %126 to i32*
  %128 = load i32, i32* %127, align 1
  %129 = getelementptr inbounds i8, i8* %114, i64 12
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %130, align 1
  %132 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 13, i32 0, i32 0
  store i32 %128, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 13, i32 0, i32 1
  store i32 %131, i32* %133, align 4
  %134 = icmp sgt i32 %128, 0
  %135 = icmp sgt i32 %118, 0
  %136 = and i1 %135, %134
  %137 = sub nuw nsw i32 2147483647, %128
  %138 = icmp ult i32 %137, %118
  %139 = and i1 %138, %136
  %140 = select i1 %139, i32 %137, i32 %118
  %141 = icmp sgt i32 %140, 0
  %142 = select i1 %141, i32 %140, i32 0
  %143 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 13, i32 1, i32 0
  store i32 %142, i32* %143, align 4
  %144 = icmp sgt i32 %131, 0
  %145 = sub nuw nsw i32 2147483647, %131
  %146 = icmp ult i32 %145, %123
  %147 = and i1 %144, %146
  %148 = select i1 %147, i32 %145, i32 %123
  %149 = icmp sgt i32 %148, 0
  %150 = select i1 %149, i32 %148, i32 0
  %151 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 13, i32 1, i32 1
  store i32 %150, i32* %151, align 4
  br label %152

152:                                              ; preds = %69, %125
  %153 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 14
  %154 = getelementptr inbounds %"struct.mojo::internal::Pointer.2", %"struct.mojo::internal::Pointer.2"* %153, i64 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp eq i64 %155, 0
  %157 = bitcast %"struct.mojo::internal::Pointer.2"* %153 to i8*
  %158 = getelementptr inbounds i8, i8* %157, i64 %155
  br i1 %156, label %168, label %159

159:                                              ; preds = %152
  %160 = getelementptr inbounds i8, i8* %158, i64 8
  %161 = bitcast i8* %160 to i32*
  %162 = load i32, i32* %161, align 1
  %163 = getelementptr inbounds i8, i8* %158, i64 12
  %164 = bitcast i8* %163 to i32*
  %165 = load i32, i32* %164, align 1
  %166 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 14, i32 0
  store i32 %162, i32* %166, align 4
  %167 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 14, i32 1
  store i32 %165, i32* %167, align 4
  br label %168

168:                                              ; preds = %159, %152
  %169 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 15
  %170 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 15
  %171 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %170, i64 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  %174 = bitcast %"struct.mojo::internal::Pointer.0"* %170 to i8*
  %175 = getelementptr inbounds i8, i8* %174, i64 %172
  br i1 %173, label %221, label %176

176:                                              ; preds = %168
  %177 = getelementptr inbounds i8, i8* %175, i64 8
  %178 = getelementptr inbounds i8, i8* %175, i64 4
  %179 = bitcast i8* %178 to i32*
  %180 = load i32, i32* %179, align 1
  %181 = zext i32 %180 to i64
  %182 = tail call i1 @llvm.is.constant.i64(i64 %181) #4
  %183 = icmp ult i32 %180, 23
  %184 = and i1 %183, %182
  br i1 %184, label %185, label %203

185:                                              ; preds = %176
  %186 = bitcast %"class.std::__1::basic_string"* %169 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %194

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %181, i64* %191, align 8
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  br label %197

194:                                              ; preds = %185
  %195 = trunc i32 %180 to i8
  store i8 %195, i8* %187, align 1
  %196 = bitcast %"class.std::__1::basic_string"* %169 to i8*
  br label %197

197:                                              ; preds = %194, %190
  %198 = phi i8* [ %193, %190 ], [ %196, %194 ]
  %199 = icmp eq i32 %180, 0
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %198, i8* align 1 %177, i64 %181, i1 false) #4
  br label %201

201:                                              ; preds = %200, %197
  %202 = getelementptr inbounds i8, i8* %198, i64 %181
  store i8 0, i8* %202, align 1
  br label %206

203:                                              ; preds = %176
  %204 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %169, i8* %177, i64 %181) #4
  %205 = bitcast %"class.std::__1::basic_string"* %169 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %206

206:                                              ; preds = %203, %201
  %207 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %205, %203 ], [ %186, %201 ]
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = bitcast %"class.std::__1::basic_string"* %169 to i8*
  %214 = select i1 %210, i8* %212, i8* %213
  %215 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %216 = load i64, i64* %215, align 8
  %217 = zext i8 %209 to i64
  %218 = select i1 %210, i64 %216, i64 %217
  %219 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %214, i64 %218) #4
  br i1 %219, label %221, label %220

220:                                              ; preds = %206
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %221

221:                                              ; preds = %220, %206, %168
  %222 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %2, i64 0, i32 16
  %223 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 12
  %224 = load i32, i32* %223, align 1
  %225 = icmp ult i32 %224, 59
  %226 = select i1 %225, i32 %224, i32 0
  store i32 %226, i32* %222, align 4
  br label %227

227:                                              ; preds = %120, %115, %221, %13
  %228 = phi i1 [ false, %13 ], [ true, %221 ], [ false, %115 ], [ false, %120 ]
  ret i1 %228
}

declare zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewEN2ui8AXTreeIDEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeID_Data"*, %"class.mojo::Message"*, %"class.ui::AXTreeID"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
