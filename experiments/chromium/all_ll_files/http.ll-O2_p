; ModuleID = '../../base/third_party/libevent/http.c'
source_filename = "../../base/third_party/libevent/http.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.evhttp_connection = type { %struct.anon, i32, %struct.event, %struct.event, %struct.evbuffer*, %struct.evbuffer*, i8*, i16, i8*, i16, i32, i32, i32, i32, i32, %struct.evhttp*, %struct.evcon_requestq, void (%struct.evhttp_connection*, i8*)*, i8*, void (%struct.evhttp_connection*, i8*)*, i8*, %struct.event_base* }
%struct.anon = type { %struct.evhttp_connection*, %struct.evhttp_connection** }
%struct.event = type { %struct.anon.0, %struct.anon.1, %struct.anon.2, i32, %struct.event_base*, i32, i16, i16, i16*, %struct.timeval, i32, void (i32, i16, i8*)*, i8*, i32, i32 }
%struct.anon.0 = type { %struct.event*, %struct.event** }
%struct.anon.1 = type { %struct.event*, %struct.event** }
%struct.anon.2 = type { %struct.event*, %struct.event** }
%struct.timeval = type { i64, i64 }
%struct.evbuffer = type { i8*, i8*, i64, i64, i64, void (%struct.evbuffer*, i64, i64, i8*)*, i8* }
%struct.evhttp = type { %struct.boundq, %struct.httpcbq, %struct.evconq, i32, void (%struct.evhttp_request*, i8*)*, i8*, %struct.event_base* }
%struct.boundq = type { %struct.evhttp_bound_socket*, %struct.evhttp_bound_socket** }
%struct.evhttp_bound_socket = type { %struct.anon.3, %struct.event }
%struct.anon.3 = type { %struct.evhttp_bound_socket*, %struct.evhttp_bound_socket** }
%struct.httpcbq = type { %struct.evhttp_cb*, %struct.evhttp_cb** }
%struct.evhttp_cb = type { %struct.anon.4, i8*, void (%struct.evhttp_request*, i8*)*, i8* }
%struct.anon.4 = type { %struct.evhttp_cb*, %struct.evhttp_cb** }
%struct.evconq = type { %struct.evhttp_connection*, %struct.evhttp_connection** }
%struct.evhttp_request = type { %struct.anon.5, %struct.evhttp_connection*, i32, %struct.evkeyvalq*, %struct.evkeyvalq*, i8*, i16, i32, i32, i8*, i8, i8, i32, i8*, %struct.evbuffer*, i64, i8, %struct.evbuffer*, {}*, i8*, {}* }
%struct.anon.5 = type { %struct.evhttp_request*, %struct.evhttp_request** }
%struct.evkeyvalq = type { %struct.evkeyval*, %struct.evkeyval** }
%struct.evkeyval = type { %struct.anon.6, i8*, i8* }
%struct.anon.6 = type { %struct.evkeyval*, %struct.evkeyval** }
%struct.evcon_requestq = type { %struct.evhttp_request*, %struct.evhttp_request** }
%struct.event_base = type opaque
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }

@.str = private unnamed_addr constant [15 x i8] c"%s: malloc(%d)\00", align 1
@__func__.evhttp_htmlescape = private unnamed_addr constant [18 x i8] c"evhttp_htmlescape\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"%s: %s\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@evhttp_hostportfile.host = internal global [1024 x i8] zeroinitializer, align 16
@evhttp_hostportfile.file = internal global [1024 x i8] zeroinitializer, align 16
@.str.3 = private unnamed_addr constant [8 x i8] c"http://\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"/%s\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"%s: illegal connection state %d\00", align 1
@__func__.evhttp_read = private unnamed_addr constant [12 x i8] c"evhttp_read\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"%s: strdup\00", align 1
@__func__.evhttp_connection_set_local_address = private unnamed_addr constant [36 x i8] c"evhttp_connection_set_local_address\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"%s: calloc failed\00", align 1
@__func__.evhttp_connection_new = private unnamed_addr constant [22 x i8] c"evhttp_connection_new\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"%s: strdup failed\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"%s: evbuffer_new failed\00", align 1
@__func__.evhttp_make_request = private unnamed_addr constant [20 x i8] c"evhttp_make_request\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"Connection\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.15 = private unnamed_addr constant [125 x i8] c"<HTML><HEAD>\0A<TITLE>%d %s</TITLE>\0A</HEAD><BODY>\0A<H1>Method Not Implemented</H1>\0AInvalid method in request<P>\0A</BODY></HTML>\0A\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"Transfer-Encoding\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"chunked\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"%x\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"0\0D\0A\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"Content-Type\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"%%%02X\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"%s: malloc(%lu)\00", align 1
@__func__.evhttp_decode_uri = private unnamed_addr constant [18 x i8] c"evhttp_decode_uri\00", align 1
@__func__.evhttp_parse_query = private unnamed_addr constant [19 x i8] c"evhttp_parse_query\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"%s: malloc\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"%s: listen\00", align 1
@__func__.evhttp_bind_socket = private unnamed_addr constant [19 x i8] c"evhttp_bind_socket\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"%s: calloc\00", align 1
@__func__.evhttp_set_cb = private unnamed_addr constant [14 x i8] c"evhttp_set_cb\00", align 1
@__func__.evhttp_request_new = private unnamed_addr constant [19 x i8] c"evhttp_request_new\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"%s: evbuffer_new\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"&quot;\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"&#039;\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"Proxy-Connection\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"%s %s HTTP/%d.%d\0D\0A\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"Content-Length\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"HTTP/%d.%d %d %s\0D\0A\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"keep-alive\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"text/html; charset=ISO-8859-1\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"Date\00", align 1
@.str.48 = private unnamed_addr constant [26 x i8] c"%a, %d %b %Y %H:%M:%S GMT\00", align 1
@__func__.evhttp_add_header_internal = private unnamed_addr constant [27 x i8] c"evhttp_add_header_internal\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"HTTP/1.0\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"HTTP/1.1\00", align 1
@__func__.evhttp_parse_response_line = private unnamed_addr constant [27 x i8] c"evhttp_parse_response_line\00", align 1
@.str.51 = private unnamed_addr constant [21 x i8] c"%s: bad header on %d\00", align 1
@__func__.evhttp_read_header = private unnamed_addr constant [19 x i8] c"evhttp_read_header\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"Close\00", align 1
@.str.53 = private unnamed_addr constant [84 x i8] c"%s: we got no content length, but the server wants to keep the connection open: %s.\00", align 1
@__func__.evhttp_get_body_length = private unnamed_addr constant [23 x i8] c"evhttp_get_body_length\00", align 1
@uri_chars = internal unnamed_addr constant <{ [127 x i8], [129 x i8] }> <{ [127 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\01", [129 x i8] zeroinitializer }>, align 16
@.str.55 = private unnamed_addr constant [15 x i8] c"%s: bad accept\00", align 1
@__func__.accept_socket = private unnamed_addr constant [14 x i8] c"accept_socket\00", align 1
@__func__.evhttp_new_object = private unnamed_addr constant [18 x i8] c"evhttp_new_object\00", align 1
@.str.56 = private unnamed_addr constant [19 x i8] c"getnameinfo failed\00", align 1
@.str.57 = private unnamed_addr constant [23 x i8] c"getnameinfo failed: %s\00", align 1
@__func__.evhttp_associate_new_request_with_connection = private unnamed_addr constant [45 x i8] c"evhttp_associate_new_request_with_connection\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"Bad Request\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"Not Found\00", align 1
@.str.60 = private unnamed_addr constant [144 x i8] c"<html><head><title>404 Not Found</title></head><body><h1>Not Found</h1><p>The requested URL %s was not found on this server.</p></body></html>\0A\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"fcntl(F_SETFD)\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"getaddrinfo\00", align 1
@.str.65 = private unnamed_addr constant [16 x i8] c"getaddrinfo: %s\00", align 1
@switch.table.evhttp_make_header = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @evhttp_htmlescape(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [2 x i8], align 1
  %3 = tail call i64 @strlen(i8* %0) #12
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #13
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1
  store i8 -86, i8* %6, align 1
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %8, label %30

8:                                                ; preds = %1
  %9 = and i64 %3, 4294967295
  br label %10

10:                                               ; preds = %21, %8
  %11 = phi i64 [ 0, %8 ], [ %26, %21 ]
  %12 = phi i32 [ 0, %8 ], [ %25, %21 ]
  %13 = getelementptr inbounds i8, i8* %0, i64 %11
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  switch i32 %15, label %20 [
    i32 60, label %21
    i32 62, label %16
    i32 34, label %17
    i32 39, label %18
    i32 38, label %19
  ]

16:                                               ; preds = %10
  br label %21

17:                                               ; preds = %10
  br label %21

18:                                               ; preds = %10
  br label %21

19:                                               ; preds = %10
  br label %21

20:                                               ; preds = %10
  store i8 %14, i8* %5, align 1
  store i8 0, i8* %6, align 1
  br label %21

21:                                               ; preds = %10, %16, %17, %18, %19, %20
  %22 = phi i8* [ %5, %20 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), %19 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), %18 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), %17 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), %16 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), %10 ]
  %23 = call i64 @strlen(i8* %22) #12
  %24 = trunc i64 %23 to i32
  %25 = add i32 %12, %24
  %26 = add nuw nsw i64 %11, 1
  %27 = icmp eq i64 %26, %9
  br i1 %27, label %28, label %10

28:                                               ; preds = %21
  %29 = add i32 %25, 1
  br label %30

30:                                               ; preds = %28, %1
  %31 = phi i32 [ 1, %1 ], [ %29, %28 ]
  %32 = sext i32 %31 to i64
  %33 = tail call noalias i8* @malloc(i64 %32) #13
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.evhttp_htmlescape, i64 0, i64 0), i32 %31) #13
  br label %36

36:                                               ; preds = %35, %30
  br i1 %7, label %37, label %57

37:                                               ; preds = %36
  %38 = and i64 %3, 4294967295
  br label %39

39:                                               ; preds = %50, %37
  %40 = phi i64 [ 0, %37 ], [ %55, %50 ]
  %41 = phi i8* [ %33, %37 ], [ %54, %50 ]
  %42 = getelementptr inbounds i8, i8* %0, i64 %40
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  switch i32 %44, label %49 [
    i32 60, label %50
    i32 62, label %45
    i32 34, label %46
    i32 39, label %47
    i32 38, label %48
  ]

45:                                               ; preds = %39
  br label %50

46:                                               ; preds = %39
  br label %50

47:                                               ; preds = %39
  br label %50

48:                                               ; preds = %39
  br label %50

49:                                               ; preds = %39
  store i8 %43, i8* %5, align 1
  store i8 0, i8* %6, align 1
  br label %50

50:                                               ; preds = %39, %45, %46, %47, %48, %49
  %51 = phi i8* [ %5, %49 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), %48 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), %47 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), %46 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), %45 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), %39 ]
  %52 = call i8* @strcpy(i8* %41, i8* %51) #13
  %53 = call i64 @strlen(i8* %51) #12
  %54 = getelementptr inbounds i8, i8* %41, i64 %53
  %55 = add nuw nsw i64 %40, 1
  %56 = icmp eq i64 %55, %38
  br i1 %56, label %57, label %39

57:                                               ; preds = %50, %36
  %58 = phi i8* [ %33, %36 ], [ %54, %50 ]
  store i8 0, i8* %58, align 1
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #13
  ret i8* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

declare void @event_err(i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_write_buffer(%struct.evhttp_connection*, void (%struct.evhttp_connection*, i8*)*, i8*) local_unnamed_addr #0 {
  %4 = alloca %struct.timeval, align 8
  %5 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 17
  store void (%struct.evhttp_connection*, i8*)* %1, void (%struct.evhttp_connection*, i8*)** %5, align 8
  %6 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 18
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %8 = tail call i32 @event_pending(%struct.event* %7, i16 signext 5, %struct.timeval* null) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call i32 @event_del(%struct.event* %7) #13
  br label %12

12:                                               ; preds = %3, %10
  %13 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %struct.evhttp_connection* %0 to i8*
  tail call void @event_set(%struct.event* %7, i32 %14, i16 signext 4, void (i32, i16, i8*)* nonnull @evhttp_write, i8* %15) #13
  %16 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 21
  %17 = load %struct.event_base*, %struct.event_base** %16, align 8
  %18 = icmp eq %struct.event_base* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  %20 = tail call i32 @event_base_set(%struct.event_base* nonnull %17, %struct.event* %7) #13
  br label %21

21:                                               ; preds = %12, %19
  %22 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 11
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %28 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  store i64 0, i64* %28, align 8
  %29 = icmp eq i32 %23, -1
  %30 = select i1 %29, i32 50, i32 %23
  %31 = sext i32 %30 to i64
  store i64 %31, i64* %27, align 8
  %32 = call i32 @event_add(%struct.event* %7, %struct.timeval* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  br label %35

33:                                               ; preds = %21
  %34 = tail call i32 @event_add(%struct.event* %7, %struct.timeval* null) #13
  br label %35

35:                                               ; preds = %25, %33
  ret void
}

declare i32 @event_pending(%struct.event*, i16 signext, %struct.timeval*) local_unnamed_addr #4

declare i32 @event_del(%struct.event*) local_unnamed_addr #4

declare void @event_set(%struct.event*, i32, i16 signext, void (i32, i16, i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_write(i32, i16 signext, i8*) #0 {
  %4 = alloca %struct.timeval, align 8
  %5 = bitcast i8* %2 to %struct.evhttp_connection*
  %6 = icmp eq i16 %1, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %5, i32 0)
  br label %46

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %2, i64 288
  %10 = bitcast i8* %9 to %struct.evbuffer**
  %11 = load %struct.evbuffer*, %struct.evbuffer** %10, align 8
  %12 = tail call i32 @evbuffer_write(%struct.evbuffer* %11, i32 %0) #13
  switch i32 %12, label %15 [
    i32 -1, label %13
    i32 0, label %14
  ]

13:                                               ; preds = %8
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %5, i32 1)
  br label %46

14:                                               ; preds = %8
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %5, i32 1)
  br label %46

15:                                               ; preds = %8
  %16 = load %struct.evbuffer*, %struct.evbuffer** %10, align 8
  %17 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %16, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8, i8* %2, i64 24
  %22 = bitcast i8* %21 to %struct.event*
  %23 = getelementptr inbounds i8, i8* %2, i64 328
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %20
  %28 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = icmp eq i32 %25, -1
  %32 = select i1 %31, i32 50, i32 %25
  %33 = sext i32 %32 to i64
  store i64 %33, i64* %29, align 8
  %34 = call i32 @event_add(%struct.event* %22, %struct.timeval* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %46

35:                                               ; preds = %20
  %36 = tail call i32 @event_add(%struct.event* %22, %struct.timeval* null) #13
  br label %46

37:                                               ; preds = %15
  %38 = getelementptr inbounds i8, i8* %2, i64 368
  %39 = bitcast i8* %38 to void (%struct.evhttp_connection*, i8*)**
  %40 = load void (%struct.evhttp_connection*, i8*)*, void (%struct.evhttp_connection*, i8*)** %39, align 8
  %41 = icmp eq void (%struct.evhttp_connection*, i8*)* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds i8, i8* %2, i64 376
  %44 = bitcast i8* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void %40(%struct.evhttp_connection* %5, i8* %45) #13
  br label %46

46:                                               ; preds = %35, %27, %42, %37, %14, %13, %7
  ret void
}

declare i32 @event_base_set(%struct.event_base*, %struct.event*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_make_header(%struct.evhttp_connection* nocapture readonly, %struct.evhttp_request* readonly) local_unnamed_addr #0 {
  %3 = alloca [50 x i8], align 16
  %4 = alloca %struct.tm, align 8
  %5 = alloca i64, align 8
  %6 = alloca [22 x i8], align 16
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 7
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %94

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 4
  %12 = load %struct.evkeyvalq*, %struct.evkeyvalq** %11, align 8
  %13 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %12, i64 0, i32 0
  br label %14

14:                                               ; preds = %18, %10
  %15 = phi %struct.evkeyval** [ %13, %10 ], [ %23, %18 ]
  %16 = load %struct.evkeyval*, %struct.evkeyval** %15, align 8
  %17 = icmp eq %struct.evkeyval* %16, null
  br i1 %17, label %43, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %16, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i32 @strcasecmp(i8* %20, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0)) #12
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %16, i64 0, i32 0, i32 0
  br i1 %22, label %24, label %14

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %16, i64 0, i32 1
  %26 = load %struct.evkeyval*, %struct.evkeyval** %23, align 8
  %27 = icmp eq %struct.evkeyval* %26, null
  %28 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %16, i64 0, i32 0, i32 1
  %29 = bitcast %struct.evkeyval*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %12, i64 0, i32 1
  %32 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %26, i64 0, i32 0, i32 1
  %33 = select i1 %27, %struct.evkeyval*** %31, %struct.evkeyval*** %32
  %34 = bitcast %struct.evkeyval*** %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = bitcast %struct.evkeyval* %16 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %struct.evkeyval*** %28 to i64**
  %38 = load i64*, i64** %37, align 8
  store i64 %36, i64* %38, align 8
  %39 = load i8*, i8** %25, align 8
  tail call void @free(i8* %39) #13
  %40 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %16, i64 0, i32 2
  %41 = load i8*, i8** %40, align 8
  tail call void @free(i8* %41) #13
  %42 = bitcast %struct.evkeyval* %16 to i8*
  tail call void @free(i8* %42) #13
  br label %43

43:                                               ; preds = %14, %24
  %44 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 8
  %45 = load i32, i32* %44, align 8
  %46 = icmp ult i32 %45, 3
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = sext i32 %45 to i64
  %49 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.evhttp_make_header, i64 0, i64 %48
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %43, %47
  %52 = phi i8* [ %50, %47 ], [ null, %43 ]
  %53 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 5
  %54 = load %struct.evbuffer*, %struct.evbuffer** %53, align 8
  %55 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 9
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 10
  %58 = load i8, i8* %57, align 8
  %59 = sext i8 %58 to i32
  %60 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 11
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = tail call i32 (%struct.evbuffer*, i8*, ...) @evbuffer_add_printf(%struct.evbuffer* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0), i8* %52, i8* %56, i32 %59, i32 %62) #13
  %64 = load i32, i32* %44, align 8
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %337

66:                                               ; preds = %51
  %67 = load %struct.evkeyvalq*, %struct.evkeyvalq** %11, align 8
  %68 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %67, i64 0, i32 0
  %69 = load %struct.evkeyval*, %struct.evkeyval** %68, align 8
  %70 = icmp eq %struct.evkeyval* %69, null
  br i1 %70, label %85, label %71

71:                                               ; preds = %66, %77
  %72 = phi %struct.evkeyval* [ %79, %77 ], [ %69, %66 ]
  %73 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %72, i64 0, i32 1
  %74 = load i8*, i8** %73, align 8
  %75 = tail call i32 @strcasecmp(i8* %74, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #12
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %72, i64 0, i32 0, i32 0
  %79 = load %struct.evkeyval*, %struct.evkeyval** %78, align 8
  %80 = icmp eq %struct.evkeyval* %79, null
  br i1 %80, label %85, label %71

81:                                               ; preds = %71
  %82 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %72, i64 0, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  br i1 %84, label %85, label %337

85:                                               ; preds = %77, %81, %66
  %86 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %86) #13
  %87 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %86, i8 -86, i64 22, i1 false) #13
  %88 = load %struct.evbuffer*, %struct.evbuffer** %87, align 8
  %89 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %88, i64 0, i32 4
  %90 = load i64, i64* %89, align 8
  %91 = call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* nonnull %86, i64 22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0), i64 %90) #13
  %92 = load %struct.evkeyvalq*, %struct.evkeyvalq** %11, align 8
  %93 = call i32 @evhttp_add_header(%struct.evkeyvalq* %92, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0), i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %86) #13
  br label %337

94:                                               ; preds = %2
  %95 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 3
  %96 = load %struct.evkeyvalq*, %struct.evkeyvalq** %95, align 8
  %97 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %96, i64 0, i32 0
  %98 = load %struct.evkeyval*, %struct.evkeyval** %97, align 8
  %99 = icmp eq %struct.evkeyval* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %94, %106
  %101 = phi %struct.evkeyval* [ %108, %106 ], [ %98, %94 ]
  %102 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %101, i64 0, i32 1
  %103 = load i8*, i8** %102, align 8
  %104 = tail call i32 @strcasecmp(i8* %103, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #12
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %110, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %101, i64 0, i32 0, i32 0
  %108 = load %struct.evkeyval*, %struct.evkeyval** %107, align 8
  %109 = icmp eq %struct.evkeyval* %108, null
  br i1 %109, label %118, label %100

110:                                              ; preds = %100
  %111 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %101, i64 0, i32 2
  %112 = load i8*, i8** %111, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = tail call i32 @strncasecmp(i8* nonnull %112, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i64 10) #12
  %116 = icmp eq i32 %115, 0
  %117 = zext i1 %116 to i32
  br label %118

118:                                              ; preds = %106, %114, %110, %94
  %119 = phi i32 [ 0, %110 ], [ %117, %114 ], [ 0, %94 ], [ 0, %106 ]
  %120 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 5
  %121 = load %struct.evbuffer*, %struct.evbuffer** %120, align 8
  %122 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 10
  %123 = load i8, i8* %122, align 8
  %124 = sext i8 %123 to i32
  %125 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 11
  %126 = load i8, i8* %125, align 1
  %127 = sext i8 %126 to i32
  %128 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 12
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 13
  %131 = load i8*, i8** %130, align 8
  %132 = tail call i32 (%struct.evbuffer*, i8*, ...) @evbuffer_add_printf(%struct.evbuffer* %121, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0), i32 %124, i32 %127, i32 %129, i8* %131) #13
  %133 = load i8, i8* %122, align 8
  %134 = icmp eq i8 %133, 1
  br i1 %134, label %135, label %230

135:                                              ; preds = %118
  %136 = load i8, i8* %125, align 1
  %137 = icmp eq i8 %136, 1
  br i1 %137, label %138, label %170

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 4
  %140 = load %struct.evkeyvalq*, %struct.evkeyvalq** %139, align 8
  %141 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %140, i64 0, i32 0
  %142 = load %struct.evkeyval*, %struct.evkeyval** %141, align 8
  %143 = icmp eq %struct.evkeyval* %142, null
  br i1 %143, label %158, label %144

144:                                              ; preds = %138, %150
  %145 = phi %struct.evkeyval* [ %152, %150 ], [ %142, %138 ]
  %146 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %145, i64 0, i32 1
  %147 = load i8*, i8** %146, align 8
  %148 = tail call i32 @strcasecmp(i8* %147, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0)) #12
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %145, i64 0, i32 0, i32 0
  %152 = load %struct.evkeyval*, %struct.evkeyval** %151, align 8
  %153 = icmp eq %struct.evkeyval* %152, null
  br i1 %153, label %158, label %144

154:                                              ; preds = %144
  %155 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %145, i64 0, i32 2
  %156 = load i8*, i8** %155, align 8
  %157 = icmp eq i8* %156, null
  br i1 %157, label %158, label %189

158:                                              ; preds = %150, %154, %138
  %159 = getelementptr inbounds [50 x i8], [50 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %159) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %159, i8 -86, i64 50, i1 false) #13
  %160 = bitcast %struct.tm* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %160) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 56, i1 false) #13
  %161 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #13
  %162 = tail call i64 @time(i64* null) #13
  store i64 %162, i64* %5, align 8
  %163 = call %struct.tm* @gmtime_r(i64* nonnull %5, %struct.tm* nonnull %4) #13
  %164 = call i64 @strftime(i8* nonnull %159, i64 50, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.48, i64 0, i64 0), %struct.tm* nonnull %4) #13
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %158
  %167 = call i32 @evhttp_add_header(%struct.evkeyvalq* %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %159) #13
  br label %168

168:                                              ; preds = %166, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %160) #13
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %159) #13
  %169 = load i8, i8* %125, align 1
  br label %170

170:                                              ; preds = %168, %135
  %171 = phi i8 [ %169, %168 ], [ %136, %135 ]
  %172 = icmp eq i8 %171, 0
  %173 = icmp ne i32 %119, 0
  %174 = and i1 %173, %172
  br i1 %174, label %175, label %180

175:                                              ; preds = %170
  %176 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 4
  %177 = load %struct.evkeyvalq*, %struct.evkeyvalq** %176, align 8
  %178 = call i32 @evhttp_add_header(%struct.evkeyvalq* %177, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0)) #13
  %179 = load i8, i8* %125, align 1
  br label %180

180:                                              ; preds = %175, %170
  %181 = phi i8 [ %179, %175 ], [ %171, %170 ]
  %182 = icmp eq i8 %181, 1
  %183 = or i1 %173, %182
  br i1 %183, label %184, label %230

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 4
  %186 = load %struct.evkeyvalq*, %struct.evkeyvalq** %185, align 8
  %187 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %186, i64 0, i32 0
  %188 = load %struct.evkeyval*, %struct.evkeyval** %187, align 8
  br label %189

189:                                              ; preds = %184, %154
  %190 = phi %struct.evkeyval* [ %188, %184 ], [ %142, %154 ]
  %191 = phi %struct.evkeyvalq* [ %186, %184 ], [ %140, %154 ]
  %192 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 17
  %193 = load %struct.evbuffer*, %struct.evbuffer** %192, align 8
  %194 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %193, i64 0, i32 4
  %195 = load i64, i64* %194, align 8
  %196 = icmp eq %struct.evkeyval* %190, null
  br i1 %196, label %226, label %197

197:                                              ; preds = %189, %203
  %198 = phi %struct.evkeyval* [ %205, %203 ], [ %190, %189 ]
  %199 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %198, i64 0, i32 1
  %200 = load i8*, i8** %199, align 8
  %201 = call i32 @strcasecmp(i8* %200, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0)) #12
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %198, i64 0, i32 0, i32 0
  %205 = load %struct.evkeyval*, %struct.evkeyval** %204, align 8
  %206 = icmp eq %struct.evkeyval* %205, null
  br i1 %206, label %211, label %197

207:                                              ; preds = %197
  %208 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %198, i64 0, i32 2
  %209 = load i8*, i8** %208, align 8
  %210 = icmp eq i8* %209, null
  br i1 %210, label %211, label %230

211:                                              ; preds = %203, %207
  br label %212

212:                                              ; preds = %211, %218
  %213 = phi %struct.evkeyval* [ %220, %218 ], [ %190, %211 ]
  %214 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %213, i64 0, i32 1
  %215 = load i8*, i8** %214, align 8
  %216 = call i32 @strcasecmp(i8* %215, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #12
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %222, label %218

218:                                              ; preds = %212
  %219 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %213, i64 0, i32 0, i32 0
  %220 = load %struct.evkeyval*, %struct.evkeyval** %219, align 8
  %221 = icmp eq %struct.evkeyval* %220, null
  br i1 %221, label %226, label %212

222:                                              ; preds = %212
  %223 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %213, i64 0, i32 2
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %226, label %230

226:                                              ; preds = %218, %222, %189
  %227 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %227) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %227, i8 -86, i64 22, i1 false) #13
  %228 = call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* nonnull %227, i64 22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0), i64 %195) #13
  %229 = call i32 @evhttp_add_header(%struct.evkeyvalq* %191, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0), i8* nonnull %227) #13
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %227) #13
  br label %230

230:                                              ; preds = %226, %222, %207, %180, %118
  %231 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 17
  %232 = load %struct.evbuffer*, %struct.evbuffer** %231, align 8
  %233 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %232, i64 0, i32 4
  %234 = load i64, i64* %233, align 8
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %258, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 4
  %238 = load %struct.evkeyvalq*, %struct.evkeyvalq** %237, align 8
  %239 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %238, i64 0, i32 0
  %240 = load %struct.evkeyval*, %struct.evkeyval** %239, align 8
  %241 = icmp eq %struct.evkeyval* %240, null
  br i1 %241, label %256, label %242

242:                                              ; preds = %236, %248
  %243 = phi %struct.evkeyval* [ %250, %248 ], [ %240, %236 ]
  %244 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %243, i64 0, i32 1
  %245 = load i8*, i8** %244, align 8
  %246 = call i32 @strcasecmp(i8* %245, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0)) #12
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %252, label %248

248:                                              ; preds = %242
  %249 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %243, i64 0, i32 0, i32 0
  %250 = load %struct.evkeyval*, %struct.evkeyval** %249, align 8
  %251 = icmp eq %struct.evkeyval* %250, null
  br i1 %251, label %256, label %242

252:                                              ; preds = %242
  %253 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %243, i64 0, i32 2
  %254 = load i8*, i8** %253, align 8
  %255 = icmp eq i8* %254, null
  br i1 %255, label %256, label %258

256:                                              ; preds = %248, %252, %236
  %257 = call i32 @evhttp_add_header(%struct.evkeyvalq* %238, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0)) #13
  br label %258

258:                                              ; preds = %256, %252, %230
  %259 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 2
  %260 = load i32, i32* %259, align 8
  %261 = load %struct.evkeyvalq*, %struct.evkeyvalq** %95, align 8
  %262 = call fastcc i32 @evhttp_is_connection_close(i32 %260, %struct.evkeyvalq* %261) #13
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %337, label %264

264:                                              ; preds = %258
  %265 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 4
  %266 = load %struct.evkeyvalq*, %struct.evkeyvalq** %265, align 8
  %267 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %266, i64 0, i32 0
  br label %268

268:                                              ; preds = %272, %264
  %269 = phi %struct.evkeyval** [ %267, %264 ], [ %277, %272 ]
  %270 = load %struct.evkeyval*, %struct.evkeyval** %269, align 8
  %271 = icmp eq %struct.evkeyval* %270, null
  br i1 %271, label %298, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %270, i64 0, i32 1
  %274 = load i8*, i8** %273, align 8
  %275 = call i32 @strcasecmp(i8* %274, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #12
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %270, i64 0, i32 0, i32 0
  br i1 %276, label %278, label %268

278:                                              ; preds = %272
  %279 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %270, i64 0, i32 1
  %280 = load %struct.evkeyval*, %struct.evkeyval** %277, align 8
  %281 = icmp eq %struct.evkeyval* %280, null
  %282 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %270, i64 0, i32 0, i32 1
  %283 = bitcast %struct.evkeyval*** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %266, i64 0, i32 1
  %286 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %280, i64 0, i32 0, i32 1
  %287 = select i1 %281, %struct.evkeyval*** %285, %struct.evkeyval*** %286
  %288 = bitcast %struct.evkeyval*** %287 to i64*
  store i64 %284, i64* %288, align 8
  %289 = bitcast %struct.evkeyval* %270 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %struct.evkeyval*** %282 to i64**
  %292 = load i64*, i64** %291, align 8
  store i64 %290, i64* %292, align 8
  %293 = load i8*, i8** %279, align 8
  call void @free(i8* %293) #13
  %294 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %270, i64 0, i32 2
  %295 = load i8*, i8** %294, align 8
  call void @free(i8* %295) #13
  %296 = bitcast %struct.evkeyval* %270 to i8*
  call void @free(i8* %296) #13
  %297 = load i32, i32* %259, align 8
  br label %298

298:                                              ; preds = %268, %278
  %299 = phi i32 [ %297, %278 ], [ %260, %268 ]
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %298
  %303 = load %struct.evkeyvalq*, %struct.evkeyvalq** %265, align 8
  %304 = call i32 @evhttp_add_header(%struct.evkeyvalq* %303, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #13
  br label %305

305:                                              ; preds = %302, %298
  %306 = load %struct.evkeyvalq*, %struct.evkeyvalq** %265, align 8
  %307 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %306, i64 0, i32 0
  br label %308

308:                                              ; preds = %312, %305
  %309 = phi %struct.evkeyval** [ %307, %305 ], [ %317, %312 ]
  %310 = load %struct.evkeyval*, %struct.evkeyval** %309, align 8
  %311 = icmp eq %struct.evkeyval* %310, null
  br i1 %311, label %337, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %310, i64 0, i32 1
  %314 = load i8*, i8** %313, align 8
  %315 = call i32 @strcasecmp(i8* %314, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0)) #12
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %310, i64 0, i32 0, i32 0
  br i1 %316, label %318, label %308

318:                                              ; preds = %312
  %319 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %310, i64 0, i32 1
  %320 = load %struct.evkeyval*, %struct.evkeyval** %317, align 8
  %321 = icmp eq %struct.evkeyval* %320, null
  %322 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %310, i64 0, i32 0, i32 1
  %323 = bitcast %struct.evkeyval*** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %306, i64 0, i32 1
  %326 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %320, i64 0, i32 0, i32 1
  %327 = select i1 %321, %struct.evkeyval*** %325, %struct.evkeyval*** %326
  %328 = bitcast %struct.evkeyval*** %327 to i64*
  store i64 %324, i64* %328, align 8
  %329 = bitcast %struct.evkeyval* %310 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = bitcast %struct.evkeyval*** %322 to i64**
  %332 = load i64*, i64** %331, align 8
  store i64 %330, i64* %332, align 8
  %333 = load i8*, i8** %319, align 8
  call void @free(i8* %333) #13
  %334 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %310, i64 0, i32 2
  %335 = load i8*, i8** %334, align 8
  call void @free(i8* %335) #13
  %336 = bitcast %struct.evkeyval* %310 to i8*
  call void @free(i8* %336) #13
  br label %337

337:                                              ; preds = %308, %318, %258, %85, %81, %51
  %338 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 4
  %339 = load %struct.evkeyvalq*, %struct.evkeyvalq** %338, align 8
  %340 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %339, i64 0, i32 0
  %341 = load %struct.evkeyval*, %struct.evkeyval** %340, align 8
  %342 = icmp eq %struct.evkeyval* %341, null
  %343 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 5
  %344 = load %struct.evbuffer*, %struct.evbuffer** %343, align 8
  br i1 %342, label %357, label %345

345:                                              ; preds = %337, %345
  %346 = phi %struct.evbuffer* [ %356, %345 ], [ %344, %337 ]
  %347 = phi %struct.evkeyval* [ %354, %345 ], [ %341, %337 ]
  %348 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %347, i64 0, i32 1
  %349 = load i8*, i8** %348, align 8
  %350 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %347, i64 0, i32 2
  %351 = load i8*, i8** %350, align 8
  %352 = call i32 (%struct.evbuffer*, i8*, ...) @evbuffer_add_printf(%struct.evbuffer* %346, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8* %349, i8* %351) #13
  %353 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %347, i64 0, i32 0, i32 0
  %354 = load %struct.evkeyval*, %struct.evkeyval** %353, align 8
  %355 = icmp eq %struct.evkeyval* %354, null
  %356 = load %struct.evbuffer*, %struct.evbuffer** %343, align 8
  br i1 %355, label %357, label %345

357:                                              ; preds = %345, %337
  %358 = phi %struct.evbuffer* [ %344, %337 ], [ %356, %345 ]
  %359 = call i32 @evbuffer_add(%struct.evbuffer* %358, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #13
  %360 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 17
  %361 = load %struct.evbuffer*, %struct.evbuffer** %360, align 8
  %362 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %361, i64 0, i32 4
  %363 = load i64, i64* %362, align 8
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %368, label %365

365:                                              ; preds = %357
  %366 = load %struct.evbuffer*, %struct.evbuffer** %343, align 8
  %367 = call i32 @evbuffer_add_buffer(%struct.evbuffer* %366, %struct.evbuffer* %361) #13
  br label %368

368:                                              ; preds = %357, %365
  ret void
}

declare i32 @evbuffer_add_printf(%struct.evbuffer*, i8*, ...) local_unnamed_addr #4

declare i32 @evbuffer_add(%struct.evbuffer*, i8*, i64) local_unnamed_addr #4

declare i32 @evbuffer_add_buffer(%struct.evbuffer*, %struct.evbuffer*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_hostportfile(i8*, i8**, i16*, i8**) local_unnamed_addr #0 {
  %5 = tail call i32 @strncasecmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %41

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i64 7
  %9 = tail call i64 @_event_strlcpy(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @evhttp_hostportfile.host, i64 0, i64 0), i8* %8, i64 1024) #13
  %10 = icmp ugt i64 %9, 1023
  br i1 %10, label %41, label %11

11:                                               ; preds = %7
  %12 = tail call i8* @strchr(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @evhttp_hostportfile.host, i64 0, i64 0), i32 47) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  store i8 0, i8* %12, align 1
  %15 = getelementptr inbounds i8, i8* %12, i64 1
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i8* [ %15, %14 ], [ null, %11 ]
  %18 = icmp ne i8** %3, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = icmp eq i8* %17, null
  %21 = select i1 %20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* %17
  %22 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @evhttp_hostportfile.file, i64 0, i64 0), i64 1024, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* %21) #13
  br label %23

23:                                               ; preds = %19, %16
  %24 = tail call i8* @strchr(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @evhttp_hostportfile.host, i64 0, i64 0), i32 58) #12
  %25 = icmp eq i8* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %23
  store i8 0, i8* %24, align 1
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  %28 = tail call i64 @strtol(i8* nocapture %27, i8** null, i32 10) #13
  %29 = trunc i64 %28 to i16
  %30 = and i64 %28, 65535
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %23, %26
  %33 = phi i16 [ %29, %26 ], [ 80, %23 ]
  %34 = icmp eq i8** %1, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @evhttp_hostportfile.host, i64 0, i64 0), i8** %1, align 8
  br label %36

36:                                               ; preds = %32, %35
  %37 = icmp eq i16* %2, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  store i16 %33, i16* %2, align 2
  br label %39

39:                                               ; preds = %36, %38
  br i1 %18, label %40, label %41

40:                                               ; preds = %39
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @evhttp_hostportfile.file, i64 0, i64 0), i8** %3, align 8
  br label %41

41:                                               ; preds = %39, %40, %26, %7, %4
  %42 = phi i32 [ -1, %4 ], [ -1, %7 ], [ -1, %26 ], [ 0, %40 ], [ 0, %39 ]
  ret i32 %42
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare i64 @_event_strlcpy(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #5

declare i32 @evutil_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_connection_fail(%struct.evhttp_connection*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 0
  %4 = load %struct.evhttp_request*, %struct.evhttp_request** %3, align 8
  %5 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 10
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %49, label %9

9:                                                ; preds = %2
  %10 = icmp ult i32 %1, 2
  br i1 %10, label %11, label %37

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 16
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %48

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 0, i32 0
  %18 = load %struct.evhttp_request*, %struct.evhttp_request** %17, align 8
  %19 = icmp eq %struct.evhttp_request* %18, null
  %20 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 0, i32 1
  %21 = bitcast %struct.evhttp_request*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  br i1 %19, label %25, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %18, i64 0, i32 0, i32 1
  br label %29

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 1
  %27 = load %struct.evhttp_connection*, %struct.evhttp_connection** %26, align 8
  %28 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %27, i64 0, i32 16, i32 1
  br label %29

29:                                               ; preds = %25, %23
  %30 = phi %struct.evhttp_request*** [ %28, %25 ], [ %24, %23 ]
  %31 = bitcast %struct.evhttp_request*** %30 to i64*
  store i64 %22, i64* %31, align 8
  %32 = bitcast %struct.evhttp_request* %4 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %struct.evhttp_request*** %20 to i64**
  %35 = load i64*, i64** %34, align 8
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 1
  store %struct.evhttp_connection* null, %struct.evhttp_connection** %36, align 8
  br label %48

37:                                               ; preds = %9
  %38 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 9
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %37
  tail call void @free(i8* nonnull %39) #13
  store i8* null, i8** %38, align 8
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 18
  %44 = bitcast {}** %43 to void (%struct.evhttp_request*, i8*)**
  %45 = load void (%struct.evhttp_request*, i8*)*, void (%struct.evhttp_request*, i8*)** %44, align 8
  %46 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 19
  %47 = load i8*, i8** %46, align 8
  tail call void %45(%struct.evhttp_request* %4, i8* %47) #13
  br label %76

48:                                               ; preds = %11, %29
  tail call void @evhttp_connection_free(%struct.evhttp_connection* %0)
  br label %76

49:                                               ; preds = %2
  %50 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 18
  %51 = bitcast {}** %50 to void (%struct.evhttp_request*, i8*)**
  %52 = load void (%struct.evhttp_request*, i8*)*, void (%struct.evhttp_request*, i8*)** %51, align 8
  %53 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 19
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 0, i32 0
  %56 = load %struct.evhttp_request*, %struct.evhttp_request** %55, align 8
  %57 = icmp eq %struct.evhttp_request* %56, null
  %58 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 0, i32 1
  %59 = bitcast %struct.evhttp_request*** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 1
  %62 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %56, i64 0, i32 0, i32 1
  %63 = select i1 %57, %struct.evhttp_request*** %61, %struct.evhttp_request*** %62
  %64 = bitcast %struct.evhttp_request*** %63 to i64*
  store i64 %60, i64* %64, align 8
  %65 = bitcast %struct.evhttp_request* %4 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %struct.evhttp_request*** %58 to i64**
  %68 = load i64*, i64** %67, align 8
  store i64 %66, i64* %68, align 8
  tail call void @evhttp_request_free(%struct.evhttp_request* %4)
  tail call void @evhttp_connection_reset(%struct.evhttp_connection* %0)
  %69 = load %struct.evhttp_request*, %struct.evhttp_request** %3, align 8
  %70 = icmp eq %struct.evhttp_request* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %49
  %72 = tail call i32 @evhttp_connection_connect(%struct.evhttp_connection* %0)
  br label %73

73:                                               ; preds = %49, %71
  %74 = icmp eq void (%struct.evhttp_request*, i8*)* %52, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %73
  tail call void %52(%struct.evhttp_request* null, i8* %54) #13
  br label %76

76:                                               ; preds = %42, %75, %73, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_connection_free(%struct.evhttp_connection*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 19
  %11 = load void (%struct.evhttp_connection*, i8*)*, void (%struct.evhttp_connection*, i8*)** %10, align 8
  %12 = icmp eq void (%struct.evhttp_connection*, i8*)* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 20
  %15 = load i8*, i8** %14, align 8
  tail call void %11(%struct.evhttp_connection* %0, i8* %15) #13
  br label %16

16:                                               ; preds = %9, %5, %1, %13
  %17 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 0
  %18 = load %struct.evhttp_request*, %struct.evhttp_request** %17, align 8
  %19 = icmp eq %struct.evhttp_request* %18, null
  br i1 %19, label %39, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 1
  br label %22

22:                                               ; preds = %20, %22
  %23 = phi %struct.evhttp_request* [ %18, %20 ], [ %37, %22 ]
  %24 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %23, i64 0, i32 0, i32 0
  %25 = load %struct.evhttp_request*, %struct.evhttp_request** %24, align 8
  %26 = icmp eq %struct.evhttp_request* %25, null
  %27 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %23, i64 0, i32 0, i32 1
  %28 = bitcast %struct.evhttp_request*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %25, i64 0, i32 0, i32 1
  %31 = select i1 %26, %struct.evhttp_request*** %21, %struct.evhttp_request*** %30
  %32 = bitcast %struct.evhttp_request*** %31 to i64*
  store i64 %29, i64* %32, align 8
  %33 = bitcast %struct.evhttp_request* %23 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %struct.evhttp_request*** %27 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  tail call void @evhttp_request_free(%struct.evhttp_request* nonnull %23)
  %37 = load %struct.evhttp_request*, %struct.evhttp_request** %17, align 8
  %38 = icmp eq %struct.evhttp_request* %37, null
  br i1 %38, label %39, label %22

39:                                               ; preds = %22, %16
  %40 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 15
  %41 = load %struct.evhttp*, %struct.evhttp** %40, align 8
  %42 = icmp eq %struct.evhttp* %41, null
  br i1 %42, label %58, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 0, i32 0
  %45 = load %struct.evhttp_connection*, %struct.evhttp_connection** %44, align 8
  %46 = icmp eq %struct.evhttp_connection* %45, null
  %47 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 0, i32 1
  %48 = bitcast %struct.evhttp_connection*** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %41, i64 0, i32 2, i32 1
  %51 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %45, i64 0, i32 0, i32 1
  %52 = select i1 %46, %struct.evhttp_connection*** %50, %struct.evhttp_connection*** %51
  %53 = bitcast %struct.evhttp_connection*** %52 to i64*
  store i64 %49, i64* %53, align 8
  %54 = bitcast %struct.evhttp_connection* %0 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %struct.evhttp_connection*** %47 to i64**
  %57 = load i64*, i64** %56, align 8
  store i64 %55, i64* %57, align 8
  br label %58

58:                                               ; preds = %39, %43
  %59 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 3, i32 14
  %60 = load i32, i32* %59, align 4
  %61 = trunc i32 %60 to i8
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 3
  %65 = tail call i32 @event_del(%struct.event* %64) #13
  br label %66

66:                                               ; preds = %63, %58
  %67 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2, i32 14
  %68 = load i32, i32* %67, align 4
  %69 = trunc i32 %68 to i8
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %73 = tail call i32 @event_del(%struct.event* %72) #13
  br label %74

74:                                               ; preds = %71, %66
  %75 = load i32, i32* %2, align 8
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = tail call i32 @close(i32 %75) #13
  br label %79

79:                                               ; preds = %74, %77
  %80 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 6
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %79
  tail call void @free(i8* nonnull %81) #13
  br label %84

84:                                               ; preds = %79, %83
  %85 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 8
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @free(i8* nonnull %86) #13
  br label %89

89:                                               ; preds = %84, %88
  %90 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 4
  %91 = load %struct.evbuffer*, %struct.evbuffer** %90, align 8
  %92 = icmp eq %struct.evbuffer* %91, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  tail call void @evbuffer_free(%struct.evbuffer* nonnull %91) #13
  br label %94

94:                                               ; preds = %89, %93
  %95 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 5
  %96 = load %struct.evbuffer*, %struct.evbuffer** %95, align 8
  %97 = icmp eq %struct.evbuffer* %96, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  tail call void @evbuffer_free(%struct.evbuffer* nonnull %96) #13
  br label %99

99:                                               ; preds = %94, %98
  %100 = bitcast %struct.evhttp_connection* %0 to i8*
  tail call void @free(i8* %100) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_request_free(%struct.evhttp_request* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 5
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @free(i8* nonnull %3) #13
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 9
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @free(i8* nonnull %8) #13
  br label %11

11:                                               ; preds = %6, %10
  %12 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 13
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @free(i8* nonnull %13) #13
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 3
  %18 = load %struct.evkeyvalq*, %struct.evkeyvalq** %17, align 8
  %19 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %18, i64 0, i32 0
  %20 = load %struct.evkeyval*, %struct.evkeyval** %19, align 8
  %21 = icmp eq %struct.evkeyval* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = bitcast %struct.evkeyvalq* %18 to i8*
  br label %51

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %18, i64 0, i32 1
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi %struct.evkeyval* [ %20, %24 ], [ %46, %26 ]
  %28 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %27, i64 0, i32 0, i32 0
  %29 = load %struct.evkeyval*, %struct.evkeyval** %28, align 8
  %30 = icmp eq %struct.evkeyval* %29, null
  %31 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %27, i64 0, i32 0, i32 1
  %32 = bitcast %struct.evkeyval*** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %29, i64 0, i32 0, i32 1
  %35 = select i1 %30, %struct.evkeyval*** %25, %struct.evkeyval*** %34
  %36 = bitcast %struct.evkeyval*** %35 to i64*
  store i64 %33, i64* %36, align 8
  %37 = bitcast %struct.evkeyval* %27 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %struct.evkeyval*** %31 to i64**
  %40 = load i64*, i64** %39, align 8
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %27, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  tail call void @free(i8* %42) #13
  %43 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %27, i64 0, i32 2
  %44 = load i8*, i8** %43, align 8
  tail call void @free(i8* %44) #13
  %45 = bitcast %struct.evkeyval* %27 to i8*
  tail call void @free(i8* %45) #13
  %46 = load %struct.evkeyval*, %struct.evkeyval** %19, align 8
  %47 = icmp eq %struct.evkeyval* %46, null
  br i1 %47, label %48, label %26

48:                                               ; preds = %26
  %49 = bitcast %struct.evkeyvalq** %17 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %22, %48
  %52 = phi i8* [ %50, %48 ], [ %23, %22 ]
  tail call void @free(i8* %52) #13
  %53 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 4
  %54 = load %struct.evkeyvalq*, %struct.evkeyvalq** %53, align 8
  %55 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %54, i64 0, i32 0
  %56 = load %struct.evkeyval*, %struct.evkeyval** %55, align 8
  %57 = icmp eq %struct.evkeyval* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %struct.evkeyvalq* %54 to i8*
  br label %87

60:                                               ; preds = %51
  %61 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %54, i64 0, i32 1
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi %struct.evkeyval* [ %56, %60 ], [ %82, %62 ]
  %64 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %63, i64 0, i32 0, i32 0
  %65 = load %struct.evkeyval*, %struct.evkeyval** %64, align 8
  %66 = icmp eq %struct.evkeyval* %65, null
  %67 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %63, i64 0, i32 0, i32 1
  %68 = bitcast %struct.evkeyval*** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %65, i64 0, i32 0, i32 1
  %71 = select i1 %66, %struct.evkeyval*** %61, %struct.evkeyval*** %70
  %72 = bitcast %struct.evkeyval*** %71 to i64*
  store i64 %69, i64* %72, align 8
  %73 = bitcast %struct.evkeyval* %63 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %struct.evkeyval*** %67 to i64**
  %76 = load i64*, i64** %75, align 8
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %63, i64 0, i32 1
  %78 = load i8*, i8** %77, align 8
  tail call void @free(i8* %78) #13
  %79 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %63, i64 0, i32 2
  %80 = load i8*, i8** %79, align 8
  tail call void @free(i8* %80) #13
  %81 = bitcast %struct.evkeyval* %63 to i8*
  tail call void @free(i8* %81) #13
  %82 = load %struct.evkeyval*, %struct.evkeyval** %55, align 8
  %83 = icmp eq %struct.evkeyval* %82, null
  br i1 %83, label %84, label %62

84:                                               ; preds = %62
  %85 = bitcast %struct.evkeyvalq** %53 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %58, %84
  %88 = phi i8* [ %86, %84 ], [ %59, %58 ]
  tail call void @free(i8* %88) #13
  %89 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 14
  %90 = load %struct.evbuffer*, %struct.evbuffer** %89, align 8
  %91 = icmp eq %struct.evbuffer* %90, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %87
  tail call void @evbuffer_free(%struct.evbuffer* nonnull %90) #13
  br label %93

93:                                               ; preds = %87, %92
  %94 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 17
  %95 = load %struct.evbuffer*, %struct.evbuffer** %94, align 8
  %96 = icmp eq %struct.evbuffer* %95, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  tail call void @evbuffer_free(%struct.evbuffer* nonnull %95) #13
  br label %98

98:                                               ; preds = %93, %97
  %99 = bitcast %struct.evhttp_request* %0 to i8*
  tail call void @free(i8* %99) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_connection_reset(%struct.evhttp_connection*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2, i32 14
  %3 = load i32, i32* %2, align 4
  %4 = trunc i32 %3 to i8
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %8 = tail call i32 @event_del(%struct.event* %7) #13
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %28, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 19
  %19 = load void (%struct.evhttp_connection*, i8*)*, void (%struct.evhttp_connection*, i8*)** %18, align 8
  %20 = icmp eq void (%struct.evhttp_connection*, i8*)* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 20
  %23 = load i8*, i8** %22, align 8
  tail call void %19(%struct.evhttp_connection* %0, i8* %23) #13
  %24 = load i32, i32* %10, align 8
  br label %25

25:                                               ; preds = %17, %13, %21
  %26 = phi i32 [ %11, %17 ], [ %11, %13 ], [ %24, %21 ]
  %27 = tail call i32 @close(i32 %26) #13
  store i32 -1, i32* %10, align 8
  br label %28

28:                                               ; preds = %9, %25
  %29 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 4
  %31 = load %struct.evbuffer*, %struct.evbuffer** %30, align 8
  %32 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %31, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  tail call void @evbuffer_drain(%struct.evbuffer* %31, i64 %33) #13
  %34 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 5
  %35 = load %struct.evbuffer*, %struct.evbuffer** %34, align 8
  %36 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %35, i64 0, i32 4
  %37 = load i64, i64* %36, align 8
  tail call void @evbuffer_drain(%struct.evbuffer* %35, i64 %37) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_connection_connect(%struct.evhttp_connection*) local_unnamed_addr #0 {
  %2 = alloca %struct.timeval, align 8
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %76, label %6

6:                                                ; preds = %1
  tail call void @evhttp_connection_reset(%struct.evhttp_connection* %0)
  %7 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 10
  %8 = load i32, i32* %7, align 4
  %9 = or i32 %8, 2
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 6
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 7
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i8* %11, null
  %15 = icmp eq i16 %13, 0
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call fastcc i32 @bind_socket_ai(%struct.addrinfo* null, i32 0) #13
  br label %26

19:                                               ; preds = %6
  %20 = tail call fastcc %struct.addrinfo* @make_addrinfo(i8* %11, i16 zeroext %13) #13
  %21 = icmp eq %struct.addrinfo* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  store i32 -1, i32* %23, align 8
  br label %76

24:                                               ; preds = %19
  %25 = tail call fastcc i32 @bind_socket_ai(%struct.addrinfo* nonnull %20, i32 0) #13
  tail call void @freeaddrinfo(%struct.addrinfo* nonnull %20) #13
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi i32 [ %18, %17 ], [ %25, %24 ]
  %28 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  store i32 %27, i32* %28, align 8
  %29 = icmp eq i32 %27, -1
  br i1 %29, label %76, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 8
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 9
  %34 = load i16, i16* %33, align 8
  %35 = tail call fastcc %struct.addrinfo* @make_addrinfo(i8* %32, i16 zeroext %34) #13
  %36 = icmp eq %struct.addrinfo* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %35, i64 0, i32 5
  %39 = load %struct.sockaddr*, %struct.sockaddr** %38, align 8
  %40 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %35, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = tail call i32 @connect(i32 %27, %struct.sockaddr* %39, i32 %41) #13
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %52

44:                                               ; preds = %37
  %45 = tail call i32* @__errno_location() #14
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 115
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  tail call void @freeaddrinfo(%struct.addrinfo* nonnull %35) #13
  br label %49

49:                                               ; preds = %30, %48
  %50 = load i32, i32* %28, align 8
  %51 = tail call i32 @close(i32 %50) #13
  store i32 -1, i32* %28, align 8
  br label %76

52:                                               ; preds = %44, %37
  tail call void @freeaddrinfo(%struct.addrinfo* nonnull %35) #13
  %53 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %54 = load i32, i32* %28, align 8
  %55 = bitcast %struct.evhttp_connection* %0 to i8*
  tail call void @event_set(%struct.event* %53, i32 %54, i16 signext 4, void (i32, i16, i8*)* nonnull @evhttp_connectioncb, i8* %55) #13
  %56 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 21
  %57 = load %struct.event_base*, %struct.event_base** %56, align 8
  %58 = icmp eq %struct.event_base* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  %60 = tail call i32 @event_base_set(%struct.event_base* nonnull %57, %struct.event* %53) #13
  br label %61

61:                                               ; preds = %52, %59
  %62 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 11
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %61
  %66 = bitcast %struct.timeval* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #13
  %67 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  %68 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 1
  store i64 0, i64* %68, align 8
  %69 = icmp eq i32 %63, -1
  %70 = select i1 %69, i32 45, i32 %63
  %71 = sext i32 %70 to i64
  store i64 %71, i64* %67, align 8
  %72 = call i32 @event_add(%struct.event* %53, %struct.timeval* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #13
  br label %75

73:                                               ; preds = %61
  %74 = tail call i32 @event_add(%struct.event* %53, %struct.timeval* null) #13
  br label %75

75:                                               ; preds = %65, %73
  store i32 1, i32* %3, align 4
  br label %76

76:                                               ; preds = %22, %26, %1, %75, %49
  %77 = phi i32 [ -1, %49 ], [ 0, %75 ], [ 0, %1 ], [ -1, %26 ], [ -1, %22 ]
  ret i32 %77
}

declare i32 @evbuffer_write(%struct.evbuffer*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_read(i32, i16 signext, i8*) #0 {
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.timeval, align 8
  %6 = alloca %struct.timeval, align 8
  %7 = bitcast i8* %2 to %struct.evhttp_connection*
  %8 = getelementptr inbounds i8, i8* %2, i64 352
  %9 = bitcast i8* %8 to %struct.evhttp_request**
  %10 = load %struct.evhttp_request*, %struct.evhttp_request** %9, align 8
  %11 = icmp eq i16 %1, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %7, i32 0)
  br label %97

13:                                               ; preds = %3
  %14 = getelementptr inbounds i8, i8* %2, i64 280
  %15 = bitcast i8* %14 to %struct.evbuffer**
  %16 = load %struct.evbuffer*, %struct.evbuffer** %15, align 8
  %17 = tail call i32 @evbuffer_read(%struct.evbuffer* %16, i32 %0, i32 -1) #13
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %40

19:                                               ; preds = %13
  %20 = tail call i32* @__errno_location() #14
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %22 [
    i32 4, label %23
    i32 11, label %23
  ]

22:                                               ; preds = %19
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %7, i32 1)
  br label %97

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds i8, i8* %2, i64 24
  %25 = bitcast i8* %24 to %struct.event*
  %26 = getelementptr inbounds i8, i8* %2, i64 328
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %23
  %31 = bitcast %struct.timeval* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  %32 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i64 0, i32 0
  %33 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i64 0, i32 1
  store i64 0, i64* %33, align 8
  %34 = icmp eq i32 %28, -1
  %35 = select i1 %34, i32 50, i32 %28
  %36 = sext i32 %35 to i64
  store i64 %36, i64* %32, align 8
  %37 = call i32 @event_add(%struct.event* %25, %struct.timeval* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br label %97

38:                                               ; preds = %23
  %39 = tail call i32 @event_add(%struct.event* %25, %struct.timeval* null) #13
  br label %97

40:                                               ; preds = %13
  %41 = icmp eq i32 %17, 0
  %42 = getelementptr inbounds i8, i8* %2, i64 340
  %43 = bitcast i8* %42 to i32*
  br i1 %41, label %44, label %45

44:                                               ; preds = %40
  store i32 0, i32* %43, align 4
  tail call fastcc void @evhttp_connection_done(%struct.evhttp_connection* %7)
  br label %97

45:                                               ; preds = %40
  %46 = load i32, i32* %43, align 4
  switch i32 %46, label %96 [
    i32 3, label %47
    i32 4, label %69
    i32 5, label %70
    i32 6, label %71
  ]

47:                                               ; preds = %45
  %48 = load %struct.evbuffer*, %struct.evbuffer** %15, align 8
  %49 = tail call i32 @evhttp_parse_firstline(%struct.evhttp_request* %10, %struct.evbuffer* %48) #13
  switch i32 %49, label %68 [
    i32 -1, label %50
    i32 0, label %51
  ]

50:                                               ; preds = %47
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %7, i32 2) #13
  br label %97

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %2, i64 24
  %53 = bitcast i8* %52 to %struct.event*
  %54 = getelementptr inbounds i8, i8* %2, i64 328
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %51
  %59 = bitcast %struct.timeval* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #13
  %60 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 0
  %61 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 1
  store i64 0, i64* %61, align 8
  %62 = icmp eq i32 %56, -1
  %63 = select i1 %62, i32 50, i32 %56
  %64 = sext i32 %63 to i64
  store i64 %64, i64* %60, align 8
  %65 = call i32 @event_add(%struct.event* %53, %struct.timeval* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #13
  br label %97

66:                                               ; preds = %51
  %67 = tail call i32 @event_add(%struct.event* %53, %struct.timeval* null) #13
  br label %97

68:                                               ; preds = %47
  store i32 4, i32* %43, align 4
  tail call fastcc void @evhttp_read_header(%struct.evhttp_connection* %7, %struct.evhttp_request* %10) #13
  br label %97

69:                                               ; preds = %45
  tail call fastcc void @evhttp_read_header(%struct.evhttp_connection* %7, %struct.evhttp_request* %10)
  br label %97

70:                                               ; preds = %45
  tail call fastcc void @evhttp_read_body(%struct.evhttp_connection* %7, %struct.evhttp_request* %10)
  br label %97

71:                                               ; preds = %45
  %72 = load %struct.evbuffer*, %struct.evbuffer** %15, align 8
  %73 = tail call i32 @evhttp_parse_headers(%struct.evhttp_request* %10, %struct.evbuffer* %72) #13
  switch i32 %73, label %79 [
    i32 -1, label %74
    i32 1, label %75
  ]

74:                                               ; preds = %71
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %7, i32 2) #13
  br label %97

75:                                               ; preds = %71
  %76 = getelementptr inbounds i8, i8* %2, i64 24
  %77 = bitcast i8* %76 to %struct.event*
  %78 = tail call i32 @event_del(%struct.event* %77) #13
  tail call fastcc void @evhttp_connection_done(%struct.evhttp_connection* %7) #13
  br label %97

79:                                               ; preds = %71
  %80 = getelementptr inbounds i8, i8* %2, i64 24
  %81 = bitcast i8* %80 to %struct.event*
  %82 = getelementptr inbounds i8, i8* %2, i64 328
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %79
  %87 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %88 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %89 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  store i64 0, i64* %89, align 8
  %90 = icmp eq i32 %84, -1
  %91 = select i1 %90, i32 50, i32 %84
  %92 = sext i32 %91 to i64
  store i64 %92, i64* %88, align 8
  %93 = call i32 @event_add(%struct.event* %81, %struct.timeval* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  br label %97

94:                                               ; preds = %79
  %95 = tail call i32 @event_add(%struct.event* %81, %struct.timeval* null) #13
  br label %97

96:                                               ; preds = %45
  tail call void (i32, i8*, ...) @event_errx(i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.evhttp_read, i64 0, i64 0), i32 %46) #13
  br label %97

97:                                               ; preds = %75, %74, %86, %94, %68, %66, %58, %50, %38, %30, %69, %70, %96, %22, %44, %12
  ret void
}

declare i32 @evbuffer_read(%struct.evbuffer*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @evhttp_connection_done(%struct.evhttp_connection*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 0
  %3 = load %struct.evhttp_request*, %struct.evhttp_request** %2, align 8
  %4 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 10
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 2
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %73

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 0, i32 0
  %10 = load %struct.evhttp_request*, %struct.evhttp_request** %9, align 8
  %11 = icmp eq %struct.evhttp_request* %10, null
  %12 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 0, i32 1
  %13 = bitcast %struct.evhttp_request*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 1
  %16 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %10, i64 0, i32 0, i32 1
  %17 = select i1 %11, %struct.evhttp_request*** %15, %struct.evhttp_request*** %16
  %18 = bitcast %struct.evhttp_request*** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %struct.evhttp_request* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %struct.evhttp_request*** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 1
  store %struct.evhttp_connection* null, %struct.evhttp_connection** %23, align 8
  %24 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 3
  %28 = load %struct.evkeyvalq*, %struct.evkeyvalq** %27, align 8
  %29 = tail call fastcc i32 @evhttp_is_connection_close(i32 %26, %struct.evkeyvalq* %28)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %8
  %32 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 4
  %33 = load %struct.evkeyvalq*, %struct.evkeyvalq** %32, align 8
  %34 = tail call fastcc i32 @evhttp_is_connection_close(i32 %26, %struct.evkeyvalq* %33)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %31, %8
  tail call void @evhttp_connection_reset(%struct.evhttp_connection* %0)
  br label %37

37:                                               ; preds = %31, %36
  %38 = phi i1 [ true, %36 ], [ false, %31 ]
  %39 = load %struct.evhttp_request*, %struct.evhttp_request** %2, align 8
  %40 = icmp eq %struct.evhttp_request* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = load i32, i32* %24, align 4
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = tail call i32 @evhttp_connection_connect(%struct.evhttp_connection* %0)
  br label %78

46:                                               ; preds = %41
  %47 = load i32, i32* %4, align 4
  %48 = and i32 %47, -5
  store i32 %48, i32* %4, align 4
  %49 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 3
  %50 = tail call i32 @event_del(%struct.event* %49) #13
  store i32 7, i32* %24, align 4
  tail call void @evhttp_make_header(%struct.evhttp_connection* %0, %struct.evhttp_request* nonnull %39) #13
  tail call void @evhttp_write_buffer(%struct.evhttp_connection* %0, void (%struct.evhttp_connection*, i8*)* nonnull @evhttp_write_connectioncb, i8* null) #13
  br label %78

51:                                               ; preds = %37
  br i1 %38, label %78, label %52

52:                                               ; preds = %51
  %53 = load i32, i32* %4, align 4
  %54 = or i32 %53, 4
  store i32 %54, i32* %4, align 4
  %55 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 3
  %56 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 3, i32 14
  %57 = load i32, i32* %56, align 4
  %58 = trunc i32 %57 to i8
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %52
  %61 = tail call i32 @event_del(%struct.event* %55) #13
  br label %62

62:                                               ; preds = %60, %52
  %63 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = bitcast %struct.evhttp_connection* %0 to i8*
  tail call void @event_set(%struct.event* %55, i32 %64, i16 signext 2, void (i32, i16, i8*)* nonnull @evhttp_detect_close_cb, i8* %65) #13
  %66 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 21
  %67 = load %struct.event_base*, %struct.event_base** %66, align 8
  %68 = icmp eq %struct.event_base* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %62
  %70 = tail call i32 @event_base_set(%struct.event_base* nonnull %67, %struct.event* %55) #13
  br label %71

71:                                               ; preds = %62, %69
  %72 = tail call i32 @event_add(%struct.event* %55, %struct.timeval* null) #13
  br label %78

73:                                               ; preds = %1
  %74 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  store i32 7, i32* %74, align 4
  br label %78

78:                                               ; preds = %46, %44, %71, %51, %73, %77
  %79 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 18
  %80 = bitcast {}** %79 to void (%struct.evhttp_request*, i8*)**
  %81 = load void (%struct.evhttp_request*, i8*)*, void (%struct.evhttp_request*, i8*)** %80, align 8
  %82 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 19
  %83 = load i8*, i8** %82, align 8
  tail call void %81(%struct.evhttp_request* %3, i8* %83) #13
  br i1 %7, label %84, label %85

84:                                               ; preds = %78
  tail call void @evhttp_request_free(%struct.evhttp_request* %3)
  br label %85

85:                                               ; preds = %84, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @evhttp_read_header(%struct.evhttp_connection*, %struct.evhttp_request*) unnamed_addr #0 {
  %3 = alloca %struct.timeval, align 8
  %4 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 4
  %7 = load %struct.evbuffer*, %struct.evbuffer** %6, align 8
  %8 = tail call i32 @evhttp_parse_headers(%struct.evhttp_request* %1, %struct.evbuffer* %7)
  switch i32 %8, label %25 [
    i32 -1, label %9
    i32 0, label %10
  ]

9:                                                ; preds = %2
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %0, i32 2)
  br label %38

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %12 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %17 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 0
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 1
  store i64 0, i64* %18, align 8
  %19 = icmp eq i32 %13, -1
  %20 = select i1 %19, i32 50, i32 %13
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %17, align 8
  %22 = call i32 @event_add(%struct.event* %11, %struct.timeval* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  br label %38

23:                                               ; preds = %10
  %24 = tail call i32 @event_add(%struct.event* %11, %struct.timeval* null) #13
  br label %38

25:                                               ; preds = %2
  %26 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  switch i32 %27, label %37 [
    i32 0, label %28
    i32 1, label %29
  ]

28:                                               ; preds = %25
  tail call fastcc void @evhttp_get_body(%struct.evhttp_connection* %0, %struct.evhttp_request* %1)
  br label %38

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 12
  %31 = load i32, i32* %30, align 4
  switch i32 %31, label %32 [
    i32 204, label %35
    i32 304, label %35
  ]

32:                                               ; preds = %29
  %33 = add i32 %31, -100
  %34 = icmp ult i32 %33, 100
  br i1 %34, label %35, label %36

35:                                               ; preds = %32, %29, %29
  tail call fastcc void @evhttp_connection_done(%struct.evhttp_connection* %0)
  br label %38

36:                                               ; preds = %32
  tail call fastcc void @evhttp_get_body(%struct.evhttp_connection* %0, %struct.evhttp_request* %1)
  br label %38

37:                                               ; preds = %25
  tail call void (i8*, ...) @event_warnx(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.evhttp_read_header, i64 0, i64 0), i32 %5) #13
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %0, i32 2)
  br label %38

38:                                               ; preds = %23, %15, %28, %37, %36, %35, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @evhttp_read_body(%struct.evhttp_connection*, %struct.evhttp_request*) unnamed_addr #0 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = alloca i8*, align 8
  %6 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 4
  %7 = load %struct.evbuffer*, %struct.evbuffer** %6, align 8
  %8 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 16
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %94, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %7, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %113

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 15
  %19 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 14
  %20 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %7, i64 0, i32 0
  %21 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 20
  %22 = bitcast {}** %21 to void (%struct.evhttp_request*, i8*)**
  %23 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 19
  %24 = bitcast i8** %5 to i8*
  br label %25

25:                                               ; preds = %65, %17
  %26 = phi i64 [ %14, %17 ], [ %66, %65 ]
  %27 = load i64, i64* %18, align 8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %49

29:                                               ; preds = %25
  %30 = call i8* @evbuffer_readline(%struct.evbuffer* %7) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %113

33:                                               ; preds = %29
  %34 = load i8, i8* %30, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @free(i8* nonnull %30) #13
  br label %48

37:                                               ; preds = %33
  %38 = call i64 @evutil_strtoll(i8* nonnull %30, i8** nonnull %5, i32 16) #13
  %39 = load i8, i8* %30, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %92, label %41

41:                                               ; preds = %37
  %42 = load i8*, i8** %5, align 8
  %43 = load i8, i8* %42, align 1
  switch i8 %43, label %92 [
    i8 0, label %44
    i8 32, label %44
  ]

44:                                               ; preds = %41, %41
  %45 = icmp slt i64 %38, 0
  call void @free(i8* nonnull %30) #13
  br i1 %45, label %93, label %46

46:                                               ; preds = %44
  store i64 %38, i64* %18, align 8
  %47 = icmp eq i64 %38, 0
  br i1 %47, label %69, label %48

48:                                               ; preds = %46, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %65

49:                                               ; preds = %25
  %50 = shl i64 %26, 32
  %51 = ashr exact i64 %50, 32
  %52 = icmp slt i64 %51, %27
  br i1 %52, label %113, label %53

53:                                               ; preds = %49
  %54 = load %struct.evbuffer*, %struct.evbuffer** %19, align 8
  %55 = load i8*, i8** %20, align 8
  %56 = call i32 @evbuffer_add(%struct.evbuffer* %54, i8* %55, i64 %27) #13
  %57 = load i64, i64* %18, align 8
  call void @evbuffer_drain(%struct.evbuffer* %7, i64 %57) #13
  store i64 -1, i64* %18, align 8
  %58 = load void (%struct.evhttp_request*, i8*)*, void (%struct.evhttp_request*, i8*)** %22, align 8
  %59 = icmp eq void (%struct.evhttp_request*, i8*)* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %53
  %61 = load i8*, i8** %23, align 8
  call void %58(%struct.evhttp_request* %1, i8* %61) #13
  %62 = load %struct.evbuffer*, %struct.evbuffer** %19, align 8
  %63 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %62, i64 0, i32 4
  %64 = load i64, i64* %63, align 8
  call void @evbuffer_drain(%struct.evbuffer* %62, i64 %64) #13
  br label %65

65:                                               ; preds = %60, %53, %48
  %66 = load i64, i64* %13, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %25, label %113

69:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %70 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  store i32 6, i32* %70, align 4
  %71 = load %struct.evbuffer*, %struct.evbuffer** %6, align 8
  %72 = call i32 @evhttp_parse_headers(%struct.evhttp_request* %1, %struct.evbuffer* %71) #13
  switch i32 %72, label %77 [
    i32 -1, label %73
    i32 1, label %74
  ]

73:                                               ; preds = %69
  call void @evhttp_connection_fail(%struct.evhttp_connection* %0, i32 2) #13
  br label %137

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %76 = call i32 @event_del(%struct.event* %75) #13
  call fastcc void @evhttp_connection_done(%struct.evhttp_connection* %0) #13
  br label %137

77:                                               ; preds = %69
  %78 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %79 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 11
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  %83 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #13
  %84 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %85 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  store i64 0, i64* %85, align 8
  %86 = icmp eq i32 %80, -1
  %87 = select i1 %86, i32 50, i32 %80
  %88 = sext i32 %87 to i64
  store i64 %88, i64* %84, align 8
  %89 = call i32 @event_add(%struct.event* %78, %struct.timeval* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #13
  br label %137

90:                                               ; preds = %77
  %91 = call i32 @event_add(%struct.event* %78, %struct.timeval* null) #13
  br label %137

92:                                               ; preds = %41, %37
  call void @free(i8* nonnull %30) #13
  br label %93

93:                                               ; preds = %44, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  call void @evhttp_connection_fail(%struct.evhttp_connection* %0, i32 2)
  br label %137

94:                                               ; preds = %2
  %95 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 15
  %96 = load i64, i64* %95, align 8
  %97 = icmp slt i64 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 14
  %100 = load %struct.evbuffer*, %struct.evbuffer** %99, align 8
  %101 = tail call i32 @evbuffer_add_buffer(%struct.evbuffer* %100, %struct.evbuffer* %7) #13
  br label %113

102:                                              ; preds = %94
  %103 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %7, i64 0, i32 4
  %104 = load i64, i64* %103, align 8
  %105 = icmp ult i64 %104, %96
  br i1 %105, label %113, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 14
  %108 = load %struct.evbuffer*, %struct.evbuffer** %107, align 8
  %109 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %7, i64 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = tail call i32 @evbuffer_add(%struct.evbuffer* %108, i8* %110, i64 %96) #13
  %112 = load i64, i64* %95, align 8
  tail call void @evbuffer_drain(%struct.evbuffer* %7, i64 %112) #13
  store i64 0, i64* %95, align 8
  tail call fastcc void @evhttp_connection_done(%struct.evhttp_connection* %0)
  br label %137

113:                                              ; preds = %49, %65, %12, %32, %102, %98
  %114 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %115 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = bitcast %struct.evhttp_connection* %0 to i8*
  call void @event_set(%struct.event* %114, i32 %116, i16 signext 2, void (i32, i16, i8*)* nonnull @evhttp_read, i8* %117) #13
  %118 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 21
  %119 = load %struct.event_base*, %struct.event_base** %118, align 8
  %120 = icmp eq %struct.event_base* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %113
  %122 = call i32 @event_base_set(%struct.event_base* nonnull %119, %struct.event* %114) #13
  br label %123

123:                                              ; preds = %113, %121
  %124 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 11
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %123
  %128 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #13
  %129 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 0
  %130 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 1
  store i64 0, i64* %130, align 8
  %131 = icmp eq i32 %125, -1
  %132 = select i1 %131, i32 50, i32 %125
  %133 = sext i32 %132 to i64
  store i64 %133, i64* %129, align 8
  %134 = call i32 @event_add(%struct.event* %114, %struct.timeval* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #13
  br label %137

135:                                              ; preds = %123
  %136 = call i32 @event_add(%struct.event* %114, %struct.timeval* null) #13
  br label %137

137:                                              ; preds = %135, %127, %74, %73, %82, %90, %106, %93
  ret void
}

declare void @event_errx(i32, i8*, ...) local_unnamed_addr #4

declare i32 @close(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare void @evbuffer_free(%struct.evbuffer*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_connection_set_local_address(%struct.evhttp_connection* nocapture, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 6
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @free(i8* nonnull %4) #13
  br label %7

7:                                                ; preds = %2, %6
  %8 = tail call noalias i8* @strdup(i8* %1) #13
  store i8* %8, i8** %3, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.evhttp_connection_set_local_address, i64 0, i64 0)) #13
  br label %11

11:                                               ; preds = %10, %7
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evhttp_connection_set_local_port(%struct.evhttp_connection* nocapture, i16 zeroext) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 7
  store i16 %1, i16* %3, align 8
  ret void
}

declare void @evbuffer_drain(%struct.evbuffer*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @evhttp_find_header(%struct.evkeyvalq* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %0, i64 0, i32 0
  %4 = load %struct.evkeyval*, %struct.evkeyval** %3, align 8
  %5 = icmp eq %struct.evkeyval* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2, %15
  %7 = phi %struct.evkeyval* [ %17, %15 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %7, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @strcasecmp(i8* %9, i8* %1) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %7, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  br label %19

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %7, i64 0, i32 0, i32 0
  %17 = load %struct.evkeyval*, %struct.evkeyval** %16, align 8
  %18 = icmp eq %struct.evkeyval* %17, null
  br i1 %18, label %19, label %6

19:                                               ; preds = %15, %2, %12
  %20 = phi i8* [ %14, %12 ], [ null, %2 ], [ null, %15 ]
  ret i8* %20
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_clear_headers(%struct.evkeyvalq* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %0, i64 0, i32 0
  %3 = load %struct.evkeyval*, %struct.evkeyval** %2, align 8
  %4 = icmp eq %struct.evkeyval* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %0, i64 0, i32 1
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi %struct.evkeyval* [ %3, %5 ], [ %27, %7 ]
  %9 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %8, i64 0, i32 0, i32 0
  %10 = load %struct.evkeyval*, %struct.evkeyval** %9, align 8
  %11 = icmp eq %struct.evkeyval* %10, null
  %12 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %8, i64 0, i32 0, i32 1
  %13 = bitcast %struct.evkeyval*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %10, i64 0, i32 0, i32 1
  %16 = select i1 %11, %struct.evkeyval*** %6, %struct.evkeyval*** %15
  %17 = bitcast %struct.evkeyval*** %16 to i64*
  store i64 %14, i64* %17, align 8
  %18 = bitcast %struct.evkeyval* %8 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %struct.evkeyval*** %12 to i64**
  %21 = load i64*, i64** %20, align 8
  store i64 %19, i64* %21, align 8
  %22 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %8, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8
  tail call void @free(i8* %23) #13
  %24 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %8, i64 0, i32 2
  %25 = load i8*, i8** %24, align 8
  tail call void @free(i8* %25) #13
  %26 = bitcast %struct.evkeyval* %8 to i8*
  tail call void @free(i8* %26) #13
  %27 = load %struct.evkeyval*, %struct.evkeyval** %2, align 8
  %28 = icmp eq %struct.evkeyval* %27, null
  br i1 %28, label %29, label %7

29:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_remove_header(%struct.evkeyvalq* nocapture, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %0, i64 0, i32 0
  br label %4

4:                                                ; preds = %8, %2
  %5 = phi %struct.evkeyval** [ %3, %2 ], [ %13, %8 ]
  %6 = load %struct.evkeyval*, %struct.evkeyval** %5, align 8
  %7 = icmp eq %struct.evkeyval* %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %6, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i32 @strcasecmp(i8* %10, i8* %1) #12
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %6, i64 0, i32 0, i32 0
  br i1 %12, label %14, label %4

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %6, i64 0, i32 1
  %16 = load %struct.evkeyval*, %struct.evkeyval** %13, align 8
  %17 = icmp eq %struct.evkeyval* %16, null
  %18 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %6, i64 0, i32 0, i32 1
  %19 = bitcast %struct.evkeyval*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %0, i64 0, i32 1
  %22 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %16, i64 0, i32 0, i32 1
  %23 = select i1 %17, %struct.evkeyval*** %21, %struct.evkeyval*** %22
  %24 = bitcast %struct.evkeyval*** %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = bitcast %struct.evkeyval* %6 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %struct.evkeyval*** %18 to i64**
  %28 = load i64*, i64** %27, align 8
  store i64 %26, i64* %28, align 8
  %29 = load i8*, i8** %15, align 8
  tail call void @free(i8* %29) #13
  %30 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %6, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  tail call void @free(i8* %31) #13
  %32 = bitcast %struct.evkeyval* %6 to i8*
  tail call void @free(i8* %32) #13
  br label %33

33:                                               ; preds = %4, %14
  %34 = phi i32 [ 0, %14 ], [ -1, %4 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_add_header(%struct.evkeyvalq* nocapture, i8* readonly, i8* readonly) local_unnamed_addr #0 {
  %4 = tail call i8* @strchr(i8* %1, i32 13) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %22

6:                                                ; preds = %3
  %7 = tail call i8* @strchr(i8* %1, i32 10) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %22

9:                                                ; preds = %6
  %10 = tail call i8* @strpbrk(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #12
  %11 = icmp eq i8* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %9, %17
  %13 = phi i8* [ %18, %17 ], [ %10, %9 ]
  %14 = tail call i64 @strspn(i8* nonnull %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #12
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = load i8, i8* %15, align 1
  switch i8 %16, label %22 [
    i8 32, label %17
    i8 9, label %17
  ]

17:                                               ; preds = %12, %12
  %18 = tail call i8* @strpbrk(i8* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #12
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %12

20:                                               ; preds = %17, %9
  %21 = tail call fastcc i32 @evhttp_add_header_internal(%struct.evkeyvalq* %0, i8* %1, i8* %2)
  br label %22

22:                                               ; preds = %12, %3, %6, %20
  %23 = phi i32 [ %21, %20 ], [ -1, %6 ], [ -1, %3 ], [ -1, %12 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @evhttp_add_header_internal(%struct.evkeyvalq* nocapture, i8* nocapture readonly, i8* nocapture readonly) unnamed_addr #0 {
  %4 = tail call noalias i8* @calloc(i64 1, i64 32) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.evhttp_add_header_internal, i64 0, i64 0)) #13
  br label %28

7:                                                ; preds = %3
  %8 = tail call noalias i8* @strdup(i8* %1) #13
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = icmp eq i8* %8, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @free(i8* nonnull %4) #13
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.evhttp_add_header_internal, i64 0, i64 0)) #13
  br label %28

13:                                               ; preds = %7
  %14 = tail call noalias i8* @strdup(i8* %2) #13
  %15 = getelementptr inbounds i8, i8* %4, i64 24
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = icmp eq i8* %14, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %13
  tail call void @free(i8* nonnull %8) #13
  tail call void @free(i8* nonnull %4) #13
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.evhttp_add_header_internal, i64 0, i64 0)) #13
  br label %28

19:                                               ; preds = %13
  %20 = bitcast i8* %4 to %struct.evkeyval**
  store %struct.evkeyval* null, %struct.evkeyval** %20, align 8
  %21 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %0, i64 0, i32 1
  %22 = bitcast %struct.evkeyval*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* %4, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = inttoptr i64 %23 to i8**
  store i8* %4, i8** %26, align 8
  %27 = bitcast %struct.evkeyval*** %21 to i8**
  store i8* %4, i8** %27, align 8
  br label %28

28:                                               ; preds = %19, %18, %12, %6
  %29 = phi i32 [ -1, %6 ], [ -1, %12 ], [ -1, %18 ], [ 0, %19 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_parse_firstline(%struct.evhttp_request* nocapture, %struct.evbuffer*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = tail call i8* @evbuffer_readline(%struct.evbuffer* %1) #13
  %6 = icmp eq i8* %5, null
  br i1 %6, label %86, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %84 [
    i32 0, label %10
    i32 1, label %53
  ]

10:                                               ; preds = %7
  %11 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  store i8* %5, i8** %4, align 8
  %12 = call i8* @strsep(i8** nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #13
  %13 = load i8*, i8** %4, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %81, label %15

15:                                               ; preds = %10
  %16 = call i8* @strsep(i8** nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #13
  %17 = load i8*, i8** %4, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %81, label %19

19:                                               ; preds = %15
  %20 = call i8* @strsep(i8** nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #13
  %21 = load i8*, i8** %4, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %81

23:                                               ; preds = %19
  %24 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0)) #12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %23
  %27 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0)) #12
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0)) #12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %81

32:                                               ; preds = %29, %26, %23
  %33 = phi i32 [ 0, %23 ], [ 1, %26 ], [ 2, %29 ]
  %34 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 8
  store i32 %33, i32* %34, align 8
  %35 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0)) #12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0)) #12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %81

40:                                               ; preds = %37, %32
  %41 = phi i8 [ 0, %32 ], [ 1, %37 ]
  %42 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 10
  store i8 1, i8* %42, align 8
  %43 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 11
  store i8 %41, i8* %43, align 1
  %44 = call noalias i8* @strdup(i8* %16) #13
  %45 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 9
  store i8* %44, i8** %45, align 8
  %46 = icmp eq i8* %44, null
  br i1 %46, label %81, label %47

47:                                               ; preds = %40
  %48 = load i8, i8* %44, align 1
  switch i8 %48, label %49 [
    i8 0, label %81
    i8 47, label %81
  ]

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = or i32 %51, 2
  store i32 %52, i32* %50, align 8
  br label %81

53:                                               ; preds = %7
  %54 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  store i8* %5, i8** %3, align 8
  %55 = call i8* @strsep(i8** nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #13
  %56 = load i8*, i8** %3, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %81, label %58

58:                                               ; preds = %53
  %59 = call i8* @strsep(i8** nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #13
  %60 = load i8*, i8** %3, align 8
  %61 = icmp eq i8* %60, null
  %62 = select i1 %61, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* %60
  %63 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0)) #12
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %58
  %66 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0)) #12
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %65, %58
  %69 = phi i8 [ 0, %58 ], [ 1, %65 ]
  %70 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 10
  store i8 1, i8* %70, align 8
  %71 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 11
  store i8 %69, i8* %71, align 1
  %72 = call i64 @strtol(i8* nocapture %59, i8** null, i32 10) #13
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 12
  store i32 %73, i32* %74, align 4
  %75 = icmp eq i32 %73, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %68
  %77 = call noalias i8* @strdup(i8* %62) #13
  %78 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 13
  store i8* %77, i8** %78, align 8
  %79 = icmp eq i8* %77, null
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.evhttp_parse_response_line, i64 0, i64 0)) #13
  br label %81

81:                                               ; preds = %68, %65, %53, %80, %76, %40, %37, %29, %19, %15, %10, %49, %47, %47
  %82 = phi i8* [ %11, %47 ], [ %11, %47 ], [ %11, %49 ], [ %11, %10 ], [ %11, %15 ], [ %11, %19 ], [ %11, %29 ], [ %11, %37 ], [ %11, %40 ], [ %54, %76 ], [ %54, %80 ], [ %54, %53 ], [ %54, %65 ], [ %54, %68 ]
  %83 = phi i32 [ 1, %47 ], [ 1, %47 ], [ 1, %49 ], [ -1, %10 ], [ -1, %15 ], [ -1, %19 ], [ -1, %29 ], [ -1, %37 ], [ -1, %40 ], [ 1, %76 ], [ 1, %80 ], [ -1, %53 ], [ -1, %65 ], [ -1, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  br label %84

84:                                               ; preds = %81, %7
  %85 = phi i32 [ -1, %7 ], [ %83, %81 ]
  call void @free(i8* nonnull %5) #13
  br label %86

86:                                               ; preds = %2, %84
  %87 = phi i32 [ %85, %84 ], [ 0, %2 ]
  ret i32 %87
}

declare i8* @evbuffer_readline(%struct.evbuffer*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_parse_headers(%struct.evhttp_request* nocapture readonly, %struct.evbuffer*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 3
  %5 = load %struct.evkeyvalq*, %struct.evkeyvalq** %4, align 8
  %6 = call i8* @evbuffer_readline(%struct.evbuffer* %1) #13
  %7 = icmp eq i8* %6, null
  br i1 %7, label %46, label %8

8:                                                ; preds = %2
  %9 = bitcast i8** %3 to i8*
  %10 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %5, i64 0, i32 1
  %11 = bitcast %struct.evkeyval*** %10 to %struct.evkeyvalq**
  br label %12

12:                                               ; preds = %8, %42
  %13 = phi i8* [ %6, %8 ], [ %43, %42 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %14 = load i8, i8* %13, align 1
  switch i8 %14, label %33 [
    i8 0, label %15
    i8 32, label %16
    i8 9, label %16
  ]

15:                                               ; preds = %12
  call void @free(i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  br label %46

16:                                               ; preds = %12, %12
  %17 = load %struct.evkeyvalq*, %struct.evkeyvalq** %11, align 8
  %18 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %17, i64 0, i32 1
  %19 = load %struct.evkeyval**, %struct.evkeyval*** %18, align 8
  %20 = load %struct.evkeyval*, %struct.evkeyval** %19, align 8
  %21 = icmp eq %struct.evkeyval* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %20, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = call i64 @strlen(i8* %24) #12
  %26 = call i64 @strlen(i8* nonnull %13) #12
  %27 = add i64 %26, 1
  %28 = add i64 %27, %25
  %29 = call i8* @realloc(i8* %24, i64 %28) #13
  %30 = icmp eq i8* %29, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds i8, i8* %29, i64 %25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* nonnull align 1 %13, i64 %27, i1 false) #13
  store i8* %29, i8** %23, align 8
  br label %42

33:                                               ; preds = %12
  store i8* %13, i8** %3, align 8
  %34 = call i8* @strsep(i8** nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #13
  %35 = load i8*, i8** %3, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %33
  %38 = call i64 @strspn(i8* nonnull %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #12
  %39 = getelementptr inbounds i8, i8* %35, i64 %38
  store i8* %39, i8** %3, align 8
  %40 = call i32 @evhttp_add_header(%struct.evkeyvalq* %5, i8* %34, i8* %39)
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %45, label %42

42:                                               ; preds = %37, %31
  call void @free(i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %43 = call i8* @evbuffer_readline(%struct.evbuffer* %1) #13
  %44 = icmp eq i8* %43, null
  br i1 %44, label %46, label %12

45:                                               ; preds = %22, %16, %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  call void @free(i8* nonnull %13) #13
  br label %46

46:                                               ; preds = %42, %2, %15, %45
  %47 = phi i32 [ -1, %45 ], [ 1, %15 ], [ 0, %2 ], [ 0, %42 ]
  ret i32 %47
}

; Function Attrs: nounwind
declare i8* @strsep(i8**, i8*) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i64 @strspn(i8* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evhttp_connection* @evhttp_connection_new(i8* nocapture readonly, i16 zeroext) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @calloc(i64 1, i64 408) #13
  %4 = bitcast i8* %3 to %struct.evhttp_connection*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast i8* %7 to i32*
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 320
  %10 = bitcast i8* %9 to i16*
  store i16 %1, i16* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 328
  %12 = bitcast i8* %11 to i32*
  store i32 -1, i32* %12, align 8
  %13 = tail call noalias i8* @strdup(i8* %0) #13
  %14 = getelementptr inbounds i8, i8* %3, i64 312
  %15 = bitcast i8* %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = icmp eq i8* %13, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %6
  %18 = tail call %struct.evbuffer* @evbuffer_new() #13
  %19 = getelementptr inbounds i8, i8* %3, i64 280
  %20 = bitcast i8* %19 to %struct.evbuffer**
  store %struct.evbuffer* %18, %struct.evbuffer** %20, align 8
  %21 = icmp eq %struct.evbuffer* %18, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = tail call %struct.evbuffer* @evbuffer_new() #13
  %24 = getelementptr inbounds i8, i8* %3, i64 288
  %25 = bitcast i8* %24 to %struct.evbuffer**
  store %struct.evbuffer* %23, %struct.evbuffer** %25, align 8
  %26 = icmp eq %struct.evbuffer* %23, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds i8, i8* %3, i64 340
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %3, i64 352
  %31 = bitcast i8* %30 to %struct.evhttp_request**
  store %struct.evhttp_request* null, %struct.evhttp_request** %31, align 8
  %32 = getelementptr inbounds i8, i8* %3, i64 360
  %33 = bitcast i8* %32 to i8**
  store i8* %30, i8** %33, align 8
  br label %37

34:                                               ; preds = %2
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.evhttp_connection_new, i64 0, i64 0)) #13
  br label %37

35:                                               ; preds = %22, %17, %6
  %36 = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), %6 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), %17 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), %22 ]
  tail call void (i8*, ...) @event_warn(i8* %36, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.evhttp_connection_new, i64 0, i64 0)) #13
  tail call void @evhttp_connection_free(%struct.evhttp_connection* nonnull %4)
  br label %37

37:                                               ; preds = %34, %35, %27
  %38 = phi %struct.evhttp_connection* [ %4, %27 ], [ null, %34 ], [ null, %35 ]
  ret %struct.evhttp_connection* %38
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #3

declare void @event_warn(i8*, ...) local_unnamed_addr #4

declare %struct.evbuffer* @evbuffer_new() local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evhttp_connection_set_base(%struct.evhttp_connection* nocapture, %struct.event_base*) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 21
  store %struct.event_base* %1, %struct.event_base** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evhttp_connection_set_timeout(%struct.evhttp_connection* nocapture, i32) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 11
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evhttp_connection_set_retries(%struct.evhttp_connection* nocapture, i32) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 13
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evhttp_connection_set_closecb(%struct.evhttp_connection* nocapture, void (%struct.evhttp_connection*, i8*)*, i8*) local_unnamed_addr #8 {
  %4 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 19
  store void (%struct.evhttp_connection*, i8*)* %1, void (%struct.evhttp_connection*, i8*)** %4, align 8
  %5 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 20
  store i8* %2, i8** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @evhttp_connection_get_peer(%struct.evhttp_connection* nocapture readonly, i8** nocapture, i16* nocapture) local_unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 8
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8** %1 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 9
  %9 = load i16, i16* %8, align 8
  store i16 %9, i16* %2, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @evhttp_connectioncb(i32, i16 signext, i8*) #0 {
  %4 = alloca %struct.timeval, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i8* %2 to %struct.evhttp_connection*
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 -1431655766, i32* %5, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 4, i32* %6, align 4
  %10 = icmp eq i16 %1, 1
  br i1 %10, label %37, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = call i32 @getsockopt(i32 %14, i32 1, i32 4, i8* nonnull %8, i32* nonnull %6) #13
  %16 = icmp eq i32 %15, -1
  %17 = load i32, i32* %5, align 4
  %18 = icmp ne i32 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %37, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds i8, i8* %2, i64 332
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %2, i64 340
  %24 = bitcast i8* %23 to i32*
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 352
  %26 = bitcast i8* %25 to %struct.evhttp_request**
  %27 = load %struct.evhttp_request*, %struct.evhttp_request** %26, align 8
  %28 = icmp eq %struct.evhttp_request* %27, null
  br i1 %28, label %106, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds i8, i8* %2, i64 324
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, -5
  store i32 %33, i32* %31, align 4
  %34 = getelementptr inbounds i8, i8* %2, i64 152
  %35 = bitcast i8* %34 to %struct.event*
  %36 = call i32 @event_del(%struct.event* %35) #13
  store i32 7, i32* %24, align 4
  call void @evhttp_make_header(%struct.evhttp_connection* %7, %struct.evhttp_request* nonnull %27) #13
  call void @evhttp_write_buffer(%struct.evhttp_connection* %7, void (%struct.evhttp_connection*, i8*)* nonnull @evhttp_write_connectioncb, i8* null) #13
  br label %106

37:                                               ; preds = %11, %3
  %38 = getelementptr inbounds i8, i8* %2, i64 336
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds i8, i8* %2, i64 332
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, %40
  br i1 %46, label %47, label %75

47:                                               ; preds = %42, %37
  %48 = getelementptr inbounds i8, i8* %2, i64 24
  %49 = bitcast i8* %48 to %struct.event*
  call void @event_set(%struct.event* %49, i32 -1, i16 signext 0, void (i32, i16, i8*)* nonnull @evhttp_connection_retry, i8* %2) #13
  %50 = getelementptr inbounds i8, i8* %2, i64 400
  %51 = bitcast i8* %50 to %struct.event_base**
  %52 = load %struct.event_base*, %struct.event_base** %51, align 8
  %53 = icmp eq %struct.event_base* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %47
  %55 = call i32 @event_base_set(%struct.event_base* nonnull %52, %struct.event* %49) #13
  br label %56

56:                                               ; preds = %47, %54
  %57 = getelementptr inbounds i8, i8* %2, i64 332
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = shl i32 2, %59
  %61 = icmp slt i32 %60, 3600
  %62 = select i1 %61, i32 %60, i32 3600
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %56
  %65 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #13
  %66 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %67 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  store i64 0, i64* %67, align 8
  %68 = sext i32 %62 to i64
  store i64 %68, i64* %66, align 8
  %69 = call i32 @event_add(%struct.event* %49, %struct.timeval* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #13
  br label %72

70:                                               ; preds = %56
  %71 = call i32 @event_add(%struct.event* %49, %struct.timeval* null) #13
  br label %72

72:                                               ; preds = %64, %70
  %73 = load i32, i32* %58, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %58, align 4
  br label %106

75:                                               ; preds = %42
  call void @evhttp_connection_reset(%struct.evhttp_connection* %7)
  %76 = getelementptr inbounds i8, i8* %2, i64 352
  %77 = bitcast i8* %76 to %struct.evhttp_request**
  %78 = load %struct.evhttp_request*, %struct.evhttp_request** %77, align 8
  %79 = icmp eq %struct.evhttp_request* %78, null
  br i1 %79, label %106, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds i8, i8* %2, i64 360
  %82 = bitcast i8* %81 to i64*
  br label %83

83:                                               ; preds = %80, %83
  %84 = phi %struct.evhttp_request* [ %78, %80 ], [ %104, %83 ]
  %85 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %84, i64 0, i32 0, i32 0
  %86 = load %struct.evhttp_request*, %struct.evhttp_request** %85, align 8
  %87 = icmp eq %struct.evhttp_request* %86, null
  %88 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %84, i64 0, i32 0, i32 1
  %89 = bitcast %struct.evhttp_request*** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %86, i64 0, i32 0, i32 1
  %92 = bitcast %struct.evhttp_request*** %91 to i64*
  %93 = select i1 %87, i64* %82, i64* %92
  store i64 %90, i64* %93, align 8
  %94 = bitcast %struct.evhttp_request* %84 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %struct.evhttp_request*** %88 to i64**
  %97 = load i64*, i64** %96, align 8
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %84, i64 0, i32 1
  store %struct.evhttp_connection* null, %struct.evhttp_connection** %98, align 8
  %99 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %84, i64 0, i32 18
  %100 = bitcast {}** %99 to void (%struct.evhttp_request*, i8*)**
  %101 = load void (%struct.evhttp_request*, i8*)*, void (%struct.evhttp_request*, i8*)** %100, align 8
  %102 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %84, i64 0, i32 19
  %103 = load i8*, i8** %102, align 8
  call void %101(%struct.evhttp_request* nonnull %84, i8* %103) #13
  call void @evhttp_request_free(%struct.evhttp_request* nonnull %84)
  %104 = load %struct.evhttp_request*, %struct.evhttp_request** %77, align 8
  %105 = icmp eq %struct.evhttp_request* %104, null
  br i1 %105, label %106, label %83

106:                                              ; preds = %83, %75, %29, %20, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_make_request(%struct.evhttp_connection*, %struct.evhttp_request*, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 7
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 8
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 9
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void @free(i8* nonnull %8) #13
  br label %11

11:                                               ; preds = %4, %10
  %12 = tail call noalias i8* @strdup(i8* %3) #13
  store i8* %12, i8** %7, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.evhttp_make_request, i64 0, i64 0)) #13
  br label %15

15:                                               ; preds = %14, %11
  %16 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 10
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 11
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  store i8 1, i8* %16, align 8
  store i8 1, i8* %20, align 1
  br label %24

24:                                               ; preds = %19, %15, %23
  %25 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 1
  store %struct.evhttp_connection* %0, %struct.evhttp_connection** %25, align 8
  %26 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 0, i32 0
  store %struct.evhttp_request* null, %struct.evhttp_request** %26, align 8
  %27 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 1
  %28 = bitcast %struct.evhttp_request*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 0, i32 1
  %31 = bitcast %struct.evhttp_request*** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = load %struct.evhttp_request**, %struct.evhttp_request*** %27, align 8
  store %struct.evhttp_request* %1, %struct.evhttp_request** %32, align 8
  store %struct.evhttp_request** %26, %struct.evhttp_request*** %27, align 8
  %33 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %36, label %38

36:                                               ; preds = %24
  %37 = tail call i32 @evhttp_connection_connect(%struct.evhttp_connection* %0)
  br label %50

38:                                               ; preds = %24
  %39 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 0
  %40 = load %struct.evhttp_request*, %struct.evhttp_request** %39, align 8
  %41 = icmp ne %struct.evhttp_request* %40, %1
  %42 = icmp eq %struct.evhttp_request* %40, null
  %43 = or i1 %41, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 10
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, -5
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 3
  %49 = tail call i32 @event_del(%struct.event* %48) #13
  store i32 7, i32* %33, align 4
  tail call void @evhttp_make_header(%struct.evhttp_connection* %0, %struct.evhttp_request* nonnull %1) #13
  tail call void @evhttp_write_buffer(%struct.evhttp_connection* %0, void (%struct.evhttp_connection*, i8*)* nonnull @evhttp_write_connectioncb, i8* null) #13
  br label %50

50:                                               ; preds = %38, %44, %36
  %51 = phi i32 [ %37, %36 ], [ 0, %38 ], [ 0, %44 ]
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_start_read(%struct.evhttp_connection*) local_unnamed_addr #0 {
  %2 = alloca %struct.timeval, align 8
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2
  %4 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 2, i32 14
  %5 = load i32, i32* %4, align 4
  %6 = trunc i32 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call i32 @event_del(%struct.event* %3) #13
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %struct.evhttp_connection* %0 to i8*
  tail call void @event_set(%struct.event* %3, i32 %12, i16 signext 2, void (i32, i16, i8*)* nonnull @evhttp_read, i8* %13) #13
  %14 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 21
  %15 = load %struct.event_base*, %struct.event_base** %14, align 8
  %16 = icmp eq %struct.event_base* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = tail call i32 @event_base_set(%struct.event_base* nonnull %15, %struct.event* %3) #13
  br label %19

19:                                               ; preds = %10, %17
  %20 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 11
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = bitcast %struct.timeval* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  %26 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 1
  store i64 0, i64* %26, align 8
  %27 = icmp eq i32 %21, -1
  %28 = select i1 %27, i32 50, i32 %21
  %29 = sext i32 %28 to i64
  store i64 %29, i64* %25, align 8
  %30 = call i32 @event_add(%struct.event* %3, %struct.timeval* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  br label %33

31:                                               ; preds = %19
  %32 = tail call i32 @event_add(%struct.event* %3, %struct.timeval* null) #13
  br label %33

33:                                               ; preds = %23, %31
  %34 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  store i32 3, i32* %34, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_send_error(%struct.evhttp_request*, i32, i8*) local_unnamed_addr #0 {
  %4 = tail call %struct.evbuffer* @evbuffer_new() #13
  %5 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 4
  %6 = load %struct.evkeyvalq*, %struct.evkeyvalq** %5, align 8
  %7 = tail call i32 @evhttp_add_header(%struct.evkeyvalq* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  %8 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 7
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 12
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 13
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  tail call void @free(i8* nonnull %11) #13
  br label %14

14:                                               ; preds = %3, %13
  %15 = tail call noalias i8* @strdup(i8* %2) #13
  store i8* %15, i8** %10, align 8
  %16 = tail call i32 (%struct.evbuffer*, i8*, ...) @evbuffer_add_printf(%struct.evbuffer* %4, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.15, i64 0, i64 0), i32 %1, i8* %2) #13
  tail call void @evhttp_send_page(%struct.evhttp_request* %0, %struct.evbuffer* %4)
  tail call void @evbuffer_free(%struct.evbuffer* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_response_code(%struct.evhttp_request* nocapture, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 7
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 12
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 13
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  tail call void @free(i8* nonnull %7) #13
  br label %10

10:                                               ; preds = %3, %9
  %11 = tail call noalias i8* @strdup(i8* %2) #13
  store i8* %11, i8** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_send_page(%struct.evhttp_request*, %struct.evbuffer*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 11
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6, %2
  store i8 1, i8* %3, align 8
  %11 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 11
  store i8 1, i8* %11, align 1
  br label %12

12:                                               ; preds = %6, %10
  %13 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4
  %17 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 12
  store i32 200, i32* %17, align 4
  %18 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 13
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  tail call void @free(i8* nonnull %19) #13
  br label %22

22:                                               ; preds = %16, %21
  %23 = tail call noalias i8* @strdup(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #13
  store i8* %23, i8** %18, align 8
  br label %24

24:                                               ; preds = %12, %22
  %25 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 4
  %26 = load %struct.evkeyvalq*, %struct.evkeyvalq** %25, align 8
  %27 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %26, i64 0, i32 0
  %28 = load %struct.evkeyval*, %struct.evkeyval** %27, align 8
  %29 = icmp eq %struct.evkeyval* %28, null
  br i1 %29, label %56, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %26, i64 0, i32 1
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi %struct.evkeyval* [ %28, %30 ], [ %52, %32 ]
  %34 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %33, i64 0, i32 0, i32 0
  %35 = load %struct.evkeyval*, %struct.evkeyval** %34, align 8
  %36 = icmp eq %struct.evkeyval* %35, null
  %37 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %33, i64 0, i32 0, i32 1
  %38 = bitcast %struct.evkeyval*** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %35, i64 0, i32 0, i32 1
  %41 = select i1 %36, %struct.evkeyval*** %31, %struct.evkeyval*** %40
  %42 = bitcast %struct.evkeyval*** %41 to i64*
  store i64 %39, i64* %42, align 8
  %43 = bitcast %struct.evkeyval* %33 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %struct.evkeyval*** %37 to i64**
  %46 = load i64*, i64** %45, align 8
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %33, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  tail call void @free(i8* %48) #13
  %49 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %33, i64 0, i32 2
  %50 = load i8*, i8** %49, align 8
  tail call void @free(i8* %50) #13
  %51 = bitcast %struct.evkeyval* %33 to i8*
  tail call void @free(i8* %51) #13
  %52 = load %struct.evkeyval*, %struct.evkeyval** %27, align 8
  %53 = icmp eq %struct.evkeyval* %52, null
  br i1 %53, label %54, label %32

54:                                               ; preds = %32
  %55 = load %struct.evkeyvalq*, %struct.evkeyvalq** %25, align 8
  br label %56

56:                                               ; preds = %54, %24
  %57 = phi %struct.evkeyvalq* [ %55, %54 ], [ %26, %24 ]
  %58 = tail call i32 @evhttp_add_header(%struct.evkeyvalq* %57, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0))
  %59 = load %struct.evkeyvalq*, %struct.evkeyvalq** %25, align 8
  %60 = tail call i32 @evhttp_add_header(%struct.evkeyvalq* %59, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  %61 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 1
  %62 = load %struct.evhttp_connection*, %struct.evhttp_connection** %61, align 8
  %63 = icmp eq %struct.evhttp_connection* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %56
  tail call void @evhttp_request_free(%struct.evhttp_request* %0) #13
  br label %75

65:                                               ; preds = %56
  %66 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 16
  %67 = load i8, i8* %66, align 8
  %68 = or i8 %67, 2
  store i8 %68, i8* %66, align 8
  %69 = icmp eq %struct.evbuffer* %1, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 17
  %72 = load %struct.evbuffer*, %struct.evbuffer** %71, align 8
  %73 = tail call i32 @evbuffer_add_buffer(%struct.evbuffer* %72, %struct.evbuffer* nonnull %1) #13
  br label %74

74:                                               ; preds = %70, %65
  tail call void @evhttp_make_header(%struct.evhttp_connection* nonnull %62, %struct.evhttp_request* %0) #13
  tail call void @evhttp_write_buffer(%struct.evhttp_connection* nonnull %62, void (%struct.evhttp_connection*, i8*)* nonnull @evhttp_send_done, i8* null) #13
  br label %75

75:                                               ; preds = %64, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_send_reply(%struct.evhttp_request*, i32, i8* nocapture readonly, %struct.evbuffer*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 7
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 12
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 13
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void @free(i8* nonnull %8) #13
  br label %11

11:                                               ; preds = %4, %10
  %12 = tail call noalias i8* @strdup(i8* %2) #13
  store i8* %12, i8** %7, align 8
  %13 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 1
  %14 = load %struct.evhttp_connection*, %struct.evhttp_connection** %13, align 8
  %15 = icmp eq %struct.evhttp_connection* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  tail call void @evhttp_request_free(%struct.evhttp_request* %0) #13
  br label %27

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 16
  %19 = load i8, i8* %18, align 8
  %20 = or i8 %19, 2
  store i8 %20, i8* %18, align 8
  %21 = icmp eq %struct.evbuffer* %3, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 17
  %24 = load %struct.evbuffer*, %struct.evbuffer** %23, align 8
  %25 = tail call i32 @evbuffer_add_buffer(%struct.evbuffer* %24, %struct.evbuffer* nonnull %3) #13
  br label %26

26:                                               ; preds = %22, %17
  tail call void @evhttp_make_header(%struct.evhttp_connection* nonnull %14, %struct.evhttp_request* %0) #13
  tail call void @evhttp_write_buffer(%struct.evhttp_connection* nonnull %14, void (%struct.evhttp_connection*, i8*)* nonnull @evhttp_send_done, i8* null) #13
  br label %27

27:                                               ; preds = %16, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_send_reply_start(%struct.evhttp_request*, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 7
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 12
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 13
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  tail call void @free(i8* nonnull %7) #13
  br label %10

10:                                               ; preds = %3, %9
  %11 = tail call noalias i8* @strdup(i8* %2) #13
  store i8* %11, i8** %6, align 8
  %12 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 10
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %26

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 11
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 1
  br i1 %18, label %19, label %26

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 4
  %21 = load %struct.evkeyvalq*, %struct.evkeyvalq** %20, align 8
  %22 = tail call i32 @evhttp_add_header(%struct.evkeyvalq* %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0))
  %23 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 16
  %24 = load i8, i8* %23, align 8
  %25 = or i8 %24, 1
  store i8 %25, i8* %23, align 8
  br label %26

26:                                               ; preds = %19, %15, %10
  %27 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 1
  %28 = load %struct.evhttp_connection*, %struct.evhttp_connection** %27, align 8
  tail call void @evhttp_make_header(%struct.evhttp_connection* %28, %struct.evhttp_request* %0)
  %29 = load %struct.evhttp_connection*, %struct.evhttp_connection** %27, align 8
  tail call void @evhttp_write_buffer(%struct.evhttp_connection* %29, void (%struct.evhttp_connection*, i8*)* null, i8* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_send_reply_chunk(%struct.evhttp_request* nocapture readonly, %struct.evbuffer*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 1
  %4 = load %struct.evhttp_connection*, %struct.evhttp_connection** %3, align 8
  %5 = icmp eq %struct.evhttp_connection* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %4, i64 0, i32 5
  %13 = load %struct.evbuffer*, %struct.evbuffer** %12, align 8
  %14 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %1, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = tail call i32 (%struct.evbuffer*, i8*, ...) @evbuffer_add_printf(%struct.evbuffer* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i32 %16) #13
  br label %18

18:                                               ; preds = %6, %11
  %19 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %4, i64 0, i32 5
  %20 = load %struct.evbuffer*, %struct.evbuffer** %19, align 8
  %21 = tail call i32 @evbuffer_add_buffer(%struct.evbuffer* %20, %struct.evbuffer* %1) #13
  %22 = load i8, i8* %7, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = load %struct.evbuffer*, %struct.evbuffer** %19, align 8
  %27 = tail call i32 @evbuffer_add(%struct.evbuffer* %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #13
  br label %28

28:                                               ; preds = %18, %25
  tail call void @evhttp_write_buffer(%struct.evhttp_connection* nonnull %4, void (%struct.evhttp_connection*, i8*)* null, i8* null)
  br label %29

29:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_send_reply_end(%struct.evhttp_request* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 1
  %3 = load %struct.evhttp_connection*, %struct.evhttp_connection** %2, align 8
  %4 = icmp eq %struct.evhttp_connection* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @evhttp_request_free(%struct.evhttp_request* %0)
  br label %27

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 8
  %9 = or i8 %8, 2
  store i8 %9, i8* %7, align 8
  %10 = and i8 %8, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %3, i64 0, i32 5
  %14 = load %struct.evbuffer*, %struct.evbuffer** %13, align 8
  %15 = tail call i32 @evbuffer_add(%struct.evbuffer* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5) #13
  %16 = load %struct.evhttp_connection*, %struct.evhttp_connection** %2, align 8
  tail call void @evhttp_write_buffer(%struct.evhttp_connection* %16, void (%struct.evhttp_connection*, i8*)* nonnull @evhttp_send_done, i8* null)
  %17 = load i8, i8* %7, align 8
  %18 = and i8 %17, -2
  store i8 %18, i8* %7, align 8
  br label %27

19:                                               ; preds = %6
  %20 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %3, i64 0, i32 2
  %21 = tail call i32 @event_pending(%struct.event* %20, i16 signext 5, %struct.timeval* null) #13
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  tail call void @evhttp_send_done(%struct.evhttp_connection* nonnull %3, i8* null)
  br label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %3, i64 0, i32 17
  store void (%struct.evhttp_connection*, i8*)* @evhttp_send_done, void (%struct.evhttp_connection*, i8*)** %25, align 8
  %26 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %3, i64 0, i32 18
  store i8* null, i8** %26, align 8
  br label %27

27:                                               ; preds = %12, %24, %23, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @evhttp_send_done(%struct.evhttp_connection*, i8* nocapture readnone) #0 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 0
  %4 = load %struct.evhttp_request*, %struct.evhttp_request** %3, align 8
  %5 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 0, i32 0
  %6 = load %struct.evhttp_request*, %struct.evhttp_request** %5, align 8
  %7 = icmp eq %struct.evhttp_request* %6, null
  %8 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 0, i32 1
  %9 = bitcast %struct.evhttp_request*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 1
  %12 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %6, i64 0, i32 0, i32 1
  %13 = select i1 %7, %struct.evhttp_request*** %11, %struct.evhttp_request*** %12
  %14 = bitcast %struct.evhttp_request*** %13 to i64*
  store i64 %10, i64* %14, align 8
  %15 = bitcast %struct.evhttp_request* %4 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %struct.evhttp_request*** %8 to i64**
  %18 = load i64*, i64** %17, align 8
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 10
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, -5
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 3
  %23 = tail call i32 @event_del(%struct.event* %22) #13
  %24 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 11
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 3
  %28 = load %struct.evkeyvalq*, %struct.evkeyvalq** %27, align 8
  br i1 %26, label %29, label %50

29:                                               ; preds = %2
  %30 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %28, i64 0, i32 0
  %31 = load %struct.evkeyval*, %struct.evkeyval** %30, align 8
  %32 = icmp eq %struct.evkeyval* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %29, %39
  %34 = phi %struct.evkeyval* [ %41, %39 ], [ %31, %29 ]
  %35 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %34, i64 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = tail call i32 @strcasecmp(i8* %36, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %34, i64 0, i32 0, i32 0
  %41 = load %struct.evkeyval*, %struct.evkeyval** %40, align 8
  %42 = icmp eq %struct.evkeyval* %41, null
  br i1 %42, label %60, label %33

43:                                               ; preds = %33
  %44 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %34, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = tail call i32 @strncasecmp(i8* nonnull %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i64 10) #12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %2, %47
  %51 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = tail call fastcc i32 @evhttp_is_connection_close(i32 %52, %struct.evkeyvalq* %28)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 4
  %57 = load %struct.evkeyvalq*, %struct.evkeyvalq** %56, align 8
  %58 = tail call fastcc i32 @evhttp_is_connection_close(i32 %52, %struct.evkeyvalq* %57)
  %59 = icmp eq i32 %58, 0
  tail call void @evhttp_request_free(%struct.evhttp_request* %4)
  br i1 %59, label %62, label %61

60:                                               ; preds = %39, %43, %29, %47, %50
  tail call void @evhttp_request_free(%struct.evhttp_request* %4)
  br label %61

61:                                               ; preds = %60, %55
  tail call void @evhttp_connection_free(%struct.evhttp_connection* %0)
  br label %92

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 15
  %64 = bitcast %struct.evhttp** %63 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = tail call %struct.evhttp_request* @evhttp_request_new(void (%struct.evhttp_request*, i8*)* nonnull @evhttp_handle_request, i8* %65) #13
  %67 = icmp eq %struct.evhttp_request* %66, null
  br i1 %67, label %91, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %66, i64 0, i32 1
  store %struct.evhttp_connection* %0, %struct.evhttp_connection** %69, align 8
  %70 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %66, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = or i32 %71, 1
  store i32 %72, i32* %70, align 8
  %73 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %66, i64 0, i32 0, i32 0
  store %struct.evhttp_request* null, %struct.evhttp_request** %73, align 8
  %74 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 1
  %75 = bitcast %struct.evhttp_request*** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %66, i64 0, i32 0, i32 1
  %78 = bitcast %struct.evhttp_request*** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = inttoptr i64 %76 to %struct.evhttp_request**
  store %struct.evhttp_request* %66, %struct.evhttp_request** %79, align 8
  store %struct.evhttp_request** %73, %struct.evhttp_request*** %74, align 8
  %80 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %66, i64 0, i32 7
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 8
  %82 = load i8*, i8** %81, align 8
  %83 = tail call noalias i8* @strdup(i8* %82) #13
  %84 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %66, i64 0, i32 5
  store i8* %83, i8** %84, align 8
  %85 = icmp eq i8* %83, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %68
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__func__.evhttp_associate_new_request_with_connection, i64 0, i64 0)) #13
  br label %87

87:                                               ; preds = %68, %86
  %88 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 9
  %89 = load i16, i16* %88, align 8
  %90 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %66, i64 0, i32 6
  store i16 %89, i16* %90, align 8
  tail call void @evhttp_start_read(%struct.evhttp_connection* %0) #13
  br label %92

91:                                               ; preds = %62
  tail call void @evhttp_connection_free(%struct.evhttp_connection* %0)
  br label %92

92:                                               ; preds = %87, %91, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @evhttp_encode_uri(i8*) local_unnamed_addr #0 {
  %2 = tail call %struct.evbuffer* @evbuffer_new() #13
  %3 = load i8, i8* %0, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1, %17
  %6 = phi i8 [ %19, %17 ], [ %3, %1 ]
  %7 = phi i8* [ %18, %17 ], [ %0, %1 ]
  %8 = zext i8 %6 to i64
  %9 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [127 x i8], [129 x i8] }>* @uri_chars to [256 x i8]*), i64 0, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call i32 @evbuffer_add(%struct.evbuffer* %2, i8* %7, i64 1) #13
  br label %17

14:                                               ; preds = %5
  %15 = zext i8 %6 to i32
  %16 = tail call i32 (%struct.evbuffer*, i8*, ...) @evbuffer_add_printf(%struct.evbuffer* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 %15) #13
  br label %17

17:                                               ; preds = %12, %14
  %18 = getelementptr inbounds i8, i8* %7, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %5

21:                                               ; preds = %17, %1
  %22 = tail call i32 @evbuffer_add(%struct.evbuffer* %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 1) #13
  %23 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %2, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = tail call noalias i8* @strdup(i8* %24) #13
  tail call void @evbuffer_free(%struct.evbuffer* %2) #13
  ret i8* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @evhttp_decode_uri(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [3 x i8], align 1
  %3 = tail call i64 @strlen(i8* %0) #12
  %4 = add i64 %3, 1
  %5 = tail call noalias i8* @malloc(i64 %4) #13
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.evhttp_decode_uri, i64 0, i64 0), i64 %4) #13
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 2
  br label %12

12:                                               ; preds = %50, %8
  %13 = phi i64 [ %54, %50 ], [ 0, %8 ]
  %14 = phi i32 [ %56, %50 ], [ 0, %8 ]
  %15 = phi i32 [ %53, %50 ], [ 0, %8 ]
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds i8, i8* %0, i64 %16
  %18 = load i8, i8* %17, align 1
  switch i8 %18, label %19 [
    i8 0, label %57
    i8 63, label %50
  ]

19:                                               ; preds = %12
  %20 = icmp eq i8 %18, 43
  %21 = icmp ne i32 %15, 0
  %22 = and i1 %21, %20
  br i1 %22, label %50, label %23

23:                                               ; preds = %19
  %24 = icmp eq i8 %18, 37
  br i1 %24, label %25, label %50

25:                                               ; preds = %23
  %26 = tail call i16** @__ctype_b_loc() #14
  %27 = load i16*, i16** %26, align 8
  %28 = add nsw i32 %14, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i16, i16* %27, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = and i16 %34, 4096
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %25
  %38 = add nsw i32 %14, 2
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds i16, i16* %27, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = and i16 %44, 4096
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %9) #13
  store i8 %31, i8* %9, align 1
  store i8 %41, i8* %10, align 1
  store i8 0, i8* %11, align 1
  %48 = call i64 @strtol(i8* nocapture nonnull %9, i8** null, i32 16) #13
  %49 = trunc i64 %48 to i8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %9) #13
  br label %50

50:                                               ; preds = %47, %37, %25, %23, %19, %12
  %51 = phi i8 [ %49, %47 ], [ 37, %37 ], [ 37, %25 ], [ %18, %23 ], [ %18, %12 ], [ 32, %19 ]
  %52 = phi i32 [ %38, %47 ], [ %14, %37 ], [ %14, %25 ], [ %14, %23 ], [ %14, %12 ], [ %14, %19 ]
  %53 = phi i32 [ %15, %47 ], [ %15, %37 ], [ %15, %25 ], [ %15, %23 ], [ 1, %12 ], [ %15, %19 ]
  %54 = add nuw i64 %13, 1
  %55 = getelementptr inbounds i8, i8* %5, i64 %13
  store i8 %51, i8* %55, align 1
  %56 = add nsw i32 %52, 1
  br label %12

57:                                               ; preds = %12
  %58 = and i64 %13, 4294967295
  %59 = getelementptr inbounds i8, i8* %5, i64 %58
  store i8 0, i8* %59, align 1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_parse_query(i8* readonly, %struct.evkeyvalq*) local_unnamed_addr #0 {
  %3 = alloca [3 x i8], align 1
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %8 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %9 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %1, i64 0, i32 0
  store %struct.evkeyval* null, %struct.evkeyval** %9, align 8
  %10 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %1, i64 0, i32 1
  store %struct.evkeyval** %9, %struct.evkeyval*** %10, align 8
  %11 = tail call i8* @strchr(i8* %0, i32 63) #12
  %12 = icmp eq i8* %11, null
  br i1 %12, label %93, label %13

13:                                               ; preds = %2
  %14 = tail call noalias i8* @strdup(i8* %0) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.evhttp_parse_query, i64 0, i64 0)) #13
  br label %17

17:                                               ; preds = %16, %13
  store i8* %14, i8** %4, align 8
  %18 = call i8* @strsep(i8** nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #13
  %19 = bitcast i8** %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i8** %5 to i64*
  store i64 %20, i64* %21, align 8
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %92, label %23

23:                                               ; preds = %17
  %24 = inttoptr i64 %20 to i8*
  %25 = bitcast i8** %6 to i8*
  %26 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 1
  %28 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2
  br label %35

29:                                               ; preds = %53
  %30 = and i64 %54, 4294967295
  %31 = getelementptr inbounds i8, i8* %47, i64 %30
  store i8 0, i8* %31, align 1
  %32 = call fastcc i32 @evhttp_add_header_internal(%struct.evkeyvalq* %1, i8* %41, i8* %47)
  call void @free(i8* %47) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  %33 = load i8*, i8** %5, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %92, label %35

35:                                               ; preds = %23, %29
  %36 = phi i8* [ %24, %23 ], [ %33, %29 ]
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %92, label %39

39:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %40 = call i8* @strsep(i8** nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0)) #13
  store i8* %40, i8** %4, align 8
  store i8* %40, i8** %6, align 8
  %41 = call i8* @strsep(i8** nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)) #13
  %42 = load i8*, i8** %6, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %91, label %44

44:                                               ; preds = %39
  %45 = call i64 @strlen(i8* nonnull %42) #12
  %46 = add i64 %45, 1
  %47 = call noalias i8* @malloc(i64 %46) #13
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.evhttp_parse_query, i64 0, i64 0)) #13
  %50 = load i8*, i8** %6, align 8
  br label %51

51:                                               ; preds = %49, %44
  %52 = phi i8* [ %50, %49 ], [ %42, %44 ]
  br label %53

53:                                               ; preds = %85, %51
  %54 = phi i64 [ %88, %85 ], [ 0, %51 ]
  %55 = phi i32 [ %90, %85 ], [ 0, %51 ]
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %52, i64 %56
  %58 = load i8, i8* %57, align 1
  switch i8 %58, label %85 [
    i8 0, label %29
    i8 37, label %59
    i8 43, label %84
  ]

59:                                               ; preds = %53
  %60 = tail call i16** @__ctype_b_loc() #14
  %61 = load i16*, i16** %60, align 8
  %62 = add nsw i32 %55, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %52, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds i16, i16* %61, i64 %66
  %68 = load i16, i16* %67, align 2
  %69 = and i16 %68, 4096
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %59
  %72 = add nsw i32 %55, 2
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %52, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds i16, i16* %61, i64 %76
  %78 = load i16, i16* %77, align 2
  %79 = and i16 %78, 4096
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %26) #13
  store i8 %65, i8* %26, align 1
  store i8 %75, i8* %27, align 1
  store i8 0, i8* %28, align 1
  %82 = call i64 @strtol(i8* nocapture nonnull %26, i8** null, i32 16) #13
  %83 = trunc i64 %82 to i8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %26) #13
  br label %85

84:                                               ; preds = %53
  br label %85

85:                                               ; preds = %53, %84, %81, %71, %59
  %86 = phi i8 [ %83, %81 ], [ 37, %71 ], [ 37, %59 ], [ 32, %84 ], [ %58, %53 ]
  %87 = phi i32 [ %72, %81 ], [ %55, %71 ], [ %55, %59 ], [ %55, %84 ], [ %55, %53 ]
  %88 = add nuw i64 %54, 1
  %89 = getelementptr inbounds i8, i8* %47, i64 %54
  store i8 %86, i8* %89, align 1
  %90 = add nsw i32 %87, 1
  br label %53

91:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  br label %92

92:                                               ; preds = %29, %35, %17, %91
  call void @free(i8* %14) #13
  br label %93

93:                                               ; preds = %2, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_bind_socket(%struct.evhttp*, i8*, i16 zeroext) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq i16 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @bind_socket_ai(%struct.addrinfo* null, i32 0) #13
  br label %14

9:                                                ; preds = %3
  %10 = tail call fastcc %struct.addrinfo* @make_addrinfo(i8* %1, i16 zeroext %2) #13
  %11 = icmp eq %struct.addrinfo* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = tail call fastcc i32 @bind_socket_ai(%struct.addrinfo* nonnull %10, i32 1) #13
  tail call void @freeaddrinfo(%struct.addrinfo* nonnull %10) #13
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i32 [ %8, %7 ], [ %13, %12 ]
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @listen(i32 %15, i32 128) #13
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.evhttp_bind_socket, i64 0, i64 0)) #13
  %21 = tail call i32 @close(i32 %15) #13
  br label %24

22:                                               ; preds = %17
  %23 = tail call i32 @evhttp_accept_socket(%struct.evhttp* %0, i32 %15)
  br label %24

24:                                               ; preds = %9, %14, %22, %20
  %25 = phi i32 [ -1, %20 ], [ %23, %22 ], [ -1, %14 ], [ -1, %9 ]
  ret i32 %25
}

; Function Attrs: nounwind
declare i32 @listen(i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_accept_socket(%struct.evhttp*, i32) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @malloc(i64 144) #13
  %4 = icmp eq i8* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %3, i64 16
  %7 = bitcast i8* %6 to %struct.event*
  %8 = bitcast %struct.evhttp* %0 to i8*
  tail call void @event_set(%struct.event* %7, i32 %1, i16 signext 18, void (i32, i16, i8*)* nonnull @accept_socket, i8* %8) #13
  %9 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 6
  %10 = load %struct.event_base*, %struct.event_base** %9, align 8
  %11 = icmp eq %struct.event_base* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call i32 @event_base_set(%struct.event_base* nonnull %10, %struct.event* %7) #13
  br label %14

14:                                               ; preds = %5, %12
  %15 = tail call i32 @event_add(%struct.event* %7, %struct.timeval* null) #13
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @free(i8* nonnull %3) #13
  br label %27

18:                                               ; preds = %14
  %19 = bitcast i8* %3 to %struct.evhttp_bound_socket**
  store %struct.evhttp_bound_socket* null, %struct.evhttp_bound_socket** %19, align 8
  %20 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 0, i32 1
  %21 = bitcast %struct.evhttp_bound_socket*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %3, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = inttoptr i64 %22 to i8**
  store i8* %3, i8** %25, align 8
  %26 = bitcast %struct.evhttp_bound_socket*** %20 to i8**
  store i8* %3, i8** %26, align 8
  br label %27

27:                                               ; preds = %2, %18, %17
  %28 = phi i32 [ -1, %17 ], [ 0, %18 ], [ -1, %2 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define internal void @accept_socket(i32, i16 signext, i8*) #0 {
  %4 = alloca %struct.sockaddr_storage, align 8
  %5 = alloca i32, align 4
  %6 = bitcast i8* %2 to %struct.evhttp*
  %7 = bitcast %struct.sockaddr_storage* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 128, i1 false)
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 128, i32* %5, align 4
  %9 = bitcast %struct.sockaddr_storage* %4 to %struct.sockaddr*
  %10 = call i32 @accept(i32 %0, %struct.sockaddr* nonnull %9, i32* nonnull %5) #13
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = tail call i32* @__errno_location() #14
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %15 [
    i32 11, label %21
    i32 4, label %21
  ]

15:                                               ; preds = %12
  call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.accept_socket, i64 0, i64 0)) #13
  br label %21

16:                                               ; preds = %3
  %17 = call i32 @evutil_make_socket_nonblocking(i32 %10) #13
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = load i32, i32* %5, align 4
  call void @evhttp_get_request(%struct.evhttp* %6, i32 %10, %struct.sockaddr* nonnull %9, i32 %20)
  br label %21

21:                                               ; preds = %16, %15, %12, %12, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #13
  ret void
}

declare i32 @event_add(%struct.event*, %struct.timeval*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evhttp* @evhttp_new(%struct.event_base*) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @calloc(i64 1, i64 80) #13
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.evhttp_new_object, i64 0, i64 0)) #13
  br label %17

5:                                                ; preds = %1
  %6 = bitcast i8* %2 to %struct.evhttp*
  %7 = getelementptr inbounds i8, i8* %2, i64 48
  %8 = bitcast i8* %7 to i32*
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i8**
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = getelementptr inbounds i8, i8* %2, i64 24
  %13 = bitcast i8* %12 to i8**
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 32
  %15 = getelementptr inbounds i8, i8* %2, i64 40
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  br label %17

17:                                               ; preds = %4, %5
  %18 = phi %struct.evhttp* [ null, %4 ], [ %6, %5 ]
  %19 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %18, i64 0, i32 6
  store %struct.event_base* %0, %struct.event_base** %19, align 8
  ret %struct.evhttp* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evhttp* @evhttp_start(i8*, i16 zeroext) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @calloc(i64 1, i64 80) #13
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.evhttp_new_object, i64 0, i64 0)) #13
  br label %18

6:                                                ; preds = %2
  %7 = bitcast i8* %3 to %struct.evhttp*
  %8 = getelementptr inbounds i8, i8* %3, i64 48
  %9 = bitcast i8* %8 to i32*
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 8
  %11 = bitcast i8* %10 to i8**
  store i8* %3, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 16
  %13 = getelementptr inbounds i8, i8* %3, i64 24
  %14 = bitcast i8* %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %3, i64 32
  %16 = getelementptr inbounds i8, i8* %3, i64 40
  %17 = bitcast i8* %16 to i8**
  store i8* %15, i8** %17, align 8
  br label %18

18:                                               ; preds = %5, %6
  %19 = phi %struct.evhttp* [ null, %5 ], [ %7, %6 ]
  %20 = tail call i32 @evhttp_bind_socket(%struct.evhttp* %19, i8* %0, i16 zeroext %1)
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void @free(i8* %3) #13
  br label %23

23:                                               ; preds = %18, %22
  %24 = phi %struct.evhttp* [ null, %22 ], [ %19, %18 ]
  ret %struct.evhttp* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_free(%struct.evhttp* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 0, i32 0
  %3 = load %struct.evhttp_bound_socket*, %struct.evhttp_bound_socket** %2, align 8
  %4 = icmp eq %struct.evhttp_bound_socket* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 0, i32 1
  br label %11

7:                                                ; preds = %11, %1
  %8 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 2, i32 0
  %9 = load %struct.evhttp_connection*, %struct.evhttp_connection** %8, align 8
  %10 = icmp eq %struct.evhttp_connection* %9, null
  br i1 %10, label %34, label %40

11:                                               ; preds = %5, %11
  %12 = phi %struct.evhttp_bound_socket* [ %3, %5 ], [ %32, %11 ]
  %13 = getelementptr inbounds %struct.evhttp_bound_socket, %struct.evhttp_bound_socket* %12, i64 0, i32 0, i32 0
  %14 = load %struct.evhttp_bound_socket*, %struct.evhttp_bound_socket** %13, align 8
  %15 = icmp eq %struct.evhttp_bound_socket* %14, null
  %16 = getelementptr inbounds %struct.evhttp_bound_socket, %struct.evhttp_bound_socket* %12, i64 0, i32 0, i32 1
  %17 = bitcast %struct.evhttp_bound_socket*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.evhttp_bound_socket, %struct.evhttp_bound_socket* %14, i64 0, i32 0, i32 1
  %20 = select i1 %15, %struct.evhttp_bound_socket*** %6, %struct.evhttp_bound_socket*** %19
  %21 = bitcast %struct.evhttp_bound_socket*** %20 to i64*
  store i64 %18, i64* %21, align 8
  %22 = bitcast %struct.evhttp_bound_socket* %12 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %struct.evhttp_bound_socket*** %16 to i64**
  %25 = load i64*, i64** %24, align 8
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %struct.evhttp_bound_socket, %struct.evhttp_bound_socket* %12, i64 0, i32 1
  %27 = getelementptr inbounds %struct.evhttp_bound_socket, %struct.evhttp_bound_socket* %12, i64 0, i32 1, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = tail call i32 @event_del(%struct.event* %26) #13
  %30 = tail call i32 @close(i32 %28) #13
  %31 = bitcast %struct.evhttp_bound_socket* %12 to i8*
  tail call void @free(i8* %31) #13
  %32 = load %struct.evhttp_bound_socket*, %struct.evhttp_bound_socket** %2, align 8
  %33 = icmp eq %struct.evhttp_bound_socket* %32, null
  br i1 %33, label %7, label %11

34:                                               ; preds = %40, %7
  %35 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 1, i32 0
  %36 = load %struct.evhttp_cb*, %struct.evhttp_cb** %35, align 8
  %37 = icmp eq %struct.evhttp_cb* %36, null
  br i1 %37, label %64, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 1, i32 1
  br label %44

40:                                               ; preds = %7, %40
  %41 = phi %struct.evhttp_connection* [ %42, %40 ], [ %9, %7 ]
  tail call void @evhttp_connection_free(%struct.evhttp_connection* nonnull %41)
  %42 = load %struct.evhttp_connection*, %struct.evhttp_connection** %8, align 8
  %43 = icmp eq %struct.evhttp_connection* %42, null
  br i1 %43, label %34, label %40

44:                                               ; preds = %38, %44
  %45 = phi %struct.evhttp_cb* [ %36, %38 ], [ %62, %44 ]
  %46 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %45, i64 0, i32 0, i32 0
  %47 = load %struct.evhttp_cb*, %struct.evhttp_cb** %46, align 8
  %48 = icmp eq %struct.evhttp_cb* %47, null
  %49 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %45, i64 0, i32 0, i32 1
  %50 = bitcast %struct.evhttp_cb*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %47, i64 0, i32 0, i32 1
  %53 = select i1 %48, %struct.evhttp_cb*** %39, %struct.evhttp_cb*** %52
  %54 = bitcast %struct.evhttp_cb*** %53 to i64*
  store i64 %51, i64* %54, align 8
  %55 = bitcast %struct.evhttp_cb* %45 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %struct.evhttp_cb*** %49 to i64**
  %58 = load i64*, i64** %57, align 8
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %45, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  tail call void @free(i8* %60) #13
  %61 = bitcast %struct.evhttp_cb* %45 to i8*
  tail call void @free(i8* %61) #13
  %62 = load %struct.evhttp_cb*, %struct.evhttp_cb** %35, align 8
  %63 = icmp eq %struct.evhttp_cb* %62, null
  br i1 %63, label %64, label %44

64:                                               ; preds = %44, %34
  %65 = bitcast %struct.evhttp* %0 to i8*
  tail call void @free(i8* %65) #13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evhttp_set_timeout(%struct.evhttp* nocapture, i32) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_set_cb(%struct.evhttp* nocapture, i8* nocapture readonly, void (%struct.evhttp_request*, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = tail call noalias i8* @calloc(i64 1, i64 40) #13
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.evhttp_set_cb, i64 0, i64 0)) #13
  br label %8

8:                                                ; preds = %7, %4
  %9 = tail call noalias i8* @strdup(i8* %1) #13
  %10 = getelementptr inbounds i8, i8* %5, i64 16
  %11 = bitcast i8* %10 to i8**
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 24
  %13 = bitcast i8* %12 to void (%struct.evhttp_request*, i8*)**
  store void (%struct.evhttp_request*, i8*)* %2, void (%struct.evhttp_request*, i8*)** %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 32
  %15 = bitcast i8* %14 to i8**
  store i8* %3, i8** %15, align 8
  %16 = bitcast i8* %5 to %struct.evhttp_cb**
  store %struct.evhttp_cb* null, %struct.evhttp_cb** %16, align 8
  %17 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 1, i32 1
  %18 = bitcast %struct.evhttp_cb*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = inttoptr i64 %19 to i8**
  store i8* %5, i8** %22, align 8
  %23 = bitcast %struct.evhttp_cb*** %17 to i8**
  store i8* %5, i8** %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evhttp_del_cb(%struct.evhttp* nocapture, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 1, i32 0
  br label %4

4:                                                ; preds = %8, %2
  %5 = phi %struct.evhttp_cb** [ %3, %2 ], [ %13, %8 ]
  %6 = load %struct.evhttp_cb*, %struct.evhttp_cb** %5, align 8
  %7 = icmp eq %struct.evhttp_cb* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %6, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i32 @strcmp(i8* %10, i8* %1) #12
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %6, i64 0, i32 0, i32 0
  br i1 %12, label %14, label %4

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %6, i64 0, i32 1
  %16 = load %struct.evhttp_cb*, %struct.evhttp_cb** %13, align 8
  %17 = icmp eq %struct.evhttp_cb* %16, null
  %18 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %6, i64 0, i32 0, i32 1
  %19 = bitcast %struct.evhttp_cb*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %16, i64 0, i32 0, i32 1
  %23 = select i1 %17, %struct.evhttp_cb*** %21, %struct.evhttp_cb*** %22
  %24 = bitcast %struct.evhttp_cb*** %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = bitcast %struct.evhttp_cb* %6 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %struct.evhttp_cb*** %18 to i64**
  %28 = load i64*, i64** %27, align 8
  store i64 %26, i64* %28, align 8
  %29 = load i8*, i8** %15, align 8
  tail call void @free(i8* %29) #13
  %30 = bitcast %struct.evhttp_cb* %6 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %4, %14
  %32 = phi i32 [ 0, %14 ], [ -1, %4 ]
  ret i32 %32
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evhttp_set_gencb(%struct.evhttp* nocapture, void (%struct.evhttp_request*, i8*)*, i8*) local_unnamed_addr #8 {
  %4 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 4
  store void (%struct.evhttp_request*, i8*)* %1, void (%struct.evhttp_request*, i8*)** %4, align 8
  %5 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 5
  store i8* %2, i8** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.evhttp_request* @evhttp_request_new(void (%struct.evhttp_request*, i8*)*, i8*) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @calloc(i64 1, i64 152) #13
  %4 = bitcast i8* %3 to %struct.evhttp_request*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %3, i64 60
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = tail call noalias i8* @calloc(i64 1, i64 16) #13
  %10 = getelementptr inbounds i8, i8* %3, i64 32
  %11 = bitcast i8* %10 to i8**
  store i8* %9, i8** %11, align 8
  %12 = icmp eq i8* %9, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i8**
  store i8* %9, i8** %15, align 8
  %16 = tail call noalias i8* @calloc(i64 1, i64 16) #13
  %17 = getelementptr inbounds i8, i8* %3, i64 40
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = icmp eq i8* %16, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i8**
  store i8* %16, i8** %22, align 8
  %23 = tail call %struct.evbuffer* @evbuffer_new() #13
  %24 = getelementptr inbounds i8, i8* %3, i64 96
  %25 = bitcast i8* %24 to %struct.evbuffer**
  store %struct.evbuffer* %23, %struct.evbuffer** %25, align 8
  %26 = icmp eq %struct.evbuffer* %23, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %20
  %28 = tail call %struct.evbuffer* @evbuffer_new() #13
  %29 = getelementptr inbounds i8, i8* %3, i64 120
  %30 = bitcast i8* %29 to %struct.evbuffer**
  store %struct.evbuffer* %28, %struct.evbuffer** %30, align 8
  %31 = icmp eq %struct.evbuffer* %28, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds i8, i8* %3, i64 128
  %34 = bitcast i8* %33 to void (%struct.evhttp_request*, i8*)**
  store void (%struct.evhttp_request*, i8*)* %0, void (%struct.evhttp_request*, i8*)** %34, align 8
  %35 = getelementptr inbounds i8, i8* %3, i64 136
  %36 = bitcast i8* %35 to i8**
  store i8* %1, i8** %36, align 8
  br label %40

37:                                               ; preds = %2
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.evhttp_request_new, i64 0, i64 0)) #13
  br label %40

38:                                               ; preds = %27, %20, %13, %6
  %39 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), %6 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), %13 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0), %20 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0), %27 ]
  tail call void (i8*, ...) @event_warn(i8* %39, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.evhttp_request_new, i64 0, i64 0)) #13
  tail call void @evhttp_request_free(%struct.evhttp_request* nonnull %4)
  br label %40

40:                                               ; preds = %37, %38, %32
  %41 = phi %struct.evhttp_request* [ %4, %32 ], [ null, %37 ], [ null, %38 ]
  ret %struct.evhttp_request* %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.evhttp_connection* @evhttp_request_get_connection(%struct.evhttp_request* nocapture readonly) local_unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 1
  %3 = load %struct.evhttp_connection*, %struct.evhttp_connection** %2, align 8
  ret %struct.evhttp_connection* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evhttp_request_set_chunked_cb(%struct.evhttp_request* nocapture, void (%struct.evhttp_request*, i8*)*) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 20
  %4 = bitcast {}** %3 to void (%struct.evhttp_request*, i8*)**
  store void (%struct.evhttp_request*, i8*)* %1, void (%struct.evhttp_request*, i8*)** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @evhttp_request_uri(%struct.evhttp_request* nocapture readonly) local_unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 9
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evhttp_get_request(%struct.evhttp*, i32, %struct.sockaddr*, i32) local_unnamed_addr #0 {
  %5 = alloca [1025 x i8], align 16
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds [1025 x i8], [1025 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1025, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 1025, i1 false) #13
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 32, i1 false) #13
  %9 = call i32 @getnameinfo(%struct.sockaddr* %2, i32 %3, i8* nonnull %7, i32 1025, i8* nonnull %8, i32 32, i32 3) #13
  switch i32 %9, label %11 [
    i32 0, label %13
    i32 -11, label %10
  ]

10:                                               ; preds = %4
  call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56, i64 0, i64 0)) #13
  br label %16

11:                                               ; preds = %4
  %12 = call i8* @gai_strerror(i32 %9) #13
  call void (i32, i8*, ...) @event_errx(i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i8* %12) #13
  br label %16

13:                                               ; preds = %4
  %14 = call noalias i8* @strdup(i8* nonnull %7) #13
  %15 = call noalias i8* @strdup(i8* nonnull %8) #13
  br label %16

16:                                               ; preds = %13, %11, %10
  %17 = phi i8* [ null, %11 ], [ null, %10 ], [ %14, %13 ]
  %18 = phi i8* [ null, %11 ], [ null, %10 ], [ %15, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 1025, i8* nonnull %7) #13
  %19 = icmp eq i8* %17, null
  %20 = icmp eq i8* %18, null
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  br i1 %19, label %24, label %23

23:                                               ; preds = %22
  call void @free(i8* nonnull %17) #13
  br label %24

24:                                               ; preds = %23, %22
  br i1 %20, label %84, label %25

25:                                               ; preds = %24
  call void @free(i8* nonnull %18) #13
  br label %84

26:                                               ; preds = %16
  %27 = call i64 @strtol(i8* nocapture nonnull %18, i8** null, i32 10) #13
  %28 = trunc i64 %27 to i16
  %29 = call %struct.evhttp_connection* @evhttp_connection_new(i8* nonnull %17, i16 zeroext %28) #13
  call void @free(i8* nonnull %17) #13
  call void @free(i8* nonnull %18) #13
  %30 = icmp eq %struct.evhttp_connection* %29, null
  br i1 %30, label %84, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 6
  %33 = bitcast %struct.event_base** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 21
  %36 = bitcast %struct.event_base** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 10
  %38 = load i32, i32* %37, align 4
  %39 = or i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 14
  store i32 3, i32* %40, align 4
  %41 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 1
  store i32 %1, i32* %41, align 8
  %42 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %47, label %45

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 11
  store i32 %43, i32* %46, align 8
  br label %47

47:                                               ; preds = %31, %45
  %48 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 15
  store %struct.evhttp* %0, %struct.evhttp** %48, align 8
  %49 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 0, i32 0
  store %struct.evhttp_connection* null, %struct.evhttp_connection** %49, align 8
  %50 = getelementptr inbounds %struct.evhttp, %struct.evhttp* %0, i64 0, i32 2, i32 1
  %51 = bitcast %struct.evhttp_connection*** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 0, i32 1
  %54 = bitcast %struct.evhttp_connection*** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = load %struct.evhttp_connection**, %struct.evhttp_connection*** %50, align 8
  store %struct.evhttp_connection* %29, %struct.evhttp_connection** %55, align 8
  store %struct.evhttp_connection** %49, %struct.evhttp_connection*** %50, align 8
  %56 = bitcast %struct.evhttp** %48 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = call %struct.evhttp_request* @evhttp_request_new(void (%struct.evhttp_request*, i8*)* nonnull @evhttp_handle_request, i8* %57) #13
  %59 = icmp eq %struct.evhttp_request* %58, null
  br i1 %59, label %83, label %60

60:                                               ; preds = %47
  %61 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %58, i64 0, i32 1
  store %struct.evhttp_connection* %29, %struct.evhttp_connection** %61, align 8
  %62 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %58, i64 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, 1
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %58, i64 0, i32 0, i32 0
  store %struct.evhttp_request* null, %struct.evhttp_request** %65, align 8
  %66 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 16, i32 1
  %67 = bitcast %struct.evhttp_request*** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %58, i64 0, i32 0, i32 1
  %70 = bitcast %struct.evhttp_request*** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = inttoptr i64 %68 to %struct.evhttp_request**
  store %struct.evhttp_request* %58, %struct.evhttp_request** %71, align 8
  store %struct.evhttp_request** %65, %struct.evhttp_request*** %66, align 8
  %72 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %58, i64 0, i32 7
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 8
  %74 = load i8*, i8** %73, align 8
  %75 = call noalias i8* @strdup(i8* %74) #13
  %76 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %58, i64 0, i32 5
  store i8* %75, i8** %76, align 8
  %77 = icmp eq i8* %75, null
  br i1 %77, label %78, label %79

78:                                               ; preds = %60
  call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__func__.evhttp_associate_new_request_with_connection, i64 0, i64 0)) #13
  br label %79

79:                                               ; preds = %60, %78
  %80 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %29, i64 0, i32 9
  %81 = load i16, i16* %80, align 8
  %82 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %58, i64 0, i32 6
  store i16 %81, i16* %82, align 8
  call void @evhttp_start_read(%struct.evhttp_connection* nonnull %29) #13
  br label %84

83:                                               ; preds = %47
  call void @evhttp_connection_free(%struct.evhttp_connection* nonnull %29)
  br label %84

84:                                               ; preds = %26, %25, %24, %79, %83
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc i32 @evhttp_is_connection_close(i32, %struct.evkeyvalq* nocapture readonly) unnamed_addr #9 {
  %3 = and i32 %0, 2
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %1, i64 0, i32 0
  %6 = load %struct.evkeyval*, %struct.evkeyval** %5, align 8
  %7 = icmp eq %struct.evkeyval* %6, null
  br i1 %4, label %26, label %8

8:                                                ; preds = %2
  br i1 %7, label %44, label %9

9:                                                ; preds = %8, %15
  %10 = phi %struct.evkeyval* [ %17, %15 ], [ %6, %8 ]
  %11 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %10, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @strcasecmp(i8* %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0)) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %10, i64 0, i32 0, i32 0
  %17 = load %struct.evkeyval*, %struct.evkeyval** %16, align 8
  %18 = icmp eq %struct.evkeyval* %17, null
  br i1 %18, label %44, label %9

19:                                               ; preds = %9
  %20 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %10, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %19
  %24 = tail call i32 @strcasecmp(i8* nonnull %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0)) #12
  %25 = icmp ne i32 %24, 0
  br label %44

26:                                               ; preds = %2
  br i1 %7, label %44, label %27

27:                                               ; preds = %26, %33
  %28 = phi %struct.evkeyval* [ %35, %33 ], [ %6, %26 ]
  %29 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %28, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #12
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %28, i64 0, i32 0, i32 0
  %35 = load %struct.evkeyval*, %struct.evkeyval** %34, align 8
  %36 = icmp eq %struct.evkeyval* %35, null
  br i1 %36, label %44, label %27

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %28, i64 0, i32 2
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = tail call i32 @strcasecmp(i8* nonnull %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #12
  %43 = icmp eq i32 %42, 0
  br label %44

44:                                               ; preds = %15, %33, %26, %8, %41, %37, %19, %23
  %45 = phi i1 [ true, %19 ], [ %25, %23 ], [ false, %37 ], [ %43, %41 ], [ true, %8 ], [ false, %26 ], [ false, %33 ], [ true, %15 ]
  %46 = zext i1 %45 to i32
  ret i32 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #7

; Function Attrs: nounwind
declare %struct.tm* @gmtime_r(i64*, %struct.tm*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @evhttp_detect_close_cb(i32, i16 signext, i8*) #0 {
  %4 = bitcast i8* %2 to %struct.evhttp_connection*
  tail call void @evhttp_connection_reset(%struct.evhttp_connection* %4)
  ret void
}

declare i64 @evutil_strtoll(i8*, i8**, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @strpbrk(i8*, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @evhttp_get_body(%struct.evhttp_connection*, %struct.evhttp_request*) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call fastcc void @evhttp_connection_done(%struct.evhttp_connection* %0)
  br label %101

12:                                               ; preds = %7, %2
  %13 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 14
  store i32 5, i32* %13, align 4
  %14 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 3
  %15 = load %struct.evkeyvalq*, %struct.evkeyvalq** %14, align 8
  %16 = getelementptr inbounds %struct.evkeyvalq, %struct.evkeyvalq* %15, i64 0, i32 0
  %17 = load %struct.evkeyval*, %struct.evkeyval** %16, align 8
  %18 = icmp eq %struct.evkeyval* %17, null
  br i1 %18, label %70, label %19

19:                                               ; preds = %12, %25
  %20 = phi %struct.evkeyval* [ %27, %25 ], [ %17, %12 ]
  %21 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %20, i64 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 @strcasecmp(i8* %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0)) #12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %20, i64 0, i32 0, i32 0
  %27 = load %struct.evkeyval*, %struct.evkeyval** %26, align 8
  %28 = icmp eq %struct.evkeyval* %27, null
  br i1 %28, label %33, label %19

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %20, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %25, %34, %29
  br label %42

34:                                               ; preds = %29
  %35 = tail call i32 @strcasecmp(i8* nonnull %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0)) #12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %33

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 16
  %39 = load i8, i8* %38, align 8
  %40 = or i8 %39, 1
  store i8 %40, i8* %38, align 8
  %41 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 15
  store i64 -1, i64* %41, align 8
  br label %100

42:                                               ; preds = %33, %51
  %43 = phi %struct.evkeyval* [ %53, %51 ], [ %17, %33 ]
  %44 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %43, i64 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = tail call i32 @strcasecmp(i8* %45, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #12
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %43, i64 0, i32 2
  %50 = load i8*, i8** %49, align 8
  br label %55

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %43, i64 0, i32 0, i32 0
  %53 = load %struct.evkeyval*, %struct.evkeyval** %52, align 8
  %54 = icmp eq %struct.evkeyval* %53, null
  br i1 %54, label %55, label %42

55:                                               ; preds = %51, %48
  %56 = phi i8* [ %50, %48 ], [ null, %51 ]
  br label %57

57:                                               ; preds = %66, %55
  %58 = phi %struct.evkeyval* [ %68, %66 ], [ %17, %55 ]
  %59 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %58, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = tail call i32 @strcasecmp(i8* %60, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #12
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %58, i64 0, i32 2
  %65 = load i8*, i8** %64, align 8
  br label %70

66:                                               ; preds = %57
  %67 = getelementptr inbounds %struct.evkeyval, %struct.evkeyval* %58, i64 0, i32 0, i32 0
  %68 = load %struct.evkeyval*, %struct.evkeyval** %67, align 8
  %69 = icmp eq %struct.evkeyval* %68, null
  br i1 %69, label %70, label %57

70:                                               ; preds = %66, %12, %63
  %71 = phi i8* [ %56, %63 ], [ null, %12 ], [ %56, %66 ]
  %72 = phi i8* [ %65, %63 ], [ null, %12 ], [ null, %66 ]
  %73 = icmp eq i8* %71, null
  %74 = icmp eq i8* %72, null
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 15
  store i64 -1, i64* %77, align 8
  br label %100

78:                                               ; preds = %70
  br i1 %73, label %79, label %85

79:                                               ; preds = %78
  %80 = tail call i32 @strcasecmp(i8* %72, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #12
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  tail call void (i8*, ...) @event_warnx(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.evhttp_get_body_length, i64 0, i64 0), i8* %72) #13
  br label %99

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 15
  store i64 -1, i64* %84, align 8
  br label %100

85:                                               ; preds = %78
  %86 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %87 = call i64 @evutil_strtoll(i8* nonnull %71, i8** nonnull %3, i32 10) #13
  %88 = load i8, i8* %71, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = load i8*, i8** %3, align 8
  %92 = load i8, i8* %91, align 1
  %93 = icmp ne i8 %92, 0
  %94 = icmp slt i64 %87, 0
  %95 = or i1 %94, %93
  br i1 %95, label %98, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %1, i64 0, i32 15
  store i64 %87, i64* %97, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  br label %100

98:                                               ; preds = %90, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  br label %99

99:                                               ; preds = %98, %82
  call void @evhttp_connection_fail(%struct.evhttp_connection* %0, i32 2)
  br label %101

100:                                              ; preds = %83, %76, %96, %37
  call fastcc void @evhttp_read_body(%struct.evhttp_connection* %0, %struct.evhttp_request* %1)
  br label %101

101:                                              ; preds = %100, %99, %11
  ret void
}

declare void @event_warnx(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @evhttp_connection_retry(i32, i16 signext, i8*) #0 {
  %4 = bitcast i8* %2 to %struct.evhttp_connection*
  %5 = getelementptr inbounds i8, i8* %2, i64 340
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 4
  %7 = tail call i32 @evhttp_connection_connect(%struct.evhttp_connection* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @evhttp_write_connectioncb(%struct.evhttp_connection*, i8* nocapture readnone) #0 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %0, i64 0, i32 16, i32 0
  %4 = load %struct.evhttp_request*, %struct.evhttp_request** %3, align 8
  %5 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %4, i64 0, i32 7
  store i32 1, i32* %5, align 4
  tail call void @evhttp_start_read(%struct.evhttp_connection* %0)
  ret void
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #6

declare i32 @accept(i32, %struct.sockaddr*, i32*) local_unnamed_addr #4

declare i32 @evutil_make_socket_nonblocking(i32) local_unnamed_addr #4

declare i32 @getnameinfo(%struct.sockaddr*, i32, i8*, i32, i8*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i8* @gai_strerror(i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @evhttp_handle_request(%struct.evhttp_request*, i8* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 9
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 1
  %8 = load %struct.evhttp_connection*, %struct.evhttp_connection** %7, align 8
  %9 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %8, i64 0, i32 14
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %8, i32 1)
  br label %69

13:                                               ; preds = %6
  tail call void @evhttp_send_error(%struct.evhttp_request* %0, i32 400, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i64 0, i64 0))
  br label %69

14:                                               ; preds = %2
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = tail call i8* @strchr(i8* nonnull %4, i32 63) #12
  %17 = icmp eq i8* %16, null
  %18 = ptrtoint i8* %16 to i64
  %19 = ptrtoint i8* %4 to i64
  %20 = sub i64 %18, %19
  %21 = select i1 %17, i64 0, i64 %20
  %22 = bitcast i8* %15 to %struct.evhttp_cb**
  %23 = load %struct.evhttp_cb*, %struct.evhttp_cb** %22, align 8
  %24 = icmp eq %struct.evhttp_cb* %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %14, %39
  %26 = phi %struct.evhttp_cb* [ %41, %39 ], [ %23, %14 ]
  %27 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %26, i64 0, i32 1
  %28 = load i8*, i8** %27, align 8
  br i1 %17, label %29, label %32

29:                                               ; preds = %25
  %30 = tail call i32 @strcmp(i8* %28, i8* nonnull %4) #12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %43, label %39

32:                                               ; preds = %25
  %33 = tail call i32 @strncmp(i8* %28, i8* nonnull %4, i64 %21) #12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = getelementptr inbounds i8, i8* %28, i64 %21
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %35, %32, %29
  %40 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %26, i64 0, i32 0, i32 0
  %41 = load %struct.evhttp_cb*, %struct.evhttp_cb** %40, align 8
  %42 = icmp eq %struct.evhttp_cb* %41, null
  br i1 %42, label %48, label %25

43:                                               ; preds = %35, %29
  %44 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %26, i64 0, i32 2
  %45 = load void (%struct.evhttp_request*, i8*)*, void (%struct.evhttp_request*, i8*)** %44, align 8
  %46 = getelementptr inbounds %struct.evhttp_cb, %struct.evhttp_cb* %26, i64 0, i32 3
  %47 = load i8*, i8** %46, align 8
  tail call void %45(%struct.evhttp_request* %0, i8* %47) #13
  br label %69

48:                                               ; preds = %39, %14
  %49 = getelementptr inbounds i8, i8* %1, i64 56
  %50 = bitcast i8* %49 to void (%struct.evhttp_request*, i8*)**
  %51 = load void (%struct.evhttp_request*, i8*)*, void (%struct.evhttp_request*, i8*)** %50, align 8
  %52 = icmp eq void (%struct.evhttp_request*, i8*)* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, i8* %1, i64 64
  %55 = bitcast i8* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void %51(%struct.evhttp_request* %0, i8* %56) #13
  br label %69

57:                                               ; preds = %48
  %58 = tail call i8* @evhttp_htmlescape(i8* nonnull %4)
  %59 = tail call %struct.evbuffer* @evbuffer_new() #13
  %60 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 7
  store i32 1, i32* %60, align 4
  %61 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 12
  store i32 404, i32* %61, align 4
  %62 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 13
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %57
  tail call void @free(i8* nonnull %63) #13
  br label %66

66:                                               ; preds = %57, %65
  %67 = tail call noalias i8* @strdup(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0)) #13
  store i8* %67, i8** %62, align 8
  %68 = tail call i32 (%struct.evbuffer*, i8*, ...) @evbuffer_add_printf(%struct.evbuffer* %59, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.60, i64 0, i64 0), i8* %58) #13
  tail call void @free(i8* %58) #13
  tail call void @evhttp_send_page(%struct.evhttp_request* %0, %struct.evbuffer* %59)
  tail call void @evbuffer_free(%struct.evbuffer* %59) #13
  br label %69

69:                                               ; preds = %12, %13, %66, %53, %43
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @bind_socket_ai(%struct.addrinfo* readonly, i32) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #13
  store i32 1, i32* %3, align 4
  %5 = tail call i32 @socket(i32 2, i32 1, i32 0) #13
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0)) #13
  br label %33

8:                                                ; preds = %2
  %9 = tail call i32 @evutil_make_socket_nonblocking(i32 %5) #13
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %8
  %12 = tail call i32 (i32, i32, ...) @fcntl(i32 %5, i32 2, i32 1) #13
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i64 0, i64 0)) #13
  br label %29

15:                                               ; preds = %11
  %16 = call i32 @setsockopt(i32 %5, i32 1, i32 9, i8* nonnull %4, i32 4) #13
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = call i32 @setsockopt(i32 %5, i32 1, i32 2, i8* nonnull %4, i32 4) #13
  br label %20

20:                                               ; preds = %15, %18
  %21 = icmp eq %struct.addrinfo* %0, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %0, i64 0, i32 5
  %24 = load %struct.sockaddr*, %struct.sockaddr** %23, align 8
  %25 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = call i32 @bind(i32 %5, %struct.sockaddr* %24, i32 %26) #13
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %33

29:                                               ; preds = %22, %8, %14
  %30 = tail call i32* @__errno_location() #14
  %31 = load i32, i32* %30, align 4
  %32 = call i32 @close(i32 %5) #13
  store i32 %31, i32* %30, align 4
  br label %33

33:                                               ; preds = %22, %20, %29, %7
  %34 = phi i32 [ -1, %7 ], [ -1, %29 ], [ %5, %20 ], [ %5, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.addrinfo* @make_addrinfo(i8*, i16 zeroext) unnamed_addr #0 {
  %3 = alloca %struct.addrinfo*, align 8
  %4 = alloca %struct.addrinfo, align 8
  %5 = alloca [32 x i8], align 16
  %6 = bitcast %struct.addrinfo** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  store %struct.addrinfo* null, %struct.addrinfo** %3, align 8
  %7 = bitcast %struct.addrinfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #13
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 48, i1 false)
  %9 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %4, i64 0, i32 1
  store i32 2, i32* %9, align 4
  %10 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %4, i64 0, i32 2
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %4, i64 0, i32 0
  store i32 1, i32* %11, align 8
  %12 = zext i16 %1 to i32
  %13 = call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* nonnull %8, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i64 0, i64 0), i32 %12) #13
  %14 = call i32 @getaddrinfo(i8* %0, i8* nonnull %8, %struct.addrinfo* nonnull %4, %struct.addrinfo** nonnull %3) #13
  switch i32 %14, label %16 [
    i32 0, label %18
    i32 -11, label %15
  ]

15:                                               ; preds = %2
  call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0)) #13
  br label %20

16:                                               ; preds = %2
  %17 = call i8* @gai_strerror(i32 %14) #13
  call void (i8*, ...) @event_warnx(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65, i64 0, i64 0), i8* %17) #13
  br label %20

18:                                               ; preds = %2
  %19 = load %struct.addrinfo*, %struct.addrinfo** %3, align 8
  br label %20

20:                                               ; preds = %15, %16, %18
  %21 = phi %struct.addrinfo* [ %19, %18 ], [ null, %16 ], [ null, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret %struct.addrinfo* %21
}

; Function Attrs: nounwind
declare void @freeaddrinfo(%struct.addrinfo*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) local_unnamed_addr #7

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) local_unnamed_addr #7

declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) local_unnamed_addr #4

declare i32 @connect(i32, %struct.sockaddr*, i32) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
