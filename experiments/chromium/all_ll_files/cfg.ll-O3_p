; ModuleID = '../../v8/src/torque/cfg.cc'
source_filename = "../../v8/src/torque/cfg.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::torque::Block" = type <{ %"class.v8::internal::torque::ControlFlowGraph"*, %"class.std::__1::vector.18", %"class.v8::base::Optional.28", %"class.v8::base::Optional.33", i64, i8, [7 x i8] }>
%"class.v8::internal::torque::ControlFlowGraph" = type { %"class.std::__1::list", %"class.v8::internal::torque::Block"*, %"class.std::__1::vector", %"class.v8::base::Optional", %"class.v8::base::Optional.6", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.v8::internal::torque::Block"** }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.v8::internal::torque::Block"* }
%"class.v8::base::Optional.6" = type { %"class.v8::base::internal::OptionalBase.7" }
%"class.v8::base::internal::OptionalBase.7" = type { %"struct.v8::base::internal::OptionalStorage.8" }
%"struct.v8::base::internal::OptionalStorage.8" = type { %"struct.v8::base::internal::OptionalStorageBase.9" }
%"struct.v8::base::internal::OptionalStorageBase.9" = type { i8, %union.anon.10 }
%union.anon.10 = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"**, %"class.std::__1::__compressed_pair.13" }
%"class.v8::internal::torque::Type" = type { %"class.v8::internal::torque::TypeBase.base", %"class.v8::internal::torque::Type"*, %"class.std::__1::set", i64, %"class.v8::base::Optional.53", %"class.v8::internal::torque::Type"* }
%"class.v8::internal::torque::TypeBase.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.v8::base::Optional.53" = type { %"class.v8::base::internal::OptionalBase.54" }
%"class.v8::base::internal::OptionalBase.54" = type { %"struct.v8::base::internal::OptionalStorage.55" }
%"struct.v8::base::internal::OptionalStorage.55" = type { %"struct.v8::base::internal::OptionalStorageBase.56" }
%"struct.v8::base::internal::OptionalStorageBase.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { %"struct.v8::internal::torque::SpecializationKey" }
%"struct.v8::internal::torque::SpecializationKey" = type { %"class.v8::internal::torque::GenericType"*, %"class.std::__1::vector.11" }
%"class.v8::internal::torque::GenericType" = type { %"class.v8::internal::torque::GenericDeclarable" }
%"class.v8::internal::torque::GenericDeclarable" = type { %"class.v8::internal::torque::Declarable.base", %"class.std::__1::basic_string", %"struct.v8::internal::torque::GenericTypeDeclaration"*, %"class.std::__1::unordered_map", %"class.v8::base::Optional.95" }
%"class.v8::internal::torque::Declarable.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.v8::internal::torque::Scope"*, %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition", i8 }>
%"class.v8::internal::torque::Scope" = type { %"class.v8::internal::torque::Declarable.base", [7 x i8], %"class.std::__1::unordered_map.112", %"struct.v8::internal::torque::SpecializationRequester" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.132", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { float }
%"struct.v8::internal::torque::SpecializationRequester" = type { %"struct.v8::internal::torque::SourcePosition", %"class.v8::internal::torque::Scope"*, %"class.std::__1::basic_string" }
%"struct.v8::internal::torque::SourcePosition" = type { %"class.v8::internal::torque::SourceId", %"struct.v8::internal::torque::LineAndColumn", %"struct.v8::internal::torque::LineAndColumn" }
%"class.v8::internal::torque::SourceId" = type { i32 }
%"struct.v8::internal::torque::LineAndColumn" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.60 }
%union.anon.60 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.v8::internal::torque::GenericTypeDeclaration" = type { %"struct.v8::internal::torque::Declaration", %"class.std::__1::vector.64", %"struct.v8::internal::torque::TypeDeclaration"* }
%"struct.v8::internal::torque::Declaration" = type { %"struct.v8::internal::torque::AstNode" }
%"struct.v8::internal::torque::AstNode" = type { i32 (...)**, i32, %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.v8::internal::torque::GenericParameter"*, %"struct.v8::internal::torque::GenericParameter"*, %"class.std::__1::__compressed_pair.71" }
%"struct.v8::internal::torque::GenericParameter" = type { %"struct.v8::internal::torque::Identifier"*, %"class.v8::base::Optional.66" }
%"struct.v8::internal::torque::Identifier" = type { %"struct.v8::internal::torque::AstNode", %"class.std::__1::basic_string" }
%"class.v8::base::Optional.66" = type { %"class.v8::base::internal::OptionalBase.67" }
%"class.v8::base::internal::OptionalBase.67" = type { %"struct.v8::base::internal::OptionalStorage.68" }
%"struct.v8::base::internal::OptionalStorage.68" = type { %"struct.v8::base::internal::OptionalStorageBase.69" }
%"struct.v8::base::internal::OptionalStorageBase.69" = type { i8, %union.anon.70 }
%union.anon.70 = type { %"struct.v8::internal::torque::TypeExpression"* }
%"struct.v8::internal::torque::TypeExpression" = type { %"struct.v8::internal::torque::AstNode" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.v8::internal::torque::GenericParameter"* }
%"struct.v8::internal::torque::TypeDeclaration" = type { %"struct.v8::internal::torque::Declaration", %"struct.v8::internal::torque::Identifier"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.76", %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.91", [4 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78", %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.v8::base::Optional.95" = type { %"class.v8::base::internal::OptionalBase.96" }
%"class.v8::base::internal::OptionalBase.96" = type { %"struct.v8::base::internal::OptionalStorage.97" }
%"struct.v8::base::internal::OptionalStorage.97" = type { %"struct.v8::base::internal::OptionalStorageBase.98" }
%"struct.v8::base::internal::OptionalStorageBase.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { %"class.std::__1::vector.100" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.v8::internal::torque::TypeConstraint"*, %"class.v8::internal::torque::TypeConstraint"*, %"class.std::__1::__compressed_pair.107" }
%"class.v8::internal::torque::TypeConstraint" = type { %"class.v8::base::Optional.102" }
%"class.v8::base::Optional.102" = type { %"class.v8::base::internal::OptionalBase.103" }
%"class.v8::base::internal::OptionalBase.103" = type { %"struct.v8::base::internal::OptionalStorage.104" }
%"struct.v8::base::internal::OptionalStorage.104" = type { %"struct.v8::base::internal::OptionalStorageBase.105" }
%"struct.v8::base::internal::OptionalStorageBase.105" = type { i8, %union.anon.106 }
%union.anon.106 = type { %"class.v8::internal::torque::Type"* }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.v8::internal::torque::TypeConstraint"* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.v8::internal::torque::Type"** }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"*, %"class.std::__1::__compressed_pair.23" }
%"class.v8::internal::torque::Instruction" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.v8::internal::torque::InstructionBase"* }
%"struct.v8::internal::torque::InstructionBase" = type <{ i32 (...)**, %"struct.v8::internal::torque::SourcePosition", [4 x i8] }>
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.v8::internal::torque::Instruction"* }
%"class.v8::base::Optional.28" = type { %"class.v8::base::internal::OptionalBase.29" }
%"class.v8::base::internal::OptionalBase.29" = type { %"struct.v8::base::internal::OptionalStorage.30" }
%"struct.v8::base::internal::OptionalStorage.30" = type { %"struct.v8::base::internal::OptionalStorageBase.31" }
%"struct.v8::base::internal::OptionalStorageBase.31" = type { i8, %union.anon.32 }
%union.anon.32 = type { %"class.v8::internal::torque::Stack" }
%"class.v8::internal::torque::Stack" = type { %"class.std::__1::vector.11" }
%"class.v8::base::Optional.33" = type { %"class.v8::base::internal::OptionalBase.34" }
%"class.v8::base::internal::OptionalBase.34" = type { %"struct.v8::base::internal::OptionalStorage.35" }
%"struct.v8::base::internal::OptionalStorage.35" = type { %"struct.v8::base::internal::OptionalStorageBase.36" }
%"struct.v8::base::internal::OptionalStorageBase.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"class.v8::internal::torque::Stack.38" }
%"class.v8::internal::torque::Stack.38" = type { %"class.std::__1::vector.39" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"*, %"class.std::__1::__compressed_pair.41" }
%"class.v8::internal::torque::DefinitionLocation" = type { i32, i8*, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.v8::internal::torque::DefinitionLocation"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.v8::internal::torque::UnionType" = type { %"class.v8::internal::torque::Type", %"class.std::__1::set.178" }
%"class.std::__1::set.178" = type { %"class.std::__1::__tree.179" }
%"class.std::__1::__tree.179" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__tree_node.190" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::torque::Type"* }
%"class.v8::internal::torque::MessageBuilder" = type { %"struct.v8::internal::torque::TorqueMessage", %"class.std::__1::vector.404" }
%"struct.v8::internal::torque::TorqueMessage" = type <{ %"class.std::__1::basic_string", %"class.v8::base::Optional.399", i32, [4 x i8] }>
%"class.v8::base::Optional.399" = type { %"class.v8::base::internal::OptionalBase.400" }
%"class.v8::base::internal::OptionalBase.400" = type { %"struct.v8::base::internal::OptionalStorage.401" }
%"struct.v8::base::internal::OptionalStorage.401" = type { %"struct.v8::base::internal::OptionalStorageBase.402" }
%"struct.v8::base::internal::OptionalStorageBase.402" = type { i8, %union.anon.403 }
%union.anon.403 = type { %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"*, %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.v8::internal::torque::TorqueMessage"* }
%"class.v8::internal::torque::CfgAssembler" = type { %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::ControlFlowGraph", %"class.v8::internal::torque::Block"* }
%"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope" = type { %"struct.v8::internal::torque::SourcePosition", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { i64*, i64*, %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { i64* }
%"struct.v8::internal::torque::GotoInstruction" = type { %"struct.v8::internal::torque::InstructionBase.base", %"class.v8::internal::torque::Block"* }
%"struct.v8::internal::torque::InstructionBase.base" = type <{ i32 (...)**, %"struct.v8::internal::torque::SourcePosition" }>
%"class.v8::internal::torque::Worklist" = type { %"class.std::__1::queue", %"class.std::__1::unordered_set" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.152" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"***, %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::torque::Block"*** }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.153" }
%"class.std::__1::__hash_table.153" = type <{ %"class.std::__1::unique_ptr.154", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base.157"** }
%"struct.std::__1::__hash_node_base.157" = type { %"struct.std::__1::__hash_node_base.157"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator.159" }
%"class.std::__1::__bucket_list_deallocator.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base.157" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395", %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node.381"* }
%"struct.std::__1::__hash_node.381" = type { %"struct.std::__1::__hash_node_base.157", i64, %"class.v8::internal::torque::Block"* }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.std::__1::__hash_node_destructor.397" }
%"class.std::__1::__hash_node_destructor.397" = type <{ %"class.std::__1::allocator.167"*, i8, [7 x i8] }>
%"class.std::__1::allocator.167" = type { i8 }
%"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope" = type { %"class.v8::internal::torque::TypeOracle", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* }
%"class.v8::internal::torque::TypeOracle" = type { %"class.v8::internal::torque::Deduplicator", %"class.std::__1::vector.219", %"class.v8::internal::torque::Deduplicator.226", %"class.std::__1::vector.252", %"class.std::__1::vector.265", %"class.std::__1::vector.326", %"class.std::__1::vector.252", %"class.std::__1::vector.353", i64 }
%"class.v8::internal::torque::Deduplicator" = type { %"class.std::__1::unordered_set.194" }
%"class.std::__1::unordered_set.194" = type { %"class.std::__1::__hash_table.195" }
%"class.std::__1::__hash_table.195" = type <{ %"class.std::__1::unique_ptr.196", %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.214", [4 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198", %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::__hash_node_base.199"** }
%"struct.std::__1::__hash_node_base.199" = type { %"struct.std::__1::__hash_node_base.199"* }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.std::__1::__bucket_list_deallocator.201" }
%"class.std::__1::__bucket_list_deallocator.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::__hash_node_base.199" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.v8::internal::torque::BuiltinPointerType"**, %"class.v8::internal::torque::BuiltinPointerType"**, %"class.std::__1::__compressed_pair.221" }
%"class.v8::internal::torque::BuiltinPointerType" = type { %"class.v8::internal::torque::Type", %"class.std::__1::vector.11", %"class.v8::internal::torque::Type"*, i64 }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::torque::BuiltinPointerType"** }
%"class.v8::internal::torque::Deduplicator.226" = type { %"class.std::__1::unordered_set.227" }
%"class.std::__1::unordered_set.227" = type { %"class.std::__1::__hash_table.228" }
%"class.std::__1::__hash_table.228" = type <{ %"class.std::__1::unique_ptr.229", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.247", [4 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base.232"** }
%"struct.std::__1::__hash_node_base.232" = type { %"struct.std::__1::__hash_node_base.232"* }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.std::__1::__bucket_list_deallocator.234" }
%"class.std::__1::__bucket_list_deallocator.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base.232" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"class.std::__1::unique_ptr.267"*, %"class.std::__1::unique_ptr.267"*, %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.v8::internal::torque::AggregateType"* }
%"class.v8::internal::torque::AggregateType" = type { %"class.v8::internal::torque::Type", i8, %"class.std::__1::vector.270", %"class.v8::internal::torque::Namespace"*, %"class.std::__1::basic_string", %"class.std::__1::vector.287" }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { %"struct.v8::internal::torque::Field"*, %"struct.v8::internal::torque::Field"*, %"class.std::__1::__compressed_pair.282" }
%"struct.v8::internal::torque::Field" = type <{ %"struct.v8::internal::torque::SourcePosition", [4 x i8], %"class.v8::internal::torque::AggregateType"*, %"class.v8::base::Optional.272", %"struct.v8::internal::torque::NameAndType", %"class.v8::base::Optional.277", i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.v8::base::Optional.272" = type { %"class.v8::base::internal::OptionalBase.273" }
%"class.v8::base::internal::OptionalBase.273" = type { %"struct.v8::base::internal::OptionalStorage.274" }
%"struct.v8::base::internal::OptionalStorage.274" = type { %"struct.v8::base::internal::OptionalStorageBase.275" }
%"struct.v8::base::internal::OptionalStorageBase.275" = type { i8, %union.anon.276 }
%union.anon.276 = type { %"struct.v8::internal::torque::ClassFieldIndexInfo" }
%"struct.v8::internal::torque::ClassFieldIndexInfo" = type { %"struct.v8::internal::torque::Expression"*, i8 }
%"struct.v8::internal::torque::Expression" = type { %"struct.v8::internal::torque::AstNode" }
%"struct.v8::internal::torque::NameAndType" = type { %"class.std::__1::basic_string", %"class.v8::internal::torque::Type"* }
%"class.v8::base::Optional.277" = type { %"class.v8::base::internal::OptionalBase.278" }
%"class.v8::base::internal::OptionalBase.278" = type { %"struct.v8::base::internal::OptionalStorage.279" }
%"struct.v8::base::internal::OptionalStorage.279" = type { %"struct.v8::base::internal::OptionalStorageBase.280" }
%"struct.v8::base::internal::OptionalStorageBase.280" = type { i8, %union.anon.281 }
%union.anon.281 = type { i64 }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.v8::internal::torque::Field"* }
%"class.v8::internal::torque::Namespace" = type { %"class.v8::internal::torque::Scope", %"class.std::__1::basic_string" }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"class.v8::internal::torque::Method"**, %"class.v8::internal::torque::Method"**, %"class.std::__1::__compressed_pair.313" }
%"class.v8::internal::torque::Method" = type { %"class.v8::internal::torque::TorqueMacro.base", %"class.v8::internal::torque::AggregateType"* }
%"class.v8::internal::torque::TorqueMacro.base" = type { %"class.v8::internal::torque::Macro.base", i8 }
%"class.v8::internal::torque::Macro.base" = type <{ %"class.v8::internal::torque::Callable", i8 }>
%"class.v8::internal::torque::Callable" = type { %"class.v8::internal::torque::Scope", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.v8::internal::torque::Signature", i64, %"class.v8::base::Optional.308" }
%"struct.v8::internal::torque::Signature" = type <{ %"class.std::__1::vector.289", %"class.v8::base::Optional.296", %"struct.v8::internal::torque::ParameterTypes", i64, %"class.v8::internal::torque::Type"*, %"class.std::__1::vector.301", i8, [7 x i8] }>
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.v8::internal::torque::Identifier"**, %"struct.v8::internal::torque::Identifier"**, %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.v8::internal::torque::Identifier"** }
%"class.v8::base::Optional.296" = type { %"class.v8::base::internal::OptionalBase.297" }
%"class.v8::base::internal::OptionalBase.297" = type { %"struct.v8::base::internal::OptionalStorage.298" }
%"struct.v8::base::internal::OptionalStorage.298" = type { %"struct.v8::base::internal::OptionalStorageBase.299" }
%"struct.v8::base::internal::OptionalStorageBase.299" = type { i8, %union.anon.300 }
%union.anon.300 = type { %"class.std::__1::basic_string" }
%"struct.v8::internal::torque::ParameterTypes" = type <{ %"class.std::__1::vector.11", i8, [7 x i8] }>
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { %"struct.v8::internal::torque::LabelDeclaration"*, %"struct.v8::internal::torque::LabelDeclaration"*, %"class.std::__1::__compressed_pair.303" }
%"struct.v8::internal::torque::LabelDeclaration" = type { %"struct.v8::internal::torque::Identifier"*, %"class.std::__1::vector.11" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.v8::internal::torque::LabelDeclaration"* }
%"class.v8::base::Optional.308" = type { %"class.v8::base::internal::OptionalBase.309" }
%"class.v8::base::internal::OptionalBase.309" = type { %"struct.v8::base::internal::OptionalStorage.310" }
%"struct.v8::base::internal::OptionalStorage.310" = type { %"struct.v8::base::internal::OptionalStorageBase.311" }
%"struct.v8::base::internal::OptionalStorageBase.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"struct.v8::internal::torque::Statement"* }
%"struct.v8::internal::torque::Statement" = type { %"struct.v8::internal::torque::AstNode" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.v8::internal::torque::Method"** }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.std::__1::unique_ptr.267"* }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"class.std::__1::unique_ptr.328"*, %"class.std::__1::unique_ptr.328"*, %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.v8::internal::torque::BitFieldStructType"* }
%"class.v8::internal::torque::BitFieldStructType" = type { %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Namespace"*, %"struct.v8::internal::torque::BitFieldStructDeclaration"*, %"class.std::__1::vector.338" }
%"struct.v8::internal::torque::BitFieldStructDeclaration" = type { %"struct.v8::internal::torque::TypeDeclaration", %"struct.v8::internal::torque::TypeExpression"*, %"class.std::__1::vector.331" }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"struct.v8::internal::torque::BitFieldDeclaration"*, %"struct.v8::internal::torque::BitFieldDeclaration"*, %"class.std::__1::__compressed_pair.333" }
%"struct.v8::internal::torque::BitFieldDeclaration" = type { %"struct.v8::internal::torque::NameAndTypeExpression", i32 }
%"struct.v8::internal::torque::NameAndTypeExpression" = type { %"struct.v8::internal::torque::Identifier"*, %"struct.v8::internal::torque::TypeExpression"* }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.v8::internal::torque::BitFieldDeclaration"* }
%"class.std::__1::vector.338" = type { %"class.std::__1::__vector_base.339" }
%"class.std::__1::__vector_base.339" = type { %"struct.v8::internal::torque::BitField"*, %"struct.v8::internal::torque::BitField"*, %"class.std::__1::__compressed_pair.340" }
%"struct.v8::internal::torque::BitField" = type { %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::NameAndType", i32, i32 }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.v8::internal::torque::BitField"* }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.std::__1::unique_ptr.328"* }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"class.std::__1::unique_ptr.254"*, %"class.std::__1::unique_ptr.254"*, %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.v8::internal::torque::Type"* }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::unique_ptr.254"* }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"class.std::__1::unique_ptr.355"*, %"class.std::__1::unique_ptr.355"*, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::unique_ptr.355" = type opaque
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.std::__1::unique_ptr.355"* }
%"class.std::length_error" = type { %"class.std::logic_error" }
%"class.std::logic_error" = type { %"class.std::exception", %"class.std::__1::__libcpp_refstring" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__1::__libcpp_refstring" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2v88internal6torque10TypeOracle12GetUnionTypeEPKNS1_4TypeES5_ = comdat any

$_ZN2v88internal6torque5StackIPKNS1_4TypeEE4PushES5_ = comdat any

$_ZN2v88internal6torque5Block6RetypeEv = comdat any

$_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_ = comdat any

$_ZN2v88internal6torque16ControlFlowGraph10PlaceBlockEPNS1_5BlockE = comdat any

$_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE = comdat any

$_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_ = comdat any

$_ZN2v88internal6torque5Block21MergeInputDefinitionsERKNS1_5StackINS1_18DefinitionLocationEEEPNS1_8WorklistIPS2_EE = comdat any

$_ZN2v88internal6torque8WorklistIPNS1_5BlockEE7DequeueEv = comdat any

$_ZN2v88internal6torque8WorklistIPNS1_5BlockEED2Ev = comdat any

$_ZN2v88internal6torque9UnionType6ExtendEPKNS1_4TypeE = comdat any

$_ZN2v88internal6torque10TypeOracle12GetUnionTypeENS1_9UnionTypeE = comdat any

$_ZN2v88internal6torque9UnionTypeC2EPKNS1_4TypeE = comdat any

$_ZNSt3__13setIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEEC2ERKSA_ = comdat any

$__clang_call_terminate = comdat any

$_ZNSt3__120__throw_length_errorEPKc = comdat any

$_ZNSt12length_errorC2EPKc = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN2v88internal6torque7EraseIfINSt3__13setIPKNS1_4TypeENS1_8TypeLessENS3_9allocatorIS7_EEEEZNS1_9UnionType6ExtendES7_EUlS7_E_EEvPT_T0_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIPKN2v88internal6torque4TypeENS_9allocatorIS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_ = comdat any

$_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_ = comdat any

$_ZNSt3__15dequeIPN2v88internal6torque5BlockENS_9allocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal6torque5BlockENS_9allocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal6torque5BlockENS_9allocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej = comdat any

$_ZN2v88internal6torque14MessageBuilderD2Ev = comdat any

$_ZN2v88internal6torque8ToStringIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_ = comdat any

$_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev = comdat any

$_ZN2v88internal6torque13TorqueMessageD2Ev = comdat any

$_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE12__move_rangeEPS4_S8_S8_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE = comdat any

@.str = private unnamed_addr constant [31 x i8] c"incompatible types at branch:\0A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"/*missing*/\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"   =>   \00", align 1
@_ZTVN2v88internal6torque9UnionTypeE = external unnamed_addr constant { [19 x i8*] }, align 8
@.str.5 = private unnamed_addr constant [68 x i8] c"allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size\00", align 1
@_ZTISt12length_error = external constant i8*
@_ZTVSt12length_error = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN2v88internal6torque4TypeE = external unnamed_addr constant { [19 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVN2v88internal6torque15GotoInstructionE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN2v88internal6torque22DeleteRangeInstructionE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN2v88internal6torque17BranchInstructionE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN2v88internal6torque15PeekInstructionE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN2v88internal6torque15PokeInstructionE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN2v88internal6torque30PrintConstantStringInstructionE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN2v88internal6torque16AbortInstructionE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZN2v88internal6torque15GotoInstruction5kKindE = external local_unnamed_addr constant i32, align 4
@_ZN2v88internal6torque22DeleteRangeInstruction5kKindE = external local_unnamed_addr constant i32, align 4
@_ZN2v88internal6torque17BranchInstruction5kKindE = external local_unnamed_addr constant i32, align 4
@_ZN2v88internal6torque15PeekInstruction5kKindE = external local_unnamed_addr constant i32, align 4
@_ZN2v88internal6torque15PokeInstruction5kKindE = external local_unnamed_addr constant i32, align 4
@_ZN2v88internal6torque30PrintConstantStringInstruction5kKindE = external local_unnamed_addr constant i32, align 4
@_ZN2v88internal6torque16AbortInstruction5kKindE = external local_unnamed_addr constant i32, align 4

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque5Block13SetInputTypesERKNS1_5StackIPKNS1_4TypeEEE(%"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Stack"* dereferenceable(24)) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.v8::internal::torque::Stack", align 8
  %7 = alloca %"class.std::__1::basic_stringstream", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %11, label %13, label %65

13:                                               ; preds = %2
  %14 = bitcast %"class.v8::internal::torque::Stack"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #14
  %15 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::torque::Type"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::torque::Stack"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %64, label %23

23:                                               ; preds = %13
  %24 = icmp ugt i64 %21, 2305843009213693951
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = bitcast %"class.v8::internal::torque::Stack"* %12 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #15
          to label %27 unwind label %52

27:                                               ; preds = %25
  unreachable

28:                                               ; preds = %23
  %29 = invoke i8* @_Znwm(i64 %20) #16
          to label %30 unwind label %52

30:                                               ; preds = %28
  %31 = bitcast i8* %29 to %"class.v8::internal::torque::Type"**
  %32 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.v8::internal::torque::Type"*** %32 to i8**
  store i8* %29, i8** %33, align 8
  %34 = bitcast %"class.v8::internal::torque::Stack"* %12 to i8**
  store i8* %29, i8** %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %31, i64 %21
  %36 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::torque::Type"** %35, %"class.v8::internal::torque::Type"*** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %1, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %37, align 8
  %39 = load i64, i64* %16, align 8
  %40 = bitcast %"class.v8::internal::torque::Type"*** %32 to i64*
  %41 = ptrtoint i8* %29 to i64
  %42 = ptrtoint %"class.v8::internal::torque::Type"** %38 to i64
  %43 = sub i64 %39, %42
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %30
  %46 = lshr exact i64 %43, 3
  %47 = bitcast %"class.v8::internal::torque::Type"** %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %47, i64 %43, i1 false) #14
  %48 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %31, i64 %46
  %49 = ptrtoint %"class.v8::internal::torque::Type"** %48 to i64
  br label %50

50:                                               ; preds = %45, %30
  %51 = phi i64 [ %49, %45 ], [ %41, %30 ]
  store i64 %51, i64* %40, align 8
  br label %64

52:                                               ; preds = %28, %25
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %12, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %54, align 8
  %56 = icmp eq %"class.v8::internal::torque::Type"** %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = ptrtoint %"class.v8::internal::torque::Type"** %55 to i64
  %59 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %"class.v8::internal::torque::Type"*** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"class.v8::internal::torque::Type"** %55 to i8*
  tail call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %52, %57
  %63 = extractvalue { i8*, i32 } %53, 0
  tail call void @__clang_call_terminate(i8* %63) #18
  unreachable

64:                                               ; preds = %50, %13
  store i8 1, i8* %9, align 8
  br label %456

65:                                               ; preds = %2
  %66 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.v8::internal::torque::Type"*** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.v8::internal::torque::Stack"* %12 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %1, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.v8::internal::torque::Type"*** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.v8::internal::torque::Stack"* %1 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = icmp eq i64 %71, %77
  %79 = inttoptr i64 %70 to %"class.v8::internal::torque::Type"**
  %80 = inttoptr i64 %68 to %"class.v8::internal::torque::Type"**
  %81 = inttoptr i64 %76 to %"class.v8::internal::torque::Type"**
  br i1 %78, label %82, label %94

82:                                               ; preds = %65
  %83 = icmp eq %"class.v8::internal::torque::Type"** %79, %80
  br i1 %83, label %456, label %84

84:                                               ; preds = %82, %90
  %85 = phi %"class.v8::internal::torque::Type"** [ %92, %90 ], [ %81, %82 ]
  %86 = phi %"class.v8::internal::torque::Type"** [ %91, %90 ], [ %79, %82 ]
  %87 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %86, align 8
  %88 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %85, align 8
  %89 = icmp eq %"class.v8::internal::torque::Type"* %87, %88
  br i1 %89, label %90, label %94

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %86, i64 1
  %92 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %85, i64 1
  %93 = icmp eq %"class.v8::internal::torque::Type"** %91, %80
  br i1 %93, label %456, label %84

94:                                               ; preds = %84, %65
  %95 = bitcast %"class.v8::internal::torque::Stack"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 24, i1 false) #14
  %96 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %12, i64 0, i32 0, i32 0, i32 0
  %97 = ashr exact i64 %71, 3
  %98 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %79, i64 %97
  %99 = icmp eq i64 %71, 0
  br i1 %99, label %113, label %129

100:                                              ; preds = %148
  %101 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %6, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.v8::internal::torque::Type"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.v8::internal::torque::Stack"* %6 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %67, align 8
  %107 = load i64, i64* %69, align 8
  %108 = inttoptr i64 %105 to %"class.v8::internal::torque::Type"**
  %109 = inttoptr i64 %103 to %"class.v8::internal::torque::Type"**
  %110 = sub i64 %106, %107
  %111 = ashr exact i64 %110, 3
  %112 = and i8 %149, 1
  br label %113

113:                                              ; preds = %94, %100
  %114 = phi i64 [ %111, %100 ], [ 0, %94 ]
  %115 = phi %"class.v8::internal::torque::Type"** [ %108, %100 ], [ null, %94 ]
  %116 = phi %"class.v8::internal::torque::Type"** [ %109, %100 ], [ null, %94 ]
  %117 = phi i64 [ %105, %100 ], [ 0, %94 ]
  %118 = phi i64 [ %103, %100 ], [ 0, %94 ]
  %119 = phi i8 [ %112, %100 ], [ 0, %94 ]
  %120 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %6, i64 0, i32 0, i32 0, i32 1
  %121 = bitcast %"class.v8::internal::torque::Type"*** %120 to i64*
  %122 = sub i64 %118, %117
  %123 = ashr exact i64 %122, 3
  %124 = icmp eq i64 %123, %114
  br i1 %124, label %152, label %212

125:                                              ; preds = %201
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = extractvalue { i8*, i32 } %126, 1
  br label %442

129:                                              ; preds = %94, %148
  %130 = phi i8 [ %149, %148 ], [ 0, %94 ]
  %131 = phi %"class.v8::internal::torque::Type"** [ %134, %148 ], [ %81, %94 ]
  %132 = phi %"class.v8::internal::torque::Type"** [ %150, %148 ], [ %79, %94 ]
  %133 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %131, i64 1
  %135 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %131, align 8
  %136 = invoke %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque10TypeOracle12GetUnionTypeEPKNS1_4TypeES5_(%"class.v8::internal::torque::Type"* %133, %"class.v8::internal::torque::Type"* %135)
          to label %137 unwind label %144

137:                                              ; preds = %129
  %138 = bitcast %"class.v8::internal::torque::Type"* %136 to i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)***
  %139 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)**, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*** %138, align 8
  %140 = getelementptr inbounds i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %139, i64 2
  %141 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %140, align 8
  %142 = invoke zeroext i1 %141(%"class.v8::internal::torque::Type"* %136, %"class.v8::internal::torque::Type"* %133)
          to label %143 unwind label %144

143:                                              ; preds = %137
  invoke void @_ZN2v88internal6torque5StackIPKNS1_4TypeEE4PushES5_(%"class.v8::internal::torque::Stack"* nonnull %6, %"class.v8::internal::torque::Type"* %136)
          to label %148 unwind label %144

144:                                              ; preds = %143, %137, %129
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  %147 = extractvalue { i8*, i32 } %145, 1
  br label %442

148:                                              ; preds = %143
  %149 = select i1 %142, i8 %130, i8 1
  %150 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %132, i64 1
  %151 = icmp eq %"class.v8::internal::torque::Type"** %150, %98
  br i1 %151, label %100, label %129

152:                                              ; preds = %113
  %153 = icmp eq i8 %119, 0
  br i1 %153, label %205, label %154

154:                                              ; preds = %152
  %155 = load i8, i8* %9, align 8, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %154
  %158 = icmp eq %"class.v8::internal::torque::Stack"* %12, %6
  br i1 %158, label %201, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %12, i64 0, i32 0
  invoke void @_ZNSt3__16vectorIPKN2v88internal6torque4TypeENS_9allocatorIS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector.11"* %160, %"class.v8::internal::torque::Type"** %115, %"class.v8::internal::torque::Type"** %116)
          to label %201 unwind label %196

161:                                              ; preds = %154
  %162 = bitcast %"class.v8::internal::torque::Stack"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #14
  %163 = icmp eq i64 %122, 0
  br i1 %163, label %195, label %164

164:                                              ; preds = %161
  %165 = icmp ugt i64 %123, 2305843009213693951
  br i1 %165, label %166, label %169

166:                                              ; preds = %164
  %167 = bitcast %"class.v8::internal::torque::Stack"* %12 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #15
          to label %168 unwind label %188

168:                                              ; preds = %166
  unreachable

169:                                              ; preds = %164
  %170 = invoke i8* @_Znwm(i64 %122) #16
          to label %171 unwind label %188

171:                                              ; preds = %169
  %172 = bitcast i8* %170 to %"class.v8::internal::torque::Type"**
  %173 = bitcast %"class.v8::internal::torque::Type"*** %66 to i8**
  store i8* %170, i8** %173, align 8
  %174 = bitcast %"class.v8::internal::torque::Stack"* %12 to i8**
  store i8* %170, i8** %174, align 8
  %175 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %172, i64 %123
  %176 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::torque::Type"** %175, %"class.v8::internal::torque::Type"*** %176, align 8
  %177 = ptrtoint i8* %170 to i64
  %178 = ptrtoint %"class.v8::internal::torque::Type"** %115 to i64
  %179 = sub i64 %118, %178
  %180 = icmp sgt i64 %179, 0
  br i1 %180, label %181, label %186

181:                                              ; preds = %171
  %182 = lshr exact i64 %179, 3
  %183 = bitcast %"class.v8::internal::torque::Type"** %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %170, i8* align 8 %183, i64 %179, i1 false) #14
  %184 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %172, i64 %182
  %185 = ptrtoint %"class.v8::internal::torque::Type"** %184 to i64
  br label %186

186:                                              ; preds = %181, %171
  %187 = phi i64 [ %185, %181 ], [ %177, %171 ]
  store i64 %187, i64* %67, align 8
  br label %195

188:                                              ; preds = %169, %166
  %189 = landingpad { i8*, i32 }
          catch i8* null
  %190 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %96, align 8
  %191 = icmp eq %"class.v8::internal::torque::Type"** %190, null
  br i1 %191, label %198, label %192

192:                                              ; preds = %188
  %193 = ptrtoint %"class.v8::internal::torque::Type"** %190 to i64
  store i64 %193, i64* %67, align 8
  %194 = bitcast %"class.v8::internal::torque::Type"** %190 to i8*
  call void @_ZdlPv(i8* %194) #17
  br label %198

195:                                              ; preds = %161, %186
  store i8 1, i8* %9, align 8
  br label %201

196:                                              ; preds = %159
  %197 = landingpad { i8*, i32 }
          catch i8* null
  br label %198

198:                                              ; preds = %188, %192, %196
  %199 = phi { i8*, i32 } [ %197, %196 ], [ %189, %192 ], [ %189, %188 ]
  %200 = extractvalue { i8*, i32 } %199, 0
  call void @__clang_call_terminate(i8* %200) #18
  unreachable

201:                                              ; preds = %195, %157, %159
  invoke void @_ZN2v88internal6torque5Block6RetypeEv(%"class.v8::internal::torque::Block"* %0)
          to label %202 unwind label %125

202:                                              ; preds = %201
  %203 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %6, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %203, align 8
  br label %205

205:                                              ; preds = %202, %152
  %206 = phi %"class.v8::internal::torque::Type"** [ %204, %202 ], [ %115, %152 ]
  %207 = icmp eq %"class.v8::internal::torque::Type"** %206, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %205
  %209 = ptrtoint %"class.v8::internal::torque::Type"** %206 to i64
  store i64 %209, i64* %121, align 8
  %210 = bitcast %"class.v8::internal::torque::Type"** %206 to i8*
  call void @_ZdlPv(i8* %210) #17
  br label %211

211:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #14
  br label %456

212:                                              ; preds = %113
  %213 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %213) #14
  invoke void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %7, i32 24)
          to label %214 unwind label %250

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1
  %216 = bitcast %"class.std::__1::basic_ostream.base"* %215 to %"class.std::__1::basic_ostream"*
  %217 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i64 30)
          to label %218 unwind label %254

218:                                              ; preds = %214
  %219 = load i64, i64* %67, align 8
  %220 = load i64, i64* %69, align 8
  %221 = sub i64 %219, %220
  %222 = ashr exact i64 %221, 3
  %223 = load i64, i64* %73, align 8
  %224 = load i64, i64* %75, align 8
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 3
  %227 = icmp ult i64 %222, %226
  %228 = select i1 %227, i64 %226, i64 %222
  %229 = icmp sgt i64 %228, 0
  br i1 %229, label %230, label %247

230:                                              ; preds = %218
  %231 = add nsw i64 %228, -1
  %232 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %233 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %233, i64 0, i32 1, i32 0
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %237 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %238 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %242 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %243 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %243, i64 0, i32 1, i32 0
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %258

247:                                              ; preds = %380, %218
  %248 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #14
  %249 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %249)
          to label %390 unwind label %392

250:                                              ; preds = %212
  %251 = landingpad { i8*, i32 }
          cleanup
  %252 = extractvalue { i8*, i32 } %251, 0
  %253 = extractvalue { i8*, i32 } %251, 1
  br label %439

254:                                              ; preds = %214
  %255 = landingpad { i8*, i32 }
          cleanup
  %256 = extractvalue { i8*, i32 } %255, 0
  %257 = extractvalue { i8*, i32 } %255, 1
  br label %410

258:                                              ; preds = %383, %230
  %259 = phi i64 [ %224, %230 ], [ %385, %383 ]
  %260 = phi i64 [ %223, %230 ], [ %384, %383 ]
  %261 = phi i64 [ %231, %230 ], [ %381, %383 ]
  %262 = phi i64 [ undef, %230 ], [ %278, %383 ]
  %263 = phi i64 [ undef, %230 ], [ %291, %383 ]
  %264 = and i64 %262, -256
  %265 = and i64 %263, -256
  %266 = sub i64 %260, %259
  %267 = ashr exact i64 %266, 3
  %268 = icmp ult i64 %261, %267
  br i1 %268, label %269, label %276

269:                                              ; preds = %258
  %270 = inttoptr i64 %259 to %"class.v8::internal::torque::Type"**
  %271 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %270, i64 %261
  %272 = bitcast %"class.v8::internal::torque::Type"** %271 to i64*
  %273 = load i64, i64* %272, align 8
  br label %276

274:                                              ; preds = %321, %299, %323, %346, %348, %352, %376, %378
  %275 = landingpad { i8*, i32 }
          cleanup
  br label %386

276:                                              ; preds = %269, %258
  %277 = phi i8 [ 1, %269 ], [ 0, %258 ]
  %278 = phi i64 [ %273, %269 ], [ %264, %258 ]
  %279 = load i64, i64* %67, align 8
  %280 = load i64, i64* %69, align 8
  %281 = sub i64 %279, %280
  %282 = ashr exact i64 %281, 3
  %283 = icmp ult i64 %261, %282
  br i1 %283, label %284, label %289

284:                                              ; preds = %276
  %285 = inttoptr i64 %280 to %"class.v8::internal::torque::Type"**
  %286 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %285, i64 %261
  %287 = bitcast %"class.v8::internal::torque::Type"** %286 to i64*
  %288 = load i64, i64* %287, align 8
  br label %289

289:                                              ; preds = %284, %276
  %290 = phi i8 [ 1, %284 ], [ 0, %276 ]
  %291 = phi i64 [ %288, %284 ], [ %265, %276 ]
  %292 = icmp eq i8 %277, 0
  br i1 %292, label %346, label %293

293:                                              ; preds = %289
  %294 = icmp ne i8 %290, 0
  %295 = inttoptr i64 %278 to %"class.v8::internal::torque::Type"*
  %296 = inttoptr i64 %291 to %"class.v8::internal::torque::Type"*
  %297 = icmp eq %"class.v8::internal::torque::Type"* %295, %296
  %298 = and i1 %294, %297
  br i1 %298, label %299, label %323

299:                                              ; preds = %293
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #14
  invoke void @_ZNK2v88internal6torque4Type8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.v8::internal::torque::Type"* %295)
          to label %300 unwind label %274

300:                                              ; preds = %299
  %301 = load i8, i8* %234, align 1
  %302 = icmp slt i8 %301, 0
  %303 = load i8*, i8** %235, align 8
  %304 = load i64, i64* %236, align 8
  %305 = zext i8 %301 to i64
  %306 = select i1 %302, i8* %303, i8* %232
  %307 = select i1 %302, i64 %304, i64 %305
  %308 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* %306, i64 %307)
          to label %309 unwind label %314

309:                                              ; preds = %300
  %310 = load i8, i8* %234, align 1
  %311 = icmp slt i8 %310, 0
  br i1 %311, label %312, label %321

312:                                              ; preds = %309
  %313 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %313) #17
  br label %321

314:                                              ; preds = %300
  %315 = landingpad { i8*, i32 }
          cleanup
  %316 = load i8, i8* %234, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %314
  %319 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %319) #17
  br label %320

320:                                              ; preds = %318, %314
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #14
  br label %386

321:                                              ; preds = %312, %309
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #14
  %322 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1)
          to label %380 unwind label %274

323:                                              ; preds = %293
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #14
  invoke void @_ZNK2v88internal6torque4Type8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.v8::internal::torque::Type"* %295)
          to label %324 unwind label %274

324:                                              ; preds = %323
  %325 = load i8, i8* %239, align 1
  %326 = icmp slt i8 %325, 0
  %327 = load i8*, i8** %240, align 8
  %328 = load i64, i64* %241, align 8
  %329 = zext i8 %325 to i64
  %330 = select i1 %326, i8* %327, i8* %237
  %331 = select i1 %326, i64 %328, i64 %329
  %332 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* %330, i64 %331)
          to label %333 unwind label %338

333:                                              ; preds = %324
  %334 = load i8, i8* %239, align 1
  %335 = icmp slt i8 %334, 0
  br i1 %335, label %336, label %345

336:                                              ; preds = %333
  %337 = load i8*, i8** %240, align 8
  call void @_ZdlPv(i8* %337) #17
  br label %345

338:                                              ; preds = %324
  %339 = landingpad { i8*, i32 }
          cleanup
  %340 = load i8, i8* %239, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %344

342:                                              ; preds = %338
  %343 = load i8*, i8** %240, align 8
  call void @_ZdlPv(i8* %343) #17
  br label %344

344:                                              ; preds = %342, %338
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #14
  br label %386

345:                                              ; preds = %333, %336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #14
  br label %348

346:                                              ; preds = %289
  %347 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11)
          to label %348 unwind label %274

348:                                              ; preds = %346, %345
  %349 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8)
          to label %350 unwind label %274

350:                                              ; preds = %348
  %351 = icmp eq i8 %290, 0
  br i1 %351, label %376, label %352

352:                                              ; preds = %350
  %353 = inttoptr i64 %291 to %"class.v8::internal::torque::Type"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #14
  invoke void @_ZNK2v88internal6torque4Type8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.v8::internal::torque::Type"* %353)
          to label %354 unwind label %274

354:                                              ; preds = %352
  %355 = load i8, i8* %244, align 1
  %356 = icmp slt i8 %355, 0
  %357 = load i8*, i8** %245, align 8
  %358 = load i64, i64* %246, align 8
  %359 = zext i8 %355 to i64
  %360 = select i1 %356, i8* %357, i8* %242
  %361 = select i1 %356, i64 %358, i64 %359
  %362 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* %360, i64 %361)
          to label %363 unwind label %368

363:                                              ; preds = %354
  %364 = load i8, i8* %244, align 1
  %365 = icmp slt i8 %364, 0
  br i1 %365, label %366, label %375

366:                                              ; preds = %363
  %367 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %367) #17
  br label %375

368:                                              ; preds = %354
  %369 = landingpad { i8*, i32 }
          cleanup
  %370 = load i8, i8* %244, align 1
  %371 = icmp slt i8 %370, 0
  br i1 %371, label %372, label %374

372:                                              ; preds = %368
  %373 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %373) #17
  br label %374

374:                                              ; preds = %372, %368
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #14
  br label %386

375:                                              ; preds = %363, %366
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #14
  br label %378

376:                                              ; preds = %350
  %377 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11)
          to label %378 unwind label %274

378:                                              ; preds = %376, %375
  %379 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1)
          to label %380 unwind label %274

380:                                              ; preds = %378, %321
  %381 = add i64 %261, -1
  %382 = icmp sgt i64 %381, -1
  br i1 %382, label %383, label %247

383:                                              ; preds = %380
  %384 = load i64, i64* %73, align 8
  %385 = load i64, i64* %75, align 8
  br label %258

386:                                              ; preds = %374, %274, %320, %344
  %387 = phi { i8*, i32 } [ %369, %374 ], [ %339, %344 ], [ %275, %274 ], [ %315, %320 ]
  %388 = extractvalue { i8*, i32 } %387, 0
  %389 = extractvalue { i8*, i32 } %387, 1
  br label %410

390:                                              ; preds = %247
  invoke void @_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #15
          to label %391 unwind label %396

391:                                              ; preds = %390
  unreachable

392:                                              ; preds = %247
  %393 = landingpad { i8*, i32 }
          cleanup
  %394 = extractvalue { i8*, i32 } %393, 0
  %395 = extractvalue { i8*, i32 } %393, 1
  br label %407

396:                                              ; preds = %390
  %397 = landingpad { i8*, i32 }
          cleanup
  %398 = extractvalue { i8*, i32 } %397, 0
  %399 = extractvalue { i8*, i32 } %397, 1
  %400 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %401 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %400, i64 0, i32 1, i32 0
  %402 = load i8, i8* %401, align 1
  %403 = icmp slt i8 %402, 0
  br i1 %403, label %404, label %407

404:                                              ; preds = %396
  %405 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = load i8*, i8** %405, align 8
  call void @_ZdlPv(i8* %406) #17
  br label %407

407:                                              ; preds = %404, %396, %392
  %408 = phi i32 [ %395, %392 ], [ %399, %396 ], [ %399, %404 ]
  %409 = phi i8* [ %394, %392 ], [ %398, %396 ], [ %398, %404 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #14
  br label %410

410:                                              ; preds = %386, %407, %254
  %411 = phi i32 [ %408, %407 ], [ %257, %254 ], [ %389, %386 ]
  %412 = phi i8* [ %409, %407 ], [ %256, %254 ], [ %388, %386 ]
  %413 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %414 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  store i64 %413, i64* %414, align 8
  %415 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %416 = inttoptr i64 %413 to i8*
  %417 = getelementptr i8, i8* %416, i64 -24
  %418 = bitcast i8* %417 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = getelementptr inbounds i8, i8* %213, i64 %419
  %421 = bitcast i8* %420 to i64*
  store i64 %415, i64* %421, align 8
  %422 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %423 = bitcast %"class.std::__1::basic_ostream.base"* %215 to i64*
  store i64 %422, i64* %423, align 8
  %424 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  %425 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %424, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %425, align 8
  %426 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %427 = bitcast %"class.std::__1::basic_string"* %426 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %428 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %427, i64 0, i32 1, i32 0
  %429 = load i8, i8* %428, align 1
  %430 = icmp slt i8 %429, 0
  br i1 %430, label %431, label %434

431:                                              ; preds = %410
  %432 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %426, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load i8*, i8** %432, align 8
  call void @_ZdlPv(i8* %433) #17
  br label %434

434:                                              ; preds = %410, %431
  %435 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %424, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %435) #14
  %436 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %436, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #14
  %437 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %438 = bitcast %"class.std::__1::basic_ios.base"* %437 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %438) #14
  br label %439

439:                                              ; preds = %434, %250
  %440 = phi i32 [ %411, %434 ], [ %253, %250 ]
  %441 = phi i8* [ %412, %434 ], [ %252, %250 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %213) #14
  br label %442

442:                                              ; preds = %439, %144, %125
  %443 = phi i32 [ %147, %144 ], [ %128, %125 ], [ %440, %439 ]
  %444 = phi i8* [ %146, %144 ], [ %127, %125 ], [ %441, %439 ]
  %445 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %6, i64 0, i32 0, i32 0, i32 0
  %446 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %445, align 8
  %447 = icmp eq %"class.v8::internal::torque::Type"** %446, null
  br i1 %447, label %453, label %448

448:                                              ; preds = %442
  %449 = ptrtoint %"class.v8::internal::torque::Type"** %446 to i64
  %450 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %6, i64 0, i32 0, i32 0, i32 1
  %451 = bitcast %"class.v8::internal::torque::Type"*** %450 to i64*
  store i64 %449, i64* %451, align 8
  %452 = bitcast %"class.v8::internal::torque::Type"** %446 to i8*
  call void @_ZdlPv(i8* %452) #17
  br label %453

453:                                              ; preds = %442, %448
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #14
  %454 = insertvalue { i8*, i32 } undef, i8* %444, 0
  %455 = insertvalue { i8*, i32 } %454, i32 %443, 1
  resume { i8*, i32 } %455

456:                                              ; preds = %90, %82, %211, %64
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque10TypeOracle12GetUnionTypeEPKNS1_4TypeES5_(%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.v8::internal::torque::UnionType", align 8
  %4 = alloca %"class.v8::internal::torque::UnionType", align 8
  %5 = bitcast %"class.v8::internal::torque::Type"* %0 to i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)***
  %6 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)**, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %6, i64 2
  %8 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.v8::internal::torque::Type"* %0, %"class.v8::internal::torque::Type"* %1)
  br i1 %9, label %173, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::internal::torque::Type"* %1 to i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)***
  %12 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)**, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %12, i64 2
  %14 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.v8::internal::torque::Type"* %1, %"class.v8::internal::torque::Type"* %0)
  br i1 %15, label %173, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.v8::internal::torque::UnionType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %17) #14
  %18 = icmp eq %"class.v8::internal::torque::Type"* %0, null
  br i1 %18, label %48, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %0, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8, !noalias !3
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %23, label %48

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0
  call void @_ZN2v88internal6torque4TypeC2ERKS2_(%"class.v8::internal::torque::Type"* nonnull %24, %"class.v8::internal::torque::Type"* nonnull dereferenceable(104) %0) #14
  %25 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8, !alias.scope !3
  %26 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %0, i64 1
  %28 = bitcast %"class.v8::internal::torque::Type"* %27 to %"class.std::__1::set.178"*
  invoke void @_ZNSt3__13setIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEEC2ERKSA_(%"class.std::__1::set.178"* %26, %"class.std::__1::set.178"* dereferenceable(24) %28)
          to label %49 unwind label %29

29:                                               ; preds = %23
  %30 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8, !alias.scope !3
  %31 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !2, !alias.scope !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %35, align 8, !alias.scope !3
  %37 = icmp eq %"class.v8::internal::torque::Type"** %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = ptrtoint %"class.v8::internal::torque::Type"** %36 to i64
  %40 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %41 = bitcast %"class.v8::internal::torque::Type"*** %40 to i64*
  store i64 %39, i64* %41, align 8, !alias.scope !3
  %42 = bitcast %"class.v8::internal::torque::Type"** %36 to i8*
  call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %38, %34, %29
  %44 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 2, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node.190"**
  %47 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %46, align 8, !alias.scope !3
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %44, %"class.std::__1::__tree_node.190"* %47) #14
  resume { i8*, i32 } %30

48:                                               ; preds = %19, %16
  call void @_ZN2v88internal6torque9UnionTypeC2EPKNS1_4TypeE(%"class.v8::internal::torque::UnionType"* nonnull %3, %"class.v8::internal::torque::Type"* %0)
  br label %49

49:                                               ; preds = %23, %48
  invoke void @_ZN2v88internal6torque9UnionType6ExtendEPKNS1_4TypeE(%"class.v8::internal::torque::UnionType"* nonnull %3, %"class.v8::internal::torque::Type"* %1)
          to label %50 unwind label %118

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0
  call void @_ZN2v88internal6torque4TypeC2ERKS2_(%"class.v8::internal::torque::Type"* nonnull %51, %"class.v8::internal::torque::Type"* nonnull dereferenceable(104) %52) #14
  %53 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 1
  %55 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 1
  %56 = bitcast %"class.std::__1::set.178"* %55 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 8
  %58 = bitcast %"class.std::__1::set.178"* %54 to <2 x i64>*
  store <2 x i64> %57, <2 x i64>* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  %63 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  br i1 %62, label %64, label %66

64:                                               ; preds = %50
  %65 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %54, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %65, align 8
  br label %73

66:                                               ; preds = %50
  %67 = extractelement <2 x i64> %57, i32 1
  %68 = inttoptr i64 %67 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %55, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %68, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %69, align 8
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 16, i1 false) #14
  br label %73

73:                                               ; preds = %64, %66
  %74 = invoke %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque10TypeOracle12GetUnionTypeENS1_9UnionTypeE(%"class.v8::internal::torque::UnionType"* nonnull %4)
          to label %75 unwind label %122

75:                                               ; preds = %73
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %76 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 1, i32 0
  %77 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::__tree_node"**
  %78 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %77, align 8
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %76, %"class.std::__1::__tree_node"* %78) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %79 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %91, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %84 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %83, align 8
  %85 = icmp eq %"class.v8::internal::torque::Type"** %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = ptrtoint %"class.v8::internal::torque::Type"** %84 to i64
  %88 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %89 = bitcast %"class.v8::internal::torque::Type"*** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = bitcast %"class.v8::internal::torque::Type"** %84 to i8*
  call void @_ZdlPv(i8* %90) #17
  br label %91

91:                                               ; preds = %75, %82, %86
  %92 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 2, i32 0
  %93 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"class.std::__1::__tree_node.190"**
  %95 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %94, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %92, %"class.std::__1::__tree_node.190"* %95) #14
  %96 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node"**
  %100 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %99, align 8
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %97, %"class.std::__1::__tree_node"* %100) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %101 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %113, label %104

104:                                              ; preds = %91
  %105 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %106 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %105, align 8
  %107 = icmp eq %"class.v8::internal::torque::Type"** %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = ptrtoint %"class.v8::internal::torque::Type"** %106 to i64
  %110 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %111 = bitcast %"class.v8::internal::torque::Type"*** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = bitcast %"class.v8::internal::torque::Type"** %106 to i8*
  call void @_ZdlPv(i8* %112) #17
  br label %113

113:                                              ; preds = %91, %104, %108
  %114 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 2, i32 0
  %115 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to %"class.std::__1::__tree_node.190"**
  %117 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %116, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %114, %"class.std::__1::__tree_node.190"* %117) #14
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %17) #14
  br label %173

118:                                              ; preds = %49
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  %121 = extractvalue { i8*, i32 } %119, 1
  br label %146

122:                                              ; preds = %73
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %126 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 1, i32 0
  %127 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::__tree_node"**
  %128 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %127, align 8
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %126, %"class.std::__1::__tree_node"* %128) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %129 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %130 = load i8, i8* %129, align 8, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %141, label %132

132:                                              ; preds = %122
  %133 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %134 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %133, align 8
  %135 = icmp eq %"class.v8::internal::torque::Type"** %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = ptrtoint %"class.v8::internal::torque::Type"** %134 to i64
  %138 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %139 = bitcast %"class.v8::internal::torque::Type"*** %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast %"class.v8::internal::torque::Type"** %134 to i8*
  call void @_ZdlPv(i8* %140) #17
  br label %141

141:                                              ; preds = %122, %132, %136
  %142 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 2, i32 0
  %143 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %4, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %144 = bitcast %"class.std::__1::__tree_end_node"* %143 to %"class.std::__1::__tree_node.190"**
  %145 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %144, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %142, %"class.std::__1::__tree_node.190"* %145) #14
  br label %146

146:                                              ; preds = %141, %118
  %147 = phi i8* [ %124, %141 ], [ %120, %118 ]
  %148 = phi i32 [ %125, %141 ], [ %121, %118 ]
  %149 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 1, i32 0
  %151 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to %"class.std::__1::__tree_node"**
  %153 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %152, align 8
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %150, %"class.std::__1::__tree_node"* %153) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %154 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %155 = load i8, i8* %154, align 8, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %166, label %157

157:                                              ; preds = %146
  %158 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %159 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %158, align 8
  %160 = icmp eq %"class.v8::internal::torque::Type"** %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = ptrtoint %"class.v8::internal::torque::Type"** %159 to i64
  %163 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %164 = bitcast %"class.v8::internal::torque::Type"*** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = bitcast %"class.v8::internal::torque::Type"** %159 to i8*
  call void @_ZdlPv(i8* %165) #17
  br label %166

166:                                              ; preds = %146, %157, %161
  %167 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 2, i32 0
  %168 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %3, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %169 = bitcast %"class.std::__1::__tree_end_node"* %168 to %"class.std::__1::__tree_node.190"**
  %170 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %169, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %167, %"class.std::__1::__tree_node.190"* %170) #14
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %17) #14
  %171 = insertvalue { i8*, i32 } undef, i8* %147, 0
  %172 = insertvalue { i8*, i32 } %171, i32 %148, 1
  resume { i8*, i32 } %172

173:                                              ; preds = %10, %2, %113
  %174 = phi %"class.v8::internal::torque::Type"* [ %74, %113 ], [ %1, %2 ], [ %0, %10 ]
  ret %"class.v8::internal::torque::Type"* %174
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque5StackIPKNS1_4TypeEE4PushES5_(%"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::Type"*) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = ptrtoint %"class.v8::internal::torque::Type"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %6, align 8
  %8 = icmp ult %"class.v8::internal::torque::Type"** %5, %7
  %9 = ptrtoint %"class.v8::internal::torque::Type"** %7 to i64
  br i1 %8, label %10, label %15

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::internal::torque::Type"** %5 to i64*
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %5, i64 1
  %13 = ptrtoint %"class.v8::internal::torque::Type"** %12 to i64
  %14 = bitcast %"class.v8::internal::torque::Type"*** %4 to i64*
  store i64 %13, i64* %14, align 8
  br label %72

15:                                               ; preds = %2
  %16 = ptrtoint %"class.v8::internal::torque::Type"** %5 to i64
  %17 = bitcast %"class.v8::internal::torque::Type"*** %4 to i64*
  %18 = bitcast %"class.v8::internal::torque::Stack"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = icmp ugt i64 %22, 2305843009213693951
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = bitcast %"class.v8::internal::torque::Stack"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #15
  unreachable

26:                                               ; preds = %15
  %27 = bitcast %"class.v8::internal::torque::Type"*** %6 to i64*
  %28 = sub i64 %9, %19
  %29 = ashr exact i64 %28, 3
  %30 = icmp ult i64 %29, 1152921504606846975
  br i1 %30, label %31, label %39

31:                                               ; preds = %26
  %32 = ashr exact i64 %28, 2
  %33 = icmp ult i64 %32, %22
  %34 = select i1 %33, i64 %22, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = icmp ugt i64 %34, 2305843009213693951
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

39:                                               ; preds = %36, %26
  %40 = phi i64 [ %34, %36 ], [ 2305843009213693951, %26 ]
  %41 = shl i64 %40, 3
  %42 = tail call i8* @_Znwm(i64 %41) #16
  %43 = bitcast i8* %42 to %"class.v8::internal::torque::Type"**
  br label %44

44:                                               ; preds = %39, %31
  %45 = phi i64 [ %40, %39 ], [ 0, %31 ]
  %46 = phi %"class.v8::internal::torque::Type"** [ %43, %39 ], [ null, %31 ]
  %47 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %46, i64 %21
  %48 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %46, i64 %45
  %49 = ptrtoint %"class.v8::internal::torque::Type"** %48 to i64
  %50 = bitcast %"class.v8::internal::torque::Type"** %47 to i64*
  store i64 %3, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %47, i64 1
  %52 = ptrtoint %"class.v8::internal::torque::Type"** %51 to i64
  %53 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %53, align 8
  %55 = load i64, i64* %17, align 8
  %56 = ptrtoint %"class.v8::internal::torque::Type"** %54 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = sub nsw i64 0, %58
  %60 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %47, i64 %59
  %61 = ptrtoint %"class.v8::internal::torque::Type"** %60 to i64
  %62 = icmp sgt i64 %57, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %44
  %64 = bitcast %"class.v8::internal::torque::Type"** %60 to i8*
  %65 = bitcast %"class.v8::internal::torque::Type"** %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %57, i1 false) #14
  %66 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %53, align 8
  br label %67

67:                                               ; preds = %63, %44
  %68 = phi %"class.v8::internal::torque::Type"** [ %66, %63 ], [ %54, %44 ]
  store i64 %61, i64* %18, align 8
  store i64 %52, i64* %17, align 8
  store i64 %49, i64* %27, align 8
  %69 = icmp eq %"class.v8::internal::torque::Type"** %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.v8::internal::torque::Type"** %68 to i8*
  tail call void @_ZdlPv(i8* %71) #17
  br label %72

72:                                               ; preds = %10, %67, %70
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque5Block6RetypeEv(%"class.v8::internal::torque::Block"*) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.v8::internal::torque::Stack", align 8
  %3 = bitcast %"class.v8::internal::torque::Stack"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #14
  %4 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #14
  %5 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::torque::Type"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::torque::Stack"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %48, label %13

13:                                               ; preds = %1
  %14 = icmp ugt i64 %11, 2305843009213693951
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = bitcast %"class.v8::internal::torque::Stack"* %2 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #15
          to label %17 unwind label %37

17:                                               ; preds = %15
  unreachable

18:                                               ; preds = %13
  %19 = invoke i8* @_Znwm(i64 %10) #16
          to label %20 unwind label %37

20:                                               ; preds = %18
  %21 = bitcast i8* %19 to %"class.v8::internal::torque::Type"**
  %22 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %2, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.v8::internal::torque::Type"*** %22 to i8**
  store i8* %19, i8** %23, align 8
  %24 = bitcast %"class.v8::internal::torque::Stack"* %2 to i8**
  store i8* %19, i8** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %21, i64 %11
  %26 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::torque::Type"** %25, %"class.v8::internal::torque::Type"*** %26, align 8
  %27 = bitcast %"class.v8::internal::torque::Type"*** %22 to i64*
  %28 = ptrtoint i8* %19 to i64
  %29 = icmp sgt i64 %10, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %20
  %31 = lshr exact i64 %10, 3
  %32 = inttoptr i64 %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %32, i64 %10, i1 false) #14
  %33 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %21, i64 %31
  %34 = ptrtoint %"class.v8::internal::torque::Type"** %33 to i64
  br label %35

35:                                               ; preds = %30, %20
  %36 = phi i64 [ %34, %30 ], [ %28, %20 ]
  store i64 %36, i64* %27, align 8
  br label %48

37:                                               ; preds = %18, %15
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %2, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %39, align 8
  %41 = icmp eq %"class.v8::internal::torque::Type"** %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = ptrtoint %"class.v8::internal::torque::Type"** %40 to i64
  %44 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %2, i64 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.v8::internal::torque::Type"*** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.v8::internal::torque::Type"** %40 to i8*
  call void @_ZdlPv(i8* %46) #17
  br label %47

47:                                               ; preds = %42, %37
  resume { i8*, i32 } %38

48:                                               ; preds = %1, %35
  %49 = phi i8* [ null, %1 ], [ %19, %35 ]
  %50 = phi %"class.v8::internal::torque::Type"** [ null, %1 ], [ %21, %35 ]
  %51 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 1, i32 0, i32 0
  %52 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 1, i32 0, i32 1
  %54 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %53, align 8
  %55 = icmp eq %"class.v8::internal::torque::Instruction"* %52, %54
  br i1 %55, label %62, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 0
  br label %71

58:                                               ; preds = %80
  %59 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %2, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %59, align 8
  %61 = bitcast %"class.v8::internal::torque::Type"** %60 to i8*
  br label %62

62:                                               ; preds = %58, %48
  %63 = phi i8* [ %61, %58 ], [ %49, %48 ]
  %64 = phi %"class.v8::internal::torque::Type"** [ %60, %58 ], [ %50, %48 ]
  %65 = icmp eq %"class.v8::internal::torque::Type"** %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = ptrtoint %"class.v8::internal::torque::Type"** %64 to i64
  %68 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %2, i64 0, i32 0, i32 0, i32 1
  %69 = bitcast %"class.v8::internal::torque::Type"*** %68 to i64*
  store i64 %67, i64* %69, align 8
  call void @_ZdlPv(i8* %63) #17
  br label %70

70:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  ret void

71:                                               ; preds = %56, %80
  %72 = phi %"class.v8::internal::torque::Instruction"* [ %52, %56 ], [ %81, %80 ]
  %73 = load %"class.v8::internal::torque::ControlFlowGraph"*, %"class.v8::internal::torque::ControlFlowGraph"** %57, align 8
  %74 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %72, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %74, align 8
  %76 = bitcast %"struct.v8::internal::torque::InstructionBase"* %75 to void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)***
  %77 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)**, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)** %77, i64 4
  %79 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)** %78, align 8
  invoke void %79(%"struct.v8::internal::torque::InstructionBase"* %75, %"class.v8::internal::torque::Stack"* nonnull %2, %"class.v8::internal::torque::ControlFlowGraph"* %73)
          to label %80 unwind label %83

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %72, i64 1
  %82 = icmp eq %"class.v8::internal::torque::Instruction"* %81, %54
  br i1 %82, label %58, label %71

83:                                               ; preds = %71
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %85, align 8
  %87 = icmp eq %"class.v8::internal::torque::Type"** %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = ptrtoint %"class.v8::internal::torque::Type"** %86 to i64
  %90 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %2, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.v8::internal::torque::Type"*** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast %"class.v8::internal::torque::Type"** %86 to i8*
  call void @_ZdlPv(i8* %92) #17
  br label %93

93:                                               ; preds = %83, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  resume { i8*, i32 } %84
}

; Function Attrs: noreturn ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque11ReportErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEvDpOT_(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.v8::internal::torque::MessageBuilder", align 8
  %4 = bitcast %"class.v8::internal::torque::MessageBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #14
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14, !noalias !6
  call void @_ZN2v88internal6torque8ToStringIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* dereferenceable(24) %0), !noalias !6
  invoke void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 0)
          to label %6 unwind label %14

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1, !noalias !6
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !noalias !6
  call void @_ZdlPv(i8* %13) #17
  br label %24

14:                                               ; preds = %1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !6
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !6
  call void @_ZdlPv(i8* %22) #17
  br label %23

23:                                               ; preds = %20, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14, !noalias !6
  resume { i8*, i32 } %15

24:                                               ; preds = %6, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14, !noalias !6
  invoke void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"* nonnull %3) #15
          to label %25 unwind label %26

25:                                               ; preds = %24
  unreachable

26:                                               ; preds = %24
  %27 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #14
  resume { i8*, i32 } %27
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler4BindEPNS1_5BlockE(%"class.v8::internal::torque::CfgAssembler"*, %"class.v8::internal::torque::Block"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 2
  store %"class.v8::internal::torque::Block"* %1, %"class.v8::internal::torque::Block"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 0
  %6 = icmp eq %"class.v8::internal::torque::Stack"* %5, %4
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::torque::Stack", %"class.v8::internal::torque::Stack"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %11, align 8
  tail call void @_ZNSt3__16vectorIPKN2v88internal6torque4TypeENS_9allocatorIS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector.11"* %8, %"class.v8::internal::torque::Type"** %10, %"class.v8::internal::torque::Type"** %12)
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal6torque16ControlFlowGraph10PlaceBlockEPNS1_5BlockE(%"class.v8::internal::torque::ControlFlowGraph"* %14, %"class.v8::internal::torque::Block"* %1)
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque16ControlFlowGraph10PlaceBlockEPNS1_5BlockE(%"class.v8::internal::torque::ControlFlowGraph"*, %"class.v8::internal::torque::Block"*) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = ptrtoint %"class.v8::internal::torque::Block"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::torque::ControlFlowGraph", %"class.v8::internal::torque::ControlFlowGraph"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.v8::internal::torque::ControlFlowGraph", %"class.v8::internal::torque::ControlFlowGraph"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::torque::ControlFlowGraph", %"class.v8::internal::torque::ControlFlowGraph"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::torque::Block"** %6, %8
  %10 = ptrtoint %"class.v8::internal::torque::Block"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::torque::Block"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %6, i64 1
  %14 = ptrtoint %"class.v8::internal::torque::Block"** %13 to i64
  %15 = bitcast %"class.v8::internal::torque::Block"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::internal::torque::Block"** %6 to i64
  %18 = bitcast %"class.v8::internal::torque::Block"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #15
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::torque::Block"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #16
  %44 = bitcast i8* %43 to %"class.v8::internal::torque::Block"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.v8::internal::torque::Block"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %47, i64 %22
  %49 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %47, i64 %46
  %50 = ptrtoint %"class.v8::internal::torque::Block"** %49 to i64
  %51 = bitcast %"class.v8::internal::torque::Block"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %48, i64 1
  %53 = ptrtoint %"class.v8::internal::torque::Block"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.v8::internal::torque::Block"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %48, i64 %60
  %62 = ptrtoint %"class.v8::internal::torque::Block"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.v8::internal::torque::Block"** %61 to i8*
  %66 = bitcast %"class.v8::internal::torque::Block"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #14
  %67 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.v8::internal::torque::Block"** [ %67, %64 ], [ %55, %45 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.v8::internal::torque::Block"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.v8::internal::torque::Block"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler4GotoEPNS1_5BlockE(%"class.v8::internal::torque::CfgAssembler"*, %"class.v8::internal::torque::Block"*) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.v8::internal::torque::Instruction", align 8
  %4 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %5 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::torque::Type"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::torque::Stack"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::torque::Type"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::torque::CfgAssembler"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  tail call void @_ZN2v88internal6torque12CfgAssembler11DeleteRangeENS1_10StackRangeE(%"class.v8::internal::torque::CfgAssembler"* %0, i64 %16, i64 %23)
  br label %24

24:                                               ; preds = %2, %8
  %25 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
  %26 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"struct.v8::internal::torque::SourcePosition"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 4 %27, i64 20, i1 false)
  %29 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 0
  %30 = load i32, i32* @_ZN2v88internal6torque15GotoInstruction5kKindE, align 4
  store i32 %30, i32* %29, align 8
  %31 = invoke i8* @_Znwm(i64 40) #16
          to label %32 unwind label %51

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1
  %34 = ptrtoint %"class.v8::internal::torque::Block"* %1 to i64
  %35 = bitcast i8* %31 to i32 (...)***
  %36 = getelementptr inbounds i8, i8* %31, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %28, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque15GotoInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %37 = getelementptr inbounds i8, i8* %31, i64 32
  %38 = bitcast i8* %37 to i64*
  store i64 %34, i64* %38, align 8
  %39 = ptrtoint i8* %31 to i64
  %40 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %39, i64* %40, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %3)
          to label %41 unwind label %55

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %42, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %42, align 8
  %44 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = bitcast %"struct.v8::internal::torque::InstructionBase"* %43 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %47 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %47, i64 3
  %49 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %48, align 8
  call void %49(%"struct.v8::internal::torque::InstructionBase"* nonnull %43) #14
  br label %50

50:                                               ; preds = %41, %45
  ret void

51:                                               ; preds = %24
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  br label %67

55:                                               ; preds = %32
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  %58 = extractvalue { i8*, i32 } %56, 1
  %59 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %59, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %59, align 8
  %61 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %55
  %63 = bitcast %"struct.v8::internal::torque::InstructionBase"* %60 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %64 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %64, i64 3
  %66 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %65, align 8
  call void %66(%"struct.v8::internal::torque::InstructionBase"* nonnull %60) #14
  br label %67

67:                                               ; preds = %62, %55, %51
  %68 = phi i8* [ %53, %51 ], [ %57, %55 ], [ %57, %62 ]
  %69 = phi i32 [ %54, %51 ], [ %58, %55 ], [ %58, %62 ]
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  resume { i8*, i32 } %71
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler6DropToENS1_12BottomOffsetE(%"class.v8::internal::torque::CfgAssembler"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::torque::Type"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::torque::CfgAssembler"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  tail call void @_ZN2v88internal6torque12CfgAssembler11DeleteRangeENS1_10StackRangeE(%"class.v8::internal::torque::CfgAssembler"* %0, i64 %1, i64 %9)
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"*, %"class.v8::internal::torque::Instruction"*) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.v8::internal::torque::Instruction", align 8
  %4 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %6, align 8
  %8 = bitcast %"struct.v8::internal::torque::InstructionBase"* %7 to void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)***
  %9 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)**, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)** %9, i64 4
  %11 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack"*, %"class.v8::internal::torque::ControlFlowGraph"*)** %10, align 8
  tail call void %11(%"struct.v8::internal::torque::InstructionBase"* %7, %"class.v8::internal::torque::Stack"* %4, %"class.v8::internal::torque::ControlFlowGraph"* %5)
  %12 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 2
  %13 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %14, align 8
  %17 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %6, align 8
  %18 = bitcast %"struct.v8::internal::torque::InstructionBase"* %17 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %19 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %18, align 8
  %20 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %19, align 8
  %21 = invoke %"struct.v8::internal::torque::InstructionBase"* %20(%"struct.v8::internal::torque::InstructionBase"* %17)
          to label %25 unwind label %22

22:                                               ; preds = %2
  %23 = landingpad { i8*, i32 }
          catch i8* null
  %24 = extractvalue { i8*, i32 } %23, 0
  tail call void @__clang_call_terminate(i8* %24) #18
  unreachable

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %21, %"struct.v8::internal::torque::InstructionBase"** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %13, i64 0, i32 1, i32 0, i32 1
  %28 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %13, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %29, align 8
  %31 = icmp ult %"class.v8::internal::torque::Instruction"* %28, %30
  br i1 %31, label %32, label %47

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %28, i64 0, i32 0
  store i32 %16, i32* %33, align 8
  %34 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %26, align 8
  %35 = bitcast %"struct.v8::internal::torque::InstructionBase"* %34 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %36 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %35, align 8
  %37 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %36, align 8
  %38 = invoke %"struct.v8::internal::torque::InstructionBase"* %37(%"struct.v8::internal::torque::InstructionBase"* %34)
          to label %42 unwind label %39

39:                                               ; preds = %32
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  tail call void @__clang_call_terminate(i8* %41) #18
  unreachable

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %38, %"struct.v8::internal::torque::InstructionBase"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %28, i64 1
  %45 = ptrtoint %"class.v8::internal::torque::Instruction"* %44 to i64
  %46 = bitcast %"class.v8::internal::torque::Instruction"** %27 to i64*
  store i64 %45, i64* %46, align 8
  br label %49

47:                                               ; preds = %25
  %48 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %13, i64 0, i32 1
  invoke void @_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.18"* %48, %"class.v8::internal::torque::Instruction"* nonnull dereferenceable(16) %3)
          to label %49 unwind label %58

49:                                               ; preds = %42, %47
  %50 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %26, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %26, align 8
  %51 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %49
  %53 = bitcast %"struct.v8::internal::torque::InstructionBase"* %50 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %54 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %54, i64 3
  %56 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %55, align 8
  call void %56(%"struct.v8::internal::torque::InstructionBase"* nonnull %50) #14
  br label %57

57:                                               ; preds = %49, %52
  ret void

58:                                               ; preds = %47
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %26, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %26, align 8
  %61 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.v8::internal::torque::InstructionBase"* %60 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %64 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %64, i64 3
  %66 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %65, align 8
  call void %66(%"struct.v8::internal::torque::InstructionBase"* nonnull %60) #14
  br label %67

67:                                               ; preds = %58, %62
  resume { i8*, i32 } %59
}

; Function Attrs: ssp uwtable
define hidden { i64, i64 } @_ZN2v88internal6torque12CfgAssembler4GotoEPNS1_5BlockEm(%"class.v8::internal::torque::CfgAssembler"*, %"class.v8::internal::torque::Block"*, i64) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.v8::internal::torque::Instruction", align 8
  %5 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %6 = alloca %"class.v8::internal::torque::Instruction", align 8
  %7 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %8 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::torque::Type"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::torque::Stack"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::torque::Type"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::torque::CfgAssembler"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
  %20 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"struct.v8::internal::torque::SourcePosition"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 4 %21, i64 20, i1 false)
  %23 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 0
  %24 = load i32, i32* @_ZN2v88internal6torque22DeleteRangeInstruction5kKindE, align 4
  store i32 %24, i32* %23, align 8
  %25 = invoke i8* @_Znwm(i64 48) #16
          to label %26 unwind label %85

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1
  %28 = sub i64 %16, %18
  %29 = ashr exact i64 %28, 3
  %30 = sub i64 %29, %2
  %31 = sub i64 %11, %13
  %32 = ashr exact i64 %31, 3
  %33 = sub i64 %32, %2
  %34 = bitcast i8* %25 to i32 (...)***
  %35 = getelementptr inbounds i8, i8* %25, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %22, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque22DeleteRangeInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %36 = getelementptr inbounds i8, i8* %25, i64 32
  %37 = bitcast i8* %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %25, i64 40
  %39 = bitcast i8* %38 to i64*
  store i64 %30, i64* %39, align 8
  %40 = ptrtoint i8* %25 to i64
  %41 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %40, i64* %41, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %4)
          to label %42 unwind label %89

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %43, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %43, align 8
  %45 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"struct.v8::internal::torque::InstructionBase"* %44 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %48 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %48, i64 3
  %50 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %49, align 8
  call void %50(%"struct.v8::internal::torque::InstructionBase"* nonnull %44) #14
  br label %51

51:                                               ; preds = %42, %46
  %52 = load i64, i64* %15, align 8
  %53 = load i64, i64* %17, align 8
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 3
  %56 = sub i64 %55, %2
  %57 = insertvalue { i64, i64 } undef, i64 %56, 0
  %58 = insertvalue { i64, i64 } %57, i64 %55, 1
  %59 = call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
  %60 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %59 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"struct.v8::internal::torque::SourcePosition"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 4 %61, i64 20, i1 false)
  %63 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %6, i64 0, i32 0
  %64 = load i32, i32* @_ZN2v88internal6torque15GotoInstruction5kKindE, align 4
  store i32 %64, i32* %63, align 8
  %65 = invoke i8* @_Znwm(i64 40) #16
          to label %66 unwind label %101

66:                                               ; preds = %51
  %67 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %6, i64 0, i32 1
  %68 = ptrtoint %"class.v8::internal::torque::Block"* %1 to i64
  %69 = bitcast i8* %65 to i32 (...)***
  %70 = getelementptr inbounds i8, i8* %65, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %62, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque15GotoInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %71 = getelementptr inbounds i8, i8* %65, i64 32
  %72 = bitcast i8* %71 to i64*
  store i64 %68, i64* %72, align 8
  %73 = ptrtoint i8* %65 to i64
  %74 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  store i64 %73, i64* %74, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %6)
          to label %75 unwind label %105

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %76, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = bitcast %"struct.v8::internal::torque::InstructionBase"* %77 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %81 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %81, i64 3
  %83 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %82, align 8
  call void %83(%"struct.v8::internal::torque::InstructionBase"* nonnull %77) #14
  br label %84

84:                                               ; preds = %75, %79
  ret { i64, i64 } %58

85:                                               ; preds = %3
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  %88 = extractvalue { i8*, i32 } %86, 1
  br label %117

89:                                               ; preds = %26
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  %92 = extractvalue { i8*, i32 } %90, 1
  %93 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %93, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %93, align 8
  %95 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %94, null
  br i1 %95, label %117, label %96

96:                                               ; preds = %89
  %97 = bitcast %"struct.v8::internal::torque::InstructionBase"* %94 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %98 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %98, i64 3
  %100 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %99, align 8
  call void %100(%"struct.v8::internal::torque::InstructionBase"* nonnull %94) #14
  br label %117

101:                                              ; preds = %51
  %102 = landingpad { i8*, i32 }
          cleanup
  %103 = extractvalue { i8*, i32 } %102, 0
  %104 = extractvalue { i8*, i32 } %102, 1
  br label %117

105:                                              ; preds = %66
  %106 = landingpad { i8*, i32 }
          cleanup
  %107 = extractvalue { i8*, i32 } %106, 0
  %108 = extractvalue { i8*, i32 } %106, 1
  %109 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %110 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %109, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %109, align 8
  %111 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %105
  %113 = bitcast %"struct.v8::internal::torque::InstructionBase"* %110 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %114 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %114, i64 3
  %116 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %115, align 8
  call void %116(%"struct.v8::internal::torque::InstructionBase"* nonnull %110) #14
  br label %117

117:                                              ; preds = %101, %105, %112, %85, %89, %96
  %118 = phi i8* [ %87, %85 ], [ %91, %89 ], [ %91, %96 ], [ %103, %101 ], [ %107, %105 ], [ %107, %112 ]
  %119 = phi i32 [ %88, %85 ], [ %92, %89 ], [ %92, %96 ], [ %104, %101 ], [ %108, %105 ], [ %108, %112 ]
  %120 = insertvalue { i8*, i32 } undef, i8* %118, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %119, 1
  resume { i8*, i32 } %121
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler6BranchEPNS1_5BlockES4_(%"class.v8::internal::torque::CfgAssembler"*, %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"*) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.v8::internal::torque::Instruction", align 8
  %5 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %6 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
  %7 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"struct.v8::internal::torque::SourcePosition"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 4 %8, i64 20, i1 false)
  %10 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 0
  %11 = load i32, i32* @_ZN2v88internal6torque17BranchInstruction5kKindE, align 4
  store i32 %11, i32* %10, align 8
  %12 = invoke i8* @_Znwm(i64 48) #16
          to label %13 unwind label %33

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1
  %15 = bitcast i8* %12 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %12, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %9, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque17BranchInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %17 = getelementptr inbounds i8, i8* %12, i64 32
  %18 = bitcast i8* %17 to %"class.v8::internal::torque::Block"**
  store %"class.v8::internal::torque::Block"* %1, %"class.v8::internal::torque::Block"** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 40
  %20 = bitcast i8* %19 to %"class.v8::internal::torque::Block"**
  store %"class.v8::internal::torque::Block"* %2, %"class.v8::internal::torque::Block"** %20, align 8
  %21 = ptrtoint i8* %12 to i64
  %22 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %21, i64* %22, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %4)
          to label %23 unwind label %37

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %24, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %24, align 8
  %26 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"struct.v8::internal::torque::InstructionBase"* %25 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %29 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %29, i64 3
  %31 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %30, align 8
  call void %31(%"struct.v8::internal::torque::InstructionBase"* nonnull %25) #14
  br label %32

32:                                               ; preds = %23, %27
  ret void

33:                                               ; preds = %3
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  br label %49

37:                                               ; preds = %13
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  %40 = extractvalue { i8*, i32 } %38, 1
  %41 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %41, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %41, align 8
  %43 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %37
  %45 = bitcast %"struct.v8::internal::torque::InstructionBase"* %42 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %46 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %46, i64 3
  %48 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %47, align 8
  call void %48(%"struct.v8::internal::torque::InstructionBase"* nonnull %42) #14
  br label %49

49:                                               ; preds = %44, %37, %33
  %50 = phi i8* [ %35, %33 ], [ %39, %37 ], [ %39, %44 ]
  %51 = phi i32 [ %36, %33 ], [ %40, %37 ], [ %40, %44 ]
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler11DeleteRangeENS1_10StackRangeE(%"class.v8::internal::torque::CfgAssembler"*, i64, i64) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.v8::internal::torque::Instruction", align 8
  %5 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %6 = icmp eq i64 %2, %1
  br i1 %6, label %34, label %7

7:                                                ; preds = %3
  %8 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
  %9 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"struct.v8::internal::torque::SourcePosition"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 4 %10, i64 20, i1 false)
  %12 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 0
  %13 = load i32, i32* @_ZN2v88internal6torque22DeleteRangeInstruction5kKindE, align 4
  store i32 %13, i32* %12, align 8
  %14 = invoke i8* @_Znwm(i64 48) #16
          to label %15 unwind label %35

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1
  %17 = bitcast i8* %14 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %14, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %11, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque22DeleteRangeInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 %1, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 40
  %22 = bitcast i8* %21 to i64*
  store i64 %2, i64* %22, align 8
  %23 = ptrtoint i8* %14 to i64
  %24 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %23, i64* %24, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %4)
          to label %25 unwind label %39

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %26, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %26, align 8
  %28 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %"struct.v8::internal::torque::InstructionBase"* %27 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %31 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %31, i64 3
  %33 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %32, align 8
  call void %33(%"struct.v8::internal::torque::InstructionBase"* nonnull %27) #14
  br label %34

34:                                               ; preds = %29, %25, %3
  ret void

35:                                               ; preds = %7
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  br label %51

39:                                               ; preds = %15
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %43, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %43, align 8
  %45 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = bitcast %"struct.v8::internal::torque::InstructionBase"* %44 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %48 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %48, i64 3
  %50 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %49, align 8
  call void %50(%"struct.v8::internal::torque::InstructionBase"* nonnull %44) #14
  br label %51

51:                                               ; preds = %46, %39, %35
  %52 = phi i8* [ %37, %35 ], [ %41, %39 ], [ %41, %46 ]
  %53 = phi i32 [ %38, %35 ], [ %42, %39 ], [ %42, %46 ]
  %54 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  resume { i8*, i32 } %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: ssp uwtable
define hidden { i64, i64 } @_ZN2v88internal6torque12CfgAssembler4PeekENS1_10StackRangeENS_4base8OptionalIPKNS1_4TypeEEE(%"class.v8::internal::torque::CfgAssembler"*, i64, i64, i8, %"class.v8::internal::torque::Type"*) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::__1::vector.11", align 8
  %7 = alloca %"class.v8::internal::torque::Instruction", align 8
  %8 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %9 = alloca [7 x i8], align 1
  %10 = icmp ne i8 %3, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::vector.11"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #14
  invoke void @_ZN2v88internal6torque9LowerTypeEPKNS1_4TypeE(%"class.std::__1::vector.11"* nonnull sret %6, %"class.v8::internal::torque::Type"* %4)
          to label %13 unwind label %17

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %6, i64 0, i32 0, i32 0
  %15 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %14, align 8
  %16 = bitcast %"class.v8::internal::torque::Type"** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #14
  br label %21

17:                                               ; preds = %11
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #14
  br label %145

21:                                               ; preds = %13, %5
  %22 = phi i8* [ %16, %13 ], [ null, %5 ]
  %23 = phi %"class.v8::internal::torque::Type"** [ %15, %13 ], [ null, %5 ]
  %24 = sub i64 %2, %1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %126, label %26

26:                                               ; preds = %21
  %27 = bitcast %"struct.v8::internal::torque::SourcePosition"* %8 to i8*
  %28 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %7, i64 0, i32 0
  %29 = load i32, i32* @_ZN2v88internal6torque15PeekInstruction5kKindE, align 4
  %30 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %7, i64 0, i32 1
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* %9, i64 0, i64 0
  %32 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  %33 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  br i1 %10, label %34, label %72

34:                                               ; preds = %26, %63
  %35 = phi i64 [ %64, %63 ], [ 0, %26 ]
  %36 = add i64 %35, %1
  %37 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %23, i64 %35
  %38 = bitcast %"class.v8::internal::torque::Type"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %41 unwind label %66

41:                                               ; preds = %34
  %42 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %40 to i8**
  %43 = load i8*, i8** %42, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 4 %43, i64 20, i1 false)
  store i32 %29, i32* %28, align 8
  %44 = invoke i8* @_Znwm(i64 56) #16
          to label %45 unwind label %68

45:                                               ; preds = %41
  %46 = bitcast i8* %44 to i32 (...)***
  %47 = getelementptr inbounds i8, i8* %44, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %27, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque15PeekInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %48 = getelementptr inbounds i8, i8* %44, i64 32
  %49 = bitcast i8* %48 to i64*
  store i64 %36, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %44, i64 40
  store i8 1, i8* %50, align 8
  %51 = getelementptr inbounds i8, i8* %44, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* nonnull align 1 %31, i64 7, i1 false)
  %52 = getelementptr inbounds i8, i8* %44, i64 48
  %53 = bitcast i8* %52 to i64*
  store i64 %39, i64* %53, align 8
  %54 = ptrtoint i8* %44 to i64
  store i64 %54, i64* %32, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %7)
          to label %55 unwind label %70

55:                                               ; preds = %45
  %56 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %33, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %33, align 8
  %57 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"struct.v8::internal::torque::InstructionBase"* %56 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %60 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %60, i64 3
  %62 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %61, align 8
  call void %62(%"struct.v8::internal::torque::InstructionBase"* nonnull %56) #14
  br label %63

63:                                               ; preds = %58, %55
  %64 = add nuw i64 %35, 1
  %65 = icmp eq i64 %64, %24
  br i1 %65, label %126, label %34

66:                                               ; preds = %34
  %67 = landingpad { i8*, i32 }
          cleanup
  br label %103

68:                                               ; preds = %41
  %69 = landingpad { i8*, i32 }
          cleanup
  br label %109

70:                                               ; preds = %45
  %71 = landingpad { i8*, i32 }
          cleanup
  br label %115

72:                                               ; preds = %26, %98
  %73 = phi i64 [ %99, %98 ], [ 0, %26 ]
  %74 = add i64 %73, %1
  %75 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %76 unwind label %101

76:                                               ; preds = %72
  %77 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %75 to i8**
  %78 = load i8*, i8** %77, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 4 %78, i64 20, i1 false)
  store i32 %29, i32* %28, align 8
  %79 = invoke i8* @_Znwm(i64 56) #16
          to label %80 unwind label %107

80:                                               ; preds = %76
  %81 = bitcast i8* %79 to i32 (...)***
  %82 = getelementptr inbounds i8, i8* %79, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %27, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque15PeekInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %83 = getelementptr inbounds i8, i8* %79, i64 32
  %84 = bitcast i8* %83 to i64*
  store i64 %74, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %79, i64 40
  store i8 0, i8* %85, align 8
  %86 = getelementptr inbounds i8, i8* %79, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* nonnull align 1 %31, i64 7, i1 false)
  %87 = getelementptr inbounds i8, i8* %79, i64 48
  %88 = bitcast i8* %87 to %"class.v8::internal::torque::Type"**
  store %"class.v8::internal::torque::Type"* null, %"class.v8::internal::torque::Type"** %88, align 8
  %89 = ptrtoint i8* %79 to i64
  store i64 %89, i64* %32, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %7)
          to label %90 unwind label %113

90:                                               ; preds = %80
  %91 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %33, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %33, align 8
  %92 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = bitcast %"struct.v8::internal::torque::InstructionBase"* %91 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %95 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %95, i64 3
  %97 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %96, align 8
  call void %97(%"struct.v8::internal::torque::InstructionBase"* nonnull %91) #14
  br label %98

98:                                               ; preds = %90, %93
  %99 = add nuw i64 %73, 1
  %100 = icmp eq i64 %99, %24
  br i1 %100, label %126, label %72

101:                                              ; preds = %72
  %102 = landingpad { i8*, i32 }
          cleanup
  br label %103

103:                                              ; preds = %66, %101
  %104 = phi { i8*, i32 } [ %67, %66 ], [ %102, %101 ]
  %105 = extractvalue { i8*, i32 } %104, 0
  %106 = extractvalue { i8*, i32 } %104, 1
  br label %140

107:                                              ; preds = %76
  %108 = landingpad { i8*, i32 }
          cleanup
  br label %109

109:                                              ; preds = %68, %107
  %110 = phi { i8*, i32 } [ %69, %68 ], [ %108, %107 ]
  %111 = extractvalue { i8*, i32 } %110, 0
  %112 = extractvalue { i8*, i32 } %110, 1
  br label %140

113:                                              ; preds = %80
  %114 = landingpad { i8*, i32 }
          cleanup
  br label %115

115:                                              ; preds = %70, %113
  %116 = phi { i8*, i32 } [ %71, %70 ], [ %114, %113 ]
  %117 = extractvalue { i8*, i32 } %116, 0
  %118 = extractvalue { i8*, i32 } %116, 1
  %119 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %33, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %33, align 8
  %120 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %119, null
  br i1 %120, label %140, label %121

121:                                              ; preds = %115
  %122 = bitcast %"struct.v8::internal::torque::InstructionBase"* %119 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %123 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %123, i64 3
  %125 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %124, align 8
  call void %125(%"struct.v8::internal::torque::InstructionBase"* nonnull %119) #14
  br label %140

126:                                              ; preds = %98, %63, %21
  %127 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %128 = bitcast %"class.v8::internal::torque::Type"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::torque::CfgAssembler"* %0 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %129, %131
  %133 = ashr exact i64 %132, 3
  %134 = sub i64 %133, %24
  %135 = insertvalue { i64, i64 } undef, i64 %134, 0
  %136 = insertvalue { i64, i64 } %135, i64 %133, 1
  %137 = icmp eq %"class.v8::internal::torque::Type"** %23, null
  br i1 %137, label %139, label %138

138:                                              ; preds = %126
  call void @_ZdlPv(i8* %22) #17
  br label %139

139:                                              ; preds = %126, %138
  ret { i64, i64 } %136

140:                                              ; preds = %103, %121, %115, %109
  %141 = phi i32 [ %106, %103 ], [ %112, %109 ], [ %118, %115 ], [ %118, %121 ]
  %142 = phi i8* [ %105, %103 ], [ %111, %109 ], [ %117, %115 ], [ %117, %121 ]
  %143 = icmp eq %"class.v8::internal::torque::Type"** %23, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %140
  call void @_ZdlPv(i8* %22) #17
  br label %145

145:                                              ; preds = %17, %140, %144
  %146 = phi i8* [ %19, %17 ], [ %142, %140 ], [ %142, %144 ]
  %147 = phi i32 [ %20, %17 ], [ %141, %140 ], [ %141, %144 ]
  %148 = insertvalue { i8*, i32 } undef, i8* %146, 0
  %149 = insertvalue { i8*, i32 } %148, i32 %147, 1
  resume { i8*, i32 } %149
}

declare void @_ZN2v88internal6torque9LowerTypeEPKNS1_4TypeE(%"class.std::__1::vector.11"* sret, %"class.v8::internal::torque::Type"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler4PokeENS1_10StackRangeES3_NS_4base8OptionalIPKNS1_4TypeEEE(%"class.v8::internal::torque::CfgAssembler"*, i64, i64, i64, i64, %"class.v8::base::Optional.102"* nocapture readonly byval(%"class.v8::base::Optional.102") align 8) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = alloca %"class.std::__1::vector.11", align 8
  %8 = alloca %"class.v8::internal::torque::Instruction", align 8
  %9 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %10 = alloca [7 x i8], align 1
  %11 = getelementptr inbounds %"class.v8::base::Optional.102", %"class.v8::base::Optional.102"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %6
  %15 = bitcast %"class.std::__1::vector.11"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.v8::base::Optional.102", %"class.v8::base::Optional.102"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %16, align 8
  invoke void @_ZN2v88internal6torque9LowerTypeEPKNS1_4TypeE(%"class.std::__1::vector.11"* nonnull sret %7, %"class.v8::internal::torque::Type"* %17)
          to label %18 unwind label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %7, i64 0, i32 0, i32 0
  %20 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %19, align 8
  %21 = bitcast %"class.v8::internal::torque::Type"** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  br label %26

22:                                               ; preds = %14
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  br label %141

26:                                               ; preds = %18, %6
  %27 = phi i8* [ %21, %18 ], [ null, %6 ]
  %28 = phi %"class.v8::internal::torque::Type"** [ %20, %18 ], [ null, %6 ]
  %29 = xor i64 %3, -1
  %30 = add i64 %29, %4
  %31 = icmp sgt i64 %30, -1
  br i1 %31, label %32, label %78

32:                                               ; preds = %26
  %33 = bitcast %"struct.v8::internal::torque::SourcePosition"* %9 to i8*
  %34 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %8, i64 0, i32 0
  %35 = load i32, i32* @_ZN2v88internal6torque15PokeInstruction5kKindE, align 4
  %36 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %8, i64 0, i32 1
  %37 = getelementptr inbounds [7 x i8], [7 x i8]* %10, i64 0, i64 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %39 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  br i1 %13, label %40, label %82

40:                                               ; preds = %32, %69
  %41 = phi i64 [ %70, %69 ], [ %30, %32 ]
  %42 = add i64 %41, %1
  %43 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %28, i64 %41
  %44 = bitcast %"class.v8::internal::torque::Type"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %47 unwind label %72

47:                                               ; preds = %40
  %48 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %46 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 4 %49, i64 20, i1 false)
  store i32 %35, i32* %34, align 8
  %50 = invoke i8* @_Znwm(i64 56) #16
          to label %51 unwind label %74

51:                                               ; preds = %47
  %52 = bitcast i8* %50 to i32 (...)***
  %53 = getelementptr inbounds i8, i8* %50, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %33, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque15PokeInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %54 = getelementptr inbounds i8, i8* %50, i64 32
  %55 = bitcast i8* %54 to i64*
  store i64 %42, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %50, i64 40
  store i8 1, i8* %56, align 8
  %57 = getelementptr inbounds i8, i8* %50, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* nonnull align 1 %37, i64 7, i1 false)
  %58 = getelementptr inbounds i8, i8* %50, i64 48
  %59 = bitcast i8* %58 to i64*
  store i64 %45, i64* %59, align 8
  %60 = ptrtoint i8* %50 to i64
  store i64 %60, i64* %38, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %8)
          to label %61 unwind label %76

61:                                               ; preds = %51
  %62 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %39, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %39, align 8
  %63 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = bitcast %"struct.v8::internal::torque::InstructionBase"* %62 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %66 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %66, i64 3
  %68 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %67, align 8
  call void %68(%"struct.v8::internal::torque::InstructionBase"* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %61
  %70 = add i64 %41, -1
  %71 = icmp sgt i64 %70, -1
  br i1 %71, label %40, label %78

72:                                               ; preds = %40
  %73 = landingpad { i8*, i32 }
          cleanup
  br label %113

74:                                               ; preds = %47
  %75 = landingpad { i8*, i32 }
          cleanup
  br label %119

76:                                               ; preds = %51
  %77 = landingpad { i8*, i32 }
          cleanup
  br label %125

78:                                               ; preds = %108, %69, %26
  %79 = icmp eq %"class.v8::internal::torque::Type"** %28, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %78
  call void @_ZdlPv(i8* %27) #17
  br label %81

81:                                               ; preds = %78, %80
  ret void

82:                                               ; preds = %32, %108
  %83 = phi i64 [ %109, %108 ], [ %30, %32 ]
  %84 = add i64 %83, %1
  %85 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %86 unwind label %111

86:                                               ; preds = %82
  %87 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %85 to i8**
  %88 = load i8*, i8** %87, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 4 %88, i64 20, i1 false)
  store i32 %35, i32* %34, align 8
  %89 = invoke i8* @_Znwm(i64 56) #16
          to label %90 unwind label %117

90:                                               ; preds = %86
  %91 = bitcast i8* %89 to i32 (...)***
  %92 = getelementptr inbounds i8, i8* %89, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* nonnull align 8 %33, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque15PokeInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %93 = getelementptr inbounds i8, i8* %89, i64 32
  %94 = bitcast i8* %93 to i64*
  store i64 %84, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %89, i64 40
  store i8 0, i8* %95, align 8
  %96 = getelementptr inbounds i8, i8* %89, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* nonnull align 1 %37, i64 7, i1 false)
  %97 = getelementptr inbounds i8, i8* %89, i64 48
  %98 = bitcast i8* %97 to %"class.v8::internal::torque::Type"**
  store %"class.v8::internal::torque::Type"* null, %"class.v8::internal::torque::Type"** %98, align 8
  %99 = ptrtoint i8* %89 to i64
  store i64 %99, i64* %38, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %8)
          to label %100 unwind label %123

100:                                              ; preds = %90
  %101 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %39, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %39, align 8
  %102 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = bitcast %"struct.v8::internal::torque::InstructionBase"* %101 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %105 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %105, i64 3
  %107 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %106, align 8
  call void %107(%"struct.v8::internal::torque::InstructionBase"* nonnull %101) #14
  br label %108

108:                                              ; preds = %100, %103
  %109 = add i64 %83, -1
  %110 = icmp sgt i64 %109, -1
  br i1 %110, label %82, label %78

111:                                              ; preds = %82
  %112 = landingpad { i8*, i32 }
          cleanup
  br label %113

113:                                              ; preds = %72, %111
  %114 = phi { i8*, i32 } [ %73, %72 ], [ %112, %111 ]
  %115 = extractvalue { i8*, i32 } %114, 0
  %116 = extractvalue { i8*, i32 } %114, 1
  br label %136

117:                                              ; preds = %86
  %118 = landingpad { i8*, i32 }
          cleanup
  br label %119

119:                                              ; preds = %74, %117
  %120 = phi { i8*, i32 } [ %75, %74 ], [ %118, %117 ]
  %121 = extractvalue { i8*, i32 } %120, 0
  %122 = extractvalue { i8*, i32 } %120, 1
  br label %136

123:                                              ; preds = %90
  %124 = landingpad { i8*, i32 }
          cleanup
  br label %125

125:                                              ; preds = %76, %123
  %126 = phi { i8*, i32 } [ %77, %76 ], [ %124, %123 ]
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = extractvalue { i8*, i32 } %126, 1
  %129 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %39, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %39, align 8
  %130 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = bitcast %"struct.v8::internal::torque::InstructionBase"* %129 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %133 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %133, i64 3
  %135 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %134, align 8
  call void %135(%"struct.v8::internal::torque::InstructionBase"* nonnull %129) #14
  br label %136

136:                                              ; preds = %113, %131, %125, %119
  %137 = phi i32 [ %116, %113 ], [ %122, %119 ], [ %128, %125 ], [ %128, %131 ]
  %138 = phi i8* [ %115, %113 ], [ %121, %119 ], [ %127, %125 ], [ %127, %131 ]
  %139 = icmp eq %"class.v8::internal::torque::Type"** %28, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %136
  call void @_ZdlPv(i8* %27) #17
  br label %141

141:                                              ; preds = %22, %136, %140
  %142 = phi i8* [ %24, %22 ], [ %138, %136 ], [ %138, %140 ]
  %143 = phi i32 [ %25, %22 ], [ %137, %136 ], [ %137, %140 ]
  %144 = insertvalue { i8*, i32 } undef, i8* %142, 0
  %145 = insertvalue { i8*, i32 } %144, i32 %143, 1
  resume { i8*, i32 } %145
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler5PrintENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::torque::CfgAssembler"*, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.v8::internal::torque::Instruction", align 8
  %4 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %5 = alloca [15 x i8], align 8
  %6 = alloca [15 x i8], align 8
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to i8*
  %12 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %11, i64 15, i1 false)
  %13 = getelementptr inbounds i8, i8* %7, i64 23
  %14 = load i8, i8* %13, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %15 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %16 unwind label %62

16:                                               ; preds = %2
  %17 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %15 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"struct.v8::internal::torque::SourcePosition"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 4 %18, i64 20, i1 false)
  %20 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %12, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 15, i1 false)
  %21 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 0
  %22 = load i32, i32* @_ZN2v88internal6torque30PrintConstantStringInstruction5kKindE, align 4
  store i32 %22, i32* %21, align 8
  %23 = invoke i8* @_Znwm(i64 56) #16
          to label %24 unwind label %56

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1
  %26 = bitcast i8* %23 to i32 (...)***
  %27 = getelementptr inbounds i8, i8* %23, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %19, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque30PrintConstantStringInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %28 = getelementptr inbounds i8, i8* %23, i64 32
  %29 = bitcast i8* %28 to i8**
  store i8* %9, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %20, i64 15, i1 false)
  %31 = getelementptr inbounds i8, i8* %23, i64 55
  store i8 %14, i8* %31, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 15, i1 false)
  %32 = ptrtoint i8* %23 to i64
  %33 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %32, i64* %33, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %3)
          to label %34 unwind label %44

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %35, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %35, align 8
  %37 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"struct.v8::internal::torque::InstructionBase"* %36 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %40 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %40, i64 3
  %42 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %41, align 8
  call void %42(%"struct.v8::internal::torque::InstructionBase"* nonnull %36) #14
  br label %43

43:                                               ; preds = %34, %38
  ret void

44:                                               ; preds = %24
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  %48 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %48, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %44
  %52 = bitcast %"struct.v8::internal::torque::InstructionBase"* %49 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %53 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %53, i64 3
  %55 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %54, align 8
  call void %55(%"struct.v8::internal::torque::InstructionBase"* nonnull %49) #14
  br label %68

56:                                               ; preds = %16
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  %59 = extractvalue { i8*, i32 } %57, 1
  %60 = icmp slt i8 %14, 0
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  tail call void @_ZdlPv(i8* %9) #17
  br label %68

62:                                               ; preds = %2
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  %65 = extractvalue { i8*, i32 } %63, 1
  %66 = icmp slt i8 %14, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %62
  tail call void @_ZdlPv(i8* %9) #17
  br label %68

68:                                               ; preds = %51, %44, %61, %56, %62, %67
  %69 = phi i32 [ %65, %62 ], [ %65, %67 ], [ %59, %61 ], [ %59, %56 ], [ %47, %44 ], [ %47, %51 ]
  %70 = phi i8* [ %64, %62 ], [ %64, %67 ], [ %58, %61 ], [ %58, %56 ], [ %46, %44 ], [ %46, %51 ]
  %71 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %69, 1
  resume { i8*, i32 } %72
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler16AssertionFailureENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::torque::CfgAssembler"*, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.v8::internal::torque::Instruction", align 8
  %4 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %5 = alloca [15 x i8], align 8
  %6 = alloca [15 x i8], align 8
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to i8*
  %12 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %11, i64 15, i1 false)
  %13 = getelementptr inbounds i8, i8* %7, i64 23
  %14 = load i8, i8* %13, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %15 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %16 unwind label %64

16:                                               ; preds = %2
  %17 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %15 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"struct.v8::internal::torque::SourcePosition"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 4 %18, i64 20, i1 false)
  %20 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %12, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 15, i1 false)
  %21 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 0
  %22 = load i32, i32* @_ZN2v88internal6torque16AbortInstruction5kKindE, align 4
  store i32 %22, i32* %21, align 8
  %23 = invoke i8* @_Znwm(i64 56) #16
          to label %24 unwind label %58

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1
  %26 = bitcast i8* %23 to i32 (...)***
  %27 = getelementptr inbounds i8, i8* %23, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %19, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque16AbortInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %28 = getelementptr inbounds i8, i8* %23, i64 28
  %29 = bitcast i8* %28 to i32*
  store i32 2, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %23, i64 32
  %31 = bitcast i8* %30 to i8**
  store i8* %9, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %23, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %20, i64 15, i1 false)
  %33 = getelementptr inbounds i8, i8* %23, i64 55
  store i8 %14, i8* %33, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 15, i1 false)
  %34 = ptrtoint i8* %23 to i64
  %35 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %34, i64* %35, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %3)
          to label %36 unwind label %46

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %37, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %37, align 8
  %39 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.v8::internal::torque::InstructionBase"* %38 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %42 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %42, i64 3
  %44 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %43, align 8
  call void %44(%"struct.v8::internal::torque::InstructionBase"* nonnull %38) #14
  br label %45

45:                                               ; preds = %36, %40
  ret void

46:                                               ; preds = %24
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %50, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %50, align 8
  %52 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %46
  %54 = bitcast %"struct.v8::internal::torque::InstructionBase"* %51 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %55 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %55, i64 3
  %57 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %56, align 8
  call void %57(%"struct.v8::internal::torque::InstructionBase"* nonnull %51) #14
  br label %70

58:                                               ; preds = %16
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  %61 = extractvalue { i8*, i32 } %59, 1
  %62 = icmp slt i8 %14, 0
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  tail call void @_ZdlPv(i8* %9) #17
  br label %70

64:                                               ; preds = %2
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  %67 = extractvalue { i8*, i32 } %65, 1
  %68 = icmp slt i8 %14, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %64
  tail call void @_ZdlPv(i8* %9) #17
  br label %70

70:                                               ; preds = %53, %46, %63, %58, %64, %69
  %71 = phi i32 [ %67, %64 ], [ %67, %69 ], [ %61, %63 ], [ %61, %58 ], [ %49, %46 ], [ %49, %53 ]
  %72 = phi i8* [ %66, %64 ], [ %66, %69 ], [ %60, %63 ], [ %60, %58 ], [ %48, %46 ], [ %48, %53 ]
  %73 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %74 = insertvalue { i8*, i32 } %73, i32 %71, 1
  resume { i8*, i32 } %74
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler11UnreachableEv(%"class.v8::internal::torque::CfgAssembler"*) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.v8::internal::torque::Instruction", align 8
  %3 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %4 = alloca [15 x i8], align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 0, i8* %7, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  store i8 0, i8* %8, align 8
  %9 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %10 unwind label %44

10:                                               ; preds = %1
  %11 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %9 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"struct.v8::internal::torque::SourcePosition"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 %12, i64 20, i1 false)
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to i8*
  %18 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %17, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #14
  %19 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 0, i32 0
  %20 = load i32, i32* @_ZN2v88internal6torque16AbortInstruction5kKindE, align 4
  store i32 %20, i32* %19, align 8
  %21 = invoke i8* @_Znwm(i64 56) #16
          to label %22 unwind label %60

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 0, i32 1
  %24 = bitcast i8* %21 to i32 (...)***
  %25 = getelementptr inbounds i8, i8* %21, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %13, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque16AbortInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 28
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %21, i64 32
  %29 = bitcast i8* %28 to i64*
  store i64 %15, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %21, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %18, i64 15, i1 false)
  %31 = getelementptr inbounds i8, i8* %21, i64 55
  store i8 0, i8* %31, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 15, i1 false)
  %32 = ptrtoint i8* %21 to i64
  %33 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %32, i64* %33, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %2)
          to label %34 unwind label %48

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %35, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %35, align 8
  %37 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"struct.v8::internal::torque::InstructionBase"* %36 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %40 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %40, i64 3
  %42 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %41, align 8
  call void %42(%"struct.v8::internal::torque::InstructionBase"* nonnull %36) #14
  br label %43

43:                                               ; preds = %34, %38
  ret void

44:                                               ; preds = %1
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  br label %64

48:                                               ; preds = %22
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %52, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %52, align 8
  %54 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %48
  %56 = bitcast %"struct.v8::internal::torque::InstructionBase"* %53 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %57 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %57, i64 3
  %59 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %58, align 8
  call void %59(%"struct.v8::internal::torque::InstructionBase"* nonnull %53) #14
  br label %64

60:                                               ; preds = %10
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  %63 = extractvalue { i8*, i32 } %61, 1
  br label %64

64:                                               ; preds = %44, %48, %55, %60
  %65 = phi i8* [ %46, %44 ], [ %62, %60 ], [ %50, %48 ], [ %50, %55 ]
  %66 = phi i32 [ %47, %44 ], [ %63, %60 ], [ %51, %48 ], [ %51, %55 ]
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler10DebugBreakEv(%"class.v8::internal::torque::CfgAssembler"*) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.v8::internal::torque::Instruction", align 8
  %3 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %4 = alloca [15 x i8], align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 0, i8* %7, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  store i8 0, i8* %8, align 8
  %9 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
          to label %10 unwind label %44

10:                                               ; preds = %1
  %11 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %9 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"struct.v8::internal::torque::SourcePosition"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 %12, i64 20, i1 false)
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to i8*
  %18 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %17, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #14
  %19 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 0, i32 0
  %20 = load i32, i32* @_ZN2v88internal6torque16AbortInstruction5kKindE, align 4
  store i32 %20, i32* %19, align 8
  %21 = invoke i8* @_Znwm(i64 56) #16
          to label %22 unwind label %60

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 0, i32 1
  %24 = bitcast i8* %21 to i32 (...)***
  %25 = getelementptr inbounds i8, i8* %21, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %13, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal6torque16AbortInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 28
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %21, i64 32
  %29 = bitcast i8* %28 to i64*
  store i64 %15, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %21, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %18, i64 15, i1 false)
  %31 = getelementptr inbounds i8, i8* %21, i64 55
  store i8 0, i8* %31, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 15, i1 false)
  %32 = ptrtoint i8* %21 to i64
  %33 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %32, i64* %33, align 8
  invoke void @_ZN2v88internal6torque12CfgAssembler4EmitENS1_11InstructionE(%"class.v8::internal::torque::CfgAssembler"* %0, %"class.v8::internal::torque::Instruction"* nonnull %2)
          to label %34 unwind label %48

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %35, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %35, align 8
  %37 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"struct.v8::internal::torque::InstructionBase"* %36 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %40 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %40, i64 3
  %42 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %41, align 8
  call void %42(%"struct.v8::internal::torque::InstructionBase"* nonnull %36) #14
  br label %43

43:                                               ; preds = %34, %38
  ret void

44:                                               ; preds = %1
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  br label %64

48:                                               ; preds = %22
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %52, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %52, align 8
  %54 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %48
  %56 = bitcast %"struct.v8::internal::torque::InstructionBase"* %53 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %57 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %57, i64 3
  %59 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %58, align 8
  call void %59(%"struct.v8::internal::torque::InstructionBase"* nonnull %53) #14
  br label %64

60:                                               ; preds = %10
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  %63 = extractvalue { i8*, i32 } %61, 1
  br label %64

64:                                               ; preds = %44, %48, %55, %60
  %65 = phi i8* [ %46, %44 ], [ %62, %60 ], [ %50, %48 ], [ %50, %55 ]
  %66 = phi i32 [ %47, %44 ], [ %63, %60 ], [ %51, %48 ], [ %51, %55 ]
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque22CountBlockPredecessorsERKNS1_16ControlFlowGraphE(%"class.std::__1::vector.137"* noalias sret, %"class.v8::internal::torque::ControlFlowGraph"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = getelementptr inbounds %"class.v8::internal::torque::ControlFlowGraph", %"class.v8::internal::torque::ControlFlowGraph"* %1, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.137"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #14
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %35, label %8

8:                                                ; preds = %2
  %9 = icmp ugt i64 %5, 2305843009213693951
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = bitcast %"class.std::__1::vector.137"* %0 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %11) #15
          to label %12 unwind label %24

12:                                               ; preds = %10
  unreachable

13:                                               ; preds = %8
  %14 = shl i64 %5, 3
  %15 = invoke i8* @_Znwm(i64 %14) #16
          to label %16 unwind label %24

16:                                               ; preds = %13
  %17 = bitcast i8* %15 to i64*
  %18 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::vector.137"* %0 to i8**
  store i8* %15, i8** %19, align 8
  %20 = getelementptr inbounds i64, i64* %17, i64 %5
  %21 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %20, i64** %21, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 %14, i1 false)
  %22 = bitcast i64** %18 to i64*
  %23 = ptrtoint i64* %20 to i64
  store i64 %23, i64* %22, align 8
  br label %35

24:                                               ; preds = %13, %10
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = ptrtoint i64* %27 to i64
  %31 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 1
  %32 = bitcast i64** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i64* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #17
  br label %34

34:                                               ; preds = %29, %24
  resume { i8*, i32 } %25

35:                                               ; preds = %2, %16
  %36 = phi i64* [ null, %2 ], [ %17, %16 ]
  %37 = getelementptr inbounds %"class.v8::internal::torque::ControlFlowGraph", %"class.v8::internal::torque::ControlFlowGraph"* %1, i64 0, i32 1
  %38 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %38, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds i64, i64* %36, i64 %40
  store i64 1, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::torque::ControlFlowGraph", %"class.v8::internal::torque::ControlFlowGraph"* %1, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::torque::ControlFlowGraph", %"class.v8::internal::torque::ControlFlowGraph"* %1, i64 0, i32 2, i32 0, i32 1
  %46 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %45, align 8
  %47 = icmp eq %"class.v8::internal::torque::Block"** %44, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %35
  %49 = bitcast %"class.std::__1::vector"* %3 to i8*
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %52 = bitcast %"class.v8::internal::torque::Block"*** %51 to i64*
  br label %54

53:                                               ; preds = %120, %35
  ret void

54:                                               ; preds = %48, %120
  %55 = phi %"class.v8::internal::torque::Block"** [ %44, %48 ], [ %121, %120 ]
  %56 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #14
  %57 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %56, i64 0, i32 1, i32 0, i32 0
  %58 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %56, i64 0, i32 1, i32 0, i32 1
  %60 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %59, align 8
  %61 = icmp eq %"class.v8::internal::torque::Instruction"* %58, %60
  br i1 %61, label %120, label %85

62:                                               ; preds = %93
  %63 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %50, align 8
  %64 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %51, align 8
  %65 = icmp eq %"class.v8::internal::torque::Block"** %63, %64
  br i1 %65, label %114, label %66

66:                                               ; preds = %62
  %67 = ptrtoint %"class.v8::internal::torque::Block"** %63 to i64
  %68 = getelementptr %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %64, i64 -1
  %69 = ptrtoint %"class.v8::internal::torque::Block"** %68 to i64
  %70 = sub i64 %69, %67
  %71 = and i64 %70, 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %82

73:                                               ; preds = %66
  %74 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %63, align 8
  %75 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %74, i64 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = load i64*, i64** %41, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 %76
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %63, i64 1
  br label %82

82:                                               ; preds = %73, %66
  %83 = phi %"class.v8::internal::torque::Block"** [ %81, %73 ], [ %63, %66 ]
  %84 = icmp ult i64 %70, 8
  br i1 %84, label %112, label %123

85:                                               ; preds = %54, %93
  %86 = phi %"class.v8::internal::torque::Instruction"* [ %94, %93 ], [ %58, %54 ]
  %87 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %86, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %87, align 8
  %89 = bitcast %"struct.v8::internal::torque::InstructionBase"* %88 to void (%"struct.v8::internal::torque::InstructionBase"*, %"class.std::__1::vector"*)***
  %90 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"class.std::__1::vector"*)**, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.std::__1::vector"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*, %"class.std::__1::vector"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.std::__1::vector"*)** %90, i64 7
  %92 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"class.std::__1::vector"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.std::__1::vector"*)** %91, align 8
  invoke void %92(%"struct.v8::internal::torque::InstructionBase"* %88, %"class.std::__1::vector"* nonnull %3)
          to label %93 unwind label %96

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %86, i64 1
  %95 = icmp eq %"class.v8::internal::torque::Instruction"* %94, %60
  br i1 %95, label %62, label %85

96:                                               ; preds = %85
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %50, align 8
  %99 = icmp eq %"class.v8::internal::torque::Block"** %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"class.v8::internal::torque::Block"** %98 to i64
  store i64 %101, i64* %52, align 8
  %102 = bitcast %"class.v8::internal::torque::Block"** %98 to i8*
  call void @_ZdlPv(i8* %102) #17
  br label %103

103:                                              ; preds = %96, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  %104 = load i64*, i64** %41, align 8
  %105 = icmp eq i64* %104, null
  br i1 %105, label %111, label %106

106:                                              ; preds = %103
  %107 = ptrtoint i64* %104 to i64
  %108 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 1
  %109 = bitcast i64** %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = bitcast i64* %104 to i8*
  call void @_ZdlPv(i8* %110) #17
  br label %111

111:                                              ; preds = %103, %106
  resume { i8*, i32 } %97

112:                                              ; preds = %123, %82
  %113 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %50, align 8
  br label %114

114:                                              ; preds = %112, %62
  %115 = phi %"class.v8::internal::torque::Block"** [ %113, %112 ], [ %64, %62 ]
  %116 = icmp eq %"class.v8::internal::torque::Block"** %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.v8::internal::torque::Block"** %115 to i8*
  %119 = ptrtoint %"class.v8::internal::torque::Block"** %115 to i64
  store i64 %119, i64* %52, align 8
  call void @_ZdlPv(i8* %118) #17
  br label %120

120:                                              ; preds = %54, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  %121 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %55, i64 1
  %122 = icmp eq %"class.v8::internal::torque::Block"** %121, %46
  br i1 %122, label %53, label %54

123:                                              ; preds = %82, %123
  %124 = phi %"class.v8::internal::torque::Block"** [ %140, %123 ], [ %83, %82 ]
  %125 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %125, i64 0, i32 4
  %127 = load i64, i64* %126, align 8
  %128 = load i64*, i64** %41, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 %127
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %129, align 8
  %132 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %124, i64 1
  %133 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %133, i64 0, i32 4
  %135 = load i64, i64* %134, align 8
  %136 = load i64*, i64** %41, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 %135
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %137, align 8
  %140 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %124, i64 2
  %141 = icmp eq %"class.v8::internal::torque::Block"** %140, %64
  br i1 %141, label %112, label %123
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler11OptimizeCfgEv(%"class.v8::internal::torque::CfgAssembler"* nocapture) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__1::vector.137", align 8
  %3 = bitcast %"class.std::__1::vector.137"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #14
  %4 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 1
  call void @_ZN2v88internal6torque22CountBlockPredecessorsERKNS1_16ControlFlowGraphE(%"class.std::__1::vector.137"* nonnull sret %2, %"class.v8::internal::torque::ControlFlowGraph"* dereferenceable(112) %4)
  %5 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %6 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %8 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::torque::Block"** %6, %8
  br i1 %9, label %180, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %2, i64 0, i32 0, i32 0
  %14 = load i32, i32* @_ZN2v88internal6torque15GotoInstruction5kKindE, align 4
  br label %102

15:                                               ; preds = %177
  %16 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %5, align 8
  %17 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %7, align 8
  %18 = icmp eq %"class.v8::internal::torque::Block"** %16, %17
  br i1 %18, label %180, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %2, i64 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  br label %22

22:                                               ; preds = %30, %19
  %23 = phi %"class.v8::internal::torque::Block"** [ %16, %19 ], [ %31, %30 ]
  %24 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %23, align 8
  %25 = getelementptr %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %24, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i64, i64* %21, i64 %26
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %23, i64 1
  %32 = icmp eq %"class.v8::internal::torque::Block"** %31, %17
  br i1 %32, label %180, label %22

33:                                               ; preds = %22
  %34 = ptrtoint %"class.v8::internal::torque::Block"** %23 to i64
  %35 = icmp eq %"class.v8::internal::torque::Block"** %23, %17
  br i1 %35, label %180, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %23, i64 1
  %38 = icmp eq %"class.v8::internal::torque::Block"** %37, %17
  br i1 %38, label %97, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %2, i64 0, i32 0, i32 0
  %41 = getelementptr %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %17, i64 -2
  %42 = ptrtoint %"class.v8::internal::torque::Block"** %41 to i64
  %43 = sub i64 %42, %34
  %44 = and i64 %43, 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %39
  %47 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %37, align 8
  %48 = getelementptr %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %47, i64 0, i32 4
  %49 = load i64, i64* %48, align 8
  %50 = load i64*, i64** %40, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 %49
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %46
  %55 = ptrtoint %"class.v8::internal::torque::Block"* %47 to i64
  %56 = bitcast %"class.v8::internal::torque::Block"** %23 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %23, i64 1
  %58 = ptrtoint %"class.v8::internal::torque::Block"** %57 to i64
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %34, %46 ], [ %58, %54 ]
  %61 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %23, i64 2
  br label %62

62:                                               ; preds = %59, %39
  %63 = phi i64 [ undef, %39 ], [ %60, %59 ]
  %64 = phi %"class.v8::internal::torque::Block"** [ %37, %39 ], [ %61, %59 ]
  %65 = phi i64 [ %34, %39 ], [ %60, %59 ]
  %66 = icmp ult i64 %43, 8
  br i1 %66, label %93, label %67

67:                                               ; preds = %62, %202
  %68 = phi %"class.v8::internal::torque::Block"** [ %204, %202 ], [ %64, %62 ]
  %69 = phi i64 [ %203, %202 ], [ %65, %62 ]
  %70 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %68, align 8
  %71 = getelementptr %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %70, i64 0, i32 4
  %72 = load i64, i64* %71, align 8
  %73 = load i64*, i64** %40, align 8
  %74 = getelementptr inbounds i64, i64* %73, i64 %72
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %67
  %78 = ptrtoint %"class.v8::internal::torque::Block"* %70 to i64
  %79 = inttoptr i64 %69 to %"class.v8::internal::torque::Block"**
  %80 = inttoptr i64 %69 to i64*
  store i64 %78, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %79, i64 1
  %82 = ptrtoint %"class.v8::internal::torque::Block"** %81 to i64
  br label %83

83:                                               ; preds = %77, %67
  %84 = phi i64 [ %69, %67 ], [ %82, %77 ]
  %85 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %68, i64 1
  %86 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %85, align 8
  %87 = getelementptr %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %86, i64 0, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = load i64*, i64** %40, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 %88
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %202, label %196

93:                                               ; preds = %202, %62
  %94 = phi i64 [ %63, %62 ], [ %203, %202 ]
  %95 = inttoptr i64 %94 to %"class.v8::internal::torque::Block"**
  %96 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %7, align 8
  br label %97

97:                                               ; preds = %93, %36
  %98 = phi %"class.v8::internal::torque::Block"** [ %17, %36 ], [ %96, %93 ]
  %99 = phi %"class.v8::internal::torque::Block"** [ %23, %36 ], [ %95, %93 ]
  %100 = icmp eq %"class.v8::internal::torque::Block"** %99, %98
  br i1 %100, label %180, label %101

101:                                              ; preds = %97
  store %"class.v8::internal::torque::Block"** %99, %"class.v8::internal::torque::Block"*** %7, align 8
  br label %180

102:                                              ; preds = %10, %177
  %103 = phi %"class.v8::internal::torque::Block"** [ %6, %10 ], [ %178, %177 ]
  %104 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %103, align 8
  %105 = load i8, i8* %11, align 8
  %106 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %12, align 8
  %107 = icmp ne i8 %105, 0
  %108 = icmp eq %"class.v8::internal::torque::Block"* %106, %104
  %109 = and i1 %107, %108
  br i1 %109, label %177, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %104, i64 0, i32 4
  %112 = load i64, i64* %111, align 8
  %113 = load i64*, i64** %13, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 %112
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %177, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %104, i64 0, i32 1
  %119 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %104, i64 0, i32 1, i32 0, i32 1
  %122 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %121, align 8
  %123 = icmp eq %"class.v8::internal::torque::Instruction"* %120, %122
  br i1 %123, label %177, label %124

124:                                              ; preds = %117, %164
  %125 = phi %"class.v8::internal::torque::Instruction"* [ %171, %164 ], [ %122, %117 ]
  %126 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %125, i64 -1
  %127 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %126, i64 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %128, %14
  br i1 %129, label %130, label %177

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %125, i64 -1, i32 1, i32 0, i32 0, i32 0
  %132 = bitcast %"struct.v8::internal::torque::InstructionBase"** %131 to %"struct.v8::internal::torque::GotoInstruction"**
  %133 = load %"struct.v8::internal::torque::GotoInstruction"*, %"struct.v8::internal::torque::GotoInstruction"** %132, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::torque::GotoInstruction", %"struct.v8::internal::torque::GotoInstruction"* %133, i64 0, i32 1
  %135 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %134, align 8
  %136 = icmp eq %"class.v8::internal::torque::Block"* %135, %104
  %137 = bitcast %"struct.v8::internal::torque::GotoInstruction"* %133 to %"struct.v8::internal::torque::InstructionBase"*
  br i1 %136, label %177, label %138

138:                                              ; preds = %130
  %139 = load i8, i8* %11, align 8
  %140 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %12, align 8
  %141 = icmp ne i8 %139, 0
  %142 = icmp eq %"class.v8::internal::torque::Block"* %140, %135
  %143 = and i1 %141, %142
  br i1 %143, label %177, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %135, i64 0, i32 4
  %146 = load i64, i64* %145, align 8
  %147 = load i64*, i64** %13, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 %146
  %149 = load i64, i64* %148, align 8
  %150 = icmp eq i64 %149, 1
  br i1 %150, label %151, label %177

151:                                              ; preds = %144
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %131, align 8
  %152 = icmp eq %"struct.v8::internal::torque::GotoInstruction"* %133, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %151
  %154 = bitcast %"struct.v8::internal::torque::GotoInstruction"* %133 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %155 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %155, i64 3
  %157 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %156, align 8
  call void %157(%"struct.v8::internal::torque::InstructionBase"* nonnull %137) #14
  br label %158

158:                                              ; preds = %151, %153
  store %"class.v8::internal::torque::Instruction"* %126, %"class.v8::internal::torque::Instruction"** %121, align 8
  %159 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %135, i64 0, i32 1, i32 0, i32 0
  %160 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %135, i64 0, i32 1, i32 0, i32 1
  %162 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %161, align 8
  %163 = invoke %"class.v8::internal::torque::Instruction"* @_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.18"* %118, %"class.v8::internal::torque::Instruction"* %126, %"class.v8::internal::torque::Instruction"* %160, %"class.v8::internal::torque::Instruction"* %162)
          to label %164 unwind label %173

164:                                              ; preds = %158
  %165 = load i64, i64* %145, align 8
  %166 = load i64*, i64** %13, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 %165
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, -1
  store i64 %169, i64* %167, align 8
  %170 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %119, align 8
  %171 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %121, align 8
  %172 = icmp eq %"class.v8::internal::torque::Instruction"* %170, %171
  br i1 %172, label %177, label %124

173:                                              ; preds = %158
  %174 = landingpad { i8*, i32 }
          cleanup
  %175 = load i64*, i64** %13, align 8
  %176 = icmp eq i64* %175, null
  br i1 %176, label %195, label %190

177:                                              ; preds = %164, %124, %130, %144, %138, %117, %102, %110
  %178 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %103, i64 1
  %179 = icmp eq %"class.v8::internal::torque::Block"** %178, %8
  br i1 %179, label %15, label %102

180:                                              ; preds = %30, %1, %15, %101, %97, %33
  %181 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %2, i64 0, i32 0, i32 0
  %182 = load i64*, i64** %181, align 8
  %183 = icmp eq i64* %182, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %180
  %185 = ptrtoint i64* %182 to i64
  %186 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %2, i64 0, i32 0, i32 1
  %187 = bitcast i64** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = bitcast i64* %182 to i8*
  call void @_ZdlPv(i8* %188) #17
  br label %189

189:                                              ; preds = %180, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  ret void

190:                                              ; preds = %173
  %191 = ptrtoint i64* %175 to i64
  %192 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %2, i64 0, i32 0, i32 1
  %193 = bitcast i64** %192 to i64*
  store i64 %191, i64* %193, align 8
  %194 = bitcast i64* %175 to i8*
  call void @_ZdlPv(i8* %194) #17
  br label %195

195:                                              ; preds = %173, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  resume { i8*, i32 } %174

196:                                              ; preds = %83
  %197 = ptrtoint %"class.v8::internal::torque::Block"* %86 to i64
  %198 = inttoptr i64 %84 to %"class.v8::internal::torque::Block"**
  %199 = inttoptr i64 %84 to i64*
  store i64 %197, i64* %199, align 8
  %200 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %198, i64 1
  %201 = ptrtoint %"class.v8::internal::torque::Block"** %200 to i64
  br label %202

202:                                              ; preds = %196, %83
  %203 = phi i64 [ %84, %83 ], [ %201, %196 ]
  %204 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %68, i64 2
  %205 = icmp eq %"class.v8::internal::torque::Block"** %204, %17
  br i1 %205, label %93, label %67
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.v8::internal::torque::Instruction"* @_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.18"*, %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"*) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = ptrtoint %"class.v8::internal::torque::Instruction"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.v8::internal::torque::Instruction"* %2 to i64
  %8 = ptrtoint %"class.v8::internal::torque::Instruction"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = ashr exact i64 %9, 4
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %238

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.v8::internal::torque::Instruction"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %16, align 8
  %18 = ptrtoint %"class.v8::internal::torque::Instruction"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.v8::internal::torque::Instruction"** %16 to i64*
  br i1 %21, label %105, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 4
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %55

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %2, i64 %25
  %29 = icmp eq %"class.v8::internal::torque::Instruction"* %28, %3
  br i1 %29, label %52, label %30

30:                                               ; preds = %27, %45
  %31 = phi %"class.v8::internal::torque::Instruction"* [ %48, %45 ], [ %17, %27 ]
  %32 = phi %"class.v8::internal::torque::Instruction"* [ %47, %45 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %36, align 8
  %38 = bitcast %"struct.v8::internal::torque::InstructionBase"* %37 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %39 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %38, align 8
  %40 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %39, align 8
  %41 = invoke %"struct.v8::internal::torque::InstructionBase"* %40(%"struct.v8::internal::torque::InstructionBase"* %37)
          to label %45 unwind label %42

42:                                               ; preds = %30
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  tail call void @__clang_call_terminate(i8* %44) #18
  unreachable

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %31, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %41, %"struct.v8::internal::torque::InstructionBase"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %32, i64 1
  %48 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %31, i64 1
  %49 = icmp eq %"class.v8::internal::torque::Instruction"* %47, %3
  br i1 %49, label %50, label %30

50:                                               ; preds = %45
  %51 = ptrtoint %"class.v8::internal::torque::Instruction"* %48 to i64
  br label %52

52:                                               ; preds = %50, %27
  %53 = phi i64 [ %18, %27 ], [ %51, %50 ]
  store i64 %53, i64* %22, align 8
  %54 = icmp sgt i64 %24, 0
  br i1 %54, label %55, label %238

55:                                               ; preds = %23, %52
  %56 = phi %"class.v8::internal::torque::Instruction"* [ %28, %52 ], [ %3, %23 ]
  %57 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %1, i64 %10
  tail call void @_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE12__move_rangeEPS4_S8_S8_(%"class.std::__1::vector.18"* %0, %"class.v8::internal::torque::Instruction"* %1, %"class.v8::internal::torque::Instruction"* %17, %"class.v8::internal::torque::Instruction"* %57)
  %58 = icmp eq %"class.v8::internal::torque::Instruction"* %56, %2
  br i1 %58, label %238, label %59

59:                                               ; preds = %55, %101
  %60 = phi %"class.v8::internal::torque::Instruction"* [ %103, %101 ], [ %1, %55 ]
  %61 = phi %"class.v8::internal::torque::Instruction"* [ %102, %101 ], [ %2, %55 ]
  %62 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %60, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %61, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %67, label %76

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %61, i64 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %70, align 8
  %72 = bitcast %"struct.v8::internal::torque::InstructionBase"* %69 to void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)***
  %73 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)** %73, i64 1
  %75 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)** %74, align 8
  invoke void %75(%"struct.v8::internal::torque::InstructionBase"* %69, %"struct.v8::internal::torque::InstructionBase"* dereferenceable(32) %71)
          to label %101 unwind label %98

76:                                               ; preds = %59
  store i32 %65, i32* %62, align 8
  %77 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %61, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %77, align 8
  %79 = bitcast %"struct.v8::internal::torque::InstructionBase"* %78 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %80 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %79, align 8
  %81 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %80, align 8
  %82 = invoke %"struct.v8::internal::torque::InstructionBase"* %81(%"struct.v8::internal::torque::InstructionBase"* %78)
          to label %83 unwind label %95

83:                                               ; preds = %76
  %84 = ptrtoint %"struct.v8::internal::torque::InstructionBase"* %82 to i64
  %85 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %60, i64 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %86, align 8
  %88 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %84, i64* %88, align 8
  %89 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %87, null
  br i1 %89, label %101, label %90

90:                                               ; preds = %83
  %91 = bitcast %"struct.v8::internal::torque::InstructionBase"* %87 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %92 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %92, i64 3
  %94 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %93, align 8
  tail call void %94(%"struct.v8::internal::torque::InstructionBase"* nonnull %87) #14
  br label %101

95:                                               ; preds = %76
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  tail call void @__clang_call_terminate(i8* %97) #18
  unreachable

98:                                               ; preds = %67
  %99 = landingpad { i8*, i32 }
          catch i8* null
  %100 = extractvalue { i8*, i32 } %99, 0
  tail call void @__clang_call_terminate(i8* %100) #18
  unreachable

101:                                              ; preds = %90, %83, %67
  %102 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %61, i64 1
  %103 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %60, i64 1
  %104 = icmp eq %"class.v8::internal::torque::Instruction"* %102, %56
  br i1 %104, label %238, label %59

105:                                              ; preds = %12
  %106 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %18, %107
  %109 = ashr exact i64 %108, 4
  %110 = add nsw i64 %109, %10
  %111 = icmp ugt i64 %110, 1152921504606846975
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #15
  unreachable

114:                                              ; preds = %105
  %115 = sub i64 %15, %107
  %116 = ashr exact i64 %115, 4
  %117 = icmp ult i64 %116, 576460752303423487
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = sub i64 %5, %107
  %120 = ashr exact i64 %119, 4
  br label %131

121:                                              ; preds = %114
  %122 = ashr exact i64 %115, 3
  %123 = icmp ult i64 %122, %110
  %124 = select i1 %123, i64 %110, i64 %122
  %125 = sub i64 %5, %107
  %126 = ashr exact i64 %125, 4
  %127 = icmp eq i64 %124, 0
  br i1 %127, label %137, label %128

128:                                              ; preds = %121
  %129 = icmp ugt i64 %124, 1152921504606846975
  br i1 %129, label %130, label %131

130:                                              ; preds = %128
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

131:                                              ; preds = %118, %128
  %132 = phi i64 [ 1152921504606846975, %118 ], [ %124, %128 ]
  %133 = phi i64 [ %120, %118 ], [ %126, %128 ]
  %134 = shl i64 %132, 4
  %135 = tail call i8* @_Znwm(i64 %134) #16
  %136 = bitcast i8* %135 to %"class.v8::internal::torque::Instruction"*
  br label %137

137:                                              ; preds = %131, %121
  %138 = phi i64 [ %133, %131 ], [ %126, %121 ]
  %139 = phi i64 [ %132, %131 ], [ 0, %121 ]
  %140 = phi %"class.v8::internal::torque::Instruction"* [ %136, %131 ], [ null, %121 ]
  %141 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %140, i64 %138
  %142 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %140, i64 %139
  %143 = ptrtoint %"class.v8::internal::torque::Instruction"* %142 to i64
  %144 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %141, i64 %10
  br label %145

145:                                              ; preds = %137, %160
  %146 = phi %"class.v8::internal::torque::Instruction"* [ %162, %160 ], [ %141, %137 ]
  %147 = phi %"class.v8::internal::torque::Instruction"* [ %163, %160 ], [ %2, %137 ]
  %148 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %146, i64 0, i32 0
  %149 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %147, i64 0, i32 0
  %150 = load i32, i32* %149, align 8
  store i32 %150, i32* %148, align 8
  %151 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %147, i64 0, i32 1, i32 0, i32 0, i32 0
  %152 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %151, align 8
  %153 = bitcast %"struct.v8::internal::torque::InstructionBase"* %152 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %154 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %153, align 8
  %155 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %154, align 8
  %156 = invoke %"struct.v8::internal::torque::InstructionBase"* %155(%"struct.v8::internal::torque::InstructionBase"* %152)
          to label %160 unwind label %157

157:                                              ; preds = %145
  %158 = landingpad { i8*, i32 }
          catch i8* null
  %159 = extractvalue { i8*, i32 } %158, 0
  tail call void @__clang_call_terminate(i8* %159) #18
  unreachable

160:                                              ; preds = %145
  %161 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %146, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %156, %"struct.v8::internal::torque::InstructionBase"** %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %146, i64 1
  %163 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %147, i64 1
  %164 = icmp eq %"class.v8::internal::torque::Instruction"* %144, %162
  br i1 %164, label %165, label %145

165:                                              ; preds = %160
  %166 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %6, align 8
  %167 = icmp eq %"class.v8::internal::torque::Instruction"* %166, %1
  br i1 %167, label %188, label %168

168:                                              ; preds = %165, %184
  %169 = phi %"class.v8::internal::torque::Instruction"* [ %186, %184 ], [ %141, %165 ]
  %170 = phi %"class.v8::internal::torque::Instruction"* [ %171, %184 ], [ %1, %165 ]
  %171 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %170, i64 -1
  %172 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %169, i64 -1, i32 0
  %173 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %171, i64 0, i32 0
  %174 = load i32, i32* %173, align 8
  store i32 %174, i32* %172, align 8
  %175 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %170, i64 -1, i32 1, i32 0, i32 0, i32 0
  %176 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %175, align 8
  %177 = bitcast %"struct.v8::internal::torque::InstructionBase"* %176 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %178 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %177, align 8
  %179 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %178, align 8
  %180 = invoke %"struct.v8::internal::torque::InstructionBase"* %179(%"struct.v8::internal::torque::InstructionBase"* %176)
          to label %184 unwind label %181

181:                                              ; preds = %168
  %182 = landingpad { i8*, i32 }
          catch i8* null
  %183 = extractvalue { i8*, i32 } %182, 0
  tail call void @__clang_call_terminate(i8* %183) #18
  unreachable

184:                                              ; preds = %168
  %185 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %169, i64 -1, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %180, %"struct.v8::internal::torque::InstructionBase"** %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %169, i64 -1
  %187 = icmp eq %"class.v8::internal::torque::Instruction"* %171, %166
  br i1 %187, label %188, label %168

188:                                              ; preds = %184, %165
  %189 = phi %"class.v8::internal::torque::Instruction"* [ %141, %165 ], [ %186, %184 ]
  %190 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %16, align 8
  %191 = icmp eq %"class.v8::internal::torque::Instruction"* %190, %1
  br i1 %191, label %214, label %192

192:                                              ; preds = %188, %207
  %193 = phi %"class.v8::internal::torque::Instruction"* [ %210, %207 ], [ %144, %188 ]
  %194 = phi %"class.v8::internal::torque::Instruction"* [ %209, %207 ], [ %1, %188 ]
  %195 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %193, i64 0, i32 0
  %196 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %194, i64 0, i32 0
  %197 = load i32, i32* %196, align 8
  store i32 %197, i32* %195, align 8
  %198 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %194, i64 0, i32 1, i32 0, i32 0, i32 0
  %199 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %198, align 8
  %200 = bitcast %"struct.v8::internal::torque::InstructionBase"* %199 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %201 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %200, align 8
  %202 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %201, align 8
  %203 = invoke %"struct.v8::internal::torque::InstructionBase"* %202(%"struct.v8::internal::torque::InstructionBase"* %199)
          to label %207 unwind label %204

204:                                              ; preds = %192
  %205 = landingpad { i8*, i32 }
          catch i8* null
  %206 = extractvalue { i8*, i32 } %205, 0
  tail call void @__clang_call_terminate(i8* %206) #18
  unreachable

207:                                              ; preds = %192
  %208 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %193, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %203, %"struct.v8::internal::torque::InstructionBase"** %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %194, i64 1
  %210 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %193, i64 1
  %211 = icmp eq %"class.v8::internal::torque::Instruction"* %209, %190
  br i1 %211, label %212, label %192

212:                                              ; preds = %207
  %213 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %16, align 8
  br label %214

214:                                              ; preds = %188, %212
  %215 = phi %"class.v8::internal::torque::Instruction"* [ %213, %212 ], [ %1, %188 ]
  %216 = phi %"class.v8::internal::torque::Instruction"* [ %210, %212 ], [ %144, %188 ]
  %217 = ptrtoint %"class.v8::internal::torque::Instruction"* %189 to i64
  %218 = ptrtoint %"class.v8::internal::torque::Instruction"* %216 to i64
  %219 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %6, align 8
  store i64 %217, i64* %106, align 8
  store i64 %218, i64* %22, align 8
  store i64 %143, i64* %14, align 8
  %220 = icmp eq %"class.v8::internal::torque::Instruction"* %215, %219
  br i1 %220, label %234, label %221

221:                                              ; preds = %214, %232
  %222 = phi %"class.v8::internal::torque::Instruction"* [ %223, %232 ], [ %215, %214 ]
  %223 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %222, i64 -1
  %224 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %222, i64 -1, i32 1, i32 0, i32 0, i32 0
  %225 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %224, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %224, align 8
  %226 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %221
  %228 = bitcast %"struct.v8::internal::torque::InstructionBase"* %225 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %229 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %229, i64 3
  %231 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %230, align 8
  tail call void %231(%"struct.v8::internal::torque::InstructionBase"* nonnull %225) #14
  br label %232

232:                                              ; preds = %227, %221
  %233 = icmp eq %"class.v8::internal::torque::Instruction"* %223, %219
  br i1 %233, label %234, label %221

234:                                              ; preds = %232, %214
  %235 = icmp eq %"class.v8::internal::torque::Instruction"* %219, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %234
  %237 = bitcast %"class.v8::internal::torque::Instruction"* %219 to i8*
  tail call void @_ZdlPv(i8* %237) #17
  br label %238

238:                                              ; preds = %101, %236, %234, %52, %55, %4
  %239 = phi %"class.v8::internal::torque::Instruction"* [ %1, %4 ], [ %1, %55 ], [ %1, %52 ], [ %141, %234 ], [ %141, %236 ], [ %1, %101 ]
  ret %"class.v8::internal::torque::Instruction"* %239
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque12CfgAssembler23ComputeInputDefinitionsEv(%"class.v8::internal::torque::CfgAssembler"* nocapture readonly) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.v8::internal::torque::Worklist", align 8
  %3 = alloca %"class.v8::internal::torque::Stack.38", align 8
  %4 = alloca %"class.v8::internal::torque::Stack.38", align 8
  %5 = bitcast %"class.v8::internal::torque::Worklist"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 1, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.173"* %6 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 80, i1 false) #14
  store i32 1065353216, i32* %7, align 8
  %8 = bitcast %"class.v8::internal::torque::Stack.38"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"class.v8::internal::torque::CfgAssembler", %"class.v8::internal::torque::CfgAssembler"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %3, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %10 to i64*
  %13 = bitcast %"class.v8::internal::torque::Stack.38"* %3 to i64*
  %14 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %11 to i64*
  %15 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %3, i64 0, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %113, %1
  %17 = phi i64 [ 0, %1 ], [ %114, %113 ]
  %18 = phi %"class.v8::internal::torque::DefinitionLocation"* [ null, %1 ], [ %115, %113 ]
  %19 = phi i64 [ 0, %1 ], [ %116, %113 ]
  %20 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %9, align 8
  %21 = icmp eq %"class.v8::internal::torque::Block"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.v8::internal::torque::Type"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.v8::internal::torque::Stack"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %22, %16
  %32 = phi i64 [ %30, %22 ], [ 0, %16 ]
  %33 = icmp ult i64 %19, %32
  br i1 %33, label %55, label %34

34:                                               ; preds = %31
  invoke void @_ZN2v88internal6torque5Block21MergeInputDefinitionsERKNS1_5StackINS1_18DefinitionLocationEEEPNS1_8WorklistIPS2_EE(%"class.v8::internal::torque::Block"* %20, %"class.v8::internal::torque::Stack.38"* nonnull dereferenceable(24) %3, %"class.v8::internal::torque::Worklist"* nonnull %2)
          to label %35 unwind label %182

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %217, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.v8::internal::torque::Stack.38"* %4 to i8*
  %41 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %4, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %41 to i8**
  %43 = bitcast %"class.v8::internal::torque::Stack.38"* %4 to i8**
  %44 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %41 to i64*
  %46 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %4, i64 0, i32 0, i32 0, i32 0
  br label %117

47:                                               ; preds = %84
  %48 = landingpad { i8*, i32 }
          cleanup
  br label %51

49:                                               ; preds = %72
  %50 = landingpad { i8*, i32 }
          cleanup
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { i8*, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  br label %224

55:                                               ; preds = %31
  %56 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %11, align 8
  %57 = icmp ult %"class.v8::internal::torque::DefinitionLocation"* %18, %56
  %58 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %56 to i64
  br i1 %57, label %59, label %65

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %18, i64 0, i32 0
  store i32 1, i32* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %18, i64 0, i32 1
  store i8* null, i8** %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %18, i64 0, i32 2
  store i64 %19, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %18, i64 1
  %64 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %63 to i64
  store i64 %64, i64* %12, align 8
  br label %113

65:                                               ; preds = %55
  %66 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %18 to i64
  %67 = load i64, i64* %13, align 8
  %68 = sub i64 %66, %67
  %69 = sdiv exact i64 %68, 24
  %70 = add nsw i64 %69, 1
  %71 = icmp ugt i64 %70, 768614336404564650
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.v8::internal::torque::Stack.38"* %3 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %73) #15
          to label %74 unwind label %49

74:                                               ; preds = %72
  unreachable

75:                                               ; preds = %65
  %76 = sub i64 %58, %67
  %77 = sdiv exact i64 %76, 24
  %78 = icmp ult i64 %77, 384307168202282325
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = shl nsw i64 %77, 1
  %81 = icmp ult i64 %80, %70
  %82 = select i1 %81, i64 %70, i64 %80
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %79, %75
  %85 = phi i64 [ %82, %79 ], [ 768614336404564650, %75 ]
  %86 = mul i64 %85, 24
  %87 = invoke i8* @_Znwm(i64 %86) #16
          to label %88 unwind label %47

88:                                               ; preds = %84
  %89 = bitcast i8* %87 to %"class.v8::internal::torque::DefinitionLocation"*
  br label %90

90:                                               ; preds = %88, %79
  %91 = phi i64 [ %85, %88 ], [ 0, %79 ]
  %92 = phi %"class.v8::internal::torque::DefinitionLocation"* [ %89, %88 ], [ null, %79 ]
  %93 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %92, i64 %69
  %94 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %92, i64 %91
  %95 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %94 to i64
  %96 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %93, i64 0, i32 0
  store i32 1, i32* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %92, i64 %69, i32 1
  store i8* null, i8** %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %92, i64 %69, i32 2
  store i64 %19, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %93, i64 1
  %100 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %99 to i64
  %101 = sub i64 %17, %67
  %102 = sdiv exact i64 %101, -24
  %103 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %93, i64 %102
  %104 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %103 to i64
  %105 = icmp sgt i64 %101, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %90
  %107 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %103 to i8*
  %108 = inttoptr i64 %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 %101, i1 false) #14
  br label %109

109:                                              ; preds = %106, %90
  store i64 %104, i64* %13, align 8
  store i64 %100, i64* %12, align 8
  store i64 %95, i64* %14, align 8
  %110 = icmp eq i64 %67, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = inttoptr i64 %67 to i8*
  tail call void @_ZdlPv(i8* %112) #17
  br label %113

113:                                              ; preds = %111, %109, %59
  %114 = phi i64 [ %100, %111 ], [ %100, %109 ], [ %64, %59 ]
  %115 = phi %"class.v8::internal::torque::DefinitionLocation"* [ %99, %111 ], [ %99, %109 ], [ %63, %59 ]
  %116 = add nuw i64 %19, 1
  br label %16

117:                                              ; preds = %39, %179
  %118 = invoke %"class.v8::internal::torque::Block"* @_ZN2v88internal6torque8WorklistIPNS1_5BlockEE7DequeueEv(%"class.v8::internal::torque::Worklist"* nonnull %2)
          to label %119 unwind label %186

119:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14
  %120 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %118, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #14
  %121 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %118, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %122 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::torque::Stack.38"* %120 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %123, %125
  %127 = sdiv exact i64 %126, 24
  %128 = icmp eq i64 %126, 0
  br i1 %128, label %162, label %129

129:                                              ; preds = %119
  %130 = icmp ugt i64 %127, 768614336404564650
  br i1 %130, label %131, label %134

131:                                              ; preds = %129
  %132 = bitcast %"class.v8::internal::torque::Stack.38"* %4 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %132) #15
          to label %133 unwind label %155

133:                                              ; preds = %131
  unreachable

134:                                              ; preds = %129
  %135 = invoke i8* @_Znwm(i64 %126) #16
          to label %136 unwind label %153

136:                                              ; preds = %134
  %137 = bitcast i8* %135 to %"class.v8::internal::torque::DefinitionLocation"*
  store i8* %135, i8** %42, align 8
  store i8* %135, i8** %43, align 8
  %138 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %137, i64 %127
  store %"class.v8::internal::torque::DefinitionLocation"* %138, %"class.v8::internal::torque::DefinitionLocation"** %44, align 8
  %139 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %120, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %139, align 8
  %141 = load i64, i64* %122, align 8
  %142 = ptrtoint i8* %135 to i64
  %143 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %140 to i64
  %144 = sub i64 %141, %143
  %145 = icmp sgt i64 %144, 0
  br i1 %145, label %146, label %151

146:                                              ; preds = %136
  %147 = udiv exact i64 %144, 24
  %148 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* align 8 %148, i64 %144, i1 false) #14
  %149 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %137, i64 %147
  %150 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %149 to i64
  br label %151

151:                                              ; preds = %146, %136
  %152 = phi i64 [ %150, %146 ], [ %142, %136 ]
  store i64 %152, i64* %45, align 8
  br label %162

153:                                              ; preds = %134
  %154 = landingpad { i8*, i32 }
          cleanup
  br label %190

155:                                              ; preds = %131
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %46, align 8
  %158 = icmp eq %"class.v8::internal::torque::DefinitionLocation"* %157, null
  br i1 %158, label %190, label %159

159:                                              ; preds = %155
  %160 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %157 to i8*
  %161 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %157 to i64
  store i64 %161, i64* %45, align 8
  call void @_ZdlPv(i8* %160) #17
  br label %190

162:                                              ; preds = %151, %119
  %163 = phi i8* [ %135, %151 ], [ null, %119 ]
  %164 = phi %"class.v8::internal::torque::DefinitionLocation"* [ %137, %151 ], [ null, %119 ]
  %165 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %118, i64 0, i32 1, i32 0, i32 0
  %166 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %118, i64 0, i32 1, i32 0, i32 1
  %168 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %167, align 8
  %169 = icmp eq %"class.v8::internal::torque::Instruction"* %166, %168
  br i1 %169, label %173, label %194

170:                                              ; preds = %202
  %171 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %46, align 8
  %172 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %171 to i8*
  br label %173

173:                                              ; preds = %170, %162
  %174 = phi i8* [ %172, %170 ], [ %163, %162 ]
  %175 = phi %"class.v8::internal::torque::DefinitionLocation"* [ %171, %170 ], [ %164, %162 ]
  %176 = icmp eq %"class.v8::internal::torque::DefinitionLocation"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  %178 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %175 to i64
  store i64 %178, i64* %45, align 8
  call void @_ZdlPv(i8* %174) #17
  br label %179

179:                                              ; preds = %173, %177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14
  %180 = load i64, i64* %36, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %217, label %117

182:                                              ; preds = %34
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = extractvalue { i8*, i32 } %183, 0
  %185 = extractvalue { i8*, i32 } %183, 1
  br label %224

186:                                              ; preds = %117
  %187 = landingpad { i8*, i32 }
          cleanup
  %188 = extractvalue { i8*, i32 } %187, 0
  %189 = extractvalue { i8*, i32 } %187, 1
  br label %224

190:                                              ; preds = %153, %155, %159
  %191 = phi { i8*, i32 } [ %154, %153 ], [ %156, %155 ], [ %156, %159 ]
  %192 = extractvalue { i8*, i32 } %191, 0
  %193 = extractvalue { i8*, i32 } %191, 1
  br label %214

194:                                              ; preds = %162, %202
  %195 = phi %"class.v8::internal::torque::Instruction"* [ %203, %202 ], [ %166, %162 ]
  %196 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %195, i64 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %196, align 8
  %198 = bitcast %"struct.v8::internal::torque::InstructionBase"* %197 to void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack.38"*, %"class.v8::internal::torque::Worklist"*)***
  %199 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack.38"*, %"class.v8::internal::torque::Worklist"*)**, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack.38"*, %"class.v8::internal::torque::Worklist"*)*** %198, align 8
  %200 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack.38"*, %"class.v8::internal::torque::Worklist"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack.38"*, %"class.v8::internal::torque::Worklist"*)** %199, i64 5
  %201 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack.38"*, %"class.v8::internal::torque::Worklist"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"class.v8::internal::torque::Stack.38"*, %"class.v8::internal::torque::Worklist"*)** %200, align 8
  invoke void %201(%"struct.v8::internal::torque::InstructionBase"* %197, %"class.v8::internal::torque::Stack.38"* nonnull %4, %"class.v8::internal::torque::Worklist"* nonnull %2)
          to label %202 unwind label %205

202:                                              ; preds = %194
  %203 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %195, i64 1
  %204 = icmp eq %"class.v8::internal::torque::Instruction"* %203, %168
  br i1 %204, label %170, label %194

205:                                              ; preds = %194
  %206 = landingpad { i8*, i32 }
          cleanup
  %207 = extractvalue { i8*, i32 } %206, 0
  %208 = extractvalue { i8*, i32 } %206, 1
  %209 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %46, align 8
  %210 = icmp eq %"class.v8::internal::torque::DefinitionLocation"* %209, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %205
  %212 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %209 to i64
  store i64 %212, i64* %45, align 8
  %213 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %209 to i8*
  call void @_ZdlPv(i8* %213) #17
  br label %214

214:                                              ; preds = %211, %205, %190
  %215 = phi i32 [ %193, %190 ], [ %208, %205 ], [ %208, %211 ]
  %216 = phi i8* [ %192, %190 ], [ %207, %205 ], [ %207, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14
  br label %224

217:                                              ; preds = %179, %35
  %218 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %15, align 8
  %219 = icmp eq %"class.v8::internal::torque::DefinitionLocation"* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %217
  %221 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %218 to i64
  store i64 %221, i64* %12, align 8
  %222 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %218 to i8*
  call void @_ZdlPv(i8* %222) #17
  br label %223

223:                                              ; preds = %217, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  call void @_ZN2v88internal6torque8WorklistIPNS1_5BlockEED2Ev(%"class.v8::internal::torque::Worklist"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #14
  ret void

224:                                              ; preds = %186, %214, %182, %51
  %225 = phi i32 [ %54, %51 ], [ %185, %182 ], [ %215, %214 ], [ %189, %186 ]
  %226 = phi i8* [ %53, %51 ], [ %184, %182 ], [ %216, %214 ], [ %188, %186 ]
  %227 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %15, align 8
  %228 = icmp eq %"class.v8::internal::torque::DefinitionLocation"* %227, null
  br i1 %228, label %232, label %229

229:                                              ; preds = %224
  %230 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %227 to i64
  store i64 %230, i64* %12, align 8
  %231 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %227 to i8*
  call void @_ZdlPv(i8* %231) #17
  br label %232

232:                                              ; preds = %224, %229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  call void @_ZN2v88internal6torque8WorklistIPNS1_5BlockEED2Ev(%"class.v8::internal::torque::Worklist"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #14
  %233 = insertvalue { i8*, i32 } undef, i8* %226, 0
  %234 = insertvalue { i8*, i32 } %233, i32 %225, 1
  resume { i8*, i32 } %234
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque5Block21MergeInputDefinitionsERKNS1_5StackINS1_18DefinitionLocationEEEPNS1_8WorklistIPS2_EE(%"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Stack.38"* dereferenceable(24), %"class.v8::internal::torque::Worklist"*) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca %"class.v8::internal::torque::Block"*, align 8
  %5 = alloca %"class.v8::internal::torque::Block"*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::torque::Stack.38"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %241, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %18 to i64*
  %20 = bitcast %"class.v8::internal::torque::Stack.38"* %17 to i64*
  %21 = bitcast %"class.v8::internal::torque::Block"* %0 to i8*
  br label %133

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = bitcast %"class.v8::internal::torque::Stack.38"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #14
  %25 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.v8::internal::torque::Stack.38"* %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = sdiv exact i64 %30, 24
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %74, label %33

33:                                               ; preds = %22
  %34 = icmp ugt i64 %31, 768614336404564650
  br i1 %34, label %35, label %38

35:                                               ; preds = %33
  %36 = bitcast %"class.v8::internal::torque::Stack.38"* %23 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #15
          to label %37 unwind label %62

37:                                               ; preds = %35
  unreachable

38:                                               ; preds = %33
  %39 = invoke i8* @_Znwm(i64 %30) #16
          to label %40 unwind label %62

40:                                               ; preds = %38
  %41 = bitcast i8* %39 to %"class.v8::internal::torque::DefinitionLocation"*
  %42 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %42 to i8**
  store i8* %39, i8** %43, align 8
  %44 = bitcast %"class.v8::internal::torque::Stack.38"* %23 to i8**
  store i8* %39, i8** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %41, i64 %31
  %46 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::torque::DefinitionLocation"* %45, %"class.v8::internal::torque::DefinitionLocation"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %1, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %47, align 8
  %49 = load i64, i64* %26, align 8
  %50 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %42 to i64*
  %51 = ptrtoint i8* %39 to i64
  %52 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %48 to i64
  %53 = sub i64 %49, %52
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %40
  %56 = udiv exact i64 %53, 24
  %57 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %57, i64 %53, i1 false) #14
  %58 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %41, i64 %56
  %59 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %58 to i64
  br label %60

60:                                               ; preds = %55, %40
  %61 = phi i64 [ %59, %55 ], [ %51, %40 ]
  store i64 %61, i64* %50, align 8
  br label %74

62:                                               ; preds = %38, %35
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = getelementptr inbounds %"class.v8::internal::torque::Stack.38", %"class.v8::internal::torque::Stack.38"* %23, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::torque::DefinitionLocation"*, %"class.v8::internal::torque::DefinitionLocation"** %64, align 8
  %66 = icmp eq %"class.v8::internal::torque::DefinitionLocation"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = ptrtoint %"class.v8::internal::torque::DefinitionLocation"* %65 to i64
  %69 = getelementptr inbounds %"class.v8::internal::torque::Block", %"class.v8::internal::torque::Block"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast %"class.v8::internal::torque::DefinitionLocation"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast %"class.v8::internal::torque::DefinitionLocation"* %65 to i8*
  tail call void @_ZdlPv(i8* %71) #17
  br label %72

72:                                               ; preds = %62, %67
  %73 = extractvalue { i8*, i32 } %63, 0
  tail call void @__clang_call_terminate(i8* %73) #18
  unreachable

74:                                               ; preds = %60, %22
  store i8 1, i8* %6, align 8
  %75 = icmp eq %"class.v8::internal::torque::Worklist"* %2, null
  br i1 %75, label %241, label %76

76:                                               ; preds = %74
  %77 = bitcast %"class.v8::internal::torque::Block"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  store %"class.v8::internal::torque::Block"* %0, %"class.v8::internal::torque::Block"** %4, align 8
  %78 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 1, i32 0
  %79 = call %"struct.std::__1::__hash_node_base.157"* @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.153"* %78, %"class.v8::internal::torque::Block"** nonnull dereferenceable(8) %4)
  %80 = icmp eq %"struct.std::__1::__hash_node_base.157"* %79, null
  br i1 %80, label %81, label %127

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.v8::internal::torque::Block"**** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.v8::internal::torque::Block"**** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %84, %87
  %89 = icmp eq i64 %88, 0
  %90 = shl i64 %88, 6
  %91 = add i64 %90, -1
  %92 = select i1 %89, i64 0, i64 %91
  %93 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, %94
  %98 = icmp eq i64 %92, %97
  %99 = inttoptr i64 %87 to %"class.v8::internal::torque::Block"***
  %100 = inttoptr i64 %84 to %"class.v8::internal::torque::Block"***
  br i1 %98, label %101, label %108

101:                                              ; preds = %81
  %102 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIPN2v88internal6torque5BlockENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %102)
  %103 = load i64, i64* %95, align 8
  %104 = load i64, i64* %93, align 8
  %105 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %85, align 8
  %106 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %82, align 8
  %107 = add i64 %104, %103
  br label %108

108:                                              ; preds = %101, %81
  %109 = phi i64 [ %107, %101 ], [ %97, %81 ]
  %110 = phi %"class.v8::internal::torque::Block"*** [ %106, %101 ], [ %100, %81 ]
  %111 = phi %"class.v8::internal::torque::Block"*** [ %105, %101 ], [ %99, %81 ]
  %112 = icmp eq %"class.v8::internal::torque::Block"*** %110, %111
  br i1 %112, label %120, label %113

113:                                              ; preds = %108
  %114 = lshr i64 %109, 9
  %115 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %111, i64 %114
  %116 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %115, align 8
  %117 = and i64 %109, 511
  %118 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %116, i64 %117
  %119 = bitcast %"class.v8::internal::torque::Block"** %118 to i64*
  br label %120

120:                                              ; preds = %113, %108
  %121 = phi i64* [ %119, %113 ], [ null, %108 ]
  %122 = bitcast %"class.v8::internal::torque::Block"** %4 to i64*
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %121, align 8
  %124 = load i64, i64* %95, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %95, align 8
  %126 = call { %"struct.std::__1::__hash_node_base.157"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.153"* %78, %"class.v8::internal::torque::Block"** nonnull dereferenceable(8) %4, %"class.v8::internal::torque::Block"** nonnull dereferenceable(8) %4)
  br label %127

127:                                              ; preds = %76, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  br label %241

128:                                              ; preds = %181
  %129 = and i8 %184, 1
  %130 = icmp ne i8 %129, 0
  %131 = icmp ne %"class.v8::internal::torque::Worklist"* %2, null
  %132 = and i1 %131, %130
  br i1 %132, label %189, label %241

133:                                              ; preds = %16, %181
  %134 = phi i64 [ %14, %16 ], [ %182, %181 ]
  %135 = phi i64 [ %12, %16 ], [ %183, %181 ]
  %136 = phi i8 [ 0, %16 ], [ %184, %181 ]
  %137 = phi i64 [ 0, %16 ], [ %185, %181 ]
  %138 = load i64, i64* %19, align 8
  %139 = load i64, i64* %20, align 8
  %140 = sub i64 %138, %139
  %141 = sdiv exact i64 %140, 24
  %142 = icmp ugt i64 %141, %137
  br i1 %142, label %145, label %143

143:                                              ; preds = %133
  %144 = bitcast %"class.v8::internal::torque::Stack.38"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %144) #15
  unreachable

145:                                              ; preds = %133
  %146 = inttoptr i64 %139 to %"class.v8::internal::torque::DefinitionLocation"*
  %147 = inttoptr i64 %134 to %"class.v8::internal::torque::DefinitionLocation"*
  %148 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %146, i64 %137, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %147, i64 %137, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %149, %151
  br i1 %152, label %153, label %165

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %146, i64 %137, i32 1
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %147, i64 %137, i32 1
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %155, %157
  br i1 %158, label %159, label %165

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %146, i64 %137, i32 2
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %147, i64 %137, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %161, %163
  br i1 %164, label %181, label %165

165:                                              ; preds = %153, %145, %159
  %166 = icmp eq i32 %149, 2
  br i1 %166, label %167, label %175

167:                                              ; preds = %165
  %168 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %146, i64 %137, i32 1
  %169 = load i8*, i8** %168, align 8
  %170 = icmp eq i8* %169, %21
  br i1 %170, label %171, label %175

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %146, i64 %137, i32 2
  %173 = load i64, i64* %172, align 8
  %174 = icmp eq i64 %173, %137
  br i1 %174, label %181, label %175

175:                                              ; preds = %167, %165, %171
  store i32 2, i32* %148, align 8
  %176 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %146, i64 %137, i32 1
  %177 = bitcast i8** %176 to %"class.v8::internal::torque::Block"**
  store %"class.v8::internal::torque::Block"* %0, %"class.v8::internal::torque::Block"** %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::torque::DefinitionLocation", %"class.v8::internal::torque::DefinitionLocation"* %146, i64 %137, i32 2
  store i64 %137, i64* %178, align 8
  %179 = load i64, i64* %11, align 8
  %180 = load i64, i64* %13, align 8
  br label %181

181:                                              ; preds = %171, %159, %175
  %182 = phi i64 [ %180, %175 ], [ %134, %159 ], [ %134, %171 ]
  %183 = phi i64 [ %179, %175 ], [ %135, %159 ], [ %135, %171 ]
  %184 = phi i8 [ 1, %175 ], [ %136, %159 ], [ %136, %171 ]
  %185 = add nuw i64 %137, 1
  %186 = sub i64 %183, %182
  %187 = sdiv exact i64 %186, 24
  %188 = icmp ult i64 %185, %187
  br i1 %188, label %133, label %128

189:                                              ; preds = %128
  %190 = bitcast %"class.v8::internal::torque::Block"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190)
  store %"class.v8::internal::torque::Block"* %0, %"class.v8::internal::torque::Block"** %5, align 8
  %191 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 1, i32 0
  %192 = call %"struct.std::__1::__hash_node_base.157"* @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.153"* %191, %"class.v8::internal::torque::Block"** nonnull dereferenceable(8) %5)
  %193 = icmp eq %"struct.std::__1::__hash_node_base.157"* %192, null
  br i1 %193, label %194, label %240

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %196 = bitcast %"class.v8::internal::torque::Block"**** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = bitcast %"class.v8::internal::torque::Block"**** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %197, %200
  %202 = icmp eq i64 %201, 0
  %203 = shl i64 %201, 6
  %204 = add i64 %203, -1
  %205 = select i1 %202, i64 0, i64 %204
  %206 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %209 = load i64, i64* %208, align 8
  %210 = add i64 %209, %207
  %211 = icmp eq i64 %205, %210
  %212 = inttoptr i64 %200 to %"class.v8::internal::torque::Block"***
  %213 = inttoptr i64 %197 to %"class.v8::internal::torque::Block"***
  br i1 %211, label %214, label %221

214:                                              ; preds = %194
  %215 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %2, i64 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIPN2v88internal6torque5BlockENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %215)
  %216 = load i64, i64* %208, align 8
  %217 = load i64, i64* %206, align 8
  %218 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %198, align 8
  %219 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %195, align 8
  %220 = add i64 %217, %216
  br label %221

221:                                              ; preds = %214, %194
  %222 = phi i64 [ %220, %214 ], [ %210, %194 ]
  %223 = phi %"class.v8::internal::torque::Block"*** [ %219, %214 ], [ %213, %194 ]
  %224 = phi %"class.v8::internal::torque::Block"*** [ %218, %214 ], [ %212, %194 ]
  %225 = icmp eq %"class.v8::internal::torque::Block"*** %223, %224
  br i1 %225, label %233, label %226

226:                                              ; preds = %221
  %227 = lshr i64 %222, 9
  %228 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %224, i64 %227
  %229 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %228, align 8
  %230 = and i64 %222, 511
  %231 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %229, i64 %230
  %232 = bitcast %"class.v8::internal::torque::Block"** %231 to i64*
  br label %233

233:                                              ; preds = %226, %221
  %234 = phi i64* [ %232, %226 ], [ null, %221 ]
  %235 = bitcast %"class.v8::internal::torque::Block"** %5 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %234, align 8
  %237 = load i64, i64* %208, align 8
  %238 = add i64 %237, 1
  store i64 %238, i64* %208, align 8
  %239 = call { %"struct.std::__1::__hash_node_base.157"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.153"* %191, %"class.v8::internal::torque::Block"** nonnull dereferenceable(8) %5, %"class.v8::internal::torque::Block"** nonnull dereferenceable(8) %5)
  br label %240

240:                                              ; preds = %189, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190)
  br label %241

241:                                              ; preds = %9, %128, %240, %74, %127
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.v8::internal::torque::Block"* @_ZN2v88internal6torque8WorklistIPNS1_5BlockEE7DequeueEv(%"class.v8::internal::torque::Worklist"*) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca %"class.std::__1::unique_ptr.393", align 8
  %3 = alloca %"class.v8::internal::torque::Block"*, align 8
  %4 = bitcast %"class.v8::internal::torque::Block"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = extractelement <2 x i64> %9, i32 0
  %11 = lshr i64 %10, 9
  %12 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %6, i64 %11
  %13 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %12, align 8
  %14 = and i64 %10, 511
  %15 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %13, i64 %14
  %16 = bitcast %"class.v8::internal::torque::Block"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::torque::Block"** %3 to i64*
  store i64 %17, i64* %18, align 8
  %19 = add <2 x i64> %9, <i64 1, i64 -1>
  %20 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %20, align 8
  %21 = extractelement <2 x i64> %19, i32 0
  %22 = icmp ult i64 %21, 1024
  br i1 %22, label %30, label %23

23:                                               ; preds = %1
  %24 = bitcast %"class.v8::internal::torque::Block"*** %6 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #17
  %26 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %5, align 8
  %27 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %26, i64 1
  store %"class.v8::internal::torque::Block"*** %27, %"class.v8::internal::torque::Block"**** %5, align 8
  %28 = load i64, i64* %7, align 8
  %29 = add i64 %28, -512
  store i64 %29, i64* %7, align 8
  br label %30

30:                                               ; preds = %1, %23
  %31 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 1, i32 0
  %32 = call %"struct.std::__1::__hash_node_base.157"* @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.153"* %31, %"class.v8::internal::torque::Block"** nonnull dereferenceable(8) %3)
  %33 = icmp eq %"struct.std::__1::__hash_node_base.157"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::unique_ptr.393"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  call void @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.393"* nonnull sret %2, %"class.std::__1::__hash_table.153"* %31, %"struct.std::__1::__hash_node_base.157"* nonnull %32) #14
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.393"* %2, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node.381"*, %"struct.std::__1::__hash_node.381"** %36, align 8
  store %"struct.std::__1::__hash_node.381"* null, %"struct.std::__1::__hash_node.381"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node.381"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = bitcast %"struct.std::__1::__hash_node.381"* %37 to i8*
  call void @_ZdlPv(i8* %40) #17
  br label %41

41:                                               ; preds = %39, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  br label %42

42:                                               ; preds = %30, %41
  %43 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret %"class.v8::internal::torque::Block"* %43
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque8WorklistIPNS1_5BlockEED2Ev(%"class.v8::internal::torque::Worklist"*) unnamed_addr #4 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.157"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.157"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.157"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #17
  %10 = icmp eq %"struct.std::__1::__hash_node_base.157"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.157"** null, %"struct.std::__1::__hash_node_base.157"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.157"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.157"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %19, i64 %22
  %24 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %24, align 8
  %26 = icmp eq %"class.v8::internal::torque::Block"*** %25, %19
  %27 = ptrtoint %"class.v8::internal::torque::Block"*** %25 to i64
  %28 = ptrtoint %"class.v8::internal::torque::Block"*** %19 to i64
  br i1 %26, label %29, label %31

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %44

31:                                               ; preds = %17
  %32 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %23, align 8
  %33 = and i64 %21, 511
  %34 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %32, i64 %33
  %35 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %21
  %38 = lshr i64 %37, 9
  %39 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %19, i64 %38
  %40 = load %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %39, align 8
  %41 = and i64 %37, 511
  %42 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %40, i64 %41
  %43 = icmp eq %"class.v8::internal::torque::Block"** %42, %34
  br i1 %43, label %44, label %50

44:                                               ; preds = %63, %31, %29
  %45 = phi i64* [ %30, %29 ], [ %35, %31 ], [ %35, %63 ]
  store i64 0, i64* %45, align 8
  %46 = bitcast %"class.v8::internal::torque::Block"**** %24 to i64*
  %47 = sub i64 %27, %28
  %48 = ashr exact i64 %47, 3
  %49 = icmp ugt i64 %48, 2
  br i1 %49, label %68, label %81

50:                                               ; preds = %31, %63
  %51 = phi %"class.v8::internal::torque::Block"** [ %66, %63 ], [ %34, %31 ]
  %52 = phi %"class.v8::internal::torque::Block"*** [ %64, %63 ], [ %23, %31 ]
  %53 = getelementptr inbounds %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %51, i64 1
  %54 = ptrtoint %"class.v8::internal::torque::Block"** %53 to i64
  %55 = bitcast %"class.v8::internal::torque::Block"*** %52 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = icmp eq i64 %57, 4096
  br i1 %58, label %59, label %63

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %52, i64 1
  %61 = bitcast %"class.v8::internal::torque::Block"*** %60 to i64*
  %62 = load i64, i64* %61, align 8
  br label %63

63:                                               ; preds = %59, %50
  %64 = phi %"class.v8::internal::torque::Block"*** [ %60, %59 ], [ %52, %50 ]
  %65 = phi i64 [ %62, %59 ], [ %54, %50 ]
  %66 = inttoptr i64 %65 to %"class.v8::internal::torque::Block"**
  %67 = icmp eq %"class.v8::internal::torque::Block"** %42, %66
  br i1 %67, label %44, label %50

68:                                               ; preds = %44, %68
  %69 = phi %"class.v8::internal::torque::Block"*** [ %73, %68 ], [ %19, %44 ]
  %70 = bitcast %"class.v8::internal::torque::Block"*** %69 to i8**
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #17
  %72 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %18, align 8
  %73 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %72, i64 1
  store %"class.v8::internal::torque::Block"*** %73, %"class.v8::internal::torque::Block"**** %18, align 8
  %74 = load i64, i64* %46, align 8
  %75 = ptrtoint %"class.v8::internal::torque::Block"*** %73 to i64
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 3
  %78 = icmp ugt i64 %77, 2
  br i1 %78, label %68, label %79

79:                                               ; preds = %68
  %80 = inttoptr i64 %74 to %"class.v8::internal::torque::Block"***
  br label %81

81:                                               ; preds = %79, %44
  %82 = phi %"class.v8::internal::torque::Block"*** [ %25, %44 ], [ %80, %79 ]
  %83 = phi %"class.v8::internal::torque::Block"*** [ %19, %44 ], [ %73, %79 ]
  %84 = phi i64 [ %48, %44 ], [ %77, %79 ]
  switch i64 %84, label %88 [
    i64 1, label %86
    i64 2, label %85
  ]

85:                                               ; preds = %81
  br label %86

86:                                               ; preds = %81, %85
  %87 = phi i64 [ 512, %85 ], [ 256, %81 ]
  store i64 %87, i64* %20, align 8
  br label %88

88:                                               ; preds = %86, %81
  %89 = icmp eq %"class.v8::internal::torque::Block"*** %83, %82
  br i1 %89, label %108, label %90

90:                                               ; preds = %88, %90
  %91 = phi %"class.v8::internal::torque::Block"*** [ %94, %90 ], [ %83, %88 ]
  %92 = bitcast %"class.v8::internal::torque::Block"*** %91 to i8**
  %93 = load i8*, i8** %92, align 8
  tail call void @_ZdlPv(i8* %93) #17
  %94 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 1
  %95 = icmp eq %"class.v8::internal::torque::Block"*** %94, %82
  br i1 %95, label %96, label %90

96:                                               ; preds = %90
  %97 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %18, align 8
  %98 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %24, align 8
  %99 = icmp eq %"class.v8::internal::torque::Block"*** %98, %97
  br i1 %99, label %108, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"class.v8::internal::torque::Block"*** %97 to i64
  %102 = getelementptr %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 -1
  %103 = ptrtoint %"class.v8::internal::torque::Block"*** %102 to i64
  %104 = sub i64 %103, %101
  %105 = lshr i64 %104, 3
  %106 = xor i64 %105, -1
  %107 = getelementptr %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 %106
  store %"class.v8::internal::torque::Block"*** %107, %"class.v8::internal::torque::Block"**** %24, align 8
  br label %108

108:                                              ; preds = %100, %96, %88
  %109 = getelementptr inbounds %"class.v8::internal::torque::Worklist", %"class.v8::internal::torque::Worklist"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %109, align 8
  %111 = icmp eq %"class.v8::internal::torque::Block"*** %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  %113 = bitcast %"class.v8::internal::torque::Block"*** %110 to i8*
  tail call void @_ZdlPv(i8* %113) #17
  br label %114

114:                                              ; preds = %108, %112
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque9UnionType6ExtendEPKNS1_4TypeE(%"class.v8::internal::torque::UnionType"*, %"class.v8::internal::torque::Type"*) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca %"class.v8::internal::torque::Type"*, align 8
  store %"class.v8::internal::torque::Type"* %1, %"class.v8::internal::torque::Type"** %3, align 8
  %4 = icmp eq %"class.v8::internal::torque::Type"* %1, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %51

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %1, i64 1
  %11 = bitcast %"class.v8::internal::torque::Type"* %10 to %"class.std::__1::__tree_end_node"**
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %1, i64 1, i32 0, i32 1
  %14 = bitcast i32* %13 to %"class.std::__1::__tree_end_node"*
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %12, %14
  br i1 %15, label %65, label %16

16:                                               ; preds = %9, %48
  %17 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %12, %9 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 4
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.v8::internal::torque::Type"**
  %20 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %19, align 8
  tail call void @_ZN2v88internal6torque9UnionType6ExtendEPKNS1_4TypeE(%"class.v8::internal::torque::UnionType"* %0, %"class.v8::internal::torque::Type"* %20)
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 1, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %32

24:                                               ; preds = %16
  %25 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node_base"*
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 2
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_end_node"**
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %25
  br i1 %31, label %48, label %39

32:                                               ; preds = %16, %32
  %33 = phi %"class.std::__1::__tree_node_base"* [ %35, %32 ], [ %22, %16 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0
  br label %48

39:                                               ; preds = %24, %39
  %40 = phi %"class.std::__1::__tree_end_node"** [ %43, %39 ], [ %27, %24 ]
  %41 = bitcast %"class.std::__1::__tree_end_node"** %40 to %"class.std::__1::__tree_node_base"**
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 2
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %42
  br i1 %47, label %48, label %39

48:                                               ; preds = %39, %24, %37
  %49 = phi %"class.std::__1::__tree_end_node"* [ %38, %37 ], [ %28, %24 ], [ %44, %39 ]
  %50 = icmp eq %"class.std::__1::__tree_end_node"* %49, %14
  br i1 %50, label %65, label %16

51:                                               ; preds = %5, %2
  %52 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0
  %53 = bitcast %"class.v8::internal::torque::Type"* %1 to i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)***
  %54 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)**, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %54, i64 2
  %56 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.v8::internal::torque::Type"* %1, %"class.v8::internal::torque::Type"* %52)
  br i1 %57, label %65, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0, i32 1
  %60 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %59, align 8
  %61 = tail call %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque4Type15CommonSupertypeEPKS2_S4_(%"class.v8::internal::torque::Type"* %60, %"class.v8::internal::torque::Type"* %1)
  store %"class.v8::internal::torque::Type"* %61, %"class.v8::internal::torque::Type"** %59, align 8
  %62 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1
  call void @_ZN2v88internal6torque7EraseIfINSt3__13setIPKNS1_4TypeENS1_8TypeLessENS3_9allocatorIS7_EEEEZNS1_9UnionType6ExtendES7_EUlS7_E_EEvPT_T0_(%"class.std::__1::set.178"* %62, %"class.v8::internal::torque::Type"** nonnull %3)
  %63 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %62, i64 0, i32 0
  %64 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.179"* %63, %"class.v8::internal::torque::Type"** nonnull dereferenceable(8) %3, %"class.v8::internal::torque::Type"** nonnull dereferenceable(8) %3)
  br label %65

65:                                               ; preds = %48, %9, %58, %51
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque10TypeOracle12GetUnionTypeENS1_9UnionTypeE(%"class.v8::internal::torque::UnionType"*) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.v8::internal::torque::UnionType", align 8
  %3 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 1
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1
  %11 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %10, align 8
  br label %85

12:                                               ; preds = %1
  %13 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEv()
  %14 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0
  call void @_ZN2v88internal6torque4TypeC2ERKS2_(%"class.v8::internal::torque::Type"* nonnull %15, %"class.v8::internal::torque::Type"* dereferenceable(104) %16) #14
  %17 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1
  %20 = bitcast %"class.std::__1::set.178"* %19 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = bitcast %"class.std::__1::set.178"* %18 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %3, align 8
  store i64 %24, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  %26 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  br i1 %25, label %27, label %29

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %18, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"** %28, align 8
  br label %36

29:                                               ; preds = %12
  %30 = extractelement <2 x i64> %21, i32 1
  %31 = inttoptr i64 %30 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %19, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"** %32, align 8
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #14
  br label %36

36:                                               ; preds = %27, %29
  %37 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = invoke { %"struct.std::__1::__hash_node_base.232"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.228"* %37, %"class.v8::internal::torque::UnionType"* nonnull dereferenceable(128) %2, %"class.v8::internal::torque::UnionType"* nonnull dereferenceable(128) %2)
          to label %39 unwind label %63

39:                                               ; preds = %36
  %40 = extractvalue { %"struct.std::__1::__hash_node_base.232"*, i8 } %38, 0
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %40, i64 2
  %42 = bitcast %"struct.std::__1::__hash_node_base.232"* %41 to %"class.v8::internal::torque::Type"*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %43 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %43, %"class.std::__1::__tree_node"* %45) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %46 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %51 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %50, align 8
  %52 = icmp eq %"class.v8::internal::torque::Type"** %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = ptrtoint %"class.v8::internal::torque::Type"** %51 to i64
  %55 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %56 = bitcast %"class.v8::internal::torque::Type"*** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::torque::Type"** %51 to i8*
  call void @_ZdlPv(i8* %57) #17
  br label %58

58:                                               ; preds = %39, %49, %53
  %59 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 2, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node.190"**
  %62 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %61, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %59, %"class.std::__1::__tree_node.190"* %62) #14
  br label %85

63:                                               ; preds = %36
  %64 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %65 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 1, i32 0
  %66 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node"**
  %67 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %66, align 8
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %65, %"class.std::__1::__tree_node"* %67) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %68 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %80, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %73 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %72, align 8
  %74 = icmp eq %"class.v8::internal::torque::Type"** %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint %"class.v8::internal::torque::Type"** %73 to i64
  %77 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %78 = bitcast %"class.v8::internal::torque::Type"*** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.v8::internal::torque::Type"** %73 to i8*
  call void @_ZdlPv(i8* %79) #17
  br label %80

80:                                               ; preds = %63, %71, %75
  %81 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 2, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_node.190"**
  %84 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %83, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %81, %"class.std::__1::__tree_node.190"* %84) #14
  resume { i8*, i32 } %64

85:                                               ; preds = %6, %58
  %86 = phi %"class.v8::internal::torque::Type"* [ %42, %58 ], [ %11, %6 ]
  ret %"class.v8::internal::torque::Type"* %86
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque9UnionTypeC2EPKNS1_4TypeE(%"class.v8::internal::torque::UnionType"*, %"class.v8::internal::torque::Type"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.v8::base::Optional.53", align 8
  %4 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::base::Optional.53", %"class.v8::base::Optional.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::base::Optional.53", %"class.v8::base::Optional.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %union.anon.57* %6 to i8*
  store i8 0, i8* %7, align 8
  invoke void @_ZN2v88internal6torque4TypeC2ENS1_8TypeBase4KindEPKS2_NS_4base8OptionalINS1_17SpecializationKeyINS1_11GenericTypeEEEEE(%"class.v8::internal::torque::Type"* %4, i32 3, %"class.v8::internal::torque::Type"* %1, %"class.v8::base::Optional.53"* nonnull %3)
          to label %8 unwind label %59

8:                                                ; preds = %2
  %9 = load i8, i8* %5, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.v8::base::Optional.53", %"class.v8::base::Optional.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %12, align 8
  %14 = icmp eq %"class.v8::internal::torque::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.v8::internal::torque::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.v8::base::Optional.53", %"class.v8::base::Optional.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::torque::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.v8::internal::torque::Type"** %13 to i8*
  call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %8, %11, %15
  %21 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %22, i64 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node_base"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = bitcast %"class.std::__1::set.178"* %22 to i64*
  %28 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %30 = invoke i8* @_Znwm(i64 40) #16
          to label %31 unwind label %51

31:                                               ; preds = %20
  %32 = ptrtoint %"class.v8::internal::torque::Type"* %1 to i64
  %33 = ptrtoint %"class.std::__1::__tree_end_node"* %24 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 32
  %35 = bitcast i8* %34 to i64*
  store i64 %32, i64* %35, align 8, !noalias !11
  %36 = bitcast i8* %30 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds i8, i8* %30, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false) #14
  %38 = bitcast i8* %37 to i64*
  store i64 %33, i64* %38, align 8
  %39 = bitcast %"class.std::__1::__tree_end_node"* %24 to i8**
  store i8* %30, i8** %39, align 8
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %31
  %45 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  store i64 %45, i64* %27, align 8
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  br label %47

47:                                               ; preds = %31, %44
  %48 = phi %"class.std::__1::__tree_node_base"* [ %36, %31 ], [ %46, %44 ]
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %36, %"class.std::__1::__tree_node_base"* %48) #14
  %49 = load i64, i64* %28, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %28, align 8
  ret void

51:                                               ; preds = %20
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %22, i64 0, i32 0
  call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %53, %"class.std::__1::__tree_node"* null) #14
  %54 = extractvalue { i8*, i32 } %52, 0
  %55 = extractvalue { i8*, i32 } %52, 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %56 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %83, label %74

59:                                               ; preds = %2
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  %62 = extractvalue { i8*, i32 } %60, 1
  %63 = load i8, i8* %5, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %88, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.v8::base::Optional.53", %"class.v8::base::Optional.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %67 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %66, align 8
  %68 = icmp eq %"class.v8::internal::torque::Type"** %67, null
  br i1 %68, label %88, label %69

69:                                               ; preds = %65
  %70 = ptrtoint %"class.v8::internal::torque::Type"** %67 to i64
  %71 = getelementptr inbounds %"class.v8::base::Optional.53", %"class.v8::base::Optional.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %72 = bitcast %"class.v8::internal::torque::Type"*** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast %"class.v8::internal::torque::Type"** %67 to i8*
  call void @_ZdlPv(i8* %73) #17
  br label %88

74:                                               ; preds = %51
  %75 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %76 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %75, align 8
  %77 = icmp eq %"class.v8::internal::torque::Type"** %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint %"class.v8::internal::torque::Type"** %76 to i64
  %80 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %81 = bitcast %"class.v8::internal::torque::Type"*** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %"class.v8::internal::torque::Type"** %76 to i8*
  call void @_ZdlPv(i8* %82) #17
  br label %83

83:                                               ; preds = %51, %74, %78
  %84 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0, i32 2, i32 0
  %85 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_node.190"**
  %87 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %86, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %84, %"class.std::__1::__tree_node.190"* %87) #14
  br label %88

88:                                               ; preds = %69, %65, %59, %83
  %89 = phi i32 [ %55, %83 ], [ %62, %59 ], [ %62, %65 ], [ %62, %69 ]
  %90 = phi i8* [ %54, %83 ], [ %61, %59 ], [ %61, %65 ], [ %61, %69 ]
  %91 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %89, 1
  resume { i8*, i32 } %92
}

; Function Attrs: nounwind
declare void @_ZN2v88internal6torque4TypeC2ERKS2_(%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"* dereferenceable(104)) unnamed_addr #5

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEEC2ERKSA_(%"class.std::__1::set.178"*, %"class.std::__1::set.178"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::__compressed_pair.180"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %4, align 8
  %8 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = icmp eq %"class.std::__1::__tree_end_node"* %9, %10
  br i1 %11, label %156, label %12

12:                                               ; preds = %2
  %13 = ptrtoint %"class.std::__1::__tree_end_node"* %5 to i64
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %16 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::set.178"* %0 to i64*
  %18 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %19

19:                                               ; preds = %154, %12
  %20 = phi %"class.std::__1::__tree_end_node"* [ %155, %154 ], [ %5, %12 ]
  %21 = phi %"class.std::__1::__tree_end_node"* [ %152, %154 ], [ %9, %12 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.v8::internal::torque::Type"**
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %5
  br i1 %24, label %53, label %25

25:                                               ; preds = %19
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %25, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 1
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %44, label %28

33:                                               ; preds = %25, %33
  %34 = phi %"class.std::__1::__tree_end_node"* [ %38, %33 ], [ %5, %25 ]
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %33, label %42

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node_base"*
  br label %44

44:                                               ; preds = %28, %42
  %45 = phi %"class.std::__1::__tree_node_base"* [ %43, %42 ], [ %29, %28 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 1
  %47 = bitcast %"class.std::__1::__tree_node_base"* %46 to %"class.v8::internal::torque::Type"**
  %48 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %47, align 8
  %49 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %23, align 8
  %50 = invoke zeroext i1 @_ZN2v88internal6torqueltERKNS1_4TypeES4_(%"class.v8::internal::torque::Type"* dereferenceable(104) %48, %"class.v8::internal::torque::Type"* dereferenceable(104) %49)
          to label %51 unwind label %159

51:                                               ; preds = %44
  %52 = ptrtoint %"class.std::__1::__tree_node_base"* %45 to i64
  br i1 %50, label %53, label %60

53:                                               ; preds = %51, %19
  %54 = phi i64 [ %52, %51 ], [ %13, %19 ]
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %94, label %57

57:                                               ; preds = %53
  %58 = inttoptr i64 %54 to %"class.std::__1::__tree_node_base"*
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 1
  br label %94

60:                                               ; preds = %51
  %61 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  %62 = icmp eq %"class.std::__1::__tree_node"* %61, null
  br i1 %62, label %94, label %63

63:                                               ; preds = %60, %90
  %64 = phi %"class.std::__1::__tree_node"* [ %93, %90 ], [ %61, %60 ]
  %65 = phi %"class.std::__1::__tree_node_base"** [ %92, %90 ], [ %16, %60 ]
  %66 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %23, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 1
  %68 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %67, align 8
  %69 = invoke zeroext i1 @_ZN2v88internal6torqueltERKNS1_4TypeES4_(%"class.v8::internal::torque::Type"* dereferenceable(104) %66, %"class.v8::internal::torque::Type"* dereferenceable(104) %68)
          to label %70 unwind label %157

70:                                               ; preds = %63
  br i1 %69, label %71, label %77

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %90

75:                                               ; preds = %71
  %76 = ptrtoint %"class.std::__1::__tree_node"* %64 to i64
  br label %94

77:                                               ; preds = %70
  %78 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %67, align 8
  %79 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %23, align 8
  %80 = invoke zeroext i1 @_ZN2v88internal6torqueltERKNS1_4TypeES4_(%"class.v8::internal::torque::Type"* dereferenceable(104) %78, %"class.v8::internal::torque::Type"* dereferenceable(104) %79)
          to label %81 unwind label %157

81:                                               ; preds = %77
  br i1 %80, label %82, label %88

82:                                               ; preds = %81
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = ptrtoint %"class.std::__1::__tree_node"* %64 to i64
  br label %94

88:                                               ; preds = %81
  %89 = ptrtoint %"class.std::__1::__tree_node"* %64 to i64
  br label %94

90:                                               ; preds = %82, %71
  %91 = phi %"class.std::__1::__tree_node_base"* [ %73, %71 ], [ %84, %82 ]
  %92 = phi %"class.std::__1::__tree_node_base"** [ %72, %71 ], [ %83, %82 ]
  %93 = bitcast %"class.std::__1::__tree_node_base"* %91 to %"class.std::__1::__tree_node"*
  br label %63

94:                                               ; preds = %60, %88, %86, %75, %57, %53
  %95 = phi i64 [ %54, %57 ], [ %76, %75 ], [ %87, %86 ], [ %89, %88 ], [ %13, %53 ], [ %13, %60 ]
  %96 = phi %"class.std::__1::__tree_node_base"** [ %59, %57 ], [ %72, %75 ], [ %83, %86 ], [ %65, %88 ], [ %14, %53 ], [ %14, %60 ]
  %97 = bitcast %"class.std::__1::__tree_node_base"** %96 to %"class.std::__1::__tree_node"**
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node"* %98, null
  br i1 %99, label %100, label %123

100:                                              ; preds = %94
  %101 = invoke i8* @_Znwm(i64 40) #16
          to label %102 unwind label %159

102:                                              ; preds = %100
  %103 = getelementptr inbounds i8, i8* %101, i64 32
  %104 = bitcast %"class.std::__1::__tree_end_node"* %22 to i64*
  %105 = load i64, i64* %104, align 8, !noalias !14
  %106 = bitcast i8* %103 to i64*
  store i64 %105, i64* %106, align 8, !noalias !14
  %107 = bitcast i8* %101 to %"class.std::__1::__tree_node_base"*
  %108 = getelementptr inbounds i8, i8* %101, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 16, i1 false) #14
  %109 = bitcast i8* %108 to i64*
  store i64 %95, i64* %109, align 8
  %110 = bitcast %"class.std::__1::__tree_node_base"** %96 to i8**
  store i8* %101, i8** %110, align 8
  %111 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %102
  %116 = ptrtoint %"class.std::__1::__tree_node_base"* %113 to i64
  store i64 %116, i64* %17, align 8
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  br label %118

118:                                              ; preds = %115, %102
  %119 = phi %"class.std::__1::__tree_node_base"* [ %107, %102 ], [ %117, %115 ]
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %120, %"class.std::__1::__tree_node_base"* %119) #14
  %121 = load i64, i64* %18, align 8
  %122 = add i64 %121, 1
  store i64 %122, i64* %18, align 8
  br label %123

123:                                              ; preds = %118, %94
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %127, label %135

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.std::__1::__tree_end_node"**
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, %128
  br i1 %134, label %151, label %142

135:                                              ; preds = %123, %135
  %136 = phi %"class.std::__1::__tree_node_base"* [ %138, %135 ], [ %125, %123 ]
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %140, label %135

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 0
  br label %151

142:                                              ; preds = %127, %142
  %143 = phi %"class.std::__1::__tree_end_node"** [ %146, %142 ], [ %130, %127 ]
  %144 = bitcast %"class.std::__1::__tree_end_node"** %143 to %"class.std::__1::__tree_node_base"**
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 2
  %147 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 0, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node_base"* %149, %145
  br i1 %150, label %151, label %142

151:                                              ; preds = %142, %140, %127
  %152 = phi %"class.std::__1::__tree_end_node"* [ %141, %140 ], [ %131, %127 ], [ %147, %142 ]
  %153 = icmp eq %"class.std::__1::__tree_end_node"* %152, %10
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  br label %19

156:                                              ; preds = %151, %2
  ret void

157:                                              ; preds = %63, %77
  %158 = landingpad { i8*, i32 }
          cleanup
  br label %161

159:                                              ; preds = %100, %44
  %160 = landingpad { i8*, i32 }
          cleanup
  br label %161

161:                                              ; preds = %159, %157
  %162 = phi { i8*, i32 } [ %158, %157 ], [ %160, %159 ]
  %163 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  tail call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %3, %"class.std::__1::__tree_node"* %163) #14
  resume { i8*, i32 } %162
}

declare zeroext i1 @_ZN2v88internal6torqueltERKNS1_4TypeES4_(%"class.v8::internal::torque::Type"* dereferenceable(104), %"class.v8::internal::torque::Type"* dereferenceable(104)) local_unnamed_addr #3

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #6 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #14
  tail call void @_ZSt9terminatev() #18
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: inlinehint noreturn ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__throw_length_errorEPKc(i8*) local_unnamed_addr #7 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = tail call i8* @__cxa_allocate_exception(i64 16) #14
  %3 = bitcast i8* %2 to %"class.std::length_error"*
  invoke void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"* %3, i8* %0)
          to label %4 unwind label %5

4:                                                ; preds = %1
  tail call void @__cxa_throw(i8* %2, i8* bitcast (i8** @_ZTISt12length_error to i8*), i8* bitcast (void (%"class.std::length_error"*)* @_ZNSt12length_errorD1Ev to i8*)) #15
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { i8*, i32 }
          cleanup
  tail call void @__cxa_free_exception(i8* %2) #14
  resume { i8*, i32 } %6
}

declare i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0
  tail call void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"* %3, i8* %1)
  %4 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt12length_error, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: nounwind
declare void @_ZNSt12length_errorD1Ev(%"class.std::length_error"*) unnamed_addr #5

declare void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

declare void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"*, i8*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #9 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #9 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.190"*) local_unnamed_addr #9 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = icmp eq %"class.std::__1::__tree_node.190"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.190"* %1 to %"class.std::__1::__tree_node.190"**
  %6 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.190"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.190", %"class.std::__1::__tree_node.190"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.190"**
  %9 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.190"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.190", %"class.std::__1::__tree_node.190"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #17
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.190"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

declare void @_ZN2v88internal6torque4TypeC2ENS1_8TypeBase4KindEPKS2_NS_4base8OptionalINS1_17SpecializationKeyINS1_11GenericTypeEEEEE(%"class.v8::internal::torque::Type"*, i32, %"class.v8::internal::torque::Type"*, %"class.v8::base::Optional.53"*) unnamed_addr #3

declare %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque4Type15CommonSupertypeEPKS2_S4_(%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque7EraseIfINSt3__13setIPKNS1_4TypeENS1_8TypeLessENS3_9allocatorIS7_EEEEZNS1_9UnionType6ExtendES7_EUlS7_E_EEvPT_T0_(%"class.std::__1::set.178"*, %"class.v8::internal::torque::Type"**) local_unnamed_addr #0 comdat personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::set.178"* %0 to i64*
  %9 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %88, %2
  ret void

12:                                               ; preds = %7, %88
  %13 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %89, %88 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 4
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.v8::internal::torque::Type"**
  %16 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %15, align 8
  %17 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %1, align 8
  %18 = bitcast %"class.v8::internal::torque::Type"* %16 to i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)***
  %19 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)**, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %19, i64 2
  %21 = load i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)*, i1 (%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.v8::internal::torque::Type"* %16, %"class.v8::internal::torque::Type"* %17)
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 1, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %22, label %26, label %63

26:                                               ; preds = %12
  br i1 %25, label %27, label %35

27:                                               ; preds = %26
  %28 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_end_node"**
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %28
  br i1 %34, label %51, label %42

35:                                               ; preds = %26, %35
  %36 = phi %"class.std::__1::__tree_node_base"* [ %38, %35 ], [ %24, %26 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %35

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 0
  br label %51

42:                                               ; preds = %27, %42
  %43 = phi %"class.std::__1::__tree_end_node"** [ %46, %42 ], [ %30, %27 ]
  %44 = bitcast %"class.std::__1::__tree_end_node"** %43 to %"class.std::__1::__tree_node_base"**
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 2
  %47 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, %45
  br i1 %50, label %51, label %42

51:                                               ; preds = %42, %40, %27
  %52 = phi %"class.std::__1::__tree_end_node"* [ %41, %40 ], [ %31, %27 ], [ %47, %42 ]
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %54 = icmp eq %"class.std::__1::__tree_end_node"* %53, %13
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = ptrtoint %"class.std::__1::__tree_end_node"* %52 to i64
  store i64 %56, i64* %8, align 8
  br label %57

57:                                               ; preds = %51, %55
  %58 = load i64, i64* %9, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %9, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  %61 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %60, %"class.std::__1::__tree_node_base"* %61) #14
  %62 = bitcast %"class.std::__1::__tree_end_node"* %13 to i8*
  tail call void @_ZdlPv(i8* %62) #17
  br label %88

63:                                               ; preds = %12
  br i1 %25, label %64, label %72

64:                                               ; preds = %63
  %65 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_end_node"**
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, %65
  br i1 %71, label %88, label %79

72:                                               ; preds = %63, %72
  %73 = phi %"class.std::__1::__tree_node_base"* [ %75, %72 ], [ %24, %63 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %77, label %72

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %73, i64 0, i32 0
  br label %88

79:                                               ; preds = %64, %79
  %80 = phi %"class.std::__1::__tree_end_node"** [ %83, %79 ], [ %67, %64 ]
  %81 = bitcast %"class.std::__1::__tree_end_node"** %80 to %"class.std::__1::__tree_node_base"**
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %82, i64 0, i32 2
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, %82
  br i1 %87, label %88, label %79

88:                                               ; preds = %79, %77, %64, %57
  %89 = phi %"class.std::__1::__tree_end_node"* [ %52, %57 ], [ %78, %77 ], [ %68, %64 ], [ %84, %79 ]
  %90 = icmp eq %"class.std::__1::__tree_end_node"* %89, %5
  br i1 %90, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #9 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.179"*, %"class.v8::internal::torque::Type"** dereferenceable(8), %"class.v8::internal::torque::Type"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.179", %"class.std::__1::__tree.179"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.179", %"class.std::__1::__tree.179"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %35, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %9, %8 ]
  %13 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %1, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %15 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %14, align 8
  %16 = tail call zeroext i1 @_ZN2v88internal6torqueltERKNS1_4TypeES4_(%"class.v8::internal::torque::Type"* dereferenceable(104) %13, %"class.v8::internal::torque::Type"* dereferenceable(104) %15)
  br i1 %16, label %17, label %23

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %35

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %41

23:                                               ; preds = %10
  %24 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %14, align 8
  %25 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %1, align 8
  %26 = tail call zeroext i1 @_ZN2v88internal6torqueltERKNS1_4TypeES4_(%"class.v8::internal::torque::Type"* dereferenceable(104) %24, %"class.v8::internal::torque::Type"* dereferenceable(104) %25)
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %17
  %36 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %10

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %41

41:                                               ; preds = %21, %31, %33, %39
  %42 = phi %"class.std::__1::__tree_end_node"* [ %4, %39 ], [ %22, %21 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %18, %21 ], [ %28, %31 ], [ %12, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %74

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 40) #16, !noalias !17
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast %"class.v8::internal::torque::Type"** %2 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !17
  %52 = bitcast i8* %49 to i64*
  store i64 %51, i64* %52, align 8, !noalias !17
  %53 = bitcast i8* %48 to %"class.std::__1::__tree_node"*
  %54 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %48, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree.179", %"class.std::__1::__tree.179"* %0, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %47
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::__tree.179"* %0 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %67

67:                                               ; preds = %63, %47
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %47 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree.179", %"class.std::__1::__tree.179"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #14
  %71 = getelementptr inbounds %"class.std::__1::__tree.179", %"class.std::__1::__tree.179"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %67, %41
  %75 = phi i8 [ 1, %67 ], [ 0, %41 ]
  %76 = phi %"class.std::__1::__tree_node"* [ %53, %67 ], [ %45, %41 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 0, i32 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %77, 0
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %78, i8 %75, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %79
}

declare dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEv() local_unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.232"*, i8 } @_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.228"*, %"class.v8::internal::torque::UnionType"* dereferenceable(128), %"class.v8::internal::torque::UnionType"* dereferenceable(128)) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %48, label %8

8:                                                ; preds = %3, %45
  %9 = phi i64 [ %17, %45 ], [ 0, %3 ]
  %10 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %5, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 4
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %13)
  %15 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %14)
  %16 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %9)
  %17 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %15, i64 %16)
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 1, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %29

21:                                               ; preds = %8
  %22 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node_base"*
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 2
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_end_node"**
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, %22
  br i1 %28, label %45, label %36

29:                                               ; preds = %8, %29
  %30 = phi %"class.std::__1::__tree_node_base"* [ %32, %29 ], [ %19, %8 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %29

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 0
  br label %45

36:                                               ; preds = %21, %36
  %37 = phi %"class.std::__1::__tree_end_node"** [ %40, %36 ], [ %24, %21 ]
  %38 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 2
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, %39
  br i1 %44, label %45, label %36

45:                                               ; preds = %36, %34, %21
  %46 = phi %"class.std::__1::__tree_end_node"* [ %35, %34 ], [ %25, %21 ], [ %41, %36 ]
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %46, %6
  br i1 %47, label %48, label %8

48:                                               ; preds = %45, %3
  %49 = phi i64 [ 0, %3 ], [ %17, %45 ]
  %50 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %273, label %53

53:                                               ; preds = %48
  %54 = tail call i64 @llvm.ctpop.i64(i64 %51) #14, !range !20
  %55 = icmp ugt i64 %54, 1
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = add i64 %51, -1
  %58 = and i64 %57, %49
  br label %63

59:                                               ; preds = %53
  %60 = icmp ult i64 %49, %51
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = urem i64 %49, %51
  br label %63

63:                                               ; preds = %56, %59, %61
  %64 = phi i64 [ %58, %56 ], [ %62, %61 ], [ %49, %59 ]
  %65 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %66, i64 %64
  %68 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.232"* %68, null
  br i1 %69, label %273, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %68, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.232"* %72, null
  br i1 %73, label %273, label %74

74:                                               ; preds = %70
  %75 = add i64 %51, -1
  %76 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  br i1 %55, label %79, label %178

79:                                               ; preds = %74, %114
  %80 = phi %"struct.std::__1::__hash_node_base.232"* [ %116, %114 ], [ %72, %74 ]
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 1
  %82 = bitcast %"struct.std::__1::__hash_node_base.232"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, %49
  br i1 %84, label %92, label %85

85:                                               ; preds = %79
  %86 = icmp ult i64 %83, %51
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = urem i64 %83, %51
  br label %89

89:                                               ; preds = %87, %85
  %90 = phi i64 [ %88, %87 ], [ %83, %85 ]
  %91 = icmp eq i64 %90, %64
  br i1 %91, label %92, label %273

92:                                               ; preds = %89, %79
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 17
  %94 = bitcast %"struct.std::__1::__hash_node_base.232"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, %77
  br i1 %96, label %97, label %114

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 15
  %99 = bitcast %"struct.std::__1::__hash_node_base.232"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 16
  %102 = bitcast %"struct.std::__1::__hash_node_base.232"* %101 to %"class.std::__1::__tree_end_node"*
  %103 = icmp eq %"class.std::__1::__tree_end_node"* %100, %102
  br i1 %103, label %408, label %104

104:                                              ; preds = %97, %175
  %105 = phi %"class.std::__1::__tree_end_node"* [ %176, %175 ], [ %78, %97 ]
  %106 = phi %"class.std::__1::__tree_end_node"* [ %147, %175 ], [ %100, %97 ]
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 4
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"class.v8::internal::torque::Type"**
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 4
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.v8::internal::torque::Type"**
  %111 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %108, align 8
  %112 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %110, align 8
  %113 = icmp eq %"class.v8::internal::torque::Type"* %111, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %104, %92
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 0, i32 0
  %116 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.232"* %116, null
  br i1 %117, label %273, label %79

118:                                              ; preds = %104
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 1, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118, %122
  %123 = phi %"class.std::__1::__tree_node_base"* [ %125, %122 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %123, i64 0, i32 0, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %127, label %122

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %123, i64 0, i32 0
  br label %146

129:                                              ; preds = %118
  %130 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"class.std::__1::__tree_node_base"*
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 2
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to %"class.std::__1::__tree_end_node"**
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, %130
  br i1 %136, label %146, label %137

137:                                              ; preds = %129, %137
  %138 = phi %"class.std::__1::__tree_end_node"** [ %141, %137 ], [ %132, %129 ]
  %139 = bitcast %"class.std::__1::__tree_end_node"** %138 to %"class.std::__1::__tree_node_base"**
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %140, i64 0, i32 2
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %140
  br i1 %145, label %146, label %137

146:                                              ; preds = %137, %129, %127
  %147 = phi %"class.std::__1::__tree_end_node"* [ %128, %127 ], [ %133, %129 ], [ %142, %137 ]
  %148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 1, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node_base"* %149, null
  br i1 %150, label %158, label %151

151:                                              ; preds = %146, %151
  %152 = phi %"class.std::__1::__tree_node_base"* [ %154, %151 ], [ %149, %146 ]
  %153 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %152, i64 0, i32 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, null
  br i1 %155, label %156, label %151

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %152, i64 0, i32 0
  br label %175

158:                                              ; preds = %146
  %159 = bitcast %"class.std::__1::__tree_end_node"* %105 to %"class.std::__1::__tree_node_base"*
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 2
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to %"class.std::__1::__tree_end_node"**
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %159
  br i1 %165, label %175, label %166

166:                                              ; preds = %158, %166
  %167 = phi %"class.std::__1::__tree_end_node"** [ %170, %166 ], [ %161, %158 ]
  %168 = bitcast %"class.std::__1::__tree_end_node"** %167 to %"class.std::__1::__tree_node_base"**
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %169, i64 0, i32 2
  %171 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %171, i64 0, i32 0
  %173 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %172, align 8
  %174 = icmp eq %"class.std::__1::__tree_node_base"* %173, %169
  br i1 %174, label %175, label %166

175:                                              ; preds = %166, %158, %156
  %176 = phi %"class.std::__1::__tree_end_node"* [ %157, %156 ], [ %162, %158 ], [ %171, %166 ]
  %177 = icmp eq %"class.std::__1::__tree_end_node"* %147, %102
  br i1 %177, label %408, label %104

178:                                              ; preds = %74, %269
  %179 = phi %"struct.std::__1::__hash_node_base.232"* [ %271, %269 ], [ %72, %74 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %179, i64 1
  %181 = bitcast %"struct.std::__1::__hash_node_base.232"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %182, %49
  %184 = and i64 %182, %75
  %185 = icmp eq i64 %184, %64
  %186 = or i1 %183, %185
  br i1 %186, label %187, label %273

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %179, i64 17
  %189 = bitcast %"struct.std::__1::__hash_node_base.232"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %190, %77
  br i1 %191, label %192, label %269

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %179, i64 15
  %194 = bitcast %"struct.std::__1::__hash_node_base.232"* %193 to %"class.std::__1::__tree_end_node"**
  %195 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %194, align 8
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %179, i64 16
  %197 = bitcast %"struct.std::__1::__hash_node_base.232"* %196 to %"class.std::__1::__tree_end_node"*
  %198 = icmp eq %"class.std::__1::__tree_end_node"* %195, %197
  br i1 %198, label %408, label %199

199:                                              ; preds = %192, %266
  %200 = phi %"class.std::__1::__tree_end_node"* [ %267, %266 ], [ %78, %192 ]
  %201 = phi %"class.std::__1::__tree_end_node"* [ %238, %266 ], [ %195, %192 ]
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %201, i64 4
  %203 = bitcast %"class.std::__1::__tree_end_node"* %202 to %"class.v8::internal::torque::Type"**
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 4
  %205 = bitcast %"class.std::__1::__tree_end_node"* %204 to %"class.v8::internal::torque::Type"**
  %206 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %203, align 8
  %207 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %205, align 8
  %208 = icmp eq %"class.v8::internal::torque::Type"* %206, %207
  br i1 %208, label %209, label %269

209:                                              ; preds = %199
  %210 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %201, i64 1, i32 0
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, null
  br i1 %212, label %213, label %221

213:                                              ; preds = %209
  %214 = bitcast %"class.std::__1::__tree_end_node"* %201 to %"class.std::__1::__tree_node_base"*
  %215 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %201, i64 2
  %216 = bitcast %"class.std::__1::__tree_end_node"* %215 to %"class.std::__1::__tree_end_node"**
  %217 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %216, align 8
  %218 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %217, i64 0, i32 0
  %219 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %218, align 8
  %220 = icmp eq %"class.std::__1::__tree_node_base"* %219, %214
  br i1 %220, label %237, label %228

221:                                              ; preds = %209, %221
  %222 = phi %"class.std::__1::__tree_node_base"* [ %224, %221 ], [ %211, %209 ]
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %226, label %221

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  br label %237

228:                                              ; preds = %213, %228
  %229 = phi %"class.std::__1::__tree_end_node"** [ %232, %228 ], [ %216, %213 ]
  %230 = bitcast %"class.std::__1::__tree_end_node"** %229 to %"class.std::__1::__tree_node_base"**
  %231 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %230, align 8
  %232 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %231, i64 0, i32 2
  %233 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %232, align 8
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %233, i64 0, i32 0
  %235 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %234, align 8
  %236 = icmp eq %"class.std::__1::__tree_node_base"* %235, %231
  br i1 %236, label %237, label %228

237:                                              ; preds = %228, %226, %213
  %238 = phi %"class.std::__1::__tree_end_node"* [ %227, %226 ], [ %217, %213 ], [ %233, %228 ]
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 1, i32 0
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node_base"* %240, null
  br i1 %241, label %242, label %250

242:                                              ; preds = %237
  %243 = bitcast %"class.std::__1::__tree_end_node"* %200 to %"class.std::__1::__tree_node_base"*
  %244 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 2
  %245 = bitcast %"class.std::__1::__tree_end_node"* %244 to %"class.std::__1::__tree_end_node"**
  %246 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %245, align 8
  %247 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %246, i64 0, i32 0
  %248 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %247, align 8
  %249 = icmp eq %"class.std::__1::__tree_node_base"* %248, %243
  br i1 %249, label %266, label %257

250:                                              ; preds = %237, %250
  %251 = phi %"class.std::__1::__tree_node_base"* [ %253, %250 ], [ %240, %237 ]
  %252 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 0, i32 0
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  %254 = icmp eq %"class.std::__1::__tree_node_base"* %253, null
  br i1 %254, label %255, label %250

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 0
  br label %266

257:                                              ; preds = %242, %257
  %258 = phi %"class.std::__1::__tree_end_node"** [ %261, %257 ], [ %245, %242 ]
  %259 = bitcast %"class.std::__1::__tree_end_node"** %258 to %"class.std::__1::__tree_node_base"**
  %260 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %259, align 8
  %261 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %260, i64 0, i32 2
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %261, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %260
  br i1 %265, label %266, label %257

266:                                              ; preds = %257, %255, %242
  %267 = phi %"class.std::__1::__tree_end_node"* [ %256, %255 ], [ %246, %242 ], [ %262, %257 ]
  %268 = icmp eq %"class.std::__1::__tree_end_node"* %238, %197
  br i1 %268, label %408, label %199

269:                                              ; preds = %199, %187
  %270 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %179, i64 0, i32 0
  %271 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %270, align 8
  %272 = icmp eq %"struct.std::__1::__hash_node_base.232"* %271, null
  br i1 %272, label %273, label %178

273:                                              ; preds = %178, %269, %89, %114, %70, %63, %48
  %274 = phi i64 [ %64, %63 ], [ undef, %48 ], [ %64, %70 ], [ %64, %114 ], [ %64, %89 ], [ %64, %269 ], [ %64, %178 ]
  %275 = tail call i8* @_Znwm(i64 144) #16, !noalias !21
  %276 = getelementptr inbounds i8, i8* %275, i64 16
  %277 = bitcast i8* %276 to %"class.v8::internal::torque::Type"*
  %278 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 0
  tail call void @_ZN2v88internal6torque4TypeC2ERKS2_(%"class.v8::internal::torque::Type"* %277, %"class.v8::internal::torque::Type"* dereferenceable(104) %278) #14, !noalias !21
  %279 = bitcast i8* %276 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %279, align 8, !noalias !21
  %280 = getelementptr inbounds i8, i8* %275, i64 120
  %281 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 1
  %282 = getelementptr inbounds i8, i8* %275, i64 128
  %283 = bitcast %"class.std::__1::set.178"* %281 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !noalias !21
  %285 = bitcast i8* %280 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %285, align 8, !noalias !21
  %286 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %287 = getelementptr inbounds i8, i8* %275, i64 136
  %288 = bitcast i8* %287 to i64*
  %289 = load i64, i64* %286, align 8, !noalias !21
  store i64 %289, i64* %288, align 8, !noalias !21
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %273
  %292 = bitcast i8* %280 to i8**
  store i8* %282, i8** %292, align 8, !noalias !21
  br label %301

293:                                              ; preds = %273
  %294 = extractelement <2 x i64> %284, i32 1
  %295 = inttoptr i64 %294 to %"class.std::__1::__tree_node_base"*
  %296 = getelementptr inbounds %"class.std::__1::set.178", %"class.std::__1::set.178"* %281, i64 0, i32 0, i32 0
  %297 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %295, i64 0, i32 2
  %298 = bitcast %"class.std::__1::__tree_end_node"** %297 to i8**
  store i8* %282, i8** %298, align 8, !noalias !21
  %299 = getelementptr inbounds %"class.v8::internal::torque::UnionType", %"class.v8::internal::torque::UnionType"* %2, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %299, %"class.std::__1::__tree_end_node"** %296, align 8, !noalias !21
  %300 = bitcast %"class.std::__1::__tree_end_node"* %299 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %300, i8 0, i64 16, i1 false) #14, !noalias !21
  br label %301

301:                                              ; preds = %291, %293
  %302 = getelementptr inbounds i8, i8* %275, i64 8
  %303 = bitcast i8* %302 to i64*
  store i64 %49, i64* %303, align 8, !noalias !21
  %304 = bitcast i8* %275 to %"struct.std::__1::__hash_node_base.232"**
  store %"struct.std::__1::__hash_node_base.232"* null, %"struct.std::__1::__hash_node_base.232"** %304, align 8, !noalias !21
  %305 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 2, i32 0, i32 0
  %306 = load i64, i64* %305, align 8
  %307 = add i64 %306, 1
  %308 = uitofp i64 %307 to float
  %309 = uitofp i64 %51 to float
  %310 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 3, i32 0, i32 0
  %311 = load float, float* %310, align 4
  %312 = fmul float %311, %309
  %313 = fcmp olt float %312, %308
  %314 = or i1 %52, %313
  br i1 %314, label %315, label %363

315:                                              ; preds = %301
  %316 = shl i64 %51, 1
  %317 = icmp ult i64 %51, 3
  %318 = tail call i64 @llvm.ctpop.i64(i64 %51) #14, !range !20
  %319 = icmp ugt i64 %318, 1
  %320 = or i1 %317, %319
  %321 = zext i1 %320 to i64
  %322 = or i64 %316, %321
  %323 = fdiv float %308, %311
  %324 = tail call float @llvm.ceil.f32(float %323) #14
  %325 = fptoui float %324 to i64
  %326 = icmp ult i64 %322, %325
  %327 = select i1 %326, i64 %325, i64 %322
  invoke void @_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.228"* %0, i64 %327)
          to label %328 unwind label %339

328:                                              ; preds = %315
  %329 = load i64, i64* %50, align 8
  %330 = tail call i64 @llvm.ctpop.i64(i64 %329) #14, !range !20
  %331 = icmp ugt i64 %330, 1
  br i1 %331, label %335, label %332

332:                                              ; preds = %328
  %333 = add i64 %329, -1
  %334 = and i64 %333, %49
  br label %363

335:                                              ; preds = %328
  %336 = icmp ult i64 %49, %329
  br i1 %336, label %363, label %337

337:                                              ; preds = %335
  %338 = urem i64 %49, %329
  br label %363

339:                                              ; preds = %315
  %340 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque9UnionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %279, align 8
  %341 = bitcast i8* %280 to %"class.std::__1::__tree.179"*
  %342 = bitcast i8* %282 to %"class.std::__1::__tree_node"**
  %343 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %342, align 8
  tail call void @_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.179"* %341, %"class.std::__1::__tree_node"* %343) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2v88internal6torque4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %279, align 8
  %344 = getelementptr inbounds i8, i8* %275, i64 72
  %345 = load i8, i8* %344, align 8, !range !2
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %357, label %347

347:                                              ; preds = %339
  %348 = getelementptr inbounds i8, i8* %275, i64 88
  %349 = bitcast i8* %348 to %"class.v8::internal::torque::Type"***
  %350 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %349, align 8
  %351 = icmp eq %"class.v8::internal::torque::Type"** %350, null
  br i1 %351, label %357, label %352

352:                                              ; preds = %347
  %353 = ptrtoint %"class.v8::internal::torque::Type"** %350 to i64
  %354 = getelementptr inbounds i8, i8* %275, i64 96
  %355 = bitcast i8* %354 to i64*
  store i64 %353, i64* %355, align 8
  %356 = bitcast %"class.v8::internal::torque::Type"** %350 to i8*
  tail call void @_ZdlPv(i8* %356) #17
  br label %357

357:                                              ; preds = %352, %347, %339
  %358 = getelementptr inbounds i8, i8* %275, i64 40
  %359 = bitcast i8* %358 to %"class.std::__1::__tree"*
  %360 = getelementptr inbounds i8, i8* %275, i64 48
  %361 = bitcast i8* %360 to %"class.std::__1::__tree_node.190"**
  %362 = load %"class.std::__1::__tree_node.190"*, %"class.std::__1::__tree_node.190"** %361, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %359, %"class.std::__1::__tree_node.190"* %362) #14
  tail call void @_ZdlPv(i8* nonnull %275) #17
  resume { i8*, i32 } %340

363:                                              ; preds = %337, %335, %332, %301
  %364 = phi i64 [ %274, %301 ], [ %334, %332 ], [ %338, %337 ], [ %49, %335 ]
  %365 = phi i64 [ %51, %301 ], [ %329, %332 ], [ %329, %337 ], [ %329, %335 ]
  %366 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %367 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %366, align 8
  %368 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %367, i64 %364
  %369 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %368, align 8
  %370 = icmp eq %"struct.std::__1::__hash_node_base.232"* %369, null
  br i1 %370, label %371, label %397

371:                                              ; preds = %363
  %372 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 1, i32 0, i32 0
  %373 = bitcast %"struct.std::__1::__hash_node_base.232"* %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = bitcast i8* %275 to i64*
  store i64 %374, i64* %375, align 8
  %376 = bitcast %"struct.std::__1::__hash_node_base.232"* %372 to i8**
  store i8* %275, i8** %376, align 8
  store %"struct.std::__1::__hash_node_base.232"* %372, %"struct.std::__1::__hash_node_base.232"** %368, align 8
  %377 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %304, align 8
  %378 = icmp eq %"struct.std::__1::__hash_node_base.232"* %377, null
  br i1 %378, label %404, label %379

379:                                              ; preds = %371
  %380 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %377, i64 1
  %381 = bitcast %"struct.std::__1::__hash_node_base.232"* %380 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = tail call i64 @llvm.ctpop.i64(i64 %365) #14, !range !20
  %384 = icmp ugt i64 %383, 1
  br i1 %384, label %388, label %385

385:                                              ; preds = %379
  %386 = add i64 %365, -1
  %387 = and i64 %382, %386
  br label %392

388:                                              ; preds = %379
  %389 = icmp ult i64 %382, %365
  br i1 %389, label %392, label %390

390:                                              ; preds = %388
  %391 = urem i64 %382, %365
  br label %392

392:                                              ; preds = %385, %388, %390
  %393 = phi i64 [ %387, %385 ], [ %391, %390 ], [ %382, %388 ]
  %394 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %366, align 8
  %395 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %394, i64 %393
  %396 = bitcast %"struct.std::__1::__hash_node_base.232"** %395 to i8**
  br label %402

397:                                              ; preds = %363
  %398 = bitcast %"struct.std::__1::__hash_node_base.232"* %369 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = bitcast i8* %275 to i64*
  store i64 %399, i64* %400, align 8
  %401 = bitcast %"struct.std::__1::__hash_node_base.232"* %369 to i8**
  br label %402

402:                                              ; preds = %392, %397
  %403 = phi i8** [ %401, %397 ], [ %396, %392 ]
  store i8* %275, i8** %403, align 8
  br label %404

404:                                              ; preds = %402, %371
  %405 = bitcast i8* %275 to %"struct.std::__1::__hash_node_base.232"*
  %406 = load i64, i64* %305, align 8
  %407 = add i64 %406, 1
  store i64 %407, i64* %305, align 8
  br label %408

408:                                              ; preds = %192, %266, %97, %175, %404
  %409 = phi i8 [ 1, %404 ], [ 0, %175 ], [ 0, %97 ], [ 0, %266 ], [ 0, %192 ]
  %410 = phi %"struct.std::__1::__hash_node_base.232"* [ %405, %404 ], [ %80, %175 ], [ %80, %97 ], [ %179, %266 ], [ %179, %192 ]
  %411 = insertvalue { %"struct.std::__1::__hash_node_base.232"*, i8 } undef, %"struct.std::__1::__hash_node_base.232"* %410, 0
  %412 = insertvalue { %"struct.std::__1::__hash_node_base.232"*, i8 } %411, i8 %409, 1
  ret { %"struct.std::__1::__hash_node_base.232"*, i8 } %412
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.228"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !20
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1)
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.228"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !20
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !20
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29)
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.228"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZN2v84base12hash_combineEmm(i64, i64) local_unnamed_addr #3

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #3

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.228"*, i64) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %353, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.228"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.232"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.232"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.234", %"class.std::__1::__bucket_list_deallocator.234"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.232"* null, %"struct.std::__1::__hash_node_base.232"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !24

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.232"* %38, null
  br i1 %39, label %361, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.232"* null, %"struct.std::__1::__hash_node_base.232"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.232"* null, %"struct.std::__1::__hash_node_base.232"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.232"* null, %"struct.std::__1::__hash_node_base.232"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.232"* null, %"struct.std::__1::__hash_node_base.232"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.232"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !20
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.232"* %36, %"struct.std::__1::__hash_node_base.232"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.232"* %75, null
  br i1 %76, label %361, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %218

79:                                               ; preds = %77, %200
  %80 = phi %"struct.std::__1::__hash_node_base.232"* [ %204, %200 ], [ %75, %77 ]
  %81 = phi i64 [ %202, %200 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.232"* [ %201, %200 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.232"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %200, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.232"* %95, null
  br i1 %96, label %199, label %206

97:                                               ; preds = %210, %181
  %98 = phi %"struct.std::__1::__hash_node_base.232"* [ %208, %210 ], [ %183, %181 ]
  %99 = phi %"struct.std::__1::__hash_node_base.232"* [ %80, %210 ], [ %98, %181 ]
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %98, i64 17
  %101 = bitcast %"struct.std::__1::__hash_node_base.232"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = icmp eq i64 %213, %102
  br i1 %103, label %104, label %185

104:                                              ; preds = %97
  %105 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %215, align 8
  %106 = icmp eq %"class.std::__1::__tree_end_node"* %105, %217
  br i1 %106, label %181, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %98, i64 15
  %109 = bitcast %"struct.std::__1::__hash_node_base.232"* %108 to %"class.std::__1::__tree_end_node"**
  %110 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %109, align 8
  br label %111

111:                                              ; preds = %178, %107
  %112 = phi %"class.std::__1::__tree_end_node"* [ %179, %178 ], [ %110, %107 ]
  %113 = phi %"class.std::__1::__tree_end_node"* [ %150, %178 ], [ %105, %107 ]
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 4
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"class.v8::internal::torque::Type"**
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 4
  %117 = bitcast %"class.std::__1::__tree_end_node"* %116 to %"class.v8::internal::torque::Type"**
  %118 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %115, align 8
  %119 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %117, align 8
  %120 = icmp eq %"class.v8::internal::torque::Type"* %118, %119
  br i1 %120, label %121, label %185

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121, %125
  %126 = phi %"class.std::__1::__tree_node_base"* [ %128, %125 ], [ %123, %121 ]
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %126, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, null
  br i1 %129, label %130, label %125

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %126, i64 0, i32 0
  br label %149

132:                                              ; preds = %121
  %133 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.std::__1::__tree_node_base"*
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 2
  %135 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_end_node"**
  %136 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %136, i64 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, %133
  br i1 %139, label %149, label %140

140:                                              ; preds = %132, %140
  %141 = phi %"class.std::__1::__tree_end_node"** [ %144, %140 ], [ %135, %132 ]
  %142 = bitcast %"class.std::__1::__tree_end_node"** %141 to %"class.std::__1::__tree_node_base"**
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %145 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, %143
  br i1 %148, label %149, label %140

149:                                              ; preds = %140, %132, %130
  %150 = phi %"class.std::__1::__tree_end_node"* [ %131, %130 ], [ %136, %132 ], [ %145, %140 ]
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 1, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %161, label %154

154:                                              ; preds = %149, %154
  %155 = phi %"class.std::__1::__tree_node_base"* [ %157, %154 ], [ %152, %149 ]
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, null
  br i1 %158, label %159, label %154

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 0
  br label %178

161:                                              ; preds = %149
  %162 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node_base"*
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 2
  %164 = bitcast %"class.std::__1::__tree_end_node"* %163 to %"class.std::__1::__tree_end_node"**
  %165 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, %162
  br i1 %168, label %178, label %169

169:                                              ; preds = %161, %169
  %170 = phi %"class.std::__1::__tree_end_node"** [ %173, %169 ], [ %164, %161 ]
  %171 = bitcast %"class.std::__1::__tree_end_node"** %170 to %"class.std::__1::__tree_node_base"**
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %172, i64 0, i32 2
  %174 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, %172
  br i1 %177, label %178, label %169

178:                                              ; preds = %169, %161, %159
  %179 = phi %"class.std::__1::__tree_end_node"* [ %160, %159 ], [ %165, %161 ], [ %174, %169 ]
  %180 = icmp eq %"class.std::__1::__tree_end_node"* %150, %217
  br i1 %180, label %181, label %111

181:                                              ; preds = %178, %104
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %98, i64 0, i32 0
  %183 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %182, align 8
  %184 = icmp eq %"struct.std::__1::__hash_node_base.232"* %183, null
  br i1 %184, label %185, label %97

185:                                              ; preds = %97, %181, %111, %206
  %186 = phi %"struct.std::__1::__hash_node_base.232"* [ %80, %206 ], [ %99, %111 ], [ %98, %181 ], [ %99, %97 ]
  %187 = bitcast %"struct.std::__1::__hash_node_base.232"* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"struct.std::__1::__hash_node_base.232"* %82 to i64*
  store i64 %188, i64* %189, align 8
  %190 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %190, i64 %90
  %192 = bitcast %"struct.std::__1::__hash_node_base.232"** %191 to i64**
  %193 = load i64*, i64** %192, align 8
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %187, align 8
  %195 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %195, i64 %90
  %197 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %196, align 8
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %197, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.232"* %80, %"struct.std::__1::__hash_node_base.232"** %198, align 8
  br label %200

199:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.232"* %82, %"struct.std::__1::__hash_node_base.232"** %94, align 8
  br label %200

200:                                              ; preds = %199, %185, %89
  %201 = phi %"struct.std::__1::__hash_node_base.232"* [ %80, %199 ], [ %82, %185 ], [ %80, %89 ]
  %202 = phi i64 [ %90, %199 ], [ %81, %185 ], [ %81, %89 ]
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %201, i64 0, i32 0
  %204 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %203, align 8
  %205 = icmp eq %"struct.std::__1::__hash_node_base.232"* %204, null
  br i1 %205, label %361, label %79

206:                                              ; preds = %92
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 0, i32 0
  %208 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %207, align 8
  %209 = icmp eq %"struct.std::__1::__hash_node_base.232"* %208, null
  br i1 %209, label %185, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 17
  %212 = bitcast %"struct.std::__1::__hash_node_base.232"* %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 15
  %215 = bitcast %"struct.std::__1::__hash_node_base.232"* %214 to %"class.std::__1::__tree_end_node"**
  %216 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %80, i64 16
  %217 = bitcast %"struct.std::__1::__hash_node_base.232"* %216 to %"class.std::__1::__tree_end_node"*
  br label %97

218:                                              ; preds = %77, %347
  %219 = phi %"struct.std::__1::__hash_node_base.232"* [ %351, %347 ], [ %75, %77 ]
  %220 = phi i64 [ %349, %347 ], [ %71, %77 ]
  %221 = phi %"struct.std::__1::__hash_node_base.232"* [ %348, %347 ], [ %38, %77 ]
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %219, i64 1
  %223 = bitcast %"struct.std::__1::__hash_node_base.232"* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = and i64 %224, %78
  %226 = icmp eq i64 %225, %220
  br i1 %226, label %347, label %227

227:                                              ; preds = %218
  %228 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %228, i64 %225
  %230 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %229, align 8
  %231 = icmp eq %"struct.std::__1::__hash_node_base.232"* %230, null
  br i1 %231, label %244, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %219, i64 0, i32 0
  %234 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %233, align 8
  %235 = icmp eq %"struct.std::__1::__hash_node_base.232"* %234, null
  br i1 %235, label %333, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %219, i64 17
  %238 = bitcast %"struct.std::__1::__hash_node_base.232"* %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %219, i64 15
  %241 = bitcast %"struct.std::__1::__hash_node_base.232"* %240 to %"class.std::__1::__tree_end_node"**
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %219, i64 16
  %243 = bitcast %"struct.std::__1::__hash_node_base.232"* %242 to %"class.std::__1::__tree_end_node"*
  br label %245

244:                                              ; preds = %227
  store %"struct.std::__1::__hash_node_base.232"* %221, %"struct.std::__1::__hash_node_base.232"** %229, align 8
  br label %347

245:                                              ; preds = %236, %329
  %246 = phi %"struct.std::__1::__hash_node_base.232"* [ %234, %236 ], [ %331, %329 ]
  %247 = phi %"struct.std::__1::__hash_node_base.232"* [ %219, %236 ], [ %246, %329 ]
  %248 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %246, i64 17
  %249 = bitcast %"struct.std::__1::__hash_node_base.232"* %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = icmp eq i64 %239, %250
  br i1 %251, label %252, label %333

252:                                              ; preds = %245
  %253 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %241, align 8
  %254 = icmp eq %"class.std::__1::__tree_end_node"* %253, %243
  br i1 %254, label %329, label %255

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %246, i64 15
  %257 = bitcast %"struct.std::__1::__hash_node_base.232"* %256 to %"class.std::__1::__tree_end_node"**
  %258 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  br label %259

259:                                              ; preds = %326, %255
  %260 = phi %"class.std::__1::__tree_end_node"* [ %327, %326 ], [ %258, %255 ]
  %261 = phi %"class.std::__1::__tree_end_node"* [ %298, %326 ], [ %253, %255 ]
  %262 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %261, i64 4
  %263 = bitcast %"class.std::__1::__tree_end_node"* %262 to %"class.v8::internal::torque::Type"**
  %264 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 4
  %265 = bitcast %"class.std::__1::__tree_end_node"* %264 to %"class.v8::internal::torque::Type"**
  %266 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %263, align 8
  %267 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %265, align 8
  %268 = icmp eq %"class.v8::internal::torque::Type"* %266, %267
  br i1 %268, label %269, label %333

269:                                              ; preds = %259
  %270 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %261, i64 1, i32 0
  %271 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %270, align 8
  %272 = icmp eq %"class.std::__1::__tree_node_base"* %271, null
  br i1 %272, label %273, label %281

273:                                              ; preds = %269
  %274 = bitcast %"class.std::__1::__tree_end_node"* %261 to %"class.std::__1::__tree_node_base"*
  %275 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %261, i64 2
  %276 = bitcast %"class.std::__1::__tree_end_node"* %275 to %"class.std::__1::__tree_end_node"**
  %277 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %276, align 8
  %278 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %277, i64 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, %274
  br i1 %280, label %297, label %288

281:                                              ; preds = %269, %281
  %282 = phi %"class.std::__1::__tree_node_base"* [ %284, %281 ], [ %271, %269 ]
  %283 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %282, i64 0, i32 0, i32 0
  %284 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %283, align 8
  %285 = icmp eq %"class.std::__1::__tree_node_base"* %284, null
  br i1 %285, label %286, label %281

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %282, i64 0, i32 0
  br label %297

288:                                              ; preds = %273, %288
  %289 = phi %"class.std::__1::__tree_end_node"** [ %292, %288 ], [ %276, %273 ]
  %290 = bitcast %"class.std::__1::__tree_end_node"** %289 to %"class.std::__1::__tree_node_base"**
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %291, i64 0, i32 2
  %293 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %292, align 8
  %294 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %293, i64 0, i32 0
  %295 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %294, align 8
  %296 = icmp eq %"class.std::__1::__tree_node_base"* %295, %291
  br i1 %296, label %297, label %288

297:                                              ; preds = %288, %286, %273
  %298 = phi %"class.std::__1::__tree_end_node"* [ %287, %286 ], [ %277, %273 ], [ %293, %288 ]
  %299 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 1, i32 0
  %300 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %299, align 8
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %300, null
  br i1 %301, label %302, label %310

302:                                              ; preds = %297
  %303 = bitcast %"class.std::__1::__tree_end_node"* %260 to %"class.std::__1::__tree_node_base"*
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 2
  %305 = bitcast %"class.std::__1::__tree_end_node"* %304 to %"class.std::__1::__tree_end_node"**
  %306 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %305, align 8
  %307 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %306, i64 0, i32 0
  %308 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %307, align 8
  %309 = icmp eq %"class.std::__1::__tree_node_base"* %308, %303
  br i1 %309, label %326, label %317

310:                                              ; preds = %297, %310
  %311 = phi %"class.std::__1::__tree_node_base"* [ %313, %310 ], [ %300, %297 ]
  %312 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %311, i64 0, i32 0, i32 0
  %313 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node_base"* %313, null
  br i1 %314, label %315, label %310

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %311, i64 0, i32 0
  br label %326

317:                                              ; preds = %302, %317
  %318 = phi %"class.std::__1::__tree_end_node"** [ %321, %317 ], [ %305, %302 ]
  %319 = bitcast %"class.std::__1::__tree_end_node"** %318 to %"class.std::__1::__tree_node_base"**
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  %321 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  %322 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %321, align 8
  %323 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 0, i32 0
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = icmp eq %"class.std::__1::__tree_node_base"* %324, %320
  br i1 %325, label %326, label %317

326:                                              ; preds = %317, %315, %302
  %327 = phi %"class.std::__1::__tree_end_node"* [ %316, %315 ], [ %306, %302 ], [ %322, %317 ]
  %328 = icmp eq %"class.std::__1::__tree_end_node"* %298, %243
  br i1 %328, label %329, label %259

329:                                              ; preds = %326, %252
  %330 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %246, i64 0, i32 0
  %331 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %330, align 8
  %332 = icmp eq %"struct.std::__1::__hash_node_base.232"* %331, null
  br i1 %332, label %333, label %245

333:                                              ; preds = %329, %245, %259, %232
  %334 = phi %"struct.std::__1::__hash_node_base.232"* [ %219, %232 ], [ %247, %259 ], [ %246, %329 ], [ %247, %245 ]
  %335 = bitcast %"struct.std::__1::__hash_node_base.232"* %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = bitcast %"struct.std::__1::__hash_node_base.232"* %221 to i64*
  store i64 %336, i64* %337, align 8
  %338 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %339 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %338, i64 %225
  %340 = bitcast %"struct.std::__1::__hash_node_base.232"** %339 to i64**
  %341 = load i64*, i64** %340, align 8
  %342 = load i64, i64* %341, align 8
  store i64 %342, i64* %335, align 8
  %343 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %11, align 8
  %344 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %343, i64 %225
  %345 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %344, align 8
  %346 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %345, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.232"* %219, %"struct.std::__1::__hash_node_base.232"** %346, align 8
  br label %347

347:                                              ; preds = %218, %333, %244
  %348 = phi %"struct.std::__1::__hash_node_base.232"* [ %219, %244 ], [ %221, %333 ], [ %219, %218 ]
  %349 = phi i64 [ %225, %244 ], [ %220, %333 ], [ %220, %218 ]
  %350 = getelementptr inbounds %"struct.std::__1::__hash_node_base.232", %"struct.std::__1::__hash_node_base.232"* %348, i64 0, i32 0
  %351 = load %"struct.std::__1::__hash_node_base.232"*, %"struct.std::__1::__hash_node_base.232"** %350, align 8
  %352 = icmp eq %"struct.std::__1::__hash_node_base.232"* %351, null
  br i1 %352, label %361, label %218

353:                                              ; preds = %2
  %354 = getelementptr inbounds %"class.std::__1::__hash_table.228", %"class.std::__1::__hash_table.228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %355 = load %"struct.std::__1::__hash_node_base.232"**, %"struct.std::__1::__hash_node_base.232"*** %354, align 8
  store %"struct.std::__1::__hash_node_base.232"** null, %"struct.std::__1::__hash_node_base.232"*** %354, align 8
  %356 = icmp eq %"struct.std::__1::__hash_node_base.232"** %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %353
  %358 = bitcast %"struct.std::__1::__hash_node_base.232"** %355 to i8*
  tail call void @_ZdlPv(i8* %358) #17
  br label %359

359:                                              ; preds = %353, %357
  %360 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.234", %"class.std::__1::__bucket_list_deallocator.234"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %360, align 8
  br label %361

361:                                              ; preds = %347, %200, %70, %35, %359
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare void @_ZNK2v88internal6torque4Type8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.v8::internal::torque::Type"*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  invoke void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0)
          to label %7 unwind label %65

7:                                                ; preds = %3
  %8 = load i8, i8* %6, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %74, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = getelementptr inbounds i8, i8* %17, i64 40
  %19 = bitcast i8* %18 to %"class.std::__1::basic_streambuf"**
  %20 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %19, align 8
  %21 = bitcast i8* %17 to %"class.std::__1::ios_base"*
  %22 = getelementptr inbounds i8, i8* %17, i64 8
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds i8, i8* %1, i64 %2
  %26 = getelementptr inbounds i8, i8* %17, i64 144
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %45

30:                                               ; preds = %10
  %31 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  invoke void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %21)
          to label %32 unwind label %72

32:                                               ; preds = %30
  %33 = invoke %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE)
          to label %34 unwind label %41

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::locale::facet"* %33 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %33 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = invoke signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32)
          to label %43 unwind label %41

41:                                               ; preds = %34, %32
  %42 = landingpad { i8*, i32 }
          catch i8* null
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %75

43:                                               ; preds = %34
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  %44 = sext i8 %40 to i32
  store i32 %44, i32* %27, align 8
  br label %45

45:                                               ; preds = %43, %10
  %46 = phi i32 [ %44, %43 ], [ %28, %10 ]
  %47 = trunc i32 %46 to i8
  %48 = and i32 %24, 176
  %49 = icmp eq i32 %48, 32
  %50 = select i1 %49, i8* %25, i8* %1
  %51 = invoke %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %20, i8* %1, i8* %50, i8* %25, %"class.std::__1::ios_base"* dereferenceable(136) %21, i8 signext %47)
          to label %52 unwind label %72

52:                                               ; preds = %45
  %53 = icmp eq %"class.std::__1::basic_streambuf"* %51, null
  br i1 %53, label %54, label %74

54:                                               ; preds = %52
  %55 = load i8*, i8** %11, align 8
  %56 = getelementptr i8, i8* %55, i64 -24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i8, i8* %16, i64 %58
  %60 = bitcast i8* %59 to %"class.std::__1::ios_base"*
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, 5
  invoke void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %60, i32 %64)
          to label %74 unwind label %70

65:                                               ; preds = %3
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  %68 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %69 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  br label %78

70:                                               ; preds = %54
  %71 = landingpad { i8*, i32 }
          catch i8* null
  br label %75

72:                                               ; preds = %30, %45
  %73 = landingpad { i8*, i32 }
          catch i8* null
  br label %75

74:                                               ; preds = %7, %54, %52
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  br label %90

75:                                               ; preds = %72, %41, %70
  %76 = phi { i8*, i32 } [ %71, %70 ], [ %73, %72 ], [ %42, %41 ]
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  br label %78

78:                                               ; preds = %75, %65
  %79 = phi i8* [ %16, %75 ], [ %69, %65 ]
  %80 = phi i8** [ %11, %75 ], [ %68, %65 ]
  %81 = phi i8* [ %77, %75 ], [ %67, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  %82 = call i8* @__cxa_begin_catch(i8* %81) #14
  %83 = load i8*, i8** %80, align 8
  %84 = getelementptr i8, i8* %83, i64 -24
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i8, i8* %79, i64 %86
  %88 = bitcast i8* %87 to %"class.std::__1::ios_base"*
  invoke void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(%"class.std::__1::ios_base"* %88)
          to label %89 unwind label %91

89:                                               ; preds = %78
  call void @__cxa_end_catch()
  br label %90

90:                                               ; preds = %89, %74
  ret %"class.std::__1::basic_ostream"* %0

91:                                               ; preds = %78
  %92 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %93 unwind label %94

93:                                               ; preds = %91
  resume { i8*, i32 } %92

94:                                               ; preds = %91
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #18
  unreachable
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %86, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19)
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %86

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %75

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #16
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #14
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = invoke i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17)
          to label %61 unwind label %68

61:                                               ; preds = %46
  %62 = icmp eq i64 %60, %17
  %63 = load i8, i8* %50, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %66) #17
  br label %67

67:                                               ; preds = %61, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %62, label %75, label %86

68:                                               ; preds = %46
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = load i8, i8* %50, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %73) #17
  br label %74

74:                                               ; preds = %68, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  resume { i8*, i32 } %69

75:                                               ; preds = %67, %28
  %76 = sub i64 %10, %18
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %80 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %80, i64 12
  %82 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %81, align 8
  %83 = call i64 %82(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %76)
  %84 = icmp eq i64 %83, %76
  br i1 %84, label %85, label %86

85:                                               ; preds = %78, %75
  store i64 0, i64* %13, align 8
  br label %86

86:                                               ; preds = %85, %67, %21, %78, %6
  %87 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %85 ], [ null, %67 ], [ null, %21 ], [ null, %78 ]
  ret %"class.std::__1::basic_streambuf"* %87
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

declare void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(%"class.std::__1::ios_base"*) local_unnamed_addr #3

declare void @__cxa_end_catch() local_unnamed_addr

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #5

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN2v88internal6torque4TypeENS_9allocatorIS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector.11"*, %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"**) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = ptrtoint %"class.v8::internal::torque::Type"** %2 to i64
  %5 = ptrtoint %"class.v8::internal::torque::Type"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.v8::internal::torque::Type"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.v8::internal::torque::Type"**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::torque::Type"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %1, i64 %22
  %25 = select i1 %23, %"class.v8::internal::torque::Type"** %24, %"class.v8::internal::torque::Type"** %2
  %26 = ptrtoint %"class.v8::internal::torque::Type"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.v8::internal::torque::Type"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #14
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.v8::internal::torque::Type"** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #14
  %42 = inttoptr i64 %35 to %"class.v8::internal::torque::Type"**
  %43 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %42, i64 %39
  %44 = ptrtoint %"class.v8::internal::torque::Type"** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %16, i64 %28
  store %"class.v8::internal::torque::Type"** %48, %"class.v8::internal::torque::Type"*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.v8::internal::torque::Type"*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #17
  %55 = bitcast %"class.std::__1::vector.11"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #14
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #16
  %75 = bitcast i8* %74 to %"class.v8::internal::torque::Type"**
  %76 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.v8::internal::torque::Type"*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.11"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %75, i64 %72
  store %"class.v8::internal::torque::Type"** %79, %"class.v8::internal::torque::Type"*** %8, align 8
  %80 = bitcast %"class.v8::internal::torque::Type"*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.v8::internal::torque::Type"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #14
  %86 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %75, i64 %84
  %87 = ptrtoint %"class.v8::internal::torque::Type"** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.18"*, %"class.v8::internal::torque::Instruction"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::torque::Instruction"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::torque::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.v8::internal::torque::Instruction"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.v8::internal::torque::Instruction"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %36, i64 %9
  %38 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %36, i64 %35
  %39 = ptrtoint %"class.v8::internal::torque::Instruction"* %38 to i64
  %40 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %43, align 8
  %45 = bitcast %"struct.v8::internal::torque::InstructionBase"* %44 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %46 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %45, align 8
  %47 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %46, align 8
  %48 = invoke %"struct.v8::internal::torque::InstructionBase"* %47(%"struct.v8::internal::torque::InstructionBase"* %44)
          to label %52 unwind label %49

49:                                               ; preds = %34
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  tail call void @__clang_call_terminate(i8* %51) #18
  unreachable

52:                                               ; preds = %34
  %53 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %36, i64 %9, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %48, %"struct.v8::internal::torque::InstructionBase"** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %37, i64 1
  %55 = ptrtoint %"class.v8::internal::torque::Instruction"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 0
  %57 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %56, align 8
  %58 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %3, align 8
  %59 = icmp eq %"class.v8::internal::torque::Instruction"* %58, %57
  br i1 %59, label %60, label %62

60:                                               ; preds = %52
  %61 = ptrtoint %"class.v8::internal::torque::Instruction"* %57 to i64
  br label %85

62:                                               ; preds = %52, %78
  %63 = phi %"class.v8::internal::torque::Instruction"* [ %80, %78 ], [ %37, %52 ]
  %64 = phi %"class.v8::internal::torque::Instruction"* [ %65, %78 ], [ %58, %52 ]
  %65 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %64, i64 -1
  %66 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %63, i64 -1, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %65, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %66, align 8
  %69 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %64, i64 -1, i32 1, i32 0, i32 0, i32 0
  %70 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %69, align 8
  %71 = bitcast %"struct.v8::internal::torque::InstructionBase"* %70 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %72 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %71, align 8
  %73 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %72, align 8
  %74 = invoke %"struct.v8::internal::torque::InstructionBase"* %73(%"struct.v8::internal::torque::InstructionBase"* %70)
          to label %78 unwind label %75

75:                                               ; preds = %62
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  tail call void @__clang_call_terminate(i8* %77) #18
  unreachable

78:                                               ; preds = %62
  %79 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %63, i64 -1, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %74, %"struct.v8::internal::torque::InstructionBase"** %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %63, i64 -1
  %81 = icmp eq %"class.v8::internal::torque::Instruction"* %65, %57
  br i1 %81, label %82, label %62

82:                                               ; preds = %78
  %83 = load i64, i64* %6, align 8
  %84 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %3, align 8
  br label %85

85:                                               ; preds = %82, %60
  %86 = phi %"class.v8::internal::torque::Instruction"* [ %57, %60 ], [ %84, %82 ]
  %87 = phi %"class.v8::internal::torque::Instruction"* [ %37, %60 ], [ %80, %82 ]
  %88 = phi i64 [ %61, %60 ], [ %83, %82 ]
  %89 = ptrtoint %"class.v8::internal::torque::Instruction"* %87 to i64
  store i64 %89, i64* %6, align 8
  store i64 %55, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %90 = inttoptr i64 %88 to %"class.v8::internal::torque::Instruction"*
  %91 = icmp eq %"class.v8::internal::torque::Instruction"* %86, %90
  br i1 %91, label %105, label %92

92:                                               ; preds = %85, %103
  %93 = phi %"class.v8::internal::torque::Instruction"* [ %94, %103 ], [ %86, %85 ]
  %94 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %93, i64 -1
  %95 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %93, i64 -1, i32 1, i32 0, i32 0, i32 0
  %96 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %95, align 8
  store %"struct.v8::internal::torque::InstructionBase"* null, %"struct.v8::internal::torque::InstructionBase"** %95, align 8
  %97 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %92
  %99 = bitcast %"struct.v8::internal::torque::InstructionBase"* %96 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %100 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %100, i64 3
  %102 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %101, align 8
  tail call void %102(%"struct.v8::internal::torque::InstructionBase"* nonnull %96) #14
  br label %103

103:                                              ; preds = %98, %92
  %104 = icmp eq %"class.v8::internal::torque::Instruction"* %94, %90
  br i1 %104, label %105, label %92

105:                                              ; preds = %103, %85
  %106 = icmp eq i64 %88, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = inttoptr i64 %88 to i8*
  tail call void @_ZdlPv(i8* %108) #17
  br label %109

109:                                              ; preds = %105, %107
  ret void
}

declare dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv() local_unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.157"* @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.153"*, %"class.v8::internal::torque::Block"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %1, align 8
  %4 = ptrtoint %"class.v8::internal::torque::Block"* %3 to i64
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %84, label %21

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctpop.i64(i64 %19) #14, !range !20
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %17, %25
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.157"* %36, null
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.157"* %40, null
  br i1 %41, label %84, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br i1 %23, label %44, label %66

44:                                               ; preds = %42, %62
  %45 = phi %"struct.std::__1::__hash_node_base.157"* [ %64, %62 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.157"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = icmp ult i64 %48, %19
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %48, %19
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %53, %52 ], [ %48, %50 ]
  %56 = icmp eq i64 %55, %32
  br i1 %56, label %62, label %84

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %45, i64 2
  %59 = bitcast %"struct.std::__1::__hash_node_base.157"* %58 to %"class.v8::internal::torque::Block"**
  %60 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %59, align 8
  %61 = icmp eq %"class.v8::internal::torque::Block"* %60, %3
  br i1 %61, label %84, label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %45, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.157"* %64, null
  br i1 %65, label %84, label %44

66:                                               ; preds = %42, %80
  %67 = phi %"struct.std::__1::__hash_node_base.157"* [ %82, %80 ], [ %40, %42 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %67, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base.157"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, %17
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = and i64 %70, %43
  %74 = icmp eq i64 %73, %32
  br i1 %74, label %80, label %84

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %67, i64 2
  %77 = bitcast %"struct.std::__1::__hash_node_base.157"* %76 to %"class.v8::internal::torque::Block"**
  %78 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %77, align 8
  %79 = icmp eq %"class.v8::internal::torque::Block"* %78, %3
  br i1 %79, label %84, label %80

80:                                               ; preds = %72, %75
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %67, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.157"* %82, null
  br i1 %83, label %84, label %66

84:                                               ; preds = %75, %80, %72, %57, %62, %54, %38, %2, %31
  %85 = phi %"struct.std::__1::__hash_node_base.157"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %57 ], [ null, %62 ], [ null, %54 ], [ %67, %75 ], [ null, %80 ], [ null, %72 ]
  ret %"struct.std::__1::__hash_node_base.157"* %85
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal6torque5BlockENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.v8::internal::torque::Block"**, align 8
  %3 = alloca %"class.v8::internal::torque::Block"**, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 511
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -512
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %9, align 8
  %11 = bitcast %"class.v8::internal::torque::Block"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %10, i64 1
  store %"class.v8::internal::torque::Block"*** %13, %"class.v8::internal::torque::Block"**** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %16, align 8
  %18 = icmp eq %"class.v8::internal::torque::Block"*** %15, %17
  %19 = ptrtoint %"class.v8::internal::torque::Block"*** %17 to i64
  %20 = bitcast %"class.v8::internal::torque::Block"*** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %22, align 8
  %24 = icmp ugt %"class.v8::internal::torque::Block"*** %13, %23
  %25 = ptrtoint %"class.v8::internal::torque::Block"*** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint %"class.v8::internal::torque::Block"*** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %13, i64 %31
  %33 = ptrtoint %"class.v8::internal::torque::Block"*** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.v8::internal::torque::Block"*** %32 to i8*
  %39 = bitcast %"class.v8::internal::torque::Block"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #14
  %40 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi %"class.v8::internal::torque::Block"*** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %32, i64 %35
  store %"class.v8::internal::torque::Block"*** %43, %"class.v8::internal::torque::Block"**** %14, align 8
  %44 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %42, i64 %31
  store %"class.v8::internal::torque::Block"*** %44, %"class.v8::internal::torque::Block"**** %9, align 8
  %45 = bitcast %"class.v8::internal::torque::Block"*** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast %"class.v8::internal::torque::Block"**** %16 to i64*
  %48 = bitcast %"class.std::__1::deque"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #16
  %59 = bitcast i8* %58 to %"class.v8::internal::torque::Block"***
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %59, i64 %56
  %62 = ptrtoint %"class.v8::internal::torque::Block"*** %61 to i64
  %63 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %59, i64 %52
  %64 = ptrtoint %"class.v8::internal::torque::Block"*** %63 to i64
  %65 = ptrtoint %"class.v8::internal::torque::Block"*** %13 to i64
  %66 = ptrtoint %"class.v8::internal::torque::Block"*** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.v8::internal::torque::Block"*** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi %"class.v8::internal::torque::Block"*** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast %"class.v8::internal::torque::Block"*** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %78, i64 1
  %86 = ptrtoint %"class.v8::internal::torque::Block"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !26

90:                                               ; preds = %77
  %91 = ptrtoint %"class.v8::internal::torque::Block"*** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi %"class.v8::internal::torque::Block"*** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi %"class.v8::internal::torque::Block"*** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"class.v8::internal::torque::Block"*** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi %"class.v8::internal::torque::Block"*** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast %"class.v8::internal::torque::Block"*** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 1
  %105 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %100, i64 1
  %106 = bitcast %"class.v8::internal::torque::Block"*** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.v8::internal::torque::Block"*** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 2
  %110 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %100, i64 2
  %111 = bitcast %"class.v8::internal::torque::Block"*** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.v8::internal::torque::Block"*** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 3
  %115 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %100, i64 3
  %116 = bitcast %"class.v8::internal::torque::Block"*** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.v8::internal::torque::Block"*** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 4
  %120 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %100, i64 4
  %121 = bitcast %"class.v8::internal::torque::Block"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.v8::internal::torque::Block"*** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 5
  %125 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %100, i64 5
  %126 = bitcast %"class.v8::internal::torque::Block"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::torque::Block"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 6
  %130 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %100, i64 6
  %131 = bitcast %"class.v8::internal::torque::Block"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::torque::Block"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 7
  %135 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %100, i64 7
  %136 = bitcast %"class.v8::internal::torque::Block"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::torque::Block"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %98, i64 8
  %140 = ptrtoint %"class.v8::internal::torque::Block"*** %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %100, i64 8
  %142 = icmp eq %"class.v8::internal::torque::Block"*** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint %"class.v8::internal::torque::Block"*** %69 to i64
  %145 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi %"class.v8::internal::torque::Block"*** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast %"class.v8::internal::torque::Block"**** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast %"class.v8::internal::torque::Block"**** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq %"class.v8::internal::torque::Block"*** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast %"class.v8::internal::torque::Block"*** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #17
  %155 = bitcast %"class.v8::internal::torque::Block"**** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %14, align 8
  %160 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %159, i64 1
  store %"class.v8::internal::torque::Block"*** %160, %"class.v8::internal::torque::Block"**** %14, align 8
  br label %581

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast %"class.v8::internal::torque::Block"**** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast %"class.v8::internal::torque::Block"**** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::torque::Block"**** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to %"class.v8::internal::torque::Block"***
  %180 = inttoptr i64 %168 to %"class.v8::internal::torque::Block"***
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.v8::internal::torque::Block"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #14
  %185 = tail call i8* @_Znwm(i64 4096) #16
  %186 = bitcast %"class.v8::internal::torque::Block"*** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal6torque5BlockENS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %162, %"class.v8::internal::torque::Block"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #14
  br label %581

187:                                              ; preds = %181
  %188 = bitcast %"class.v8::internal::torque::Block"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #14
  %189 = tail call i8* @_Znwm(i64 4096) #16
  %190 = bitcast %"class.v8::internal::torque::Block"*** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal6torque5BlockENS_9allocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %162, %"class.v8::internal::torque::Block"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #14
  %191 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %166, align 8
  %192 = bitcast %"class.v8::internal::torque::Block"*** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %191, i64 1
  store %"class.v8::internal::torque::Block"*** %194, %"class.v8::internal::torque::Block"**** %166, align 8
  %195 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %163, align 8
  %196 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %171, align 8
  %197 = icmp eq %"class.v8::internal::torque::Block"*** %195, %196
  %198 = ptrtoint %"class.v8::internal::torque::Block"*** %196 to i64
  %199 = bitcast %"class.v8::internal::torque::Block"*** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %201, align 8
  %203 = icmp ugt %"class.v8::internal::torque::Block"*** %194, %202
  %204 = ptrtoint %"class.v8::internal::torque::Block"*** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint %"class.v8::internal::torque::Block"*** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %194, i64 %210
  %212 = ptrtoint %"class.v8::internal::torque::Block"*** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast %"class.v8::internal::torque::Block"*** %211 to i8*
  %218 = bitcast %"class.v8::internal::torque::Block"*** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #14
  %219 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi %"class.v8::internal::torque::Block"*** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %211, i64 %214
  store %"class.v8::internal::torque::Block"*** %222, %"class.v8::internal::torque::Block"**** %163, align 8
  %223 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %221, i64 %210
  store %"class.v8::internal::torque::Block"*** %223, %"class.v8::internal::torque::Block"**** %166, align 8
  %224 = bitcast %"class.v8::internal::torque::Block"*** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #16
  %236 = bitcast i8* %235 to %"class.v8::internal::torque::Block"***
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %236, i64 %233
  %239 = ptrtoint %"class.v8::internal::torque::Block"*** %238 to i64
  %240 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %236, i64 %229
  %241 = ptrtoint %"class.v8::internal::torque::Block"*** %240 to i64
  %242 = ptrtoint %"class.v8::internal::torque::Block"*** %194 to i64
  %243 = ptrtoint %"class.v8::internal::torque::Block"*** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi %"class.v8::internal::torque::Block"*** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi %"class.v8::internal::torque::Block"*** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast %"class.v8::internal::torque::Block"*** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %255, i64 1
  %263 = ptrtoint %"class.v8::internal::torque::Block"*** %262 to i64
  %264 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !27

267:                                              ; preds = %254
  %268 = ptrtoint %"class.v8::internal::torque::Block"*** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi %"class.v8::internal::torque::Block"*** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi %"class.v8::internal::torque::Block"*** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi %"class.v8::internal::torque::Block"*** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi %"class.v8::internal::torque::Block"*** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast %"class.v8::internal::torque::Block"*** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %275, i64 1
  %282 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %277, i64 1
  %283 = bitcast %"class.v8::internal::torque::Block"*** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.v8::internal::torque::Block"*** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %275, i64 2
  %287 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %277, i64 2
  %288 = bitcast %"class.v8::internal::torque::Block"*** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.v8::internal::torque::Block"*** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %275, i64 3
  %292 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %277, i64 3
  %293 = bitcast %"class.v8::internal::torque::Block"*** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.v8::internal::torque::Block"*** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %275, i64 4
  %297 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %277, i64 4
  %298 = bitcast %"class.v8::internal::torque::Block"*** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.v8::internal::torque::Block"*** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %275, i64 5
  %302 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %277, i64 5
  %303 = bitcast %"class.v8::internal::torque::Block"*** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.v8::internal::torque::Block"*** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %275, i64 6
  %307 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %277, i64 6
  %308 = bitcast %"class.v8::internal::torque::Block"*** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.v8::internal::torque::Block"*** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %275, i64 7
  %312 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %277, i64 7
  %313 = bitcast %"class.v8::internal::torque::Block"*** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.v8::internal::torque::Block"*** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %275, i64 8
  %317 = ptrtoint %"class.v8::internal::torque::Block"*** %316 to i64
  %318 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %277, i64 8
  %319 = icmp eq %"class.v8::internal::torque::Block"*** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint %"class.v8::internal::torque::Block"*** %246 to i64
  %322 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi %"class.v8::internal::torque::Block"*** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq %"class.v8::internal::torque::Block"*** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast %"class.v8::internal::torque::Block"*** %324 to i8*
  call void @_ZdlPv(i8* %329) #17
  %330 = bitcast %"class.v8::internal::torque::Block"**** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %163, align 8
  %335 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %334, i64 1
  store %"class.v8::internal::torque::Block"*** %335, %"class.v8::internal::torque::Block"**** %163, align 8
  br label %581

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #16
  %345 = bitcast i8* %344 to %"class.v8::internal::torque::Block"***
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %345, i64 %170
  %348 = ptrtoint %"class.v8::internal::torque::Block"*** %347 to i64
  %349 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %345, i64 %339
  %350 = ptrtoint %"class.v8::internal::torque::Block"*** %349 to i64
  %351 = invoke i8* @_Znwm(i64 4096) #16
          to label %352 unwind label %408

352:                                              ; preds = %342
  %353 = ptrtoint i8* %351 to i64
  %354 = icmp eq i64 %170, %339
  br i1 %354, label %355, label %385

355:                                              ; preds = %352
  %356 = icmp ugt %"class.v8::internal::torque::Block"*** %347, %345
  br i1 %356, label %357, label %364

357:                                              ; preds = %355
  %358 = sub i64 %348, %346
  %359 = ashr exact i64 %358, 3
  %360 = add nsw i64 %359, 1
  %361 = sdiv i64 %360, -2
  %362 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %347, i64 %361
  %363 = ptrtoint %"class.v8::internal::torque::Block"*** %362 to i64
  br label %385

364:                                              ; preds = %355
  %365 = sub i64 %350, %346
  %366 = ashr exact i64 %365, 2
  %367 = icmp eq i64 %365, 0
  %368 = select i1 %367, i64 1, i64 %366
  %369 = icmp ugt i64 %368, 2305843009213693951
  br i1 %369, label %370, label %372

370:                                              ; preds = %364
  invoke void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
          to label %371 unwind label %562

371:                                              ; preds = %370
  unreachable

372:                                              ; preds = %364
  %373 = shl i64 %368, 3
  %374 = invoke i8* @_Znwm(i64 %373) #16
          to label %375 unwind label %562

375:                                              ; preds = %372
  %376 = lshr i64 %368, 2
  %377 = bitcast i8* %374 to %"class.v8::internal::torque::Block"***
  %378 = ptrtoint i8* %374 to i64
  %379 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %377, i64 %376
  %380 = ptrtoint %"class.v8::internal::torque::Block"*** %379 to i64
  %381 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %377, i64 %368
  %382 = ptrtoint %"class.v8::internal::torque::Block"*** %381 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #17
  %383 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %163, align 8
  %384 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %166, align 8
  br label %385

385:                                              ; preds = %375, %357, %352
  %386 = phi %"class.v8::internal::torque::Block"*** [ %180, %357 ], [ %384, %375 ], [ %180, %352 ]
  %387 = phi %"class.v8::internal::torque::Block"*** [ %179, %357 ], [ %383, %375 ], [ %179, %352 ]
  %388 = phi i64 [ %346, %357 ], [ %378, %375 ], [ %346, %352 ]
  %389 = phi i64 [ %363, %357 ], [ %380, %375 ], [ %348, %352 ]
  %390 = phi %"class.v8::internal::torque::Block"*** [ %362, %357 ], [ %379, %375 ], [ %347, %352 ]
  %391 = phi i64 [ %350, %357 ], [ %382, %375 ], [ %350, %352 ]
  %392 = bitcast %"class.v8::internal::torque::Block"*** %390 to i64*
  store i64 %353, i64* %392, align 8
  %393 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %390, i64 1
  %394 = ptrtoint %"class.v8::internal::torque::Block"*** %393 to i64
  %395 = icmp eq %"class.v8::internal::torque::Block"*** %387, %386
  br i1 %395, label %398, label %412

396:                                              ; preds = %546
  %397 = ptrtoint %"class.v8::internal::torque::Block"*** %551 to i64
  br label %398

398:                                              ; preds = %396, %385
  %399 = phi i64 [ %388, %385 ], [ %547, %396 ]
  %400 = phi i64 [ %389, %385 ], [ %397, %396 ]
  %401 = phi i64 [ %394, %385 ], [ %548, %396 ]
  %402 = phi i64 [ %391, %385 ], [ %549, %396 ]
  %403 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %404 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %403, align 8
  store i64 %399, i64* %174, align 8
  store i64 %400, i64* %167, align 8
  store i64 %401, i64* %164, align 8
  store i64 %402, i64* %172, align 8
  %405 = icmp eq %"class.v8::internal::torque::Block"*** %404, null
  br i1 %405, label %581, label %406

406:                                              ; preds = %398
  %407 = bitcast %"class.v8::internal::torque::Block"*** %404 to i8*
  tail call void @_ZdlPv(i8* %407) #17
  br label %581

408:                                              ; preds = %342
  %409 = landingpad { i8*, i32 }
          cleanup
  %410 = extractvalue { i8*, i32 } %409, 0
  %411 = extractvalue { i8*, i32 } %409, 1
  br label %571

412:                                              ; preds = %385, %546
  %413 = phi %"class.v8::internal::torque::Block"*** [ %418, %546 ], [ %387, %385 ]
  %414 = phi i64 [ %549, %546 ], [ %391, %385 ]
  %415 = phi i64 [ %548, %546 ], [ %394, %385 ]
  %416 = phi i64 [ %555, %546 ], [ %389, %385 ]
  %417 = phi i64 [ %547, %546 ], [ %388, %385 ]
  %418 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %413, i64 -1
  %419 = inttoptr i64 %416 to %"class.v8::internal::torque::Block"***
  %420 = inttoptr i64 %417 to %"class.v8::internal::torque::Block"***
  %421 = icmp eq %"class.v8::internal::torque::Block"*** %419, %420
  br i1 %421, label %422, label %546

422:                                              ; preds = %412
  %423 = inttoptr i64 %415 to %"class.v8::internal::torque::Block"***
  %424 = inttoptr i64 %414 to %"class.v8::internal::torque::Block"***
  %425 = icmp ult %"class.v8::internal::torque::Block"*** %423, %424
  br i1 %425, label %426, label %443

426:                                              ; preds = %422
  %427 = sub i64 %414, %415
  %428 = ashr exact i64 %427, 3
  %429 = add nsw i64 %428, 1
  %430 = sdiv i64 %429, 2
  %431 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %423, i64 %430
  %432 = sub i64 %415, %416
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %440, label %434

434:                                              ; preds = %426
  %435 = ashr exact i64 %432, 3
  %436 = sub nsw i64 0, %435
  %437 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %431, i64 %436
  %438 = bitcast %"class.v8::internal::torque::Block"*** %437 to i8*
  %439 = inttoptr i64 %416 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %438, i8* align 8 %439, i64 %432, i1 false) #14
  br label %440

440:                                              ; preds = %434, %426
  %441 = phi %"class.v8::internal::torque::Block"*** [ %437, %434 ], [ %431, %426 ]
  %442 = ptrtoint %"class.v8::internal::torque::Block"*** %431 to i64
  br label %546

443:                                              ; preds = %422
  %444 = sub i64 %414, %417
  %445 = ashr exact i64 %444, 2
  %446 = icmp eq i64 %444, 0
  %447 = select i1 %446, i64 1, i64 %445
  %448 = icmp ugt i64 %447, 2305843009213693951
  br i1 %448, label %449, label %451

449:                                              ; preds = %443
  invoke void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
          to label %450 unwind label %560

450:                                              ; preds = %449
  unreachable

451:                                              ; preds = %443
  %452 = shl i64 %447, 3
  %453 = invoke i8* @_Znwm(i64 %452) #16
          to label %454 unwind label %558

454:                                              ; preds = %451
  %455 = add nuw nsw i64 %447, 3
  %456 = lshr i64 %455, 2
  %457 = bitcast i8* %453 to %"class.v8::internal::torque::Block"***
  %458 = ptrtoint i8* %453 to i64
  %459 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %457, i64 %456
  %460 = ptrtoint %"class.v8::internal::torque::Block"*** %459 to i64
  %461 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %457, i64 %447
  %462 = ptrtoint %"class.v8::internal::torque::Block"*** %461 to i64
  %463 = sub i64 %415, %416
  %464 = ashr exact i64 %463, 3
  %465 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %459, i64 %464
  %466 = icmp eq i64 %463, 0
  br i1 %466, label %541, label %467

467:                                              ; preds = %454
  %468 = add i64 %463, -8
  %469 = lshr i64 %468, 3
  %470 = add nuw nsw i64 %469, 1
  %471 = and i64 %470, 7
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %488, label %473

473:                                              ; preds = %467, %473
  %474 = phi %"class.v8::internal::torque::Block"*** [ %481, %473 ], [ %459, %467 ]
  %475 = phi i64 [ %482, %473 ], [ %460, %467 ]
  %476 = phi %"class.v8::internal::torque::Block"*** [ %483, %473 ], [ %419, %467 ]
  %477 = phi i64 [ %484, %473 ], [ %471, %467 ]
  %478 = bitcast %"class.v8::internal::torque::Block"*** %476 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = inttoptr i64 %475 to i64*
  store i64 %479, i64* %480, align 8
  %481 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %474, i64 1
  %482 = ptrtoint %"class.v8::internal::torque::Block"*** %481 to i64
  %483 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %476, i64 1
  %484 = add i64 %477, -1
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %486, label %473, !llvm.loop !28

486:                                              ; preds = %473
  %487 = ptrtoint %"class.v8::internal::torque::Block"*** %481 to i64
  br label %488

488:                                              ; preds = %467, %486
  %489 = phi %"class.v8::internal::torque::Block"*** [ %459, %467 ], [ %481, %486 ]
  %490 = phi i64 [ %460, %467 ], [ %487, %486 ]
  %491 = phi %"class.v8::internal::torque::Block"*** [ %419, %467 ], [ %483, %486 ]
  %492 = icmp ult i64 %468, 56
  br i1 %492, label %539, label %493

493:                                              ; preds = %488, %493
  %494 = phi %"class.v8::internal::torque::Block"*** [ %535, %493 ], [ %489, %488 ]
  %495 = phi i64 [ %536, %493 ], [ %490, %488 ]
  %496 = phi %"class.v8::internal::torque::Block"*** [ %537, %493 ], [ %491, %488 ]
  %497 = bitcast %"class.v8::internal::torque::Block"*** %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %495 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %494, i64 1
  %501 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %496, i64 1
  %502 = bitcast %"class.v8::internal::torque::Block"*** %501 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = bitcast %"class.v8::internal::torque::Block"*** %500 to i64*
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %494, i64 2
  %506 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %496, i64 2
  %507 = bitcast %"class.v8::internal::torque::Block"*** %506 to i64*
  %508 = load i64, i64* %507, align 8
  %509 = bitcast %"class.v8::internal::torque::Block"*** %505 to i64*
  store i64 %508, i64* %509, align 8
  %510 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %494, i64 3
  %511 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %496, i64 3
  %512 = bitcast %"class.v8::internal::torque::Block"*** %511 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = bitcast %"class.v8::internal::torque::Block"*** %510 to i64*
  store i64 %513, i64* %514, align 8
  %515 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %494, i64 4
  %516 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %496, i64 4
  %517 = bitcast %"class.v8::internal::torque::Block"*** %516 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = bitcast %"class.v8::internal::torque::Block"*** %515 to i64*
  store i64 %518, i64* %519, align 8
  %520 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %494, i64 5
  %521 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %496, i64 5
  %522 = bitcast %"class.v8::internal::torque::Block"*** %521 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = bitcast %"class.v8::internal::torque::Block"*** %520 to i64*
  store i64 %523, i64* %524, align 8
  %525 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %494, i64 6
  %526 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %496, i64 6
  %527 = bitcast %"class.v8::internal::torque::Block"*** %526 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = bitcast %"class.v8::internal::torque::Block"*** %525 to i64*
  store i64 %528, i64* %529, align 8
  %530 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %494, i64 7
  %531 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %496, i64 7
  %532 = bitcast %"class.v8::internal::torque::Block"*** %531 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = bitcast %"class.v8::internal::torque::Block"*** %530 to i64*
  store i64 %533, i64* %534, align 8
  %535 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %494, i64 8
  %536 = ptrtoint %"class.v8::internal::torque::Block"*** %535 to i64
  %537 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %496, i64 8
  %538 = icmp eq %"class.v8::internal::torque::Block"*** %465, %535
  br i1 %538, label %539, label %493

539:                                              ; preds = %493, %488
  %540 = ptrtoint %"class.v8::internal::torque::Block"*** %465 to i64
  br label %541

541:                                              ; preds = %539, %454
  %542 = phi i64 [ %540, %539 ], [ %460, %454 ]
  %543 = icmp eq i64 %416, 0
  br i1 %543, label %546, label %544

544:                                              ; preds = %541
  %545 = inttoptr i64 %416 to i8*
  tail call void @_ZdlPv(i8* %545) #17
  br label %546

546:                                              ; preds = %412, %440, %541, %544
  %547 = phi i64 [ %417, %440 ], [ %458, %541 ], [ %458, %544 ], [ %417, %412 ]
  %548 = phi i64 [ %442, %440 ], [ %542, %541 ], [ %542, %544 ], [ %415, %412 ]
  %549 = phi i64 [ %414, %440 ], [ %462, %541 ], [ %462, %544 ], [ %414, %412 ]
  %550 = phi %"class.v8::internal::torque::Block"*** [ %441, %440 ], [ %459, %541 ], [ %459, %544 ], [ %419, %412 ]
  %551 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %550, i64 -1
  %552 = bitcast %"class.v8::internal::torque::Block"*** %418 to i64*
  %553 = load i64, i64* %552, align 8
  %554 = bitcast %"class.v8::internal::torque::Block"*** %551 to i64*
  store i64 %553, i64* %554, align 8
  %555 = ptrtoint %"class.v8::internal::torque::Block"*** %551 to i64
  %556 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %166, align 8
  %557 = icmp eq %"class.v8::internal::torque::Block"*** %418, %556
  br i1 %557, label %396, label %412

558:                                              ; preds = %451
  %559 = landingpad { i8*, i32 }
          cleanup
  br label %566

560:                                              ; preds = %449
  %561 = landingpad { i8*, i32 }
          cleanup
  br label %566

562:                                              ; preds = %372, %370
  %563 = landingpad { i8*, i32 }
          cleanup
  %564 = extractvalue { i8*, i32 } %563, 0
  %565 = extractvalue { i8*, i32 } %563, 1
  tail call void @_ZdlPv(i8* nonnull %351) #17
  br label %571

566:                                              ; preds = %558, %560
  %567 = phi { i8*, i32 } [ %559, %558 ], [ %561, %560 ]
  %568 = extractvalue { i8*, i32 } %567, 0
  %569 = extractvalue { i8*, i32 } %567, 1
  %570 = icmp eq i64 %417, 0
  br i1 %570, label %576, label %571

571:                                              ; preds = %562, %408, %566
  %572 = phi i32 [ %569, %566 ], [ %565, %562 ], [ %411, %408 ]
  %573 = phi i8* [ %568, %566 ], [ %564, %562 ], [ %410, %408 ]
  %574 = phi i64 [ %417, %566 ], [ %346, %562 ], [ %346, %408 ]
  %575 = inttoptr i64 %574 to i8*
  tail call void @_ZdlPv(i8* %575) #17
  br label %576

576:                                              ; preds = %566, %571
  %577 = phi i32 [ %569, %566 ], [ %572, %571 ]
  %578 = phi i8* [ %568, %566 ], [ %573, %571 ]
  %579 = insertvalue { i8*, i32 } undef, i8* %578, 0
  %580 = insertvalue { i8*, i32 } %579, i32 %577, 1
  resume { i8*, i32 } %580

581:                                              ; preds = %406, %398, %332, %183, %157
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal6torque5BlockENS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::torque::Block"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::torque::Block"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::torque::Block"*** %6 to i64
  %9 = bitcast %"class.v8::internal::torque::Block"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::torque::Block"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::torque::Block"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::torque::Block"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::torque::Block"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::torque::Block"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::torque::Block"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #14
  %31 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::torque::Block"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %23, i64 %26
  store %"class.v8::internal::torque::Block"*** %34, %"class.v8::internal::torque::Block"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %33, i64 %22
  store %"class.v8::internal::torque::Block"*** %35, %"class.v8::internal::torque::Block"**** %11, align 8
  %36 = bitcast %"class.v8::internal::torque::Block"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::torque::Block"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to %"class.v8::internal::torque::Block"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %50, i64 %47
  %53 = ptrtoint %"class.v8::internal::torque::Block"*** %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %50, i64 %43
  %55 = ptrtoint %"class.v8::internal::torque::Block"*** %54 to i64
  %56 = ptrtoint %"class.v8::internal::torque::Block"*** %12 to i64
  %57 = ptrtoint %"class.v8::internal::torque::Block"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.v8::internal::torque::Block"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.v8::internal::torque::Block"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.v8::internal::torque::Block"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %69, i64 1
  %77 = ptrtoint %"class.v8::internal::torque::Block"*** %76 to i64
  %78 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !29

81:                                               ; preds = %68
  %82 = ptrtoint %"class.v8::internal::torque::Block"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.v8::internal::torque::Block"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.v8::internal::torque::Block"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.v8::internal::torque::Block"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.v8::internal::torque::Block"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.v8::internal::torque::Block"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %89, i64 1
  %96 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 1
  %97 = bitcast %"class.v8::internal::torque::Block"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.v8::internal::torque::Block"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %89, i64 2
  %101 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 2
  %102 = bitcast %"class.v8::internal::torque::Block"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.v8::internal::torque::Block"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %89, i64 3
  %106 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 3
  %107 = bitcast %"class.v8::internal::torque::Block"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.v8::internal::torque::Block"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %89, i64 4
  %111 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 4
  %112 = bitcast %"class.v8::internal::torque::Block"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.v8::internal::torque::Block"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %89, i64 5
  %116 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 5
  %117 = bitcast %"class.v8::internal::torque::Block"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.v8::internal::torque::Block"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %89, i64 6
  %121 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 6
  %122 = bitcast %"class.v8::internal::torque::Block"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::torque::Block"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %89, i64 7
  %126 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 7
  %127 = bitcast %"class.v8::internal::torque::Block"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::torque::Block"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %89, i64 8
  %131 = ptrtoint %"class.v8::internal::torque::Block"*** %130 to i64
  %132 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %91, i64 8
  %133 = icmp eq %"class.v8::internal::torque::Block"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.v8::internal::torque::Block"*** %60 to i64
  %136 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %13, align 8
  br label %137

137:                                              ; preds = %134, %46
  %138 = phi %"class.v8::internal::torque::Block"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.v8::internal::torque::Block"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.v8::internal::torque::Block"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.v8::internal::torque::Block"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.v8::internal::torque::Block"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  %146 = bitcast %"class.v8::internal::torque::Block"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.v8::internal::torque::Block"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %3, align 8
  %153 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %152, i64 1
  store %"class.v8::internal::torque::Block"*** %153, %"class.v8::internal::torque::Block"**** %3, align 8
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal6torque5BlockENS_9allocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::torque::Block"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::torque::Block"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::torque::Block"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::torque::Block"*** %11, %13
  %15 = bitcast %"class.v8::internal::torque::Block"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::torque::Block"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::torque::Block"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::torque::Block"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::torque::Block"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::torque::Block"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::torque::Block"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::torque::Block"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::torque::Block"*** %36, %"class.v8::internal::torque::Block"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %35, i64 %22
  store %"class.v8::internal::torque::Block"*** %37, %"class.v8::internal::torque::Block"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to %"class.v8::internal::torque::Block"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %51, i64 %48
  %54 = ptrtoint %"class.v8::internal::torque::Block"*** %53 to i64
  %55 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %51, i64 %43
  %56 = ptrtoint %"class.v8::internal::torque::Block"*** %55 to i64
  %57 = ptrtoint %"class.v8::internal::torque::Block"*** %4 to i64
  %58 = ptrtoint %"class.v8::internal::torque::Block"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.v8::internal::torque::Block"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.v8::internal::torque::Block"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.v8::internal::torque::Block"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %70, i64 1
  %78 = ptrtoint %"class.v8::internal::torque::Block"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !30

82:                                               ; preds = %69
  %83 = ptrtoint %"class.v8::internal::torque::Block"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.v8::internal::torque::Block"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.v8::internal::torque::Block"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.v8::internal::torque::Block"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.v8::internal::torque::Block"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.v8::internal::torque::Block"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %90, i64 1
  %97 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %92, i64 1
  %98 = bitcast %"class.v8::internal::torque::Block"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.v8::internal::torque::Block"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %90, i64 2
  %102 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %92, i64 2
  %103 = bitcast %"class.v8::internal::torque::Block"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.v8::internal::torque::Block"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %90, i64 3
  %107 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %92, i64 3
  %108 = bitcast %"class.v8::internal::torque::Block"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::torque::Block"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %90, i64 4
  %112 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %92, i64 4
  %113 = bitcast %"class.v8::internal::torque::Block"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.v8::internal::torque::Block"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %90, i64 5
  %117 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %92, i64 5
  %118 = bitcast %"class.v8::internal::torque::Block"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.v8::internal::torque::Block"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %90, i64 6
  %122 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %92, i64 6
  %123 = bitcast %"class.v8::internal::torque::Block"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.v8::internal::torque::Block"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %90, i64 7
  %127 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %92, i64 7
  %128 = bitcast %"class.v8::internal::torque::Block"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::torque::Block"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %90, i64 8
  %132 = ptrtoint %"class.v8::internal::torque::Block"*** %131 to i64
  %133 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %92, i64 8
  %134 = icmp eq %"class.v8::internal::torque::Block"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.v8::internal::torque::Block"*** %61 to i64
  %137 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %5, align 8
  br label %138

138:                                              ; preds = %135, %46
  %139 = phi %"class.v8::internal::torque::Block"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.v8::internal::torque::Block"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.v8::internal::torque::Block"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.v8::internal::torque::Block"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.v8::internal::torque::Block"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  %146 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.v8::internal::torque::Block"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %148, i64 -1
  %150 = bitcast %"class.v8::internal::torque::Block"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.v8::internal::torque::Block"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.v8::internal::torque::Block"***, %"class.v8::internal::torque::Block"**** %3, align 8
  %154 = getelementptr inbounds %"class.v8::internal::torque::Block"**, %"class.v8::internal::torque::Block"*** %153, i64 -1
  store %"class.v8::internal::torque::Block"*** %154, %"class.v8::internal::torque::Block"**** %3, align 8
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.157"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.153"*, %"class.v8::internal::torque::Block"** dereferenceable(8), %"class.v8::internal::torque::Block"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %1, align 8
  %5 = ptrtoint %"class.v8::internal::torque::Block"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %81, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !20
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.157"* %37, null
  br i1 %38, label %81, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br i1 %24, label %41, label %63

41:                                               ; preds = %39, %58
  %42 = phi %"struct.std::__1::__hash_node_base.157"* [ %44, %58 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.157"* %44, null
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.157"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = icmp ult i64 %49, %20
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %20
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %58, label %81

58:                                               ; preds = %55, %46
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %44, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.157"* %59 to %"class.v8::internal::torque::Block"**
  %61 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %60, align 8
  %62 = icmp eq %"class.v8::internal::torque::Block"* %61, %4
  br i1 %62, label %172, label %41

63:                                               ; preds = %39, %76
  %64 = phi %"struct.std::__1::__hash_node_base.157"* [ %66, %76 ], [ %37, %39 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.157"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %66, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.157"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %18
  %73 = and i64 %71, %40
  %74 = icmp eq i64 %73, %33
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %66, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.157"* %77 to %"class.v8::internal::torque::Block"**
  %79 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %78, align 8
  %80 = icmp eq %"class.v8::internal::torque::Block"* %79, %4
  br i1 %80, label %172, label %63

81:                                               ; preds = %68, %63, %55, %41, %32, %3
  %82 = phi i64 [ %33, %32 ], [ undef, %3 ], [ %33, %41 ], [ %33, %55 ], [ %33, %63 ], [ %33, %68 ]
  %83 = tail call i8* @_Znwm(i64 24) #16, !noalias !31
  %84 = getelementptr inbounds i8, i8* %83, i64 16
  %85 = bitcast %"class.v8::internal::torque::Block"** %2 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !31
  %87 = bitcast i8* %84 to i64*
  store i64 %86, i64* %87, align 8, !noalias !31
  %88 = getelementptr inbounds i8, i8* %83, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %18, i64* %89, align 8, !noalias !31
  %90 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base.157"**
  store %"struct.std::__1::__hash_node_base.157"* null, %"struct.std::__1::__hash_node_base.157"** %90, align 8, !noalias !31
  %91 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %20 to float
  %96 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %21, %99
  br i1 %100, label %101, label %127

101:                                              ; preds = %81
  %102 = shl i64 %20, 1
  %103 = icmp ult i64 %20, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !20
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #14
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  invoke void @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.153"* %0, i64 %113)
          to label %114 unwind label %125

114:                                              ; preds = %101
  %115 = load i64, i64* %19, align 8
  %116 = tail call i64 @llvm.ctpop.i64(i64 %115) #14, !range !20
  %117 = icmp ugt i64 %116, 1
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = add i64 %115, -1
  %120 = and i64 %119, %18
  br label %127

121:                                              ; preds = %114
  %122 = icmp ult i64 %18, %115
  br i1 %122, label %127, label %123

123:                                              ; preds = %121
  %124 = urem i64 %18, %115
  br label %127

125:                                              ; preds = %101
  %126 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZdlPv(i8* nonnull %83) #17
  resume { i8*, i32 } %126

127:                                              ; preds = %123, %121, %118, %81
  %128 = phi i64 [ %82, %81 ], [ %120, %118 ], [ %124, %123 ], [ %18, %121 ]
  %129 = phi i64 [ %20, %81 ], [ %115, %118 ], [ %115, %123 ], [ %115, %121 ]
  %130 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %131, i64 %128
  %133 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.157"* %133, null
  br i1 %134, label %135, label %161

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 1, i32 0, i32 0
  %137 = bitcast %"struct.std::__1::__hash_node_base.157"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %83 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.157"* %136 to i8**
  store i8* %83, i8** %140, align 8
  store %"struct.std::__1::__hash_node_base.157"* %136, %"struct.std::__1::__hash_node_base.157"** %132, align 8
  %141 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %90, align 8
  %142 = icmp eq %"struct.std::__1::__hash_node_base.157"* %141, null
  br i1 %142, label %168, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %141, i64 1
  %145 = bitcast %"struct.std::__1::__hash_node_base.157"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = tail call i64 @llvm.ctpop.i64(i64 %129) #14, !range !20
  %148 = icmp ugt i64 %147, 1
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = add i64 %129, -1
  %151 = and i64 %146, %150
  br label %156

152:                                              ; preds = %143
  %153 = icmp ult i64 %146, %129
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = urem i64 %146, %129
  br label %156

156:                                              ; preds = %149, %152, %154
  %157 = phi i64 [ %151, %149 ], [ %155, %154 ], [ %146, %152 ]
  %158 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %130, align 8
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %158, i64 %157
  %160 = bitcast %"struct.std::__1::__hash_node_base.157"** %159 to i8**
  br label %166

161:                                              ; preds = %127
  %162 = bitcast %"struct.std::__1::__hash_node_base.157"* %133 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast i8* %83 to i64*
  store i64 %163, i64* %164, align 8
  %165 = bitcast %"struct.std::__1::__hash_node_base.157"* %133 to i8**
  br label %166

166:                                              ; preds = %156, %161
  %167 = phi i8** [ %165, %161 ], [ %160, %156 ]
  store i8* %83, i8** %167, align 8
  br label %168

168:                                              ; preds = %166, %135
  %169 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base.157"*
  %170 = load i64, i64* %91, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %91, align 8
  br label %172

172:                                              ; preds = %76, %58, %168
  %173 = phi i8 [ 1, %168 ], [ 0, %58 ], [ 0, %76 ]
  %174 = phi %"struct.std::__1::__hash_node_base.157"* [ %169, %168 ], [ %44, %58 ], [ %66, %76 ]
  %175 = insertvalue { %"struct.std::__1::__hash_node_base.157"*, i8 } undef, %"struct.std::__1::__hash_node_base.157"* %174, 0
  %176 = insertvalue { %"struct.std::__1::__hash_node_base.157"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::__hash_node_base.157"*, i8 } %176
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.153"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !20
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1)
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.153"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !20
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !20
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29)
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.153"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.153"*, i64) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.153"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.157"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.157"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.159", %"class.std::__1::__bucket_list_deallocator.159"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.157"* null, %"struct.std::__1::__hash_node_base.157"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !34

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.157"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.157"* null, %"struct.std::__1::__hash_node_base.157"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.157"* null, %"struct.std::__1::__hash_node_base.157"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.157"* null, %"struct.std::__1::__hash_node_base.157"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.157"* null, %"struct.std::__1::__hash_node_base.157"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.157"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !20
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.157"* %36, %"struct.std::__1::__hash_node_base.157"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.157"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.157"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.157"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.157"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.157"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.157"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.157"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.157"* %103 to %"class.v8::internal::torque::Block"**
  %105 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %130, align 8
  %106 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %104, align 8
  %107 = icmp eq %"class.v8::internal::torque::Block"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.157"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.157"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.157"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.157"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.157"* %80, %"struct.std::__1::__hash_node_base.157"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.157"* %82, %"struct.std::__1::__hash_node_base.157"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.157"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.157"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.157"* %129 to %"class.v8::internal::torque::Block"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.157"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.157"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.157"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.157"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.157"* %146 to %"class.v8::internal::torque::Block"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.157"* %134, %"struct.std::__1::__hash_node_base.157"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.157"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.157"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.157"* %155 to %"class.v8::internal::torque::Block"**
  %157 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %147, align 8
  %158 = load %"class.v8::internal::torque::Block"*, %"class.v8::internal::torque::Block"** %156, align 8
  %159 = icmp eq %"class.v8::internal::torque::Block"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.157"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.157"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.157"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.157"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.157"* %132, %"struct.std::__1::__hash_node_base.157"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.157"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.157"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.157"** null, %"struct.std::__1::__hash_node_base.157"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.157"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.157"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #17
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.159", %"class.std::__1::__bucket_list_deallocator.159"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  %5 = getelementptr inbounds %"class.std::__1::basic_ios.base", %"class.std::__1::basic_ios.base"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast %"class.std::__1::basic_stringstream"* %0 to %"class.std::__1::basic_iostream"*
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %9 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %10 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %13 = inttoptr i64 %9 to i8*
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = bitcast i8* %18 to i64*
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  %21 = load i8*, i8** %12, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %8 to i8*
  invoke void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27)
          to label %28 unwind label %59

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %8, i64 0, i32 0
  %31 = getelementptr inbounds i8, i8* %25, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %10, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %17, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %6, align 8
  invoke void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %30)
          to label %54 unwind label %63

54:                                               ; preds = %28
  %55 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %57 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %58 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false)
  store i32 %1, i32* %57, align 8
  ret void

59:                                               ; preds = %2
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  %62 = extractvalue { i8*, i32 } %60, 1
  br label %67

63:                                               ; preds = %28
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  %66 = extractvalue { i8*, i32 } %64, 1
  tail call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* %7, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #14
  br label %67

67:                                               ; preds = %63, %59
  %68 = phi i8* [ %65, %63 ], [ %61, %59 ]
  %69 = phi i32 [ %66, %63 ], [ %62, %59 ]
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %4) #14
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  resume { i8*, i32 } %71
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"*) unnamed_addr #9 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  invoke void @_ZNK2v88internal6torque14MessageBuilder6ReportEv(%"class.v8::internal::torque::MessageBuilder"* %0)
          to label %2 unwind label %38

2:                                                ; preds = %1
  %3 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.404", %"class.std::__1::vector.404"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"struct.v8::internal::torque::TorqueMessage"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %13, i64 -1
  %15 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.404"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"struct.v8::internal::torque::TorqueMessage"* %5, %"struct.v8::internal::torque::TorqueMessage"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %2, %27
  %30 = bitcast %"class.v8::internal::torque::MessageBuilder"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #17
  br label %37

37:                                               ; preds = %29, %34
  ret void

38:                                               ; preds = %1
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1
  tail call void @_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.404"* %41) #14
  %42 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal6torque13TorqueMessageD2Ev(%"struct.v8::internal::torque::TorqueMessage"* %42) #14
  tail call void @__clang_call_terminate(i8* %40) #18
  unreachable
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque8ToStringIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__1::basic_stringstream", align 8
  %4 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #14
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %3, i32 24)
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_ostream.base"* %5 to %"class.std::__1::basic_ostream"*
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* %17, i64 %18)
          to label %20 unwind label %48

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %21)
          to label %22 unwind label %50

22:                                               ; preds = %20
  %23 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %24 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %23, i64* %24, align 8
  %25 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %26 = inttoptr i64 %23 to i8*
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = bitcast i8* %30 to i64*
  store i64 %25, i64* %31, align 8
  %32 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostream.base"* %5 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %22
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %22, %40
  %44 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %21, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %44) #14
  %45 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %45, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #14
  %46 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %47 = bitcast %"class.std::__1::basic_ios.base"* %46 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %47) #14
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #14
  ret void

48:                                               ; preds = %2
  %49 = landingpad { i8*, i32 }
          cleanup
  br label %52

50:                                               ; preds = %20
  %51 = landingpad { i8*, i32 }
          cleanup
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi { i8*, i32 } [ %51, %50 ], [ %49, %48 ]
  %54 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %55 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %54, i64* %55, align 8
  %56 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %57 = inttoptr i64 %54 to i8*
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %4, i64 %60
  %62 = bitcast i8* %61 to i64*
  store i64 %56, i64* %62, align 8
  %63 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %64 = bitcast %"class.std::__1::basic_ostream.base"* %5 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %65, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #17
  br label %75

75:                                               ; preds = %52, %72
  %76 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %65, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %76) #14
  %77 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %77, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #14
  %78 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %79 = bitcast %"class.std::__1::basic_ios.base"* %78 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %79) #14
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #14
  resume { i8*, i32 } %53
}

declare void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #3

declare void @_ZNK2v88internal6torque14MessageBuilder6ReportEv(%"class.v8::internal::torque::MessageBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.404"*) unnamed_addr #9 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::__1::vector.404", %"class.std::__1::vector.404"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %2, align 8
  %4 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.404", %"class.std::__1::vector.404"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %7, align 8
  %9 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %8, %3
  br i1 %9, label %25, label %10

10:                                               ; preds = %5, %20
  %11 = phi %"struct.v8::internal::torque::TorqueMessage"* [ %12, %20 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %11, i64 -1
  %13 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %17, %10
  %21 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %12, %3
  br i1 %21, label %22, label %10

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.404"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %5
  %26 = phi i8* [ %24, %22 ], [ %6, %5 ]
  store %"struct.v8::internal::torque::TorqueMessage"* %3, %"struct.v8::internal::torque::TorqueMessage"** %7, align 8
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque13TorqueMessageD2Ev(%"struct.v8::internal::torque::TorqueMessage"*) unnamed_addr #4 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #17
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6torque11InstructionENS_9allocatorIS4_EEE12__move_rangeEPS4_S8_S8_(%"class.std::__1::vector.18"*, %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"*) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::torque::Instruction"*, %"class.v8::internal::torque::Instruction"** %5, align 8
  %7 = ptrtoint %"class.v8::internal::torque::Instruction"* %6 to i64
  %8 = ptrtoint %"class.v8::internal::torque::Instruction"* %3 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 4
  %11 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %1, i64 %10
  %12 = bitcast %"class.v8::internal::torque::Instruction"** %5 to i64*
  %13 = icmp ult %"class.v8::internal::torque::Instruction"* %11, %2
  br i1 %13, label %66, label %16

14:                                               ; preds = %81
  %15 = ptrtoint %"class.v8::internal::torque::Instruction"* %84 to i64
  br label %16

16:                                               ; preds = %14, %4
  %17 = phi i64 [ %15, %14 ], [ %7, %4 ]
  store i64 %17, i64* %12, align 8
  %18 = icmp eq i64 %9, 0
  br i1 %18, label %65, label %19

19:                                               ; preds = %16, %63
  %20 = phi %"class.v8::internal::torque::Instruction"* [ %23, %63 ], [ %6, %16 ]
  %21 = phi %"class.v8::internal::torque::Instruction"* [ %22, %63 ], [ %11, %16 ]
  %22 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %21, i64 -1
  %23 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %20, i64 -1
  %24 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %22, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %38

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %20, i64 -1, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %21, i64 -1, i32 1, i32 0, i32 0, i32 0
  %33 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %32, align 8
  %34 = bitcast %"struct.v8::internal::torque::InstructionBase"* %31 to void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)***
  %35 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)** %35, i64 1
  %37 = load void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"*)** %36, align 8
  invoke void %37(%"struct.v8::internal::torque::InstructionBase"* %31, %"struct.v8::internal::torque::InstructionBase"* dereferenceable(32) %33)
          to label %63 unwind label %60

38:                                               ; preds = %19
  store i32 %27, i32* %24, align 8
  %39 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %21, i64 -1, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %39, align 8
  %41 = bitcast %"struct.v8::internal::torque::InstructionBase"* %40 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %42 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %41, align 8
  %43 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %42, align 8
  %44 = invoke %"struct.v8::internal::torque::InstructionBase"* %43(%"struct.v8::internal::torque::InstructionBase"* %40)
          to label %45 unwind label %57

45:                                               ; preds = %38
  %46 = ptrtoint %"struct.v8::internal::torque::InstructionBase"* %44 to i64
  %47 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %20, i64 -1, i32 1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  store i64 %46, i64* %50, align 8
  %51 = icmp eq %"struct.v8::internal::torque::InstructionBase"* %49, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %45
  %53 = bitcast %"struct.v8::internal::torque::InstructionBase"* %49 to void (%"struct.v8::internal::torque::InstructionBase"*)***
  %54 = load void (%"struct.v8::internal::torque::InstructionBase"*)**, void (%"struct.v8::internal::torque::InstructionBase"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %54, i64 3
  %56 = load void (%"struct.v8::internal::torque::InstructionBase"*)*, void (%"struct.v8::internal::torque::InstructionBase"*)** %55, align 8
  tail call void %56(%"struct.v8::internal::torque::InstructionBase"* nonnull %49) #14
  br label %63

57:                                               ; preds = %38
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  tail call void @__clang_call_terminate(i8* %59) #18
  unreachable

60:                                               ; preds = %29
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  tail call void @__clang_call_terminate(i8* %62) #18
  unreachable

63:                                               ; preds = %52, %45, %29
  %64 = icmp eq %"class.v8::internal::torque::Instruction"* %22, %1
  br i1 %64, label %65, label %19

65:                                               ; preds = %63, %16
  ret void

66:                                               ; preds = %4, %81
  %67 = phi %"class.v8::internal::torque::Instruction"* [ %83, %81 ], [ %11, %4 ]
  %68 = phi %"class.v8::internal::torque::Instruction"* [ %84, %81 ], [ %6, %4 ]
  %69 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %68, i64 0, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %67, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %69, align 8
  %72 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %67, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"struct.v8::internal::torque::InstructionBase"*, %"struct.v8::internal::torque::InstructionBase"** %72, align 8
  %74 = bitcast %"struct.v8::internal::torque::InstructionBase"* %73 to %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)***
  %75 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)**, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*** %74, align 8
  %76 = load %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)*, %"struct.v8::internal::torque::InstructionBase"* (%"struct.v8::internal::torque::InstructionBase"*)** %75, align 8
  %77 = invoke %"struct.v8::internal::torque::InstructionBase"* %76(%"struct.v8::internal::torque::InstructionBase"* %73)
          to label %81 unwind label %78

78:                                               ; preds = %66
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  tail call void @__clang_call_terminate(i8* %80) #18
  unreachable

81:                                               ; preds = %66
  %82 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.v8::internal::torque::InstructionBase"* %77, %"struct.v8::internal::torque::InstructionBase"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %67, i64 1
  %84 = getelementptr inbounds %"class.v8::internal::torque::Instruction", %"class.v8::internal::torque::Instruction"* %68, i64 1
  %85 = icmp ult %"class.v8::internal::torque::Instruction"* %83, %2
  br i1 %85, label %66, label %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.393"* noalias sret, %"class.std::__1::__hash_table.153"*, %"struct.std::__1::__hash_node_base.157"*) local_unnamed_addr #9 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.157"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #14, !range !20
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.157"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.157"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.164"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.157"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.157"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.157"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.157"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.157"* null, %"struct.std::__1::__hash_node_base.157"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.157"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.157"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157", %"struct.std::__1::__hash_node_base.157"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.157"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.157"**, %"struct.std::__1::__hash_node_base.157"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.157"*, %"struct.std::__1::__hash_node_base.157"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.157"* %25, %"struct.std::__1::__hash_node_base.157"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.157"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.157"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.157"* null, %"struct.std::__1::__hash_node_base.157"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.153", %"class.std::__1::__hash_table.153"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.157"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.393"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.393"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.167"** %98 to %"class.std::__1::__compressed_pair.164"**
  store %"class.std::__1::__compressed_pair.164"* %30, %"class.std::__1::__compressed_pair.164"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.393"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { inlinehint noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn }
attributes #16 = { builtin }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2v88internal6torque9UnionType8FromTypeEPKNS1_4TypeE: argument 0"}
!5 = distinct !{!5, !"_ZN2v88internal6torque9UnionType8FromTypeEPKNS1_4TypeE"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN2v88internal6torqueL7MessageIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZN2v88internal6torqueL7MessageIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_"}
!9 = distinct !{!9, !10, !"_ZN2v88internal6torque5ErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN2v88internal6torque5ErrorIJNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeIPKN2v88internal6torque4TypeENS3_8TypeLessENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!20 = !{i64 0, i64 65}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSA_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__112__hash_tableIN2v88internal6torque9UnionTypeENS1_4base4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSA_ISH_EEEEEEmOT_DpOT0_"}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = distinct !{!26, !25}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !25}
!29 = distinct !{!29, !25}
!30 = distinct !{!30, !25}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__112__hash_tableIPN2v88internal6torque5BlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEmOT_DpOT0_"}
!34 = distinct !{!34, !25}
