; ModuleID = '../../third_party/boringssl/src/crypto/x509/x509_v3.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x509_v3.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stack_st_X509_EXTENSION = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.X509_extension_st = type { %struct.asn1_object_st*, i32, %struct.asn1_string_st* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }

@.str = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/x509/x509_v3.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509v3_get_ext_count(%struct.stack_st_X509_EXTENSION*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.stack_st_X509_EXTENSION* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.stack_st_X509_EXTENSION* %0 to %struct.stack_st*
  %5 = tail call i64 @sk_num(%struct.stack_st* nonnull %4) #4
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509v3_get_ext_by_NID(%struct.stack_st_X509_EXTENSION*, i32, i32) local_unnamed_addr #0 {
  %4 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 %1) #4
  %5 = icmp eq %struct.asn1_object_st* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  %7 = icmp eq %struct.stack_st_X509_EXTENSION* %0, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %6
  %9 = icmp sgt i32 %2, -1
  %10 = select i1 %9, i32 %2, i32 -1
  %11 = bitcast %struct.stack_st_X509_EXTENSION* %0 to %struct.stack_st*
  %12 = tail call i64 @sk_num(%struct.stack_st* nonnull %11) #4
  %13 = trunc i64 %12 to i32
  br label %14

14:                                               ; preds = %18, %8
  %15 = phi i32 [ %10, %8 ], [ %16, %18 ]
  %16 = add nsw i32 %15, 1
  %17 = icmp slt i32 %16, %13
  br i1 %17, label %18, label %25

18:                                               ; preds = %14
  %19 = zext i32 %16 to i64
  %20 = tail call i8* @sk_value(%struct.stack_st* nonnull %11, i64 %19) #4
  %21 = bitcast i8* %20 to %struct.asn1_object_st**
  %22 = load %struct.asn1_object_st*, %struct.asn1_object_st** %21, align 8
  %23 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %22, %struct.asn1_object_st* nonnull %4) #4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %14

25:                                               ; preds = %18, %14, %6, %3
  %26 = phi i32 [ -2, %3 ], [ -1, %6 ], [ %16, %18 ], [ -1, %14 ]
  ret i32 %26
}

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509v3_get_ext_by_OBJ(%struct.stack_st_X509_EXTENSION*, %struct.asn1_object_st*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.stack_st_X509_EXTENSION* %0, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i32 %2, -1
  %7 = select i1 %6, i32 %2, i32 -1
  %8 = bitcast %struct.stack_st_X509_EXTENSION* %0 to %struct.stack_st*
  %9 = tail call i64 @sk_num(%struct.stack_st* nonnull %8) #4
  %10 = trunc i64 %9 to i32
  br label %11

11:                                               ; preds = %15, %5
  %12 = phi i32 [ %7, %5 ], [ %13, %15 ]
  %13 = add nsw i32 %12, 1
  %14 = icmp slt i32 %13, %10
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  %16 = zext i32 %13 to i64
  %17 = tail call i8* @sk_value(%struct.stack_st* nonnull %8, i64 %16) #4
  %18 = bitcast i8* %17 to %struct.asn1_object_st**
  %19 = load %struct.asn1_object_st*, %struct.asn1_object_st** %18, align 8
  %20 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %19, %struct.asn1_object_st* %1) #4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %11

22:                                               ; preds = %11, %15, %3
  %23 = phi i32 [ -1, %3 ], [ -1, %11 ], [ %13, %15 ]
  ret i32 %23
}

declare i32 @OBJ_cmp(%struct.asn1_object_st*, %struct.asn1_object_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509v3_get_ext_by_critical(%struct.stack_st_X509_EXTENSION*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.stack_st_X509_EXTENSION* %0, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i32 %2, -1
  %7 = select i1 %6, i32 %2, i32 -1
  %8 = bitcast %struct.stack_st_X509_EXTENSION* %0 to %struct.stack_st*
  %9 = tail call i64 @sk_num(%struct.stack_st* nonnull %8) #4
  %10 = trunc i64 %9 to i32
  %11 = icmp ne i32 %1, 0
  br label %12

12:                                               ; preds = %16, %5
  %13 = phi i32 [ %7, %5 ], [ %14, %16 ]
  %14 = add nsw i32 %13, 1
  %15 = icmp slt i32 %14, %10
  br i1 %15, label %16, label %24

16:                                               ; preds = %12
  %17 = zext i32 %14 to i64
  %18 = tail call i8* @sk_value(%struct.stack_st* nonnull %8, i64 %17) #4
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 0
  %23 = xor i1 %11, %22
  br i1 %23, label %12, label %24

24:                                               ; preds = %12, %16, %3
  %25 = phi i32 [ -1, %3 ], [ -1, %12 ], [ %14, %16 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_extension_st* @X509v3_get_ext(%struct.stack_st_X509_EXTENSION*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.stack_st_X509_EXTENSION* %0, null
  %4 = icmp slt i32 %1, 0
  %5 = or i1 %3, %4
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.stack_st_X509_EXTENSION* %0 to %struct.stack_st*
  %8 = tail call i64 @sk_num(%struct.stack_st* %7) #4
  %9 = sext i32 %1 to i64
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = tail call i8* @sk_value(%struct.stack_st* %7, i64 %9) #4
  %13 = bitcast i8* %12 to %struct.X509_extension_st*
  br label %14

14:                                               ; preds = %2, %6, %11
  %15 = phi %struct.X509_extension_st* [ %13, %11 ], [ null, %6 ], [ null, %2 ]
  ret %struct.X509_extension_st* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_extension_st* @X509v3_delete_ext(%struct.stack_st_X509_EXTENSION*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.stack_st_X509_EXTENSION* %0, null
  %4 = icmp slt i32 %1, 0
  %5 = or i1 %3, %4
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.stack_st_X509_EXTENSION* %0 to %struct.stack_st*
  %8 = tail call i64 @sk_num(%struct.stack_st* %7) #4
  %9 = sext i32 %1 to i64
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = tail call i8* @sk_delete(%struct.stack_st* %7, i64 %9) #4
  %13 = bitcast i8* %12 to %struct.X509_extension_st*
  br label %14

14:                                               ; preds = %2, %6, %11
  %15 = phi %struct.X509_extension_st* [ %13, %11 ], [ null, %6 ], [ null, %2 ]
  ret %struct.X509_extension_st* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509_EXTENSION* @X509v3_add_ext(%struct.stack_st_X509_EXTENSION**, %struct.X509_extension_st*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.stack_st_X509_EXTENSION** %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @ERR_put_error(i32 11, i32 0, i32 67, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 149) #4
  br label %36

6:                                                ; preds = %3
  %7 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %0, align 8
  %8 = icmp eq %struct.stack_st_X509_EXTENSION* %7, null
  br i1 %8, label %9, label %14

9:                                                ; preds = %6
  %10 = tail call %struct.stack_st* @sk_new_null() #4
  %11 = bitcast %struct.stack_st* %10 to %struct.stack_st_X509_EXTENSION*
  %12 = icmp eq %struct.stack_st* %10, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 173) #4
  br label %36

14:                                               ; preds = %6, %9
  %15 = phi %struct.stack_st_X509_EXTENSION* [ %11, %9 ], [ %7, %6 ]
  %16 = bitcast %struct.stack_st_X509_EXTENSION* %15 to %struct.stack_st*
  %17 = tail call i64 @sk_num(%struct.stack_st* %16) #4
  %18 = trunc i64 %17 to i32
  %19 = tail call %struct.X509_extension_st* @X509_EXTENSION_dup(%struct.X509_extension_st* %1) #4
  %20 = icmp eq %struct.X509_extension_st* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %14
  %22 = icmp slt i32 %18, %2
  %23 = icmp slt i32 %2, 0
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 %18, i32 %2
  %26 = sext i32 %25 to i64
  %27 = bitcast %struct.X509_extension_st* %19 to i8*
  %28 = tail call i64 @sk_insert(%struct.stack_st* %16, i8* nonnull %27, i64 %26) #4
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %21
  %31 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %0, align 8
  %32 = icmp eq %struct.stack_st_X509_EXTENSION* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  store %struct.stack_st_X509_EXTENSION* %15, %struct.stack_st_X509_EXTENSION** %0, align 8
  br label %36

34:                                               ; preds = %21
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 173) #4
  tail call void @X509_EXTENSION_free(%struct.X509_extension_st* nonnull %19) #4
  br label %35

35:                                               ; preds = %14, %34
  tail call void @sk_free(%struct.stack_st* %16) #4
  br label %36

36:                                               ; preds = %5, %13, %35, %30, %33
  %37 = phi %struct.stack_st_X509_EXTENSION* [ %15, %33 ], [ %15, %30 ], [ null, %35 ], [ null, %13 ], [ null, %5 ]
  ret %struct.stack_st_X509_EXTENSION* %37
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare %struct.X509_extension_st* @X509_EXTENSION_dup(%struct.X509_extension_st*) local_unnamed_addr #1

declare void @X509_EXTENSION_free(%struct.X509_extension_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_extension_st* @X509_EXTENSION_create_by_NID(%struct.X509_extension_st**, i32, i32, %struct.asn1_string_st* nocapture readonly) local_unnamed_addr #0 {
  %5 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 %1) #4
  %6 = icmp eq %struct.asn1_object_st* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 11, i32 0, i32 129, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 191) #4
  br label %10

8:                                                ; preds = %4
  %9 = tail call %struct.X509_extension_st* @X509_EXTENSION_create_by_OBJ(%struct.X509_extension_st** %0, %struct.asn1_object_st* nonnull %5, i32 %2, %struct.asn1_string_st* %3)
  br label %10

10:                                               ; preds = %8, %7
  %11 = phi %struct.X509_extension_st* [ null, %7 ], [ %9, %8 ]
  ret %struct.X509_extension_st* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_extension_st* @X509_EXTENSION_create_by_OBJ(%struct.X509_extension_st**, %struct.asn1_object_st*, i32, %struct.asn1_string_st* nocapture readonly) local_unnamed_addr #0 {
  %5 = icmp eq %struct.X509_extension_st** %0, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = load %struct.X509_extension_st*, %struct.X509_extension_st** %0, align 8
  %8 = icmp eq %struct.X509_extension_st* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %6, %4
  %10 = tail call %struct.X509_extension_st* @X509_EXTENSION_new() #4
  %11 = icmp eq %struct.X509_extension_st* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 206) #4
  br label %45

13:                                               ; preds = %6, %9
  %14 = phi %struct.X509_extension_st* [ %10, %9 ], [ %7, %6 ]
  %15 = icmp eq %struct.X509_extension_st* %14, null
  %16 = icmp eq %struct.asn1_object_st* %1, null
  %17 = or i1 %16, %15
  br i1 %17, label %40, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %14, i64 0, i32 0
  %20 = load %struct.asn1_object_st*, %struct.asn1_object_st** %19, align 8
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %20) #4
  %21 = tail call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* nonnull %1) #4
  store %struct.asn1_object_st* %21, %struct.asn1_object_st** %19, align 8
  %22 = icmp eq %struct.asn1_object_st* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %18
  %24 = icmp eq i32 %2, 0
  %25 = select i1 %24, i32 -1, i32 255
  %26 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %14, i64 0, i32 1
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %14, i64 0, i32 2
  %28 = load %struct.asn1_string_st*, %struct.asn1_string_st** %27, align 8
  %29 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = tail call i32 @ASN1_OCTET_STRING_set(%struct.asn1_string_st* %28, i8* %30, i32 %32) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %23
  br i1 %5, label %45, label %36

36:                                               ; preds = %35
  %37 = load %struct.X509_extension_st*, %struct.X509_extension_st** %0, align 8
  %38 = icmp eq %struct.X509_extension_st* %37, null
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  store %struct.X509_extension_st* %14, %struct.X509_extension_st** %0, align 8
  br label %45

40:                                               ; preds = %13, %23, %18
  br i1 %5, label %44, label %41

41:                                               ; preds = %40
  %42 = load %struct.X509_extension_st*, %struct.X509_extension_st** %0, align 8
  %43 = icmp eq %struct.X509_extension_st* %14, %42
  br i1 %43, label %45, label %44

44:                                               ; preds = %41, %40
  tail call void @X509_EXTENSION_free(%struct.X509_extension_st* nonnull %14) #4
  br label %45

45:                                               ; preds = %44, %41, %36, %39, %35, %12
  %46 = phi %struct.X509_extension_st* [ null, %12 ], [ %14, %35 ], [ %14, %39 ], [ %14, %36 ], [ null, %41 ], [ null, %44 ]
  ret %struct.X509_extension_st* %46
}

declare %struct.X509_extension_st* @X509_EXTENSION_new() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_EXTENSION_set_object(%struct.X509_extension_st*, %struct.asn1_object_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_extension_st* %0, null
  %4 = icmp eq %struct.asn1_object_st* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %0, i64 0, i32 0
  %8 = load %struct.asn1_object_st*, %struct.asn1_object_st** %7, align 8
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %8) #4
  %9 = tail call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* nonnull %1) #4
  store %struct.asn1_object_st* %9, %struct.asn1_object_st** %7, align 8
  %10 = icmp ne %struct.asn1_object_st* %9, null
  %11 = zext i1 %10 to i32
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i32 [ %11, %6 ], [ 0, %2 ]
  ret i32 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @X509_EXTENSION_set_critical(%struct.X509_extension_st*, i32) local_unnamed_addr #2 {
  %3 = icmp eq %struct.X509_extension_st* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %1, 0
  %6 = select i1 %5, i32 -1, i32 255
  %7 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %0, i64 0, i32 1
  store i32 %6, i32* %7, align 8
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i32 [ 1, %4 ], [ 0, %2 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_EXTENSION_set_data(%struct.X509_extension_st* readonly, %struct.asn1_string_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_extension_st* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %0, i64 0, i32 2
  %6 = load %struct.asn1_string_st*, %struct.asn1_string_st** %5, align 8
  %7 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = tail call i32 @ASN1_OCTET_STRING_set(%struct.asn1_string_st* %6, i8* %8, i32 %10) #4
  %12 = icmp ne i32 %11, 0
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %4, %2
  %15 = phi i32 [ 0, %2 ], [ %13, %4 ]
  ret i32 %15
}

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #1

declare %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st*) local_unnamed_addr #1

declare i32 @ASN1_OCTET_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_object_st* @X509_EXTENSION_get_object(%struct.X509_extension_st* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct.X509_extension_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %0, i64 0, i32 0
  %5 = load %struct.asn1_object_st*, %struct.asn1_object_st** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi %struct.asn1_object_st* [ %5, %3 ], [ null, %1 ]
  ret %struct.asn1_object_st* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_EXTENSION_get_data(%struct.X509_extension_st* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct.X509_extension_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %0, i64 0, i32 2
  %5 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi %struct.asn1_string_st* [ %5, %3 ], [ null, %1 ]
  ret %struct.asn1_string_st* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @X509_EXTENSION_get_critical(%struct.X509_extension_st* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct.X509_extension_st* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_extension_st, %struct.X509_extension_st* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 0, %1 ], [ %7, %3 ]
  ret i32 %9
}

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

declare i8* @sk_delete(%struct.stack_st*, i64) local_unnamed_addr #1

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #1

declare i64 @sk_insert(%struct.stack_st*, i8*, i64) local_unnamed_addr #1

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
