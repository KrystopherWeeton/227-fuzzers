; ModuleID = '../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_rtp_packet_outgoing.cc'
source_filename = "../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_rtp_packet_outgoing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::RtcEventRtpPacketOutgoing" = type <{ %"class.webrtc::RtcEvent", %"class.webrtc::RtpPacket", i32, [4 x i8] }>
%"class.webrtc::RtcEvent" = type { i32 (...)**, i64 }
%"class.webrtc::RtpPacket" = type { i8, i8, i8, i16, i32, i32, i64, i64, %"class.webrtc::RtpHeaderExtensionMap", %"class.std::__1::vector", i64, %"class.rtc::CopyOnWriteBuffer" }
%"class.webrtc::RtpHeaderExtensionMap" = type { [21 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::RtpPacket::ExtensionInfo"*, %"struct.webrtc::RtpPacket::ExtensionInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.webrtc::RtpPacket::ExtensionInfo" = type { i8, i8, i16 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::RtpPacket::ExtensionInfo"* }
%"class.rtc::CopyOnWriteBuffer" = type { %"class.rtc::scoped_refptr", i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.rtc::FinalRefCountedObject"* }
%"class.rtc::FinalRefCountedObject" = type <{ %"class.rtc::BufferT", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.webrtc::RtpPacketToSend" = type <{ %"class.webrtc::RtpPacket", i64, %"class.absl::optional", i8, i8, %"class.absl::optional.5", [2 x i8], %"class.rtc::scoped_refptr.10", i8, i8, i8, i8, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i16 }
%"class.rtc::scoped_refptr.10" = type { %"class.rtc::RefCountedBase"* }
%"class.rtc::RefCountedBase" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>

$_ZNK6webrtc25RtcEventRtpPacketOutgoing7GetTypeEv = comdat any

$_ZNK6webrtc25RtcEventRtpPacketOutgoing13IsConfigEventEv = comdat any

@_ZTVN6webrtc25RtcEventRtpPacketOutgoingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RtcEventRtpPacketOutgoing"*)* @_ZN6webrtc25RtcEventRtpPacketOutgoingD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtcEventRtpPacketOutgoing"*)* @_ZN6webrtc25RtcEventRtpPacketOutgoingD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::RtcEventRtpPacketOutgoing"*)* @_ZNK6webrtc25RtcEventRtpPacketOutgoing7GetTypeEv to i8*), i8* bitcast (i1 (%"class.webrtc::RtcEventRtpPacketOutgoing"*)* @_ZNK6webrtc25RtcEventRtpPacketOutgoing13IsConfigEventEv to i8*)] }, align 8

@_ZN6webrtc25RtcEventRtpPacketOutgoingC1ERKNS_15RtpPacketToSendEi = hidden unnamed_addr alias void (%"class.webrtc::RtcEventRtpPacketOutgoing"*, %"class.webrtc::RtpPacketToSend"*, i32), void (%"class.webrtc::RtcEventRtpPacketOutgoing"*, %"class.webrtc::RtpPacketToSend"*, i32)* @_ZN6webrtc25RtcEventRtpPacketOutgoingC2ERKNS_15RtpPacketToSendEi
@_ZN6webrtc25RtcEventRtpPacketOutgoingC1ERKS0_ = hidden unnamed_addr alias void (%"class.webrtc::RtcEventRtpPacketOutgoing"*, %"class.webrtc::RtcEventRtpPacketOutgoing"*), void (%"class.webrtc::RtcEventRtpPacketOutgoing"*, %"class.webrtc::RtcEventRtpPacketOutgoing"*)* @_ZN6webrtc25RtcEventRtpPacketOutgoingC2ERKS0_
@_ZN6webrtc25RtcEventRtpPacketOutgoingD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtcEventRtpPacketOutgoing"*), void (%"class.webrtc::RtcEventRtpPacketOutgoing"*)* @_ZN6webrtc25RtcEventRtpPacketOutgoingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25RtcEventRtpPacketOutgoingC2ERKNS_15RtpPacketToSendEi(%"class.webrtc::RtcEventRtpPacketOutgoing"*, %"class.webrtc::RtpPacketToSend"* dereferenceable(160), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"* %4) #5
  %5 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc25RtcEventRtpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0
  tail call void @_ZN6webrtc9RtpPacketC1ERKS0_(%"class.webrtc::RtpPacket"* %6, %"class.webrtc::RtpPacket"* dereferenceable(112) %7) #5
  %8 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  ret void
}

declare void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"*) unnamed_addr #1

declare void @_ZN6webrtc9RtpPacketC1ERKS0_(%"class.webrtc::RtpPacket"*, %"class.webrtc::RtpPacket"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25RtcEventRtpPacketOutgoingC2ERKS0_(%"class.webrtc::RtcEventRtpPacketOutgoing"*, %"class.webrtc::RtcEventRtpPacketOutgoing"* dereferenceable(136)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc25RtcEventRtpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %1, i64 0, i32 1
  tail call void @_ZN6webrtc9RtpPacketC1ERKS0_(%"class.webrtc::RtpPacket"* %7, %"class.webrtc::RtpPacket"* dereferenceable(112) %8) #5
  %9 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25RtcEventRtpPacketOutgoingD2Ev(%"class.webrtc::RtcEventRtpPacketOutgoing"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc25RtcEventRtpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc9RtpPacketD1Ev(%"class.webrtc::RtpPacket"* %3) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc9RtpPacketD1Ev(%"class.webrtc::RtpPacket"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25RtcEventRtpPacketOutgoingD0Ev(%"class.webrtc::RtcEventRtpPacketOutgoing"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc25RtcEventRtpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc9RtpPacketD1Ev(%"class.webrtc::RtpPacket"* %3) #5
  %4 = bitcast %"class.webrtc::RtcEventRtpPacketOutgoing"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.webrtc::RtcEventRtpPacketOutgoing"* @_ZNK6webrtc25RtcEventRtpPacketOutgoing4CopyEv(%"class.webrtc::RtcEventRtpPacketOutgoing"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 136) #6
  %3 = bitcast i8* %2 to %"class.webrtc::RtcEventRtpPacketOutgoing"*
  %4 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %2 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %5, i64* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc25RtcEventRtpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to %"class.webrtc::RtpPacket"*
  %11 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc9RtpPacketC1ERKS0_(%"class.webrtc::RtpPacket"* %10, %"class.webrtc::RtpPacket"* dereferenceable(112) %11) #5
  %12 = getelementptr inbounds i8, i8* %2, i64 128
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds %"class.webrtc::RtcEventRtpPacketOutgoing", %"class.webrtc::RtcEventRtpPacketOutgoing"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %13, align 8
  ret %"class.webrtc::RtcEventRtpPacketOutgoing"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc25RtcEventRtpPacketOutgoing7GetTypeEv(%"class.webrtc::RtcEventRtpPacketOutgoing"*) unnamed_addr #0 comdat align 2 {
  ret i32 19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc25RtcEventRtpPacketOutgoing13IsConfigEventEv(%"class.webrtc::RtcEventRtpPacketOutgoing"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
