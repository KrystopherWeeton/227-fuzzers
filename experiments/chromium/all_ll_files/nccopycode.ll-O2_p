; ModuleID = '../../native_client/src/trusted/validator_x86/nccopycode.c'
source_filename = "../../native_client/src/trusted/validator_x86/nccopycode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@g_squashybuffer = hidden global i8* null, align 8
@g_firstbyte = hidden local_unnamed_addr global i8 0, align 1
@.str = private unnamed_addr constant [65 x i8] c"SerializeAllProcessors: initial squashybuffer allocation failed\0A\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"SerializeAllProcessors: g_firstbyte is %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [107 x i8] c"SerializeAllProcessors: interprocessor interrupt generation failed: could not reverse shield polarity (1)\0A\00", align 1
@.str.3 = private unnamed_addr constant [107 x i8] c"SerializeAllProcessors: interprocessor interrupt generation failed: could not reverse shield polarity (2)\0A\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"SerializeAllProcessors: *g_squashybuffer is %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [107 x i8] c"SerializeAllProcessors: interprocessor interrupt generation failed: could not reverse shield polarity (3)\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCopyInstruction(i8*, i8* nocapture readonly, i8 zeroext) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = icmp eq i8 %2, 0
  br i1 %6, label %94, label %7

7:                                                ; preds = %3, %14
  %8 = phi i8 [ %17, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %0, %3 ]
  %11 = load i8, i8* %10, align 1
  %12 = load i8, i8* %9, align 1
  %13 = icmp eq i8 %11, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 1
  %16 = getelementptr inbounds i8, i8* %9, i64 1
  %17 = add i8 %8, -1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %94, label %7

19:                                               ; preds = %7, %28
  %20 = phi i8 [ %29, %28 ], [ %8, %7 ]
  %21 = zext i8 %20 to i64
  %22 = add nsw i64 %21, -1
  %23 = getelementptr inbounds i8, i8* %10, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = getelementptr inbounds i8, i8* %9, i64 %22
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %24, %26
  br i1 %27, label %28, label %31

28:                                               ; preds = %19
  %29 = add i8 %20, -1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %36, label %19

31:                                               ; preds = %19
  %32 = icmp eq i8 %20, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  store i8 %12, i8* %10, align 1
  br label %94

34:                                               ; preds = %31
  %35 = icmp ugt i8 %20, 4
  br i1 %35, label %52, label %36

36:                                               ; preds = %28, %34
  %37 = phi i8 [ %20, %34 ], [ 0, %28 ]
  %38 = ptrtoint i8* %10 to i64
  %39 = zext i8 %37 to i64
  %40 = add i64 %38, -1
  %41 = add i64 %40, %39
  %42 = xor i64 %41, %38
  %43 = icmp ult i64 %42, 4
  br i1 %43, label %44, label %59

44:                                               ; preds = %36
  %45 = and i64 %38, 3
  %46 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #3
  %47 = sub nsw i64 0, %45
  %48 = getelementptr inbounds i8, i8* %10, i64 %47
  %49 = bitcast i8* %48 to i32*
  store i32 -1431655766, i32* %4, align 4
  %50 = load i32, i32* %49, align 1
  store i32 %50, i32* %4, align 4
  %51 = getelementptr inbounds i8, i8* %46, i64 %45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %9, i64 %39, i1 false)
  call void @onestore_memmove4(i8* %48, i8* nonnull %46) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #3
  br label %94

52:                                               ; preds = %34
  %53 = icmp ugt i8 %20, 8
  br i1 %53, label %73, label %54

54:                                               ; preds = %52
  %55 = ptrtoint i8* %10 to i64
  %56 = add i64 %55, -1
  %57 = add i64 %56, %21
  %58 = xor i64 %57, %55
  br label %59

59:                                               ; preds = %54, %36
  %60 = phi i64 [ %58, %54 ], [ %42, %36 ]
  %61 = phi i64 [ %55, %54 ], [ %38, %36 ]
  %62 = phi i64 [ %21, %54 ], [ %39, %36 ]
  %63 = phi i8 [ %20, %54 ], [ %37, %36 ]
  %64 = icmp ult i64 %60, 8
  br i1 %64, label %65, label %73

65:                                               ; preds = %59
  %66 = and i64 %61, 7
  %67 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #3
  %68 = sub nsw i64 0, %66
  %69 = getelementptr inbounds i8, i8* %10, i64 %68
  %70 = bitcast i8* %69 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  %71 = load i64, i64* %70, align 1
  store i64 %71, i64* %5, align 8
  %72 = getelementptr inbounds i8, i8* %67, i64 %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %9, i64 %62, i1 false)
  call void @onestore_memmove8(i8* %69, i8* nonnull %67) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #3
  br label %94

73:                                               ; preds = %52, %59
  %74 = phi i8 [ %20, %52 ], [ %63, %59 ]
  %75 = load i8, i8* %0, align 1
  store i8 -12, i8* %0, align 1
  %76 = tail call fastcc i32 @SerializeAllProcessors()
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %94, label %78

78:                                               ; preds = %73
  %79 = icmp eq i8* %10, %0
  br i1 %79, label %80, label %85

80:                                               ; preds = %78
  %81 = load i8, i8* %9, align 1
  %82 = getelementptr inbounds i8, i8* %0, i64 1
  %83 = getelementptr inbounds i8, i8* %9, i64 1
  %84 = add i8 %74, -1
  br label %85

85:                                               ; preds = %80, %78
  %86 = phi i8* [ %82, %80 ], [ %10, %78 ]
  %87 = phi i8* [ %83, %80 ], [ %9, %78 ]
  %88 = phi i8 [ %84, %80 ], [ %74, %78 ]
  %89 = phi i8 [ %81, %80 ], [ %75, %78 ]
  %90 = zext i8 %88 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %87, i64 %90, i1 false)
  %91 = tail call fastcc i32 @SerializeAllProcessors()
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %85
  store i8 %89, i8* %0, align 1
  br label %94

94:                                               ; preds = %14, %3, %33, %65, %44, %93, %73, %85
  %95 = phi i32 [ 0, %85 ], [ 0, %73 ], [ 1, %93 ], [ 1, %44 ], [ 1, %65 ], [ 1, %33 ], [ 1, %3 ], [ 1, %14 ]
  ret i32 %95
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @onestore_memmove4(i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @onestore_memmove8(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @SerializeAllProcessors() unnamed_addr #0 {
  %1 = load i8*, i8** @g_squashybuffer, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %17

3:                                                ; preds = %0
  %4 = tail call i32 @NaClPageAlloc(i8** nonnull @g_squashybuffer, i64 65536) #3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = load i8*, i8** @g_squashybuffer, align 8
  %8 = tail call i32 @NaClMprotect(i8* %7, i64 65536, i32 3) #3
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6, %3
  tail call void (i32, i8*, ...) @NaClLog(i32 0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0)) #3
  br label %37

11:                                               ; preds = %6
  %12 = load i8*, i8** @g_squashybuffer, align 8
  tail call void @NaClFillMemoryRegionWithHalt(i8* %12, i64 65536) #3
  %13 = load i8*, i8** @g_squashybuffer, align 8
  %14 = load i8, i8* %13, align 1
  store i8 %14, i8* @g_firstbyte, align 1
  %15 = sext i8 %14 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i32 %15) #3
  %16 = load i8*, i8** @g_squashybuffer, align 8
  br label %17

17:                                               ; preds = %11, %0
  %18 = phi i8* [ %16, %11 ], [ %1, %0 ]
  %19 = tail call i32 @NaClMprotect(i8* %18, i64 65536, i32 5) #3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void (i32, i8*, ...) @NaClLog(i32 0, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.2, i64 0, i64 0)) #3
  br label %37

22:                                               ; preds = %17
  %23 = load i8*, i8** @g_squashybuffer, align 8
  %24 = load i8, i8* %23, align 1
  %25 = load i8, i8* @g_firstbyte, align 1
  %26 = icmp eq i8 %24, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  tail call void (i32, i8*, ...) @NaClLog(i32 0, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.3, i64 0, i64 0)) #3
  %28 = load i8, i8* @g_firstbyte, align 1
  %29 = sext i8 %28 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i32 %29) #3
  %30 = load i8*, i8** @g_squashybuffer, align 8
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0), i32 %32) #3
  br label %37

33:                                               ; preds = %22
  %34 = tail call i32 @NaClMprotect(i8* %23, i64 65536, i32 1) #3
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void (i32, i8*, ...) @NaClLog(i32 0, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.5, i64 0, i64 0)) #3
  br label %37

37:                                               ; preds = %33, %36, %27, %21, %10
  %38 = phi i32 [ 0, %10 ], [ 0, %21 ], [ 0, %27 ], [ 0, %36 ], [ 1, %33 ]
  ret i32 %38
}

declare i32 @NaClPageAlloc(i8**, i64) local_unnamed_addr #2

declare i32 @NaClMprotect(i8*, i64, i32) local_unnamed_addr #2

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

declare void @NaClFillMemoryRegionWithHalt(i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
