; ModuleID = '../../base/threading/thread_local_storage.cc'
source_filename = "../../base/threading/thread_local_storage.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.(anonymous namespace)::TlsMetadata" = type { i32, void (i8*)*, i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.(anonymous namespace)::TlsVectorEntry" = type { i8*, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@_ZN12_GLOBAL__N_120g_last_assigned_slotE = internal unnamed_addr global i64 0, align 8
@_ZN12_GLOBAL__N_114g_tls_metadataE = internal unnamed_addr global [256 x %"struct.(anonymous namespace)::TlsMetadata"] zeroinitializer, align 16
@.str = private unnamed_addr constant [27 x i8] c"slot_ != kInvalidSlotValue\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"../../base/threading/thread_local_storage.cc\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"slot_ < kThreadLocalStorageSize\00", align 1
@_ZN12_GLOBAL__N_116g_native_tls_keyE = internal global { { i32 } } { { i32 } { i32 2147483647 } }, align 4
@.str.4 = private unnamed_addr constant [43 x i8] c"PlatformThreadLocalStorage::AllocTLS(&key)\00", align 1
@.str.5 = private unnamed_addr constant [104 x i8] c"PlatformThreadLocalStorage::AllocTLS(&key) && key != PlatformThreadLocalStorage::TLS_KEY_OUT_OF_INDEXES\00", align 1
@.str.6 = private unnamed_addr constant [65 x i8] c"GetTlsVectorStateAndValue(key) == TlsVectorState::kUninitialized\00", align 1
@_ZZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock = internal unnamed_addr global %"class.base::Lock"* null, align 8
@_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock = internal global i64 0, align 8

@_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE = hidden unnamed_addr alias void (%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*), void (%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*)* @_ZN4base18ThreadLocalStorage4SlotC2EPFvPvE
@_ZN4base18ThreadLocalStorage4SlotD1Ev = hidden unnamed_addr alias void (%"class.base::ThreadLocalStorage::Slot"*), void (%"class.base::ThreadLocalStorage::Slot"*)* @_ZN4base18ThreadLocalStorage4SlotD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal26PlatformThreadLocalStorage12OnThreadExitEPv(i8*) local_unnamed_addr #0 align 2 {
  %2 = alloca [256 x %"struct.(anonymous namespace)::TlsVectorEntry"], align 16
  %3 = alloca [256 x %"struct.(anonymous namespace)::TlsMetadata"], align 16
  %4 = ptrtoint i8* %0 to i64
  %5 = and i64 %4, -4
  %6 = and i64 %4, 3
  %7 = icmp eq i64 %6, 2
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0) monotonic, align 4
  tail call void @_ZN4base8internal26PlatformThreadLocalStorage11SetTLSValueEjPv(i32 %9, i8* null) #7
  br label %72

10:                                               ; preds = %1
  %11 = bitcast [256 x %"struct.(anonymous namespace)::TlsVectorEntry"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %11) #7
  %12 = inttoptr i64 %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %11, i8* align 8 %12, i64 4096, i1 false) #7
  %13 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0) monotonic, align 4
  %14 = ptrtoint [256 x %"struct.(anonymous namespace)::TlsVectorEntry"]* %2 to i64
  %15 = or i64 %14, 1
  %16 = inttoptr i64 %15 to i8*
  call void @_ZN4base8internal26PlatformThreadLocalStorage11SetTLSValueEjPv(i32 %13, i8* nonnull %16) #7
  %17 = icmp eq i64 %5, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %10
  call void @_ZdaPv(i8* %12) #8
  br label %19

19:                                               ; preds = %18, %10
  %20 = bitcast [256 x %"struct.(anonymous namespace)::TlsMetadata"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6144, i8* nonnull %20) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 6144, i1 false) #7
  %21 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock to i8*) acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %29, !prof !2

23:                                               ; preds = %19
  %24 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock) #7
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = call i8* @_Znwm(i64 40) #8
  %28 = bitcast i8* %27 to %"class.base::internal::LockImpl"*
  call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* nonnull %28) #7
  store i8* %27, i8** bitcast (%"class.base::Lock"** @_ZZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock) #7
  br label %29

29:                                               ; preds = %26, %23, %19
  %30 = load %"class.base::Lock"*, %"class.base::Lock"** @_ZZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock, align 8
  %31 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %30, i64 0, i32 0, i32 0
  %32 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %31) #7
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34, !prof !3

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %30, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %35) #7
  br label %36

36:                                               ; preds = %34, %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %20, i8* align 16 bitcast ([256 x %"struct.(anonymous namespace)::TlsMetadata"]* @_ZN12_GLOBAL__N_114g_tls_metadataE to i8*), i64 6144, i1 false) #7
  %37 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %31) #7
  br label %38

38:                                               ; preds = %43, %36
  %39 = phi i32 [ 256, %36 ], [ %44, %43 ]
  %40 = phi i8 [ 1, %36 ], [ %68, %43 ]
  %41 = and i8 %40, 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %71, label %46

43:                                               ; preds = %67
  %44 = add nsw i32 %39, -1
  %45 = icmp ult i32 %39, 2
  br i1 %45, label %71, label %38

46:                                               ; preds = %38, %67
  %47 = phi i64 [ %69, %67 ], [ 0, %38 ]
  %48 = phi i8 [ %68, %67 ], [ 0, %38 ]
  %49 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsVectorEntry"], [256 x %"struct.(anonymous namespace)::TlsVectorEntry"]* %2, i64 0, i64 %47, i32 0
  %50 = load i8*, i8** %49, align 16
  %51 = icmp eq i8* %50, null
  br i1 %51, label %67, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* %3, i64 0, i64 %47, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsVectorEntry"], [256 x %"struct.(anonymous namespace)::TlsVectorEntry"]* %2, i64 0, i64 %47, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* %3, i64 0, i64 %47, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %56
  %63 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* %3, i64 0, i64 %47, i32 1
  %64 = load void (i8*)*, void (i8*)** %63, align 8
  %65 = icmp eq void (i8*)* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  store i8* null, i8** %49, align 16
  call void %64(i8* nonnull %50) #7
  br label %67

67:                                               ; preds = %66, %62, %56, %52, %46
  %68 = phi i8 [ %48, %56 ], [ %48, %46 ], [ %48, %52 ], [ 1, %66 ], [ %48, %62 ]
  %69 = add nuw nsw i64 %47, 1
  %70 = icmp eq i64 %69, 256
  br i1 %70, label %43, label %46

71:                                               ; preds = %38, %43
  call void @_ZN4base8internal26PlatformThreadLocalStorage11SetTLSValueEjPv(i32 %13, i8* nonnull inttoptr (i64 2 to i8*)) #7
  call void @llvm.lifetime.end.p0i8(i64 6144, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %11) #7
  br label %72

72:                                               ; preds = %71, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base18ThreadLocalStorage16HasBeenDestroyedEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0) monotonic, align 4
  %2 = icmp eq i32 %1, 2147483647
  br i1 %2, label %10, label %3

3:                                                ; preds = %0
  %4 = tail call i8* @pthread_getspecific(i32 %1) #7
  %5 = ptrtoint i8* %4 to i64
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 3
  %8 = add nsw i32 %7, -1
  %9 = icmp ult i32 %8, 2
  br label %10

10:                                               ; preds = %0, %3
  %11 = phi i1 [ %9, %3 ], [ false, %0 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18ThreadLocalStorage4Slot10InitializeEPFvPvE(%"class.base::ThreadLocalStorage::Slot"* nocapture, void (i8*)*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 2147483647
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = tail call i8* @pthread_getspecific(i32 %9) #7
  %13 = ptrtoint i8* %12 to i64
  %14 = and i64 %13, 3
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11, %2
  %17 = tail call fastcc %"struct.(anonymous namespace)::TlsVectorEntry"* @_ZN12_GLOBAL__N_118ConstructTlsVectorEv()
  br label %18

18:                                               ; preds = %16, %11
  %19 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock to i8*) acquire, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %27, !prof !2

21:                                               ; preds = %18
  %22 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock) #7
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = tail call i8* @_Znwm(i64 40) #8
  %26 = bitcast i8* %25 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* nonnull %26) #7
  store i8* %25, i8** bitcast (%"class.base::Lock"** @_ZZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock) #7
  br label %27

27:                                               ; preds = %18, %21, %24
  %28 = load %"class.base::Lock"*, %"class.base::Lock"** @_ZZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock, align 8
  %29 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %28, i64 0, i32 0, i32 0
  %30 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %29) #7
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32, !prof !3

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %28, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %33) #7
  br label %34

34:                                               ; preds = %27, %32
  %35 = load i64, i64* @_ZN12_GLOBAL__N_120g_last_assigned_slotE, align 8
  br label %43

36:                                               ; preds = %43
  %37 = add nuw nsw i64 %44, 2
  %38 = add i64 %35, %37
  %39 = and i64 %38, 255
  %40 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* @_ZN12_GLOBAL__N_114g_tls_metadataE, i64 0, i64 %39, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %51, label %95

43:                                               ; preds = %95, %34
  %44 = phi i64 [ 0, %34 ], [ %37, %95 ]
  %45 = or i64 %44, 1
  %46 = add i64 %35, %45
  %47 = and i64 %46, 255
  %48 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* @_ZN12_GLOBAL__N_114g_tls_metadataE, i64 0, i64 %47, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %36

51:                                               ; preds = %36, %43
  %52 = phi i64 [ %47, %43 ], [ %39, %36 ]
  %53 = phi i32* [ %48, %43 ], [ %40, %36 ]
  store i32 1, i32* %53, align 8
  %54 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* @_ZN12_GLOBAL__N_114g_tls_metadataE, i64 0, i64 %52, i32 1
  store void (i8*)* %1, void (i8*)** %54, align 8
  store i64 %52, i64* @_ZN12_GLOBAL__N_120g_last_assigned_slotE, align 8
  %55 = trunc i64 %52 to i32
  %56 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 0
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* @_ZN12_GLOBAL__N_114g_tls_metadataE, i64 0, i64 %52, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 1
  store i32 %58, i32* %59, align 4
  br label %60

60:                                               ; preds = %95, %51
  %61 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %29) #7
  %62 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #7
  %63 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %63, align 8
  %64 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = icmp eq i32 %65, -1
  br i1 %67, label %69, label %68

68:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  store i8* null, i8** %63, align 8
  br label %78

69:                                               ; preds = %60
  %70 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 -1) #7
  %71 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 -1) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %70, i8* %71) #7
  %72 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  store i8* %73, i8** %63, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 409, %"class.logging::CheckOpResult"* nonnull %5) #7
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #7
  br label %78

78:                                               ; preds = %68, %69, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #7
  %79 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #7
  %80 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %80, align 8
  %81 = load i32, i32* %64, align 4
  %82 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  %83 = icmp slt i32 %81, 256
  br i1 %83, label %84, label %85

84:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  store i8* null, i8** %80, align 8
  br label %94

85:                                               ; preds = %78
  %86 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %81) #7
  %87 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 256) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* %86, i8* %87) #7
  %88 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  store i8* %89, i8** %80, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 410, %"class.logging::CheckOpResult"* nonnull %7) #7
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #7
  br label %94

94:                                               ; preds = %84, %85, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #7
  ret void

95:                                               ; preds = %36
  %96 = icmp eq i64 %37, 256
  br i1 %96, label %60, label %43
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc nonnull %"struct.(anonymous namespace)::TlsVectorEntry"* @_ZN12_GLOBAL__N_118ConstructTlsVectorEv() unnamed_addr #0 {
  %1 = alloca %"class.logging::CheckOpResult", align 8
  %2 = alloca i32, align 4
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca [256 x %"struct.(anonymous namespace)::TlsVectorEntry"], align 16
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7
  %9 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0) monotonic, align 4
  store i32 %9, i32* %2, align 4
  %10 = icmp eq i32 %9, 2147483647
  br i1 %10, label %11, label %35

11:                                               ; preds = %0
  %12 = call zeroext i1 @_ZN4base8internal26PlatformThreadLocalStorage8AllocTLSEPj(i32* nonnull %2) #7
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0)) #7
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  br label %16

16:                                               ; preds = %11, %13
  %17 = load i32, i32* %2, align 4
  %18 = icmp eq i32 %17, 2147483647
  br i1 %18, label %19, label %29

19:                                               ; preds = %16
  %20 = call zeroext i1 @_ZN4base8internal26PlatformThreadLocalStorage8AllocTLSEPj(i32* nonnull %2) #7
  %21 = load i32, i32* %2, align 4
  %22 = icmp ne i32 %21, 2147483647
  %23 = and i1 %20, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 221, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.5, i64 0, i64 0)) #7
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  br label %27

27:                                               ; preds = %19, %24
  call void @_ZN4base8internal26PlatformThreadLocalStorage7FreeTLSEj(i32 2147483647) #7
  %28 = load i32, i32* %2, align 4
  br label %29

29:                                               ; preds = %27, %16
  %30 = phi i32 [ %28, %27 ], [ %17, %16 ]
  %31 = cmpxchg i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0), i32 2147483647, i32 %30 monotonic monotonic
  %32 = extractvalue { i32, i1 } %31, 1
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  call void @_ZN4base8internal26PlatformThreadLocalStorage7FreeTLSEj(i32 %30) #7
  %34 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0) monotonic, align 4
  store i32 %34, i32* %2, align 4
  br label %35

35:                                               ; preds = %29, %33, %0
  %36 = phi i32 [ %30, %29 ], [ %34, %33 ], [ %9, %0 ]
  %37 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  %38 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %38, align 8
  %39 = call i8* @pthread_getspecific(i32 %36) #7
  %40 = ptrtoint i8* %39 to i64
  %41 = trunc i64 %40 to i32
  %42 = and i32 %41, 3
  %43 = bitcast %"class.logging::CheckOpResult"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = icmp eq i32 %42, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  store i8* null, i8** %38, align 8
  br label %55

46:                                               ; preds = %35
  %47 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %42) #7
  %48 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.6, i64 0, i64 0), i8* %47, i8* %48) #7
  %49 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %1, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  store i8* %50, i8** %38, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 239, %"class.logging::CheckOpResult"* nonnull %5) #7
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #7
  br label %55

55:                                               ; preds = %45, %46, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7
  %56 = bitcast [256 x %"struct.(anonymous namespace)::TlsVectorEntry"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %56) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 0, i64 4096, i1 false)
  %57 = load i32, i32* %2, align 4
  %58 = ptrtoint [256 x %"struct.(anonymous namespace)::TlsVectorEntry"]* %7 to i64
  %59 = or i64 %58, 3
  %60 = inttoptr i64 %59 to i8*
  call void @_ZN4base8internal26PlatformThreadLocalStorage11SetTLSValueEjPv(i32 %57, i8* nonnull %60) #7
  %61 = call i8* @_Znam(i64 4096) #8
  %62 = bitcast i8* %61 to %"struct.(anonymous namespace)::TlsVectorEntry"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* nonnull align 16 %56, i64 4096, i1 false)
  %63 = load i32, i32* %2, align 4
  %64 = ptrtoint i8* %61 to i64
  %65 = or i64 %64, 3
  %66 = inttoptr i64 %65 to i8*
  call void @_ZN4base8internal26PlatformThreadLocalStorage11SetTLSValueEjPv(i32 %63, i8* nonnull %66) #7
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %56) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7
  ret %"struct.(anonymous namespace)::TlsVectorEntry"* %62
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18ThreadLocalStorage4Slot4FreeEv(%"class.base::ThreadLocalStorage::Slot"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 40) #8
  %9 = bitcast i8* %8 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* nonnull %9) #7
  store i8* %8, i8** bitcast (%"class.base::Lock"** @_ZZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock) #7
  br label %10

10:                                               ; preds = %1, %4, %7
  %11 = load %"class.base::Lock"*, %"class.base::Lock"** @_ZZN12_GLOBAL__N_118GetTLSMetadataLockEvE4lock, align 8
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %12) #7
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !3

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #7
  br label %17

17:                                               ; preds = %10, %15
  %18 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* @_ZN12_GLOBAL__N_114g_tls_metadataE, i64 0, i64 %20, i32 0
  store i32 0, i32* %21, align 8
  %22 = load i32, i32* %18, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* @_ZN12_GLOBAL__N_114g_tls_metadataE, i64 0, i64 %23, i32 1
  store void (i8*)* null, void (i8*)** %24, align 8
  %25 = load i32, i32* %18, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [256 x %"struct.(anonymous namespace)::TlsMetadata"], [256 x %"struct.(anonymous namespace)::TlsMetadata"]* @_ZN12_GLOBAL__N_114g_tls_metadataE, i64 0, i64 %26, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 1
  store i32 %29, i32* %27, align 8
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #7
  store i32 -1, i32* %18, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0) monotonic, align 4
  %3 = tail call i8* @pthread_getspecific(i32 %2) #7
  %4 = ptrtoint i8* %3 to i64
  %5 = and i64 %4, -4
  %6 = inttoptr i64 %5 to %"struct.(anonymous namespace)::TlsVectorEntry"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::TlsVectorEntry", %"struct.(anonymous namespace)::TlsVectorEntry"* %6, i64 %11, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::TlsVectorEntry", %"struct.(anonymous namespace)::TlsVectorEntry"* %6, i64 %11, i32 0
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %8, %1, %17
  %21 = phi i8* [ %19, %17 ], [ null, %1 ], [ null, %8 ]
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN12_GLOBAL__N_116g_native_tls_keyE, i64 0, i32 0, i32 0) monotonic, align 4
  %4 = tail call i8* @pthread_getspecific(i32 %3) #7
  %5 = ptrtoint i8* %4 to i64
  %6 = and i64 %5, -4
  %7 = inttoptr i64 %6 to %"struct.(anonymous namespace)::TlsVectorEntry"*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = icmp eq i8* %1, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %9
  %12 = tail call fastcc %"struct.(anonymous namespace)::TlsVectorEntry"* @_ZN12_GLOBAL__N_118ConstructTlsVectorEv()
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi %"struct.(anonymous namespace)::TlsVectorEntry"* [ %12, %11 ], [ %7, %2 ]
  %15 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::TlsVectorEntry", %"struct.(anonymous namespace)::TlsVectorEntry"* %14, i64 %17, i32 0
  store i8* %1, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %15, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.(anonymous namespace)::TlsVectorEntry", %"struct.(anonymous namespace)::TlsVectorEntry"* %14, i64 %22, i32 1
  store i32 %20, i32* %23, align 8
  br label %24

24:                                               ; preds = %9, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18ThreadLocalStorage4SlotC2EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* nocapture, void (i8*)*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 0
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.base::ThreadLocalStorage::Slot", %"class.base::ThreadLocalStorage::Slot"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  tail call void @_ZN4base18ThreadLocalStorage4Slot10InitializeEPFvPvE(%"class.base::ThreadLocalStorage::Slot"* %0, void (i8*)* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18ThreadLocalStorage4SlotD2Ev(%"class.base::ThreadLocalStorage::Slot"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN4base18ThreadLocalStorage4Slot4FreeEv(%"class.base::ThreadLocalStorage::Slot"* %0)
  ret void
}

declare void @_ZN4base8internal26PlatformThreadLocalStorage11SetTLSValueEjPv(i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i8* @pthread_getspecific(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base8internal26PlatformThreadLocalStorage8AllocTLSEPj(i32*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN4base8internal26PlatformThreadLocalStorage7FreeTLSEj(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
