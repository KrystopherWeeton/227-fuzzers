; ModuleID = '../../net/cert/internal/revocation_checker.cc'
source_filename = "../../net/cert/internal/revocation_checker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.net::RevocationPolicy" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.80" }
%class.scoped_refptr = type { %"class.net::ParsedCertificate"* }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::unique_ptr", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.2", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector.15", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.49", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.25", %"class.std::__1::vector.25", i8, %"class.std::__1::vector.15", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.55", i8, i8, %"class.absl::optional", %"class.absl::optional.63", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type <{ %"class.std::__1::vector.15", %"class.std::__1::vector.25", %"class.std::__1::vector.25", %"class.std::__1::vector.15", %"class.std::__1::vector.15", %"class.std::__1::vector.15", %"class.std::__1::vector.25", %"class.std::__1::vector.32", %"class.std::__1::vector.39", %"class.std::__1::vector.15", i32, [4 x i8] }>
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.net::IPAddress"*, %"class.net::IPAddress"*, %"class.std::__1::__compressed_pair.34" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.net::IPAddress"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.41" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.27" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.57" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.63", %"class.absl::optional.63", %"class.absl::optional.63" }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.net::der::Input" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i64 }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.scoped_refptr* }
%"class.net::CertNetFetcher" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.85", [4 x i8] }>
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::CertPathErrors" = type { %"class.std::__1::vector.86", %"class.net::CertErrors" }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"class.net::CertErrors"*, %"class.net::CertErrors"*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.net::CertErrors"* }
%"class.net::CertErrors" = type { %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.96" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.net::CertError"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.133" }
%"class.base::time_internal::TimeBase.133" = type { i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.134" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %class.GURL* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { i8*, i8*, %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { i8* }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"*, %"class.std::__1::__compressed_pair.155" }
%"struct.net::ParsedDistributionPoint" = type <{ %"class.std::__1::vector.25", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.net::ParsedDistributionPoint"* }
%"class.net::CertNetFetcher::Request" = type { i32 (...)** }
%"class.net::CRLSet" = type { %"class.base::RefCountedThreadSafe.106", i32, i64, %"class.std::__1::unordered_map", %"class.std::__1::vector.126", %"class.std::__1::vector.126", %"class.std::__1::unordered_map", %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { float }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN3netL27kMaxRevocationLeafUpdateAgeE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 604800000000 }, align 8
@_ZN3netL35kMaxRevocationIntermediateUpdateAgeE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 31622400000000 }, align 8
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [46 x i8] c"../../net/cert/internal/revocation_checker.cc\00", align 1
@.str.1 = private unnamed_addr constant [52 x i8] c"Cannot fetch OCSP as didn't specify a |net_fetcher|\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"Cannot fetch CRL as didn't specify a |net_fetcher|\00", align 1
@_ZN3net11cert_errors22kNoRevocationMechanismE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors24kUnableToCheckRevocationE = external local_unnamed_addr constant i8*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN3net11cert_errors19kCertificateRevokedE = external local_unnamed_addr constant i8*, align 8

@_ZN3net16RevocationPolicyC1Ev = hidden unnamed_addr alias void (%"struct.net::RevocationPolicy"*), void (%"struct.net::RevocationPolicy"*)* @_ZN3net16RevocationPolicyC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net16RevocationPolicyC2Ev(%"struct.net::RevocationPolicy"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::RevocationPolicy", %"struct.net::RevocationPolicy"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, -16
  %5 = or i8 %4, 1
  store i8 %5, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29CheckValidatedChainRevocationERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS0_9allocatorIS4_EEEERKNS_16RevocationPolicyEN4base9TimeTicksENSD_16BasicStringPieceIcNS0_11char_traitsIcEEEEPNS_14CertNetFetcherEPNS_14CertPathErrorsEPNS_16OCSPVerifyResultE(%"class.std::__1::vector"* dereferenceable(24), %"struct.net::RevocationPolicy"* nocapture readonly dereferenceable(1), i64, i8*, i64, %"class.net::CertNetFetcher"*, %"class.net::CertPathErrors"*, %"struct.net::OCSPVerifyResult"*) local_unnamed_addr #1 {
  %9 = alloca %"class.base::TimeDelta", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.base::Time", align 8
  %12 = alloca %class.GURL, align 8
  %13 = alloca %"class.logging::LogMessage", align 8
  %14 = alloca %class.GURL, align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::__1::vector.146", align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.base::Time", align 8
  %19 = alloca %"struct.net::ParsedExtension", align 8
  %20 = alloca %"class.net::der::Input", align 8
  %21 = alloca %"class.std::__1::vector.153", align 8
  %22 = alloca %class.GURL, align 8
  %23 = alloca %"class.logging::LogMessage", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.std::__1::vector.146", align 8
  %26 = alloca %"class.base::Time", align 8
  %27 = alloca i64, align 8
  %28 = bitcast i64* %27 to %"struct.net::OCSPVerifyResult"*
  %29 = icmp eq %"struct.net::OCSPVerifyResult"* %7, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %8
  %31 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN3net16OCSPVerifyResultC1Ev(%"struct.net::OCSPVerifyResult"* nonnull %28) #8
  %32 = bitcast %"struct.net::OCSPVerifyResult"* %7 to i64*
  %33 = load i64, i64* %27, align 8
  store i64 %33, i64* %32, align 4
  call void @_ZN3net16OCSPVerifyResultD1Ev(%"struct.net::OCSPVerifyResult"* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %34

34:                                               ; preds = %8, %30
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %36 = bitcast %class.scoped_refptr** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %378, label %42

42:                                               ; preds = %34
  %43 = ashr exact i64 %40, 3
  %44 = bitcast %"class.base::TimeDelta"* %9 to i8*
  %45 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %9, i64 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = bitcast i32* %10 to i8*
  %48 = bitcast %"class.base::Time"* %11 to i8*
  %49 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %11, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.net::RevocationPolicy", %"struct.net::RevocationPolicy"* %1, i64 0, i32 0
  %51 = bitcast %class.GURL* %12 to i8*
  %52 = getelementptr inbounds %class.GURL, %class.GURL* %12, i64 0, i32 1
  %53 = icmp eq i64 %2, 0
  %54 = icmp eq %"class.net::CertNetFetcher"* %5, null
  %55 = bitcast %class.GURL* %14 to i8*
  %56 = getelementptr inbounds %class.GURL, %class.GURL* %14, i64 0, i32 1
  %57 = bitcast %"class.net::CertNetFetcher"* %5 to %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)***
  %58 = bitcast i32* %15 to i8*
  %59 = bitcast %"class.std::__1::vector.146"* %16 to i8*
  %60 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %16, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %16, i64 0, i32 0, i32 1
  %62 = bitcast i32* %17 to i8*
  %63 = bitcast i8** %61 to i64*
  %64 = bitcast %"class.base::Time"* %18 to i8*
  %65 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %18, i64 0, i32 0, i32 0
  %66 = load i8*, i8** @_ZN3net11cert_errors19kCertificateRevokedE, align 8
  %67 = bitcast %"class.logging::LogMessage"* %13 to i8*
  %68 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %13, i64 0, i32 2
  %69 = bitcast %"class.std::__1::basic_ostringstream"* %68 to %"class.std::__1::basic_ostream"*
  %70 = bitcast %"struct.net::ParsedExtension"* %19 to i8*
  %71 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %19, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %19, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %19, i64 0, i32 2
  %74 = bitcast %"class.net::der::Input"* %20 to i8*
  %75 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %20, i64 0, i32 0
  %76 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %20, i64 0, i32 1
  %77 = bitcast %"class.std::__1::vector.153"* %21 to i8*
  %78 = getelementptr inbounds %"class.std::__1::vector.153", %"class.std::__1::vector.153"* %21, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::vector.153", %"class.std::__1::vector.153"* %21, i64 0, i32 0, i32 1
  %80 = bitcast %class.GURL* %22 to i8*
  %81 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 1
  %82 = bitcast i32* %24 to i8*
  %83 = bitcast %"class.std::__1::vector.146"* %25 to i8*
  %84 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %25, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %25, i64 0, i32 0, i32 1
  %86 = bitcast i8** %85 to i64*
  %87 = bitcast %"class.base::Time"* %26 to i8*
  %88 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %26, i64 0, i32 0, i32 0
  %89 = bitcast %"class.logging::LogMessage"* %23 to i8*
  %90 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %23, i64 0, i32 2
  %91 = bitcast %"class.std::__1::basic_ostringstream"* %90 to %"class.std::__1::basic_ostream"*
  %92 = bitcast %"class.std::__1::vector.153"* %21 to i8**
  br label %93

93:                                               ; preds = %42, %371
  %94 = phi i64 [ %43, %42 ], [ %376, %371 ]
  %95 = phi i64 [ 0, %42 ], [ %372, %371 ]
  %96 = xor i64 %95, -1
  %97 = add i64 %94, %96
  %98 = icmp eq i64 %95, 0
  br i1 %98, label %371, label %99

99:                                               ; preds = %93
  %100 = icmp eq i64 %97, 0
  %101 = select i1 %100, i8* %3, i8* null
  %102 = select i1 %100, i64 %4, i64 0
  %103 = select i1 %100, %"class.base::TimeDelta"* @_ZN3netL27kMaxRevocationLeafUpdateAgeE, %"class.base::TimeDelta"* @_ZN3netL35kMaxRevocationIntermediateUpdateAgeE
  %104 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %103, i64 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = call %"class.net::CertErrors"* @_ZN3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"* %6, i64 %97) #8
  %107 = select i1 %100, %"struct.net::OCSPVerifyResult"* %7, %"struct.net::OCSPVerifyResult"* null
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  store i64 %105, i64* %45, align 8
  %108 = load %class.scoped_refptr*, %class.scoped_refptr** %46, align 8
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %108, i64 %97, i32 0
  %110 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %109, align 8
  %111 = sub i64 %94, %95
  %112 = load i64, i64* %36, align 8
  %113 = ptrtoint %class.scoped_refptr* %108 to i64
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 3
  %116 = icmp ult i64 %111, %115
  br i1 %116, label %117, label %135

117:                                              ; preds = %99
  %118 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %108, i64 %111, i32 0
  %119 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %118, align 8
  %120 = icmp ne i64 %102, 0
  %121 = icmp ne %"class.net::ParsedCertificate"* %119, null
  %122 = and i1 %120, %121
  br i1 %122, label %123, label %135

123:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #8
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  %124 = call i64 @_ZN4base4Time3NowEv() #8
  store i64 %124, i64* %49, align 8
  %125 = call i32 @_ZN3net9CheckOCSPEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKNS_17ParsedCertificateES8_RKNS0_4TimeERKNS0_9TimeDeltaEPNS_16OCSPVerifyResult14ResponseStatusE(i8* %101, i64 %102, %"class.net::ParsedCertificate"* %110, %"class.net::ParsedCertificate"* nonnull %119, %"class.base::Time"* nonnull dereferenceable(8) %11, %"class.base::TimeDelta"* nonnull dereferenceable(8) %9, i32* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  %126 = icmp eq %"struct.net::OCSPVerifyResult"* %107, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = load i32, i32* %10, align 4
  %129 = getelementptr inbounds %"struct.net::OCSPVerifyResult", %"struct.net::OCSPVerifyResult"* %107, i64 0, i32 0
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.net::OCSPVerifyResult", %"struct.net::OCSPVerifyResult"* %107, i64 0, i32 1
  store i32 %125, i32* %130, align 4
  br label %131

131:                                              ; preds = %127, %123
  switch i32 %125, label %134 [
    i32 1, label %133
    i32 0, label %132
  ]

132:                                              ; preds = %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %371

133:                                              ; preds = %131
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %106, i8* %66) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %378

134:                                              ; preds = %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #8
  br label %135

135:                                              ; preds = %134, %117, %99
  %136 = phi %"class.net::ParsedCertificate"* [ %119, %134 ], [ %119, %117 ], [ null, %99 ]
  %137 = load i8, i8* %50, align 1
  %138 = and i8 %137, 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %371

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %110, i64 0, i32 20
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %229, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %110, i64 0, i32 24, i32 0, i32 0
  %147 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %146, align 8
  %148 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %110, i64 0, i32 24, i32 0, i32 1
  %149 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %148, align 8
  %150 = icmp eq %"class.base::BasicStringPiece"* %147, %149
  br i1 %150, label %229, label %151

151:                                              ; preds = %145, %224
  %152 = phi i1 [ %225, %224 ], [ undef, %145 ]
  %153 = phi i8 [ %226, %224 ], [ 0, %145 ]
  %154 = phi %"class.base::BasicStringPiece"* [ %227, %224 ], [ %147, %145 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %51) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 120, i1 false) #8
  %155 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %154, i64 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %154, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %12, i8* %156, i64 %158) #8
  %159 = load i8, i8* %52, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %221, label %161

161:                                              ; preds = %151
  %162 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #8
  %163 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %12, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %162) #8
  br i1 %163, label %164, label %221

164:                                              ; preds = %161
  br i1 %53, label %169, label %165

165:                                              ; preds = %164
  %166 = call i64 @_ZN4base9TimeTicks3NowEv() #8
  %167 = icmp sgt i64 %166, %2
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %51) #8
  br label %229

169:                                              ; preds = %165, %164
  %170 = load i8, i8* %50, align 1
  %171 = and i8 %170, 2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %221, label %173

173:                                              ; preds = %169
  br i1 %54, label %174, label %178

174:                                              ; preds = %173
  %175 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %175, label %176, label %221

176:                                              ; preds = %174
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %67) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %13, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 106, i32 2) #8
  %177 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %69, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i64 51) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %67) #8
  br label %221

178:                                              ; preds = %173
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %55) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 120, i1 false) #8
  %179 = load i8*, i8** %155, align 8
  %180 = load i64, i64* %157, align 8
  call void @_ZN3net16CreateOCSPGetURLEPKNS_17ParsedCertificateES2_N4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull sret %14, %"class.net::ParsedCertificate"* %110, %"class.net::ParsedCertificate"* %136, i8* %179, i64 %180) #8
  %181 = load i8, i8* %56, align 8, !range !2
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %178
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %55) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %51) #8
  br label %224

184:                                              ; preds = %178
  %185 = load %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)**, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*** %57, align 8
  %186 = getelementptr inbounds %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)** %185, i64 3
  %187 = load %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)** %186, align 8
  %188 = call %"class.net::CertNetFetcher::Request"* %187(%"class.net::CertNetFetcher"* nonnull %5, %class.GURL* nonnull dereferenceable(120) %14, i32 -1, i32 -1) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #8
  store i32 -1431655766, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #8
  %189 = bitcast %"class.net::CertNetFetcher::Request"* %188 to void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)***
  %190 = load void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)**, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)*, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)** %190, i64 2
  %192 = load void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)*, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)** %191, align 8
  call void %192(%"class.net::CertNetFetcher::Request"* %188, i32* nonnull %15, %"class.std::__1::vector.146"* nonnull %16) #8
  %193 = load i32, i32* %15, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %207

195:                                              ; preds = %184
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #8
  store i32 -1431655766, i32* %17, align 4
  %196 = load i8*, i8** %60, align 8
  %197 = load i64, i64* %63, align 8
  %198 = ptrtoint i8* %196 to i64
  %199 = sub i64 %197, %198
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #8
  %200 = call i64 @_ZN4base4Time3NowEv() #8
  store i64 %200, i64* %65, align 8
  %201 = call i32 @_ZN3net9CheckOCSPEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKNS_17ParsedCertificateES8_RKNS0_4TimeERKNS0_9TimeDeltaEPNS_16OCSPVerifyResult14ResponseStatusE(i8* %196, i64 %199, %"class.net::ParsedCertificate"* %110, %"class.net::ParsedCertificate"* %136, %"class.base::Time"* nonnull dereferenceable(8) %18, %"class.base::TimeDelta"* nonnull dereferenceable(8) %9, i32* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #8
  switch i32 %201, label %203 [
    i32 1, label %202
    i32 0, label %204
  ]

202:                                              ; preds = %195
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %106, i8* %66) #8
  br label %204

203:                                              ; preds = %195
  br label %204

204:                                              ; preds = %203, %202, %195
  %205 = phi i32 [ 0, %203 ], [ 1, %202 ], [ 1, %195 ]
  %206 = phi i1 [ %152, %203 ], [ false, %202 ], [ true, %195 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #8
  br label %207

207:                                              ; preds = %204, %184
  %208 = phi i32 [ %205, %204 ], [ 4, %184 ]
  %209 = phi i1 [ %206, %204 ], [ %152, %184 ]
  %210 = load i8*, i8** %60, align 8
  %211 = icmp eq i8* %210, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %207
  %213 = ptrtoint i8* %210 to i64
  store i64 %213, i64* %63, align 8
  call void @_ZdlPv(i8* nonnull %210) #9
  br label %214

214:                                              ; preds = %212, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #8
  %215 = icmp eq %"class.net::CertNetFetcher::Request"* %188, null
  br i1 %215, label %223, label %216

216:                                              ; preds = %214
  %217 = bitcast %"class.net::CertNetFetcher::Request"* %188 to void (%"class.net::CertNetFetcher::Request"*)***
  %218 = load void (%"class.net::CertNetFetcher::Request"*)**, void (%"class.net::CertNetFetcher::Request"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %218, i64 1
  %220 = load void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %219, align 8
  call void %220(%"class.net::CertNetFetcher::Request"* nonnull %188) #8
  br label %223

221:                                              ; preds = %176, %174, %169, %161, %151
  %222 = phi i8 [ 1, %176 ], [ 1, %174 ], [ 1, %169 ], [ %153, %151 ], [ %153, %161 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %51) #8
  br label %224

223:                                              ; preds = %216, %214
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %55) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %51) #8
  switch i32 %208, label %370 [
    i32 0, label %224
    i32 4, label %224
  ]

224:                                              ; preds = %223, %223, %221, %183
  %225 = phi i1 [ %152, %221 ], [ %209, %223 ], [ %209, %223 ], [ %152, %183 ]
  %226 = phi i8 [ %222, %221 ], [ 1, %223 ], [ 1, %223 ], [ 1, %183 ]
  %227 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %154, i64 1
  %228 = icmp eq %"class.base::BasicStringPiece"* %227, %149
  br i1 %228, label %229, label %151

229:                                              ; preds = %224, %168, %145, %141
  %230 = phi i8 [ 0, %141 ], [ 1, %168 ], [ 0, %145 ], [ %226, %224 ]
  %231 = phi i1 [ undef, %141 ], [ %152, %168 ], [ undef, %145 ], [ %225, %224 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 40, i1 false) #8
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %71) #8
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %72) #8
  store i8 0, i8* %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #8
  %232 = call { i8*, i64 } @_ZN3net24CrlDistributionPointsOidEv() #8
  %233 = extractvalue { i8*, i64 } %232, 0
  store i8* %233, i8** %75, align 8
  %234 = extractvalue { i8*, i64 } %232, 1
  store i64 %234, i64* %76, align 8
  %235 = call zeroext i1 @_ZNK3net17ParsedCertificate12GetExtensionERKNS_3der5InputEPNS_15ParsedExtensionE(%"class.net::ParsedCertificate"* %110, %"class.net::der::Input"* nonnull dereferenceable(16) %20, %"struct.net::ParsedExtension"* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #8
  br i1 %235, label %236, label %354

236:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #8
  %237 = call zeroext i1 @_ZN3net26ParseCrlDistributionPointsERKNS_3der5InputEPNSt3__16vectorINS_23ParsedDistributionPointENS4_9allocatorIS6_EEEE(%"class.net::der::Input"* dereferenceable(16) %72, %"class.std::__1::vector.153"* nonnull %21) #8
  br i1 %237, label %238, label %329

238:                                              ; preds = %236
  %239 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %78, align 8
  %240 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %79, align 8
  %241 = icmp eq %"struct.net::ParsedDistributionPoint"* %239, %240
  br i1 %241, label %334, label %242

242:                                              ; preds = %238, %324
  %243 = phi i1 [ %325, %324 ], [ %231, %238 ]
  %244 = phi i8 [ %326, %324 ], [ %230, %238 ]
  %245 = phi %"struct.net::ParsedDistributionPoint"* [ %327, %324 ], [ %239, %238 ]
  %246 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %245, i64 0, i32 1
  %247 = load i8, i8* %246, align 8, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %249, label %324

249:                                              ; preds = %242
  %250 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %245, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %250, align 8
  %252 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %245, i64 0, i32 0, i32 0, i32 1
  %253 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %252, align 8
  %254 = icmp eq %"class.base::BasicStringPiece"* %251, %253
  br i1 %254, label %324, label %255

255:                                              ; preds = %249, %319
  %256 = phi i1 [ %320, %319 ], [ %243, %249 ]
  %257 = phi i8 [ %321, %319 ], [ %244, %249 ]
  %258 = phi %"class.base::BasicStringPiece"* [ %322, %319 ], [ %251, %249 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %80) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 120, i1 false) #8
  %259 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %258, i64 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %258, i64 0, i32 1
  %262 = load i64, i64* %261, align 8
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %22, i8* %260, i64 %262) #8
  %263 = load i8, i8* %81, align 8, !range !2
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %316, label %265

265:                                              ; preds = %255
  %266 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #8
  %267 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %22, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %266) #8
  br i1 %267, label %268, label %316

268:                                              ; preds = %265
  br i1 %53, label %273, label %269

269:                                              ; preds = %268
  %270 = call i64 @_ZN4base9TimeTicks3NowEv() #8
  %271 = icmp sgt i64 %270, %2
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %80) #8
  br label %324

273:                                              ; preds = %269, %268
  %274 = load i8, i8* %50, align 1
  %275 = and i8 %274, 2
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %316, label %277

277:                                              ; preds = %273
  br i1 %54, label %278, label %282

278:                                              ; preds = %277
  %279 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %279, label %280, label %316

280:                                              ; preds = %278
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %89) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %23, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 188, i32 2) #8
  %281 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %91, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i64 50) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %89) #8
  br label %316

282:                                              ; preds = %277
  %283 = load %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)**, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*** %57, align 8
  %284 = getelementptr inbounds %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)** %283, i64 2
  %285 = load %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)** %284, align 8
  %286 = call %"class.net::CertNetFetcher::Request"* %285(%"class.net::CertNetFetcher"* nonnull %5, %class.GURL* nonnull dereferenceable(120) %22, i32 -1, i32 -1) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #8
  store i32 -1431655766, i32* %24, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 24, i1 false) #8
  %287 = bitcast %"class.net::CertNetFetcher::Request"* %286 to void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)***
  %288 = load void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)**, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)*** %287, align 8
  %289 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)*, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)** %288, i64 2
  %290 = load void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)*, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.146"*)** %289, align 8
  call void %290(%"class.net::CertNetFetcher::Request"* %286, i32* nonnull %24, %"class.std::__1::vector.146"* nonnull %25) #8
  %291 = load i32, i32* %24, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %302

293:                                              ; preds = %282
  %294 = load i8*, i8** %84, align 8
  %295 = load i64, i64* %86, align 8
  %296 = ptrtoint i8* %294 to i64
  %297 = sub i64 %295, %296
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #8
  %298 = call i64 @_ZN4base4Time3NowEv() #8
  store i64 %298, i64* %88, align 8
  %299 = call i32 @_ZN3net8CheckCRLEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_6vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS9_EEEEmRKNS_23ParsedDistributionPointERKNS0_4TimeERKNS0_9TimeDeltaE(i8* %294, i64 %297, %"class.std::__1::vector"* dereferenceable(24) %0, i64 %97, %"struct.net::ParsedDistributionPoint"* dereferenceable(32) %245, %"class.base::Time"* nonnull dereferenceable(8) %26, %"class.base::TimeDelta"* nonnull dereferenceable(8) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #8
  switch i32 %299, label %301 [
    i32 1, label %300
    i32 0, label %302
  ]

300:                                              ; preds = %293
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %106, i8* %66) #8
  br label %302

301:                                              ; preds = %293
  br label %302

302:                                              ; preds = %301, %300, %293, %282
  %303 = phi i32 [ 9, %282 ], [ 0, %301 ], [ 1, %300 ], [ 1, %293 ]
  %304 = phi i1 [ %256, %282 ], [ %256, %301 ], [ false, %300 ], [ true, %293 ]
  %305 = load i8*, i8** %84, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %309, label %307

307:                                              ; preds = %302
  %308 = ptrtoint i8* %305 to i64
  store i64 %308, i64* %86, align 8
  call void @_ZdlPv(i8* nonnull %305) #9
  br label %309

309:                                              ; preds = %307, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #8
  %310 = icmp eq %"class.net::CertNetFetcher::Request"* %286, null
  br i1 %310, label %318, label %311

311:                                              ; preds = %309
  %312 = bitcast %"class.net::CertNetFetcher::Request"* %286 to void (%"class.net::CertNetFetcher::Request"*)***
  %313 = load void (%"class.net::CertNetFetcher::Request"*)**, void (%"class.net::CertNetFetcher::Request"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %313, i64 1
  %315 = load void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %314, align 8
  call void %315(%"class.net::CertNetFetcher::Request"* nonnull %286) #8
  br label %318

316:                                              ; preds = %280, %278, %273, %265, %255
  %317 = phi i8 [ 1, %280 ], [ 1, %278 ], [ 1, %273 ], [ %257, %255 ], [ %257, %265 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %80) #8
  br label %319

318:                                              ; preds = %311, %309
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %80) #8
  switch i32 %303, label %329 [
    i32 0, label %319
    i32 9, label %319
  ]

319:                                              ; preds = %318, %318, %316
  %320 = phi i1 [ %256, %316 ], [ %304, %318 ], [ %304, %318 ]
  %321 = phi i8 [ %317, %316 ], [ 1, %318 ], [ 1, %318 ]
  %322 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %258, i64 1
  %323 = icmp eq %"class.base::BasicStringPiece"* %322, %253
  br i1 %323, label %324, label %255

324:                                              ; preds = %319, %272, %249, %242
  %325 = phi i1 [ %256, %272 ], [ %243, %242 ], [ %243, %249 ], [ %320, %319 ]
  %326 = phi i8 [ 1, %272 ], [ %244, %242 ], [ %244, %249 ], [ %321, %319 ]
  %327 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %245, i64 1
  %328 = icmp eq %"struct.net::ParsedDistributionPoint"* %327, %240
  br i1 %328, label %329, label %242

329:                                              ; preds = %324, %318, %236
  %330 = phi i8 [ %230, %236 ], [ 1, %318 ], [ %326, %324 ]
  %331 = phi i32 [ 0, %236 ], [ %303, %318 ], [ 0, %324 ]
  %332 = phi i1 [ %231, %236 ], [ %304, %318 ], [ %325, %324 ]
  %333 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %78, align 8
  br label %334

334:                                              ; preds = %329, %238
  %335 = phi %"struct.net::ParsedDistributionPoint"* [ %333, %329 ], [ %239, %238 ]
  %336 = phi i8 [ %330, %329 ], [ %230, %238 ]
  %337 = phi i32 [ %331, %329 ], [ 0, %238 ]
  %338 = phi i1 [ %332, %329 ], [ %231, %238 ]
  %339 = icmp eq %"struct.net::ParsedDistributionPoint"* %335, null
  br i1 %339, label %352, label %340

340:                                              ; preds = %334
  %341 = bitcast %"struct.net::ParsedDistributionPoint"* %335 to i8*
  %342 = load %"struct.net::ParsedDistributionPoint"*, %"struct.net::ParsedDistributionPoint"** %79, align 8
  %343 = icmp eq %"struct.net::ParsedDistributionPoint"* %342, %335
  br i1 %343, label %350, label %344

344:                                              ; preds = %340, %344
  %345 = phi %"struct.net::ParsedDistributionPoint"* [ %346, %344 ], [ %342, %340 ]
  %346 = getelementptr inbounds %"struct.net::ParsedDistributionPoint", %"struct.net::ParsedDistributionPoint"* %345, i64 -1
  call void @_ZN3net23ParsedDistributionPointD1Ev(%"struct.net::ParsedDistributionPoint"* %346) #8
  %347 = icmp eq %"struct.net::ParsedDistributionPoint"* %346, %335
  br i1 %347, label %348, label %344

348:                                              ; preds = %344
  %349 = load i8*, i8** %92, align 8
  br label %350

350:                                              ; preds = %348, %340
  %351 = phi i8* [ %349, %348 ], [ %341, %340 ]
  store %"struct.net::ParsedDistributionPoint"* %335, %"struct.net::ParsedDistributionPoint"** %79, align 8
  call void @_ZdlPv(i8* %351) #9
  br label %352

352:                                              ; preds = %350, %334
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #8
  %353 = icmp eq i32 %337, 0
  br i1 %353, label %354, label %369

354:                                              ; preds = %352, %229
  %355 = phi i8 [ %336, %352 ], [ %230, %229 ]
  %356 = and i8 %355, 1
  %357 = icmp eq i8 %356, 0
  %358 = load i8, i8* %50, align 1
  br i1 %357, label %359, label %362

359:                                              ; preds = %354
  %360 = and i8 %358, 4
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %366, label %365

362:                                              ; preds = %354
  %363 = and i8 %358, 8
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %366, label %365

365:                                              ; preds = %359, %362
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %371

366:                                              ; preds = %362, %359
  %367 = phi i8** [ @_ZN3net11cert_errors22kNoRevocationMechanismE, %359 ], [ @_ZN3net11cert_errors24kUnableToCheckRevocationE, %362 ]
  %368 = load i8*, i8** %367, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %106, i8* %368) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %378

369:                                              ; preds = %352
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br i1 %338, label %371, label %378

370:                                              ; preds = %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br i1 %209, label %371, label %378

371:                                              ; preds = %370, %140, %369, %132, %365, %93
  %372 = add i64 %95, 1
  %373 = load i64, i64* %36, align 8
  %374 = load i64, i64* %38, align 8
  %375 = sub i64 %373, %374
  %376 = ashr exact i64 %375, 3
  %377 = icmp ugt i64 %376, %372
  br i1 %377, label %93, label %378

378:                                              ; preds = %371, %370, %369, %34, %366, %133
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net16OCSPVerifyResultC1Ev(%"struct.net::OCSPVerifyResult"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN3net16OCSPVerifyResultD1Ev(%"struct.net::OCSPVerifyResult"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.net::CertErrors"* @_ZN3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net31CheckChainRevocationUsingCRLSetEPKNS_6CRLSetERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS3_9allocatorIS7_EEEEPNS_14CertPathErrorsE(%"class.net::CRLSet"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.net::CertPathErrors"*) local_unnamed_addr #1 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %15 = bitcast %class.scoped_refptr** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %135, label %21

21:                                               ; preds = %3
  %22 = ashr exact i64 %19, 3
  %23 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %31 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %34 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %37 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %40 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %45 = load i8*, i8** @_ZN3net11cert_errors19kCertificateRevokedE, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %53

47:                                               ; preds = %126
  %48 = load i64, i64* %15, align 8
  %49 = load i64, i64* %17, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %128, %51
  br i1 %52, label %53, label %129

53:                                               ; preds = %21, %47
  %54 = phi i64 [ %18, %21 ], [ %49, %47 ]
  %55 = phi i64 [ %22, %21 ], [ %51, %47 ]
  %56 = phi i32 [ undef, %21 ], [ %121, %47 ]
  %57 = phi i64 [ 0, %21 ], [ %128, %47 ]
  %58 = inttoptr i64 %54 to %class.scoped_refptr*
  %59 = xor i64 %57, -1
  %60 = add i64 %55, %59
  %61 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %58, i64 %60, i32 0
  %62 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %61, align 8
  %63 = icmp eq i64 %60, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  %64 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %62, i64 0, i32 6, i32 7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  %65 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %64) #8
  %66 = extractvalue { i8*, i64 } %65, 0
  %67 = extractvalue { i8*, i64 } %65, 1
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i8* %66, i64 %67) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %68 = load i8, i8* %29, align 1
  %69 = icmp slt i8 %68, 0
  %70 = load i8*, i8** %24, align 8
  %71 = select i1 %69, i8* %70, i8* %23
  store i8* %71, i8** %27, align 8
  %72 = load i64, i64* %25, align 8
  %73 = zext i8 %68 to i64
  %74 = select i1 %69, i64 %72, i64 %73
  store i64 %74, i64* %30, align 8
  %75 = call i32 @_ZNK3net6CRLSet9CheckSPKIERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CRLSet"* %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %106, label %77

77:                                               ; preds = %53
  %78 = icmp eq i64 %57, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  %79 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %62, i64 0, i32 6, i32 6
  %80 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %79) #8
  %81 = extractvalue { i8*, i64 } %80, 0
  store i8* %81, i8** %32, align 8
  %82 = extractvalue { i8*, i64 } %80, 1
  store i64 %82, i64* %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8
  %83 = load i8, i8* %29, align 1
  %84 = icmp slt i8 %83, 0
  %85 = load i8*, i8** %24, align 8
  %86 = select i1 %84, i8* %85, i8* %23
  store i8* %86, i8** %35, align 8
  %87 = load i64, i64* %25, align 8
  %88 = zext i8 %83 to i64
  %89 = select i1 %84, i64 %87, i64 %88
  store i64 %89, i64* %36, align 8
  %90 = call i32 @_ZNK3net6CRLSet12CheckSubjectERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::CRLSet"* %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  %91 = icmp eq i32 %90, 0
  %92 = or i1 %78, %91
  br i1 %92, label %106, label %93

93:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8
  %94 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %62, i64 0, i32 6, i32 1
  %95 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %94) #8
  %96 = extractvalue { i8*, i64 } %95, 0
  store i8* %96, i8** %38, align 8
  %97 = extractvalue { i8*, i64 } %95, 1
  store i64 %97, i64* %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #8
  %98 = load i8, i8* %43, align 1
  %99 = icmp slt i8 %98, 0
  %100 = load i8*, i8** %12, align 8
  %101 = select i1 %99, i8* %100, i8* %11
  store i8* %101, i8** %41, align 8
  %102 = load i64, i64* %13, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  store i64 %104, i64* %44, align 8
  %105 = call i32 @_ZNK3net6CRLSet11CheckSerialERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::CRLSet"* %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  br label %106

106:                                              ; preds = %53, %77, %93
  %107 = phi i32 [ %105, %93 ], [ %90, %77 ], [ 0, %53 ]
  %108 = load i8, i8* %43, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %111) #9
  br label %112

112:                                              ; preds = %106, %110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %23, i64 24, i1 false) #8
  store i8 0, i8* %29, align 1
  store i8 0, i8* %23, align 8
  switch i32 %107, label %118 [
    i32 0, label %113
    i32 2, label %115
  ]

113:                                              ; preds = %112
  %114 = call %"class.net::CertErrors"* @_ZN3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"* %2, i64 %60) #8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %114, i8* %45) #8
  br label %119

115:                                              ; preds = %112
  br i1 %63, label %116, label %118

116:                                              ; preds = %115
  %117 = call zeroext i1 @_ZNK3net6CRLSet9IsExpiredEv(%"class.net::CRLSet"* %0) #8
  br i1 %117, label %118, label %119

118:                                              ; preds = %115, %116, %112
  br label %119

119:                                              ; preds = %116, %118, %113
  %120 = phi i32 [ 0, %118 ], [ 1, %113 ], [ 1, %116 ]
  %121 = phi i32 [ %56, %118 ], [ 0, %113 ], [ 2, %116 ]
  %122 = load i8, i8* %29, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %125) #9
  br label %126

126:                                              ; preds = %119, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  %127 = icmp eq i32 %120, 0
  %128 = add nuw i64 %57, 1
  br i1 %127, label %47, label %129

129:                                              ; preds = %126, %47
  %130 = phi i32 [ %121, %126 ], [ 1, %47 ]
  %131 = load i8, i8* %43, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  %134 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %134) #9
  br label %135

135:                                              ; preds = %3, %129, %133
  %136 = phi i32 [ %130, %129 ], [ %130, %133 ], [ 1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  ret i32 %136
}

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

declare { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"*) local_unnamed_addr #3

declare i32 @_ZNK3net6CRLSet9CheckSPKIERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CRLSet"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

declare i32 @_ZNK3net6CRLSet12CheckSubjectERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::CRLSet"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

declare i32 @_ZNK3net6CRLSet11CheckSerialERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::CRLSet"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net6CRLSet9IsExpiredEv(%"class.net::CRLSet"*) local_unnamed_addr #3

declare i32 @_ZN3net9CheckOCSPEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKNS_17ParsedCertificateES8_RKNS0_4TimeERKNS0_9TimeDeltaEPNS_16OCSPVerifyResult14ResponseStatusE(i8*, i64, %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"*, %"class.base::Time"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8), i32*) local_unnamed_addr #3

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #3

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

declare void @_ZN3net16CreateOCSPGetURLEPKNS_17ParsedCertificateES2_N4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* sret, %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

declare zeroext i1 @_ZNK3net17ParsedCertificate12GetExtensionERKNS_3der5InputEPNS_15ParsedExtensionE(%"class.net::ParsedCertificate"*, %"class.net::der::Input"* dereferenceable(16), %"struct.net::ParsedExtension"*) local_unnamed_addr #3

declare { i8*, i64 } @_ZN3net24CrlDistributionPointsOidEv() local_unnamed_addr #3

declare zeroext i1 @_ZN3net26ParseCrlDistributionPointsERKNS_3der5InputEPNSt3__16vectorINS_23ParsedDistributionPointENS4_9allocatorIS6_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector.153"*) local_unnamed_addr #3

declare i32 @_ZN3net8CheckCRLEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_6vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS9_EEEEmRKNS_23ParsedDistributionPointERKNS0_4TimeERKNS0_9TimeDeltaE(i8*, i64, %"class.std::__1::vector"* dereferenceable(24), i64, %"struct.net::ParsedDistributionPoint"* dereferenceable(32), %"class.base::Time"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net23ParsedDistributionPointD1Ev(%"struct.net::ParsedDistributionPoint"*) unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
