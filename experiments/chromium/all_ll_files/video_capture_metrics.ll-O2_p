; ModuleID = '../../media/capture/video/video_capture_metrics.cc'
source_filename = "../../media/capture/video/video_capture_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [42 x %"struct.std::__1::pair.25"] }
%"struct.std::__1::pair.25" = type { %"class.gfx::Size", i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.media::VideoCaptureDeviceInfo" = type { %"struct.media::VideoCaptureDeviceDescriptor", %"class.std::__1::vector" }
%"struct.media::VideoCaptureDeviceDescriptor" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"struct.media::VideoCaptureControlSupport", [5 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::VideoCaptureFormat"*, %"struct.media::VideoCaptureFormat"*, %"class.std::__1::__compressed_pair.1" }
%"struct.media::VideoCaptureFormat" = type { %"class.gfx::Size", float, i32 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.media::VideoCaptureFormat"* }
%"class.base::CheckedContiguousIterator" = type { %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.base::internal::flat_tree.13" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.gfx::Size"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::allocator.11"* }
%"class.std::__1::allocator.11" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.40" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::allocator.19"* }
%"class.std::__1::allocator.19" = type { i8 }

$_ZNK4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEE15CheckComparableERKS4_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN5media16VideoPixelFormatENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN5media16VideoPixelFormatERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3gfx4SizeENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3gfx4SizeERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [51 x i8] c"../../media/capture/video/video_capture_metrics.cc\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"Device supports \00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" at \00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.5 = private unnamed_addr constant [47 x i8] c"Media.VideoCapture.Device.SupportedPixelFormat\00", align 1
@.str.6 = private unnamed_addr constant [46 x i8] c"Media.VideoCapture.Device.SupportedResolution\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@_ZN12_GLOBAL__N_112kResolutionsE = internal constant { %"struct.std::__1::array" } { %"struct.std::__1::array" { [42 x %"struct.std::__1::pair.25"] [%"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 160, i32 90 }, i32 27 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 160, i32 120 }, i32 1 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 176, i32 144 }, i32 13 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 240, i32 160 }, i32 2 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 320, i32 176 }, i32 28 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 320, i32 180 }, i32 29 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 320, i32 240 }, i32 3 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 432, i32 240 }, i32 4 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 480, i32 270 }, i32 30 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 352, i32 288 }, i32 14 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 544, i32 288 }, i32 31 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 480, i32 320 }, i32 5 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 640, i32 360 }, i32 15 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 752, i32 416 }, i32 32 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 800, i32 448 }, i32 34 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 640, i32 480 }, i32 6 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 720, i32 480 }, i32 7 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 864, i32 480 }, i32 33 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 960, i32 540 }, i32 16 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 960, i32 544 }, i32 35 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1024, i32 576 }, i32 8 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 800, i32 600 }, i32 9 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1184, i32 656 }, i32 36 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 960, i32 720 }, i32 17 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1280, i32 720 }, i32 18 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1392, i32 768 }, i32 37 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1504, i32 832 }, i32 38 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1600, i32 896 }, i32 39 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1600, i32 900 }, i32 19 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1280, i32 960 }, i32 10 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1712, i32 960 }, i32 40 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1792, i32 1008 }, i32 41 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1920, i32 1080 }, i32 20 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 1600, i32 1200 }, i32 11 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 2560, i32 1440 }, i32 21 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 2048, i32 1536 }, i32 12 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 3200, i32 1800 }, i32 22 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 2592, i32 1944 }, i32 42 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 3840, i32 2160 }, i32 23 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 4096, i32 2160 }, i32 24 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 5120, i32 2880 }, i32 25 }, %"struct.std::__1::pair.25" { %"class.gfx::Size" { i32 7680, i32 4320 }, i32 26 }] } }, align 4
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23LogCaptureDeviceMetricsEN4base4spanIKNS_22VideoCaptureDeviceInfoELm18446744073709551615EEE(i64, %"struct.media::VideoCaptureDeviceInfo"*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::internal::flat_tree", align 8
  %6 = alloca %"class.base::internal::flat_tree.13", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca i32, align 4
  %11 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.media::VideoCaptureDeviceInfo", %"struct.media::VideoCaptureDeviceInfo"* %1, i64 %0
  %14 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"struct.media::VideoCaptureDeviceInfo"* %1, %"struct.media::VideoCaptureDeviceInfo"* %1, %"struct.media::VideoCaptureDeviceInfo"* %13) #9
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"struct.media::VideoCaptureDeviceInfo"* %1, %"struct.media::VideoCaptureDeviceInfo"* %13, %"struct.media::VideoCaptureDeviceInfo"* %13) #9
  call void @_ZNK4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #9
  %18 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %12, align 8
  %19 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %16, align 8
  %20 = icmp eq %"struct.media::VideoCaptureDeviceInfo"* %18, %19
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.base::internal::flat_tree"* %5 to i8*
  %23 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.base::internal::flat_tree.13"* %6 to i8*
  %26 = getelementptr inbounds %"class.base::internal::flat_tree.13", %"class.base::internal::flat_tree.13"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.base::internal::flat_tree.13", %"class.base::internal::flat_tree.13"* %6, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.logging::LogMessage"* %7 to i8*
  %29 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %29 to %"class.std::__1::basic_ostream"*
  %31 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast i32* %10 to i8*
  %42 = bitcast i32** %24 to i64*
  %43 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0
  %44 = bitcast %"class.gfx::Size"** %27 to i64*
  %45 = getelementptr inbounds %"class.base::internal::flat_tree.13", %"class.base::internal::flat_tree.13"* %6, i64 0, i32 0
  br label %47

46:                                               ; preds = %66, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  ret void

47:                                               ; preds = %21, %66
  %48 = call dereferenceable(120) %"struct.media::VideoCaptureDeviceInfo"* @_ZNK4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #9
  %49 = getelementptr inbounds %"struct.media::VideoCaptureDeviceInfo", %"struct.media::VideoCaptureDeviceInfo"* %48, i64 0, i32 1, i32 0, i32 0
  %50 = load %"struct.media::VideoCaptureFormat"*, %"struct.media::VideoCaptureFormat"** %49, align 8
  %51 = getelementptr inbounds %"struct.media::VideoCaptureDeviceInfo", %"struct.media::VideoCaptureDeviceInfo"* %48, i64 0, i32 1, i32 0, i32 1
  %52 = load %"struct.media::VideoCaptureFormat"*, %"struct.media::VideoCaptureFormat"** %51, align 8
  %53 = icmp eq %"struct.media::VideoCaptureFormat"* %50, %52
  br i1 %53, label %60, label %71

54:                                               ; preds = %357
  %55 = load %"class.gfx::Size"*, %"class.gfx::Size"** %26, align 8
  %56 = icmp eq %"class.gfx::Size"* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = bitcast %"class.gfx::Size"* %55 to i8*
  %59 = ptrtoint %"class.gfx::Size"* %55 to i64
  store i64 %59, i64* %44, align 8
  call void @_ZdlPv(i8* %58) #10
  br label %60

60:                                               ; preds = %47, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #9
  %61 = load i32*, i32** %23, align 8
  %62 = icmp eq i32* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = ptrtoint i32* %61 to i64
  store i64 %64, i64* %42, align 8
  %65 = bitcast i32* %61 to i8*
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  %67 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %3)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #9
  %68 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %12, align 8
  %69 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %16, align 8
  %70 = icmp eq %"struct.media::VideoCaptureDeviceInfo"* %68, %69
  br i1 %70, label %46, label %47

71:                                               ; preds = %47, %357
  %72 = phi %"struct.media::VideoCaptureFormat"* [ %358, %357 ], [ %50, %47 ]
  %73 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i64 51) #9
  %74 = icmp sgt i32 %73, 1
  br i1 %74, label %75, label %166

75:                                               ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %28) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 158, i32 -2) #9
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %77 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 2
  %78 = load i32, i32* %77, align 4
  call void @_ZN5media24VideoPixelFormatToStringENS_16VideoPixelFormatE(%"class.std::__1::basic_string"* nonnull sret %8, i32 %78) #9
  %79 = load i8, i8* %33, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i8*, i8** %34, align 8
  %82 = load i64, i64* %35, align 8
  %83 = zext i8 %79 to i64
  %84 = select i1 %80, i8* %81, i8* %31
  %85 = select i1 %80, i64 %82, i64 %83
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* %84, i64 %85) #9
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #9
  %88 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0
  call void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.gfx::Size"* %88) #9
  %89 = load i8, i8* %38, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i8*, i8** %39, align 8
  %92 = load i64, i64* %40, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i8* %91, i8* %36
  %95 = select i1 %90, i64 %92, i64 %93
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %87, i8* %94, i64 %95) #9
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #9
  %98 = bitcast %"struct.media::VideoCaptureFormat"* %72 to i64*
  %99 = load i64, i64* %98, align 4
  %100 = trunc i64 %99 to i32
  %101 = lshr i64 %99, 32
  %102 = trunc i64 %101 to i32
  %103 = icmp slt i32 %100, %102
  %104 = icmp sgt i32 %100, 0
  %105 = select i1 %104, i32 %100, i32 0
  %106 = select i1 %103, i32 %105, i32 %100
  br label %107

107:                                              ; preds = %125, %75
  %108 = phi i64 [ 42, %75 ], [ %127, %125 ]
  %109 = phi %"struct.std::__1::pair.25"* [ getelementptr inbounds ({ %"struct.std::__1::array" }, { %"struct.std::__1::array" }* @_ZN12_GLOBAL__N_112kResolutionsE, i64 0, i32 0, i32 0, i64 0), %75 ], [ %126, %125 ]
  %110 = lshr i64 %108, 1
  %111 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %109, i64 %110
  %112 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %109, i64 %110, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp slt i32 %113, %102
  br i1 %114, label %121, label %115

115:                                              ; preds = %107
  %116 = icmp eq i32 %113, %102
  br i1 %116, label %117, label %125

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %111, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp slt i32 %119, %106
  br i1 %120, label %121, label %125

121:                                              ; preds = %117, %107
  %122 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %111, i64 1
  %123 = xor i64 %110, -1
  %124 = add i64 %108, %123
  br label %125

125:                                              ; preds = %121, %117, %115
  %126 = phi %"struct.std::__1::pair.25"* [ %122, %121 ], [ %109, %117 ], [ %109, %115 ]
  %127 = phi i64 [ %124, %121 ], [ %110, %117 ], [ %110, %115 ]
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %107

129:                                              ; preds = %125
  %130 = ptrtoint %"struct.std::__1::pair.25"* %126 to i64
  %131 = icmp eq %"struct.std::__1::pair.25"* %126, getelementptr inbounds ({ %"struct.std::__1::array" }, { %"struct.std::__1::array" }* @_ZN12_GLOBAL__N_112kResolutionsE, i64 1, i32 0, i32 0, i64 0)
  br i1 %131, label %152, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %126, i64 0, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, %102
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = icmp eq i32 %134, %102
  br i1 %137, label %138, label %142

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %126, i64 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp slt i32 %106, %140
  br i1 %141, label %145, label %142

142:                                              ; preds = %138, %136
  %143 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %126, i64 1
  %144 = ptrtoint %"struct.std::__1::pair.25"* %143 to i64
  br label %145

145:                                              ; preds = %142, %138, %132
  %146 = phi i64 [ %144, %142 ], [ %130, %138 ], [ %130, %132 ]
  %147 = inttoptr i64 %146 to %"struct.std::__1::pair.25"*
  %148 = icmp eq %"struct.std::__1::pair.25"* %126, %147
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %126, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  br label %152

152:                                              ; preds = %129, %145, %149
  %153 = phi i32 [ %151, %149 ], [ 0, %145 ], [ 0, %129 ]
  %154 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %97, i32 %153) #9
  %155 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  %156 = load i8, i8* %38, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %152
  %159 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %159) #10
  br label %160

160:                                              ; preds = %152, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #9
  %161 = load i8, i8* %33, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %160
  %164 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %164) #10
  br label %165

165:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %28) #9
  br label %166

166:                                              ; preds = %71, %165
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #9
  %167 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 2
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %10, align 4
  %169 = load i32*, i32** %23, align 8
  %170 = load i64, i64* %42, align 8
  %171 = ptrtoint i32* %169 to i64
  %172 = sub i64 %170, %171
  %173 = icmp eq i64 %172, 0
  %174 = inttoptr i64 %170 to i32*
  br i1 %173, label %190, label %175

175:                                              ; preds = %166
  %176 = ashr exact i64 %172, 2
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i32* [ %169, %175 ], [ %188, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %187, %177 ]
  %180 = lshr i64 %179, 1
  %181 = getelementptr inbounds i32, i32* %178, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = icmp slt i32 %182, %168
  %184 = getelementptr inbounds i32, i32* %181, i64 1
  %185 = xor i64 %180, -1
  %186 = add i64 %179, %185
  %187 = select i1 %183, i64 %186, i64 %180
  %188 = select i1 %183, i32* %184, i32* %178
  %189 = icmp eq i64 %187, 0
  br i1 %189, label %190, label %177

190:                                              ; preds = %177, %166
  %191 = phi i32* [ %169, %166 ], [ %188, %177 ]
  %192 = icmp eq i32* %191, %174
  br i1 %192, label %196, label %193

193:                                              ; preds = %190
  %194 = load i32, i32* %191, align 4
  %195 = icmp slt i32 %168, %194
  br i1 %195, label %196, label %199

196:                                              ; preds = %193, %190
  %197 = call i32* @_ZNSt3__16vectorIN5media16VideoPixelFormatENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.6"* nonnull %43, i32* %191, i32* nonnull dereferenceable(4) %10) #9
  %198 = load i32, i32* %10, align 4
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0), i32 %198, i32 33) #9
  br label %199

199:                                              ; preds = %193, %196
  %200 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0
  %201 = load %"class.gfx::Size"*, %"class.gfx::Size"** %26, align 8
  %202 = load i64, i64* %44, align 8
  %203 = ptrtoint %"class.gfx::Size"* %201 to i64
  %204 = sub i64 %202, %203
  %205 = icmp eq i64 %204, 0
  %206 = inttoptr i64 %202 to %"class.gfx::Size"*
  br i1 %205, label %235, label %207

207:                                              ; preds = %199
  %208 = ashr exact i64 %204, 3
  %209 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0, i32 0
  %212 = load i32, i32* %211, align 4
  br label %213

213:                                              ; preds = %231, %207
  %214 = phi %"class.gfx::Size"* [ %201, %207 ], [ %233, %231 ]
  %215 = phi i64 [ %208, %207 ], [ %232, %231 ]
  %216 = lshr i64 %215, 1
  %217 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %214, i64 %216
  %218 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %214, i64 %216, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp slt i32 %219, %210
  br i1 %220, label %227, label %221

221:                                              ; preds = %213
  %222 = icmp eq i32 %219, %210
  br i1 %222, label %223, label %231

223:                                              ; preds = %221
  %224 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = icmp slt i32 %225, %212
  br i1 %226, label %227, label %231

227:                                              ; preds = %223, %213
  %228 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %217, i64 1
  %229 = xor i64 %216, -1
  %230 = add i64 %215, %229
  br label %231

231:                                              ; preds = %227, %223, %221
  %232 = phi i64 [ %230, %227 ], [ %216, %223 ], [ %216, %221 ]
  %233 = phi %"class.gfx::Size"* [ %228, %227 ], [ %214, %223 ], [ %214, %221 ]
  %234 = icmp eq i64 %232, 0
  br i1 %234, label %235, label %213

235:                                              ; preds = %231, %199
  %236 = phi %"class.gfx::Size"* [ %201, %199 ], [ %233, %231 ]
  %237 = icmp eq %"class.gfx::Size"* %236, %206
  br i1 %237, label %252, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %236, i64 0, i32 1
  %242 = load i32, i32* %241, align 4
  %243 = icmp slt i32 %240, %242
  br i1 %243, label %252, label %244

244:                                              ; preds = %238
  %245 = icmp eq i32 %240, %242
  br i1 %245, label %246, label %357

246:                                              ; preds = %244
  %247 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %236, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  %251 = icmp slt i32 %248, %250
  br i1 %251, label %252, label %357

252:                                              ; preds = %246, %238, %235
  br i1 %205, label %281, label %253

253:                                              ; preds = %252
  %254 = ashr exact i64 %204, 3
  %255 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0, i32 1
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0, i32 0
  %258 = load i32, i32* %257, align 4
  br label %259

259:                                              ; preds = %277, %253
  %260 = phi %"class.gfx::Size"* [ %201, %253 ], [ %279, %277 ]
  %261 = phi i64 [ %254, %253 ], [ %278, %277 ]
  %262 = lshr i64 %261, 1
  %263 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %260, i64 %262
  %264 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %260, i64 %262, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = icmp slt i32 %265, %256
  br i1 %266, label %273, label %267

267:                                              ; preds = %259
  %268 = icmp eq i32 %265, %256
  br i1 %268, label %269, label %277

269:                                              ; preds = %267
  %270 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  %272 = icmp slt i32 %271, %258
  br i1 %272, label %273, label %277

273:                                              ; preds = %269, %259
  %274 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %263, i64 1
  %275 = xor i64 %262, -1
  %276 = add i64 %261, %275
  br label %277

277:                                              ; preds = %273, %269, %267
  %278 = phi i64 [ %276, %273 ], [ %262, %269 ], [ %262, %267 ]
  %279 = phi %"class.gfx::Size"* [ %274, %273 ], [ %260, %269 ], [ %260, %267 ]
  %280 = icmp eq i64 %278, 0
  br i1 %280, label %281, label %259

281:                                              ; preds = %277, %252
  %282 = phi %"class.gfx::Size"* [ %201, %252 ], [ %279, %277 ]
  %283 = icmp eq %"class.gfx::Size"* %282, %206
  br i1 %283, label %298, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %282, i64 0, i32 1
  %288 = load i32, i32* %287, align 4
  %289 = icmp slt i32 %286, %288
  br i1 %289, label %298, label %290

290:                                              ; preds = %284
  %291 = icmp eq i32 %286, %288
  br i1 %291, label %292, label %300

292:                                              ; preds = %290
  %293 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 0, i32 0, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %282, i64 0, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = icmp slt i32 %294, %296
  br i1 %297, label %298, label %300

298:                                              ; preds = %292, %284, %281
  %299 = call %"class.gfx::Size"* @_ZNSt3__16vectorIN3gfx4SizeENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.14"* nonnull %45, %"class.gfx::Size"* %282, %"class.gfx::Size"* dereferenceable(8) %200) #9
  br label %300

300:                                              ; preds = %290, %292, %298
  %301 = bitcast %"struct.media::VideoCaptureFormat"* %72 to i64*
  %302 = load i64, i64* %301, align 4
  %303 = trunc i64 %302 to i32
  %304 = lshr i64 %302, 32
  %305 = trunc i64 %304 to i32
  %306 = icmp slt i32 %303, %305
  %307 = icmp sgt i32 %303, 0
  %308 = select i1 %307, i32 %303, i32 0
  %309 = select i1 %306, i32 %308, i32 %303
  br label %310

310:                                              ; preds = %328, %300
  %311 = phi i64 [ 42, %300 ], [ %330, %328 ]
  %312 = phi %"struct.std::__1::pair.25"* [ getelementptr inbounds ({ %"struct.std::__1::array" }, { %"struct.std::__1::array" }* @_ZN12_GLOBAL__N_112kResolutionsE, i64 0, i32 0, i32 0, i64 0), %300 ], [ %329, %328 ]
  %313 = lshr i64 %311, 1
  %314 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %312, i64 %313
  %315 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %312, i64 %313, i32 0, i32 1
  %316 = load i32, i32* %315, align 4
  %317 = icmp slt i32 %316, %305
  br i1 %317, label %324, label %318

318:                                              ; preds = %310
  %319 = icmp eq i32 %316, %305
  br i1 %319, label %320, label %328

320:                                              ; preds = %318
  %321 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %314, i64 0, i32 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = icmp slt i32 %322, %309
  br i1 %323, label %324, label %328

324:                                              ; preds = %320, %310
  %325 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %314, i64 1
  %326 = xor i64 %313, -1
  %327 = add i64 %311, %326
  br label %328

328:                                              ; preds = %324, %320, %318
  %329 = phi %"struct.std::__1::pair.25"* [ %325, %324 ], [ %312, %320 ], [ %312, %318 ]
  %330 = phi i64 [ %327, %324 ], [ %313, %320 ], [ %313, %318 ]
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %310

332:                                              ; preds = %328
  %333 = ptrtoint %"struct.std::__1::pair.25"* %329 to i64
  %334 = icmp eq %"struct.std::__1::pair.25"* %329, getelementptr inbounds ({ %"struct.std::__1::array" }, { %"struct.std::__1::array" }* @_ZN12_GLOBAL__N_112kResolutionsE, i64 1, i32 0, i32 0, i64 0)
  br i1 %334, label %355, label %335

335:                                              ; preds = %332
  %336 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %329, i64 0, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = icmp sgt i32 %337, %305
  br i1 %338, label %348, label %339

339:                                              ; preds = %335
  %340 = icmp eq i32 %337, %305
  br i1 %340, label %341, label %345

341:                                              ; preds = %339
  %342 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %329, i64 0, i32 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = icmp slt i32 %309, %343
  br i1 %344, label %348, label %345

345:                                              ; preds = %341, %339
  %346 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %329, i64 1
  %347 = ptrtoint %"struct.std::__1::pair.25"* %346 to i64
  br label %348

348:                                              ; preds = %345, %341, %335
  %349 = phi i64 [ %347, %345 ], [ %333, %341 ], [ %333, %335 ]
  %350 = inttoptr i64 %349 to %"struct.std::__1::pair.25"*
  %351 = icmp eq %"struct.std::__1::pair.25"* %329, %350
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %329, i64 0, i32 1
  %354 = load i32, i32* %353, align 4
  br label %355

355:                                              ; preds = %332, %348, %352
  %356 = phi i32 [ %354, %352 ], [ 0, %348 ], [ 0, %332 ]
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6, i64 0, i64 0), i32 %356, i32 43) #9
  br label %357

357:                                              ; preds = %246, %244, %355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #9
  %358 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %72, i64 1
  %359 = icmp eq %"struct.media::VideoCaptureFormat"* %358, %52
  br i1 %359, label %54, label %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(120) %"struct.media::VideoCaptureDeviceInfo"* @_ZNK4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %7, align 8
  %11 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %8, align 8
  %12 = icmp eq %"struct.media::VideoCaptureDeviceInfo"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %17 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %26 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %7, align 8
  ret %"struct.media::VideoCaptureDeviceInfo"* %26
}

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare void @_ZN5media24VideoPixelFormatToStringENS_16VideoPixelFormatE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Size"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %7, align 8
  %11 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %8, align 8
  %12 = icmp eq %"struct.media::VideoCaptureDeviceInfo"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %17 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %26 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %7, align 8
  %27 = getelementptr inbounds %"struct.media::VideoCaptureDeviceInfo", %"struct.media::VideoCaptureDeviceInfo"* %26, i64 1
  store %"struct.media::VideoCaptureDeviceInfo"* %27, %"struct.media::VideoCaptureDeviceInfo"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.media::VideoCaptureDeviceInfo"*, align 8
  %8 = alloca %"struct.media::VideoCaptureDeviceInfo"*, align 8
  %9 = alloca %"struct.media::VideoCaptureDeviceInfo"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.media::VideoCaptureDeviceInfo"* %1, %"struct.media::VideoCaptureDeviceInfo"** %7, align 8
  store %"struct.media::VideoCaptureDeviceInfo"* %2, %"struct.media::VideoCaptureDeviceInfo"** %8, align 8
  store %"struct.media::VideoCaptureDeviceInfo"* %3, %"struct.media::VideoCaptureDeviceInfo"** %9, align 8
  %14 = ptrtoint %"struct.media::VideoCaptureDeviceInfo"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.media::VideoCaptureDeviceInfo"* %2 to i64
  %18 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.media::VideoCaptureDeviceInfo"* %3 to i64
  %21 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.media::VideoCaptureDeviceInfo"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %30 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %29, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %8, align 8
  %43 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %9, align 8
  %44 = icmp ugt %"struct.media::VideoCaptureDeviceInfo"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %49 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* %48, i8* %50) #9
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #9
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5media22VideoCaptureDeviceInfoEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %11, align 8
  %15 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %12, align 8
  %16 = icmp eq %"struct.media::VideoCaptureDeviceInfo"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %20, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %32, align 8
  %36 = load %"struct.media::VideoCaptureDeviceInfo"*, %"struct.media::VideoCaptureDeviceInfo"** %33, align 8
  %37 = icmp eq %"struct.media::VideoCaptureDeviceInfo"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %42 = bitcast %"struct.media::VideoCaptureDeviceInfo"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5media22VideoCaptureDeviceInfoEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* %41, i8* %43) #9
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #9
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #9
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIN5media16VideoPixelFormatENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.6"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !3
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !3
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !6, !noalias !3
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !6, !noalias !3
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !3
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !3
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !6, !noalias !3
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !6, !noalias !3
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !3
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !3
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !6, !noalias !3
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !6, !noalias !3
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !3
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !3
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !6, !noalias !3
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !6, !noalias !3
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !8

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !3
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !3
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !6, !noalias !3
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !6, !noalias !3
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !10

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #9
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !12

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #9
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #11
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.11"** %165 to %"class.std::__1::__compressed_pair.8"**
  store %"class.std::__1::__compressed_pair.8"* %159, %"class.std::__1::__compressed_pair.8"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.11"** %165 to %"class.std::__1::__compressed_pair.8"**
  store %"class.std::__1::__compressed_pair.8"* %159, %"class.std::__1::__compressed_pair.8"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #11
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #10
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIN5media16VideoPixelFormatERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #9
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !13

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #10
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #9
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN5media16VideoPixelFormatERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #9
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #10
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !14
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !14
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !17, !noalias !14
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !17, !noalias !14
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !14
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !14
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !17, !noalias !14
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !17, !noalias !14
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !14
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !14
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !17, !noalias !14
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !17, !noalias !14
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !14
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !14
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !17, !noalias !14
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !17, !noalias !14
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !19

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !14
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !14
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !17, !noalias !14
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !17, !noalias !14
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !20

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !21

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !22

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #10
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gfx::Size"* @_ZNSt3__16vectorIN3gfx4SizeENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.14"*, %"class.gfx::Size"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Size"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.40", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.gfx::Size"*, %"class.gfx::Size"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.gfx::Size"*, %"class.gfx::Size"** %9, align 8
  %11 = icmp ult %"class.gfx::Size"* %8, %10
  %12 = ptrtoint %"class.gfx::Size"* %8 to i64
  %13 = ptrtoint %"class.gfx::Size"* %10 to i64
  br i1 %11, label %14, label %164

14:                                               ; preds = %3
  %15 = icmp eq %"class.gfx::Size"* %8, %1
  %16 = bitcast %"class.gfx::Size"* %2 to i64*
  br i1 %15, label %17, label %23

17:                                               ; preds = %14
  %18 = bitcast %"class.gfx::Size"* %1 to i64*
  %19 = load i64, i64* %16, align 4
  store i64 %19, i64* %18, align 4
  %20 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 1
  %21 = ptrtoint %"class.gfx::Size"* %20 to i64
  %22 = bitcast %"class.gfx::Size"** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %320

23:                                               ; preds = %14
  %24 = load i64, i64* %16, align 4
  %25 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 1
  %26 = ptrtoint %"class.gfx::Size"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 %28
  %30 = bitcast %"class.gfx::Size"** %7 to i64*
  %31 = icmp ult %"class.gfx::Size"* %29, %8
  br i1 %31, label %32, label %145

32:                                               ; preds = %23
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %33, i32 0
  %35 = bitcast i32* %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = icmp ult i64 %40, 4
  br i1 %41, label %42, label %45

42:                                               ; preds = %140, %45, %32
  %43 = phi %"class.gfx::Size"* [ %8, %45 ], [ %8, %32 ], [ %63, %140 ]
  %44 = phi %"class.gfx::Size"* [ %29, %45 ], [ %29, %32 ], [ %64, %140 ]
  br label %153

45:                                               ; preds = %32
  %46 = sub nsw i64 0, %28
  %47 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %46, i32 0
  %48 = bitcast i32* %47 to i8*
  %49 = xor i64 %4, -1
  %50 = getelementptr i8, i8* %48, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %53
  %55 = add nsw i64 %28, %52
  %56 = add nsw i64 %55, 1
  %57 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %1, i64 %56
  %58 = icmp ult %"class.gfx::Size"* %8, %57
  %59 = icmp ult %"class.gfx::Size"* %29, %54
  %60 = and i1 %58, %59
  br i1 %60, label %42, label %61

61:                                               ; preds = %45
  %62 = and i64 %40, 4611686018427387900
  %63 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %62
  %64 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %29, i64 %62
  %65 = add nsw i64 %62, -4
  %66 = lshr exact i64 %65, 2
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 12
  br i1 %69, label %121, label %70

70:                                               ; preds = %61
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %73
  %76 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %29, i64 %73
  %77 = bitcast %"class.gfx::Size"* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 4, !alias.scope !23
  %79 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %76, i64 2
  %80 = bitcast %"class.gfx::Size"* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 4, !alias.scope !23
  %82 = bitcast %"class.gfx::Size"* %75 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %82, align 4, !alias.scope !26, !noalias !23
  %83 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %75, i64 2
  %84 = bitcast %"class.gfx::Size"* %83 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %84, align 4, !alias.scope !26, !noalias !23
  %85 = or i64 %73, 4
  %86 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %85
  %87 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %29, i64 %85
  %88 = bitcast %"class.gfx::Size"* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 4, !alias.scope !23
  %90 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %87, i64 2
  %91 = bitcast %"class.gfx::Size"* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 4, !alias.scope !23
  %93 = bitcast %"class.gfx::Size"* %86 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %93, align 4, !alias.scope !26, !noalias !23
  %94 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %86, i64 2
  %95 = bitcast %"class.gfx::Size"* %94 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %95, align 4, !alias.scope !26, !noalias !23
  %96 = or i64 %73, 8
  %97 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %96
  %98 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %29, i64 %96
  %99 = bitcast %"class.gfx::Size"* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 4, !alias.scope !23
  %101 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %98, i64 2
  %102 = bitcast %"class.gfx::Size"* %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 4, !alias.scope !23
  %104 = bitcast %"class.gfx::Size"* %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %104, align 4, !alias.scope !26, !noalias !23
  %105 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %97, i64 2
  %106 = bitcast %"class.gfx::Size"* %105 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %106, align 4, !alias.scope !26, !noalias !23
  %107 = or i64 %73, 12
  %108 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %107
  %109 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %29, i64 %107
  %110 = bitcast %"class.gfx::Size"* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 4, !alias.scope !23
  %112 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %109, i64 2
  %113 = bitcast %"class.gfx::Size"* %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 4, !alias.scope !23
  %115 = bitcast %"class.gfx::Size"* %108 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %115, align 4, !alias.scope !26, !noalias !23
  %116 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %108, i64 2
  %117 = bitcast %"class.gfx::Size"* %116 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %117, align 4, !alias.scope !26, !noalias !23
  %118 = add i64 %73, 16
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !28

121:                                              ; preds = %72, %61
  %122 = phi i64 [ 0, %61 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %125
  %128 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %29, i64 %125
  %129 = bitcast %"class.gfx::Size"* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 4, !alias.scope !23
  %131 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %128, i64 2
  %132 = bitcast %"class.gfx::Size"* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 4, !alias.scope !23
  %134 = bitcast %"class.gfx::Size"* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 4, !alias.scope !26, !noalias !23
  %135 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %127, i64 2
  %136 = bitcast %"class.gfx::Size"* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 4, !alias.scope !26, !noalias !23
  %137 = add i64 %125, 4
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !29

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %40, %62
  br i1 %141, label %142, label %42

142:                                              ; preds = %153, %140
  %143 = phi %"class.gfx::Size"* [ %63, %140 ], [ %160, %153 ]
  %144 = ptrtoint %"class.gfx::Size"* %143 to i64
  br label %145

145:                                              ; preds = %142, %23
  %146 = phi i64 [ %144, %142 ], [ %12, %23 ]
  store i64 %146, i64* %30, align 8
  %147 = icmp eq i64 %27, 0
  br i1 %147, label %162, label %148

148:                                              ; preds = %145
  %149 = sub nsw i64 0, %28
  %150 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %8, i64 %149
  %151 = bitcast %"class.gfx::Size"* %150 to i8*
  %152 = bitcast %"class.gfx::Size"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %151, i8* align 4 %152, i64 %27, i1 false) #9
  br label %162

153:                                              ; preds = %42, %153
  %154 = phi %"class.gfx::Size"* [ %160, %153 ], [ %43, %42 ]
  %155 = phi %"class.gfx::Size"* [ %159, %153 ], [ %44, %42 ]
  %156 = bitcast %"class.gfx::Size"* %155 to i64*
  %157 = bitcast %"class.gfx::Size"* %154 to i64*
  %158 = load i64, i64* %156, align 4
  store i64 %158, i64* %157, align 4
  %159 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %155, i64 1
  %160 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %154, i64 1
  %161 = icmp ult %"class.gfx::Size"* %159, %8
  br i1 %161, label %153, label %142, !llvm.loop !30

162:                                              ; preds = %145, %148
  %163 = bitcast %"class.gfx::Size"* %1 to i64*
  store i64 %24, i64* %163, align 4
  br label %320

164:                                              ; preds = %3
  %165 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2
  %166 = bitcast %"struct.std::__1::__split_buffer.40"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %166) #9
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %5, i64 0, i32 0
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %5, i64 0, i32 1
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %5, i64 0, i32 2
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %5, i64 0, i32 3, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %5, i64 0, i32 3, i32 1, i32 0
  %172 = bitcast %"class.gfx::Size"** %7 to i64*
  %173 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %174 = bitcast %"struct.std::__1::__split_buffer.40"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 40, i1 false)
  %175 = load i64, i64* %173, align 8
  %176 = sub i64 %12, %175
  %177 = ashr exact i64 %176, 3
  %178 = add nsw i64 %177, 1
  %179 = icmp ugt i64 %178, 2305843009213693951
  br i1 %179, label %180, label %182

180:                                              ; preds = %164
  %181 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %181) #11
  unreachable

182:                                              ; preds = %164
  %183 = bitcast %"class.gfx::Size"** %9 to i64*
  %184 = sub i64 %13, %175
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, 1152921504606846975
  br i1 %186, label %191, label %187

187:                                              ; preds = %182
  %188 = sub i64 %4, %175
  %189 = ashr exact i64 %188, 3
  store %"class.gfx::Size"* null, %"class.gfx::Size"** %170, align 8
  %190 = bitcast %"class.std::__1::allocator.19"** %171 to %"class.std::__1::__compressed_pair.16"**
  store %"class.std::__1::__compressed_pair.16"* %165, %"class.std::__1::__compressed_pair.16"** %190, align 8
  br label %202

191:                                              ; preds = %182
  %192 = ashr exact i64 %184, 2
  %193 = icmp ult i64 %192, %178
  %194 = select i1 %193, i64 %178, i64 %192
  %195 = sub i64 %4, %175
  %196 = ashr exact i64 %195, 3
  store %"class.gfx::Size"* null, %"class.gfx::Size"** %170, align 8
  %197 = bitcast %"class.std::__1::allocator.19"** %171 to %"class.std::__1::__compressed_pair.16"**
  store %"class.std::__1::__compressed_pair.16"* %165, %"class.std::__1::__compressed_pair.16"** %197, align 8
  %198 = icmp eq i64 %194, 0
  br i1 %198, label %208, label %199

199:                                              ; preds = %191
  %200 = icmp ugt i64 %194, 2305843009213693951
  br i1 %200, label %201, label %202

201:                                              ; preds = %199
  tail call void @abort() #11
  unreachable

202:                                              ; preds = %187, %199
  %203 = phi i64 [ 2305843009213693951, %187 ], [ %194, %199 ]
  %204 = phi i64 [ %189, %187 ], [ %196, %199 ]
  %205 = shl i64 %203, 3
  %206 = tail call i8* @_Znwm(i64 %205) #10
  %207 = bitcast i8* %206 to %"class.gfx::Size"*
  br label %208

208:                                              ; preds = %191, %202
  %209 = phi i64 [ %204, %202 ], [ %196, %191 ]
  %210 = phi i64 [ %203, %202 ], [ 0, %191 ]
  %211 = phi %"class.gfx::Size"* [ %207, %202 ], [ null, %191 ]
  store %"class.gfx::Size"* %211, %"class.gfx::Size"** %167, align 8
  %212 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %211, i64 %209
  store %"class.gfx::Size"* %212, %"class.gfx::Size"** %169, align 8
  store %"class.gfx::Size"* %212, %"class.gfx::Size"** %168, align 8
  %213 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %211, i64 %210
  store %"class.gfx::Size"* %213, %"class.gfx::Size"** %170, align 8
  call void @_ZNSt3__114__split_bufferIN3gfx4SizeERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.40"* nonnull %5, %"class.gfx::Size"* dereferenceable(8) %2)
  %214 = load %"class.gfx::Size"*, %"class.gfx::Size"** %168, align 8
  %215 = load %"class.gfx::Size"*, %"class.gfx::Size"** %6, align 8
  %216 = ptrtoint %"class.gfx::Size"* %215 to i64
  %217 = sub i64 %4, %216
  %218 = ashr exact i64 %217, 3
  %219 = sub nsw i64 0, %218
  %220 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %214, i64 %219
  store %"class.gfx::Size"* %220, %"class.gfx::Size"** %168, align 8
  %221 = icmp sgt i64 %217, 0
  br i1 %221, label %222, label %225

222:                                              ; preds = %208
  %223 = bitcast %"class.gfx::Size"* %220 to i8*
  %224 = bitcast %"class.gfx::Size"* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %223, i8* align 4 %224, i64 %217, i1 false) #9
  br label %225

225:                                              ; preds = %222, %208
  %226 = load %"class.gfx::Size"*, %"class.gfx::Size"** %7, align 8
  %227 = icmp eq %"class.gfx::Size"* %226, %1
  br i1 %227, label %228, label %232

228:                                              ; preds = %225
  %229 = ptrtoint %"class.gfx::Size"* %226 to i64
  %230 = bitcast %"class.gfx::Size"** %169 to i64*
  %231 = load i64, i64* %230, align 8
  br label %294

232:                                              ; preds = %225
  %233 = bitcast %"class.gfx::Size"** %169 to i64**
  %234 = load i64*, i64** %233, align 8
  %235 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %226, i64 -1, i32 0
  %236 = ptrtoint i32* %235 to i64
  %237 = sub i64 %236, %4
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %256, label %242

242:                                              ; preds = %232, %242
  %243 = phi i64* [ %251, %242 ], [ %234, %232 ]
  %244 = phi %"class.gfx::Size"* [ %248, %242 ], [ %1, %232 ]
  %245 = phi i64 [ %252, %242 ], [ %240, %232 ]
  %246 = bitcast %"class.gfx::Size"* %244 to i64*
  %247 = load i64, i64* %246, align 4
  store i64 %247, i64* %243, align 4
  %248 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %244, i64 1
  %249 = load %"class.gfx::Size"*, %"class.gfx::Size"** %169, align 8
  %250 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %249, i64 1
  store %"class.gfx::Size"* %250, %"class.gfx::Size"** %169, align 8
  %251 = bitcast %"class.gfx::Size"* %250 to i64*
  %252 = add i64 %245, -1
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %242, !llvm.loop !31

254:                                              ; preds = %242
  %255 = bitcast %"class.gfx::Size"* %250 to i64*
  br label %256

256:                                              ; preds = %232, %254
  %257 = phi %"class.gfx::Size"* [ undef, %232 ], [ %250, %254 ]
  %258 = phi i64* [ %234, %232 ], [ %255, %254 ]
  %259 = phi %"class.gfx::Size"* [ %1, %232 ], [ %248, %254 ]
  %260 = icmp ult i64 %237, 24
  br i1 %260, label %289, label %261

261:                                              ; preds = %256, %261
  %262 = phi i64* [ %288, %261 ], [ %258, %256 ]
  %263 = phi %"class.gfx::Size"* [ %284, %261 ], [ %259, %256 ]
  %264 = bitcast %"class.gfx::Size"* %263 to i64*
  %265 = load i64, i64* %264, align 4
  store i64 %265, i64* %262, align 4
  %266 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %263, i64 1
  %267 = load %"class.gfx::Size"*, %"class.gfx::Size"** %169, align 8
  %268 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %267, i64 1
  store %"class.gfx::Size"* %268, %"class.gfx::Size"** %169, align 8
  %269 = bitcast %"class.gfx::Size"* %268 to i64*
  %270 = bitcast %"class.gfx::Size"* %266 to i64*
  %271 = load i64, i64* %270, align 4
  store i64 %271, i64* %269, align 4
  %272 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %263, i64 2
  %273 = load %"class.gfx::Size"*, %"class.gfx::Size"** %169, align 8
  %274 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %273, i64 1
  store %"class.gfx::Size"* %274, %"class.gfx::Size"** %169, align 8
  %275 = bitcast %"class.gfx::Size"* %274 to i64*
  %276 = bitcast %"class.gfx::Size"* %272 to i64*
  %277 = load i64, i64* %276, align 4
  store i64 %277, i64* %275, align 4
  %278 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %263, i64 3
  %279 = load %"class.gfx::Size"*, %"class.gfx::Size"** %169, align 8
  %280 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %279, i64 1
  store %"class.gfx::Size"* %280, %"class.gfx::Size"** %169, align 8
  %281 = bitcast %"class.gfx::Size"* %280 to i64*
  %282 = bitcast %"class.gfx::Size"* %278 to i64*
  %283 = load i64, i64* %282, align 4
  store i64 %283, i64* %281, align 4
  %284 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %263, i64 4
  %285 = load %"class.gfx::Size"*, %"class.gfx::Size"** %169, align 8
  %286 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %285, i64 1
  store %"class.gfx::Size"* %286, %"class.gfx::Size"** %169, align 8
  %287 = icmp eq %"class.gfx::Size"* %284, %226
  %288 = bitcast %"class.gfx::Size"* %286 to i64*
  br i1 %287, label %289, label %261

289:                                              ; preds = %261, %256
  %290 = phi %"class.gfx::Size"* [ %257, %256 ], [ %286, %261 ]
  %291 = ptrtoint %"class.gfx::Size"* %290 to i64
  %292 = load i64, i64* %172, align 8
  %293 = bitcast %"class.gfx::Size"** %169 to i64*
  br label %294

294:                                              ; preds = %228, %289
  %295 = phi i64* [ %230, %228 ], [ %293, %289 ]
  %296 = phi i64 [ %231, %228 ], [ %291, %289 ]
  %297 = phi i64 [ %229, %228 ], [ %292, %289 ]
  %298 = load i64, i64* %173, align 8
  %299 = bitcast %"class.gfx::Size"** %168 to i64*
  %300 = load i64, i64* %299, align 8
  store i64 %300, i64* %173, align 8
  store i64 %298, i64* %299, align 8
  store i64 %296, i64* %172, align 8
  store i64 %297, i64* %295, align 8
  %301 = load i64, i64* %183, align 8
  %302 = bitcast %"class.gfx::Size"** %170 to i64*
  %303 = load i64, i64* %302, align 8
  store i64 %303, i64* %183, align 8
  store i64 %301, i64* %302, align 8
  %304 = bitcast %"struct.std::__1::__split_buffer.40"* %5 to i64*
  store i64 %298, i64* %304, align 8
  %305 = inttoptr i64 %298 to %"class.gfx::Size"*
  %306 = inttoptr i64 %297 to %"class.gfx::Size"*
  %307 = icmp eq %"class.gfx::Size"* %306, %305
  br i1 %307, label %315, label %308

308:                                              ; preds = %294
  %309 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %306, i64 -1, i32 0
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %298
  %312 = lshr i64 %311, 3
  %313 = xor i64 %312, -1
  %314 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %306, i64 %313
  store %"class.gfx::Size"* %314, %"class.gfx::Size"** %169, align 8
  br label %315

315:                                              ; preds = %308, %294
  %316 = icmp eq i64 %298, 0
  br i1 %316, label %319, label %317

317:                                              ; preds = %315
  %318 = inttoptr i64 %298 to i8*
  call void @_ZdlPv(i8* %318) #10
  br label %319

319:                                              ; preds = %315, %317
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %166) #9
  br label %320

320:                                              ; preds = %17, %162, %319
  %321 = phi %"class.gfx::Size"* [ %1, %17 ], [ %1, %162 ], [ %214, %319 ]
  ret %"class.gfx::Size"* %321
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3gfx4SizeERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.40"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %0, i64 0, i32 2
  %4 = load %"class.gfx::Size"*, %"class.gfx::Size"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.gfx::Size"*, %"class.gfx::Size"** %5, align 8
  %7 = icmp eq %"class.gfx::Size"* %4, %6
  %8 = ptrtoint %"class.gfx::Size"* %6 to i64
  %9 = bitcast %"class.gfx::Size"* %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %0, i64 0, i32 1
  %12 = load %"class.gfx::Size"*, %"class.gfx::Size"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.40", %"struct.std::__1::__split_buffer.40"* %0, i64 0, i32 0
  %14 = load %"class.gfx::Size"*, %"class.gfx::Size"** %13, align 8
  %15 = icmp ugt %"class.gfx::Size"* %12, %14
  %16 = ptrtoint %"class.gfx::Size"* %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.gfx::Size"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %12, i64 %22
  %24 = ptrtoint %"class.gfx::Size"* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.gfx::Size"* %23 to i8*
  %30 = bitcast %"class.gfx::Size"* %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 %25, i1 false) #9
  %31 = load %"class.gfx::Size"*, %"class.gfx::Size"** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.gfx::Size"* [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %23, i64 %26
  store %"class.gfx::Size"* %34, %"class.gfx::Size"** %3, align 8
  %35 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %33, i64 %22
  store %"class.gfx::Size"* %35, %"class.gfx::Size"** %11, align 8
  %36 = bitcast %"class.gfx::Size"* %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.gfx::Size"** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.40"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to %"class.gfx::Size"*
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %50, i64 %47
  %53 = ptrtoint %"class.gfx::Size"* %52 to i64
  %54 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %50, i64 %43
  %55 = ptrtoint %"class.gfx::Size"* %54 to i64
  %56 = ptrtoint %"class.gfx::Size"* %12 to i64
  %57 = ptrtoint %"class.gfx::Size"* %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.gfx::Size"* [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.gfx::Size"* [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.gfx::Size"* %71 to i64*
  %74 = inttoptr i64 %70 to i64*
  %75 = load i64, i64* %73, align 4
  store i64 %75, i64* %74, align 4
  %76 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %69, i64 1
  %77 = ptrtoint %"class.gfx::Size"* %76 to i64
  %78 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !32

81:                                               ; preds = %68
  %82 = ptrtoint %"class.gfx::Size"* %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.gfx::Size"* [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.gfx::Size"* [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.gfx::Size"* [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.gfx::Size"* [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.gfx::Size"* %91 to i64*
  %93 = inttoptr i64 %90 to i64*
  %94 = load i64, i64* %92, align 4
  store i64 %94, i64* %93, align 4
  %95 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %89, i64 1
  %96 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %91, i64 1
  %97 = bitcast %"class.gfx::Size"* %96 to i64*
  %98 = bitcast %"class.gfx::Size"* %95 to i64*
  %99 = load i64, i64* %97, align 4
  store i64 %99, i64* %98, align 4
  %100 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %89, i64 2
  %101 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %91, i64 2
  %102 = bitcast %"class.gfx::Size"* %101 to i64*
  %103 = bitcast %"class.gfx::Size"* %100 to i64*
  %104 = load i64, i64* %102, align 4
  store i64 %104, i64* %103, align 4
  %105 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %89, i64 3
  %106 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %91, i64 3
  %107 = bitcast %"class.gfx::Size"* %106 to i64*
  %108 = bitcast %"class.gfx::Size"* %105 to i64*
  %109 = load i64, i64* %107, align 4
  store i64 %109, i64* %108, align 4
  %110 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %89, i64 4
  %111 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %91, i64 4
  %112 = bitcast %"class.gfx::Size"* %111 to i64*
  %113 = bitcast %"class.gfx::Size"* %110 to i64*
  %114 = load i64, i64* %112, align 4
  store i64 %114, i64* %113, align 4
  %115 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %89, i64 5
  %116 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %91, i64 5
  %117 = bitcast %"class.gfx::Size"* %116 to i64*
  %118 = bitcast %"class.gfx::Size"* %115 to i64*
  %119 = load i64, i64* %117, align 4
  store i64 %119, i64* %118, align 4
  %120 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %89, i64 6
  %121 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %91, i64 6
  %122 = bitcast %"class.gfx::Size"* %121 to i64*
  %123 = bitcast %"class.gfx::Size"* %120 to i64*
  %124 = load i64, i64* %122, align 4
  store i64 %124, i64* %123, align 4
  %125 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %89, i64 7
  %126 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %91, i64 7
  %127 = bitcast %"class.gfx::Size"* %126 to i64*
  %128 = bitcast %"class.gfx::Size"* %125 to i64*
  %129 = load i64, i64* %127, align 4
  store i64 %129, i64* %128, align 4
  %130 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %89, i64 8
  %131 = ptrtoint %"class.gfx::Size"* %130 to i64
  %132 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %91, i64 8
  %133 = icmp eq %"class.gfx::Size"* %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.gfx::Size"* %60 to i64
  %136 = load %"class.gfx::Size"*, %"class.gfx::Size"** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.gfx::Size"* [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.gfx::Size"** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.gfx::Size"** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.gfx::Size"* %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.gfx::Size"* %138 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = bitcast %"class.gfx::Size"** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.gfx::Size"* %1 to i64*
  %151 = load i64, i64* %150, align 4
  store i64 %151, i64* %149, align 4
  %152 = load %"class.gfx::Size"*, %"class.gfx::Size"** %3, align 8
  %153 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %152, i64 1
  store %"class.gfx::Size"* %153, %"class.gfx::Size"** %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !11}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !9}
!31 = distinct !{!31, !11}
!32 = distinct !{!32, !11}
