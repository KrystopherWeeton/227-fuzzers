; ModuleID = '../../third_party/tflite/src/tensorflow/lite/external_cpu_backend_context.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/external_cpu_backend_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.tflite::ExternalCpuBackendContext" = type { %struct.TfLiteExternalContext, %"class.std::__1::unique_ptr" }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.tflite::TfLiteInternalBackendContext"* }
%"class.tflite::TfLiteInternalBackendContext" = type { i32 (...)** }

@_ZN6tflite25ExternalCpuBackendContextC1Ev = hidden unnamed_addr alias void (%"class.tflite::ExternalCpuBackendContext"*), void (%"class.tflite::ExternalCpuBackendContext"*)* @_ZN6tflite25ExternalCpuBackendContextC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6tflite25ExternalCpuBackendContextC2Ev(%"class.tflite::ExternalCpuBackendContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::ExternalCpuBackendContext", %"class.tflite::ExternalCpuBackendContext"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.tflite::ExternalCpuBackendContext", %"class.tflite::ExternalCpuBackendContext"* %0, i64 0, i32 0, i32 0
  store i32 3, i32* %4, align 8
  %5 = getelementptr inbounds %"class.tflite::ExternalCpuBackendContext", %"class.tflite::ExternalCpuBackendContext"* %0, i64 0, i32 0, i32 1
  store i32 (%struct.TfLiteContext*)* @_ZN6tflite12_GLOBAL__N_132RefreshExternalCpuBackendContextEP13TfLiteContext, i32 (%struct.TfLiteContext*)** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite12_GLOBAL__N_132RefreshExternalCpuBackendContextEP13TfLiteContext(%struct.TfLiteContext*) #1 {
  %2 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 10
  %3 = load %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)** %2, align 8
  %4 = tail call %struct.TfLiteExternalContext* %3(%struct.TfLiteContext* %0, i32 3) #2
  %5 = icmp eq %struct.TfLiteExternalContext* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.TfLiteExternalContext, %struct.TfLiteExternalContext* %4, i64 1
  %8 = bitcast %struct.TfLiteExternalContext* %7 to %"class.tflite::TfLiteInternalBackendContext"**
  %9 = load %"class.tflite::TfLiteInternalBackendContext"*, %"class.tflite::TfLiteInternalBackendContext"** %8, align 8
  %10 = icmp eq %"class.tflite::TfLiteInternalBackendContext"* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.tflite::TfLiteInternalBackendContext"* %9 to void (%"class.tflite::TfLiteInternalBackendContext"*, i32)***
  %17 = load void (%"class.tflite::TfLiteInternalBackendContext"*, i32)**, void (%"class.tflite::TfLiteInternalBackendContext"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.tflite::TfLiteInternalBackendContext"*, i32)*, void (%"class.tflite::TfLiteInternalBackendContext"*, i32)** %17, i64 2
  %19 = load void (%"class.tflite::TfLiteInternalBackendContext"*, i32)*, void (%"class.tflite::TfLiteInternalBackendContext"*, i32)** %18, align 8
  tail call void %19(%"class.tflite::TfLiteInternalBackendContext"* nonnull %9, i32 %13) #2
  br label %20

20:                                               ; preds = %11, %6, %1, %15
  ret i32 0
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
