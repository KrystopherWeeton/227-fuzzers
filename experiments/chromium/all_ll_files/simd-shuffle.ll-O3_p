; ModuleID = '../../v8/src/wasm/simd-shuffle.cc'
source_filename = "../../v8/src/wasm/simd-shuffle.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11SimdShuffle19CanonicalizeShuffleEbPhPbS4_(i1 zeroext, i8* nocapture, i8* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  store i8 0, i8* %2, align 1
  br i1 %0, label %64, label %5

5:                                                ; preds = %4
  %6 = bitcast i8* %1 to <16 x i8>*
  %7 = load <16 x i8>, <16 x i8>* %6, align 1
  %8 = icmp ult <16 x i8> %7, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %9 = extractelement <16 x i8> %7, i32 0
  %10 = extractelement <16 x i8> %7, i32 1
  %11 = or i8 %10, %9
  %12 = shufflevector <16 x i1> %8, <16 x i1> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = or <16 x i1> %8, %12
  %14 = shufflevector <16 x i1> %13, <16 x i1> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = or <16 x i1> %13, %14
  %16 = shufflevector <16 x i1> %15, <16 x i1> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %17 = or <16 x i1> %15, %16
  %18 = shufflevector <16 x i1> %17, <16 x i1> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %19 = or <16 x i1> %17, %18
  %20 = extractelement <16 x i1> %19, i32 0
  %21 = extractelement <16 x i8> %7, i32 14
  %22 = extractelement <16 x i8> %7, i32 15
  %23 = or i8 %22, %21
  %24 = extractelement <16 x i8> %7, i32 13
  %25 = or i8 %23, %24
  %26 = extractelement <16 x i8> %7, i32 12
  %27 = or i8 %25, %26
  %28 = extractelement <16 x i8> %7, i32 11
  %29 = or i8 %27, %28
  %30 = extractelement <16 x i8> %7, i32 10
  %31 = or i8 %29, %30
  %32 = extractelement <16 x i8> %7, i32 9
  %33 = or i8 %31, %32
  %34 = extractelement <16 x i8> %7, i32 8
  %35 = or i8 %33, %34
  %36 = extractelement <16 x i8> %7, i32 7
  %37 = or i8 %35, %36
  %38 = extractelement <16 x i8> %7, i32 6
  %39 = or i8 %37, %38
  %40 = extractelement <16 x i8> %7, i32 5
  %41 = or i8 %39, %40
  %42 = extractelement <16 x i8> %7, i32 4
  %43 = or i8 %41, %42
  %44 = extractelement <16 x i8> %7, i32 3
  %45 = or i8 %43, %44
  %46 = extractelement <16 x i8> %7, i32 2
  %47 = or i8 %45, %46
  %48 = or i8 %47, %11
  %49 = icmp ult i8 %48, 16
  %50 = and i1 %20, %49
  br i1 %50, label %64, label %51

51:                                               ; preds = %5
  %52 = or i1 %20, %49
  br i1 %52, label %54, label %53

53:                                               ; preds = %51
  store i8 1, i8* %2, align 1
  br label %64

54:                                               ; preds = %51
  store i8 0, i8* %3, align 1
  %55 = load i8, i8* %1, align 1
  %56 = icmp ugt i8 %55, 15
  br i1 %56, label %57, label %70

57:                                               ; preds = %54
  store i8 1, i8* %2, align 1
  %58 = bitcast i8* %1 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1
  %60 = xor <16 x i8> %59, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %61 = bitcast i8* %1 to <16 x i8>*
  store <16 x i8> %60, <16 x i8>* %61, align 1
  %62 = load i8, i8* %3, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %70, label %65

64:                                               ; preds = %5, %4, %53
  store i8 1, i8* %3, align 1
  br label %65

65:                                               ; preds = %64, %57
  %66 = bitcast i8* %1 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1
  %68 = and <16 x i8> %67, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %69 = bitcast i8* %1 to <16 x i8>*
  store <16 x i8> %68, <16 x i8>* %69, align 1
  br label %70

70:                                               ; preds = %65, %54, %57
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11SimdShuffle16TryMatchIdentityEPKh(i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = load i8, i8* %0, align 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = getelementptr inbounds i8, i8* %0, i64 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %9, label %8

8:                                                ; preds = %57, %53, %49, %45, %41, %37, %33, %29, %25, %21, %17, %13, %9, %4, %1
  ret i1 false

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i64 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 2
  br i1 %12, label %13, label %8

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 3
  br i1 %16, label %17, label %8

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %0, i64 4
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 4
  br i1 %20, label %21, label %8

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %0, i64 5
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 5
  br i1 %24, label %25, label %8

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %0, i64 6
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 6
  br i1 %28, label %29, label %8

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, i8* %0, i64 7
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 7
  br i1 %32, label %33, label %8

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, i8* %0, i64 8
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %8

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %0, i64 9
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 9
  br i1 %40, label %41, label %8

41:                                               ; preds = %37
  %42 = getelementptr inbounds i8, i8* %0, i64 10
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 10
  br i1 %44, label %45, label %8

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %0, i64 11
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 11
  br i1 %48, label %49, label %8

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, i8* %0, i64 12
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 12
  br i1 %52, label %53, label %8

53:                                               ; preds = %49
  %54 = getelementptr inbounds i8, i8* %0, i64 13
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 13
  br i1 %56, label %57, label %8

57:                                               ; preds = %53
  %58 = getelementptr inbounds i8, i8* %0, i64 14
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 14
  br i1 %60, label %61, label %8

61:                                               ; preds = %57
  %62 = getelementptr inbounds i8, i8* %0, i64 15
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 15
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11SimdShuffle18TryMatch32x4RotateEPKhPhb(i8* nocapture readonly, i8* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #4
  %5 = call zeroext i1 @_ZN2v88internal4wasm11SimdShuffle14TryMatchConcatEPKhPh(i8* %0, i8* nonnull %4)
  %6 = and i1 %5, %2
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = load i8, i8* %4, align 1
  %9 = and i8 %8, 3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %7
  %12 = lshr i8 %8, 2
  %13 = and i8 %12, 3
  store i8 %13, i8* %1, align 1
  %14 = add nuw nsw i8 %12, 1
  %15 = and i8 %14, 3
  %16 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %15, i8* %16, align 1
  %17 = add nuw nsw i8 %12, 2
  %18 = and i8 %17, 3
  %19 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %18, i8* %19, align 1
  %20 = add nuw nsw i8 %12, 3
  %21 = and i8 %20, 3
  %22 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %21, i8* %22, align 1
  br label %23

23:                                               ; preds = %11, %3, %7
  %24 = phi i1 [ false, %3 ], [ false, %7 ], [ true, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #4
  ret i1 %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11SimdShuffle14TryMatchConcatEPKhPh(i8* nocapture readonly, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %0, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = zext i8 %3 to i32
  %10 = add nuw nsw i32 %9, 1
  %11 = icmp eq i32 %10, %8
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = icmp eq i8 %3, 15
  %14 = and i32 %8, 15
  %15 = icmp eq i32 %14, 0
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %12, %5
  %18 = getelementptr inbounds i8, i8* %0, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = add nuw nsw i32 %8, 1
  %22 = icmp eq i32 %21, %20
  br i1 %22, label %30, label %25

23:                                               ; preds = %12, %25, %36, %47, %58, %69, %80, %91, %102, %113, %124, %135, %146, %157, %168, %2, %173
  %24 = phi i1 [ true, %173 ], [ false, %2 ], [ false, %168 ], [ false, %157 ], [ false, %146 ], [ false, %135 ], [ false, %124 ], [ false, %113 ], [ false, %102 ], [ false, %91 ], [ false, %80 ], [ false, %69 ], [ false, %58 ], [ false, %47 ], [ false, %36 ], [ false, %25 ], [ false, %12 ]
  ret i1 %24

25:                                               ; preds = %17
  %26 = icmp eq i8 %7, 15
  %27 = and i32 %20, 15
  %28 = icmp eq i32 %27, 0
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %23

30:                                               ; preds = %25, %17
  %31 = getelementptr inbounds i8, i8* %0, i64 3
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = add nuw nsw i32 %20, 1
  %35 = icmp eq i32 %34, %33
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = icmp eq i8 %19, 15
  %38 = and i32 %33, 15
  %39 = icmp eq i32 %38, 0
  %40 = and i1 %37, %39
  br i1 %40, label %41, label %23

41:                                               ; preds = %36, %30
  %42 = getelementptr inbounds i8, i8* %0, i64 4
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = add nuw nsw i32 %33, 1
  %46 = icmp eq i32 %45, %44
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = icmp eq i8 %32, 15
  %49 = and i32 %44, 15
  %50 = icmp eq i32 %49, 0
  %51 = and i1 %48, %50
  br i1 %51, label %52, label %23

52:                                               ; preds = %47, %41
  %53 = getelementptr inbounds i8, i8* %0, i64 5
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = add nuw nsw i32 %44, 1
  %57 = icmp eq i32 %56, %55
  br i1 %57, label %63, label %58

58:                                               ; preds = %52
  %59 = icmp eq i8 %43, 15
  %60 = and i32 %55, 15
  %61 = icmp eq i32 %60, 0
  %62 = and i1 %59, %61
  br i1 %62, label %63, label %23

63:                                               ; preds = %58, %52
  %64 = getelementptr inbounds i8, i8* %0, i64 6
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = add nuw nsw i32 %55, 1
  %68 = icmp eq i32 %67, %66
  br i1 %68, label %74, label %69

69:                                               ; preds = %63
  %70 = icmp eq i8 %54, 15
  %71 = and i32 %66, 15
  %72 = icmp eq i32 %71, 0
  %73 = and i1 %70, %72
  br i1 %73, label %74, label %23

74:                                               ; preds = %69, %63
  %75 = getelementptr inbounds i8, i8* %0, i64 7
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = add nuw nsw i32 %66, 1
  %79 = icmp eq i32 %78, %77
  br i1 %79, label %85, label %80

80:                                               ; preds = %74
  %81 = icmp eq i8 %65, 15
  %82 = and i32 %77, 15
  %83 = icmp eq i32 %82, 0
  %84 = and i1 %81, %83
  br i1 %84, label %85, label %23

85:                                               ; preds = %80, %74
  %86 = getelementptr inbounds i8, i8* %0, i64 8
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = add nuw nsw i32 %77, 1
  %90 = icmp eq i32 %89, %88
  br i1 %90, label %96, label %91

91:                                               ; preds = %85
  %92 = icmp eq i8 %76, 15
  %93 = and i32 %88, 15
  %94 = icmp eq i32 %93, 0
  %95 = and i1 %92, %94
  br i1 %95, label %96, label %23

96:                                               ; preds = %91, %85
  %97 = getelementptr inbounds i8, i8* %0, i64 9
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nuw nsw i32 %88, 1
  %101 = icmp eq i32 %100, %99
  br i1 %101, label %107, label %102

102:                                              ; preds = %96
  %103 = icmp eq i8 %87, 15
  %104 = and i32 %99, 15
  %105 = icmp eq i32 %104, 0
  %106 = and i1 %103, %105
  br i1 %106, label %107, label %23

107:                                              ; preds = %102, %96
  %108 = getelementptr inbounds i8, i8* %0, i64 10
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = add nuw nsw i32 %99, 1
  %112 = icmp eq i32 %111, %110
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = icmp eq i8 %98, 15
  %115 = and i32 %110, 15
  %116 = icmp eq i32 %115, 0
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %23

118:                                              ; preds = %113, %107
  %119 = getelementptr inbounds i8, i8* %0, i64 11
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = add nuw nsw i32 %110, 1
  %123 = icmp eq i32 %122, %121
  br i1 %123, label %129, label %124

124:                                              ; preds = %118
  %125 = icmp eq i8 %109, 15
  %126 = and i32 %121, 15
  %127 = icmp eq i32 %126, 0
  %128 = and i1 %125, %127
  br i1 %128, label %129, label %23

129:                                              ; preds = %124, %118
  %130 = getelementptr inbounds i8, i8* %0, i64 12
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = add nuw nsw i32 %121, 1
  %134 = icmp eq i32 %133, %132
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = icmp eq i8 %120, 15
  %137 = and i32 %132, 15
  %138 = icmp eq i32 %137, 0
  %139 = and i1 %136, %138
  br i1 %139, label %140, label %23

140:                                              ; preds = %135, %129
  %141 = getelementptr inbounds i8, i8* %0, i64 13
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = add nuw nsw i32 %132, 1
  %145 = icmp eq i32 %144, %143
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = icmp eq i8 %131, 15
  %148 = and i32 %143, 15
  %149 = icmp eq i32 %148, 0
  %150 = and i1 %147, %149
  br i1 %150, label %151, label %23

151:                                              ; preds = %146, %140
  %152 = getelementptr inbounds i8, i8* %0, i64 14
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = add nuw nsw i32 %143, 1
  %156 = icmp eq i32 %155, %154
  br i1 %156, label %162, label %157

157:                                              ; preds = %151
  %158 = icmp eq i8 %142, 15
  %159 = and i32 %154, 15
  %160 = icmp eq i32 %159, 0
  %161 = and i1 %158, %160
  br i1 %161, label %162, label %23

162:                                              ; preds = %157, %151
  %163 = getelementptr inbounds i8, i8* %0, i64 15
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i32
  %166 = add nuw nsw i32 %154, 1
  %167 = icmp eq i32 %166, %165
  br i1 %167, label %173, label %168

168:                                              ; preds = %162
  %169 = icmp eq i8 %153, 15
  %170 = and i32 %165, 15
  %171 = icmp eq i32 %170, 0
  %172 = and i1 %169, %171
  br i1 %172, label %173, label %23

173:                                              ; preds = %168, %162
  store i8 %3, i8* %1, align 1
  br label %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11SimdShuffle19TryMatch32x4ShuffleEPKhPh(i8* nocapture readonly, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %0, align 1
  %4 = and i8 %3, 3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = zext i8 %3 to i32
  %11 = sub nsw i32 %9, %10
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %0, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = sub nsw i32 %16, %9
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %21, label %19

19:                                               ; preds = %2, %27, %52, %78, %104, %6, %13, %21, %33, %40, %46, %59, %66, %72, %85, %92, %98
  %20 = phi i1 [ false, %98 ], [ false, %92 ], [ false, %85 ], [ false, %72 ], [ false, %66 ], [ false, %59 ], [ false, %46 ], [ false, %40 ], [ false, %33 ], [ false, %21 ], [ false, %13 ], [ false, %6 ], [ false, %2 ], [ false, %27 ], [ false, %52 ], [ false, %78 ], [ true, %104 ]
  ret i1 %20

21:                                               ; preds = %13
  %22 = getelementptr inbounds i8, i8* %0, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = sub nsw i32 %24, %16
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %19

27:                                               ; preds = %21
  %28 = lshr i8 %3, 2
  store i8 %28, i8* %1, align 1
  %29 = getelementptr inbounds i8, i8* %0, i64 4
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8, i8* %0, i64 5
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = zext i8 %30 to i32
  %38 = sub nsw i32 %36, %37
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %19

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %0, i64 6
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = sub nsw i32 %43, %36
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %19

46:                                               ; preds = %40
  %47 = getelementptr inbounds i8, i8* %0, i64 7
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = sub nsw i32 %49, %43
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %19

52:                                               ; preds = %46
  %53 = lshr i8 %30, 2
  %54 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %53, i8* %54, align 1
  %55 = getelementptr inbounds i8, i8* %0, i64 8
  %56 = load i8, i8* %55, align 1
  %57 = and i8 %56, 3
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %19

59:                                               ; preds = %52
  %60 = getelementptr inbounds i8, i8* %0, i64 9
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = zext i8 %56 to i32
  %64 = sub nsw i32 %62, %63
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %19

66:                                               ; preds = %59
  %67 = getelementptr inbounds i8, i8* %0, i64 10
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = sub nsw i32 %69, %62
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %19

72:                                               ; preds = %66
  %73 = getelementptr inbounds i8, i8* %0, i64 11
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 %75, %69
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %19

78:                                               ; preds = %72
  %79 = lshr i8 %56, 2
  %80 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %79, i8* %80, align 1
  %81 = getelementptr inbounds i8, i8* %0, i64 12
  %82 = load i8, i8* %81, align 1
  %83 = and i8 %82, 3
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %19

85:                                               ; preds = %78
  %86 = getelementptr inbounds i8, i8* %0, i64 13
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = zext i8 %82 to i32
  %90 = sub nsw i32 %88, %89
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %19

92:                                               ; preds = %85
  %93 = getelementptr inbounds i8, i8* %0, i64 14
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = sub nsw i32 %95, %88
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %19

98:                                               ; preds = %92
  %99 = getelementptr inbounds i8, i8* %0, i64 15
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = sub nsw i32 %101, %95
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %19

104:                                              ; preds = %98
  %105 = lshr i8 %82, 2
  %106 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %105, i8* %106, align 1
  br label %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11SimdShuffle19TryMatch16x8ShuffleEPKhPh(i8* nocapture readonly, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %0, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = zext i8 %3 to i32
  %11 = sub nsw i32 %9, %10
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = lshr i8 %3, 1
  store i8 %14, i8* %1, align 1
  %15 = getelementptr inbounds i8, i8* %0, i64 2
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %2, %13, %28, %42, %56, %70, %84, %98, %112, %6, %21, %35, %49, %63, %77, %91, %105
  %20 = phi i1 [ false, %105 ], [ false, %91 ], [ false, %77 ], [ false, %63 ], [ false, %49 ], [ false, %35 ], [ false, %21 ], [ false, %6 ], [ false, %2 ], [ false, %13 ], [ false, %28 ], [ false, %42 ], [ false, %56 ], [ false, %70 ], [ false, %84 ], [ false, %98 ], [ true, %112 ]
  ret i1 %20

21:                                               ; preds = %13
  %22 = getelementptr inbounds i8, i8* %0, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = zext i8 %16 to i32
  %26 = sub nsw i32 %24, %25
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %19

28:                                               ; preds = %21
  %29 = lshr i8 %16, 1
  %30 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %29, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %0, i64 4
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %19

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %0, i64 5
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = zext i8 %32 to i32
  %40 = sub nsw i32 %38, %39
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %19

42:                                               ; preds = %35
  %43 = lshr i8 %32, 1
  %44 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %43, i8* %44, align 1
  %45 = getelementptr inbounds i8, i8* %0, i64 6
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %19

49:                                               ; preds = %42
  %50 = getelementptr inbounds i8, i8* %0, i64 7
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = zext i8 %46 to i32
  %54 = sub nsw i32 %52, %53
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %19

56:                                               ; preds = %49
  %57 = lshr i8 %46, 1
  %58 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %57, i8* %58, align 1
  %59 = getelementptr inbounds i8, i8* %0, i64 8
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %19

63:                                               ; preds = %56
  %64 = getelementptr inbounds i8, i8* %0, i64 9
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = zext i8 %60 to i32
  %68 = sub nsw i32 %66, %67
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %19

70:                                               ; preds = %63
  %71 = lshr i8 %60, 1
  %72 = getelementptr inbounds i8, i8* %1, i64 4
  store i8 %71, i8* %72, align 1
  %73 = getelementptr inbounds i8, i8* %0, i64 10
  %74 = load i8, i8* %73, align 1
  %75 = and i8 %74, 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %19

77:                                               ; preds = %70
  %78 = getelementptr inbounds i8, i8* %0, i64 11
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = zext i8 %74 to i32
  %82 = sub nsw i32 %80, %81
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %19

84:                                               ; preds = %77
  %85 = lshr i8 %74, 1
  %86 = getelementptr inbounds i8, i8* %1, i64 5
  store i8 %85, i8* %86, align 1
  %87 = getelementptr inbounds i8, i8* %0, i64 12
  %88 = load i8, i8* %87, align 1
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %19

91:                                               ; preds = %84
  %92 = getelementptr inbounds i8, i8* %0, i64 13
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = zext i8 %88 to i32
  %96 = sub nsw i32 %94, %95
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %19

98:                                               ; preds = %91
  %99 = lshr i8 %88, 1
  %100 = getelementptr inbounds i8, i8* %1, i64 6
  store i8 %99, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %0, i64 14
  %102 = load i8, i8* %101, align 1
  %103 = and i8 %102, 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %19

105:                                              ; preds = %98
  %106 = getelementptr inbounds i8, i8* %0, i64 15
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = zext i8 %102 to i32
  %110 = sub nsw i32 %108, %109
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %19

112:                                              ; preds = %105
  %113 = lshr i8 %102, 1
  %114 = getelementptr inbounds i8, i8* %1, i64 7
  store i8 %113, i8* %114, align 1
  br label %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11SimdShuffle13TryMatchBlendEPKh(i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = load i8, i8* %0, align 1
  %3 = and i8 %2, 15
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %0, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = and i8 %7, 15
  %9 = icmp eq i8 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %71, %66, %61, %56, %51, %46, %41, %36, %31, %26, %21, %16, %11, %5, %1
  ret i1 false

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 15
  %15 = icmp eq i8 %14, 2
  br i1 %15, label %16, label %10

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %0, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, 15
  %20 = icmp eq i8 %19, 3
  br i1 %20, label %21, label %10

21:                                               ; preds = %16
  %22 = getelementptr inbounds i8, i8* %0, i64 4
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, 15
  %25 = icmp eq i8 %24, 4
  br i1 %25, label %26, label %10

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8, i8* %0, i64 5
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 15
  %30 = icmp eq i8 %29, 5
  br i1 %30, label %31, label %10

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %0, i64 6
  %33 = load i8, i8* %32, align 1
  %34 = and i8 %33, 15
  %35 = icmp eq i8 %34, 6
  br i1 %35, label %36, label %10

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %0, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = and i8 %38, 15
  %40 = icmp eq i8 %39, 7
  br i1 %40, label %41, label %10

41:                                               ; preds = %36
  %42 = getelementptr inbounds i8, i8* %0, i64 8
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, 15
  %45 = icmp eq i8 %44, 8
  br i1 %45, label %46, label %10

46:                                               ; preds = %41
  %47 = getelementptr inbounds i8, i8* %0, i64 9
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, 15
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %10

51:                                               ; preds = %46
  %52 = getelementptr inbounds i8, i8* %0, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = and i8 %53, 15
  %55 = icmp eq i8 %54, 10
  br i1 %55, label %56, label %10

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8, i8* %0, i64 11
  %58 = load i8, i8* %57, align 1
  %59 = and i8 %58, 15
  %60 = icmp eq i8 %59, 11
  br i1 %60, label %61, label %10

61:                                               ; preds = %56
  %62 = getelementptr inbounds i8, i8* %0, i64 12
  %63 = load i8, i8* %62, align 1
  %64 = and i8 %63, 15
  %65 = icmp eq i8 %64, 12
  br i1 %65, label %66, label %10

66:                                               ; preds = %61
  %67 = getelementptr inbounds i8, i8* %0, i64 13
  %68 = load i8, i8* %67, align 1
  %69 = and i8 %68, 15
  %70 = icmp eq i8 %69, 13
  br i1 %70, label %71, label %10

71:                                               ; preds = %66
  %72 = getelementptr inbounds i8, i8* %0, i64 14
  %73 = load i8, i8* %72, align 1
  %74 = and i8 %73, 15
  %75 = icmp eq i8 %74, 14
  br i1 %75, label %76, label %10

76:                                               ; preds = %71
  %77 = getelementptr inbounds i8, i8* %0, i64 15
  %78 = load i8, i8* %77, align 1
  %79 = and i8 %78, 15
  %80 = icmp eq i8 %79, 15
  ret i1 %80
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZN2v88internal4wasm11SimdShuffle12PackShuffle4EPh(i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = load i8, i8* %0, align 1
  %3 = and i8 %2, 3
  %4 = getelementptr inbounds i8, i8* %0, i64 1
  %5 = load i8, i8* %4, align 1
  %6 = shl i8 %5, 2
  %7 = and i8 %6, 12
  %8 = or i8 %7, %3
  %9 = getelementptr inbounds i8, i8* %0, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = shl i8 %10, 4
  %12 = and i8 %11, 48
  %13 = or i8 %8, %12
  %14 = getelementptr inbounds i8, i8* %0, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = shl i8 %15, 6
  %17 = or i8 %13, %16
  ret i8 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZN2v88internal4wasm11SimdShuffle10PackBlend8EPKh(i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = load i8, i8* %0, align 1
  %3 = icmp ugt i8 %2, 7
  %4 = zext i1 %3 to i8
  %5 = getelementptr inbounds i8, i8* %0, i64 1
  %6 = bitcast i8* %5 to <4 x i8>*
  %7 = load <4 x i8>, <4 x i8>* %6, align 1
  %8 = icmp ugt <4 x i8> %7, <i8 7, i8 7, i8 7, i8 7>
  %9 = zext <4 x i1> %8 to <4 x i8>
  %10 = shl nuw nsw <4 x i8> %9, <i8 1, i8 2, i8 3, i8 4>
  %11 = getelementptr inbounds i8, i8* %0, i64 5
  %12 = load i8, i8* %11, align 1
  %13 = icmp ugt i8 %12, 7
  %14 = zext i1 %13 to i8
  %15 = shl nuw nsw i8 %14, 5
  %16 = getelementptr inbounds i8, i8* %0, i64 6
  %17 = load i8, i8* %16, align 1
  %18 = icmp ugt i8 %17, 7
  %19 = zext i1 %18 to i8
  %20 = shl nuw nsw i8 %19, 6
  %21 = getelementptr inbounds i8, i8* %0, i64 7
  %22 = load i8, i8* %21, align 1
  %23 = icmp ugt i8 %22, 7
  %24 = zext i1 %23 to i8
  %25 = shl nuw i8 %24, 7
  %26 = shufflevector <4 x i8> %10, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %27 = or <4 x i8> %10, %26
  %28 = shufflevector <4 x i8> %27, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %29 = or <4 x i8> %27, %28
  %30 = extractelement <4 x i8> %29, i32 0
  %31 = or i8 %30, %15
  %32 = or i8 %31, %20
  %33 = or i8 %32, %25
  %34 = or i8 %33, %4
  ret i8 %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZN2v88internal4wasm11SimdShuffle10PackBlend4EPKh(i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = bitcast i8* %0 to <4 x i8>*
  %3 = load <4 x i8>, <4 x i8>* %2, align 1
  %4 = icmp ugt <4 x i8> %3, <i8 3, i8 3, i8 3, i8 3>
  %5 = select <4 x i1> %4, <4 x i8> <i8 3, i8 12, i8 48, i8 -64>, <4 x i8> zeroinitializer
  %6 = shufflevector <4 x i8> %5, <4 x i8> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %7 = or <4 x i8> %5, %6
  %8 = shufflevector <4 x i8> %7, <4 x i8> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %9 = or <4 x i8> %7, %8
  %10 = extractelement <4 x i8> %9, i32 0
  ret i8 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal4wasm11SimdShuffle10Pack4LanesEPKh(i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 3
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = shl nuw nsw i32 %4, 8
  %6 = getelementptr inbounds i8, i8* %0, i64 2
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = or i32 %5, %8
  %10 = shl nuw nsw i32 %9, 8
  %11 = getelementptr inbounds i8, i8* %0, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = or i32 %10, %13
  %15 = shl nuw i32 %14, 8
  %16 = load i8, i8* %0, align 1
  %17 = zext i8 %16 to i32
  %18 = or i32 %15, %17
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11SimdShuffle11Pack16LanesEPjPKh(i32* nocapture, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 3
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = shl nuw nsw i32 %5, 8
  %7 = getelementptr inbounds i8, i8* %1, i64 2
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = or i32 %6, %9
  %11 = shl nuw nsw i32 %10, 8
  %12 = getelementptr inbounds i8, i8* %1, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = or i32 %11, %14
  %16 = shl nuw i32 %15, 8
  %17 = load i8, i8* %1, align 1
  %18 = zext i8 %17 to i32
  %19 = or i32 %16, %18
  store i32 %19, i32* %0, align 4
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = getelementptr inbounds i8, i8* %1, i64 7
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 8
  %25 = getelementptr inbounds i8, i8* %1, i64 6
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = or i32 %24, %27
  %29 = shl nuw nsw i32 %28, 8
  %30 = getelementptr inbounds i8, i8* %1, i64 5
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = or i32 %29, %32
  %34 = shl nuw i32 %33, 8
  %35 = load i8, i8* %20, align 1
  %36 = zext i8 %35 to i32
  %37 = or i32 %34, %36
  %38 = getelementptr inbounds i32, i32* %0, i64 1
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %1, i64 8
  %40 = getelementptr inbounds i8, i8* %1, i64 11
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw nsw i32 %42, 8
  %44 = getelementptr inbounds i8, i8* %1, i64 10
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = or i32 %43, %46
  %48 = shl nuw nsw i32 %47, 8
  %49 = getelementptr inbounds i8, i8* %1, i64 9
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = or i32 %48, %51
  %53 = shl nuw i32 %52, 8
  %54 = load i8, i8* %39, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %53, %55
  %57 = getelementptr inbounds i32, i32* %0, i64 2
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %1, i64 12
  %59 = getelementptr inbounds i8, i8* %1, i64 15
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = getelementptr inbounds i8, i8* %1, i64 14
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = or i32 %62, %65
  %67 = shl nuw nsw i32 %66, 8
  %68 = getelementptr inbounds i8, i8* %1, i64 13
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = or i32 %67, %70
  %72 = shl nuw i32 %71, 8
  %73 = load i8, i8* %58, align 1
  %74 = zext i8 %73 to i32
  %75 = or i32 %72, %74
  %76 = getelementptr inbounds i32, i32* %0, i64 3
  store i32 %75, i32* %76, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11SimdSwizzle21AllInRangeOrTopBitSetENSt3__15arrayIhLm16EEE(i64, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = trunc i64 %0 to i8
  %7 = icmp ult i8 %6, 16
  %8 = icmp slt i8 %6, 0
  %9 = or i1 %7, %8
  %10 = lshr i64 %0, 8
  %11 = trunc i64 %10 to i8
  %12 = lshr i64 %0, 16
  %13 = trunc i64 %12 to i8
  %14 = lshr i64 %0, 24
  %15 = trunc i64 %14 to i8
  %16 = lshr i64 %0, 32
  %17 = trunc i64 %16 to i8
  %18 = trunc i64 %1 to i8
  %19 = lshr i64 %1, 8
  %20 = trunc i64 %19 to i8
  %21 = lshr i64 %1, 16
  %22 = trunc i64 %21 to i8
  %23 = lshr i64 %1, 24
  %24 = trunc i64 %23 to i8
  %25 = lshr i64 %1, 32
  %26 = trunc i64 %25 to i8
  %27 = lshr i64 %1, 40
  %28 = trunc i64 %27 to i8
  %29 = lshr i64 %1, 48
  %30 = trunc i64 %29 to i8
  %31 = lshr i64 %1, 56
  %32 = trunc i64 %31 to i8
  br i1 %9, label %33, label %37

33:                                               ; preds = %2
  %34 = icmp ult i8 %11, 16
  %35 = icmp slt i8 %11, 0
  %36 = or i1 %34, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %93, %89, %85, %81, %77, %73, %69, %63, %57, %51, %46, %42, %38, %33, %2
  ret i1 false

38:                                               ; preds = %33
  %39 = icmp ult i8 %13, 16
  %40 = icmp slt i8 %13, 0
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %37

42:                                               ; preds = %38
  %43 = icmp ult i8 %15, 16
  %44 = icmp slt i8 %15, 0
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %37

46:                                               ; preds = %42
  %47 = bitcast { i64, i64 }* %3 to i8*
  %48 = icmp ult i8 %17, 16
  %49 = icmp slt i8 %17, 0
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %37

51:                                               ; preds = %46
  %52 = getelementptr inbounds i8, i8* %47, i64 5
  %53 = load i8, i8* %52, align 1
  %54 = icmp ult i8 %53, 16
  %55 = icmp slt i8 %53, 0
  %56 = or i1 %54, %55
  br i1 %56, label %57, label %37

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %47, i64 6
  %59 = load i8, i8* %58, align 2
  %60 = icmp ult i8 %59, 16
  %61 = icmp slt i8 %59, 0
  %62 = or i1 %60, %61
  br i1 %62, label %63, label %37

63:                                               ; preds = %57
  %64 = getelementptr inbounds i8, i8* %47, i64 7
  %65 = load i8, i8* %64, align 1
  %66 = icmp ult i8 %65, 16
  %67 = icmp slt i8 %65, 0
  %68 = or i1 %66, %67
  br i1 %68, label %69, label %37

69:                                               ; preds = %63
  %70 = icmp ult i8 %18, 16
  %71 = icmp slt i8 %18, 0
  %72 = or i1 %70, %71
  br i1 %72, label %73, label %37

73:                                               ; preds = %69
  %74 = icmp ult i8 %20, 16
  %75 = icmp slt i8 %20, 0
  %76 = or i1 %74, %75
  br i1 %76, label %77, label %37

77:                                               ; preds = %73
  %78 = icmp ult i8 %22, 16
  %79 = icmp slt i8 %22, 0
  %80 = or i1 %78, %79
  br i1 %80, label %81, label %37

81:                                               ; preds = %77
  %82 = icmp ult i8 %24, 16
  %83 = icmp slt i8 %24, 0
  %84 = or i1 %82, %83
  br i1 %84, label %85, label %37

85:                                               ; preds = %81
  %86 = icmp ult i8 %26, 16
  %87 = icmp slt i8 %26, 0
  %88 = or i1 %86, %87
  br i1 %88, label %89, label %37

89:                                               ; preds = %85
  %90 = icmp ult i8 %28, 16
  %91 = icmp slt i8 %28, 0
  %92 = or i1 %90, %91
  br i1 %92, label %93, label %37

93:                                               ; preds = %89
  %94 = icmp ult i8 %30, 16
  %95 = icmp slt i8 %30, 0
  %96 = or i1 %94, %95
  br i1 %96, label %97, label %37

97:                                               ; preds = %93
  %98 = icmp ult i8 %32, 16
  %99 = icmp slt i8 %32, 0
  %100 = or i1 %98, %99
  ret i1 %100
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
