; ModuleID = '../../components/drive/drive_api_util.cc'
source_filename = "../../components/drive/drive_api_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.drive::util::(anonymous namespace)::HostedDocumentKind" = type { i8*, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::BasicStringPiece.10" = type { i16*, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.std::__1::allocator.8" = type { i8 }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.re2::RE2::Arg" = type { i8*, i1 (i8*, i64, i8*)* }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.11"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.11" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%struct.md5_state_st = type { [4 x i32], i32, i32, [64 x i8], i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZN3re23RE23Arg11DoParse3aryINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEbPKcmPv = comdat any

@_ZN4base16kWhitespaceUTF16E = external constant [0 x i16], align 2
@.str = private unnamed_addr constant [2 x i16] [i16 34, i16 0], align 2
@.str.1 = private unnamed_addr constant [6 x i8] c" and \00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"%sfullText contains '%s'\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"not \00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"^[a-z-]+(?::|%3A)([\5Cw-]+)$\00", align 1
@_ZN5drive4util12_GLOBAL__N_120kHostedDocumentKindsE = internal unnamed_addr constant [8 x %"struct.drive::util::(anonymous namespace)::HostedDocumentKind"] [%"struct.drive::util::(anonymous namespace)::HostedDocumentKind" { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZN5drive4utilL23kGoogleDocumentMimeTypeE, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0) }, %"struct.drive::util::(anonymous namespace)::HostedDocumentKind" { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_ZN5drive4utilL26kGoogleSpreadsheetMimeTypeE, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0) }, %"struct.drive::util::(anonymous namespace)::HostedDocumentKind" { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @_ZN5drive4utilL27kGooglePresentationMimeTypeE, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0) }, %"struct.drive::util::(anonymous namespace)::HostedDocumentKind" { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZN5drive4utilL22kGoogleDrawingMimeTypeE, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0) }, %"struct.drive::util::(anonymous namespace)::HostedDocumentKind" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZN5drive4utilL20kGoogleTableMimeTypeE, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0) }, %"struct.drive::util::(anonymous namespace)::HostedDocumentKind" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @_ZN5drive4utilL19kGoogleFormMimeTypeE, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0) }, %"struct.drive::util::(anonymous namespace)::HostedDocumentKind" { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN5drive4utilL18kGoogleMapMimeTypeE, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0) }, %"struct.drive::util::(anonymous namespace)::HostedDocumentKind" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @_ZN5drive4utilL19kGoogleSiteMimeTypeE, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0) }], align 16
@_ZN5drive4util12_GLOBAL__N_131kUnknownHostedDocumentExtensionE = internal constant [7 x i8] c".glink\00", align 1
@_ZN5drive4utilL23kGoogleDocumentMimeTypeE = internal constant [37 x i8] c"application/vnd.google-apps.document\00", align 16
@.str.8 = private unnamed_addr constant [6 x i8] c".gdoc\00", align 1
@_ZN5drive4utilL26kGoogleSpreadsheetMimeTypeE = internal constant [40 x i8] c"application/vnd.google-apps.spreadsheet\00", align 16
@.str.9 = private unnamed_addr constant [8 x i8] c".gsheet\00", align 1
@_ZN5drive4utilL27kGooglePresentationMimeTypeE = internal constant [41 x i8] c"application/vnd.google-apps.presentation\00", align 16
@.str.10 = private unnamed_addr constant [9 x i8] c".gslides\00", align 1
@_ZN5drive4utilL22kGoogleDrawingMimeTypeE = internal constant [36 x i8] c"application/vnd.google-apps.drawing\00", align 16
@.str.11 = private unnamed_addr constant [7 x i8] c".gdraw\00", align 1
@_ZN5drive4utilL20kGoogleTableMimeTypeE = internal constant [34 x i8] c"application/vnd.google-apps.table\00", align 16
@.str.12 = private unnamed_addr constant [8 x i8] c".gtable\00", align 1
@_ZN5drive4utilL19kGoogleFormMimeTypeE = internal constant [33 x i8] c"application/vnd.google-apps.form\00", align 16
@.str.13 = private unnamed_addr constant [7 x i8] c".gform\00", align 1
@_ZN5drive4utilL18kGoogleMapMimeTypeE = internal constant [32 x i8] c"application/vnd.google-apps.map\00", align 16
@.str.14 = private unnamed_addr constant [7 x i8] c".gmaps\00", align 1
@_ZN5drive4utilL19kGoogleSiteMimeTypeE = internal constant [33 x i8] c"application/vnd.google-apps.site\00", align 16
@.str.15 = private unnamed_addr constant [7 x i8] c".gsite\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5drive4util22EscapeQueryStringValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %11) #9
  %12 = load i8, i8* %5, align 1
  %13 = icmp slt i8 %12, 0
  %14 = load i64, i64* %8, align 8
  %15 = zext i8 %12 to i64
  %16 = select i1 %13, i64 %14, i64 %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %21

21:                                               ; preds = %18, %32
  %22 = phi i8 [ %12, %18 ], [ %40, %32 ]
  %23 = phi i1 [ %13, %18 ], [ %41, %32 ]
  %24 = phi i64 [ 0, %18 ], [ %39, %32 ]
  %25 = load i8*, i8** %19, align 8
  %26 = select i1 %23, i8* %25, i8* %20
  %27 = getelementptr inbounds i8, i8* %26, i64 %24
  %28 = load i8, i8* %27, align 1
  switch i8 %28, label %32 [
    i8 92, label %29
    i8 39, label %29
  ]

29:                                               ; preds = %21, %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 92) #9
  %30 = load i8, i8* %5, align 1
  %31 = load i8*, i8** %19, align 8
  br label %32

32:                                               ; preds = %21, %29
  %33 = phi i8* [ %31, %29 ], [ %25, %21 ]
  %34 = phi i8 [ %30, %29 ], [ %22, %21 ]
  %35 = icmp slt i8 %34, 0
  %36 = select i1 %35, i8* %33, i8* %20
  %37 = getelementptr inbounds i8, i8* %36, i64 %24
  %38 = load i8, i8* %37, align 1
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext %38) #9
  %39 = add nuw i64 %24, 1
  %40 = load i8, i8* %5, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i64, i64* %8, align 8
  %43 = zext i8 %40 to i64
  %44 = select i1 %41, i64 %42, i64 %43
  %45 = icmp ult i64 %39, %44
  br i1 %45, label %21, label %46

46:                                               ; preds = %32, %2
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5drive4util14TranslateQueryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.1", align 8
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca [2 x %"class.base::BasicStringPiece.10"], align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %"class.std::__1::basic_string.1", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load i8, i8* %16, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %23 = select i1 %19, i8* %21, i8* %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %18 to i64
  %27 = select i1 %19, i64 %25, i64 %26
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.1"* nonnull sret %3, i8* %23, i64 %27) #9
  %28 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast [2 x %"class.base::BasicStringPiece.10"]* %5 to i8*
  %32 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #9
  %33 = getelementptr inbounds [2 x %"class.base::BasicStringPiece.10"], [2 x %"class.base::BasicStringPiece.10"]* %5, i64 0, i64 0
  %34 = getelementptr inbounds [2 x %"class.base::BasicStringPiece.10"], [2 x %"class.base::BasicStringPiece.10"]* %5, i64 0, i64 0, i32 0
  store i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), i16** %34, align 8
  %35 = getelementptr inbounds [2 x %"class.base::BasicStringPiece.10"], [2 x %"class.base::BasicStringPiece.10"]* %5, i64 0, i64 0, i32 1
  %36 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %2, %38
  %39 = phi i64 [ %41, %38 ], [ 0, %2 ]
  %40 = phi i16* [ %42, %38 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %2 ]
  %41 = add i64 %39, 1
  %42 = getelementptr inbounds i16, i16* %40, i64 1
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %38

45:                                               ; preds = %38, %2
  %46 = phi i64 [ 0, %2 ], [ %41, %38 ]
  store i64 %46, i64* %35, align 8
  %47 = getelementptr inbounds [2 x %"class.base::BasicStringPiece.10"], [2 x %"class.base::BasicStringPiece.10"]* %5, i64 0, i64 1, i32 0
  store i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0), i16** %47, align 8
  %48 = getelementptr inbounds [2 x %"class.base::BasicStringPiece.10"], [2 x %"class.base::BasicStringPiece.10"]* %5, i64 0, i64 1, i32 1
  store i64 1, i64* %48, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEELm18446744073709551615EEE(%"class.std::__1::basic_string.1"* nonnull sret %4, i64 2, %"class.base::BasicStringPiece.10"* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #9
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #9
  %51 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i16*, i16** %12, align 8
  %56 = load i64, i64* %13, align 8
  %57 = bitcast %"class.std::__1::basic_string.1"* %3 to i16*
  %58 = zext i8 %53 to i64
  %59 = select i1 %54, i16* %55, i16* %57
  %60 = select i1 %54, i64 %56, i64 %58
  br i1 %37, label %68, label %61

61:                                               ; preds = %45, %61
  %62 = phi i64 [ %64, %61 ], [ 0, %45 ]
  %63 = phi i16* [ %65, %61 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %45 ]
  %64 = add i64 %62, 1
  %65 = getelementptr inbounds i16, i16* %63, i64 1
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %45
  %69 = phi i64 [ 0, %45 ], [ %64, %61 ]
  %70 = icmp eq i64 %60, 0
  br i1 %70, label %98, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds i16, i16* %59, i64 %60
  %73 = icmp eq i64 %69, 0
  br label %74

74:                                               ; preds = %89, %71
  %75 = phi i16* [ %59, %71 ], [ %90, %89 ]
  br i1 %73, label %92, label %76

76:                                               ; preds = %74
  %77 = load i16, i16* %75, align 2
  br label %78

78:                                               ; preds = %83, %76
  %79 = phi i64 [ %69, %76 ], [ %85, %83 ]
  %80 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %76 ], [ %84, %83 ]
  %81 = load i16, i16* %80, align 2
  %82 = icmp eq i16 %81, %77
  br i1 %82, label %87, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds i16, i16* %80, i64 1
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %92, label %78

87:                                               ; preds = %78
  %88 = icmp eq i16* %80, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds i16, i16* %75, i64 1
  %91 = icmp eq i16* %90, %72
  br i1 %91, label %98, label %74

92:                                               ; preds = %74, %87, %83
  %93 = phi i16* [ %75, %83 ], [ %59, %74 ], [ %75, %87 ]
  %94 = ptrtoint i16* %93 to i64
  %95 = ptrtoint i16* %59 to i64
  %96 = sub i64 %94, %95
  %97 = icmp eq i64 %96, -2
  br i1 %97, label %98, label %100

98:                                               ; preds = %89, %68, %92
  %99 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %355

100:                                              ; preds = %92
  %101 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  %102 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %104, i64 0, i32 1, i32 1
  %106 = bitcast %"class.std::__1::basic_string.1"* %4 to i16*
  %107 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  %108 = bitcast %"class.std::__1::basic_string.1"* %3 to %"class.std::__1::allocator.8"*
  %109 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = bitcast %"class.std::__1::basic_string.1"* %6 to i8**
  %112 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %116 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %117 = bitcast %"class.std::__1::basic_string.1"* %6 to i16*
  %118 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %124

124:                                              ; preds = %100, %349
  %125 = phi i64 [ %56, %100 ], [ %309, %349 ]
  %126 = phi i16* [ %55, %100 ], [ %310, %349 ]
  %127 = phi i8 [ %53, %100 ], [ %311, %349 ]
  %128 = phi i64 [ %96, %100 ], [ %353, %349 ]
  %129 = ashr exact i64 %128, 1
  %130 = icmp slt i8 %127, 0
  %131 = zext i8 %127 to i64
  %132 = select i1 %130, i16* %126, i16* %57
  %133 = select i1 %130, i64 %125, i64 %131
  %134 = getelementptr inbounds i16, i16* %132, i64 %129
  %135 = load i16, i16* %134, align 2
  %136 = icmp eq i16 %135, 45
  %137 = zext i1 %136 to i64
  %138 = add nsw i64 %129, %137
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %308, label %140

140:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 24, i1 false) #9
  %141 = select i1 %130, i16* %126, i16* %57
  %142 = getelementptr inbounds i16, i16* %141, i64 %138
  %143 = load i16, i16* %142, align 2
  %144 = icmp eq i16 %143, 34
  br i1 %144, label %145, label %206

145:                                              ; preds = %140
  %146 = add nsw i64 %138, 1
  %147 = zext i8 %127 to i64
  %148 = select i1 %130, i64 %125, i64 %147
  %149 = icmp ugt i64 %148, %146
  br i1 %149, label %150, label %172

150:                                              ; preds = %145
  %151 = sub i64 %148, %146
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %172, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds i16, i16* %141, i64 %146
  br label %155

155:                                              ; preds = %160, %153
  %156 = phi i64 [ %162, %160 ], [ %151, %153 ]
  %157 = phi i16* [ %161, %160 ], [ %154, %153 ]
  %158 = load i16, i16* %157, align 2
  %159 = icmp eq i16 %158, 34
  br i1 %159, label %164, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = add i64 %156, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %172, label %155

164:                                              ; preds = %155
  %165 = icmp eq i16* %157, null
  %166 = ptrtoint i16* %157 to i64
  %167 = ptrtoint i16* %141 to i64
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 1
  %170 = icmp eq i64 %168, -2
  %171 = or i1 %165, %170
  br i1 %171, label %172, label %197

172:                                              ; preds = %160, %150, %164, %145
  br i1 %130, label %173, label %177

173:                                              ; preds = %172
  %174 = load i64, i64* %14, align 8
  %175 = and i64 %174, 9223372036854775807
  %176 = add nsw i64 %175, -1
  br label %177

177:                                              ; preds = %172, %173
  %178 = phi i64 [ %125, %173 ], [ %147, %172 ]
  %179 = phi i64 [ %176, %173 ], [ 10, %172 ]
  %180 = icmp eq i64 %178, %179
  br i1 %180, label %181, label %186

181:                                              ; preds = %177
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"* nonnull %3, i64 %179, i64 1, i64 %179, i64 %179, i64 0, i64 0) #9
  %182 = load i8, i8* %52, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %181
  %185 = load i16*, i16** %12, align 8
  br label %190

186:                                              ; preds = %177
  br i1 %130, label %190, label %187

187:                                              ; preds = %186, %181
  %188 = trunc i64 %178 to i8
  %189 = add i8 %188, 1
  store i8 %189, i8* %52, align 1
  br label %193

190:                                              ; preds = %184, %186
  %191 = phi i16* [ %185, %184 ], [ %126, %186 ]
  %192 = add i64 %178, 1
  store i64 %192, i64* %13, align 8
  br label %193

193:                                              ; preds = %187, %190
  %194 = phi i16* [ %57, %187 ], [ %191, %190 ]
  %195 = getelementptr inbounds i16, i16* %194, i64 %178
  store i16 34, i16* %195, align 2
  %196 = getelementptr inbounds i16, i16* %195, i64 1
  store i16 0, i16* %196, align 2
  br label %197

197:                                              ; preds = %164, %193
  %198 = phi i64 [ %178, %193 ], [ %169, %164 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #9
  %199 = sub i64 %198, %146
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %7, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %3, i64 %146, i64 %199, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %108) #9
  %200 = load i8, i8* %110, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  %203 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %203) #10
  br label %204

204:                                              ; preds = %202, %197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* nonnull align 8 %112, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #9
  %205 = add i64 %198, 1
  br label %255

206:                                              ; preds = %140
  %207 = zext i8 %127 to i64
  %208 = select i1 %130, i64 %125, i64 %207
  %209 = load i8, i8* %105, align 1
  %210 = icmp slt i8 %209, 0
  %211 = load i16*, i16** %29, align 8
  %212 = load i64, i64* %30, align 8
  %213 = zext i8 %209 to i64
  %214 = select i1 %210, i16* %211, i16* %106
  %215 = select i1 %210, i64 %212, i64 %213
  %216 = icmp ule i64 %208, %138
  %217 = icmp eq i64 %215, 0
  %218 = or i1 %216, %217
  br i1 %218, label %245, label %219

219:                                              ; preds = %206
  %220 = getelementptr inbounds i16, i16* %141, i64 %208
  %221 = getelementptr inbounds i16, i16* %214, i64 %215
  br label %222

222:                                              ; preds = %235, %219
  %223 = phi i16 [ %143, %219 ], [ %236, %235 ]
  %224 = phi i16* [ %142, %219 ], [ %233, %235 ]
  br label %227

225:                                              ; preds = %227
  %226 = icmp eq i16* %231, %221
  br i1 %226, label %232, label %227

227:                                              ; preds = %225, %222
  %228 = phi i16* [ %231, %225 ], [ %214, %222 ]
  %229 = load i16, i16* %228, align 2
  %230 = icmp eq i16 %223, %229
  %231 = getelementptr inbounds i16, i16* %228, i64 1
  br i1 %230, label %237, label %225

232:                                              ; preds = %225
  %233 = getelementptr inbounds i16, i16* %224, i64 1
  %234 = icmp eq i16* %233, %220
  br i1 %234, label %245, label %235

235:                                              ; preds = %232
  %236 = load i16, i16* %233, align 2
  br label %222

237:                                              ; preds = %227
  %238 = icmp eq i16* %224, %220
  %239 = ptrtoint i16* %224 to i64
  %240 = ptrtoint i16* %141 to i64
  %241 = sub i64 %239, %240
  %242 = ashr exact i64 %241, 1
  %243 = icmp eq i64 %241, -2
  %244 = or i1 %238, %243
  br i1 %244, label %245, label %247

245:                                              ; preds = %232, %237, %206
  %246 = select i1 %130, i64 %125, i64 %207
  br label %247

247:                                              ; preds = %245, %237
  %248 = phi i64 [ %242, %237 ], [ %246, %245 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #9
  %249 = sub i64 %248, %138
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %8, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %3, i64 %138, i64 %249, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %108) #9
  %250 = load i8, i8* %110, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %247
  %253 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %253) #10
  br label %254

254:                                              ; preds = %252, %247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* nonnull align 8 %107, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #9
  br label %255

255:                                              ; preds = %254, %204
  %256 = phi i64 [ %205, %204 ], [ %248, %254 ]
  %257 = load i8, i8* %110, align 1
  %258 = icmp slt i8 %257, 0
  %259 = load i64, i64* %103, align 8
  %260 = zext i8 %257 to i64
  %261 = select i1 %258, i64 %259, i64 %260
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %299, label %263

263:                                              ; preds = %255
  %264 = load i8, i8* %114, align 1
  %265 = icmp slt i8 %264, 0
  %266 = load i64, i64* %49, align 8
  %267 = zext i8 %264 to i64
  %268 = select i1 %265, i64 %266, i64 %267
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %275, label %270

270:                                              ; preds = %263
  %271 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #9
  %272 = load i8, i8* %110, align 1
  %273 = load i64, i64* %103, align 8
  %274 = zext i8 %272 to i64
  br label %275

275:                                              ; preds = %270, %263
  %276 = phi i64 [ %274, %270 ], [ %260, %263 ]
  %277 = phi i64 [ %273, %270 ], [ %259, %263 ]
  %278 = phi i8 [ %272, %270 ], [ %257, %263 ]
  %279 = select i1 %136, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #9
  %280 = icmp slt i8 %278, 0
  %281 = load i16*, i16** %102, align 8
  %282 = select i1 %280, i16* %281, i16* %117
  %283 = select i1 %280, i64 %277, i64 %276
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i16* %282, i64 %283) #9
  call void @_ZN5drive4util22EscapeQueryStringValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10)
  %284 = load i8, i8* %119, align 1
  %285 = icmp slt i8 %284, 0
  %286 = load i8*, i8** %120, align 8
  %287 = select i1 %285, i8* %286, i8* %115
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8* %279, i8* %287) #9
  %288 = load i8, i8* %119, align 1
  %289 = icmp slt i8 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %275
  %291 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %291) #10
  br label %292

292:                                              ; preds = %275, %290
  %293 = load i8, i8* %122, align 1
  %294 = icmp slt i8 %293, 0
  br i1 %294, label %295, label %297

295:                                              ; preds = %292
  %296 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %296) #10
  br label %297

297:                                              ; preds = %292, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #9
  %298 = load i8, i8* %110, align 1
  br label %299

299:                                              ; preds = %255, %297
  %300 = phi i8 [ %257, %255 ], [ %298, %297 ]
  %301 = icmp slt i8 %300, 0
  br i1 %301, label %302, label %304

302:                                              ; preds = %299
  %303 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %303) #10
  br label %304

304:                                              ; preds = %299, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #9
  %305 = load i8, i8* %52, align 1
  %306 = load i16*, i16** %12, align 8
  %307 = load i64, i64* %13, align 8
  br label %308

308:                                              ; preds = %124, %304
  %309 = phi i64 [ %307, %304 ], [ %125, %124 ]
  %310 = phi i16* [ %306, %304 ], [ %126, %124 ]
  %311 = phi i8 [ %305, %304 ], [ %127, %124 ]
  %312 = phi i64 [ %256, %304 ], [ %133, %124 ]
  %313 = icmp slt i8 %311, 0
  %314 = zext i8 %311 to i64
  %315 = select i1 %313, i16* %310, i16* %57
  %316 = select i1 %313, i64 %309, i64 %314
  br i1 %37, label %324, label %317

317:                                              ; preds = %308, %317
  %318 = phi i64 [ %320, %317 ], [ 0, %308 ]
  %319 = phi i16* [ %321, %317 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %308 ]
  %320 = add i64 %318, 1
  %321 = getelementptr inbounds i16, i16* %319, i64 1
  %322 = load i16, i16* %321, align 2
  %323 = icmp eq i16 %322, 0
  br i1 %323, label %324, label %317

324:                                              ; preds = %317, %308
  %325 = phi i64 [ 0, %308 ], [ %320, %317 ]
  %326 = icmp ugt i64 %316, %312
  br i1 %326, label %327, label %355

327:                                              ; preds = %324
  %328 = getelementptr inbounds i16, i16* %315, i64 %316
  %329 = getelementptr inbounds i16, i16* %315, i64 %312
  %330 = icmp eq i64 %325, 0
  br label %331

331:                                              ; preds = %346, %327
  %332 = phi i16* [ %329, %327 ], [ %347, %346 ]
  br i1 %330, label %349, label %333

333:                                              ; preds = %331
  %334 = load i16, i16* %332, align 2
  br label %335

335:                                              ; preds = %340, %333
  %336 = phi i64 [ %325, %333 ], [ %342, %340 ]
  %337 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %333 ], [ %341, %340 ]
  %338 = load i16, i16* %337, align 2
  %339 = icmp eq i16 %338, %334
  br i1 %339, label %344, label %340

340:                                              ; preds = %335
  %341 = getelementptr inbounds i16, i16* %337, i64 1
  %342 = add i64 %336, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %349, label %335

344:                                              ; preds = %335
  %345 = icmp eq i16* %337, null
  br i1 %345, label %349, label %346

346:                                              ; preds = %344
  %347 = getelementptr inbounds i16, i16* %332, i64 1
  %348 = icmp eq i16* %347, %328
  br i1 %348, label %355, label %331

349:                                              ; preds = %331, %344, %340
  %350 = phi i16* [ %332, %340 ], [ %329, %331 ], [ %332, %344 ]
  %351 = ptrtoint i16* %350 to i64
  %352 = ptrtoint i16* %315 to i64
  %353 = sub i64 %351, %352
  %354 = icmp eq i64 %353, -2
  br i1 %354, label %355, label %124

355:                                              ; preds = %324, %349, %346, %98
  %356 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %99, %98 ], [ %104, %346 ], [ %104, %349 ], [ %104, %324 ]
  %357 = phi i8 [ %53, %98 ], [ %311, %346 ], [ %311, %349 ], [ %311, %324 ]
  %358 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %356, i64 0, i32 1, i32 1
  %359 = load i8, i8* %358, align 1
  %360 = icmp slt i8 %359, 0
  br i1 %360, label %361, label %365

361:                                              ; preds = %355
  %362 = bitcast %"class.std::__1::basic_string.1"* %4 to i8**
  %363 = load i8*, i8** %362, align 8
  call void @_ZdlPv(i8* %363) #10
  %364 = load i8, i8* %52, align 1
  br label %365

365:                                              ; preds = %355, %361
  %366 = phi i8 [ %357, %355 ], [ %364, %361 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  %367 = icmp slt i8 %366, 0
  br i1 %367, label %368, label %371

368:                                              ; preds = %365
  %369 = bitcast %"class.std::__1::basic_string.1"* %3 to i8**
  %370 = load i8*, i8** %369, align 8
  call void @_ZdlPv(i8* %370) #10
  br label %371

371:                                              ; preds = %365, %368
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  ret void
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.1"* sret, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5drive4util22CanonicalizeResourceIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.re2::StringPiece", align 8
  %4 = alloca [1 x %"class.re2::RE2::Arg"*], align 8
  %5 = alloca %"class.re2::RE2::Arg", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.re2::RE2", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = ptrtoint i8* %17 to i64
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %12 to i64
  %22 = select i1 %13, i64 %20, i64 %21
  %23 = bitcast %"class.re2::RE2"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %23) #9
  call void @_ZN3re23RE2C1EPKc(%"class.re2::RE2"* nonnull %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #9
  %24 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  %25 = bitcast %"class.re2::RE2::Arg"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #9
  %26 = bitcast %"class.re2::RE2::Arg"* %5 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"class.re2::RE2::Arg", %"class.re2::RE2::Arg"* %5, i64 0, i32 1
  store i1 (i8*, i64, i8*)* @_ZN3re23RE23Arg11DoParse3aryINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEbPKcmPv, i1 (i8*, i64, i8*)** %27, align 8
  %28 = bitcast %"class.re2::StringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = bitcast %"class.re2::StringPiece"* %3 to i64*
  store i64 %18, i64* %29, align 8
  %30 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %3, i64 0, i32 1
  store i64 %22, i64* %30, align 8
  %31 = bitcast [1 x %"class.re2::RE2::Arg"*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = getelementptr inbounds [1 x %"class.re2::RE2::Arg"*], [1 x %"class.re2::RE2::Arg"*]* %4, i64 0, i64 0
  store %"class.re2::RE2::Arg"* %5, %"class.re2::RE2::Arg"** %32, align 8
  %33 = call zeroext i1 @_ZN3re23RE210FullMatchNERKNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull dereferenceable(16) %3, %"class.re2::RE2"* nonnull dereferenceable(200) %7, %"class.re2::RE2::Arg"** nonnull %32, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #9
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %23) #9
  br i1 %33, label %34, label %36

34:                                               ; preds = %2
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %8, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  br label %44

36:                                               ; preds = %2
  %37 = load i8, i8* %11, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %16, i64 24, i1 false) #9
  br label %44

41:                                               ; preds = %36
  %42 = load i8*, i8** %14, align 8
  %43 = load i64, i64* %19, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %42, i64 %43) #9
  br label %44

44:                                               ; preds = %41, %39, %34
  %45 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %50) #10
  br label %51

51:                                               ; preds = %44, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

declare void @_ZN3re23RE2C1EPKc(%"class.re2::RE2"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3re23RE2D1Ev(%"class.re2::RE2"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5drive4util12GetMd5DigestERKN4base8FilePathEPKNS1_10AtomicFlagE(%"class.std::__1::basic_string"* noalias sret, %"class.base::FilePath"* dereferenceable(24), %"class.base::AtomicFlag"* readonly) local_unnamed_addr #0 {
  %4 = alloca %"class.base::File", align 8
  %5 = alloca %struct.md5_state_st, align 4
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"struct.base::MD5Digest", align 1
  %8 = bitcast %"class.base::File"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %4, %"class.base::FilePath"* dereferenceable(24) %1, i32 33) #9
  %9 = call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* nonnull %4) #9
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #9
  br label %40

12:                                               ; preds = %3
  %13 = bitcast %struct.md5_state_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 92, i1 false)
  call void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st* nonnull %5) #9
  %14 = call i8* @_Znam(i64 524288) #10
  %15 = icmp eq %"class.base::AtomicFlag"* %2, null
  %16 = getelementptr inbounds %"class.base::AtomicFlag", %"class.base::AtomicFlag"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  br label %20

20:                                               ; preds = %34, %12
  %21 = phi i64 [ 0, %12 ], [ %36, %34 ]
  br i1 %15, label %27, label %22

22:                                               ; preds = %20
  %23 = load atomic i8, i8* %16 acquire, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #9
  br label %39

27:                                               ; preds = %22, %20
  %28 = call i32 @_ZN4base4File4ReadElPci(%"class.base::File"* nonnull %4, i64 %21, i8* nonnull %14, i32 524288) #9
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #9
  br label %39

32:                                               ; preds = %27
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = sext i32 %28 to i64
  %36 = add nsw i64 %21, %35
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  store i8* %14, i8** %18, align 8
  store i64 %35, i64* %19, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  br label %20

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.base::MD5Digest", %"struct.base::MD5Digest"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %38, i8 -86, i64 16, i1 false)
  call void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"* nonnull %7, %struct.md5_state_st* nonnull %5) #9
  call void @_ZN4base17MD5DigestToBase16ERKNS_9MD5DigestE(%"class.std::__1::basic_string"* sret %0, %"struct.base::MD5Digest"* nonnull dereferenceable(16) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  br label %39

39:                                               ; preds = %30, %37, %25
  call void @_ZdaPv(i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %13) #9
  br label %40

40:                                               ; preds = %39, %10
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"*, %"class.base::FilePath"* dereferenceable(24), i32) unnamed_addr #1

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #1

declare void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

declare i32 @_ZN4base4File4ReadElPci(%"class.base::File"*, i64, i8*, i32) local_unnamed_addr #1

declare void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"*, %struct.md5_state_st*) local_unnamed_addr #1

declare void @_ZN4base17MD5DigestToBase16ERKNS_9MD5DigestE(%"class.std::__1::basic_string"* sret, %"struct.base::MD5Digest"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5drive4util29IsKnownHostedDocumentMimeTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %5

5:                                                ; preds = %19, %1
  %6 = phi i64 [ 0, %1 ], [ %20, %19 ]
  %7 = getelementptr inbounds [8 x %"struct.drive::util::(anonymous namespace)::HostedDocumentKind"], [8 x %"struct.drive::util::(anonymous namespace)::HostedDocumentKind"]* @_ZN5drive4util12_GLOBAL__N_120kHostedDocumentKindsE, i64 0, i64 %6, i32 0
  %8 = load i8*, i8** %7, align 16
  %9 = tail call i64 @strlen(i8* %8) #9
  %10 = load i8, i8* %3, align 1
  %11 = icmp slt i8 %10, 0
  %12 = load i64, i64* %4, align 8
  %13 = zext i8 %10 to i64
  %14 = select i1 %11, i64 %12, i64 %13
  %15 = icmp eq i64 %9, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %5
  %17 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* %8, i64 %9) #9
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %5, %16
  %20 = add nuw nsw i64 %6, 1
  %21 = icmp eq i64 %20, 8
  br i1 %21, label %22, label %5

22:                                               ; preds = %19, %16
  %23 = phi i1 [ true, %16 ], [ false, %19 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5drive4util26HasHostedDocumentExtensionERKN4base8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.base::FilePath"* %3 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  call void @_ZNK4base8FilePath9ExtensionEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::FilePath"* %0) #9
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = select i1 %14, i8* %16, i8* %10
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %13 to i64
  %21 = select i1 %14, i64 %19, i64 %20
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %3, i8* %17, i64 %21) #9
  call void @_ZNK4base8FilePath12AsUTF8UnsafeEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::FilePath"* nonnull %3) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #9
  %22 = load i8, i8* %12, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %1
  %25 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %1, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  %27 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  br label %29

29:                                               ; preds = %43, %26
  %30 = phi i64 [ 0, %26 ], [ %44, %43 ]
  %31 = getelementptr inbounds [8 x %"struct.drive::util::(anonymous namespace)::HostedDocumentKind"], [8 x %"struct.drive::util::(anonymous namespace)::HostedDocumentKind"]* @_ZN5drive4util12_GLOBAL__N_120kHostedDocumentKindsE, i64 0, i64 %30, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = call i64 @strlen(i8* %32) #9
  %34 = load i8, i8* %28, align 1
  %35 = icmp slt i8 %34, 0
  %36 = load i64, i64* %7, align 8
  %37 = zext i8 %34 to i64
  %38 = select i1 %35, i64 %36, i64 %37
  %39 = icmp eq i64 %33, %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %32, i64 %33) #9
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %29, %40
  %44 = add nuw nsw i64 %30, 1
  %45 = icmp eq i64 %44, 8
  br i1 %45, label %46, label %29

46:                                               ; preds = %43
  %47 = load i8, i8* %28, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %7, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = icmp eq i64 %51, 6
  br i1 %52, label %53, label %56

53:                                               ; preds = %46
  %54 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5drive4util12_GLOBAL__N_131kUnknownHostedDocumentExtensionE, i64 0, i64 0), i64 6) #9
  %55 = icmp eq i32 %54, 0
  br label %56

56:                                               ; preds = %40, %53, %46
  %57 = phi i1 [ %55, %53 ], [ false, %46 ], [ true, %40 ]
  %58 = load i8, i8* %28, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret i1 %57
}

declare void @_ZNK4base8FilePath9ExtensionEv(%"class.std::__1::basic_string"* sret, %"class.base::FilePath"*) local_unnamed_addr #1

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #1

declare void @_ZNK4base8FilePath12AsUTF8UnsafeEv(%"class.std::__1::basic_string"* sret, %"class.base::FilePath"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEELm18446744073709551615EEE(%"class.std::__1::basic_string.1"* sret, i64, %"class.base::BasicStringPiece.10"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #11
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #11
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #10
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !12

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !13
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !13
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !16, !noalias !13
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !16, !noalias !13
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !13
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !13
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !16, !noalias !13
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !16, !noalias !13
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !13
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !13
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !16, !noalias !13
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !16, !noalias !13
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !13
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !13
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !16, !noalias !13
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !16, !noalias !13
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !18

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !13
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !13
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !16, !noalias !13
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !16, !noalias !13
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !19

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !20

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !21

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #10
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #11
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.1"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #11
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #11
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #10
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !22
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !22
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !25, !noalias !22
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !25, !noalias !22
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !22
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !22
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !25, !noalias !22
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !25, !noalias !22
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !22
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !22
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !25, !noalias !22
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !25, !noalias !22
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !22
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !22
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !25, !noalias !22
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !25, !noalias !22
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !27

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !22
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !22
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !25, !noalias !22
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !25, !noalias !22
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !28

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !29

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !30

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

declare zeroext i1 @_ZN3re23RE210FullMatchNERKNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* dereferenceable(16), %"class.re2::RE2"* dereferenceable(200), %"class.re2::RE2::Arg"**, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3re23RE23Arg11DoParse3aryINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEbPKcmPv(i8*, i64, i8*) #0 comdat align 2 {
  %4 = bitcast i8* %2 to %"class.std::__1::basic_string"*
  %5 = tail call zeroext i1 @_ZN3re212re2_internal5ParseINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbPKcmPT_(i8* %0, i64 %1, %"class.std::__1::basic_string"* %4) #9
  ret i1 %5
}

declare zeroext i1 @_ZN3re212re2_internal5ParseINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbPKcmPT_(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
