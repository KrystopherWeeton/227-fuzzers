; ModuleID = '../../chrome/browser/sync/device_info_sync_client_impl.cc'
source_filename = "../../chrome/browser/sync/device_info_sync_client_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.browser_sync::DeviceInfoSyncClientImpl" = type { %"class.syncer::DeviceInfoSyncClient", %class.Profile* }
%"class.syncer::DeviceInfoSyncClient" = type { i32 (...)** }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.7", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.24" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.syncer::SyncPrefs" = type <{ %class.PrefService*, %"class.base::ObserverList.35", %class.PrefMember, %class.PrefMember, %class.PrefMember, i8, [7 x i8] }>
%class.PrefService = type opaque
%"class.base::ObserverList.35" = type <{ %"class.std::__1::vector.36", %"class.base::LinkedList.43", i64, i32, [4 x i8] }>
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.38" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.43" = type { %"class.base::LinkNode.44" }
%"class.base::LinkNode.44" = type { %"class.base::internal::LinkNodeBase" }
%class.PrefMember = type { %"class.subtle::PrefMemberBase.base", %class.scoped_refptr.48 }
%"class.subtle::PrefMemberBase.base" = type <{ %class.PrefObserver, %"class.std::__1::basic_string", %"class.base::RepeatingCallback", %class.PrefService*, i8 }>
%class.PrefObserver = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.46 }
%class.scoped_refptr.46 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.47", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.47" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.48 = type { %"class.PrefMember<bool>::Internal"* }
%"class.PrefMember<bool>::Internal" = type { %"class.subtle::PrefMemberBase::Internal.base", i8, [4 x i8] }
%"class.subtle::PrefMemberBase::Internal.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.49", [4 x i8], %class.scoped_refptr.50, i8, i8, i8 }>
%"class.base::RefCountedThreadSafe.49" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.50 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.51" }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.52 }
%union.anon.52 = type { %"struct.syncer::DeviceInfo::SharingInfo" }
%"struct.syncer::DeviceInfo::SharingInfo" = type { %"struct.syncer::DeviceInfo::SharingTargetInfo", %"struct.syncer::DeviceInfo::SharingTargetInfo", %"class.std::__1::set" }
%"struct.syncer::DeviceInfo::SharingTargetInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"class.std::__1::basic_string" }
%"class.syncer::SyncInvalidationsService" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, [7 x i8], %union.anon.76 }
%union.anon.76 = type { %"struct.syncer::DeviceInfo::PhoneAsASecurityKeyInfo" }
%"struct.syncer::DeviceInfo::PhoneAsASecurityKeyInfo" = type <{ i16, [6 x i8], %"class.std::__1::vector.77", %"struct.std::__1::array", i32, %"struct.std::__1::array.84", [3 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { i8*, i8*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { i8* }
%"struct.std::__1::array" = type { [32 x i8] }
%"struct.std::__1::array.84" = type { [65 x i8] }

@_ZTVN12browser_sync24DeviceInfoSyncClientImplE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZN12browser_sync24DeviceInfoSyncClientImplD2Ev to i8*), i8* bitcast (void (%"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZN12browser_sync24DeviceInfoSyncClientImplD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZNK12browser_sync24DeviceInfoSyncClientImpl23GetSigninScopedDeviceIdEv to i8*), i8* bitcast (i1 (%"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZNK12browser_sync24DeviceInfoSyncClientImpl32GetSendTabToSelfReceivingEnabledEv to i8*), i8* bitcast (void (%"class.absl::optional"*, %"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZNK12browser_sync24DeviceInfoSyncClientImpl19GetLocalSharingInfoEv to i8*), i8* bitcast (void (%"class.absl::optional.62"*, %"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZNK12browser_sync24DeviceInfoSyncClientImpl23GetFCMRegistrationTokenEv to i8*), i8* bitcast ({ i8, i64 } (%"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZNK12browser_sync24DeviceInfoSyncClientImpl22GetInterestedDataTypesEv to i8*), i8* bitcast (void (%"class.absl::optional.72"*, %"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZNK12browser_sync24DeviceInfoSyncClientImpl26GetPhoneAsASecurityKeyInfoEv to i8*), i8* bitcast (i1 (%"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZNK12browser_sync24DeviceInfoSyncClientImpl24IsUmaEnabledOnCrOSDeviceEv to i8*)] }, align 8
@.str = private unnamed_addr constant [13 x i8] c"local_device\00", align 1

@_ZN12browser_sync24DeviceInfoSyncClientImplC1EP7Profile = hidden unnamed_addr alias void (%"class.browser_sync::DeviceInfoSyncClientImpl"*, %class.Profile*), void (%"class.browser_sync::DeviceInfoSyncClientImpl"*, %class.Profile*)* @_ZN12browser_sync24DeviceInfoSyncClientImplC2EP7Profile
@_ZN12browser_sync24DeviceInfoSyncClientImplD1Ev = hidden unnamed_addr alias void (%"class.browser_sync::DeviceInfoSyncClientImpl"*), void (%"class.browser_sync::DeviceInfoSyncClientImpl"*)* @_ZN12browser_sync24DeviceInfoSyncClientImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12browser_sync24DeviceInfoSyncClientImplC2EP7Profile(%"class.browser_sync::DeviceInfoSyncClientImpl"*, %class.Profile*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %0, i64 0, i32 0
  tail call void @_ZN6syncer20DeviceInfoSyncClientC2Ev(%"class.syncer::DeviceInfoSyncClient"* %3) #6
  %4 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12browser_sync24DeviceInfoSyncClientImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %0, i64 0, i32 1
  store %class.Profile* %1, %class.Profile** %5, align 8
  ret void
}

declare void @_ZN6syncer20DeviceInfoSyncClientC2Ev(%"class.syncer::DeviceInfoSyncClient"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6syncer20DeviceInfoSyncClientD2Ev(%"class.syncer::DeviceInfoSyncClient"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12browser_sync24DeviceInfoSyncClientImplD2Ev(%"class.browser_sync::DeviceInfoSyncClientImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %0, i64 0, i32 0
  tail call void @_ZN6syncer20DeviceInfoSyncClientD2Ev(%"class.syncer::DeviceInfoSyncClient"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12browser_sync24DeviceInfoSyncClientImplD0Ev(%"class.browser_sync::DeviceInfoSyncClientImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %0, i64 0, i32 0
  tail call void @_ZN6syncer20DeviceInfoSyncClientD2Ev(%"class.syncer::DeviceInfoSyncClient"* %2) #6
  %3 = bitcast %"class.browser_sync::DeviceInfoSyncClientImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12browser_sync24DeviceInfoSyncClientImpl23GetSigninScopedDeviceIdEv(%"class.std::__1::basic_string"* noalias sret, %"class.browser_sync::DeviceInfoSyncClientImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.syncer::SyncPrefs", align 8
  %4 = bitcast %"class.syncer::SyncPrefs"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 264, i1 false)
  %5 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %1, i64 0, i32 1
  %6 = load %class.Profile*, %class.Profile** %5, align 8
  %7 = bitcast %class.Profile* %6 to %class.PrefService* (%class.Profile*)***
  %8 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %7, align 8
  %9 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %8, i64 46
  %10 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %9, align 8
  %11 = tail call %class.PrefService* %10(%class.Profile* %6) #6
  call void @_ZN6syncer9SyncPrefsC1EP11PrefService(%"class.syncer::SyncPrefs"* nonnull %3, %class.PrefService* %11) #6
  %12 = call zeroext i1 @_ZNK6syncer9SyncPrefs18IsLocalSyncEnabledEv(%"class.syncer::SyncPrefs"* nonnull %3) #6
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 12, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12, i1 false) #6
  %17 = getelementptr inbounds i8, i8* %16, i64 12
  store i8 0, i8* %17, align 4
  br label %20

18:                                               ; preds = %2
  %19 = load %class.Profile*, %class.Profile** %5, align 8
  call void @_Z33GetSigninScopedDeviceIdForProfileP7Profile(%"class.std::__1::basic_string"* sret %0, %class.Profile* %19) #6
  br label %20

20:                                               ; preds = %18, %13
  call void @_ZN6syncer9SyncPrefsD1Ev(%"class.syncer::SyncPrefs"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %4) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN6syncer9SyncPrefsC1EP11PrefService(%"class.syncer::SyncPrefs"*, %class.PrefService*) unnamed_addr #1

declare zeroext i1 @_ZNK6syncer9SyncPrefs18IsLocalSyncEnabledEv(%"class.syncer::SyncPrefs"*) local_unnamed_addr #1

declare void @_Z33GetSigninScopedDeviceIdForProfileP7Profile(%"class.std::__1::basic_string"* sret, %class.Profile*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6syncer9SyncPrefsD1Ev(%"class.syncer::SyncPrefs"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12browser_sync24DeviceInfoSyncClientImpl32GetSendTabToSelfReceivingEnabledEv(%"class.browser_sync::DeviceInfoSyncClientImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %0, i64 0, i32 1
  %3 = load %class.Profile*, %class.Profile** %2, align 8
  %4 = bitcast %class.Profile* %3 to %class.PrefService* (%class.Profile*)***
  %5 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %4, align 8
  %6 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %5, i64 46
  %7 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %6, align 8
  %8 = tail call %class.PrefService* %7(%class.Profile* %3) #6
  %9 = tail call zeroext i1 @_ZN16send_tab_to_self36IsReceivingEnabledByUserOnThisDeviceEP11PrefService(%class.PrefService* %8) #6
  ret i1 %9
}

declare zeroext i1 @_ZN16send_tab_to_self36IsReceivingEnabledByUserOnThisDeviceEP11PrefService(%class.PrefService*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12browser_sync24DeviceInfoSyncClientImpl19GetLocalSharingInfoEv(%"class.absl::optional"* noalias sret, %"class.browser_sync::DeviceInfoSyncClientImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %1, i64 0, i32 1
  %4 = load %class.Profile*, %class.Profile** %3, align 8
  %5 = bitcast %class.Profile* %4 to %class.PrefService* (%class.Profile*)***
  %6 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %5, align 8
  %7 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %6, i64 46
  %8 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %7, align 8
  %9 = tail call %class.PrefService* %8(%class.Profile* %4) #6
  tail call void @_ZN21SharingSyncPreference26GetLocalSharingInfoForSyncEP11PrefService(%"class.absl::optional"* sret %0, %class.PrefService* %9) #6
  ret void
}

declare void @_ZN21SharingSyncPreference26GetLocalSharingInfoForSyncEP11PrefService(%"class.absl::optional"* sret, %class.PrefService*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12browser_sync24DeviceInfoSyncClientImpl23GetFCMRegistrationTokenEv(%"class.absl::optional.62"* noalias sret, %"class.browser_sync::DeviceInfoSyncClientImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %1, i64 0, i32 1
  %4 = load %class.Profile*, %class.Profile** %3, align 8
  %5 = tail call %"class.syncer::SyncInvalidationsService"* @_ZN31SyncInvalidationsServiceFactory13GetForProfileEP7Profile(%class.Profile* %4) #6
  %6 = icmp eq %"class.syncer::SyncInvalidationsService"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.syncer::SyncInvalidationsService"* %5 to void (%"class.absl::optional.62"*, %"class.syncer::SyncInvalidationsService"*)***
  %9 = load void (%"class.absl::optional.62"*, %"class.syncer::SyncInvalidationsService"*)**, void (%"class.absl::optional.62"*, %"class.syncer::SyncInvalidationsService"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.absl::optional.62"*, %"class.syncer::SyncInvalidationsService"*)*, void (%"class.absl::optional.62"*, %"class.syncer::SyncInvalidationsService"*)** %9, i64 8
  %11 = load void (%"class.absl::optional.62"*, %"class.syncer::SyncInvalidationsService"*)*, void (%"class.absl::optional.62"*, %"class.syncer::SyncInvalidationsService"*)** %10, align 8
  tail call void %11(%"class.absl::optional.62"* sret %0, %"class.syncer::SyncInvalidationsService"* nonnull %5) #6
  br label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds i8, i8* %13, i64 31
  %16 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 23, i1 false)
  store i8 0, i8* %15, align 1
  br label %17

17:                                               ; preds = %12, %7
  ret void
}

declare %"class.syncer::SyncInvalidationsService"* @_ZN31SyncInvalidationsServiceFactory13GetForProfileEP7Profile(%class.Profile*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK12browser_sync24DeviceInfoSyncClientImpl22GetInterestedDataTypesEv(%"class.browser_sync::DeviceInfoSyncClientImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.browser_sync::DeviceInfoSyncClientImpl", %"class.browser_sync::DeviceInfoSyncClientImpl"* %0, i64 0, i32 1
  %3 = load %class.Profile*, %class.Profile** %2, align 8
  %4 = tail call %"class.syncer::SyncInvalidationsService"* @_ZN31SyncInvalidationsServiceFactory13GetForProfileEP7Profile(%class.Profile* %3) #6
  %5 = icmp eq %"class.syncer::SyncInvalidationsService"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.syncer::SyncInvalidationsService"* %4 to { i8, i64 } (%"class.syncer::SyncInvalidationsService"*)***
  %8 = load { i8, i64 } (%"class.syncer::SyncInvalidationsService"*)**, { i8, i64 } (%"class.syncer::SyncInvalidationsService"*)*** %7, align 8
  %9 = getelementptr inbounds { i8, i64 } (%"class.syncer::SyncInvalidationsService"*)*, { i8, i64 } (%"class.syncer::SyncInvalidationsService"*)** %8, i64 10
  %10 = load { i8, i64 } (%"class.syncer::SyncInvalidationsService"*)*, { i8, i64 } (%"class.syncer::SyncInvalidationsService"*)** %9, align 8
  %11 = tail call { i8, i64 } %10(%"class.syncer::SyncInvalidationsService"* nonnull %4) #6
  %12 = extractvalue { i8, i64 } %11, 0
  %13 = extractvalue { i8, i64 } %11, 1
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi i8 [ %12, %6 ], [ 1, %1 ]
  %16 = phi i64 [ %13, %6 ], [ 0, %1 ]
  %17 = insertvalue { i8, i64 } undef, i8 %15, 0
  %18 = insertvalue { i8, i64 } %17, i64 %16, 1
  ret { i8, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12browser_sync24DeviceInfoSyncClientImpl26GetPhoneAsASecurityKeyInfoEv(%"class.absl::optional.72"* noalias nocapture sret, %"class.browser_sync::DeviceInfoSyncClientImpl"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast %union.anon.76* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 136, i1 false) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12browser_sync24DeviceInfoSyncClientImpl24IsUmaEnabledOnCrOSDeviceEv(%"class.browser_sync::DeviceInfoSyncClientImpl"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
