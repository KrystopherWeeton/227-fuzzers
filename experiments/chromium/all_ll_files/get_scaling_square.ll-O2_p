; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/get_scaling_square.c'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/get_scaling_square.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind readonly ssp uwtable
define hidden signext i16 @WebRtcSpl_GetScalingSquare(i16* nocapture readonly, i64, i64) local_unnamed_addr #0 {
  %4 = trunc i64 %2 to i32
  %5 = tail call i32 @llvm.ctlz.i32(i32 %4, i1 false) #2, !range !2
  %6 = trunc i32 %5 to i16
  %7 = sub nsw i16 32, %6
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %3
  %10 = icmp ult i64 %1, 8
  br i1 %10, label %50, label %11

11:                                               ; preds = %9
  %12 = and i64 %1, -8
  %13 = getelementptr i16, i16* %0, i64 %12
  %14 = sub i64 %1, %12
  br label %15

15:                                               ; preds = %15, %11
  %16 = phi i64 [ 0, %11 ], [ %37, %15 ]
  %17 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %11 ], [ %35, %15 ]
  %18 = phi <4 x i32> [ <i32 -1, i32 -1, i32 -1, i32 -1>, %11 ], [ %36, %15 ]
  %19 = getelementptr i16, i16* %0, i64 %16
  %20 = bitcast i16* %19 to <4 x i16>*
  %21 = load <4 x i16>, <4 x i16>* %20, align 2
  %22 = getelementptr i16, i16* %19, i64 4
  %23 = bitcast i16* %22 to <4 x i16>*
  %24 = load <4 x i16>, <4 x i16>* %23, align 2
  %25 = icmp slt <4 x i16> %21, zeroinitializer
  %26 = icmp slt <4 x i16> %24, zeroinitializer
  %27 = sub <4 x i16> zeroinitializer, %21
  %28 = sub <4 x i16> zeroinitializer, %24
  %29 = select <4 x i1> %25, <4 x i16> %27, <4 x i16> %21
  %30 = select <4 x i1> %26, <4 x i16> %28, <4 x i16> %24
  %31 = sext <4 x i16> %29 to <4 x i32>
  %32 = sext <4 x i16> %30 to <4 x i32>
  %33 = icmp slt <4 x i32> %17, %31
  %34 = icmp slt <4 x i32> %18, %32
  %35 = select <4 x i1> %33, <4 x i32> %31, <4 x i32> %17
  %36 = select <4 x i1> %34, <4 x i32> %32, <4 x i32> %18
  %37 = add i64 %16, 8
  %38 = icmp eq i64 %37, %12
  br i1 %38, label %39, label %15, !llvm.loop !3

39:                                               ; preds = %15
  %40 = icmp sgt <4 x i32> %35, %36
  %41 = select <4 x i1> %40, <4 x i32> %35, <4 x i32> %36
  %42 = shufflevector <4 x i32> %41, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %43 = icmp sgt <4 x i32> %41, %42
  %44 = select <4 x i1> %43, <4 x i32> %41, <4 x i32> %42
  %45 = shufflevector <4 x i32> %44, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %46 = icmp sgt <4 x i32> %44, %45
  %47 = select <4 x i1> %46, <4 x i32> %44, <4 x i32> %45
  %48 = extractelement <4 x i32> %47, i32 0
  %49 = icmp eq i64 %12, %1
  br i1 %49, label %68, label %50

50:                                               ; preds = %39, %9
  %51 = phi i16* [ %0, %9 ], [ %13, %39 ]
  %52 = phi i32 [ -1, %9 ], [ %48, %39 ]
  %53 = phi i64 [ %1, %9 ], [ %14, %39 ]
  br label %54

54:                                               ; preds = %50, %54
  %55 = phi i16* [ %60, %54 ], [ %51, %50 ]
  %56 = phi i32 [ %65, %54 ], [ %52, %50 ]
  %57 = phi i64 [ %66, %54 ], [ %53, %50 ]
  %58 = load i16, i16* %55, align 2
  %59 = icmp slt i16 %58, 0
  %60 = getelementptr inbounds i16, i16* %55, i64 1
  %61 = sub i16 0, %58
  %62 = select i1 %59, i16 %61, i16 %58
  %63 = sext i16 %62 to i32
  %64 = icmp slt i32 %56, %63
  %65 = select i1 %64, i32 %63, i32 %56
  %66 = add i64 %57, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %54, !llvm.loop !5

68:                                               ; preds = %54, %39, %3
  %69 = phi i32 [ -1, %3 ], [ %48, %39 ], [ %65, %54 ]
  %70 = mul nsw i32 %69, %69
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = tail call i32 @llvm.ctlz.i32(i32 %70, i1 false) #2, !range !2
  %74 = trunc i32 %73 to i16
  %75 = add nsw i16 %74, -1
  br label %76

76:                                               ; preds = %68, %72
  %77 = phi i16 [ %75, %72 ], [ 0, %68 ]
  %78 = icmp eq i32 %69, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %76
  %80 = icmp slt i16 %7, %77
  %81 = sub nsw i16 %7, %77
  %82 = select i1 %80, i16 0, i16 %81
  br label %83

83:                                               ; preds = %76, %79
  %84 = phi i16 [ %82, %79 ], [ 0, %76 ]
  ret i16 %84
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #1

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6, !4}
!6 = !{!"llvm.loop.unroll.runtime.disable"}
