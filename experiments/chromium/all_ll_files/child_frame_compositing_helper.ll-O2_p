; ModuleID = '../../third_party/blink/renderer/core/frame/child_frame_compositing_helper.cc'
source_filename = "../../third_party/blink/renderer/core/frame/child_frame_compositing_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ChildFrameCompositingHelper" = type <{ %"class.cc::ContentLayerClient", %"class.blink::ChildFrameCompositor"*, %"class.viz::SurfaceId", %class.scoped_refptr, %class.scoped_refptr.79, float, [4 x i8] }>
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.68", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.74", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.42" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr.0*, %class.scoped_refptr.0*, %"class.std::__1::__compressed_pair" }
%class.scoped_refptr.0 = type { %"class.cc::Layer"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr.0* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.27", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.33" }
%"class.cc::PictureLayer" = type <{ %"class.cc::Layer", %"struct.cc::PictureLayer::PictureLayerInputs", %"class.std::__1::unique_ptr.185", %"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker", %"class.cc::Region", i32, [4 x i8] }>
%"struct.cc::PictureLayer::PictureLayerInputs" = type <{ %"class.cc::ContentLayerClient"*, i8, i8, [6 x i8], %class.scoped_refptr.80, %"class.absl::optional.180", [4 x i8] }>
%class.scoped_refptr.80 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.81", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.15", %"class.std::__1::vector.166", %"class.std::__1::vector.173", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.81" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.82", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.89", %"class.std::__1::vector.99", %"class.base::flat_map.113", i8, i8, [6 x i8], %"class.cc::RTree.123", %"class.std::__1::vector.158" }
%"class.base::flat_map.89" = type { %"class.base::internal::flat_tree.90" }
%"class.base::internal::flat_tree.90" = type { %"class.std::__1::vector.91" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.std::__1::pair.93"*, %"struct.std::__1::pair.93"*, %"class.std::__1::__compressed_pair.94" }
%"struct.std::__1::pair.93" = type opaque
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::pair.93"* }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.108" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.101", i32, i32 }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.103" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.113" = type { %"class.base::internal::flat_tree.114" }
%"class.base::internal::flat_tree.114" = type { %"class.std::__1::vector.115" }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"struct.std::__1::pair.117"*, %"struct.std::__1::pair.117"*, %"class.std::__1::__compressed_pair.118" }
%"struct.std::__1::pair.117" = type { i32, i32 }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::pair.117"* }
%"class.cc::RTree.123" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.150", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.140", %"class.absl::optional.145", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.124, %class.sk_sp.131, %"class.gfx::Rect", i32, %class.sk_sp.136, %class.sk_sp.137, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.124, %class.scoped_refptr.138 }
%class.sk_sp.131 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.136 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.101" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.125, i32, i32 }
%class.sk_sp.125 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.126" }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl.129" }
%"struct.std::__1::__cxx_atomic_impl.129" = type { %"struct.std::__1::__cxx_atomic_base_impl.130" }
%"struct.std::__1::__cxx_atomic_base_impl.130" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.137 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.124 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.138 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.139", [4 x i8] }>
%"class.base::RefCountedThreadSafe.139" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { i64 }
%"class.absl::optional.145" = type { %"class.absl::optional_internal::optional_data.146" }
%"class.absl::optional_internal::optional_data.146" = type { %"class.absl::optional_internal::optional_data_base.147" }
%"class.absl::optional_internal::optional_data_base.147" = type { %"class.absl::optional_internal::optional_data_dtor_base.148" }
%"class.absl::optional_internal::optional_data_dtor_base.148" = type { i8, %union.anon.149 }
%union.anon.149 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"*, %"class.std::__1::__compressed_pair.161" }
%"struct.std::__1::pair.160" = type opaque
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::pair.160"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.132", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i8* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { i64*, i64*, %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { i64* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.175" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.absl::optional.180" = type { %"class.absl::optional_internal::optional_data.181" }
%"class.absl::optional_internal::optional_data.181" = type { %"class.absl::optional_internal::optional_data_base.182" }
%"class.absl::optional_internal::optional_data_base.182" = type { %"class.absl::optional_internal::optional_data_dtor_base.183" }
%"class.absl::optional_internal::optional_data_dtor_base.183" = type { i8, %union.anon.184 }
%union.anon.184 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.cc::RecordingSource"* }
%"class.cc::RecordingSource" = type opaque
%"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker" = type { %"class.base::trace_event::TraceScopedTrackableObject.base", [4 x i8] }
%"class.base::trace_event::TraceScopedTrackableObject.base" = type <{ i8*, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.22" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.15", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.14, i32, %"class.absl::optional", i8, i32 }
%class.sk_sp.14 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::unique_ptr.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::unique_ptr.35"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.51", %"class.std::__1::vector.51", %"class.std::__1::vector.58" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.47 }
%union.anon.47 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i8**, i8**, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i8** }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.60" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.base::RepeatingCallback.68" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.69", %"class.viz::SurfaceId" }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"class.viz::SurfaceId" }
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { i32 }
%class.scoped_refptr.79 = type { %"class.cc::PictureLayer"* }
%"class.blink::ChildFrameCompositor" = type { i32 (...)** }
%"class.cc::DeadlinePolicy" = type { i32, %"class.absl::optional.74" }
%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%class.SkBitmap = type { %class.sk_sp.191, %class.SkPixmap, %class.sk_sp.192 }
%class.sk_sp.191 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.192 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cc::PaintOp" = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::DrawImageOp" = type <{ %"class.cc::PaintOpWithFlags", %"class.cc::PaintImage", float, float, %struct.SkSamplingOptions, %struct.SkSize, [4 x i8] }>
%"class.cc::PaintOpWithFlags" = type { %"class.cc::PaintOp", [4 x i8], %"class.cc::PaintFlags" }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.198, %class.sk_sp.199, %class.sk_sp.229, %class.sk_sp.230, %class.sk_sp.231, %class.sk_sp, i32, float, float, i32, %union.anon.232, [4 x i8] }>
%class.sk_sp.198 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.199 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.200", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.131, i32, %"class.absl::optional.205", %"class.std::__1::vector.210", %"class.std::__1::vector.217", %class.sk_sp.224, %class.sk_sp.124, i32, [4 x i8] }>
%"class.absl::optional.200" = type { %"class.absl::optional_internal::optional_data.201" }
%"class.absl::optional_internal::optional_data.201" = type { %"class.absl::optional_internal::optional_data_base.202" }
%"class.absl::optional_internal::optional_data_base.202" = type { %"class.absl::optional_internal::optional_data_dtor_base.203" }
%"class.absl::optional_internal::optional_data_dtor_base.203" = type { i8, %union.anon.204 }
%union.anon.204 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.absl::optional.205" = type { %"class.absl::optional_internal::optional_data.206" }
%"class.absl::optional_internal::optional_data.206" = type { %"class.absl::optional_internal::optional_data_base.207" }
%"class.absl::optional_internal::optional_data_base.207" = type { %"class.absl::optional_internal::optional_data_dtor_base.208" }
%"class.absl::optional_internal::optional_data_dtor_base.208" = type { i8, %union.anon.209 }
%union.anon.209 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { i32*, i32*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { i32* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { float*, float*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { float* }
%class.sk_sp.224 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.225", [7 x i8] }>
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__cxx_atomic_impl.227" }
%"struct.std::__1::__cxx_atomic_impl.227" = type { %"struct.std::__1::__cxx_atomic_base_impl.228" }
%"struct.std::__1::__cxx_atomic_base_impl.228" = type { i8 }
%class.sk_sp.229 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.230 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.231 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.232 = type { i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }

$_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRKj11SkBlendModeEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJRiS3_EEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_7ScaleOpEJRfS3_EEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_11DrawImageOpEJRNS_10PaintImageERiS5_EEEmDpOT0_ = comdat any

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_ = comdat any

@_ZTVN5blink27ChildFrameCompositingHelperE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast ({ i64, i64 } (%"class.blink::ChildFrameCompositingHelper"*)* @_ZNK5blink27ChildFrameCompositingHelper15PaintableRegionEv to i8*), i8* bitcast (%"class.cc::DisplayItemList"* (%"class.blink::ChildFrameCompositingHelper"*)* @_ZN5blink27ChildFrameCompositingHelper26PaintContentsToDisplayListEv to i8*), i8* bitcast (i1 (%"class.blink::ChildFrameCompositingHelper"*)* @_ZNK5blink27ChildFrameCompositingHelper21FillsBoundsCompletelyEv to i8*), i8* bitcast (void (%"class.blink::ChildFrameCompositingHelper"*)* @_ZN5blink27ChildFrameCompositingHelperD2Ev to i8*), i8* bitcast (void (%"class.blink::ChildFrameCompositingHelper"*)* @_ZN5blink27ChildFrameCompositingHelperD0Ev to i8*)] }, align 8
@_ZL12SK_ColorGRAY = internal constant i32 -7829368, align 4

@_ZN5blink27ChildFrameCompositingHelperC1EPNS_20ChildFrameCompositorE = hidden unnamed_addr alias void (%"class.blink::ChildFrameCompositingHelper"*, %"class.blink::ChildFrameCompositor"*), void (%"class.blink::ChildFrameCompositingHelper"*, %"class.blink::ChildFrameCompositor"*)* @_ZN5blink27ChildFrameCompositingHelperC2EPNS_20ChildFrameCompositorE
@_ZN5blink27ChildFrameCompositingHelperD1Ev = hidden unnamed_addr alias void (%"class.blink::ChildFrameCompositingHelper"*), void (%"class.blink::ChildFrameCompositingHelper"*)* @_ZN5blink27ChildFrameCompositingHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ChildFrameCompositingHelperC2EPNS_20ChildFrameCompositorE(%"class.blink::ChildFrameCompositingHelper"* nocapture, %"class.blink::ChildFrameCompositor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27ChildFrameCompositingHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 1
  store %"class.blink::ChildFrameCompositor"* %1, %"class.blink::ChildFrameCompositor"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 5
  %7 = bitcast %"class.viz::SurfaceId"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 48, i1 false)
  store float 1.000000e+00, float* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ChildFrameCompositingHelperD2Ev(%"class.blink::ChildFrameCompositingHelper"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27ChildFrameCompositingHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %3, align 8
  %5 = icmp eq %"class.cc::PictureLayer"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1
  tail call void @_ZN2cc12PictureLayer11ClearClientEv(%"class.cc::PictureLayer"* nonnull %4) #10
  %7 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %3, align 8
  %8 = icmp eq %"class.cc::PictureLayer"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %7, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #10
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 -2
  %17 = bitcast %"class.base::RefCounted"* %16 to %"class.cc::Layer"*
  %18 = bitcast %"class.base::RefCounted"* %16 to void (%"class.cc::Layer"*)***
  %19 = load void (%"class.cc::Layer"*)**, void (%"class.cc::Layer"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %19, i64 15
  %21 = load void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %20, align 8
  tail call void %21(%"class.cc::Layer"* nonnull %17) #10
  br label %22

22:                                               ; preds = %1, %6, %9, %15
  %23 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 3, i32 0
  %24 = load %"class.cc::SurfaceLayer"*, %"class.cc::SurfaceLayer"** %23, align 8
  %25 = icmp eq %"class.cc::SurfaceLayer"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.cc::SurfaceLayer", %"class.cc::SurfaceLayer"* %24, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %28) #10
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 -2
  %34 = bitcast %"class.base::RefCounted"* %33 to %"class.cc::Layer"*
  %35 = bitcast %"class.base::RefCounted"* %33 to void (%"class.cc::Layer"*)***
  %36 = load void (%"class.cc::Layer"*)**, void (%"class.cc::Layer"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %36, i64 15
  %38 = load void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %37, align 8
  tail call void %38(%"class.cc::Layer"* nonnull %34) #10
  br label %39

39:                                               ; preds = %22, %26, %32
  ret void
}

declare void @_ZN2cc12PictureLayer11ClearClientEv(%"class.cc::PictureLayer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ChildFrameCompositingHelperD0Ev(%"class.blink::ChildFrameCompositingHelper"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27ChildFrameCompositingHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %3, align 8
  %5 = icmp eq %"class.cc::PictureLayer"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1
  tail call void @_ZN2cc12PictureLayer11ClearClientEv(%"class.cc::PictureLayer"* nonnull %4) #10
  %7 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %3, align 8
  %8 = icmp eq %"class.cc::PictureLayer"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %7, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #10
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %10, i64 -2
  %17 = bitcast %"class.base::RefCounted"* %16 to %"class.cc::Layer"*
  %18 = bitcast %"class.base::RefCounted"* %16 to void (%"class.cc::Layer"*)***
  %19 = load void (%"class.cc::Layer"*)**, void (%"class.cc::Layer"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %19, i64 15
  %21 = load void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %20, align 8
  tail call void %21(%"class.cc::Layer"* nonnull %17) #10
  br label %22

22:                                               ; preds = %15, %9, %6, %1
  %23 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 3, i32 0
  %24 = load %"class.cc::SurfaceLayer"*, %"class.cc::SurfaceLayer"** %23, align 8
  %25 = icmp eq %"class.cc::SurfaceLayer"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.cc::SurfaceLayer", %"class.cc::SurfaceLayer"* %24, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %28) #10
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 -2
  %34 = bitcast %"class.base::RefCounted"* %33 to %"class.cc::Layer"*
  %35 = bitcast %"class.base::RefCounted"* %33 to void (%"class.cc::Layer"*)***
  %36 = load void (%"class.cc::Layer"*)**, void (%"class.cc::Layer"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %36, i64 15
  %38 = load void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %37, align 8
  tail call void %38(%"class.cc::Layer"* nonnull %34) #10
  br label %39

39:                                               ; preds = %22, %26, %32
  %40 = bitcast %"class.blink::ChildFrameCompositingHelper"* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ChildFrameCompositingHelper14ChildFrameGoneEf(%"class.blink::ChildFrameCompositingHelper"*, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 2
  %4 = bitcast %"class.viz::SurfaceId"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 5
  store float %1, float* %5, align 8
  %6 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 0
  %7 = tail call %"class.cc::PictureLayer"* @_ZN2cc12PictureLayer6CreateEPNS_18ContentLayerClientE(%"class.cc::ContentLayerClient"* %6) #10
  %8 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 4
  %9 = ptrtoint %"class.cc::PictureLayer"* %7 to i64
  %10 = bitcast %class.scoped_refptr.79* %8 to i64*
  %11 = getelementptr inbounds %class.scoped_refptr.79, %class.scoped_refptr.79* %8, i64 0, i32 0
  %12 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %11, align 8
  store i64 %9, i64* %10, align 8
  %13 = icmp eq %"class.cc::PictureLayer"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %12, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #10
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted"* %21 to %"class.cc::Layer"*
  %23 = bitcast %"class.base::RefCounted"* %21 to void (%"class.cc::Layer"*)***
  %24 = load void (%"class.cc::Layer"*)**, void (%"class.cc::Layer"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %24, i64 15
  %26 = load void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %25, align 8
  tail call void %26(%"class.cc::Layer"* nonnull %22) #10
  br label %27

27:                                               ; preds = %2, %14, %20
  %28 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %11, align 8
  %29 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %28, i64 0, i32 0
  tail call void @_ZN2cc5Layer16SetMasksToBoundsEb(%"class.cc::Layer"* %29, i1 zeroext true) #10
  %30 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %11, align 8
  %31 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %30, i64 0, i32 0
  tail call void @_ZN2cc5Layer13SetIsDrawableEb(%"class.cc::Layer"* %31, i1 zeroext true) #10
  %32 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 1
  %33 = load %"class.blink::ChildFrameCompositor"*, %"class.blink::ChildFrameCompositor"** %32, align 8
  %34 = bitcast %class.scoped_refptr.79* %8 to %"class.cc::Layer"**
  %35 = load %"class.cc::Layer"*, %"class.cc::Layer"** %34, align 8
  %36 = icmp eq %"class.cc::Layer"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %35, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %38) #10
  br label %39

39:                                               ; preds = %27, %37
  %40 = bitcast %"class.blink::ChildFrameCompositor"* %33 to void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)***
  %41 = load void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)**, void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)*, void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)** %41, i64 1
  %43 = load void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)*, void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)** %42, align 8
  tail call void %43(%"class.blink::ChildFrameCompositor"* %33, %"class.cc::Layer"* %35, i1 zeroext false) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.cc::PictureLayer"* @_ZN2cc12PictureLayer6CreateEPNS_18ContentLayerClientE(%"class.cc::ContentLayerClient"*) local_unnamed_addr #1

declare void @_ZN2cc5Layer16SetMasksToBoundsEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2cc5Layer13SetIsDrawableEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ChildFrameCompositingHelper12SetSurfaceIdERKN3viz9SurfaceIdEb(%"class.blink::ChildFrameCompositingHelper"* nocapture, %"class.viz::SurfaceId"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::DeadlinePolicy", align 4
  %5 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %5, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %11, label %41

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %41

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 2, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %41

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 2, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %41

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 2, i32 1, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 2, i32 1, i32 2, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %37, %39
  br i1 %40, label %101, label %41

41:                                               ; preds = %3, %29, %17, %23, %11, %35
  %42 = bitcast %"class.viz::SurfaceId"* %5 to i8*
  %43 = bitcast %"class.viz::SurfaceId"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false)
  %44 = tail call %"class.cc::SurfaceLayer"* @_ZN2cc12SurfaceLayer6CreateEv() #10
  %45 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 3
  %46 = ptrtoint %"class.cc::SurfaceLayer"* %44 to i64
  %47 = bitcast %class.scoped_refptr* %45 to i64*
  %48 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %45, i64 0, i32 0
  %49 = load %"class.cc::SurfaceLayer"*, %"class.cc::SurfaceLayer"** %48, align 8
  store i64 %46, i64* %47, align 8
  %50 = icmp eq %"class.cc::SurfaceLayer"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.cc::SurfaceLayer", %"class.cc::SurfaceLayer"* %49, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #10
  %54 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 -2
  %59 = bitcast %"class.base::RefCounted"* %58 to %"class.cc::Layer"*
  %60 = bitcast %"class.base::RefCounted"* %58 to void (%"class.cc::Layer"*)***
  %61 = load void (%"class.cc::Layer"*)**, void (%"class.cc::Layer"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %61, i64 15
  %63 = load void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %62, align 8
  tail call void %63(%"class.cc::Layer"* nonnull %59) #10
  br label %64

64:                                               ; preds = %41, %51, %57
  %65 = load %"class.cc::SurfaceLayer"*, %"class.cc::SurfaceLayer"** %48, align 8
  %66 = getelementptr inbounds %"class.cc::SurfaceLayer", %"class.cc::SurfaceLayer"* %65, i64 0, i32 0
  tail call void @_ZN2cc5Layer16SetMasksToBoundsEb(%"class.cc::Layer"* %66, i1 zeroext true) #10
  %67 = load %"class.cc::SurfaceLayer"*, %"class.cc::SurfaceLayer"** %48, align 8
  tail call void @_ZN2cc12SurfaceLayer21SetSurfaceHitTestableEb(%"class.cc::SurfaceLayer"* %67, i1 zeroext true) #10
  %68 = load %"class.cc::SurfaceLayer"*, %"class.cc::SurfaceLayer"** %48, align 8
  %69 = getelementptr inbounds %"class.cc::SurfaceLayer", %"class.cc::SurfaceLayer"* %68, i64 0, i32 0
  %70 = bitcast %"class.cc::SurfaceLayer"* %68 to void (%"class.cc::Layer"*, i32)***
  %71 = load void (%"class.cc::Layer"*, i32)**, void (%"class.cc::Layer"*, i32)*** %70, align 8
  %72 = load void (%"class.cc::Layer"*, i32)*, void (%"class.cc::Layer"*, i32)** %71, align 8
  tail call void %72(%"class.cc::Layer"* %69, i32 0) #10
  %73 = bitcast %"class.cc::DeadlinePolicy"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %73) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %73, i8 -86, i64 12, i1 false)
  br i1 %2, label %74, label %75

74:                                               ; preds = %64
  call void @_ZN2cc14DeadlinePolicy19UseInfiniteDeadlineEv(%"class.cc::DeadlinePolicy"* nonnull sret %4) #10
  br label %76

75:                                               ; preds = %64
  call void @_ZN2cc14DeadlinePolicy18UseDefaultDeadlineEv(%"class.cc::DeadlinePolicy"* nonnull sret %4) #10
  br label %76

76:                                               ; preds = %75, %74
  %77 = load %"class.cc::SurfaceLayer"*, %"class.cc::SurfaceLayer"** %48, align 8
  call void @_ZN2cc12SurfaceLayer12SetSurfaceIdERKN3viz9SurfaceIdERKNS_14DeadlinePolicyE(%"class.cc::SurfaceLayer"* %77, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"class.cc::DeadlinePolicy"* nonnull dereferenceable(12) %4) #10
  %78 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 1
  %79 = load %"class.blink::ChildFrameCompositor"*, %"class.blink::ChildFrameCompositor"** %78, align 8
  %80 = bitcast %class.scoped_refptr* %45 to %"class.cc::Layer"**
  %81 = load %"class.cc::Layer"*, %"class.cc::Layer"** %80, align 8
  %82 = icmp eq %"class.cc::Layer"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %81, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %84) #10
  br label %85

85:                                               ; preds = %76, %83
  %86 = bitcast %"class.blink::ChildFrameCompositor"* %79 to void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)***
  %87 = load void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)**, void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)*, void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)** %87, i64 1
  %89 = load void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)*, void (%"class.blink::ChildFrameCompositor"*, %"class.cc::Layer"*, i1)** %88, align 8
  call void %89(%"class.blink::ChildFrameCompositor"* %79, %"class.cc::Layer"* %81, i1 zeroext true) #10
  %90 = load %"class.blink::ChildFrameCompositor"*, %"class.blink::ChildFrameCompositor"** %78, align 8
  %91 = bitcast %"class.blink::ChildFrameCompositor"* %90 to %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)***
  %92 = load %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)**, %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)*** %91, align 8
  %93 = load %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)*, %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)** %92, align 8
  %94 = call dereferenceable(8) %class.scoped_refptr.0* %93(%"class.blink::ChildFrameCompositor"* %90) #10
  %95 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %94, i64 0, i32 0
  %96 = load %"class.cc::Layer"*, %"class.cc::Layer"** %95, align 8
  %97 = icmp eq %"class.cc::Layer"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %85
  call void @_ZN2cc5Layer13SetIsDrawableEb(%"class.cc::Layer"* nonnull %96, i1 zeroext true) #10
  %99 = load %"class.cc::Layer"*, %"class.cc::Layer"** %95, align 8
  call void @_ZN2cc5Layer14SetHitTestableEb(%"class.cc::Layer"* %99, i1 zeroext true) #10
  br label %100

100:                                              ; preds = %85, %98
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %73) #10
  br label %101

101:                                              ; preds = %35, %100
  ret void
}

declare %"class.cc::SurfaceLayer"* @_ZN2cc12SurfaceLayer6CreateEv() local_unnamed_addr #1

declare void @_ZN2cc12SurfaceLayer21SetSurfaceHitTestableEb(%"class.cc::SurfaceLayer"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2cc14DeadlinePolicy19UseInfiniteDeadlineEv(%"class.cc::DeadlinePolicy"* sret) local_unnamed_addr #1

declare void @_ZN2cc14DeadlinePolicy18UseDefaultDeadlineEv(%"class.cc::DeadlinePolicy"* sret) local_unnamed_addr #1

declare void @_ZN2cc12SurfaceLayer12SetSurfaceIdERKN3viz9SurfaceIdERKNS_14DeadlinePolicyE(%"class.cc::SurfaceLayer"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.cc::DeadlinePolicy"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ChildFrameCompositingHelper16UpdateVisibilityEb(%"class.blink::ChildFrameCompositingHelper"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 1
  %4 = load %"class.blink::ChildFrameCompositor"*, %"class.blink::ChildFrameCompositor"** %3, align 8
  %5 = bitcast %"class.blink::ChildFrameCompositor"* %4 to %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)***
  %6 = load %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)**, %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)*** %5, align 8
  %7 = load %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)*, %class.scoped_refptr.0* (%"class.blink::ChildFrameCompositor"*)** %6, align 8
  %8 = tail call dereferenceable(8) %class.scoped_refptr.0* %7(%"class.blink::ChildFrameCompositor"* %4) #10
  %9 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %8, i64 0, i32 0
  %10 = load %"class.cc::Layer"*, %"class.cc::Layer"** %9, align 8
  %11 = icmp eq %"class.cc::Layer"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN2cc5Layer13SetIsDrawableEb(%"class.cc::Layer"* nonnull %10, i1 zeroext %1) #10
  %13 = load %"class.cc::Layer"*, %"class.cc::Layer"** %9, align 8
  tail call void @_ZN2cc5Layer14SetHitTestableEb(%"class.cc::Layer"* %13, i1 zeroext %1) #10
  br label %14

14:                                               ; preds = %2, %12
  ret void
}

declare void @_ZN2cc5Layer14SetHitTestableEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK5blink27ChildFrameCompositingHelper15PaintableRegionEv(%"class.blink::ChildFrameCompositingHelper"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %3, i64 0, i32 0, i32 5, i32 2
  %5 = bitcast %"class.gfx::Size"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %6, 1
  ret { i64, i64 } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::DisplayItemList"* @_ZN5blink27ChildFrameCompositingHelper26PaintContentsToDisplayListEv(%"class.blink::ChildFrameCompositingHelper"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.cc::PaintImage", align 8
  %6 = alloca %"class.cc::PaintImageBuilder", align 8
  %7 = alloca %class.sk_sp.124, align 8
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 4, i32 0
  %10 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %9, align 8
  %11 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %10, i64 0, i32 0, i32 5, i32 2
  %12 = bitcast %"class.gfx::Size"* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = tail call i8* @_Znwm(i64 640) #11
  %18 = bitcast i8* %17 to %"class.cc::DisplayItemList"*
  tail call void @_ZN2cc15DisplayItemListC1ENS0_9UsageHintE(%"class.cc::DisplayItemList"* nonnull %18, i32 0) #10
  %19 = bitcast i8* %17 to i32*
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  %21 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #10
  store i32 1, i32* %2, align 4
  %22 = call i64 @_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRKj11SkBlendModeEEEmDpOT0_(%"class.cc::DisplayItemList"* nonnull %18, i32* nonnull dereferenceable(4) @_ZL12SK_ColorGRAY, i32* nonnull dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #10
  %23 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 1
  %24 = load %"class.blink::ChildFrameCompositor"*, %"class.blink::ChildFrameCompositor"** %23, align 8
  %25 = bitcast %"class.blink::ChildFrameCompositor"* %24 to %class.SkBitmap* (%"class.blink::ChildFrameCompositor"*)***
  %26 = load %class.SkBitmap* (%"class.blink::ChildFrameCompositor"*)**, %class.SkBitmap* (%"class.blink::ChildFrameCompositor"*)*** %25, align 8
  %27 = getelementptr inbounds %class.SkBitmap* (%"class.blink::ChildFrameCompositor"*)*, %class.SkBitmap* (%"class.blink::ChildFrameCompositor"*)** %26, i64 2
  %28 = load %class.SkBitmap* (%"class.blink::ChildFrameCompositor"*)*, %class.SkBitmap* (%"class.blink::ChildFrameCompositor"*)** %27, align 8
  %29 = call %class.SkBitmap* %28(%"class.blink::ChildFrameCompositor"* %24) #10
  %30 = icmp eq %class.SkBitmap* %29, null
  br i1 %30, label %277, label %31

31:                                               ; preds = %1
  %32 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 2, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = sitofp i32 %33 to float
  %35 = getelementptr inbounds %"class.blink::ChildFrameCompositingHelper", %"class.blink::ChildFrameCompositingHelper"* %0, i64 0, i32 5
  %36 = load float, float* %35, align 8
  %37 = fmul float %36, %34
  %38 = fptosi float %37 to i32
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 2, i32 1, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sitofp i32 %40 to float
  %42 = fmul float %36, %41
  %43 = fptosi float %42 to i32
  %44 = icmp slt i32 %14, %38
  %45 = icmp slt i32 %16, %43
  %46 = or i1 %44, %45
  br i1 %46, label %277, label %47

47:                                               ; preds = %31
  %48 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #10
  %49 = sub nsw i32 %14, %38
  %50 = sdiv i32 %49, 2
  store i32 %50, i32* %3, align 4
  %51 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #10
  %52 = sub nsw i32 %16, %43
  %53 = sdiv i32 %52, 2
  store i32 %53, i32* %4, align 4
  %54 = fcmp une float %36, 1.000000e+00
  br i1 %54, label %55, label %146

55:                                               ; preds = %47
  %56 = getelementptr inbounds i8, i8* %17, i64 488
  %57 = bitcast i8* %56 to %"class.cc::PaintOpBuffer"*
  %58 = getelementptr inbounds i8, i8* %17, i64 512
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %17, i64 632
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %125

65:                                               ; preds = %55
  %66 = getelementptr inbounds i8, i8* %17, i64 584
  %67 = getelementptr inbounds i8, i8* %17, i64 592
  %68 = bitcast i8* %67 to i64**
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds i8, i8* %17, i64 600
  %71 = bitcast i8* %70 to i64**
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %69, %72
  %74 = ptrtoint i64* %72 to i64
  br i1 %73, label %79, label %75

75:                                               ; preds = %65
  store i64 %60, i64* %69, align 8
  %76 = getelementptr inbounds i64, i64* %69, i64 1
  %77 = ptrtoint i64* %76 to i64
  %78 = bitcast i8* %67 to i64*
  store i64 %77, i64* %78, align 8
  br label %125

79:                                               ; preds = %65
  %80 = ptrtoint i64* %69 to i64
  %81 = bitcast i8* %67 to i64*
  %82 = bitcast i8* %66 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %80, %83
  %85 = ashr exact i64 %84, 3
  %86 = add nsw i64 %85, 1
  %87 = icmp ugt i64 %86, 2305843009213693951
  br i1 %87, label %88, label %90

88:                                               ; preds = %79
  %89 = bitcast i8* %66 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #12
  unreachable

90:                                               ; preds = %79
  %91 = bitcast i8* %70 to i64*
  %92 = sub i64 %74, %83
  %93 = ashr exact i64 %92, 3
  %94 = icmp ult i64 %93, 1152921504606846975
  br i1 %94, label %95, label %103

95:                                               ; preds = %90
  %96 = ashr exact i64 %92, 2
  %97 = icmp ult i64 %96, %86
  %98 = select i1 %97, i64 %86, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %95
  %101 = icmp ugt i64 %98, 2305843009213693951
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  call void @abort() #12
  unreachable

103:                                              ; preds = %100, %90
  %104 = phi i64 [ %98, %100 ], [ 2305843009213693951, %90 ]
  %105 = shl i64 %104, 3
  %106 = call i8* @_Znwm(i64 %105) #11
  %107 = bitcast i8* %106 to i64*
  br label %108

108:                                              ; preds = %103, %95
  %109 = phi i64 [ %104, %103 ], [ 0, %95 ]
  %110 = phi i8* [ %106, %103 ], [ null, %95 ]
  %111 = phi i64* [ %107, %103 ], [ null, %95 ]
  %112 = getelementptr inbounds i64, i64* %111, i64 %85
  %113 = getelementptr inbounds i64, i64* %111, i64 %109
  %114 = ptrtoint i64* %113 to i64
  store i64 %60, i64* %112, align 8
  %115 = getelementptr inbounds i64, i64* %112, i64 1
  %116 = ptrtoint i64* %115 to i64
  %117 = ptrtoint i64* %111 to i64
  %118 = icmp sgt i64 %84, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %108
  %120 = inttoptr i64 %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %120, i64 %84, i1 false) #10
  br label %121

121:                                              ; preds = %119, %108
  store i64 %117, i64* %82, align 8
  store i64 %116, i64* %81, align 8
  store i64 %114, i64* %91, align 8
  %122 = icmp eq i64 %83, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = inttoptr i64 %83 to i8*
  call void @_ZdlPv(i8* %124) #11
  br label %125

125:                                              ; preds = %123, %121, %75, %55
  %126 = call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %57, i64 8) #10
  %127 = bitcast i8* %126 to i32*
  store i32 2070, i32* %127, align 4
  %128 = bitcast i8* %126 to %"class.cc::PaintOp"*
  %129 = getelementptr inbounds i8, i8* %17, i64 556
  %130 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %128) #10
  %131 = zext i1 %130 to i8
  %132 = load i8, i8* %129, align 4
  %133 = shl nuw nsw i8 %131, 2
  %134 = and i8 %132, 4
  %135 = or i8 %134, %133
  %136 = and i8 %132, -61
  %137 = or i8 %135, %136
  %138 = and i8 %132, 8
  %139 = or i8 %137, %138
  %140 = and i8 %132, 16
  %141 = and i8 %132, 32
  %142 = or i8 %139, %140
  %143 = or i8 %142, %141
  store i8 %143, i8* %129, align 4
  %144 = call i64 @_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJRiS3_EEEmDpOT0_(%"class.cc::DisplayItemList"* nonnull %18, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4)
  %145 = call i64 @_ZN2cc15DisplayItemList4pushINS_7ScaleOpEJRfS3_EEEmDpOT0_(%"class.cc::DisplayItemList"* nonnull %18, float* dereferenceable(4) %35, float* dereferenceable(4) %35)
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %146

146:                                              ; preds = %125, %47
  %147 = bitcast %"class.cc::PaintImage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %147) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 104, i1 false)
  %148 = bitcast %"class.cc::PaintImageBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %148) #10
  call void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* nonnull sret %6) #10
  %149 = call i32 @_ZN2cc10PaintImage9GetNextIdEv() #10
  %150 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %6, i64 0, i32 0, i32 6
  store i32 %149, i32* %150, align 8
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.124* nonnull sret %7, %class.SkBitmap* nonnull dereferenceable(56) %29) #10
  %151 = call i32 @_ZN2cc10PaintImage16GetNextContentIdEv() #10
  %152 = getelementptr inbounds %class.sk_sp.124, %class.sk_sp.124* %7, i64 0, i32 0
  %153 = bitcast %class.sk_sp.124* %7 to i64*
  %154 = load i64, i64* %153, align 8
  store %class.SkImage* null, %class.SkImage** %152, align 8
  %155 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  %156 = load %class.SkImage*, %class.SkImage** %155, align 8
  %157 = bitcast %"class.cc::PaintImageBuilder"* %6 to i64*
  store i64 %154, i64* %157, align 8
  %158 = icmp eq %class.SkImage* %156, null
  br i1 %158, label %169, label %159

159:                                              ; preds = %146
  %160 = getelementptr inbounds %class.SkImage, %class.SkImage* %156, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = bitcast %class.SkImage* %156 to %class.SkRefCntBase*
  %165 = bitcast %class.SkImage* %156 to void (%class.SkRefCntBase*)***
  %166 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, i64 2
  %168 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, align 8
  call void %168(%class.SkRefCntBase* nonnull %164) #10
  br label %169

169:                                              ; preds = %146, %159, %163
  %170 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %6, i64 0, i32 0, i32 3
  store i32 %151, i32* %170, align 8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* nonnull sret %5, %"class.cc::PaintImageBuilder"* nonnull %6) #10
  %171 = load %class.SkImage*, %class.SkImage** %152, align 8
  %172 = icmp eq %class.SkImage* %171, null
  br i1 %172, label %183, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %class.SkImage, %class.SkImage* %171, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 -1 acq_rel
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %183

177:                                              ; preds = %173
  %178 = bitcast %class.SkImage* %171 to %class.SkRefCntBase*
  %179 = bitcast %class.SkImage* %171 to void (%class.SkRefCntBase*)***
  %180 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %179, align 8
  %181 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %180, i64 2
  %182 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %181, align 8
  call void %182(%class.SkRefCntBase* nonnull %178) #10
  br label %183

183:                                              ; preds = %169, %173, %177
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %148) #10
  %184 = call i64 @_ZN2cc15DisplayItemList4pushINS_11DrawImageOpEJRNS_10PaintImageERiS5_EEEmDpOT0_(%"class.cc::DisplayItemList"* nonnull %18, %"class.cc::PaintImage"* nonnull dereferenceable(104) %5, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4)
  %185 = load float, float* %35, align 8
  %186 = fcmp une float %185, 1.000000e+00
  br i1 %186, label %187, label %276

187:                                              ; preds = %183
  %188 = getelementptr inbounds i8, i8* %17, i64 488
  %189 = bitcast i8* %188 to %"class.cc::PaintOpBuffer"*
  %190 = getelementptr inbounds i8, i8* %17, i64 512
  %191 = bitcast i8* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds i8, i8* %17, i64 632
  %194 = bitcast i8* %193 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %257

197:                                              ; preds = %187
  %198 = getelementptr inbounds i8, i8* %17, i64 584
  %199 = getelementptr inbounds i8, i8* %17, i64 592
  %200 = bitcast i8* %199 to i64**
  %201 = load i64*, i64** %200, align 8
  %202 = getelementptr inbounds i8, i8* %17, i64 600
  %203 = bitcast i8* %202 to i64**
  %204 = load i64*, i64** %203, align 8
  %205 = icmp eq i64* %201, %204
  %206 = ptrtoint i64* %204 to i64
  br i1 %205, label %211, label %207

207:                                              ; preds = %197
  store i64 %192, i64* %201, align 8
  %208 = getelementptr inbounds i64, i64* %201, i64 1
  %209 = ptrtoint i64* %208 to i64
  %210 = bitcast i8* %199 to i64*
  store i64 %209, i64* %210, align 8
  br label %257

211:                                              ; preds = %197
  %212 = ptrtoint i64* %201 to i64
  %213 = bitcast i8* %199 to i64*
  %214 = bitcast i8* %198 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %212, %215
  %217 = ashr exact i64 %216, 3
  %218 = add nsw i64 %217, 1
  %219 = icmp ugt i64 %218, 2305843009213693951
  br i1 %219, label %220, label %222

220:                                              ; preds = %211
  %221 = bitcast i8* %198 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %221) #12
  unreachable

222:                                              ; preds = %211
  %223 = bitcast i8* %202 to i64*
  %224 = sub i64 %206, %215
  %225 = ashr exact i64 %224, 3
  %226 = icmp ult i64 %225, 1152921504606846975
  br i1 %226, label %227, label %235

227:                                              ; preds = %222
  %228 = ashr exact i64 %224, 2
  %229 = icmp ult i64 %228, %218
  %230 = select i1 %229, i64 %218, i64 %228
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %240, label %232

232:                                              ; preds = %227
  %233 = icmp ugt i64 %230, 2305843009213693951
  br i1 %233, label %234, label %235

234:                                              ; preds = %232
  call void @abort() #12
  unreachable

235:                                              ; preds = %232, %222
  %236 = phi i64 [ %230, %232 ], [ 2305843009213693951, %222 ]
  %237 = shl i64 %236, 3
  %238 = call i8* @_Znwm(i64 %237) #11
  %239 = bitcast i8* %238 to i64*
  br label %240

240:                                              ; preds = %235, %227
  %241 = phi i64 [ %236, %235 ], [ 0, %227 ]
  %242 = phi i8* [ %238, %235 ], [ null, %227 ]
  %243 = phi i64* [ %239, %235 ], [ null, %227 ]
  %244 = getelementptr inbounds i64, i64* %243, i64 %217
  %245 = getelementptr inbounds i64, i64* %243, i64 %241
  %246 = ptrtoint i64* %245 to i64
  store i64 %192, i64* %244, align 8
  %247 = getelementptr inbounds i64, i64* %244, i64 1
  %248 = ptrtoint i64* %247 to i64
  %249 = ptrtoint i64* %243 to i64
  %250 = icmp sgt i64 %216, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %240
  %252 = inttoptr i64 %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %252, i64 %216, i1 false) #10
  br label %253

253:                                              ; preds = %251, %240
  store i64 %249, i64* %214, align 8
  store i64 %248, i64* %213, align 8
  store i64 %246, i64* %223, align 8
  %254 = icmp eq i64 %215, 0
  br i1 %254, label %257, label %255

255:                                              ; preds = %253
  %256 = inttoptr i64 %215 to i8*
  call void @_ZdlPv(i8* %256) #11
  br label %257

257:                                              ; preds = %255, %253, %207, %187
  %258 = call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %189, i64 8) #10
  %259 = bitcast i8* %258 to i32*
  store i32 2068, i32* %259, align 4
  %260 = bitcast i8* %258 to %"class.cc::PaintOp"*
  %261 = getelementptr inbounds i8, i8* %17, i64 556
  %262 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %260) #10
  %263 = zext i1 %262 to i8
  %264 = load i8, i8* %261, align 4
  %265 = shl nuw nsw i8 %263, 2
  %266 = and i8 %264, 4
  %267 = or i8 %266, %265
  %268 = and i8 %264, -61
  %269 = or i8 %267, %268
  %270 = and i8 %264, 8
  %271 = or i8 %269, %270
  %272 = and i8 %264, 16
  %273 = and i8 %264, 32
  %274 = or i8 %271, %272
  %275 = or i8 %274, %273
  store i8 %275, i8* %261, align 4
  br label %276

276:                                              ; preds = %257, %183
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %147) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #10
  br label %277

277:                                              ; preds = %276, %31, %1
  %278 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %278) #10
  %279 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  store i32 0, i32* %279, align 4
  %280 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  store i32 0, i32* %280, align 4
  %281 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %282 = bitcast %"class.gfx::Size"* %281 to i64*
  store i64 %13, i64* %282, align 4
  %283 = getelementptr inbounds i8, i8* %17, i64 632
  %284 = bitcast i8* %283 to i32*
  %285 = load i32, i32* %284, align 8
  %286 = icmp eq i32 %285, 1
  br i1 %286, label %323, label %287

287:                                              ; preds = %277
  %288 = getelementptr inbounds i8, i8* %17, i64 560
  %289 = getelementptr inbounds i8, i8* %17, i64 528
  %290 = bitcast i8* %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = getelementptr inbounds i8, i8* %17, i64 568
  %293 = bitcast i8* %292 to %"class.gfx::Rect"**
  %294 = bitcast i8* %292 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i8* %288 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = sub i64 %295, %297
  %299 = ashr exact i64 %298, 4
  %300 = icmp ugt i64 %291, %299
  %301 = inttoptr i64 %297 to %"class.gfx::Rect"*
  br i1 %300, label %302, label %305

302:                                              ; preds = %287
  %303 = bitcast i8* %288 to %"class.std::__1::vector.15"*
  %304 = sub i64 %291, %299
  call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.15"* %303, i64 %304, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #10
  br label %309

305:                                              ; preds = %287
  %306 = icmp ult i64 %291, %299
  br i1 %306, label %307, label %309

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %301, i64 %291
  store %"class.gfx::Rect"* %308, %"class.gfx::Rect"** %293, align 8
  br label %309

309:                                              ; preds = %307, %305, %302
  %310 = getelementptr inbounds i8, i8* %17, i64 608
  %311 = bitcast i8* %310 to %"struct.cc::DisplayItemList::PairedBeginInfo"**
  %312 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %311, align 8
  %313 = getelementptr inbounds i8, i8* %17, i64 616
  %314 = bitcast i8* %313 to %"struct.cc::DisplayItemList::PairedBeginInfo"**
  %315 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %314, align 8
  %316 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %312, %315
  br i1 %316, label %323, label %317

317:                                              ; preds = %309
  %318 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %315, i64 -1, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = bitcast i8* %288 to %"class.gfx::Rect"**
  %321 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %320, align 8
  %322 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %321, i64 %319
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %322, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #10
  br label %323

323:                                              ; preds = %277, %309, %317
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %278) #10
  call void @_ZN2cc15DisplayItemList8FinalizeEv(%"class.cc::DisplayItemList"* nonnull %18) #10
  ret %"class.cc::DisplayItemList"* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRKj11SkBlendModeEEEmDpOT0_(%"class.cc::DisplayItemList"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.166"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.166"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #10
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #10
  %80 = load i32, i32* %1, align 4
  %81 = load i32, i32* %2, align 4
  %82 = bitcast i8* %79 to i32*
  %83 = getelementptr inbounds i8, i8* %79, i64 4
  %84 = bitcast i8* %83 to i32*
  store i32 %80, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %79, i64 8
  %86 = bitcast i8* %85 to i32*
  store i32 %81, i32* %86, align 4
  store i32 4102, i32* %82, align 4
  %87 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %88 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %89 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %87) #10
  %90 = zext i1 %89 to i8
  %91 = load i8, i8* %88, align 4
  %92 = shl nuw nsw i8 %90, 2
  %93 = and i8 %91, 4
  %94 = or i8 %93, %92
  %95 = and i8 %91, -61
  %96 = or i8 %94, %95
  %97 = and i8 %91, 8
  %98 = or i8 %96, %97
  %99 = and i8 %91, 16
  %100 = and i8 %91, 32
  %101 = or i8 %98, %99
  %102 = or i8 %101, %100
  store i8 %102, i8* %88, align 4
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJRiS3_EEEmDpOT0_(%"class.cc::DisplayItemList"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.166"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.166"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #10
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #10
  %80 = load i32, i32* %1, align 4
  %81 = sitofp i32 %80 to float
  %82 = load i32, i32* %2, align 4
  %83 = sitofp i32 %82 to float
  %84 = bitcast i8* %79 to i32*
  %85 = getelementptr inbounds i8, i8* %79, i64 4
  %86 = bitcast i8* %85 to float*
  store float %81, float* %86, align 4
  %87 = getelementptr inbounds i8, i8* %79, i64 8
  %88 = bitcast i8* %87 to float*
  store float %83, float* %88, align 4
  store i32 4124, i32* %84, align 4
  %89 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %90 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %91 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %89) #10
  %92 = zext i1 %91 to i8
  %93 = load i8, i8* %90, align 4
  %94 = shl nuw nsw i8 %92, 2
  %95 = and i8 %93, 4
  %96 = or i8 %95, %94
  %97 = and i8 %93, -61
  %98 = or i8 %96, %97
  %99 = and i8 %93, 8
  %100 = or i8 %98, %99
  %101 = and i8 %93, 16
  %102 = and i8 %93, 32
  %103 = or i8 %100, %101
  %104 = or i8 %103, %102
  store i8 %104, i8* %90, align 4
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_7ScaleOpEJRfS3_EEEmDpOT0_(%"class.cc::DisplayItemList"*, float* dereferenceable(4), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.166"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.166"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #10
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #10
  %80 = bitcast float* %1 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = bitcast float* %2 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = bitcast i8* %79 to i32*
  %85 = getelementptr inbounds i8, i8* %79, i64 4
  %86 = bitcast i8* %85 to i32*
  store i32 %81, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %79, i64 8
  %88 = bitcast i8* %87 to i32*
  store i32 %83, i32* %88, align 4
  store i32 4121, i32* %84, align 4
  %89 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %90 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %91 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %89) #10
  %92 = zext i1 %91 to i8
  %93 = load i8, i8* %90, align 4
  %94 = shl nuw nsw i8 %92, 2
  %95 = and i8 %93, 4
  %96 = or i8 %95, %94
  %97 = and i8 %93, -61
  %98 = or i8 %96, %97
  %99 = and i8 %93, 8
  %100 = or i8 %98, %99
  %101 = and i8 %93, 16
  %102 = and i8 %93, 32
  %103 = or i8 %100, %101
  %104 = or i8 %103, %102
  store i8 %104, i8* %90, align 4
  ret i64 %6
}

declare void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* sret) local_unnamed_addr #1

declare i32 @_ZN2cc10PaintImage9GetNextIdEv() local_unnamed_addr #1

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.124* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare i32 @_ZN2cc10PaintImage16GetNextContentIdEv() local_unnamed_addr #1

declare void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11DrawImageOpEJRNS_10PaintImageERiS5_EEEmDpOT0_(%"class.cc::DisplayItemList"*, %"class.cc::PaintImage"* dereferenceable(104), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.166"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.166"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #12
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #12
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.166", %"class.std::__1::vector.166"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #10
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #11
  br label %79

79:                                               ; preds = %77, %74, %19, %4
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 224) #10
  %81 = bitcast i8* %80 to %"class.cc::DrawImageOp"*
  %82 = load i32, i32* %2, align 4
  %83 = sitofp i32 %82 to float
  %84 = load i32, i32* %3, align 4
  %85 = sitofp i32 %84 to float
  tail call void @_ZN2cc11DrawImageOpC1ERKNS_10PaintImageEff(%"class.cc::DrawImageOp"* %81, %"class.cc::PaintImage"* dereferenceable(104) %1, float %83, float %85) #10
  %86 = bitcast i8* %80 to i32*
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 255
  %89 = or i32 %88, 57344
  store i32 %89, i32* %86, align 8
  %90 = bitcast i8* %80 to %"class.cc::PaintOpWithFlags"*
  %91 = getelementptr inbounds i8, i8* %80, i64 8
  %92 = bitcast i8* %91 to %class.SkPathEffect**
  %93 = load %class.SkPathEffect*, %class.SkPathEffect** %92, align 8
  %94 = icmp ne %class.SkPathEffect* %93, null
  %95 = zext i1 %94 to i32
  %96 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 8
  %97 = load i32, i32* %96, align 8
  %98 = add nsw i32 %97, %95
  %99 = bitcast i8* %80 to %"class.cc::PaintOp"*
  store i32 %98, i32* %96, align 8
  %100 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %101 = tail call zeroext i1 @_ZNK2cc11DrawImageOp20HasDiscardableImagesEv(%"class.cc::DrawImageOp"* %81) #10
  %102 = zext i1 %101 to i8
  %103 = load i8, i8* %100, align 4
  %104 = shl nuw nsw i8 %102, 1
  %105 = and i8 %103, 2
  %106 = or i8 %105, %104
  %107 = and i8 %103, -3
  %108 = or i8 %106, %107
  store i8 %108, i8* %100, align 4
  %109 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %90) #10
  %110 = zext i1 %109 to i8
  %111 = load i8, i8* %100, align 4
  %112 = shl nuw nsw i8 %110, 1
  %113 = and i8 %111, 2
  %114 = or i8 %113, %112
  %115 = and i8 %111, -3
  %116 = or i8 %114, %115
  store i8 %116, i8* %100, align 4
  %117 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %99) #10
  %118 = zext i1 %117 to i8
  %119 = load i8, i8* %100, align 4
  %120 = shl nuw nsw i8 %118, 2
  %121 = and i8 %119, 4
  %122 = or i8 %121, %120
  %123 = and i8 %119, -61
  %124 = or i8 %122, %123
  %125 = and i8 %119, 8
  %126 = or i8 %124, %125
  %127 = and i8 %119, 16
  %128 = and i8 %119, 32
  %129 = or i8 %126, %127
  %130 = or i8 %129, %128
  store i8 %130, i8* %100, align 4
  ret i64 %7
}

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #5

declare void @_ZN2cc15DisplayItemList8FinalizeEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink27ChildFrameCompositingHelper21FillsBoundsCompletelyEv(%"class.blink::ChildFrameCompositingHelper"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.15"*, i64, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.gfx::Rect"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.gfx::Rect"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 4
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %50, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.gfx::Rect"*
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.gfx::Rect"* %2 to i8*
  %19 = shl nsw i64 %1, 4
  %20 = add i64 %19, -16
  %21 = lshr exact i64 %20, 4
  %22 = add nuw nsw i64 %21, 1
  %23 = and i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"class.gfx::Rect"* [ %29, %25 ], [ %14, %17 ]
  %27 = phi i64 [ %30, %25 ], [ %23, %17 ]
  %28 = bitcast %"class.gfx::Rect"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %18, i64 16, i1 false) #10
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %26, i64 1
  %30 = add i64 %27, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %25, !llvm.loop !2

32:                                               ; preds = %25, %17
  %33 = phi %"class.gfx::Rect"* [ %14, %17 ], [ %29, %25 ]
  %34 = icmp ult i64 %20, 48
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"class.gfx::Rect"* %15 to i64
  br label %48

37:                                               ; preds = %32, %37
  %38 = phi %"class.gfx::Rect"* [ %46, %37 ], [ %33, %32 ]
  %39 = bitcast %"class.gfx::Rect"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %18, i64 16, i1 false) #10
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 1
  %41 = bitcast %"class.gfx::Rect"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %18, i64 16, i1 false) #10
  %42 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 2
  %43 = bitcast %"class.gfx::Rect"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %18, i64 16, i1 false) #10
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 3
  %45 = bitcast %"class.gfx::Rect"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %18, i64 16, i1 false) #10
  %46 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 4
  %47 = icmp eq %"class.gfx::Rect"* %46, %15
  br i1 %47, label %35, label %37

48:                                               ; preds = %13, %35
  %49 = phi i64 [ %36, %35 ], [ %9, %13 ]
  store i64 %49, i64* %8, align 8
  br label %132

50:                                               ; preds = %3
  %51 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %9, %52
  %54 = ashr exact i64 %53, 4
  %55 = add i64 %54, %1
  %56 = icmp ugt i64 %55, 1152921504606846975
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #12
  unreachable

59:                                               ; preds = %50
  %60 = sub i64 %6, %52
  %61 = ashr exact i64 %60, 4
  %62 = icmp ult i64 %61, 576460752303423487
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = ashr exact i64 %60, 3
  %65 = icmp ult i64 %64, %55
  %66 = select i1 %65, i64 %55, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 1152921504606846975
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @abort() #12
  unreachable

71:                                               ; preds = %59, %68
  %72 = phi i64 [ %66, %68 ], [ 1152921504606846975, %59 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to %"class.gfx::Rect"*
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi %"class.gfx::Rect"* [ %75, %71 ], [ null, %63 ]
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %78, i64 %54
  %80 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %78, i64 %77
  %81 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %79, i64 %1
  %82 = bitcast %"class.gfx::Rect"* %2 to i8*
  %83 = shl nsw i64 %1, 4
  %84 = add i64 %83, -16
  %85 = lshr exact i64 %84, 4
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %76, %89
  %90 = phi %"class.gfx::Rect"* [ %93, %89 ], [ %79, %76 ]
  %91 = phi i64 [ %94, %89 ], [ %87, %76 ]
  %92 = bitcast %"class.gfx::Rect"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %82, i64 16, i1 false) #10
  %93 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %90, i64 1
  %94 = add i64 %91, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %89, !llvm.loop !4

96:                                               ; preds = %89, %76
  %97 = phi %"class.gfx::Rect"* [ %79, %76 ], [ %93, %89 ]
  %98 = icmp ult i64 %84, 48
  br i1 %98, label %110, label %99

99:                                               ; preds = %96, %99
  %100 = phi %"class.gfx::Rect"* [ %108, %99 ], [ %97, %96 ]
  %101 = bitcast %"class.gfx::Rect"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %82, i64 16, i1 false) #10
  %102 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 1
  %103 = bitcast %"class.gfx::Rect"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %82, i64 16, i1 false) #10
  %104 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 2
  %105 = bitcast %"class.gfx::Rect"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %82, i64 16, i1 false) #10
  %106 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 3
  %107 = bitcast %"class.gfx::Rect"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %82, i64 16, i1 false) #10
  %108 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 4
  %109 = icmp eq %"class.gfx::Rect"* %81, %108
  br i1 %109, label %110, label %99

110:                                              ; preds = %99, %96
  %111 = ptrtoint %"class.gfx::Rect"* %80 to i64
  %112 = ptrtoint %"class.gfx::Rect"* %81 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 0
  %114 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %113, align 8
  %115 = load i64, i64* %8, align 8
  %116 = ptrtoint %"class.gfx::Rect"* %114 to i64
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 4
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %79, i64 %119
  %121 = ptrtoint %"class.gfx::Rect"* %120 to i64
  %122 = icmp sgt i64 %117, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %110
  %124 = bitcast %"class.gfx::Rect"* %120 to i8*
  %125 = bitcast %"class.gfx::Rect"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %117, i1 false) #10
  %126 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %113, align 8
  br label %127

127:                                              ; preds = %110, %123
  %128 = phi %"class.gfx::Rect"* [ %114, %110 ], [ %126, %123 ]
  store i64 %121, i64* %51, align 8
  store i64 %112, i64* %8, align 8
  store i64 %111, i64* %5, align 8
  %129 = icmp eq %"class.gfx::Rect"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.gfx::Rect"* %128 to i8*
  tail call void @_ZdlPv(i8* %131) #11
  br label %132

132:                                              ; preds = %130, %127, %48
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN2cc15DisplayItemListC1ENS0_9UsageHintE(%"class.cc::DisplayItemList"*, i32) unnamed_addr #1

declare i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"*) local_unnamed_addr #1

declare void @_ZN2cc11DrawImageOpC1ERKNS_10PaintImageEff(%"class.cc::DrawImageOp"*, %"class.cc::PaintImage"* dereferenceable(104), float, float) unnamed_addr #1

declare zeroext i1 @_ZNK2cc11DrawImageOp20HasDiscardableImagesEv(%"class.cc::DrawImageOp"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
