; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cpdf_truetypefont.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cpdf_truetypefont.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_TrueTypeFont = type { %class.CPDF_SimpleFont }
%class.CPDF_SimpleFont = type { %class.CPDF_Font, %class.CPDF_FontEncoding, i32, i8, %"class.std::__1::vector.105", [256 x i16], [256 x i16], [256 x %struct.FX_RECT] }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.46", %"class.fxcrt::RetainPtr.54", %"class.fxcrt::RetainPtr.93", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.99", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.7", %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.15", %"class.fxcrt::RetainPtr.19" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.45", i64 }
%"class.fxcrt::UnownedPtr.45" = type { i8* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr.48" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.48"* }
%"class.fxcrt::RetainPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.64", %"class.fxcrt::RetainPtr.85" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.39", %"class.fxcrt::UnownedPtr.45" }
%"class.fxcrt::RetainPtr.64" = type { %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.93" = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.58" }
%"class.fxcrt::RetainPtr.58" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CPDF_FontEncoding = type { [256 x i32] }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.fxcrt::ByteString"* }
%class.CPDF_Document = type opaque
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.125", %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.140", [4 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.74" }
%"class.std::__1::__tree.74" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.112" }
%"class.fxcrt::RetainPtr.112" = type { %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.fxcrt::StringDataTemplate.116"* }
%"class.fxcrt::StringDataTemplate.116" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CPDF_Type1Font = type opaque
%class.CPDF_Type3Font = type opaque
%class.CPDF_CIDFont = type opaque
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.120" }
%"class.pdfium::span.120" = type { %"class.fxcrt::UnownedPtr.121", i64 }
%"class.fxcrt::UnownedPtr.121" = type { i8* }

@_ZTV17CPDF_TrueTypeFont = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_TrueTypeFont*)* @_ZN17CPDF_TrueTypeFontD2Ev to i8*), i8* bitcast (void (%class.CPDF_TrueTypeFont*)* @_ZN17CPDF_TrueTypeFontD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType1FontEv to i8*), i8* bitcast (i1 (%class.CPDF_TrueTypeFont*)* @_ZNK17CPDF_TrueTypeFont14IsTrueTypeFontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType3FontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font9IsCIDFontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_TrueTypeFont*)* @_ZNK17CPDF_TrueTypeFont14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_TrueTypeFont*)* @_ZN17CPDF_TrueTypeFont14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_Font*)* @_ZNK9CPDF_Font9AsCIDFontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_Font*)* @_ZN9CPDF_Font9AsCIDFontEv to i8*), i8* bitcast (void (%class.CPDF_Font*)* @_ZN9CPDF_Font15WillBeDestroyedEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font13IsVertWritingEv to i8*), i8* bitcast (i1 (%class.CPDF_SimpleFont*)* @_ZNK15CPDF_SimpleFont19IsUnicodeCompatibleEv to i8*), i8* bitcast (i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)* @_ZNK9CPDF_Font11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm to i8*), i8* bitcast (i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)* @_ZNK9CPDF_Font9CountCharEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (i32 (%class.CPDF_Font*, i8*, i32)* @_ZNK9CPDF_Font10AppendCharEPcj to i8*), i8* bitcast (i32 (%class.CPDF_SimpleFont*, i32, i8*)* @_ZN15CPDF_SimpleFont17GlyphFromCharCodeEjPb to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPDF_SimpleFont*, i32)* @_ZNK15CPDF_SimpleFont19UnicodeFromCharCodeEj to i8*), i8* bitcast (i32 (%class.CPDF_SimpleFont*, i32)* @_ZNK15CPDF_SimpleFont19CharCodeFromUnicodeEw to i8*), i8* bitcast (i1 (%class.CPDF_SimpleFont*)* @_ZNK15CPDF_SimpleFont13HasFontWidthsEv to i8*), i8* bitcast (i32 (%class.CPDF_SimpleFont*, i32)* @_ZN15CPDF_SimpleFont13GetCharWidthFEj to i8*), i8* bitcast ({ i64, i64 } (%class.CPDF_SimpleFont*, i32)* @_ZN15CPDF_SimpleFont11GetCharBBoxEj to i8*), i8* bitcast (i1 (%class.CPDF_TrueTypeFont*)* @_ZN17CPDF_TrueTypeFont4LoadEv to i8*), i8* bitcast (void (%class.CPDF_TrueTypeFont*)* @_ZN17CPDF_TrueTypeFont12LoadGlyphMapEv to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"FirstChar\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"ToUnicode\00", align 1
@_ZN12_GLOBAL__N_17kPrefixE = internal unnamed_addr constant [4 x i8] c"\00\F0\F1\F2", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c".notdef\00", align 1

@_ZN17CPDF_TrueTypeFontC1EP13CPDF_DocumentP15CPDF_Dictionary = hidden unnamed_addr alias void (%class.CPDF_TrueTypeFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*), void (%class.CPDF_TrueTypeFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*)* @_ZN17CPDF_TrueTypeFontC2EP13CPDF_DocumentP15CPDF_Dictionary
@_ZN17CPDF_TrueTypeFontD1Ev = hidden unnamed_addr alias void (%class.CPDF_TrueTypeFont*), void (%class.CPDF_TrueTypeFont*)* @_ZN17CPDF_TrueTypeFontD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TrueTypeFontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_TrueTypeFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_SimpleFontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_SimpleFont* %4, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2) #7
  %5 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV17CPDF_TrueTypeFont, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN15CPDF_SimpleFontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_SimpleFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN15CPDF_SimpleFontD2Ev(%class.CPDF_SimpleFont*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TrueTypeFontD2Ev(%class.CPDF_TrueTypeFont*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_SimpleFontD2Ev(%class.CPDF_SimpleFont* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TrueTypeFontD0Ev(%class.CPDF_TrueTypeFont*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_SimpleFontD2Ev(%class.CPDF_SimpleFont* %2) #7
  %3 = bitcast %class.CPDF_TrueTypeFont* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17CPDF_TrueTypeFont14IsTrueTypeFontEv(%class.CPDF_TrueTypeFont* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_TrueTypeFont* @_ZNK17CPDF_TrueTypeFont14AsTrueTypeFontEv(%class.CPDF_TrueTypeFont* readnone returned) unnamed_addr #4 align 2 {
  ret %class.CPDF_TrueTypeFont* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_TrueTypeFont* @_ZN17CPDF_TrueTypeFont14AsTrueTypeFontEv(%class.CPDF_TrueTypeFont* readnone returned) unnamed_addr #4 align 2 {
  ret %class.CPDF_TrueTypeFont* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CPDF_TrueTypeFont4LoadEv(%class.CPDF_TrueTypeFont*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZN15CPDF_SimpleFont10LoadCommonEv(%class.CPDF_SimpleFont* %2) #7
  ret i1 %3
}

declare zeroext i1 @_ZN15CPDF_SimpleFont10LoadCommonEv(%class.CPDF_SimpleFont*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TrueTypeFont12LoadGlyphMapEv(%class.CPDF_TrueTypeFont*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8
  %7 = icmp eq %class.CFX_Face* %6, null
  br i1 %7, label %551, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %9, align 8
  %11 = icmp eq %struct.FT_FaceRec_* %10, null
  br i1 %11, label %551, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0
  %14 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %16, align 8
  %18 = icmp eq %class.CPDF_StreamAcc* %17, null
  br i1 %18, label %101, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 9
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %101

23:                                               ; preds = %19
  %24 = icmp eq i32 %15, 2
  %25 = icmp eq i32 %15, 1
  %26 = add i32 %15, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %101

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 0, i32 10
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %101, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 10
  %35 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %34, align 8
  %36 = zext i32 %21 to i64
  %37 = add nsw i64 %36, -1
  %38 = and i64 %36, 3
  %39 = icmp ult i64 %37, 3
  br i1 %39, label %42, label %40

40:                                               ; preds = %33
  %41 = sub nsw i64 %36, %38
  br label %72

42:                                               ; preds = %574, %33
  %43 = phi i8 [ undef, %33 ], [ %575, %574 ]
  %44 = phi i8 [ undef, %33 ], [ %576, %574 ]
  %45 = phi i64 [ 0, %33 ], [ %577, %574 ]
  %46 = phi i8 [ 0, %33 ], [ %576, %574 ]
  %47 = phi i8 [ 0, %33 ], [ %575, %574 ]
  %48 = icmp eq i64 %38, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %42, %60
  %50 = phi i64 [ %63, %60 ], [ %45, %42 ]
  %51 = phi i8 [ %62, %60 ], [ %46, %42 ]
  %52 = phi i8 [ %61, %60 ], [ %47, %42 ]
  %53 = phi i64 [ %64, %60 ], [ %38, %42 ]
  %54 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %35, i64 %50
  %55 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %54, align 8
  %56 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %55, i64 0, i32 2
  %57 = load i16, i16* %56, align 4
  switch i16 %57, label %59 [
    i16 3, label %60
    i16 0, label %60
    i16 1, label %58
  ]

58:                                               ; preds = %49
  br label %60

59:                                               ; preds = %49
  br label %60

60:                                               ; preds = %59, %58, %49, %49
  %61 = phi i8 [ %52, %58 ], [ 1, %49 ], [ 1, %49 ], [ %52, %59 ]
  %62 = phi i8 [ 1, %58 ], [ %51, %49 ], [ %51, %49 ], [ %51, %59 ]
  %63 = add nuw nsw i64 %50, 1
  %64 = add i64 %53, -1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49, !llvm.loop !2

66:                                               ; preds = %60, %42
  %67 = phi i8 [ %43, %42 ], [ %61, %60 ]
  %68 = phi i8 [ %44, %42 ], [ %62, %60 ]
  %69 = and i8 %67, 1
  %70 = icmp eq i8 %69, 0
  %71 = and i1 %25, %70
  br i1 %71, label %91, label %95

72:                                               ; preds = %574, %40
  %73 = phi i64 [ 0, %40 ], [ %577, %574 ]
  %74 = phi i8 [ 0, %40 ], [ %576, %574 ]
  %75 = phi i8 [ 0, %40 ], [ %575, %574 ]
  %76 = phi i64 [ %41, %40 ], [ %578, %574 ]
  %77 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %35, i64 %73
  %78 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %77, align 8
  %79 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %78, i64 0, i32 2
  %80 = load i16, i16* %79, align 4
  switch i16 %80, label %82 [
    i16 3, label %83
    i16 0, label %83
    i16 1, label %81
  ]

81:                                               ; preds = %72
  br label %83

82:                                               ; preds = %72
  br label %83

83:                                               ; preds = %72, %72, %82, %81
  %84 = phi i8 [ %75, %81 ], [ 1, %72 ], [ 1, %72 ], [ %75, %82 ]
  %85 = phi i8 [ 1, %81 ], [ %74, %72 ], [ %74, %72 ], [ %74, %82 ]
  %86 = or i64 %73, 1
  %87 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %35, i64 %86
  %88 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %87, align 8
  %89 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %88, i64 0, i32 2
  %90 = load i16, i16* %89, align 4
  switch i16 %90, label %553 [
    i16 3, label %554
    i16 0, label %554
    i16 1, label %552
  ]

91:                                               ; preds = %66
  %92 = shl i8 %68, 1
  %93 = and i8 %92, 2
  %94 = zext i8 %93 to i32
  br label %101

95:                                               ; preds = %66
  br i1 %24, label %96, label %101

96:                                               ; preds = %95
  %97 = and i8 %68, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %96
  %100 = zext i8 %69 to i32
  br label %101

101:                                              ; preds = %28, %12, %91, %99, %95, %23, %19
  %102 = phi i32 [ %15, %28 ], [ %15, %23 ], [ %15, %19 ], [ %15, %12 ], [ %100, %99 ], [ %15, %95 ], [ %94, %91 ]
  %103 = add i32 %102, -1
  %104 = icmp ult i32 %103, 2
  br i1 %104, label %105, label %112

105:                                              ; preds = %96, %101
  %106 = phi i32 [ %102, %101 ], [ 2, %96 ]
  %107 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %108 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %107, align 8
  %109 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %110 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %109, align 8
  %111 = icmp eq %"class.fxcrt::ByteString"* %108, %110
  br i1 %111, label %118, label %112

112:                                              ; preds = %101, %105
  %113 = phi i32 [ %102, %101 ], [ %106, %105 ]
  %114 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 0, i32 10
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 32
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %368, label %118

118:                                              ; preds = %112, %105
  %119 = phi i32 [ %113, %112 ], [ %106, %105 ]
  %120 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 2
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 512
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %246

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 9
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 10
  %130 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %129, align 8
  %131 = icmp eq %struct.FT_CharMapRec_** %130, null
  br i1 %131, label %132, label %246

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %133, align 8
  %135 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #7
  %136 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %134, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #7
  %137 = icmp ugt i32 %136, 255
  br i1 %137, label %551, label %138

138:                                              ; preds = %132
  %139 = icmp eq i32 %136, 0
  br i1 %139, label %155, label %140

140:                                              ; preds = %138
  %141 = sext i32 %136 to i64
  %142 = getelementptr %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 0
  %143 = bitcast i16* %142 to i8*
  %144 = icmp sgt i32 %136, 1
  %145 = select i1 %144, i32 %136, i32 1
  %146 = shl nuw i32 %145, 1
  %147 = zext i32 %146 to i64
  call void @llvm.memset.p0i8.i64(i8* align 2 %143, i8 0, i64 %147, i1 false)
  br label %148

148:                                              ; preds = %140, %148
  %149 = phi i64 [ 0, %140 ], [ %150, %148 ]
  %150 = add nuw nsw i64 %149, 1
  %151 = icmp slt i64 %150, %141
  br i1 %151, label %148, label %152

152:                                              ; preds = %148
  %153 = trunc i64 %150 to i32
  %154 = icmp ult i32 %153, 256
  br i1 %154, label %155, label %551

155:                                              ; preds = %138, %152
  %156 = phi i32 [ %153, %152 ], [ 0, %138 ]
  %157 = sub nsw i32 %156, %136
  %158 = trunc i32 %157 to i16
  %159 = add i16 %158, 3
  %160 = zext i32 %156 to i64
  %161 = sub nsw i64 256, %160
  %162 = icmp ult i64 %161, 16
  br i1 %162, label %236, label %163

163:                                              ; preds = %155
  %164 = and i64 %161, -16
  %165 = add nsw i64 %164, %160
  %166 = trunc i64 %164 to i16
  %167 = add i16 %159, %166
  %168 = insertelement <8 x i16> undef, i16 %159, i32 0
  %169 = shufflevector <8 x i16> %168, <8 x i16> undef, <8 x i32> zeroinitializer
  %170 = add <8 x i16> %169, <i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7>
  %171 = add nsw i64 %164, -16
  %172 = lshr exact i64 %171, 4
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 3
  %175 = icmp ult i64 %171, 48
  br i1 %175, label %216, label %176

176:                                              ; preds = %163
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %212, %178 ]
  %180 = phi <8 x i16> [ %170, %176 ], [ %213, %178 ]
  %181 = phi i64 [ %177, %176 ], [ %214, %178 ]
  %182 = add i64 %179, %160
  %183 = add <8 x i16> %180, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %184 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %182
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %185, align 2
  %186 = getelementptr inbounds i16, i16* %184, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %187, align 2
  %188 = or i64 %179, 16
  %189 = add <8 x i16> %180, <i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16>
  %190 = add i64 %188, %160
  %191 = add <8 x i16> %180, <i16 24, i16 24, i16 24, i16 24, i16 24, i16 24, i16 24, i16 24>
  %192 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %190
  %193 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %193, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %195, align 2
  %196 = or i64 %179, 32
  %197 = add <8 x i16> %180, <i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32>
  %198 = add i64 %196, %160
  %199 = add <8 x i16> %180, <i16 40, i16 40, i16 40, i16 40, i16 40, i16 40, i16 40, i16 40>
  %200 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %198
  %201 = bitcast i16* %200 to <8 x i16>*
  store <8 x i16> %197, <8 x i16>* %201, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 8
  %203 = bitcast i16* %202 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %203, align 2
  %204 = or i64 %179, 48
  %205 = add <8 x i16> %180, <i16 48, i16 48, i16 48, i16 48, i16 48, i16 48, i16 48, i16 48>
  %206 = add i64 %204, %160
  %207 = add <8 x i16> %180, <i16 56, i16 56, i16 56, i16 56, i16 56, i16 56, i16 56, i16 56>
  %208 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %206
  %209 = bitcast i16* %208 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %209, align 2
  %210 = getelementptr inbounds i16, i16* %208, i64 8
  %211 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %207, <8 x i16>* %211, align 2
  %212 = add i64 %179, 64
  %213 = add <8 x i16> %180, <i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64>
  %214 = add i64 %181, -4
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %178, !llvm.loop !4

216:                                              ; preds = %178, %163
  %217 = phi i64 [ 0, %163 ], [ %212, %178 ]
  %218 = phi <8 x i16> [ %170, %163 ], [ %213, %178 ]
  %219 = icmp eq i64 %174, 0
  br i1 %219, label %234, label %220

220:                                              ; preds = %216, %220
  %221 = phi i64 [ %230, %220 ], [ %217, %216 ]
  %222 = phi <8 x i16> [ %231, %220 ], [ %218, %216 ]
  %223 = phi i64 [ %232, %220 ], [ %174, %216 ]
  %224 = add i64 %221, %160
  %225 = add <8 x i16> %222, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %226 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %224
  %227 = bitcast i16* %226 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %227, align 2
  %228 = getelementptr inbounds i16, i16* %226, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %225, <8 x i16>* %229, align 2
  %230 = add i64 %221, 16
  %231 = add <8 x i16> %222, <i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16>
  %232 = add i64 %223, -1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %220, !llvm.loop !6

234:                                              ; preds = %220, %216
  %235 = icmp eq i64 %161, %164
  br i1 %235, label %551, label %236

236:                                              ; preds = %234, %155
  %237 = phi i64 [ %160, %155 ], [ %165, %234 ]
  %238 = phi i16 [ %159, %155 ], [ %167, %234 ]
  br label %239

239:                                              ; preds = %236, %239
  %240 = phi i64 [ %243, %239 ], [ %237, %236 ]
  %241 = phi i16 [ %244, %239 ], [ %238, %236 ]
  %242 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %240
  store i16 %241, i16* %242, align 2
  %243 = add nuw nsw i64 %240, 1
  %244 = add i16 %241, 1
  %245 = icmp eq i64 %243, 256
  br i1 %245, label %551, label %239, !llvm.loop !7

246:                                              ; preds = %128, %118
  %247 = tail call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* %10, i32 3, i32 1) #7
  br i1 %247, label %261, label %248

248:                                              ; preds = %246
  %249 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 0, i32 10
  %250 = load i32, i32* %249, align 4
  %251 = and i32 %250, 32
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %257, label %253

253:                                              ; preds = %248
  %254 = tail call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* %10, i32 1, i32 0) #7
  br i1 %254, label %261, label %255

255:                                              ; preds = %253
  %256 = tail call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* %10, i32 3, i32 0) #7
  br label %261

257:                                              ; preds = %248
  %258 = tail call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* %10, i32 3, i32 0) #7
  br i1 %258, label %261, label %259

259:                                              ; preds = %257
  %260 = tail call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* %10, i32 1, i32 0) #7
  br label %261

261:                                              ; preds = %257, %259, %253, %255, %246
  %262 = phi i1 [ false, %246 ], [ false, %255 ], [ true, %253 ], [ false, %257 ], [ %260, %259 ]
  %263 = phi i1 [ false, %246 ], [ %256, %255 ], [ false, %253 ], [ true, %257 ], [ false, %259 ]
  %264 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %265 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %264, align 8
  %266 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #7
  %267 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %265, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #7
  %268 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 4
  %269 = xor i1 %267, true
  %270 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  %271 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %272

272:                                              ; preds = %365, %261
  %273 = phi i64 [ 0, %261 ], [ %366, %365 ]
  %274 = trunc i64 %273 to i32
  %275 = call i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32 %119, %"class.std::__1::vector.105"* dereferenceable(24) %268, i32 %274) #7
  %276 = icmp eq i8* %275, null
  br i1 %276, label %277, label %286

277:                                              ; preds = %272
  %278 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %16, align 8
  %279 = icmp eq %class.CPDF_StreamAcc* %278, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %10, i64 %273) #7
  br label %282

282:                                              ; preds = %277, %280
  %283 = phi i32 [ %281, %280 ], [ -1, %277 ]
  %284 = trunc i32 %283 to i16
  %285 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %273
  store i16 %284, i16* %285, align 2
  br label %365

286:                                              ; preds = %272
  %287 = call signext i32 @_Z24PDF_UnicodeFromAdobeNamePKc(i8* nonnull %275) #7
  %288 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 1, i32 0, i64 %273
  store i32 %287, i32* %288, align 4
  br i1 %263, label %289, label %305

289:                                              ; preds = %286
  %290 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %273
  br label %291

291:                                              ; preds = %291, %289
  %292 = phi i64 [ 0, %289 ], [ %302, %291 ]
  %293 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_17kPrefixE, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i64
  %296 = shl nuw nsw i64 %295, 8
  %297 = add nuw i64 %296, %273
  %298 = and i64 %297, 65535
  %299 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %10, i64 %298) #7
  %300 = trunc i32 %299 to i16
  store i16 %300, i16* %290, align 2
  %301 = icmp eq i16 %300, 0
  %302 = add nuw nsw i64 %292, 1
  %303 = icmp ult i64 %302, 4
  %304 = and i1 %301, %303
  br i1 %304, label %291, label %326

305:                                              ; preds = %286
  %306 = icmp eq i32 %287, 0
  br i1 %306, label %326, label %307

307:                                              ; preds = %305
  br i1 %247, label %308, label %313

308:                                              ; preds = %307
  %309 = sext i32 %287 to i64
  %310 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %10, i64 %309) #7
  %311 = trunc i32 %310 to i16
  %312 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %273
  store i16 %311, i16* %312, align 2
  br label %326

313:                                              ; preds = %307
  br i1 %262, label %314, label %326

314:                                              ; preds = %313
  %315 = call i32 @_Z22FT_CharCodeFromUnicodeiw(i32 1634889070, i32 signext %287) #7
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %321

317:                                              ; preds = %314
  %318 = call i32 @FT_Get_Name_Index(%struct.FT_FaceRec_* %10, i8* nonnull %275) #7
  %319 = trunc i32 %318 to i16
  %320 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %273
  store i16 %319, i16* %320, align 2
  br label %326

321:                                              ; preds = %314
  %322 = zext i32 %315 to i64
  %323 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %10, i64 %322) #7
  %324 = trunc i32 %323 to i16
  %325 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %273
  store i16 %324, i16* %325, align 2
  br label %326

326:                                              ; preds = %291, %317, %321, %305, %313, %308
  %327 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %273
  %328 = load i16, i16* %327, align 2
  switch i16 %328, label %365 [
    i16 0, label %329
    i16 -1, label %329
  ]

329:                                              ; preds = %326, %326
  %330 = call i32 @strcmp(i8* nonnull %275, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #9
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %335

332:                                              ; preds = %329
  %333 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %10, i64 32) #7
  %334 = trunc i32 %333 to i16
  store i16 %334, i16* %327, align 2
  br label %365

335:                                              ; preds = %329
  %336 = call i32 @FT_Get_Name_Index(%struct.FT_FaceRec_* %10, i8* nonnull %275) #7
  %337 = trunc i32 %336 to i16
  store i16 %337, i16* %327, align 2
  %338 = and i32 %336, 65535
  %339 = icmp ne i32 %338, 0
  %340 = or i1 %339, %269
  br i1 %340, label %365, label %341

341:                                              ; preds = %335
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #7
  store %"class.fxcrt::StringDataTemplate.116"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.116"*), %"class.fxcrt::StringDataTemplate.116"** %271, align 8
  call void @_ZNK15CPDF_SimpleFont19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* nonnull sret %4, %class.CPDF_SimpleFont* %13, i32 %274) #7
  %342 = load %"class.fxcrt::StringDataTemplate.116"*, %"class.fxcrt::StringDataTemplate.116"** %271, align 8
  %343 = icmp eq %"class.fxcrt::StringDataTemplate.116"* %342, null
  br i1 %343, label %364, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.116", %"class.fxcrt::StringDataTemplate.116"* %342, i64 0, i32 1
  %346 = load i64, i64* %345, align 8
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %364, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.116", %"class.fxcrt::StringDataTemplate.116"* %342, i64 0, i32 3, i64 0
  %350 = load i32, i32* %349, align 4
  %351 = sext i32 %350 to i64
  %352 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %10, i64 %351) #7
  %353 = trunc i32 %352 to i16
  store i16 %353, i16* %327, align 2
  %354 = load %"class.fxcrt::StringDataTemplate.116"*, %"class.fxcrt::StringDataTemplate.116"** %271, align 8
  %355 = icmp eq %"class.fxcrt::StringDataTemplate.116"* %354, null
  br i1 %355, label %360, label %356

356:                                              ; preds = %348
  %357 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.116", %"class.fxcrt::StringDataTemplate.116"* %354, i64 0, i32 1
  %358 = load i64, i64* %357, align 8
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %361, !prof !9

360:                                              ; preds = %356, %348
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !10
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !11
  unreachable

361:                                              ; preds = %356
  %362 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.116", %"class.fxcrt::StringDataTemplate.116"* %354, i64 0, i32 3, i64 0
  %363 = load i32, i32* %362, align 4
  store i32 %363, i32* %288, align 4
  br label %364

364:                                              ; preds = %341, %361, %344
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #7
  br label %365

365:                                              ; preds = %335, %326, %364, %332, %282
  %366 = add nuw nsw i64 %273, 1
  %367 = icmp eq i64 %366, 256
  br i1 %367, label %551, label %272

368:                                              ; preds = %112
  %369 = tail call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* nonnull %10, i32 3, i32 0) #7
  br i1 %369, label %370, label %420

370:                                              ; preds = %368, %393
  %371 = phi i64 [ %394, %393 ], [ 0, %368 ]
  %372 = phi i8 [ %389, %393 ], [ 0, %368 ]
  %373 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %371
  br label %377

374:                                              ; preds = %393
  %375 = and i8 %389, 1
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %420, label %396

377:                                              ; preds = %377, %370
  %378 = phi i64 [ 0, %370 ], [ %390, %377 ]
  %379 = phi i8 [ %372, %370 ], [ %389, %377 ]
  %380 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_17kPrefixE, i64 0, i64 %378
  %381 = load i8, i8* %380, align 1
  %382 = zext i8 %381 to i64
  %383 = shl nuw nsw i64 %382, 8
  %384 = add nuw i64 %383, %371
  %385 = and i64 %384, 65535
  %386 = tail call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* nonnull %10, i64 %385) #7
  %387 = trunc i32 %386 to i16
  store i16 %387, i16* %373, align 2
  %388 = icmp eq i16 %387, 0
  %389 = select i1 %388, i8 %379, i8 1
  %390 = add nuw nsw i64 %378, 1
  %391 = icmp ult i64 %390, 4
  %392 = and i1 %388, %391
  br i1 %392, label %377, label %393

393:                                              ; preds = %377
  %394 = add nuw nsw i64 %371, 1
  %395 = icmp eq i64 %394, 256
  br i1 %395, label %374, label %370

396:                                              ; preds = %374
  %397 = icmp eq i32 %113, 0
  br i1 %397, label %411, label %398

398:                                              ; preds = %396
  %399 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 4
  br label %400

400:                                              ; preds = %408, %398
  %401 = phi i64 [ 0, %398 ], [ %409, %408 ]
  %402 = trunc i64 %401 to i32
  %403 = tail call i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32 %113, %"class.std::__1::vector.105"* dereferenceable(24) %399, i32 %402) #7
  %404 = icmp eq i8* %403, null
  br i1 %404, label %408, label %405

405:                                              ; preds = %400
  %406 = tail call signext i32 @_Z24PDF_UnicodeFromAdobeNamePKc(i8* nonnull %403) #7
  %407 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 1, i32 0, i64 %401
  store i32 %406, i32* %407, align 4
  br label %408

408:                                              ; preds = %400, %405
  %409 = add nuw nsw i64 %401, 1
  %410 = icmp eq i64 %409, 256
  br i1 %410, label %551, label %400

411:                                              ; preds = %396
  %412 = tail call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* nonnull %10, i32 1, i32 0) #7
  br i1 %412, label %413, label %551

413:                                              ; preds = %411, %413
  %414 = phi i64 [ %418, %413 ], [ 0, %411 ]
  %415 = trunc i64 %414 to i32
  %416 = tail call signext i32 @_Z22FT_UnicodeFromCharCodeij(i32 1634889070, i32 %415) #7
  %417 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 1, i32 0, i64 %414
  store i32 %416, i32* %417, align 4
  %418 = add nuw nsw i64 %414, 1
  %419 = icmp eq i64 %418, 256
  br i1 %419, label %551, label %413

420:                                              ; preds = %374, %368
  %421 = tail call zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_* nonnull %10, i32 1, i32 0) #7
  br i1 %421, label %428, label %442

422:                                              ; preds = %428
  %423 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %16, align 8
  %424 = icmp eq %class.CPDF_StreamAcc* %423, null
  %425 = and i8 %439, 1
  %426 = icmp eq i8 %425, 0
  %427 = and i1 %426, %424
  br i1 %427, label %442, label %551

428:                                              ; preds = %420, %428
  %429 = phi i64 [ %440, %428 ], [ 0, %420 ]
  %430 = phi i8 [ %439, %428 ], [ 0, %420 ]
  %431 = tail call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* nonnull %10, i64 %429) #7
  %432 = trunc i32 %431 to i16
  %433 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %429
  store i16 %432, i16* %433, align 2
  %434 = trunc i64 %429 to i32
  %435 = tail call signext i32 @_Z22FT_UnicodeFromCharCodeij(i32 1634889070, i32 %434) #7
  %436 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 1, i32 0, i64 %429
  store i32 %435, i32* %436, align 4
  %437 = load i16, i16* %433, align 2
  %438 = icmp eq i16 %437, 0
  %439 = select i1 %438, i8 %430, i8 1
  %440 = add nuw nsw i64 %429, 1
  %441 = icmp eq i64 %440, 256
  br i1 %441, label %422, label %428

442:                                              ; preds = %422, %420
  %443 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* nonnull %10, i32 1970170211) #7
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %486

445:                                              ; preds = %442
  %446 = tail call i16* @_Z32PDF_UnicodesForPredefinedCharSeti(i32 %113) #7
  %447 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 4
  %448 = icmp eq i16* %446, null
  br label %452

449:                                              ; preds = %476
  %450 = and i8 %483, 1
  %451 = icmp eq i8 %450, 0
  br i1 %451, label %486, label %551

452:                                              ; preds = %476, %445
  %453 = phi i64 [ 0, %445 ], [ %484, %476 ]
  %454 = phi i8 [ 0, %445 ], [ %483, %476 ]
  %455 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %16, align 8
  %456 = icmp eq %class.CPDF_StreamAcc* %455, null
  br i1 %456, label %460, label %457

457:                                              ; preds = %452
  %458 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 1, i32 0, i64 %453
  %459 = trunc i64 %453 to i32
  store i32 %459, i32* %458, align 4
  br label %476

460:                                              ; preds = %452
  %461 = trunc i64 %453 to i32
  %462 = tail call i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32 0, %"class.std::__1::vector.105"* dereferenceable(24) %447, i32 %461) #7
  %463 = icmp eq i8* %462, null
  br i1 %463, label %467, label %464

464:                                              ; preds = %460
  %465 = tail call signext i32 @_Z24PDF_UnicodeFromAdobeNamePKc(i8* nonnull %462) #7
  %466 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 1, i32 0, i64 %453
  store i32 %465, i32* %466, align 4
  br label %476

467:                                              ; preds = %460
  br i1 %448, label %468, label %471

468:                                              ; preds = %467
  %469 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 1, i32 0, i64 %453
  %470 = load i32, i32* %469, align 4
  br label %476

471:                                              ; preds = %467
  %472 = getelementptr inbounds i16, i16* %446, i64 %453
  %473 = load i16, i16* %472, align 2
  %474 = zext i16 %473 to i32
  %475 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 1, i32 0, i64 %453
  store i32 %474, i32* %475, align 4
  br label %476

476:                                              ; preds = %468, %464, %471, %457
  %477 = phi i32 [ %470, %468 ], [ %465, %464 ], [ %474, %471 ], [ %459, %457 ]
  %478 = sext i32 %477 to i64
  %479 = tail call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* nonnull %10, i64 %478) #7
  %480 = trunc i32 %479 to i16
  %481 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 %453
  store i16 %480, i16* %481, align 2
  %482 = icmp eq i16 %480, 0
  %483 = select i1 %482, i8 %454, i8 1
  %484 = add nuw nsw i64 %453, 1
  %485 = icmp eq i64 %484, 256
  br i1 %485, label %449, label %452

486:                                              ; preds = %449, %442
  %487 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 0
  %488 = bitcast i16* %487 to <8 x i16>*
  store <8 x i16> <i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7>, <8 x i16>* %488, align 2
  %489 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 8
  %490 = bitcast i16* %489 to <8 x i16>*
  store <8 x i16> <i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15>, <8 x i16>* %490, align 2
  %491 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 16
  %492 = bitcast i16* %491 to <8 x i16>*
  store <8 x i16> <i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23>, <8 x i16>* %492, align 2
  %493 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 24
  %494 = bitcast i16* %493 to <8 x i16>*
  store <8 x i16> <i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31>, <8 x i16>* %494, align 2
  %495 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 32
  %496 = bitcast i16* %495 to <8 x i16>*
  store <8 x i16> <i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39>, <8 x i16>* %496, align 2
  %497 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 40
  %498 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> <i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47>, <8 x i16>* %498, align 2
  %499 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 48
  %500 = bitcast i16* %499 to <8 x i16>*
  store <8 x i16> <i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55>, <8 x i16>* %500, align 2
  %501 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 56
  %502 = bitcast i16* %501 to <8 x i16>*
  store <8 x i16> <i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63>, <8 x i16>* %502, align 2
  %503 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 64
  %504 = bitcast i16* %503 to <8 x i16>*
  store <8 x i16> <i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71>, <8 x i16>* %504, align 2
  %505 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 72
  %506 = bitcast i16* %505 to <8 x i16>*
  store <8 x i16> <i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79>, <8 x i16>* %506, align 2
  %507 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 80
  %508 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> <i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87>, <8 x i16>* %508, align 2
  %509 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 88
  %510 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> <i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95>, <8 x i16>* %510, align 2
  %511 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 96
  %512 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> <i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103>, <8 x i16>* %512, align 2
  %513 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 104
  %514 = bitcast i16* %513 to <8 x i16>*
  store <8 x i16> <i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111>, <8 x i16>* %514, align 2
  %515 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 112
  %516 = bitcast i16* %515 to <8 x i16>*
  store <8 x i16> <i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119>, <8 x i16>* %516, align 2
  %517 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 120
  %518 = bitcast i16* %517 to <8 x i16>*
  store <8 x i16> <i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127>, <8 x i16>* %518, align 2
  %519 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 128
  %520 = bitcast i16* %519 to <8 x i16>*
  store <8 x i16> <i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135>, <8 x i16>* %520, align 2
  %521 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 136
  %522 = bitcast i16* %521 to <8 x i16>*
  store <8 x i16> <i16 136, i16 137, i16 138, i16 139, i16 140, i16 141, i16 142, i16 143>, <8 x i16>* %522, align 2
  %523 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 144
  %524 = bitcast i16* %523 to <8 x i16>*
  store <8 x i16> <i16 144, i16 145, i16 146, i16 147, i16 148, i16 149, i16 150, i16 151>, <8 x i16>* %524, align 2
  %525 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 152
  %526 = bitcast i16* %525 to <8 x i16>*
  store <8 x i16> <i16 152, i16 153, i16 154, i16 155, i16 156, i16 157, i16 158, i16 159>, <8 x i16>* %526, align 2
  %527 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 160
  %528 = bitcast i16* %527 to <8 x i16>*
  store <8 x i16> <i16 160, i16 161, i16 162, i16 163, i16 164, i16 165, i16 166, i16 167>, <8 x i16>* %528, align 2
  %529 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 168
  %530 = bitcast i16* %529 to <8 x i16>*
  store <8 x i16> <i16 168, i16 169, i16 170, i16 171, i16 172, i16 173, i16 174, i16 175>, <8 x i16>* %530, align 2
  %531 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 176
  %532 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> <i16 176, i16 177, i16 178, i16 179, i16 180, i16 181, i16 182, i16 183>, <8 x i16>* %532, align 2
  %533 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 184
  %534 = bitcast i16* %533 to <8 x i16>*
  store <8 x i16> <i16 184, i16 185, i16 186, i16 187, i16 188, i16 189, i16 190, i16 191>, <8 x i16>* %534, align 2
  %535 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 192
  %536 = bitcast i16* %535 to <8 x i16>*
  store <8 x i16> <i16 192, i16 193, i16 194, i16 195, i16 196, i16 197, i16 198, i16 199>, <8 x i16>* %536, align 2
  %537 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 200
  %538 = bitcast i16* %537 to <8 x i16>*
  store <8 x i16> <i16 200, i16 201, i16 202, i16 203, i16 204, i16 205, i16 206, i16 207>, <8 x i16>* %538, align 2
  %539 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 208
  %540 = bitcast i16* %539 to <8 x i16>*
  store <8 x i16> <i16 208, i16 209, i16 210, i16 211, i16 212, i16 213, i16 214, i16 215>, <8 x i16>* %540, align 2
  %541 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 216
  %542 = bitcast i16* %541 to <8 x i16>*
  store <8 x i16> <i16 216, i16 217, i16 218, i16 219, i16 220, i16 221, i16 222, i16 223>, <8 x i16>* %542, align 2
  %543 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 224
  %544 = bitcast i16* %543 to <8 x i16>*
  store <8 x i16> <i16 224, i16 225, i16 226, i16 227, i16 228, i16 229, i16 230, i16 231>, <8 x i16>* %544, align 2
  %545 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 232
  %546 = bitcast i16* %545 to <8 x i16>*
  store <8 x i16> <i16 232, i16 233, i16 234, i16 235, i16 236, i16 237, i16 238, i16 239>, <8 x i16>* %546, align 2
  %547 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 240
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> <i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247>, <8 x i16>* %548, align 2
  %549 = getelementptr inbounds %class.CPDF_TrueTypeFont, %class.CPDF_TrueTypeFont* %0, i64 0, i32 0, i32 5, i64 248
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> <i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255>, <8 x i16>* %550, align 2
  br label %551

551:                                              ; preds = %408, %413, %365, %239, %486, %234, %152, %1, %449, %132, %422, %411, %8
  ret void

552:                                              ; preds = %83
  br label %554

553:                                              ; preds = %83
  br label %554

554:                                              ; preds = %553, %552, %83, %83
  %555 = phi i8 [ %84, %552 ], [ 1, %83 ], [ 1, %83 ], [ %84, %553 ]
  %556 = phi i8 [ 1, %552 ], [ %85, %83 ], [ %85, %83 ], [ %85, %553 ]
  %557 = or i64 %73, 2
  %558 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %35, i64 %557
  %559 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %558, align 8
  %560 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %559, i64 0, i32 2
  %561 = load i16, i16* %560, align 4
  switch i16 %561, label %563 [
    i16 3, label %564
    i16 0, label %564
    i16 1, label %562
  ]

562:                                              ; preds = %554
  br label %564

563:                                              ; preds = %554
  br label %564

564:                                              ; preds = %563, %562, %554, %554
  %565 = phi i8 [ %555, %562 ], [ 1, %554 ], [ 1, %554 ], [ %555, %563 ]
  %566 = phi i8 [ 1, %562 ], [ %556, %554 ], [ %556, %554 ], [ %556, %563 ]
  %567 = or i64 %73, 3
  %568 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %35, i64 %567
  %569 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %568, align 8
  %570 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %569, i64 0, i32 2
  %571 = load i16, i16* %570, align 4
  switch i16 %571, label %573 [
    i16 3, label %574
    i16 0, label %574
    i16 1, label %572
  ]

572:                                              ; preds = %564
  br label %574

573:                                              ; preds = %564
  br label %574

574:                                              ; preds = %573, %572, %564, %564
  %575 = phi i8 [ %565, %572 ], [ 1, %564 ], [ 1, %564 ], [ %565, %573 ]
  %576 = phi i8 [ 1, %572 ], [ %566, %564 ], [ %566, %564 ], [ %566, %573 ]
  %577 = add nuw nsw i64 %73, 4
  %578 = add i64 %76, -4
  %579 = icmp eq i64 %578, 0
  br i1 %579, label %42, label %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

declare zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32, %"class.std::__1::vector.105"* dereferenceable(24), i32) local_unnamed_addr #1

declare i32 @FT_Get_Char_Index(%struct.FT_FaceRec_*, i64) local_unnamed_addr #1

declare signext i32 @_Z24PDF_UnicodeFromAdobeNamePKc(i8*) local_unnamed_addr #1

declare i32 @_Z22FT_CharCodeFromUnicodeiw(i32, i32 signext) local_unnamed_addr #1

declare i32 @FT_Get_Name_Index(%struct.FT_FaceRec_*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

declare void @_ZNK15CPDF_SimpleFont19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* sret, %class.CPDF_SimpleFont*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

declare signext i32 @_Z22FT_UnicodeFromCharCodeij(i32, i32) local_unnamed_addr #1

declare i32 @FT_Select_Charmap(%struct.FT_FaceRec_*, i32) local_unnamed_addr #1

declare i16* @_Z32PDF_UnicodesForPredefinedCharSeti(i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font11IsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font11IsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font9IsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type1Font* @_ZNK9CPDF_Font11AsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type1Font* @_ZN9CPDF_Font11AsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type3Font* @_ZNK9CPDF_Font11AsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type3Font* @_ZN9CPDF_Font11AsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_CIDFont* @_ZNK9CPDF_Font9AsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_CIDFont* @_ZN9CPDF_Font9AsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare void @_ZN9CPDF_Font15WillBeDestroyedEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font13IsVertWritingEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_SimpleFont19IsUnicodeCompatibleEv(%class.CPDF_SimpleFont*) unnamed_addr #1

declare i32 @_ZNK9CPDF_Font11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*) unnamed_addr #1

declare i64 @_ZNK9CPDF_Font9CountCharEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

declare i32 @_ZNK9CPDF_Font10AppendCharEPcj(%class.CPDF_Font*, i8*, i32) unnamed_addr #1

declare i32 @_ZN15CPDF_SimpleFont17GlyphFromCharCodeEjPb(%class.CPDF_SimpleFont*, i32, i8*) unnamed_addr #1

declare i32 @_ZNK15CPDF_SimpleFont19CharCodeFromUnicodeEw(%class.CPDF_SimpleFont*, i32 signext) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_SimpleFont13HasFontWidthsEv(%class.CPDF_SimpleFont*) unnamed_addr #1

declare i32 @_ZN15CPDF_SimpleFont13GetCharWidthFEj(%class.CPDF_SimpleFont*, i32) unnamed_addr #1

declare { i64, i64 } @_ZN15CPDF_SimpleFont11GetCharBBoxEj(%class.CPDF_SimpleFont*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !8, !5}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{i32 -2143420621}
!11 = !{i32 -2143420600}
