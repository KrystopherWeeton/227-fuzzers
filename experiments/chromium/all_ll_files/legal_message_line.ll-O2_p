; ModuleID = '../../components/autofill/core/browser/payments/legal_message_line.cc'
source_filename = "../../components/autofill/core/browser/payments/legal_message_line.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.autofill::LegalMessageLine::Link" = type { %"class.gfx::Range", %class.GURL }
%"class.gfx::Range" = type { i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.autofill::LegalMessageLine" = type { i32 (...)**, %"class.std::__1::basic_string.4", %"class.std::__1::vector" }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.autofill::LegalMessageLine::Link"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"union.absl::variant_internal::DestructibleUnionImpl.20" }
%"union.absl::variant_internal::DestructibleUnionImpl.20" = type { %"union.absl::variant_internal::DestructibleUnionImpl.21" }
%"union.absl::variant_internal::DestructibleUnionImpl.21" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.autofill::LegalMessageLine"* }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::Value"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::i18n::internal::MessageArg" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.icu_69::Formattable"* }
%"class.icu_69::Formattable" = type opaque
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::basic_string.4"* }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i64*, i64*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i64* }

$_ZNSt3__16vectorIN8autofill16LegalMessageLineENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN8autofill16LegalMessageLine4LinkENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZNSt3__16vectorIN8autofill16LegalMessageLineENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN8autofill16LegalMessageLine4LinkENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJiiRKNS_12basic_stringIcNS_11char_traitsIcEENS4_IcEEEEEEEvDpOT_ = comdat any

@_ZTVN8autofill16LegalMessageLineE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::LegalMessageLine"*)* @_ZN8autofill16LegalMessageLineD2Ev to i8*), i8* bitcast (void (%"class.autofill::LegalMessageLine"*)* @_ZN8autofill16LegalMessageLineD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"template_parameter\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"display_text\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"template\00", align 1
@.str.5 = private unnamed_addr constant [2 x i16] [i16 39, i16 0], align 2
@.str.6 = private unnamed_addr constant [3 x i16] [i16 39, i16 39, i16 0], align 2
@.str.9 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.15 = private unnamed_addr constant [2 x i16] [i16 36, i16 0], align 2
@.str.16 = private unnamed_addr constant [3 x i16] [i16 36, i16 36, i16 0], align 2
@.str.17 = private unnamed_addr constant [3 x i8] c"$1\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"$2\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"$3\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"$4\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"$5\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"$6\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"$7\00", align 1

@_ZN8autofill16LegalMessageLine4LinkC1EmmRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = hidden unnamed_addr alias void (%"struct.autofill::LegalMessageLine::Link"*, i64, i64, %"class.std::__1::basic_string"*), void (%"struct.autofill::LegalMessageLine::Link"*, i64, i64, %"class.std::__1::basic_string"*)* @_ZN8autofill16LegalMessageLine4LinkC2EmmRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
@_ZN8autofill16LegalMessageLine4LinkD1Ev = hidden unnamed_addr alias void (%"struct.autofill::LegalMessageLine::Link"*), void (%"struct.autofill::LegalMessageLine::Link"*)* @_ZN8autofill16LegalMessageLine4LinkD2Ev
@_ZN8autofill16LegalMessageLineC1Ev = hidden unnamed_addr alias void (%"class.autofill::LegalMessageLine"*), void (%"class.autofill::LegalMessageLine"*)* @_ZN8autofill16LegalMessageLineC2Ev
@_ZN8autofill16LegalMessageLineC1ERKS0_ = hidden unnamed_addr alias void (%"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"*), void (%"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"*)* @_ZN8autofill16LegalMessageLineC2ERKS0_
@_ZN8autofill16LegalMessageLineD1Ev = hidden unnamed_addr alias void (%"class.autofill::LegalMessageLine"*), void (%"class.autofill::LegalMessageLine"*)* @_ZN8autofill16LegalMessageLineD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16LegalMessageLine4LinkC2EmmRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.autofill::LegalMessageLine::Link"*, i64, i64, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %2 to i32
  %7 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %0, i64 0, i32 0, i32 0
  store i32 %5, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %0, i64 0, i32 0, i32 1
  store i32 %6, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %9, i8* %17, i64 %21) #9
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16LegalMessageLine4LinkD2Ev(%"struct.autofill::LegalMessageLine::Link"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %2) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16LegalMessageLineC2Ev(%"class.autofill::LegalMessageLine"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill16LegalMessageLineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.4"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16LegalMessageLineC2ERKS0_(%"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill16LegalMessageLineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string.4"* %4 to i8*
  %12 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #9
  br label %188

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string.4"* %4 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string.4"* %4 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #10
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #10
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #11
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::basic_string.4"* %4 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !12

188:                                              ; preds = %153, %158, %133, %10
  %189 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2
  %190 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %1, i64 0, i32 2
  %191 = bitcast %"class.std::__1::vector"* %189 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #9
  %192 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %1, i64 0, i32 2, i32 0, i32 1
  %193 = bitcast %"struct.autofill::LegalMessageLine::Link"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.std::__1::vector"* %190 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %194, %196
  %198 = ashr exact i64 %197, 7
  %199 = icmp eq i64 %197, 0
  br i1 %199, label %233, label %200

200:                                              ; preds = %188
  %201 = icmp ugt i64 %198, 144115188075855871
  br i1 %201, label %202, label %204

202:                                              ; preds = %200
  %203 = bitcast %"class.std::__1::vector"* %189 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %203) #10
  unreachable

204:                                              ; preds = %200
  %205 = tail call i8* @_Znwm(i64 %197) #11
  %206 = bitcast i8* %205 to %"struct.autofill::LegalMessageLine::Link"*
  %207 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2, i32 0, i32 1
  %208 = bitcast %"struct.autofill::LegalMessageLine::Link"** %207 to i8**
  store i8* %205, i8** %208, align 8
  %209 = bitcast %"class.std::__1::vector"* %189 to i8**
  store i8* %205, i8** %209, align 8
  %210 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %206, i64 %198
  %211 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"struct.autofill::LegalMessageLine::Link"* %210, %"struct.autofill::LegalMessageLine::Link"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %190, i64 0, i32 0, i32 0
  %213 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %212, align 8
  %214 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %192, align 8
  %215 = bitcast %"struct.autofill::LegalMessageLine::Link"** %207 to i64*
  %216 = ptrtoint i8* %205 to i64
  %217 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %213, %214
  br i1 %217, label %231, label %218

218:                                              ; preds = %204, %218
  %219 = phi %"struct.autofill::LegalMessageLine::Link"* [ %227, %218 ], [ %206, %204 ]
  %220 = phi %"struct.autofill::LegalMessageLine::Link"* [ %226, %218 ], [ %213, %204 ]
  %221 = bitcast %"struct.autofill::LegalMessageLine::Link"* %220 to i64*
  %222 = bitcast %"struct.autofill::LegalMessageLine::Link"* %219 to i64*
  %223 = load i64, i64* %221, align 8
  store i64 %223, i64* %222, align 8
  %224 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %219, i64 0, i32 1
  %225 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %220, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %224, %class.GURL* dereferenceable(120) %225) #9
  %226 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %220, i64 1
  %227 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %219, i64 1
  %228 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %226, %214
  br i1 %228, label %229, label %218

229:                                              ; preds = %218
  %230 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %227 to i64
  br label %231

231:                                              ; preds = %229, %204
  %232 = phi i64 [ %216, %204 ], [ %230, %229 ]
  store i64 %232, i64* %215, align 8
  br label %233

233:                                              ; preds = %188, %231
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16LegalMessageLineD2Ev(%"class.autofill::LegalMessageLine"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill16LegalMessageLineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %4, align 8
  %6 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.autofill::LegalMessageLine::Link"* %5 to i8*
  %9 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %9, align 8
  %11 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %10, %5
  br i1 %11, label %20, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.autofill::LegalMessageLine::Link"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %13, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %15) #9
  %16 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %14, %5
  br i1 %16, label %17, label %12

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::vector"* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %7
  %21 = phi i8* [ %19, %17 ], [ %8, %7 ]
  store %"struct.autofill::LegalMessageLine::Link"* %5, %"struct.autofill::LegalMessageLine::Link"** %9, align 8
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %1, %20
  %23 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string.4"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string.4"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %22, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16LegalMessageLineD0Ev(%"class.autofill::LegalMessageLine"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill16LegalMessageLineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %4, align 8
  %6 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.autofill::LegalMessageLine::Link"* %5 to i8*
  %9 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %9, align 8
  %11 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %10, %5
  br i1 %11, label %20, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.autofill::LegalMessageLine::Link"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %13, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %15) #9
  %16 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %14, %5
  br i1 %16, label %17, label %12

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::vector"* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %7
  %21 = phi i8* [ %19, %17 ], [ %8, %7 ]
  store %"struct.autofill::LegalMessageLine::Link"* %5, %"struct.autofill::LegalMessageLine::Link"** %9, align 8
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %20, %1
  %23 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string.4"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string.4"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %22, %28
  %32 = bitcast %"class.autofill::LegalMessageLine"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill16LegalMessageLine5ParseERKN4base5ValueEPNSt3__16vectorIS0_NS5_9allocatorIS0_EEEEb(%"class.base::Value"* dereferenceable(32), %"class.std::__1::vector.47"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.47", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.autofill::LegalMessageLine", align 8
  %8 = tail call %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, i8 zeroext 7) #9
  %9 = icmp eq %"class.base::Value"* %8, null
  br i1 %9, label %165, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::vector.47"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %4, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #9
  %15 = tail call %"class.std::__1::vector.39"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %8) #9
  %16 = icmp eq %"class.std::__1::vector.39"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %15, i64 0, i32 0, i32 1
  %19 = bitcast %"class.base::Value"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.39"* %15 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 5
  br label %25

25:                                               ; preds = %10, %17
  %26 = phi i64 [ %24, %17 ], [ 0, %10 ]
  call void @_ZNSt3__16vectorIN8autofill16LegalMessageLineENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.47"* nonnull %4, i64 %26)
  %27 = call %"class.std::__1::vector.39"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %8) #9
  %28 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %30 = icmp eq %"class.std::__1::vector.39"* %27, null
  %31 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  br i1 %30, label %41, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %27, i64 0, i32 0, i32 0
  %34 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %27, i64 0, i32 0, i32 1
  %36 = bitcast %"class.base::Value"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = ptrtoint %"class.base::Value"* %34 to i64
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 5
  br label %41

41:                                               ; preds = %25, %32
  %42 = phi %"class.base::Value"* [ %34, %32 ], [ null, %25 ]
  %43 = phi i64 [ %40, %32 ], [ 0, %25 ]
  %44 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %42, i64 %43
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %42, %"class.base::Value"* %42, %"class.base::Value"* %44) #9
  %45 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %47 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  br i1 %30, label %58, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %27, i64 0, i32 0, i32 0
  %50 = load %"class.base::Value"*, %"class.base::Value"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %27, i64 0, i32 0, i32 1
  %52 = bitcast %"class.base::Value"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = ptrtoint %"class.base::Value"* %50 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 5
  %57 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %50, i64 %56
  br label %58

58:                                               ; preds = %41, %48
  %59 = phi %"class.base::Value"* [ %50, %48 ], [ null, %41 ]
  %60 = phi %"class.base::Value"* [ %57, %48 ], [ null, %41 ]
  %61 = phi i64 [ %56, %48 ], [ 0, %41 ]
  %62 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 %61
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::Value"* %59, %"class.base::Value"* %60, %"class.base::Value"* %62) #9
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #9
  %63 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %64 = load %"class.base::Value"*, %"class.base::Value"** %46, align 8
  %65 = icmp eq %"class.base::Value"* %63, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  %67 = bitcast %"class.autofill::LegalMessageLine"** %13 to i64*
  br label %127

68:                                               ; preds = %58
  %69 = bitcast %"class.autofill::LegalMessageLine"* %7 to i8*
  %70 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %7, i64 0, i32 0
  %71 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %7, i64 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string.4"* %71 to i8*
  %73 = bitcast %"class.autofill::LegalMessageLine"** %13 to i64*
  %74 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %7, i64 0, i32 2
  %75 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %74, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %7, i64 0, i32 2, i32 0, i32 1
  %77 = bitcast %"class.std::__1::vector"* %74 to i8**
  %78 = bitcast %"class.std::__1::basic_string.4"* %71 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %78, i64 0, i32 1, i32 1
  %80 = bitcast %"class.std::__1::basic_string.4"* %71 to i8**
  br label %81

81:                                               ; preds = %68, %120
  %82 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %69) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill16LegalMessageLineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 48, i1 false) #9
  %83 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %13, align 8
  %84 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %14, align 8
  %85 = icmp ult %"class.autofill::LegalMessageLine"* %83, %84
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  call void @_ZN8autofill16LegalMessageLineC2ERKS0_(%"class.autofill::LegalMessageLine"* %83, %"class.autofill::LegalMessageLine"* nonnull dereferenceable(56) %7) #9
  %87 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %83, i64 1
  %88 = ptrtoint %"class.autofill::LegalMessageLine"* %87 to i64
  store i64 %88, i64* %73, align 8
  br label %90

89:                                               ; preds = %81
  call void @_ZNSt3__16vectorIN8autofill16LegalMessageLineENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.47"* nonnull %4, %"class.autofill::LegalMessageLine"* nonnull dereferenceable(56) %7) #9
  br label %90

90:                                               ; preds = %86, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill16LegalMessageLineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %91 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %75, align 8
  %92 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %90
  %94 = bitcast %"struct.autofill::LegalMessageLine::Link"* %91 to i8*
  %95 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %76, align 8
  %96 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %95, %91
  br i1 %96, label %104, label %97

97:                                               ; preds = %93, %97
  %98 = phi %"struct.autofill::LegalMessageLine::Link"* [ %99, %97 ], [ %95, %93 ]
  %99 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %98, i64 -1
  %100 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %98, i64 -1, i32 1
  call void @_ZN4GURLD1Ev(%class.GURL* %100) #9
  %101 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %99, %91
  br i1 %101, label %102, label %97

102:                                              ; preds = %97
  %103 = load i8*, i8** %77, align 8
  br label %104

104:                                              ; preds = %102, %93
  %105 = phi i8* [ %103, %102 ], [ %94, %93 ]
  store %"struct.autofill::LegalMessageLine::Link"* %91, %"struct.autofill::LegalMessageLine::Link"** %76, align 8
  call void @_ZdlPv(i8* %105) #11
  br label %106

106:                                              ; preds = %104, %90
  %107 = load i8, i8* %79, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %110) #11
  br label %111

111:                                              ; preds = %106, %109
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %69) #9
  %112 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = trunc i64 %113 to i8
  %115 = icmp eq i8 %114, 6
  br i1 %115, label %116, label %125

116:                                              ; preds = %111
  %117 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %13, align 8
  %118 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %117, i64 -1
  %119 = call zeroext i1 @_ZN8autofill16LegalMessageLine9ParseLineERKN4base5ValueEb(%"class.autofill::LegalMessageLine"* %118, %"class.base::Value"* dereferenceable(32) %82, i1 zeroext %2)
  br i1 %119, label %120, label %125

120:                                              ; preds = %116
  %121 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %5)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #9
  %122 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %123 = load %"class.base::Value"*, %"class.base::Value"** %46, align 8
  %124 = icmp eq %"class.base::Value"* %122, %123
  br i1 %124, label %127, label %81

125:                                              ; preds = %111, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  %126 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %12, align 8
  br label %143

127:                                              ; preds = %120, %66
  %128 = phi i64* [ %67, %66 ], [ %73, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  %129 = bitcast %"class.std::__1::vector.47"* %1 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.std::__1::vector.47"* %4 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  store i64 %130, i64* %131, align 8
  %133 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %1, i64 0, i32 0, i32 1
  %134 = bitcast %"class.autofill::LegalMessageLine"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = load i64, i64* %128, align 8
  store i64 %136, i64* %134, align 8
  store i64 %135, i64* %128, align 8
  %137 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %138 = bitcast %"class.autofill::LegalMessageLine"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.autofill::LegalMessageLine"** %14 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %138, align 8
  store i64 %139, i64* %140, align 8
  %142 = inttoptr i64 %130 to %"class.autofill::LegalMessageLine"*
  br label %143

143:                                              ; preds = %125, %127
  %144 = phi %"class.autofill::LegalMessageLine"* [ %142, %127 ], [ %126, %125 ]
  %145 = phi i32 [ 0, %127 ], [ 1, %125 ]
  %146 = icmp eq %"class.autofill::LegalMessageLine"* %144, null
  br i1 %146, label %163, label %147

147:                                              ; preds = %143
  %148 = bitcast %"class.autofill::LegalMessageLine"* %144 to i8*
  %149 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %13, align 8
  %150 = icmp eq %"class.autofill::LegalMessageLine"* %149, %144
  br i1 %150, label %161, label %151

151:                                              ; preds = %147, %151
  %152 = phi %"class.autofill::LegalMessageLine"* [ %153, %151 ], [ %149, %147 ]
  %153 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %152, i64 -1
  %154 = bitcast %"class.autofill::LegalMessageLine"* %153 to void (%"class.autofill::LegalMessageLine"*)***
  %155 = load void (%"class.autofill::LegalMessageLine"*)**, void (%"class.autofill::LegalMessageLine"*)*** %154, align 8
  %156 = load void (%"class.autofill::LegalMessageLine"*)*, void (%"class.autofill::LegalMessageLine"*)** %155, align 8
  call void %156(%"class.autofill::LegalMessageLine"* %153) #9
  %157 = icmp eq %"class.autofill::LegalMessageLine"* %153, %144
  br i1 %157, label %158, label %151

158:                                              ; preds = %151
  %159 = bitcast %"class.std::__1::vector.47"* %4 to i8**
  %160 = load i8*, i8** %159, align 8
  br label %161

161:                                              ; preds = %158, %147
  %162 = phi i8* [ %160, %158 ], [ %148, %147 ]
  store %"class.autofill::LegalMessageLine"* %144, %"class.autofill::LegalMessageLine"** %13, align 8
  call void @_ZdlPv(i8* %162) #11
  br label %163

163:                                              ; preds = %143, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %164 = icmp eq i32 %145, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %3, %163
  br label %166

166:                                              ; preds = %163, %165
  %167 = phi i1 [ true, %165 ], [ false, %163 ]
  ret i1 %167
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"*, i8*, i64, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill16LegalMessageLineENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.47"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.autofill::LegalMessageLine"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.47"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.autofill::LegalMessageLine"*
  br i1 %10, label %12, label %58

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.autofill::LegalMessageLine"** %13 to i64*
  %15 = icmp ugt i64 %1, 329406144173384850
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #10
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 56
  %21 = mul i64 %1, 56
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.autofill::LegalMessageLine"*
  %24 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %23, i64 %20
  %25 = ptrtoint %"class.autofill::LegalMessageLine"* %24 to i64
  %26 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %23, i64 %1
  %27 = ptrtoint %"class.autofill::LegalMessageLine"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.autofill::LegalMessageLine"*
  %29 = icmp eq %"class.autofill::LegalMessageLine"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.autofill::LegalMessageLine"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.autofill::LegalMessageLine"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %31, i64 -1
  %34 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %32, i64 -1
  tail call void @_ZN8autofill16LegalMessageLineC2ERKS0_(%"class.autofill::LegalMessageLine"* %33, %"class.autofill::LegalMessageLine"* dereferenceable(56) %34) #9
  %35 = icmp eq %"class.autofill::LegalMessageLine"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.autofill::LegalMessageLine"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.autofill::LegalMessageLine"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.autofill::LegalMessageLine"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.autofill::LegalMessageLine"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.autofill::LegalMessageLine"* %43, %42
  br i1 %46, label %54, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.autofill::LegalMessageLine"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %48, i64 -1
  %50 = bitcast %"class.autofill::LegalMessageLine"* %49 to void (%"class.autofill::LegalMessageLine"*)***
  %51 = load void (%"class.autofill::LegalMessageLine"*)**, void (%"class.autofill::LegalMessageLine"*)*** %50, align 8
  %52 = load void (%"class.autofill::LegalMessageLine"*)*, void (%"class.autofill::LegalMessageLine"*)** %51, align 8
  tail call void %52(%"class.autofill::LegalMessageLine"* %49) #9
  %53 = icmp eq %"class.autofill::LegalMessageLine"* %49, %42
  br i1 %53, label %54, label %47

54:                                               ; preds = %47, %41
  %55 = icmp eq i64 %45, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %56, %54, %2
  ret void
}

declare %"class.std::__1::vector.39"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i8* %16, i8* %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill16LegalMessageLine9ParseLineERKN4base5ValueEb(%"class.autofill::LegalMessageLine"*, %"class.base::Value"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string.4", align 8
  %5 = alloca %"class.std::__1::basic_string.4", align 8
  %6 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %7 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %8 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %9 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %10 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %11 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %12 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %13 = alloca %"class.std::__1::basic_string.4", align 8
  %14 = alloca %"class.std::__1::vector.54", align 8
  %15 = alloca %"class.base::CheckedContiguousIterator", align 8
  %16 = alloca %"class.base::CheckedContiguousIterator", align 8
  %17 = alloca %"class.std::__1::basic_string.4", align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.std::__1::basic_string.4", align 8
  %21 = alloca %"class.std::__1::vector.62", align 8
  %22 = bitcast %"class.std::__1::vector.54"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %14, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %14, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #9
  %26 = tail call %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18, i8 zeroext 7) #9
  %27 = icmp eq %"class.base::Value"* %26, null
  br i1 %27, label %162, label %28

28:                                               ; preds = %3
  %29 = tail call %"class.std::__1::vector.39"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %26) #9
  %30 = icmp eq %"class.std::__1::vector.39"* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.54"* nonnull %14, i64 0)
  br label %44

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %29, i64 0, i32 0, i32 1
  %34 = bitcast %"class.base::Value"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.39"* %29 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 5
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.54"* nonnull %14, i64 %39)
  %40 = load i64, i64* %34, align 8
  %41 = load i64, i64* %36, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 5
  br label %44

44:                                               ; preds = %31, %32
  %45 = phi i64 [ %43, %32 ], [ 0, %31 ]
  %46 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorIN8autofill16LegalMessageLine4LinkENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector"* %46, i64 %45)
  %47 = bitcast %"class.base::CheckedContiguousIterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %15, i64 0, i32 1
  %49 = bitcast %"class.base::CheckedContiguousIterator"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  br i1 %30, label %59, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %29, i64 0, i32 0, i32 0
  %52 = load %"class.base::Value"*, %"class.base::Value"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %29, i64 0, i32 0, i32 1
  %54 = bitcast %"class.base::Value"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint %"class.base::Value"* %52 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  br label %59

59:                                               ; preds = %44, %50
  %60 = phi %"class.base::Value"* [ %52, %50 ], [ null, %44 ]
  %61 = phi i64 [ %58, %50 ], [ 0, %44 ]
  %62 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %60, i64 %61
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %15, %"class.base::Value"* %60, %"class.base::Value"* %60, %"class.base::Value"* %62) #9
  %63 = bitcast %"class.base::CheckedContiguousIterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #9
  %64 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %16, i64 0, i32 1
  %65 = bitcast %"class.base::CheckedContiguousIterator"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 24, i1 false)
  br i1 %30, label %76, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %29, i64 0, i32 0, i32 0
  %68 = load %"class.base::Value"*, %"class.base::Value"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %29, i64 0, i32 0, i32 1
  %70 = bitcast %"class.base::Value"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = ptrtoint %"class.base::Value"* %68 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 5
  %75 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %68, i64 %74
  br label %76

76:                                               ; preds = %59, %66
  %77 = phi %"class.base::Value"* [ %68, %66 ], [ null, %59 ]
  %78 = phi %"class.base::Value"* [ %75, %66 ], [ null, %59 ]
  %79 = phi i64 [ %74, %66 ], [ 0, %59 ]
  %80 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %77, i64 %79
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %16, %"class.base::Value"* %77, %"class.base::Value"* %78, %"class.base::Value"* %80) #9
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %15, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %16) #9
  %81 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %82 = load %"class.base::Value"*, %"class.base::Value"** %64, align 8
  %83 = icmp eq %"class.base::Value"* %81, %82
  br i1 %83, label %160, label %84

84:                                               ; preds = %76
  %85 = bitcast %"class.std::__1::basic_string.4"* %17 to i8*
  %86 = bitcast %"class.std::__1::basic_string.4"** %24 to i64*
  %87 = bitcast %"class.std::__1::basic_string.4"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = bitcast %"class.std::__1::basic_string.4"* %17 to i8**
  %90 = bitcast i32* %18 to i8*
  %91 = bitcast i32* %19 to i8*
  %92 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2, i32 0, i32 1
  %93 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast %"struct.autofill::LegalMessageLine::Link"** %92 to i64*
  br label %95

95:                                               ; preds = %84, %155
  %96 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %15)
  %97 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = trunc i64 %98 to i8
  %100 = icmp eq i8 %99, 6
  br i1 %100, label %101, label %161

101:                                              ; preds = %95
  %102 = call %"class.std::__1::basic_string"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %96, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12) #9
  %103 = icmp eq %"class.std::__1::basic_string"* %102, null
  br i1 %103, label %161, label %104

104:                                              ; preds = %101
  %105 = call %"class.std::__1::basic_string"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #9
  %106 = icmp eq %"class.std::__1::basic_string"* %105, null
  br i1 %106, label %161, label %107

107:                                              ; preds = %104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #9
  %108 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = bitcast %"class.std::__1::basic_string"* %102 to i8*
  %115 = select i1 %111, i8* %113, i8* %114
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = zext i8 %110 to i64
  %119 = select i1 %111, i64 %117, i64 %118
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %17, i8* %115, i64 %119) #9
  %120 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %24, align 8
  %121 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %25, align 8
  %122 = icmp ult %"class.std::__1::basic_string.4"* %120, %121
  br i1 %122, label %123, label %127

123:                                              ; preds = %107
  %124 = bitcast %"class.std::__1::basic_string.4"* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* nonnull align 8 %85, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #9
  %125 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %120, i64 1
  %126 = ptrtoint %"class.std::__1::basic_string.4"* %125 to i64
  store i64 %126, i64* %86, align 8
  br label %132

127:                                              ; preds = %107
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.54"* nonnull %14, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %17) #9
  %128 = load i8, i8* %88, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %131) #11
  br label %132

132:                                              ; preds = %123, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #9
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #9
  store i32 0, i32* %18, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #9
  store i32 0, i32* %19, align 4
  %133 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %92, align 8
  %134 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %93, align 8
  %135 = icmp ult %"struct.autofill::LegalMessageLine::Link"* %133, %134
  br i1 %135, label %136, label %154

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %133, i64 0, i32 0, i32 0
  store i32 0, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %133, i64 0, i32 0, i32 1
  store i32 0, i32* %138, align 4
  %139 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %133, i64 0, i32 1
  %140 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %147 = select i1 %143, i8* %145, i8* %146
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = zext i8 %142 to i64
  %151 = select i1 %143, i64 %149, i64 %150
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %139, i8* %147, i64 %151) #9
  %152 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %133, i64 1
  %153 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %152 to i64
  store i64 %153, i64* %94, align 8
  br label %155

154:                                              ; preds = %132
  call void @_ZNSt3__16vectorIN8autofill16LegalMessageLine4LinkENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJiiRKNS_12basic_stringIcNS_11char_traitsIcEENS4_IcEEEEEEEvDpOT_(%"class.std::__1::vector"* %46, i32* nonnull dereferenceable(4) %18, i32* nonnull dereferenceable(4) %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %105) #9
  br label %155

155:                                              ; preds = %136, %154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #9
  %156 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %15)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %15, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %16) #9
  %157 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %158 = load %"class.base::Value"*, %"class.base::Value"** %64, align 8
  %159 = icmp eq %"class.base::Value"* %157, %158
  br i1 %159, label %160, label %95

160:                                              ; preds = %155, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #9
  br label %162

161:                                              ; preds = %104, %101, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #9
  br label %350

162:                                              ; preds = %160, %3
  %163 = call %"class.std::__1::basic_string"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8) #9
  %164 = icmp eq %"class.std::__1::basic_string"* %163, null
  br i1 %164, label %353, label %165

165:                                              ; preds = %162
  %166 = bitcast %"class.std::__1::basic_string.4"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #9
  %167 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = bitcast %"class.std::__1::basic_string"* %163 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = bitcast %"class.std::__1::basic_string.4"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 24, i1 false)
  %172 = load i8, i8* %170, align 1
  %173 = icmp slt i8 %172, 0
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = bitcast %"class.std::__1::basic_string"* %163 to i8*
  %177 = select i1 %173, i8* %175, i8* %176
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = zext i8 %172 to i64
  %181 = select i1 %173, i64 %179, i64 %180
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %20, i8* %177, i64 %181) #9
  %182 = bitcast %"class.std::__1::basic_string.4"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %2, label %185, label %183

183:                                              ; preds = %165
  %184 = bitcast %"class.std::__1::basic_string.4"* %20 to i16*
  br label %196

185:                                              ; preds = %165
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %182, i64 0, i32 1, i32 1
  %187 = load i8, i8* %186, align 1
  %188 = load i16*, i16** %167, align 8
  %189 = bitcast %"class.std::__1::basic_string.4"* %20 to i16*
  %190 = load i64, i64* %168, align 8
  %191 = zext i8 %187 to i64
  %192 = icmp slt i8 %187, 0
  %193 = select i1 %192, i16* %188, i16* %189
  %194 = select i1 %192, i64 %190, i64 %191
  %195 = call zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %193, i64 %194, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.5, i64 0, i64 0), i64 1, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.6, i64 0, i64 0), i64 2, %"class.std::__1::basic_string.4"* nonnull %20) #9
  br label %196

196:                                              ; preds = %183, %185
  %197 = phi i16* [ %184, %183 ], [ %189, %185 ]
  %198 = bitcast %"class.std::__1::vector.62"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #9
  %199 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %21, i64 0, i32 0, i32 0
  %200 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %21, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %198, i8 0, i64 24, i1 false) #9
  %201 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 1
  %202 = bitcast %"class.std::__1::basic_string.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #9
  %203 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 0, i64 24, i1 false) #9
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %182, i64 0, i32 1, i32 1
  %206 = load i8, i8* %205, align 1
  %207 = load i16*, i16** %167, align 8
  %208 = load i64, i64* %168, align 8
  %209 = zext i8 %206 to i64
  %210 = icmp slt i8 %206, 0
  %211 = select i1 %210, i16* %207, i16* %197
  %212 = select i1 %210, i64 %208, i64 %209
  %213 = call zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %211, i64 %212, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.15, i64 0, i64 0), i64 1, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.16, i64 0, i64 0), i64 2, %"class.std::__1::basic_string.4"* nonnull %4) #9
  %214 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #9
  %215 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %217 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %217, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %214, i8 -86, i64 24, i1 false) #9
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  %221 = load i16*, i16** %203, align 8
  %222 = bitcast %"class.std::__1::basic_string.4"* %4 to i16*
  %223 = select i1 %220, i16* %221, i16* %222
  %224 = load i64, i64* %204, align 8
  %225 = zext i8 %219 to i64
  %226 = select i1 %220, i64 %224, i64 %225
  %227 = bitcast %"class.base::i18n::internal::MessageArg"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #9
  call void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0)) #9
  %228 = bitcast %"class.base::i18n::internal::MessageArg"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #9
  call void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0)) #9
  %229 = bitcast %"class.base::i18n::internal::MessageArg"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #9
  call void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"* nonnull %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #9
  %230 = bitcast %"class.base::i18n::internal::MessageArg"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #9
  call void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #9
  %231 = bitcast %"class.base::i18n::internal::MessageArg"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #9
  call void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"* nonnull %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #9
  %232 = bitcast %"class.base::i18n::internal::MessageArg"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #9
  call void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"* nonnull %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0)) #9
  %233 = bitcast %"class.base::i18n::internal::MessageArg"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #9
  call void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"* nonnull %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0)) #9
  call void @_ZN4base4i18n16MessageFormatter22FormatWithNumberedArgsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS0_8internal10MessageArgESA_SA_SA_SA_SA_SA_(%"class.std::__1::basic_string.4"* nonnull sret %5, i16* %223, i64 %226, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %6, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %7, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %8, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %9, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %10, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %11, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %12) #9
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #9
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #9
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #9
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #9
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #9
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #9
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #9
  %234 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %234, i64 0, i32 1, i32 1
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  %238 = load i64, i64* %216, align 8
  %239 = zext i8 %236 to i64
  %240 = select i1 %237, i64 %238, i64 %239
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %196
  %243 = load i8, i8* %205, align 1
  %244 = icmp slt i8 %243, 0
  %245 = load i64, i64* %168, align 8
  %246 = zext i8 %243 to i64
  %247 = select i1 %244, i64 %245, i64 %246
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %277

249:                                              ; preds = %242, %196
  %250 = bitcast %"class.std::__1::basic_string.4"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #9
  %251 = load i16*, i16** %215, align 8
  %252 = bitcast %"class.std::__1::basic_string.4"* %5 to i16*
  %253 = select i1 %237, i16* %251, i16* %252
  call void @_ZN4base25ReplaceStringPlaceholdersENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS1_6vectorINS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEENS7_IS9_EEEEPNS5_ImNS7_ImEEEE(%"class.std::__1::basic_string.4"* nonnull sret %13, i16* %253, i64 %240, %"class.std::__1::vector.54"* nonnull dereferenceable(24) %14, %"class.std::__1::vector.62"* nonnull %21) #9
  %254 = bitcast %"class.std::__1::basic_string.4"* %201 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %254, i64 0, i32 1, i32 1
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %249
  %259 = bitcast %"class.std::__1::basic_string.4"* %201 to i8**
  %260 = load i8*, i8** %259, align 8
  call void @_ZdlPv(i8* %260) #11
  br label %261

261:                                              ; preds = %258, %249
  %262 = bitcast %"class.std::__1::basic_string.4"* %201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* nonnull align 8 %250, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #9
  %263 = bitcast i64** %200 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"class.std::__1::vector.62"* %21 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = sub i64 %264, %266
  %268 = ashr exact i64 %267, 3
  %269 = bitcast %"class.std::__1::basic_string.4"** %24 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.std::__1::vector.54"* %14 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = sub i64 %270, %272
  %274 = sdiv exact i64 %273, 24
  %275 = icmp eq i64 %268, %274
  %276 = load i8, i8* %235, align 1
  br label %277

277:                                              ; preds = %261, %242
  %278 = phi i8 [ %276, %261 ], [ %236, %242 ]
  %279 = phi i1 [ %275, %261 ], [ false, %242 ]
  %280 = icmp slt i8 %278, 0
  br i1 %280, label %281, label %284

281:                                              ; preds = %277
  %282 = bitcast %"class.std::__1::basic_string.4"* %5 to i8**
  %283 = load i8*, i8** %282, align 8
  call void @_ZdlPv(i8* %283) #11
  br label %284

284:                                              ; preds = %281, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #9
  %285 = load i8, i8* %218, align 1
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %290

287:                                              ; preds = %284
  %288 = bitcast %"class.std::__1::basic_string.4"* %4 to i8**
  %289 = load i8*, i8** %288, align 8
  call void @_ZdlPv(i8* %289) #11
  br label %290

290:                                              ; preds = %284, %287
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #9
  br i1 %279, label %291, label %332

291:                                              ; preds = %290
  %292 = bitcast i64** %200 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast %"class.std::__1::vector.62"* %21 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = icmp eq i64 %293, %295
  %297 = inttoptr i64 %295 to i64*
  br i1 %296, label %336, label %298

298:                                              ; preds = %291
  %299 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %0, i64 0, i32 2, i32 0, i32 0
  br label %300

300:                                              ; preds = %298, %316
  %301 = phi i64* [ %297, %298 ], [ %331, %316 ]
  %302 = phi i64 [ 0, %298 ], [ %325, %316 ]
  %303 = getelementptr inbounds i64, i64* %301, i64 %302
  %304 = load i64, i64* %303, align 8
  %305 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %23, align 8
  %306 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %305, i64 %302
  %307 = bitcast %"class.std::__1::basic_string.4"* %306 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %307, i64 0, i32 1, i32 1
  %309 = load i8, i8* %308, align 1
  %310 = icmp slt i8 %309, 0
  br i1 %310, label %311, label %314

311:                                              ; preds = %300
  %312 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %305, i64 %302, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %313 = load i64, i64* %312, align 8
  br label %316

314:                                              ; preds = %300
  %315 = zext i8 %309 to i64
  br label %316

316:                                              ; preds = %311, %314
  %317 = phi i64 [ %313, %311 ], [ %315, %314 ]
  %318 = add i64 %317, %304
  %319 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %299, align 8
  %320 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %319, i64 %302
  %321 = bitcast %"struct.autofill::LegalMessageLine::Link"* %320 to i64*
  %322 = shl i64 %318, 32
  %323 = and i64 %304, 4294967295
  %324 = or i64 %322, %323
  store i64 %324, i64* %321, align 8
  %325 = add nuw i64 %302, 1
  %326 = load i64, i64* %292, align 8
  %327 = load i64, i64* %294, align 8
  %328 = sub i64 %326, %327
  %329 = ashr exact i64 %328, 3
  %330 = icmp ult i64 %325, %329
  %331 = inttoptr i64 %327 to i64*
  br i1 %330, label %300, label %334

332:                                              ; preds = %290
  %333 = load i64*, i64** %199, align 8
  br label %336

334:                                              ; preds = %316
  %335 = inttoptr i64 %327 to i64*
  br label %336

336:                                              ; preds = %334, %291, %332
  %337 = phi i64* [ %333, %332 ], [ %297, %291 ], [ %335, %334 ]
  %338 = phi i1 [ false, %332 ], [ true, %291 ], [ true, %334 ]
  %339 = icmp eq i64* %337, null
  br i1 %339, label %344, label %340

340:                                              ; preds = %336
  %341 = ptrtoint i64* %337 to i64
  %342 = bitcast i64** %200 to i64*
  store i64 %341, i64* %342, align 8
  %343 = bitcast i64* %337 to i8*
  call void @_ZdlPv(i8* %343) #11
  br label %344

344:                                              ; preds = %336, %340
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #9
  %345 = load i8, i8* %205, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %344
  %348 = bitcast %"class.std::__1::basic_string.4"* %20 to i8**
  %349 = load i8*, i8** %348, align 8
  call void @_ZdlPv(i8* %349) #11
  br label %350

350:                                              ; preds = %347, %344, %161
  %351 = phi i8* [ %47, %161 ], [ %166, %344 ], [ %166, %347 ]
  %352 = phi i1 [ false, %161 ], [ %338, %344 ], [ %338, %347 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %351) #9
  br label %353

353:                                              ; preds = %350, %162
  %354 = phi i1 [ false, %162 ], [ %352, %350 ]
  %355 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %23, align 8
  %356 = icmp eq %"class.std::__1::basic_string.4"* %355, null
  br i1 %356, label %378, label %357

357:                                              ; preds = %353
  %358 = bitcast %"class.std::__1::basic_string.4"* %355 to i8*
  %359 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %24, align 8
  %360 = icmp eq %"class.std::__1::basic_string.4"* %359, %355
  br i1 %360, label %376, label %361

361:                                              ; preds = %357, %371
  %362 = phi %"class.std::__1::basic_string.4"* [ %363, %371 ], [ %359, %357 ]
  %363 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %362, i64 -1
  %364 = bitcast %"class.std::__1::basic_string.4"* %363 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %365 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %364, i64 0, i32 1, i32 1
  %366 = load i8, i8* %365, align 1
  %367 = icmp slt i8 %366, 0
  br i1 %367, label %368, label %371

368:                                              ; preds = %361
  %369 = bitcast %"class.std::__1::basic_string.4"* %363 to i8**
  %370 = load i8*, i8** %369, align 8
  call void @_ZdlPv(i8* %370) #11
  br label %371

371:                                              ; preds = %368, %361
  %372 = icmp eq %"class.std::__1::basic_string.4"* %363, %355
  br i1 %372, label %373, label %361

373:                                              ; preds = %371
  %374 = bitcast %"class.std::__1::vector.54"* %14 to i8**
  %375 = load i8*, i8** %374, align 8
  br label %376

376:                                              ; preds = %373, %357
  %377 = phi i8* [ %375, %373 ], [ %358, %357 ]
  store %"class.std::__1::basic_string.4"* %355, %"class.std::__1::basic_string.4"** %24, align 8
  call void @_ZdlPv(i8* %377) #11
  br label %378

378:                                              ; preds = %353, %376
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  ret i1 %354
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i8* %16, i8* %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.54"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string.4"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string.4"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string.4"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #10
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string.4"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string.4"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string.4"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string.4"*
  %29 = icmp eq %"class.std::__1::basic_string.4"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string.4"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string.4"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string.4"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string.4"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #9
  %38 = icmp eq %"class.std::__1::basic_string.4"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string.4"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string.4"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string.4"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string.4"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string.4"* %47 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::basic_string.4"* %47 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string.4"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #11
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill16LegalMessageLine4LinkENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.autofill::LegalMessageLine::Link"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 7
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.autofill::LegalMessageLine::Link"*
  br i1 %10, label %12, label %61

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.autofill::LegalMessageLine::Link"** %13 to i64*
  %15 = icmp ugt i64 %1, 144115188075855871
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #10
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 7
  %21 = shl i64 %1, 7
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"struct.autofill::LegalMessageLine::Link"*
  %24 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %23, i64 %20
  %25 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %24 to i64
  %26 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %23, i64 %1
  %27 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.autofill::LegalMessageLine::Link"*
  %29 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %28, %11
  br i1 %29, label %46, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.autofill::LegalMessageLine::Link"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"struct.autofill::LegalMessageLine::Link"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %32, i64 -1
  %35 = bitcast %"struct.autofill::LegalMessageLine::Link"* %34 to i64*
  %36 = bitcast %"struct.autofill::LegalMessageLine::Link"* %33 to i64*
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %31, i64 -1, i32 1
  %39 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %32, i64 -1, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %39) #9
  %40 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %34, %11
  br i1 %40, label %41, label %30

41:                                               ; preds = %30
  %42 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %33 to i64
  %43 = load i64, i64* %6, align 8
  %44 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %13, align 8
  %45 = inttoptr i64 %43 to %"struct.autofill::LegalMessageLine::Link"*
  br label %46

46:                                               ; preds = %17, %41
  %47 = phi %"struct.autofill::LegalMessageLine::Link"* [ %45, %41 ], [ %28, %17 ]
  %48 = phi %"struct.autofill::LegalMessageLine::Link"* [ %44, %41 ], [ %11, %17 ]
  %49 = phi i64 [ %42, %41 ], [ %25, %17 ]
  %50 = phi i64 [ %43, %41 ], [ %18, %17 ]
  store i64 %49, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %51 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %48, %47
  br i1 %51, label %57, label %52

52:                                               ; preds = %46, %52
  %53 = phi %"struct.autofill::LegalMessageLine::Link"* [ %54, %52 ], [ %48, %46 ]
  %54 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %53, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %55) #9
  %56 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %54, %47
  br i1 %56, label %57, label %52

57:                                               ; preds = %52, %46
  %58 = icmp eq i64 %50, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = inttoptr i64 %50 to i8*
  tail call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %59, %57, %2
  ret void
}

declare %"class.std::__1::basic_string"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* sret, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i16*, i64, i16*, i64, %"class.std::__1::basic_string.4"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* %29, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8* %48, i8* %50) #9
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #9
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %20, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i8* %41, i8* %43) #9
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #9
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #9
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  ret void
}

declare void @_ZN4base4i18n16MessageFormatter22FormatWithNumberedArgsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS0_8internal10MessageArgESA_SA_SA_SA_SA_SA_(%"class.std::__1::basic_string.4"* sret, i16*, i64, %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"*) unnamed_addr #2

declare void @_ZN4base25ReplaceStringPlaceholdersENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS1_6vectorINS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEENS7_IS9_EEEEPNS5_ImNS7_ImEEEE(%"class.std::__1::basic_string.4"* sret, i16*, i64, %"class.std::__1::vector.54"* dereferenceable(24), %"class.std::__1::vector.62"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill16LegalMessageLineENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.47"*, %"class.autofill::LegalMessageLine"* dereferenceable(56)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.autofill::LegalMessageLine"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.47"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.47"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.autofill::LegalMessageLine"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.autofill::LegalMessageLine"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.autofill::LegalMessageLine"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %33, i64 %9
  %35 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %33, i64 %32
  %36 = ptrtoint %"class.autofill::LegalMessageLine"* %35 to i64
  tail call void @_ZN8autofill16LegalMessageLineC2ERKS0_(%"class.autofill::LegalMessageLine"* %34, %"class.autofill::LegalMessageLine"* dereferenceable(56) %1) #9
  %37 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %34, i64 1
  %38 = ptrtoint %"class.autofill::LegalMessageLine"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %39, align 8
  %41 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %3, align 8
  %42 = icmp eq %"class.autofill::LegalMessageLine"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.autofill::LegalMessageLine"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.autofill::LegalMessageLine"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.autofill::LegalMessageLine"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %46, i64 -1
  %49 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %47, i64 -1
  tail call void @_ZN8autofill16LegalMessageLineC2ERKS0_(%"class.autofill::LegalMessageLine"* %48, %"class.autofill::LegalMessageLine"* dereferenceable(56) %49) #9
  %50 = icmp eq %"class.autofill::LegalMessageLine"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.autofill::LegalMessageLine"*, %"class.autofill::LegalMessageLine"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.autofill::LegalMessageLine"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.autofill::LegalMessageLine"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.autofill::LegalMessageLine"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.autofill::LegalMessageLine"*
  %60 = icmp eq %"class.autofill::LegalMessageLine"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.autofill::LegalMessageLine"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.autofill::LegalMessageLine", %"class.autofill::LegalMessageLine"* %62, i64 -1
  %64 = bitcast %"class.autofill::LegalMessageLine"* %63 to void (%"class.autofill::LegalMessageLine"*)***
  %65 = load void (%"class.autofill::LegalMessageLine"*)**, void (%"class.autofill::LegalMessageLine"*)*** %64, align 8
  %66 = load void (%"class.autofill::LegalMessageLine"*)*, void (%"class.autofill::LegalMessageLine"*)** %65, align 8
  tail call void %66(%"class.autofill::LegalMessageLine"* %63) #9
  %67 = icmp eq %"class.autofill::LegalMessageLine"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.54"*, %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.4"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string.4"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string.4"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string.4"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string.4"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string.4"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #9
  %39 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string.4"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %41, align 8
  %43 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string.4"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string.4"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string.4"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string.4"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string.4"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string.4"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #9
  %54 = icmp eq %"class.std::__1::basic_string.4"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string.4"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string.4"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string.4"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string.4"*
  %64 = icmp eq %"class.std::__1::basic_string.4"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string.4"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string.4"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string.4"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string.4"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill16LegalMessageLine4LinkENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJiiRKNS_12basic_stringIcNS_11char_traitsIcEENS4_IcEEEEEEEvDpOT_(%"class.std::__1::vector"*, i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.autofill::LegalMessageLine::Link"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 7
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 144115188075855871
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #10
  unreachable

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.autofill::LegalMessageLine::Link"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = ashr exact i64 %20, 7
  %22 = icmp ult i64 %21, 72057594037927935
  br i1 %22, label %23, label %31

23:                                               ; preds = %16
  %24 = ashr exact i64 %20, 6
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = icmp ugt i64 %26, 144115188075855871
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void @abort() #10
  unreachable

31:                                               ; preds = %16, %28
  %32 = phi i64 [ %26, %28 ], [ 144115188075855871, %16 ]
  %33 = shl i64 %32, 7
  %34 = tail call i8* @_Znwm(i64 %33) #11
  %35 = bitcast i8* %34 to %"struct.autofill::LegalMessageLine::Link"*
  br label %36

36:                                               ; preds = %23, %31
  %37 = phi i64 [ %32, %31 ], [ 0, %23 ]
  %38 = phi %"struct.autofill::LegalMessageLine::Link"* [ %35, %31 ], [ null, %23 ]
  %39 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %38, i64 %11
  %40 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %38, i64 %37
  %41 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %40 to i64
  %42 = load i32, i32* %1, align 4
  %43 = load i32, i32* %2, align 4
  %44 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %39, i64 0, i32 0, i32 0
  store i32 %42, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %38, i64 %11, i32 0, i32 1
  store i32 %43, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %38, i64 %11, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %54 = select i1 %50, i8* %52, i8* %53
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %49 to i64
  %58 = select i1 %50, i64 %56, i64 %57
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %46, i8* %54, i64 %58) #9
  %59 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %39, i64 1
  %60 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %62 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %61, align 8
  %63 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %5, align 8
  %64 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %63, %62
  br i1 %64, label %65, label %67

65:                                               ; preds = %36
  %66 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %62 to i64
  br label %81

67:                                               ; preds = %36, %67
  %68 = phi %"struct.autofill::LegalMessageLine::Link"* [ %70, %67 ], [ %39, %36 ]
  %69 = phi %"struct.autofill::LegalMessageLine::Link"* [ %71, %67 ], [ %63, %36 ]
  %70 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %68, i64 -1
  %71 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %69, i64 -1
  %72 = bitcast %"struct.autofill::LegalMessageLine::Link"* %71 to i64*
  %73 = bitcast %"struct.autofill::LegalMessageLine::Link"* %70 to i64*
  %74 = load i64, i64* %72, align 8
  store i64 %74, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %68, i64 -1, i32 1
  %76 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %69, i64 -1, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %75, %class.GURL* dereferenceable(120) %76) #9
  %77 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %71, %62
  br i1 %77, label %78, label %67

78:                                               ; preds = %67
  %79 = load i64, i64* %8, align 8
  %80 = load %"struct.autofill::LegalMessageLine::Link"*, %"struct.autofill::LegalMessageLine::Link"** %5, align 8
  br label %81

81:                                               ; preds = %65, %78
  %82 = phi %"struct.autofill::LegalMessageLine::Link"* [ %62, %65 ], [ %80, %78 ]
  %83 = phi %"struct.autofill::LegalMessageLine::Link"* [ %39, %65 ], [ %70, %78 ]
  %84 = phi i64 [ %66, %65 ], [ %79, %78 ]
  %85 = ptrtoint %"struct.autofill::LegalMessageLine::Link"* %83 to i64
  store i64 %85, i64* %8, align 8
  store i64 %60, i64* %6, align 8
  store i64 %41, i64* %18, align 8
  %86 = inttoptr i64 %84 to %"struct.autofill::LegalMessageLine::Link"*
  %87 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %82, %86
  br i1 %87, label %93, label %88

88:                                               ; preds = %81, %88
  %89 = phi %"struct.autofill::LegalMessageLine::Link"* [ %90, %88 ], [ %82, %81 ]
  %90 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %89, i64 -1
  %91 = getelementptr inbounds %"struct.autofill::LegalMessageLine::Link", %"struct.autofill::LegalMessageLine::Link"* %89, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %91) #9
  %92 = icmp eq %"struct.autofill::LegalMessageLine::Link"* %90, %86
  br i1 %92, label %93, label %88

93:                                               ; preds = %88, %81
  %94 = icmp eq i64 %84, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = inttoptr i64 %84 to i8*
  tail call void @_ZdlPv(i8* %96) #11
  br label %97

97:                                               ; preds = %93, %95
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
