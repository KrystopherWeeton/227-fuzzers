; ModuleID = '../../net/ssl/openssl_ssl_util.cc'
source_filename = "../../net/ssl/openssl_ssl_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [4 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.net::SslSetClearMask" = type { i64, i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.net::(anonymous namespace)::OpenSSLNetErrorLibSingleton" = type { i32 }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"struct.net::OpenSSLErrorInfo" = type <{ i32, [4 x i8], i8*, i32, [4 x i8] }>
%"class.logging::ErrnoLogMessage" = type <{ %"class.logging::LogMessage", i32, [4 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.6" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.1" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.8" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"union.absl::variant_internal::DestructibleUnionImpl.47" }
%"union.absl::variant_internal::DestructibleUnionImpl.47" = type { %"union.absl::variant_internal::DestructibleUnionImpl.48" }
%"union.absl::variant_internal::DestructibleUnionImpl.48" = type { %"class.std::__1::basic_string" }
%struct.ssl_st = type opaque
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.25" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.14", %"class.std::__1::vector.14", %"class.std::__1::vector.14", %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.21" }
%"class.base::time_internal::TimeBase.21" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::unique_ptr"* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.32, %struct.evp_pkey_asn1_method_st* }
%union.anon.32 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %struct.crypto_buffer_st**, %struct.crypto_buffer_st**, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [34 x i8] c"../../net/ssl/openssl_ssl_util.cc\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"OpenSSL SYSCALL error, earliest error code in error queue: \00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"Unknown OpenSSL error \00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Failed to set client certificate\00", align 1
@_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.5 = private unnamed_addr constant [10 x i8] c"net_error\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"ssl_error\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"error_lib\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"error_reason\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"line\00", align 1

@_ZN3net15SslSetClearMaskC1Ev = hidden unnamed_addr alias void (%"struct.net::SslSetClearMask"*), void (%"struct.net::SslSetClearMask"*)* @_ZN3net15SslSetClearMaskC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15SslSetClearMaskC2Ev(%"struct.net::SslSetClearMask"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.net::SslSetClearMask"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net15SslSetClearMask13ConfigureFlagElb(%"struct.net::SslSetClearMask"* nocapture, i64, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"struct.net::SslSetClearMask", %"struct.net::SslSetClearMask"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.net::SslSetClearMask", %"struct.net::SslSetClearMask"* %0, i64 0, i32 1
  %6 = select i1 %2, i64* %4, i64* %5
  %7 = load i64, i64* %6, align 8
  %8 = or i64 %7, %1
  store i64 %8, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18OpenSSLPutNetErrorERKN4base8LocationEi(%"class.base::Location"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #2 {
  %3 = sub nsw i32 0, %1
  %4 = add i32 %1, 4095
  %5 = icmp ugt i32 %4, 4095
  %6 = select i1 %5, i32 -4, i32 %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 0) acquire, align 8
  %8 = icmp ugt i64 %7, 1
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 0)) #11
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  tail call void @_ZN6crypto17EnsureOpenSSLInitEv() #11
  %12 = tail call i32 @ERR_get_next_error_library() #11
  store i32 %12, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 1, i64 0) to i32*), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE to i8*)) #11
  br label %15

13:                                               ; preds = %9
  %14 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 0) acquire, align 8
  br label %15

15:                                               ; preds = %2, %11, %13
  %16 = phi i64 [ %7, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 1, i64 0) to i64), %11 ], [ %14, %13 ]
  %17 = inttoptr i64 %16 to %"class.net::(anonymous namespace)::OpenSSLNetErrorLibSingleton"*
  %18 = getelementptr inbounds %"class.net::(anonymous namespace)::OpenSSLNetErrorLibSingleton", %"class.net::(anonymous namespace)::OpenSSLNetErrorLibSingleton"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.base::Location", %"class.base::Location"* %0, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.base::Location", %"class.base::Location"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  tail call void @ERR_put_error(i32 %19, i32 0, i32 %6, i8* %21, i32 %23) #11
  ret void
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15MapOpenSSLErrorEiRKN6crypto21OpenSSLErrStackTracerE(i32, %"class.crypto::OpenSSLErrStackTracer"* nocapture readnone dereferenceable(32)) local_unnamed_addr #2 {
  %3 = alloca %"struct.net::OpenSSLErrorInfo", align 8
  %4 = bitcast %"struct.net::OpenSSLErrorInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %3, i64 0, i32 3
  %8 = bitcast %"struct.net::OpenSSLErrorInfo"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  store i32 0, i32* %5, align 8
  store i8* null, i8** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = call i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32 %0, %"class.crypto::OpenSSLErrStackTracer"* dereferenceable(32) undef, %"struct.net::OpenSSLErrorInfo"* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i32 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net26MapOpenSSLErrorWithDetailsEiRKN6crypto21OpenSSLErrStackTracerEPNS_16OpenSSLErrorInfoE(i32, %"class.crypto::OpenSSLErrStackTracer"* nocapture readnone dereferenceable(32), %"struct.net::OpenSSLErrorInfo"* nocapture) local_unnamed_addr #2 {
  %4 = alloca %"class.logging::ErrnoLogMessage", align 8
  %5 = alloca %"struct.net::OpenSSLErrorInfo", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = bitcast %"struct.net::OpenSSLErrorInfo"* %2 to i8*
  %8 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %2, i64 0, i32 0
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %2, i64 0, i32 2
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %2, i64 0, i32 3
  store i32 0, i32* %10, align 8
  switch i32 %0, label %77 [
    i32 2, label %85
    i32 3, label %85
    i32 15, label %19
    i32 5, label %20
    i32 1, label %11
  ]

11:                                               ; preds = %3
  %12 = bitcast %"struct.net::OpenSSLErrorInfo"* %5 to i8*
  %13 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %5, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %5, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %5, i64 0, i32 3
  %16 = bitcast %"struct.net::OpenSSLErrorInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  store i32 0, i32* %13, align 8
  store i8* null, i8** %14, align 8
  store i32 0, i32* %15, align 8
  %17 = call i32 @ERR_get_error_line(i8** %14, i32* %15) #11
  store i32 %17, i32* %13, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %72, label %30

19:                                               ; preds = %3
  br label %85

20:                                               ; preds = %3
  %21 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %21, label %22, label %85

22:                                               ; preds = %20
  %23 = bitcast %"class.logging::ErrnoLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %23) #11
  %24 = tail call i32 @_ZN7logging22GetLastSystemErrorCodeEv() #11
  call void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"* nonnull %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 178, i32 2, i32 %24) #11
  %25 = getelementptr inbounds %"class.logging::ErrnoLogMessage", %"class.logging::ErrnoLogMessage"* %4, i64 0, i32 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i64 59) #11
  %28 = call i32 @ERR_peek_error() #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %27, i32 %28) #11
  call void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %23) #11
  br label %85

30:                                               ; preds = %11, %74
  %31 = phi i32 [ %75, %74 ], [ %17, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %12, i64 20, i1 false)
  %32 = lshr i32 %31, 24
  %33 = icmp eq i32 %32, 16
  br i1 %33, label %34, label %53

34:                                               ; preds = %30
  %35 = and i32 %31, 4095
  switch i32 %35, label %52 [
    i32 198, label %72
    i32 228, label %36
    i32 230, label %36
    i32 232, label %36
    i32 234, label %36
    i32 177, label %37
    i32 184, label %37
    i32 1071, label %37
    i32 1070, label %37
    i32 240, label %37
    i32 1042, label %38
    i32 1043, label %38
    i32 1044, label %38
    i32 1045, label %38
    i32 1046, label %38
    i32 1049, label %38
    i32 1116, label %38
    i32 1048, label %38
    i32 1030, label %39
    i32 1020, label %40
    i32 1051, label %41
    i32 1112, label %42
    i32 273, label %43
    i32 278, label %44
    i32 297, label %45
    i32 1040, label %46
    i32 302, label %51
  ]

36:                                               ; preds = %34, %34, %34, %34
  br label %72

37:                                               ; preds = %34, %34, %34, %34, %34
  br label %72

38:                                               ; preds = %34, %34, %34, %34, %34, %34, %34, %34
  br label %72

39:                                               ; preds = %34
  br label %72

40:                                               ; preds = %34
  br label %72

41:                                               ; preds = %34
  br label %72

42:                                               ; preds = %34
  br label %72

43:                                               ; preds = %34
  br label %72

44:                                               ; preds = %34
  br label %72

45:                                               ; preds = %34
  br label %72

46:                                               ; preds = %34
  %47 = call i32 @ERR_peek_error() #11
  %48 = and i32 %47, -16773121
  %49 = icmp eq i32 %48, 268435610
  %50 = select i1 %49, i32 -113, i32 -107
  br label %72

51:                                               ; preds = %34
  br label %72

52:                                               ; preds = %34
  br label %72

53:                                               ; preds = %30
  %54 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 0) acquire, align 8
  %55 = icmp ugt i64 %54, 1
  br i1 %55, label %62, label %56

56:                                               ; preds = %53
  %57 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 0)) #11
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #11
  %59 = call i32 @ERR_get_next_error_library() #11
  store i32 %59, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 1, i64 0) to i32*), align 8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE to i8*)) #11
  br label %62

60:                                               ; preds = %56
  %61 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 0) acquire, align 8
  br label %62

62:                                               ; preds = %53, %58, %60
  %63 = phi i64 [ %54, %53 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_123g_openssl_net_error_libE, i64 0, i32 1, i64 0) to i64), %58 ], [ %61, %60 ]
  %64 = inttoptr i64 %63 to %"class.net::(anonymous namespace)::OpenSSLNetErrorLibSingleton"*
  %65 = getelementptr inbounds %"class.net::(anonymous namespace)::OpenSSLNetErrorLibSingleton", %"class.net::(anonymous namespace)::OpenSSLNetErrorLibSingleton"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %32, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = load i32, i32* %13, align 8
  %70 = and i32 %69, 4095
  %71 = sub nsw i32 0, %70
  br label %72

72:                                               ; preds = %74, %11, %68, %34, %36, %37, %38, %39, %40, %41, %42, %43, %44, %45, %46, %51, %52
  %73 = phi i32 [ %50, %46 ], [ -7, %34 ], [ -11, %36 ], [ -113, %37 ], [ -117, %38 ], [ -125, %39 ], [ -126, %40 ], [ -153, %41 ], [ -159, %42 ], [ -156, %43 ], [ -179, %44 ], [ -180, %45 ], [ -181, %51 ], [ -107, %52 ], [ %71, %68 ], [ -107, %11 ], [ -107, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br label %85

74:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  store i32 0, i32* %13, align 8
  store i8* null, i8** %14, align 8
  store i32 0, i32* %15, align 8
  %75 = call i32 @ERR_get_error_line(i8** %14, i32* %15) #11
  store i32 %75, i32* %13, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %72, label %30

77:                                               ; preds = %3
  %78 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #11
  br i1 %78, label %79, label %85

79:                                               ; preds = %77
  %80 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %80) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 206, i32 1) #11
  %81 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %82 = bitcast %"class.std::__1::basic_ostringstream"* %81 to %"class.std::__1::basic_ostream"*
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %82, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 22) #11
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %83, i32 %0) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %80) #11
  br label %85

85:                                               ; preds = %79, %77, %72, %22, %20, %3, %3, %19
  %86 = phi i32 [ -178, %19 ], [ -1, %3 ], [ -1, %3 ], [ -2, %20 ], [ -2, %22 ], [ %73, %72 ], [ -107, %77 ], [ -107, %79 ]
  ret i32 %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare i32 @_ZN7logging22GetLastSystemErrorCodeEv() local_unnamed_addr #3

declare void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"*, i8*, i32, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare i32 @ERR_peek_error() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"*) unnamed_addr #5

declare i32 @ERR_get_error_line(i8**, i32*) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18NetLogOpenSSLErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiRKNS_16OpenSSLErrorInfoE(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i32, %"struct.net::OpenSSLErrorInfo"* dereferenceable(24)) local_unnamed_addr #2 {
  %6 = alloca %"class.base::DictionaryValue", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %9 = load %"class.net::NetLog"*, %"class.net::NetLog"** %8, align 8
  %10 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %9, i64 0, i32 3
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %43, label %14, !prof !2

14:                                               ; preds = %5
  %15 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = bitcast %"class.base::DictionaryValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false) #11, !noalias !3
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %6) #11, !noalias !3
  %17 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 9, i32 %2) #11, !noalias !3
  %18 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i64 9, i32 %3) #11, !noalias !3
  %19 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 0
  %20 = load i32, i32* %19, align 8, !noalias !3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %14
  %23 = lshr i32 %20, 24
  %24 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i64 9, i32 %23) #11
  %25 = load i32, i32* %19, align 8, !noalias !8
  %26 = and i32 %25, 4095
  %27 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i64 12, i32 %26) #11
  br label %28

28:                                               ; preds = %22, %14
  %29 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8, !noalias !3
  %31 = icmp eq i8* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = call i64 @strlen(i8* nonnull %30) #11
  %34 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4, i8* nonnull %30, i64 %33) #11
  br label %35

35:                                               ; preds = %32, %28
  %36 = getelementptr inbounds %"struct.net::OpenSSLErrorInfo", %"struct.net::OpenSSLErrorInfo"* %4, i64 0, i32 3
  %37 = load i32, i32* %36, align 8, !noalias !3
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4, i32 %37) #11
  br label %41

41:                                               ; preds = %39, %35
  %42 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %6, i64 0, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %7, %"class.base::Value"* nonnull dereferenceable(32) %42) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11, !noalias !3
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %9, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %10, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %7) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  br label %43

43:                                               ; preds = %5, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16GetNetSSLVersionEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #2 {
  %2 = tail call i32 @SSL_version(%struct.ssl_st* %0) #11
  %3 = add i32 %2, -769
  %4 = icmp ult i32 %3, 4
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = add i32 %2, -766
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

declare i32 @SSL_version(%struct.ssl_st*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net17SetSSLChainAndKeyEP6ssl_stPNS_15X509CertificateEP11evp_pkey_stPK25ssl_private_key_method_st(%struct.ssl_st*, %"class.net::X509Certificate"* nocapture readonly, %struct.evp_pkey_st*, %struct.ssl_private_key_method_st*) local_unnamed_addr #2 {
  %5 = alloca %"class.std::__1::vector.33", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = bitcast %"class.std::__1::vector.33"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 7
  %12 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 7, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.25"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = add nsw i64 %18, 1
  %20 = bitcast %struct.crypto_buffer_st*** %10 to i64*
  %21 = bitcast %"class.std::__1::vector.33"* %5 to i64*
  %22 = icmp eq i64 %19, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %25 = bitcast %struct.crypto_buffer_st** %24 to i64*
  %26 = load i64, i64* %25, align 8
  br label %51

27:                                               ; preds = %4
  %28 = icmp ugt i64 %19, 2305843009213693951
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #12
  unreachable

30:                                               ; preds = %27
  %31 = bitcast %struct.crypto_buffer_st*** %9 to i64*
  %32 = shl i64 %19, 3
  %33 = tail call i8* @_Znwm(i64 %32) #13
  %34 = bitcast i8* %33 to %struct.crypto_buffer_st**
  %35 = ptrtoint i8* %33 to i64
  %36 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %34, i64 %19
  %37 = ptrtoint %struct.crypto_buffer_st** %36 to i64
  %38 = ptrtoint i8* %33 to i64
  store i64 %38, i64* %21, align 8
  store i64 %35, i64* %31, align 8
  store i64 %37, i64* %20, align 8
  %39 = bitcast i8* %33 to %struct.crypto_buffer_st**
  %40 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = bitcast %struct.crypto_buffer_st** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt %struct.crypto_buffer_st** %36, %34
  %44 = ptrtoint %struct.crypto_buffer_st** %36 to i64
  br i1 %43, label %45, label %51

45:                                               ; preds = %30
  %46 = bitcast i8* %33 to i64*
  store i64 %42, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %33, i64 8
  %48 = bitcast i8* %47 to %struct.crypto_buffer_st**
  %49 = ptrtoint i8* %47 to i64
  %50 = bitcast %struct.crypto_buffer_st*** %9 to i64*
  store i64 %49, i64* %50, align 8
  br label %105

51:                                               ; preds = %23, %30
  %52 = phi i64 [ 0, %23 ], [ %44, %30 ]
  %53 = phi i64 [ %26, %23 ], [ %42, %30 ]
  %54 = phi %struct.crypto_buffer_st** [ null, %23 ], [ %34, %30 ]
  %55 = phi i64 [ 0, %23 ], [ %38, %30 ]
  %56 = phi %struct.crypto_buffer_st** [ null, %23 ], [ %39, %30 ]
  %57 = phi i8* [ null, %23 ], [ %33, %30 ]
  %58 = phi i64 [ 0, %23 ], [ %35, %30 ]
  %59 = ptrtoint %struct.crypto_buffer_st** %54 to i64
  %60 = bitcast %struct.crypto_buffer_st*** %9 to i64*
  %61 = sub i64 %59, %55
  %62 = ashr exact i64 %61, 3
  %63 = add nsw i64 %62, 1
  %64 = icmp ugt i64 %63, 2305843009213693951
  br i1 %64, label %65, label %67

65:                                               ; preds = %51
  %66 = bitcast %"class.std::__1::vector.33"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %66) #12
  unreachable

67:                                               ; preds = %51
  %68 = sub i64 %52, %55
  %69 = ashr exact i64 %68, 3
  %70 = icmp ult i64 %69, 1152921504606846975
  br i1 %70, label %71, label %79

71:                                               ; preds = %67
  %72 = ashr exact i64 %68, 2
  %73 = icmp ult i64 %72, %63
  %74 = select i1 %73, i64 %63, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %71
  %77 = icmp ugt i64 %74, 2305843009213693951
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  tail call void @abort() #12
  unreachable

79:                                               ; preds = %76, %67
  %80 = phi i64 [ %74, %76 ], [ 2305843009213693951, %67 ]
  %81 = shl i64 %80, 3
  %82 = tail call i8* @_Znwm(i64 %81) #13
  %83 = bitcast i8* %82 to %struct.crypto_buffer_st**
  br label %84

84:                                               ; preds = %79, %71
  %85 = phi i64 [ %80, %79 ], [ 0, %71 ]
  %86 = phi %struct.crypto_buffer_st** [ %83, %79 ], [ null, %71 ]
  %87 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %86, i64 %62
  %88 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %86, i64 %85
  %89 = ptrtoint %struct.crypto_buffer_st** %88 to i64
  %90 = bitcast %struct.crypto_buffer_st** %87 to i64*
  store i64 %53, i64* %90, align 8
  %91 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %87, i64 1
  %92 = ptrtoint %struct.crypto_buffer_st** %91 to i64
  %93 = ptrtoint %struct.crypto_buffer_st** %56 to i64
  %94 = sub i64 %58, %93
  %95 = ashr exact i64 %94, 3
  %96 = sub nsw i64 0, %95
  %97 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %87, i64 %96
  %98 = ptrtoint %struct.crypto_buffer_st** %97 to i64
  %99 = icmp sgt i64 %94, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %84
  %101 = bitcast %struct.crypto_buffer_st** %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %57, i64 %94, i1 false) #11
  br label %102

102:                                              ; preds = %100, %84
  store i64 %98, i64* %21, align 8
  store i64 %92, i64* %60, align 8
  store i64 %89, i64* %20, align 8
  %103 = icmp eq %struct.crypto_buffer_st** %56, null
  br i1 %103, label %105, label %104

104:                                              ; preds = %102
  tail call void @_ZdlPv(i8* %57) #13
  br label %105

105:                                              ; preds = %45, %102, %104
  %106 = phi %struct.crypto_buffer_st** [ %39, %45 ], [ %97, %102 ], [ %97, %104 ]
  %107 = phi i64 [ %49, %45 ], [ %92, %102 ], [ %92, %104 ]
  %108 = phi %struct.crypto_buffer_st** [ %36, %45 ], [ %88, %102 ], [ %88, %104 ]
  %109 = phi %struct.crypto_buffer_st** [ %48, %45 ], [ %91, %102 ], [ %91, %104 ]
  %110 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %11, i64 0, i32 0, i32 0
  %111 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %110, align 8
  %112 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %113 = icmp eq %"class.std::__1::unique_ptr"* %111, %112
  %114 = bitcast %struct.crypto_buffer_st*** %9 to i64*
  br i1 %113, label %115, label %123

115:                                              ; preds = %185, %105
  %116 = phi %struct.crypto_buffer_st** [ %106, %105 ], [ %186, %185 ]
  %117 = phi i64 [ %107, %105 ], [ %187, %185 ]
  %118 = ptrtoint %struct.crypto_buffer_st** %116 to i64
  %119 = sub i64 %117, %118
  %120 = ashr exact i64 %119, 3
  %121 = tail call i32 @SSL_set_chain_and_key(%struct.ssl_st* %0, %struct.crypto_buffer_st** %116, i64 %120, %struct.evp_pkey_st* %2, %struct.ssl_private_key_method_st* %3) #11
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %193, label %201

123:                                              ; preds = %105, %191
  %124 = phi %struct.crypto_buffer_st** [ %186, %191 ], [ %106, %105 ]
  %125 = phi i64 [ %187, %191 ], [ %107, %105 ]
  %126 = phi %struct.crypto_buffer_st** [ %192, %191 ], [ %108, %105 ]
  %127 = phi %struct.crypto_buffer_st** [ %188, %191 ], [ %109, %105 ]
  %128 = phi %"class.std::__1::unique_ptr"* [ %189, %191 ], [ %111, %105 ]
  %129 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = icmp ult %struct.crypto_buffer_st** %127, %126
  %132 = ptrtoint %struct.crypto_buffer_st** %126 to i64
  br i1 %131, label %133, label %137

133:                                              ; preds = %123
  %134 = bitcast %struct.crypto_buffer_st** %127 to i64*
  store i64 %130, i64* %134, align 8
  %135 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %127, i64 1
  %136 = ptrtoint %struct.crypto_buffer_st** %135 to i64
  store i64 %136, i64* %114, align 8
  br label %185

137:                                              ; preds = %123
  %138 = ptrtoint %struct.crypto_buffer_st** %127 to i64
  %139 = load i64, i64* %21, align 8
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 3
  %142 = add nsw i64 %141, 1
  %143 = icmp ugt i64 %142, 2305843009213693951
  br i1 %143, label %144, label %146

144:                                              ; preds = %137
  %145 = bitcast %"class.std::__1::vector.33"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %145) #12
  unreachable

146:                                              ; preds = %137
  %147 = sub i64 %132, %139
  %148 = ashr exact i64 %147, 3
  %149 = icmp ult i64 %148, 1152921504606846975
  br i1 %149, label %150, label %158

150:                                              ; preds = %146
  %151 = ashr exact i64 %147, 2
  %152 = icmp ult i64 %151, %142
  %153 = select i1 %152, i64 %142, i64 %151
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %150
  %156 = icmp ugt i64 %153, 2305843009213693951
  br i1 %156, label %157, label %158

157:                                              ; preds = %155
  tail call void @abort() #12
  unreachable

158:                                              ; preds = %155, %146
  %159 = phi i64 [ %153, %155 ], [ 2305843009213693951, %146 ]
  %160 = shl i64 %159, 3
  %161 = tail call i8* @_Znwm(i64 %160) #13
  %162 = bitcast i8* %161 to %struct.crypto_buffer_st**
  br label %163

163:                                              ; preds = %158, %150
  %164 = phi i64 [ %159, %158 ], [ 0, %150 ]
  %165 = phi %struct.crypto_buffer_st** [ %162, %158 ], [ null, %150 ]
  %166 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %165, i64 %141
  %167 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %165, i64 %164
  %168 = ptrtoint %struct.crypto_buffer_st** %167 to i64
  %169 = bitcast %struct.crypto_buffer_st** %166 to i64*
  store i64 %130, i64* %169, align 8
  %170 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %166, i64 1
  %171 = ptrtoint %struct.crypto_buffer_st** %170 to i64
  %172 = sub i64 %125, %139
  %173 = ashr exact i64 %172, 3
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %166, i64 %174
  %176 = ptrtoint %struct.crypto_buffer_st** %175 to i64
  %177 = icmp sgt i64 %172, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %163
  %179 = bitcast %struct.crypto_buffer_st** %175 to i8*
  %180 = inttoptr i64 %139 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %180, i64 %172, i1 false) #11
  br label %181

181:                                              ; preds = %178, %163
  store i64 %176, i64* %21, align 8
  store i64 %171, i64* %114, align 8
  store i64 %168, i64* %20, align 8
  %182 = icmp eq i64 %139, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %133, %181, %183
  %186 = phi %struct.crypto_buffer_st** [ %124, %133 ], [ %175, %181 ], [ %175, %183 ]
  %187 = phi i64 [ %136, %133 ], [ %171, %181 ], [ %171, %183 ]
  %188 = phi %struct.crypto_buffer_st** [ %135, %133 ], [ %170, %181 ], [ %170, %183 ]
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 1
  %190 = icmp eq %"class.std::__1::unique_ptr"* %189, %112
  br i1 %190, label %115, label %191

191:                                              ; preds = %185
  %192 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %10, align 8
  br label %123

193:                                              ; preds = %115
  %194 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #11
  br i1 %194, label %195, label %201

195:                                              ; preds = %193
  %196 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %196) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 249, i32 1) #11
  %197 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %198 = bitcast %"class.std::__1::basic_ostringstream"* %197 to %"class.std::__1::basic_ostream"*
  %199 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %198, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i64 32) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %196) #11
  %200 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %8, align 8
  br label %201

201:                                              ; preds = %195, %193, %115
  %202 = phi %struct.crypto_buffer_st** [ %116, %115 ], [ %116, %193 ], [ %200, %195 ]
  %203 = phi i1 [ true, %115 ], [ false, %193 ], [ false, %195 ]
  %204 = icmp eq %struct.crypto_buffer_st** %202, null
  br i1 %204, label %208, label %205

205:                                              ; preds = %201
  %206 = ptrtoint %struct.crypto_buffer_st** %202 to i64
  store i64 %206, i64* %114, align 8
  %207 = bitcast %struct.crypto_buffer_st** %202 to i8*
  call void @_ZdlPv(i8* %207) #13
  br label %208

208:                                              ; preds = %201, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret i1 %203
}

declare i32 @SSL_set_chain_and_key(%struct.ssl_st*, %struct.crypto_buffer_st**, i64, %struct.evp_pkey_st*, %struct.ssl_private_key_method_st*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #3

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #3

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #3

declare i32 @ERR_get_next_error_library() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !9
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #5

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"*, i8*, i64, i32) local_unnamed_addr #3

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN3net12_GLOBAL__N_124NetLogOpenSSLErrorParamsEiiRKNS_16OpenSSLErrorInfoE: argument 0"}
!5 = distinct !{!5, !"_ZN3net12_GLOBAL__N_124NetLogOpenSSLErrorParamsEiiRKNS_16OpenSSLErrorInfoE"}
!6 = distinct !{!6, !7, !"_ZZN3net18NetLogOpenSSLErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiRKNS_16OpenSSLErrorInfoEENK3$_0clEv: argument 0"}
!7 = distinct !{!7, !"_ZZN3net18NetLogOpenSSLErrorERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiiRKNS_16OpenSSLErrorInfoEENK3$_0clEv"}
!8 = !{!4}
!9 = !{i8 0, i8 2}
