; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkColorFilterImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkColorFilterImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.38, %class.sk_sp.1, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.36 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.37 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.38 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.sk_sp.16 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.3*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.16*, %class.SkReadBuffer*)* }
%class.sk_sp.3 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.9*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.14*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.3*, i8*, i64, i8*)*, i8* }
%class.sk_sp.9 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.10", [7 x i8] }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%class.sk_sp.14 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.15, i32, i32 }
%class.sk_sp.15 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%"class.(anonymous namespace)::SkColorFilterImageFilter" = type { %class.SkImageFilter_Base.base, %class.sk_sp.1 }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.17*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.17*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.17*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.17 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.18, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.18 = type { %"struct.std::__1::atomic" }
%class.sk_sp.19 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.19, %"class.skif::LayerSpace.20" }
%"class.skif::LayerSpace.20" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.21 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.22, [384 x i64], %class.sk_sp.23, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.24", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.30" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.22 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.23 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

@.str = private unnamed_addr constant [25 x i8] c"SkColorFilterImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"SkColorFilterImageFilterImpl\00", align 1
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_124SkColorFilterImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::SkColorFilterImageFilter"*)* @_ZN12_GLOBAL__N_124SkColorFilterImageFilterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkColorFilterImageFilter"*)* @_ZN12_GLOBAL__N_124SkColorFilterImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.16*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkColorFilterImageFilter"*)* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkColorFilterImageFilter"*)* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkColorFilterImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.19*, %"class.(anonymous namespace)::SkColorFilterImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkColorFilterImageFilter"*, %class.SkColorFilter**)* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkColorFilterImageFilter"*)* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkColorFilterImageFilter"*)* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZNK12_GLOBAL__N_124SkColorFilterImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.36 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.37 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.38 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.1 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN12_GLOBAL__N_124SkColorFilterImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %class.sk_sp.1* nocapture, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkColorFilter*, align 8
  %6 = alloca %class.sk_sp.1, align 8
  %7 = alloca %class.sk_sp.1, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %11 = load %class.SkColorFilter*, %class.SkColorFilter** %10, align 8
  %12 = icmp eq %class.SkColorFilter* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %14, align 8
  br label %152

15:                                               ; preds = %4
  %16 = bitcast %class.SkColorFilter** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %5, align 8
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %107, label %20

20:                                               ; preds = %15
  %21 = call zeroext i1 @_ZNK13SkImageFilter17isColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter* nonnull %18, %class.SkColorFilter** nonnull %5) #9
  br i1 %21, label %22, label %107

22:                                               ; preds = %20
  %23 = bitcast %class.sk_sp.1* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %24, align 8
  %25 = load %class.SkColorFilter*, %class.SkColorFilter** %10, align 8
  %26 = bitcast %class.SkColorFilter** %5 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %7, i64 0, i32 0
  %29 = bitcast %class.sk_sp.1* %7 to i64*
  store i64 %27, i64* %29, align 8
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* nonnull sret %6, %class.SkColorFilter* %25, %class.sk_sp.1* nonnull %7) #9
  %30 = load %class.SkColorFilter*, %class.SkColorFilter** %28, align 8
  %31 = icmp eq %class.SkColorFilter* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.SkColorFilter* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.SkColorFilter* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #9
  br label %42

42:                                               ; preds = %22, %32, %36
  %43 = load %class.SkColorFilter*, %class.SkColorFilter** %24, align 8
  %44 = icmp eq %class.SkColorFilter* %43, null
  %45 = ptrtoint %class.SkColorFilter* %43 to i64
  br i1 %44, label %106, label %46

46:                                               ; preds = %42
  %47 = call i8* @_Znwm(i64 88) #10
  store %class.SkColorFilter* null, %class.SkColorFilter** %24, align 8
  %48 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %49 = call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %48, i32 0) #9
  %50 = icmp eq %class.SkImageFilter* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic, !noalias !2
  br label %54

54:                                               ; preds = %46, %51
  %55 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  store %class.SkImageFilter* %49, %class.SkImageFilter** %55, align 8, !alias.scope !2
  %56 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %3, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %3, i64 0, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = fcmp une float %58, 0xFFF0000000000000
  br i1 %59, label %72, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds float, float* %57, i64 1
  %62 = load float, float* %61, align 4
  %63 = fcmp une float %62, 0xFFF0000000000000
  br i1 %63, label %72, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds float, float* %57, i64 2
  %66 = load float, float* %65, align 4
  %67 = fcmp une float %66, 0x7FF0000000000000
  br i1 %67, label %72, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds float, float* %57, i64 3
  %70 = load float, float* %69, align 4
  %71 = fcmp une float %70, 0x7FF0000000000000
  br i1 %71, label %72, label %73

72:                                               ; preds = %68, %64, %60, %54
  br label %73

73:                                               ; preds = %68, %72
  %74 = phi %struct.SkRect* [ %56, %72 ], [ null, %68 ]
  %75 = bitcast i8* %47 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %75, %class.sk_sp* nonnull %8, i32 1, %struct.SkRect* %74) #9
  %76 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_124SkColorFilterImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds i8, i8* %47, i64 80
  %78 = bitcast i8* %77 to i64*
  store i64 %45, i64* %78, align 8
  %79 = bitcast %class.sk_sp* %0 to i8**
  store i8* %47, i8** %79, align 8
  %80 = load %class.SkImageFilter*, %class.SkImageFilter** %55, align 8
  %81 = icmp eq %class.SkImageFilter* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %80, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkImageFilter* %80 to %class.SkRefCntBase*
  %88 = bitcast %class.SkImageFilter* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #9
  br label %92

92:                                               ; preds = %86, %82, %73
  %93 = load %class.SkColorFilter*, %class.SkColorFilter** %24, align 8
  %94 = icmp eq %class.SkColorFilter* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %class.SkColorFilter* %93 to %class.SkRefCntBase*
  %101 = bitcast %class.SkColorFilter* %93 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  call void %104(%class.SkRefCntBase* nonnull %100) #9
  br label %105

105:                                              ; preds = %92, %95, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %151

106:                                              ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %107

107:                                              ; preds = %15, %106, %20
  %108 = call i8* @_Znwm(i64 88) #10
  %109 = bitcast %class.sk_sp.1* %1 to i64*
  %110 = load i64, i64* %109, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %10, align 8
  %111 = bitcast %class.sk_sp* %2 to i64*
  %112 = load i64, i64* %111, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %17, align 8
  %113 = bitcast %class.sk_sp* %9 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %3, i64 0, i32 0
  %115 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %3, i64 0, i32 0, i32 0
  %116 = load float, float* %115, align 4
  %117 = fcmp une float %116, 0xFFF0000000000000
  br i1 %117, label %130, label %118

118:                                              ; preds = %107
  %119 = getelementptr inbounds float, float* %115, i64 1
  %120 = load float, float* %119, align 4
  %121 = fcmp une float %120, 0xFFF0000000000000
  br i1 %121, label %130, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds float, float* %115, i64 2
  %124 = load float, float* %123, align 4
  %125 = fcmp une float %124, 0x7FF0000000000000
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds float, float* %115, i64 3
  %128 = load float, float* %127, align 4
  %129 = fcmp une float %128, 0x7FF0000000000000
  br i1 %129, label %130, label %131

130:                                              ; preds = %126, %122, %118, %107
  br label %131

131:                                              ; preds = %126, %130
  %132 = phi %struct.SkRect* [ %114, %130 ], [ null, %126 ]
  %133 = bitcast i8* %108 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %133, %class.sk_sp* nonnull %9, i32 1, %struct.SkRect* %132) #9
  %134 = bitcast i8* %108 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_124SkColorFilterImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  %135 = getelementptr inbounds i8, i8* %108, i64 80
  %136 = bitcast i8* %135 to i64*
  store i64 %110, i64* %136, align 8
  %137 = bitcast %class.sk_sp* %0 to i8**
  store i8* %108, i8** %137, align 8
  %138 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %139 = load %class.SkImageFilter*, %class.SkImageFilter** %138, align 8
  %140 = icmp eq %class.SkImageFilter* %139, null
  br i1 %140, label %151, label %141

141:                                              ; preds = %131
  %142 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %139, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 -1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %151

145:                                              ; preds = %141
  %146 = bitcast %class.SkImageFilter* %139 to %class.SkRefCntBase*
  %147 = bitcast %class.SkImageFilter* %139 to void (%class.SkRefCntBase*)***
  %148 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %147, align 8
  %149 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %148, i64 2
  %150 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, align 8
  call void %150(%class.SkRefCntBase* nonnull %146) #9
  br label %151

151:                                              ; preds = %131, %141, %145, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %152

152:                                              ; preds = %151, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK13SkImageFilter17isColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter*, %class.SkColorFilter**) local_unnamed_addr #2

declare void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* sret, %class.SkColorFilter*, %class.sk_sp.1*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z43SkRegisterColorFilterImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.16*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_124SkColorFilterImageFilter10CreateProcER12SkReadBuffer) #9
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.16*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_124SkColorFilterImageFilter10CreateProcER12SkReadBuffer) #9
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.16*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_124SkColorFilterImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.16* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %"class.SkImageFilter_Base::Common", align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp.1, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %"struct.SkImageFilters::CropRect", align 4
  %8 = bitcast %"class.SkImageFilter_Base::Common"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN12_GLOBAL__N_124SkColorFilterImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %10 to i8**
  store i8* %11, i8** %14, align 8
  store i64 17179869184, i64* %13, align 8
  %15 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %3, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #9
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %17, align 8
  br label %68

18:                                               ; preds = %2
  %19 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 0) #9, !noalias !5
  %20 = ptrtoint %class.SkFlattenable* %19 to i64
  %21 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = bitcast %class.sk_sp.1* %5 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast i8* %10 to %class.sk_sp**
  %24 = load %class.sk_sp*, %class.sk_sp** %23, align 8, !noalias !10
  %25 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %24, i64 0, i32 0
  %27 = load %class.SkImageFilter*, %class.SkImageFilter** %26, align 8, !noalias !10
  %28 = icmp eq %class.SkImageFilter* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic, !noalias !10
  br label %32

32:                                               ; preds = %29, %18
  store %class.SkImageFilter* %27, %class.SkImageFilter** %25, align 8, !alias.scope !10
  %33 = bitcast %"struct.SkImageFilters::CropRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #9
  %34 = load i32, i32* %9, align 8
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %36, i64 16, i1 false) #9
  call void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %4, %class.sk_sp.1* nonnull %5, %class.sk_sp* nonnull %6, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %7)
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %38 = bitcast %class.sk_sp* %4 to i64*
  %39 = load i64, i64* %38, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %37, align 8
  %40 = bitcast %class.sk_sp.16* %0 to i64*
  store i64 %39, i64* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #9
  %41 = load %class.SkImageFilter*, %class.SkImageFilter** %25, align 8
  %42 = icmp eq %class.SkImageFilter* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %32
  %44 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %41, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkImageFilter* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.SkImageFilter* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #9
  br label %53

53:                                               ; preds = %32, %43, %47
  %54 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %5, i64 0, i32 0
  %55 = load %class.SkColorFilter*, %class.SkColorFilter** %54, align 8
  %56 = icmp eq %class.SkColorFilter* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %class.SkColorFilter* %55 to %class.SkRefCntBase*
  %63 = bitcast %class.SkColorFilter* %55 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  call void %66(%class.SkRefCntBase* nonnull %62) #9
  br label %67

67:                                               ; preds = %61, %57, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %68

68:                                               ; preds = %67, %16
  %69 = load i64, i64* %13, align 8
  %70 = and i64 %69, 4294967294
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = bitcast i8* %10 to %class.sk_sp**
  br label %78

74:                                               ; preds = %94, %68
  %75 = phi i64 [ %69, %68 ], [ %96, %94 ]
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %102, label %100

78:                                               ; preds = %94, %72
  %79 = phi i64 [ 0, %72 ], [ %95, %94 ]
  %80 = load %class.sk_sp*, %class.sk_sp** %73, align 8
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 %79, i32 0
  %82 = load %class.SkImageFilter*, %class.SkImageFilter** %81, align 8
  %83 = icmp eq %class.SkImageFilter* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %82, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast %class.SkImageFilter* %82 to %class.SkRefCntBase*
  %90 = bitcast %class.SkImageFilter* %82 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8
  call void %93(%class.SkRefCntBase* nonnull %89) #9
  br label %94

94:                                               ; preds = %88, %84, %78
  %95 = add nuw nsw i64 %79, 1
  %96 = load i64, i64* %13, align 8
  %97 = lshr i64 %96, 1
  %98 = and i64 %97, 2147483647
  %99 = icmp ult i64 %95, %98
  br i1 %99, label %78, label %74

100:                                              ; preds = %74
  %101 = load i8*, i8** %14, align 8
  call void @_Z7sk_freePv(i8* %101) #9
  br label %102

102:                                              ; preds = %74, %100
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #9
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_124SkColorFilterImageFilterD2Ev(%"class.(anonymous namespace)::SkColorFilterImageFilter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_124SkColorFilterImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkColorFilter*, %class.SkColorFilter** %3, align 8
  %5 = icmp eq %class.SkColorFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_124SkColorFilterImageFilterD0Ev(%"class.(anonymous namespace)::SkColorFilterImageFilter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_124SkColorFilterImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkColorFilter*, %class.SkColorFilter** %3, align 8
  %5 = icmp eq %class.SkColorFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #9
  %18 = bitcast %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.16*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkColorFilterImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret void (%class.sk_sp.16*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_124SkColorFilterImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkColorFilterImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkColorFilterImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #9
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %class.SkColorFilter** %4 to %class.SkFlattenable**
  %6 = load %class.SkFlattenable*, %class.SkFlattenable** %5, align 8
  %7 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  %8 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %8, i64 11
  %10 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %9, align 8
  tail call void %10(%class.SkWriteBuffer* %1, %class.SkFlattenable* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.19* noalias sret, %"class.(anonymous namespace)::SkColorFilterImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.skif::FilterResult", align 8
  %7 = alloca %struct.SkIRect, align 8
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca %class.sk_sp.21, align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %struct.SkISize*
  %12 = alloca %class.SkPaint, align 8
  %13 = alloca %class.sk_sp.1, align 8
  %14 = alloca %struct.SkSamplingOptions, align 4
  %15 = bitcast %"class.(anonymous namespace)::SkColorFilterImageFilter"* %1 to %class.SkImageFilter_Base*
  %16 = bitcast %"class.skif::FilterResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9, !noalias !13
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %6, %class.SkImageFilter_Base* %15, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #9, !noalias !13
  %17 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %6, i64 0, i32 0, i32 0
  %18 = load %class.SkSpecialImage*, %class.SkSpecialImage** %17, align 8, !noalias !16
  %19 = icmp eq %class.SkSpecialImage* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %6, i64 0, i32 1, i32 0
  %22 = bitcast %struct.SkIPoint* %21 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !16
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %23, 32
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic, !noalias !16
  %29 = atomicrmw add i32* %27, i32 -1 acq_rel, !noalias !13
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %20
  %32 = bitcast %class.SkSpecialImage* %18 to %class.SkRefCntBase*
  %33 = bitcast %class.SkSpecialImage* %18 to void (%class.SkRefCntBase*)***
  %34 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %33, align 8, !noalias !13
  %35 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, i64 2
  %36 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, align 8, !noalias !13
  call void %36(%class.SkRefCntBase* nonnull %32) #9, !noalias !13
  br label %37

37:                                               ; preds = %4, %20, %31
  %38 = phi i32 [ %26, %31 ], [ %26, %20 ], [ 0, %4 ]
  %39 = phi i32 [ %24, %31 ], [ %24, %20 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9, !noalias !13
  %40 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %42 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %1, i64 0, i32 1, i32 0
  %43 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false)
  %44 = load %class.SkColorFilter*, %class.SkColorFilter** %42, align 8
  %45 = call i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter* %44, i32 0) #9
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0
  %49 = bitcast %struct.SkIRect* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 4 %49, i64 16, i1 false)
  br label %87

50:                                               ; preds = %37
  br i1 %19, label %51, label %53

51:                                               ; preds = %50
  %52 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  br label %200

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 2, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 2, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sub i32 %55, %57
  %59 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 2, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 2, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 %60, %62
  %64 = sext i32 %39 to i64
  %65 = sext i32 %58 to i64
  %66 = add nsw i64 %65, %64
  %67 = icmp slt i64 %66, 2147483647
  %68 = select i1 %67, i64 %66, i64 2147483647
  %69 = icmp sgt i64 %68, -2147483647
  %70 = select i1 %69, i64 %68, i64 -2147483647
  %71 = sext i32 %38 to i64
  %72 = sext i32 %63 to i64
  %73 = add nsw i64 %72, %71
  %74 = icmp slt i64 %73, 2147483647
  %75 = select i1 %74, i64 %73, i64 2147483647
  %76 = icmp sgt i64 %75, -2147483647
  %77 = select i1 %76, i64 %75, i64 -2147483647
  %78 = zext i32 %38 to i64
  %79 = shl nuw i64 %78, 32
  %80 = zext i32 %39 to i64
  %81 = or i64 %79, %80
  %82 = shl nsw i64 %77, 32
  %83 = and i64 %70, 4294967295
  %84 = or i64 %82, %83
  %85 = bitcast %struct.SkIRect* %7 to i64*
  store i64 %81, i64* %85, align 8
  %86 = bitcast i32* %41 to i64*
  store i64 %84, i64* %86, align 8
  br label %87

87:                                               ; preds = %53, %47
  %88 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #9
  %89 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %90 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %91 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %91, i8 -86, i64 16, i1 false)
  %92 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %15, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %7, %struct.SkIRect* nonnull %8) #9
  br i1 %92, label %95, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %94, align 8
  br label %189

95:                                               ; preds = %87
  %96 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %97 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %98 = bitcast %class.sk_sp.21* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %9, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %99, align 8
  %100 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #9
  %101 = load i32, i32* %97, align 4
  %102 = load i32, i32* %89, align 4
  %103 = sub i32 %101, %102
  %104 = load i32, i32* %96, align 4
  %105 = load i32, i32* %90, align 4
  %106 = sub i32 %104, %105
  %107 = zext i32 %106 to i64
  %108 = shl nuw i64 %107, 32
  %109 = zext i32 %103 to i64
  %110 = or i64 %108, %109
  store i64 %110, i64* %10, align 8
  %111 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %112 = load %class.SkSpecialImage*, %class.SkSpecialImage** %111, align 8, !noalias !19
  %113 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %115 = load i32, i32* %114, align 8, !noalias !19
  %116 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %117 = load %class.SkColorSpace*, %class.SkColorSpace** %116, align 8, !noalias !19
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.21* nonnull sret %9, %class.SkSpecialImage* %112, i32 %115, %class.SkColorSpace* %117, %struct.SkISize* nonnull dereferenceable(8) %11, i32 2, %class.SkSurfaceProps* dereferenceable(8) %113) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #9
  %118 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %99, align 8
  %119 = icmp eq %class.SkSpecialSurface* %118, null
  br i1 %119, label %120, label %122

120:                                              ; preds = %95
  %121 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %121, align 8
  br label %188

122:                                              ; preds = %95
  %123 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %118) #9
  %124 = bitcast %class.SkPaint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %124) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_124SkColorFilterImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %12) #9
  %125 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %12, i64 0, i32 8, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = and i32 %126, -261121
  %128 = or i32 %127, 1024
  store i32 %128, i32* %125, align 8
  %129 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %13, i64 0, i32 0
  %130 = load %class.SkColorFilter*, %class.SkColorFilter** %42, align 8
  %131 = icmp eq %class.SkColorFilter* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %122
  %133 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %130, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 1 monotonic
  br label %135

135:                                              ; preds = %122, %132
  store %class.SkColorFilter* %130, %class.SkColorFilter** %129, align 8
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nonnull %12, %class.sk_sp.1* nonnull %13) #9
  %136 = load %class.SkColorFilter*, %class.SkColorFilter** %129, align 8
  %137 = icmp eq %class.SkColorFilter* %136, null
  br i1 %137, label %148, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %136, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 -1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %148

142:                                              ; preds = %138
  %143 = bitcast %class.SkColorFilter* %136 to %class.SkRefCntBase*
  %144 = bitcast %class.SkColorFilter* %136 to void (%class.SkRefCntBase*)***
  %145 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %144, align 8
  %146 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, i64 2
  %147 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, align 8
  call void %147(%class.SkRefCntBase* nonnull %143) #9
  br label %148

148:                                              ; preds = %135, %138, %142
  %149 = load %class.SkColorFilter*, %class.SkColorFilter** %42, align 8
  %150 = call i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter* %149, i32 0) #9
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %153, label %152

152:                                              ; preds = %148
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %12, i32 0) #9
  call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %123, %class.SkPaint* nonnull dereferenceable(72) %12) #9
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %12, i32 -16777216) #9
  br label %161

153:                                              ; preds = %148
  %154 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %155 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #9
  %156 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #9
  %157 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %158 = extractvalue { <2 x float>, <2 x float> } %156, 0
  store <2 x float> %158, <2 x float>* %157, align 8
  %159 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %160 = extractvalue { <2 x float>, <2 x float> } %156, 1
  store <2 x float> %160, <2 x float>* %159, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %123, %struct.SkRGBA4f* nonnull dereferenceable(16) %154, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #9
  br label %161

161:                                              ; preds = %153, %152
  br i1 %19, label %170, label %162

162:                                              ; preds = %161
  %163 = load i32, i32* %89, align 4
  %164 = sub nsw i32 %39, %163
  %165 = sitofp i32 %164 to float
  %166 = load i32, i32* %90, align 4
  %167 = sub nsw i32 %38, %166
  %168 = sitofp i32 %167 to float
  %169 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %169) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %169, i8 0, i64 20, i1 false)
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %18, %class.SkCanvas* %123, float %165, float %168, %struct.SkSamplingOptions* nonnull dereferenceable(20) %14, %class.SkPaint* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %169) #9
  br label %170

170:                                              ; preds = %161, %162
  %171 = load i32, i32* %89, align 4
  %172 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %171, i32* %172, align 4
  %173 = load i32, i32* %90, align 4
  %174 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %173, i32* %174, align 4
  %175 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %99, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.19* sret %0, %class.SkSpecialSurface* %175) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %124) #9
  %176 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %99, align 8
  %177 = icmp eq %class.SkSpecialSurface* %176, null
  br i1 %177, label %188, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %176, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = bitcast %class.SkSpecialSurface* %176 to %class.SkRefCntBase*
  %184 = bitcast %class.SkSpecialSurface* %176 to void (%class.SkRefCntBase*)***
  %185 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %185, i64 2
  %187 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %186, align 8
  call void %187(%class.SkRefCntBase* nonnull %183) #9
  br label %188

188:                                              ; preds = %120, %170, %178, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  br label %189

189:                                              ; preds = %93, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  br i1 %19, label %200, label %190

190:                                              ; preds = %189
  %191 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 -1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %200

194:                                              ; preds = %190
  %195 = bitcast %class.SkSpecialImage* %18 to %class.SkRefCntBase*
  %196 = bitcast %class.SkSpecialImage* %18 to void (%class.SkRefCntBase*)***
  %197 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %196, align 8
  %198 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, i64 2
  %199 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %198, align 8
  call void %199(%class.SkRefCntBase* nonnull %195) #9
  br label %200

200:                                              ; preds = %51, %189, %190, %194
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter19onIsColorFilterNodeEPP13SkColorFilter(%"class.(anonymous namespace)::SkColorFilterImageFilter"* nocapture readonly, %class.SkColorFilter**) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0, i64 0, i32 0, i32 5, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = icmp eq %class.SkColorFilter** %1, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0, i64 0, i32 1, i32 0
  %10 = load %class.SkColorFilter*, %class.SkColorFilter** %9, align 8
  %11 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  store %class.SkColorFilter* %10, %class.SkColorFilter** %1, align 8
  br label %13

13:                                               ; preds = %2, %8, %6
  %14 = phi i1 [ true, %6 ], [ true, %8 ], [ false, %2 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter21onCanHandleComplexCTMEv(%"class.(anonymous namespace)::SkColorFilterImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_124SkColorFilterImageFilter23affectsTransparentBlackEv(%"class.(anonymous namespace)::SkColorFilterImageFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkColorFilterImageFilter", %"class.(anonymous namespace)::SkColorFilterImageFilter"* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkColorFilter*, %class.SkColorFilter** %2, align 8
  %4 = tail call i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter* %3, i32 0) #9
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.1*) local_unnamed_addr #2

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.19* sret, %class.SkSpecialSurface*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #7

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #2

declare i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter*, i32) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.21* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #2

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI13SkImageFilterE5sk_spIT_EPKS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI13SkImageFilterE5sk_spIT_EPKS2_"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev: argument 0"}
!7 = distinct !{!7, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev"}
!8 = distinct !{!8, !9, !"_ZN12SkReadBuffer15readColorFilterEv: argument 0"}
!9 = distinct !{!9, !"_ZN12SkReadBuffer15readColorFilterEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!12 = distinct !{!12, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!15 = distinct !{!15, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!16 = !{!17, !14}
!17 = distinct !{!17, !18, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!18 = distinct !{!18, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!21 = distinct !{!21, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
