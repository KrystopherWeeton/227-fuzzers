; ModuleID = '../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_dtls_writable_state.cc'
source_filename = "../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_dtls_writable_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::RtcEventDtlsWritableState" = type <{ %"class.webrtc::RtcEvent", i8, [7 x i8] }>
%"class.webrtc::RtcEvent" = type { i32 (...)**, i64 }

$_ZNK6webrtc25RtcEventDtlsWritableState7GetTypeEv = comdat any

$_ZNK6webrtc25RtcEventDtlsWritableState13IsConfigEventEv = comdat any

@_ZTVN6webrtc25RtcEventDtlsWritableStateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RtcEventDtlsWritableState"*)* @_ZN6webrtc25RtcEventDtlsWritableStateD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtcEventDtlsWritableState"*)* @_ZN6webrtc25RtcEventDtlsWritableStateD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::RtcEventDtlsWritableState"*)* @_ZNK6webrtc25RtcEventDtlsWritableState7GetTypeEv to i8*), i8* bitcast (i1 (%"class.webrtc::RtcEventDtlsWritableState"*)* @_ZNK6webrtc25RtcEventDtlsWritableState13IsConfigEventEv to i8*)] }, align 8

@_ZN6webrtc25RtcEventDtlsWritableStateC1Eb = hidden unnamed_addr alias void (%"class.webrtc::RtcEventDtlsWritableState"*, i1), void (%"class.webrtc::RtcEventDtlsWritableState"*, i1)* @_ZN6webrtc25RtcEventDtlsWritableStateC2Eb
@_ZN6webrtc25RtcEventDtlsWritableStateC1ERKS0_ = hidden unnamed_addr alias void (%"class.webrtc::RtcEventDtlsWritableState"*, %"class.webrtc::RtcEventDtlsWritableState"*), void (%"class.webrtc::RtcEventDtlsWritableState"*, %"class.webrtc::RtcEventDtlsWritableState"*)* @_ZN6webrtc25RtcEventDtlsWritableStateC2ERKS0_
@_ZN6webrtc25RtcEventDtlsWritableStateD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtcEventDtlsWritableState"*), void (%"class.webrtc::RtcEventDtlsWritableState"*)* @_ZN6webrtc25RtcEventDtlsWritableStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25RtcEventDtlsWritableStateC2Eb(%"class.webrtc::RtcEventDtlsWritableState"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"* %4) #7
  %5 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc25RtcEventDtlsWritableStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %0, i64 0, i32 1
  store i8 %3, i8* %6, align 8
  ret void
}

declare void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc25RtcEventDtlsWritableStateC2ERKS0_(%"class.webrtc::RtcEventDtlsWritableState"* nocapture, %"class.webrtc::RtcEventDtlsWritableState"* nocapture readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %0, i64 0, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc25RtcEventDtlsWritableStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  store i8 %9, i8* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc25RtcEventDtlsWritableStateD2Ev(%"class.webrtc::RtcEventDtlsWritableState"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25RtcEventDtlsWritableStateD0Ev(%"class.webrtc::RtcEventDtlsWritableState"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.webrtc::RtcEventDtlsWritableState"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.webrtc::RtcEventDtlsWritableState"* @_ZNK6webrtc25RtcEventDtlsWritableState4CopyEv(%"class.webrtc::RtcEventDtlsWritableState"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #8
  %3 = bitcast i8* %2 to %"class.webrtc::RtcEventDtlsWritableState"*
  %4 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %2 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %5, i64* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc25RtcEventDtlsWritableStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = getelementptr inbounds %"class.webrtc::RtcEventDtlsWritableState", %"class.webrtc::RtcEventDtlsWritableState"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  store i8 %11, i8* %9, align 8
  ret %"class.webrtc::RtcEventDtlsWritableState"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc25RtcEventDtlsWritableState7GetTypeEv(%"class.webrtc::RtcEventDtlsWritableState"*) unnamed_addr #0 comdat align 2 {
  ret i32 10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc25RtcEventDtlsWritableState13IsConfigEventEv(%"class.webrtc::RtcEventDtlsWritableState"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
