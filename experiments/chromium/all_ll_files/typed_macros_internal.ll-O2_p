; ModuleID = '../../base/trace_event/typed_macros_internal.cc'
source_filename = "../../base/trace_event/typed_macros_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.perfetto::Track" = type { i64, i64 }
%"class.base::trace_event::TrackEventHandle" = type { %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"*, %"class.base::trace_event::TrackEventHandle::CompletionListener"* }
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"struct.perfetto::internal::TrackEventIncrementalState" = type { i8, %"class.protozero::HeapBuffered.10", %"struct.std::__1::array", %"class.perfetto::base::FlatSet", %"class.std::__1::unordered_map" }
%"class.protozero::HeapBuffered.10" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage.11" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.protozero::RootMessage.11" = type { %"class.perfetto::protos::pbzero::InternedData.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::InternedData.base" = type { %"class.protozero::Message.base" }
%"struct.std::__1::array" = type { [32 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.perfetto::internal::BaseTrackEventInternedDataIndex"* }
%"class.perfetto::internal::BaseTrackEventInternedDataIndex" = type { i32 (...)** }
%"class.perfetto::base::FlatSet" = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { i64*, i64*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.25", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.40", [4 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27", %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { float }
%"class.base::trace_event::TrackEventHandle::CompletionListener" = type { i32 (...)** }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon, i32, i64, i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.0" }
%"class.base::time_internal::TimeBase.0" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%union.anon = type { i32 }
%"class.base::trace_event::TracePacketHandle" = type { %"class.protozero::MessageHandle", %"class.base::trace_event::TracePacketHandle::CompletionListener"* }
%"class.protozero::MessageHandle" = type { %"class.protozero::MessageHandleBase" }
%"class.protozero::MessageHandleBase" = type { %"class.protozero::Message"* }
%"class.base::trace_event::TracePacketHandle::CompletionListener" = type { i32 (...)** }
%"class.base::trace_event::TraceLog" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.base::Lock", i8, i32, %"class.std::__1::unique_ptr.43", %"class.std::__1::vector.49", %"class.base::Lock", i8, %"class.std::__1::vector.57", %"class.std::__1::map", %"class.std::__1::vector.72", %"class.std::__1::basic_string", %"class.std::__1::unordered_map.86", i32, [4 x i8], %"class.std::__1::unordered_map.114", %"class.std::__1::unordered_map.86", %"class.std::__1::unordered_map.138", %"class.std::__1::unordered_map.162", %"class.base::TimeTicks", i64, i32, %"class.base::TimeDelta", %"struct.std::__1::atomic", %"class.base::trace_event::TraceConfig", %"class.std::__1::vector.231", %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalBoolean", %"class.base::ThreadLocalBoolean", %"class.std::__1::unordered_map.290", %"class.std::__1::unique_ptr.314", i64, %"class.base::RepeatingCallback", %class.scoped_refptr.325, %"class.base::RepeatingCallback.327", %"class.base::RepeatingCallback.328", i64, i8, %"struct.std::__1::atomic.329", %"struct.std::__1::atomic.333", %"struct.std::__1::atomic.337", {}* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.base::trace_event::TraceBuffer"* }
%"class.base::trace_event::TraceBuffer" = type opaque
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.std::__1::unique_ptr.51"*, %"class.std::__1::unique_ptr.51"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::unique_ptr.51" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::unique_ptr.51"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.std::__1::__compressed_pair.59" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.std::__1::unique_ptr.74"*, %"class.std::__1::unique_ptr.74"*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::unique_ptr.74" = type opaque
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::unique_ptr.74"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.82 }
%union.anon.82 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.114" = type { %"class.std::__1::__hash_table.115" }
%"class.std::__1::__hash_table.115" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base.119"** }
%"struct.std::__1::__hash_node_base.119" = type { %"struct.std::__1::__hash_node_base.119"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator.121" }
%"class.std::__1::__bucket_list_deallocator.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.119" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::unordered_map.86" = type { %"class.std::__1::__hash_table.87" }
%"class.std::__1::__hash_table.87" = type <{ %"class.std::__1::unique_ptr.88", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90", %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::__hash_node_base.91"** }
%"struct.std::__1::__hash_node_base.91" = type { %"struct.std::__1::__hash_node_base.91"* }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::__bucket_list_deallocator.93" }
%"class.std::__1::__bucket_list_deallocator.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base.91" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::unordered_map.138" = type { %"class.std::__1::__hash_table.139" }
%"class.std::__1::__hash_table.139" = type <{ %"class.std::__1::unique_ptr.140", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142", %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base.143"** }
%"struct.std::__1::__hash_node_base.143" = type { %"struct.std::__1::__hash_node_base.143"* }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::__bucket_list_deallocator.145" }
%"class.std::__1::__bucket_list_deallocator.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base.143" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::unordered_map.162" = type { %"class.std::__1::__hash_table.163" }
%"class.std::__1::__hash_table.163" = type <{ %"class.std::__1::unique_ptr.164", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166", %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.167"** }
%"struct.std::__1::__hash_node_base.167" = type { %"struct.std::__1::__hash_node_base.167"* }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.std::__1::__bucket_list_deallocator.169" }
%"class.std::__1::__bucket_list_deallocator.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base.167" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::trace_event::TraceConfig" = type { i32, i64, i64, i8, %"class.base::trace_event::TraceConfigCategoryFilter", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"class.base::trace_event::TraceConfig::ProcessFilterConfig", %"class.std::__1::vector.231", %"class.std::__1::unordered_set.267", %"class.std::__1::unordered_set.267" }
%"class.base::trace_event::TraceConfigCategoryFilter" = type { %"class.std::__1::vector.187", %"class.std::__1::vector.187", %"class.std::__1::vector.187" }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.std::__1::basic_string"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig" = type <{ %"class.std::__1::set", %"class.std::__1::vector.203", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler", [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.194" }
%"class.std::__1::__tree.194" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"class.std::__1::__compressed_pair.205" }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler" = type { i32 }
%"class.base::trace_event::TraceConfig::ProcessFilterConfig" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.210" }
%"class.std::__1::__hash_table.210" = type <{ %"class.std::__1::unique_ptr.211", %"class.std::__1::__compressed_pair.221", %"class.std::__1::__compressed_pair.226", %"class.std::__1::__compressed_pair.228", [4 x i8] }>
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213", %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.std::__1::__hash_node_base.214"** }
%"struct.std::__1::__hash_node_base.214" = type { %"struct.std::__1::__hash_node_base.214"* }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.std::__1::__bucket_list_deallocator.216" }
%"class.std::__1::__bucket_list_deallocator.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::__hash_node_base.214" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::unordered_set.267" = type { %"class.std::__1::__hash_table.268" }
%"class.std::__1::__hash_table.268" = type <{ %"class.std::__1::unique_ptr.269", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.286", [4 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.272"** }
%"struct.std::__1::__hash_node_base.272" = type { %"struct.std::__1::__hash_node_base.272"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator.274" }
%"class.std::__1::__bucket_list_deallocator.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.272" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.std::__1::__compressed_pair.262" }
%"class.base::trace_event::TraceConfig::EventFilterConfig" = type { %"class.std::__1::basic_string", %"class.base::trace_event::TraceConfigCategoryFilter", %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.233" }
%"union.absl::variant_internal::DestructibleUnionImpl.233" = type { %"union.absl::variant_internal::DestructibleUnionImpl.234" }
%"union.absl::variant_internal::DestructibleUnionImpl.234" = type { %"union.absl::variant_internal::DestructibleUnionImpl.235" }
%"union.absl::variant_internal::DestructibleUnionImpl.235" = type { %"union.absl::variant_internal::DestructibleUnionImpl.236" }
%"union.absl::variant_internal::DestructibleUnionImpl.236" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer.289" }
%"class.base::ThreadLocalPointer.289" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::unordered_map.290" = type { %"class.std::__1::__hash_table.291" }
%"class.std::__1::__hash_table.291" = type <{ %"class.std::__1::unique_ptr.292", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.310", [4 x i8] }>
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294", %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.295"** }
%"struct.std::__1::__hash_node_base.295" = type { %"struct.std::__1::__hash_node_base.295"* }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.std::__1::__bucket_list_deallocator.297" }
%"class.std::__1::__bucket_list_deallocator.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base.295" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.base::trace_event::TraceBufferChunk" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.320" }
%"struct.std::__1::atomic.320" = type { %"struct.std::__1::__atomic_base.321" }
%"struct.std::__1::__atomic_base.321" = type { %"struct.std::__1::__atomic_base.322" }
%"struct.std::__1::__atomic_base.322" = type { %"struct.std::__1::__cxx_atomic_impl.323" }
%"struct.std::__1::__cxx_atomic_impl.323" = type { %"struct.std::__1::__cxx_atomic_base_impl.324" }
%"struct.std::__1::__cxx_atomic_base_impl.324" = type { i32 }
%class.scoped_refptr.325 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.326" }>
%"class.base::RefCountedThreadSafe.326" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.327" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.328" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.329" = type { %"struct.std::__1::__atomic_base.330" }
%"struct.std::__1::__atomic_base.330" = type { %"struct.std::__1::__cxx_atomic_impl.331" }
%"struct.std::__1::__cxx_atomic_impl.331" = type { %"struct.std::__1::__cxx_atomic_base_impl.332" }
%"struct.std::__1::__cxx_atomic_base_impl.332" = type { void (%"class.base::trace_event::TraceEvent"*, i1, %"struct.base::trace_event::TraceEventHandle"*)* }
%"struct.base::trace_event::TraceEventHandle" = type { i32, i32 }
%"struct.std::__1::atomic.333" = type { %"struct.std::__1::__atomic_base.334" }
%"struct.std::__1::__atomic_base.334" = type { %"struct.std::__1::__cxx_atomic_impl.335" }
%"struct.std::__1::__cxx_atomic_impl.335" = type { %"struct.std::__1::__cxx_atomic_base_impl.336" }
%"struct.std::__1::__cxx_atomic_base_impl.336" = type { void ()* }
%"struct.std::__1::atomic.337" = type { %"struct.std::__1::__atomic_base.338" }
%"struct.std::__1::__atomic_base.338" = type { %"struct.std::__1::__cxx_atomic_impl.339" }
%"struct.std::__1::__cxx_atomic_impl.339" = type { %"struct.std::__1::__cxx_atomic_base_impl.340" }
%"struct.std::__1::__cxx_atomic_base_impl.340" = type { void (i8*, i8*, i64, i32, i1, %"class.base::TimeTicks"*, %"class.base::ThreadTicks"*, i64)* }
%"struct.std::__1::__split_buffer" = type { i64*, i64*, i64*, %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.std::__1::allocator.23"* }
%"class.std::__1::allocator.23" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorImNS_9allocatorImEEE6insertENS_11__wrap_iterIPKmEEOm = comdat any

$_ZNSt3__114__split_bufferImRNS_9allocatorImEEE9push_backEOm = comdat any

@_ZN20trace_event_internal13kDefaultTrackE = hidden local_unnamed_addr constant %"struct.perfetto::Track" zeroinitializer, align 8
@_ZN12_GLOBAL__N_122g_typed_event_callbackE = internal unnamed_addr global void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)* null, align 8
@_ZN12_GLOBAL__N_123g_trace_packet_callbackE = internal unnamed_addr global void (%"class.base::trace_event::TracePacketHandle"*)* null, align 8
@_ZTVN4base11trace_event16TrackEventHandle18CompletionListenerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)* @_ZN4base11trace_event16TrackEventHandle18CompletionListenerD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)* @_ZN4base11trace_event16TrackEventHandle18CompletionListenerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN4base11trace_event17TracePacketHandle18CompletionListenerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)* @_ZN4base11trace_event17TracePacketHandle18CompletionListenerD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)* @_ZN4base11trace_event17TracePacketHandle18CompletionListenerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN4base11trace_event16TrackEventHandleC1EPN8perfetto6protos6pbzero10TrackEventEPNS2_8internal26TrackEventIncrementalStateEPNS1_18CompletionListenerE = hidden unnamed_addr alias void (%"class.base::trace_event::TrackEventHandle"*, %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"*, %"class.base::trace_event::TrackEventHandle::CompletionListener"*), void (%"class.base::trace_event::TrackEventHandle"*, %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"*, %"class.base::trace_event::TrackEventHandle::CompletionListener"*)* @_ZN4base11trace_event16TrackEventHandleC2EPN8perfetto6protos6pbzero10TrackEventEPNS2_8internal26TrackEventIncrementalStateEPNS1_18CompletionListenerE
@_ZN4base11trace_event16TrackEventHandleC1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TrackEventHandle"*), void (%"class.base::trace_event::TrackEventHandle"*)* @_ZN4base11trace_event16TrackEventHandleC2Ev
@_ZN4base11trace_event16TrackEventHandleD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TrackEventHandle"*), void (%"class.base::trace_event::TrackEventHandle"*)* @_ZN4base11trace_event16TrackEventHandleD2Ev
@_ZN4base11trace_event16TrackEventHandle18CompletionListenerD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*), void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)* @_ZN4base11trace_event16TrackEventHandle18CompletionListenerD2Ev
@_ZN4base11trace_event17TracePacketHandleC1EN9protozero13MessageHandleIN8perfetto6protos6pbzero11TracePacketEEEPNS1_18CompletionListenerE = hidden unnamed_addr alias void (%"class.base::trace_event::TracePacketHandle"*, %"class.protozero::MessageHandle"*, %"class.base::trace_event::TracePacketHandle::CompletionListener"*), void (%"class.base::trace_event::TracePacketHandle"*, %"class.protozero::MessageHandle"*, %"class.base::trace_event::TracePacketHandle::CompletionListener"*)* @_ZN4base11trace_event17TracePacketHandleC2EN9protozero13MessageHandleIN8perfetto6protos6pbzero11TracePacketEEEPNS1_18CompletionListenerE
@_ZN4base11trace_event17TracePacketHandleC1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TracePacketHandle"*), void (%"class.base::trace_event::TracePacketHandle"*)* @_ZN4base11trace_event17TracePacketHandleC2Ev
@_ZN4base11trace_event17TracePacketHandleD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TracePacketHandle"*), void (%"class.base::trace_event::TracePacketHandle"*)* @_ZN4base11trace_event17TracePacketHandleD2Ev
@_ZN4base11trace_event17TracePacketHandleC1EOS1_ = hidden unnamed_addr alias void (%"class.base::trace_event::TracePacketHandle"*, %"class.base::trace_event::TracePacketHandle"*), void (%"class.base::trace_event::TracePacketHandle"*, %"class.base::trace_event::TracePacketHandle"*)* @_ZN4base11trace_event17TracePacketHandleC2EOS1_
@_ZN4base11trace_event17TracePacketHandle18CompletionListenerD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*), void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)* @_ZN4base11trace_event17TracePacketHandle18CompletionListenerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11trace_event22EnableTypedTraceEventsEPFNS0_16TrackEventHandleEPNS0_10TraceEventEEPFNS0_17TracePacketHandleEvE(void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)*, void (%"class.base::trace_event::TracePacketHandle"*)*) local_unnamed_addr #0 {
  store void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)* %0, void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)** @_ZN12_GLOBAL__N_122g_typed_event_callbackE, align 8
  store void (%"class.base::trace_event::TracePacketHandle"*)* %1, void (%"class.base::trace_event::TracePacketHandle"*)** @_ZN12_GLOBAL__N_123g_trace_packet_callbackE, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11trace_event31ResetTypedTraceEventsForTestingEv() local_unnamed_addr #0 {
  store void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)* null, void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)** @_ZN12_GLOBAL__N_122g_typed_event_callbackE, align 8
  store void (%"class.base::trace_event::TracePacketHandle"*)* null, void (%"class.base::trace_event::TracePacketHandle"*)** @_ZN12_GLOBAL__N_123g_trace_packet_callbackE, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11trace_event16TrackEventHandleC2EPN8perfetto6protos6pbzero10TrackEventEPNS2_8internal26TrackEventIncrementalStateEPNS1_18CompletionListenerE(%"class.base::trace_event::TrackEventHandle"* nocapture, %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"*, %"class.base::trace_event::TrackEventHandle::CompletionListener"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %0, i64 0, i32 0
  store %"class.perfetto::protos::pbzero::TrackEvent"* %1, %"class.perfetto::protos::pbzero::TrackEvent"** %5, align 8
  %6 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %0, i64 0, i32 1
  store %"struct.perfetto::internal::TrackEventIncrementalState"* %2, %"struct.perfetto::internal::TrackEventIncrementalState"** %6, align 8
  %7 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %0, i64 0, i32 2
  store %"class.base::trace_event::TrackEventHandle::CompletionListener"* %3, %"class.base::trace_event::TrackEventHandle::CompletionListener"** %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11trace_event16TrackEventHandleC2Ev(%"class.base::trace_event::TrackEventHandle"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::trace_event::TrackEventHandle"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event16TrackEventHandleD2Ev(%"class.base::trace_event::TrackEventHandle"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %0, i64 0, i32 2
  %3 = load %"class.base::trace_event::TrackEventHandle::CompletionListener"*, %"class.base::trace_event::TrackEventHandle::CompletionListener"** %2, align 8
  %4 = icmp eq %"class.base::trace_event::TrackEventHandle::CompletionListener"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::trace_event::TrackEventHandle::CompletionListener"* %3 to void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)***
  %7 = load void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)**, void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)*, void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)** %7, i64 2
  %9 = load void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)*, void (%"class.base::trace_event::TrackEventHandle::CompletionListener"*)** %8, align 8
  tail call void %9(%"class.base::trace_event::TrackEventHandle::CompletionListener"* nonnull %3) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base11trace_event16TrackEventHandle18CompletionListenerD2Ev(%"class.base::trace_event::TrackEventHandle::CompletionListener"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base11trace_event16TrackEventHandle18CompletionListenerD0Ev(%"class.base::trace_event::TrackEventHandle::CompletionListener"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TracePacketHandleC2EN9protozero13MessageHandleIN8perfetto6protos6pbzero11TracePacketEEEPNS1_18CompletionListenerE(%"class.base::trace_event::TracePacketHandle"*, %"class.protozero::MessageHandle"*, %"class.base::trace_event::TracePacketHandle::CompletionListener"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %1, i64 0, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %4, %"class.protozero::MessageHandleBase"* dereferenceable(8) %5) #12
  %6 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 1
  store %"class.base::trace_event::TracePacketHandle::CompletionListener"* %2, %"class.base::trace_event::TracePacketHandle::CompletionListener"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TracePacketHandleC2Ev(%"class.base::trace_event::TracePacketHandle"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.protozero::MessageHandle", align 8
  %3 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %2, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %3, %"class.protozero::Message"* null) #12
  %4 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %4, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %3) #12
  %5 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 1
  store %"class.base::trace_event::TracePacketHandle::CompletionListener"* null, %"class.base::trace_event::TracePacketHandle::CompletionListener"** %5, align 8
  call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* nonnull %3) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TracePacketHandleD2Ev(%"class.base::trace_event::TracePacketHandle"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 1
  %3 = load %"class.base::trace_event::TracePacketHandle::CompletionListener"*, %"class.base::trace_event::TracePacketHandle::CompletionListener"** %2, align 8
  %4 = icmp eq %"class.base::trace_event::TracePacketHandle::CompletionListener"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::trace_event::TracePacketHandle::CompletionListener"* %3 to void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)***
  %7 = load void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)**, void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)*, void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)** %7, i64 2
  %9 = load void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)*, void (%"class.base::trace_event::TracePacketHandle::CompletionListener"*)** %8, align 8
  tail call void %9(%"class.base::trace_event::TracePacketHandle::CompletionListener"* nonnull %3) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TracePacketHandleC2EOS1_(%"class.base::trace_event::TracePacketHandle"*, %"class.base::trace_event::TracePacketHandle"* dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* %3, %"class.protozero::Message"* null) #12
  %4 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %1, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(8) %"class.protozero::MessageHandleBase"* @_ZN9protozero17MessageHandleBaseaSEOS0_(%"class.protozero::MessageHandleBase"* %3, %"class.protozero::MessageHandleBase"* dereferenceable(8) %4) #12
  %6 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %1, i64 0, i32 1
  %7 = bitcast %"class.base::trace_event::TracePacketHandle::CompletionListener"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 1
  %10 = bitcast %"class.base::trace_event::TracePacketHandle::CompletionListener"** %9 to i64*
  store i64 %8, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.base::trace_event::TracePacketHandle"* @_ZN4base11trace_event17TracePacketHandleaSEOS1_(%"class.base::trace_event::TracePacketHandle"* returned, %"class.base::trace_event::TracePacketHandle"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %1, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(8) %"class.protozero::MessageHandleBase"* @_ZN9protozero17MessageHandleBaseaSEOS0_(%"class.protozero::MessageHandleBase"* %3, %"class.protozero::MessageHandleBase"* dereferenceable(8) %4) #12
  %6 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %1, i64 0, i32 1
  %7 = bitcast %"class.base::trace_event::TracePacketHandle::CompletionListener"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::trace_event::TracePacketHandle", %"class.base::trace_event::TracePacketHandle"* %0, i64 0, i32 1
  %10 = bitcast %"class.base::trace_event::TracePacketHandle::CompletionListener"** %9 to i64*
  store i64 %8, i64* %10, align 8
  ret %"class.base::trace_event::TracePacketHandle"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base11trace_event17TracePacketHandle18CompletionListenerD2Ev(%"class.base::trace_event::TracePacketHandle::CompletionListener"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TracePacketHandle18CompletionListenerD0Ev(%"class.base::trace_event::TracePacketHandle::CompletionListener"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* noalias sret, i8 signext, i8*, i8*, i64, i64, i1 zeroext) local_unnamed_addr #1 {
  %8 = alloca %"class.base::trace_event::TraceEvent", align 8
  %9 = load void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)*, void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)** @_ZN12_GLOBAL__N_122g_typed_event_callbackE, align 8
  %10 = icmp eq void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = bitcast %"class.base::trace_event::TrackEventHandle"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  br label %51

13:                                               ; preds = %7
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %15 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #12
  br i1 %6, label %16, label %21

16:                                               ; preds = %13
  %17 = sext i8 %1 to i32
  switch i32 %17, label %21 [
    i32 66, label %18
    i32 69, label %19
    i32 73, label %20
  ]

18:                                               ; preds = %16
  br label %21

19:                                               ; preds = %16
  br label %21

20:                                               ; preds = %16
  br label %21

21:                                               ; preds = %13, %16, %18, %19, %20
  %22 = phi i8 [ %1, %13 ], [ %1, %16 ], [ 110, %20 ], [ 101, %19 ], [ 98, %18 ]
  %23 = phi i64 [ 0, %13 ], [ %5, %16 ], [ %5, %20 ], [ %5, %19 ], [ %5, %18 ]
  %24 = tail call zeroext i1 @_ZN4base11trace_event8TraceLog27ShouldAddAfterUpdatingStateEcPKhPKcyiPNS0_14TraceArgumentsE(%"class.base::trace_event::TraceLog"* %15, i8 signext %22, i8* %2, i8* %3, i64 %23, i32 %14, %"class.base::trace_event::TraceArguments"* null) #12
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.base::trace_event::TrackEventHandle"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #12
  br label %51

27:                                               ; preds = %21
  %28 = icmp eq i64 %4, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %31

31:                                               ; preds = %27, %29
  %32 = phi i64 [ %30, %29 ], [ %4, %27 ]
  %33 = phi i32 [ 0, %29 ], [ 16, %27 ]
  %34 = icmp eq i8 %1, 73
  %35 = or i32 %33, 8
  %36 = select i1 %6, i32 %33, i32 %35
  %37 = select i1 %34, i32 %36, i32 %33
  %38 = and i32 %37, 16
  %39 = icmp ne i32 %38, 0
  %40 = or i1 %39, %6
  br i1 %40, label %46, label %41

41:                                               ; preds = %31
  %42 = tail call i64 @_ZN4base6subtle30ThreadTicksNowIgnoringOverrideEv() #12
  %43 = tail call zeroext i1 @_ZN4base11trace_event22ThreadInstructionCount11IsSupportedEv() #12
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = tail call i64 @_ZN4base11trace_event22ThreadInstructionCount3NowEv() #12
  br label %46

46:                                               ; preds = %44, %41, %31
  %47 = phi i64 [ 0, %31 ], [ %42, %41 ], [ %42, %44 ]
  %48 = phi i64 [ -1, %31 ], [ -1, %41 ], [ %45, %44 ]
  %49 = bitcast %"class.base::trace_event::TraceEvent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %49) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 152, i1 false)
  call void @_ZN4base11trace_event10TraceEventC1EiNS_9TimeTicksENS_11ThreadTicksENS0_22ThreadInstructionCountEcPKhPKcS8_yyPNS0_14TraceArgumentsEj(%"class.base::trace_event::TraceEvent"* nonnull %8, i32 %14, i64 %32, i64 %47, i64 %48, i8 signext %1, i8* %2, i8* %3, i8* null, i64 0, i64 0, %"class.base::trace_event::TraceArguments"* null, i32 %37) #12
  %50 = load void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)*, void (%"class.base::trace_event::TrackEventHandle"*, %"class.base::trace_event::TraceEvent"*)** @_ZN12_GLOBAL__N_122g_typed_event_callbackE, align 8
  call void %50(%"class.base::trace_event::TrackEventHandle"* sret %0, %"class.base::trace_event::TraceEvent"* nonnull %8) #12
  call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %49) #12
  br label %51

51:                                               ; preds = %25, %46, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #7

declare %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare zeroext i1 @_ZN4base11trace_event8TraceLog27ShouldAddAfterUpdatingStateEcPKhPKcyiPNS0_14TraceArgumentsE(%"class.base::trace_event::TraceLog"*, i8 signext, i8*, i8*, i64, i32, %"class.base::trace_event::TraceArguments"*) local_unnamed_addr #7

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN4base11trace_event10TraceEventC1EiNS_9TimeTicksENS_11ThreadTicksENS0_22ThreadInstructionCountEcPKhPKcS8_yyPNS0_14TraceArgumentsEj(%"class.base::trace_event::TraceEvent"*, i32, i64, i64, i64, i8 signext, i8*, i8*, i8*, i64, i64, %"class.base::trace_event::TraceArguments"*, i32) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20trace_event_internal17CreateTracePacketEv(%"class.base::trace_event::TracePacketHandle"* noalias sret) local_unnamed_addr #1 {
  %2 = load void (%"class.base::trace_event::TracePacketHandle"*)*, void (%"class.base::trace_event::TracePacketHandle"*)** @_ZN12_GLOBAL__N_123g_trace_packet_callbackE, align 8
  tail call void %2(%"class.base::trace_event::TracePacketHandle"* sret %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20trace_event_internal25ShouldEmitTrackDescriptorEmPN8perfetto8internal26TrackEventIncrementalStateE(i64, %"struct.perfetto::internal::TrackEventIncrementalState"*) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %1, i64 0, i32 3
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  store i64 %0, i64* %3, align 8
  %6 = getelementptr inbounds %"class.perfetto::base::FlatSet", %"class.perfetto::base::FlatSet"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.perfetto::base::FlatSet", %"class.perfetto::base::FlatSet"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %10 to i64
  %12 = ptrtoint i64* %8 to i64
  %13 = sub i64 %12, %11
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %30, label %15

15:                                               ; preds = %2
  %16 = ashr exact i64 %13, 3
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i64* [ %10, %15 ], [ %28, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %27, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds i64, i64* %18, i64 %20
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %0
  %24 = getelementptr inbounds i64, i64* %21, i64 1
  %25 = xor i64 %20, -1
  %26 = add i64 %19, %25
  %27 = select i1 %23, i64 %26, i64 %20
  %28 = select i1 %23, i64* %24, i64* %18
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %17

30:                                               ; preds = %17, %2
  %31 = phi i64* [ %10, %2 ], [ %28, %17 ]
  %32 = icmp eq i64* %31, %8
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load i64, i64* %31, align 8
  %35 = icmp eq i64 %34, %0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33, %30
  %37 = call i64* @_ZNSt3__16vectorImNS_9allocatorImEEE6insertENS_11__wrap_iterIPKmEEOm(%"class.std::__1::vector.18"* %6, i64* %31, i64* nonnull dereferenceable(8) %3) #12
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i1 [ true, %36 ], [ false, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret i1 %39
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"*, %"class.protozero::MessageHandleBase"* dereferenceable(8)) unnamed_addr #5

declare dereferenceable(8) %"class.protozero::MessageHandleBase"* @_ZN9protozero17MessageHandleBaseaSEOS0_(%"class.protozero::MessageHandleBase"*, %"class.protozero::MessageHandleBase"* dereferenceable(8)) local_unnamed_addr #7

declare i64 @_ZN4base6subtle30ThreadTicksNowIgnoringOverrideEv() local_unnamed_addr #7

declare zeroext i1 @_ZN4base11trace_event22ThreadInstructionCount11IsSupportedEv() local_unnamed_addr #7

declare i64 @_ZN4base11trace_event22ThreadInstructionCount3NowEv() local_unnamed_addr #7

declare void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"*, %"class.protozero::Message"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__16vectorImNS_9allocatorImEEE6insertENS_11__wrap_iterIPKmEEOm(%"class.std::__1::vector.18"*, i64*, i64* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint i64* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ult i64* %8, %10
  %12 = ptrtoint i64* %8 to i64
  %13 = ptrtoint i64* %10 to i64
  br i1 %11, label %14, label %159

14:                                               ; preds = %3
  %15 = icmp eq i64* %8, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = load i64, i64* %2, align 8
  store i64 %17, i64* %1, align 8
  %18 = getelementptr inbounds i64, i64* %1, i64 1
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast i64** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %302

21:                                               ; preds = %14
  %22 = getelementptr inbounds i64, i64* %1, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 3
  %26 = getelementptr inbounds i64, i64* %1, i64 %25
  %27 = bitcast i64** %7 to i64*
  %28 = icmp ult i64* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i64, i64* %8, i64 %30
  %32 = bitcast i64* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i64* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i64* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i64, i64* %8, i64 %43
  %45 = bitcast i64* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i64, i64* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add nsw i64 %52, 1
  %54 = getelementptr i64, i64* %1, i64 %53
  %55 = icmp ult i64* %8, %54
  %56 = icmp ult i64* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 4611686018427387900
  %60 = getelementptr i64, i64* %8, i64 %59
  %61 = getelementptr i64, i64* %26, i64 %59
  %62 = add nsw i64 %59, -4
  %63 = lshr exact i64 %62, 2
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 12
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i64, i64* %8, i64 %70
  %73 = getelementptr i64, i64* %26, i64 %70
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !2
  %76 = getelementptr i64, i64* %73, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !2
  %79 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %79, align 8, !alias.scope !5, !noalias !2
  %80 = getelementptr i64, i64* %72, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %81, align 8, !alias.scope !5, !noalias !2
  %82 = or i64 %70, 4
  %83 = getelementptr i64, i64* %8, i64 %82
  %84 = getelementptr i64, i64* %26, i64 %82
  %85 = bitcast i64* %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !2
  %87 = getelementptr i64, i64* %84, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !2
  %90 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %90, align 8, !alias.scope !5, !noalias !2
  %91 = getelementptr i64, i64* %83, i64 2
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %92, align 8, !alias.scope !5, !noalias !2
  %93 = or i64 %70, 8
  %94 = getelementptr i64, i64* %8, i64 %93
  %95 = getelementptr i64, i64* %26, i64 %93
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !2
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !2
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !5, !noalias !2
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !5, !noalias !2
  %104 = or i64 %70, 12
  %105 = getelementptr i64, i64* %8, i64 %104
  %106 = getelementptr i64, i64* %26, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !2
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !2
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !5, !noalias !2
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !5, !noalias !2
  %115 = add i64 %70, 16
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !7

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i64, i64* %8, i64 %122
  %125 = getelementptr i64, i64* %26, i64 %122
  %126 = bitcast i64* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !2
  %128 = getelementptr i64, i64* %125, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !2
  %131 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !5, !noalias !2
  %132 = getelementptr i64, i64* %124, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8, !alias.scope !5, !noalias !2
  %134 = add i64 %122, 4
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !9

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i64* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i64* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i64, i64* %8, i64 %146
  %148 = bitcast i64* %147 to i8*
  %149 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 %24, i1 false) #12
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i64* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i64* [ %154, %150 ], [ %41, %39 ]
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds i64, i64* %152, i64 1
  %155 = getelementptr inbounds i64, i64* %151, i64 1
  %156 = icmp ult i64* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !11

157:                                              ; preds = %142, %145
  %158 = load i64, i64* %2, align 8
  store i64 %158, i64* %1, align 8
  br label %302

159:                                              ; preds = %3
  %160 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2
  %161 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %161) #12
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %167 = bitcast i64** %7 to i64*
  %168 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %169 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 40, i1 false)
  %170 = load i64, i64* %168, align 8
  %171 = sub i64 %12, %170
  %172 = ashr exact i64 %171, 3
  %173 = add nsw i64 %172, 1
  %174 = icmp ugt i64 %173, 2305843009213693951
  br i1 %174, label %175, label %177

175:                                              ; preds = %159
  %176 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %176) #13
  unreachable

177:                                              ; preds = %159
  %178 = bitcast i64** %9 to i64*
  %179 = sub i64 %13, %170
  %180 = ashr exact i64 %179, 3
  %181 = icmp ult i64 %180, 1152921504606846975
  br i1 %181, label %186, label %182

182:                                              ; preds = %177
  %183 = sub i64 %4, %170
  %184 = ashr exact i64 %183, 3
  store i64* null, i64** %165, align 8
  %185 = bitcast %"class.std::__1::allocator.23"** %166 to %"class.std::__1::__compressed_pair.20"**
  store %"class.std::__1::__compressed_pair.20"* %160, %"class.std::__1::__compressed_pair.20"** %185, align 8
  br label %197

186:                                              ; preds = %177
  %187 = ashr exact i64 %179, 2
  %188 = icmp ult i64 %187, %173
  %189 = select i1 %188, i64 %173, i64 %187
  %190 = sub i64 %4, %170
  %191 = ashr exact i64 %190, 3
  store i64* null, i64** %165, align 8
  %192 = bitcast %"class.std::__1::allocator.23"** %166 to %"class.std::__1::__compressed_pair.20"**
  store %"class.std::__1::__compressed_pair.20"* %160, %"class.std::__1::__compressed_pair.20"** %192, align 8
  %193 = icmp eq i64 %189, 0
  br i1 %193, label %203, label %194

194:                                              ; preds = %186
  %195 = icmp ugt i64 %189, 2305843009213693951
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  tail call void @abort() #13
  unreachable

197:                                              ; preds = %182, %194
  %198 = phi i64 [ 2305843009213693951, %182 ], [ %189, %194 ]
  %199 = phi i64 [ %184, %182 ], [ %191, %194 ]
  %200 = shl i64 %198, 3
  %201 = tail call i8* @_Znwm(i64 %200) #14
  %202 = bitcast i8* %201 to i64*
  br label %203

203:                                              ; preds = %186, %197
  %204 = phi i64 [ %199, %197 ], [ %191, %186 ]
  %205 = phi i64 [ %198, %197 ], [ 0, %186 ]
  %206 = phi i64* [ %202, %197 ], [ null, %186 ]
  store i64* %206, i64** %162, align 8
  %207 = getelementptr inbounds i64, i64* %206, i64 %204
  store i64* %207, i64** %164, align 8
  store i64* %207, i64** %163, align 8
  %208 = getelementptr inbounds i64, i64* %206, i64 %205
  store i64* %208, i64** %165, align 8
  call void @_ZNSt3__114__split_bufferImRNS_9allocatorImEEE9push_backEOm(%"struct.std::__1::__split_buffer"* nonnull %5, i64* dereferenceable(8) %2)
  %209 = load i64*, i64** %163, align 8
  %210 = load i64*, i64** %6, align 8
  %211 = ptrtoint i64* %210 to i64
  %212 = sub i64 %4, %211
  %213 = ashr exact i64 %212, 3
  %214 = sub nsw i64 0, %213
  %215 = getelementptr inbounds i64, i64* %209, i64 %214
  store i64* %215, i64** %163, align 8
  %216 = icmp sgt i64 %212, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %203
  %218 = bitcast i64* %215 to i8*
  %219 = bitcast i64* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %212, i1 false) #12
  br label %220

220:                                              ; preds = %217, %203
  %221 = load i64*, i64** %7, align 8
  %222 = icmp eq i64* %221, %1
  br i1 %222, label %223, label %227

223:                                              ; preds = %220
  %224 = ptrtoint i64* %221 to i64
  %225 = bitcast i64** %164 to i64*
  %226 = load i64, i64* %225, align 8
  br label %276

227:                                              ; preds = %220
  %228 = load i64*, i64** %164, align 8
  %229 = getelementptr i64, i64* %221, i64 -1
  %230 = ptrtoint i64* %229 to i64
  %231 = sub i64 %230, %4
  %232 = lshr i64 %231, 3
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 3
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %246, label %236

236:                                              ; preds = %227, %236
  %237 = phi i64* [ %243, %236 ], [ %228, %227 ]
  %238 = phi i64* [ %241, %236 ], [ %1, %227 ]
  %239 = phi i64 [ %244, %236 ], [ %234, %227 ]
  %240 = load i64, i64* %238, align 8
  store i64 %240, i64* %237, align 8
  %241 = getelementptr inbounds i64, i64* %238, i64 1
  %242 = load i64*, i64** %164, align 8
  %243 = getelementptr inbounds i64, i64* %242, i64 1
  store i64* %243, i64** %164, align 8
  %244 = add i64 %239, -1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %236, !llvm.loop !12

246:                                              ; preds = %236, %227
  %247 = phi i64* [ undef, %227 ], [ %243, %236 ]
  %248 = phi i64* [ %228, %227 ], [ %243, %236 ]
  %249 = phi i64* [ %1, %227 ], [ %241, %236 ]
  %250 = icmp ult i64 %231, 24
  br i1 %250, label %271, label %251

251:                                              ; preds = %246, %251
  %252 = phi i64* [ %269, %251 ], [ %248, %246 ]
  %253 = phi i64* [ %267, %251 ], [ %249, %246 ]
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %252, align 8
  %255 = getelementptr inbounds i64, i64* %253, i64 1
  %256 = load i64*, i64** %164, align 8
  %257 = getelementptr inbounds i64, i64* %256, i64 1
  store i64* %257, i64** %164, align 8
  %258 = load i64, i64* %255, align 8
  store i64 %258, i64* %257, align 8
  %259 = getelementptr inbounds i64, i64* %253, i64 2
  %260 = load i64*, i64** %164, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  store i64* %261, i64** %164, align 8
  %262 = load i64, i64* %259, align 8
  store i64 %262, i64* %261, align 8
  %263 = getelementptr inbounds i64, i64* %253, i64 3
  %264 = load i64*, i64** %164, align 8
  %265 = getelementptr inbounds i64, i64* %264, i64 1
  store i64* %265, i64** %164, align 8
  %266 = load i64, i64* %263, align 8
  store i64 %266, i64* %265, align 8
  %267 = getelementptr inbounds i64, i64* %253, i64 4
  %268 = load i64*, i64** %164, align 8
  %269 = getelementptr inbounds i64, i64* %268, i64 1
  store i64* %269, i64** %164, align 8
  %270 = icmp eq i64* %267, %221
  br i1 %270, label %271, label %251

271:                                              ; preds = %251, %246
  %272 = phi i64* [ %247, %246 ], [ %269, %251 ]
  %273 = ptrtoint i64* %272 to i64
  %274 = load i64, i64* %167, align 8
  %275 = bitcast i64** %164 to i64*
  br label %276

276:                                              ; preds = %223, %271
  %277 = phi i64* [ %225, %223 ], [ %275, %271 ]
  %278 = phi i64 [ %226, %223 ], [ %273, %271 ]
  %279 = phi i64 [ %224, %223 ], [ %274, %271 ]
  %280 = load i64, i64* %168, align 8
  %281 = bitcast i64** %163 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %168, align 8
  store i64 %280, i64* %281, align 8
  store i64 %278, i64* %167, align 8
  store i64 %279, i64* %277, align 8
  %283 = load i64, i64* %178, align 8
  %284 = bitcast i64** %165 to i64*
  %285 = load i64, i64* %284, align 8
  store i64 %285, i64* %178, align 8
  store i64 %283, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %280, i64* %286, align 8
  %287 = inttoptr i64 %280 to i64*
  %288 = inttoptr i64 %279 to i64*
  %289 = icmp eq i64* %288, %287
  br i1 %289, label %297, label %290

290:                                              ; preds = %276
  %291 = getelementptr i64, i64* %288, i64 -1
  %292 = ptrtoint i64* %291 to i64
  %293 = sub i64 %292, %280
  %294 = lshr i64 %293, 3
  %295 = xor i64 %294, -1
  %296 = getelementptr i64, i64* %288, i64 %295
  store i64* %296, i64** %164, align 8
  br label %297

297:                                              ; preds = %290, %276
  %298 = icmp eq i64 %280, 0
  br i1 %298, label %301, label %299

299:                                              ; preds = %297
  %300 = inttoptr i64 %280 to i8*
  call void @_ZdlPv(i8* %300) #14
  br label %301

301:                                              ; preds = %297, %299
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %161) #12
  br label %302

302:                                              ; preds = %16, %157, %301
  %303 = phi i64* [ %1, %16 ], [ %1, %157 ], [ %209, %301 ]
  ret i64* %303
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferImRNS_9allocatorImEEE9push_backEOm(%"struct.std::__1::__split_buffer"*, i64* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp ugt i64* %11, %14
  %16 = ptrtoint i64* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i64* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i64, i64* %11, i64 %22
  %24 = ptrtoint i64* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i64* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %12, i64 %25, i1 false) #12
  %30 = load i64*, i64** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i64* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i64, i64* %23, i64 %26
  store i64* %33, i64** %3, align 8
  %34 = getelementptr inbounds i64, i64* %32, i64 %22
  store i64* %34, i64** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i64** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #13
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #14
  %48 = bitcast i8* %47 to i64*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i64, i64* %48, i64 %45
  %51 = ptrtoint i64* %50 to i64
  %52 = getelementptr inbounds i64, i64* %48, i64 %41
  %53 = ptrtoint i64* %52 to i64
  %54 = ptrtoint i64* %11 to i64
  %55 = ptrtoint i64* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds i64, i64* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = shl nuw nsw i64 %45, 3
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -8
  %69 = lshr i64 %68, 3
  %70 = and i64 %68, -8
  %71 = add i64 %66, %70
  %72 = add i64 %71, 8
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i64, i64* %11, i64 %74
  %76 = bitcast i64* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 4611686018427387900
  %82 = getelementptr i64, i64* %50, i64 %81
  %83 = getelementptr i64, i64* %11, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i64, i64* %50, i64 %92
  %95 = getelementptr i64, i64* %11, i64 %92
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !13
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !13
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !16, !noalias !13
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !16, !noalias !13
  %104 = or i64 %92, 4
  %105 = getelementptr i64, i64* %50, i64 %104
  %106 = getelementptr i64, i64* %11, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !13
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !13
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !16, !noalias !13
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !16, !noalias !13
  %115 = or i64 %92, 8
  %116 = getelementptr i64, i64* %50, i64 %115
  %117 = getelementptr i64, i64* %11, i64 %115
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !13
  %120 = getelementptr i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !13
  %123 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !16, !noalias !13
  %124 = getelementptr i64, i64* %116, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !16, !noalias !13
  %126 = or i64 %92, 12
  %127 = getelementptr i64, i64* %50, i64 %126
  %128 = getelementptr i64, i64* %11, i64 %126
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !13
  %131 = getelementptr i64, i64* %128, i64 2
  %132 = bitcast i64* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !13
  %134 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !16, !noalias !13
  %135 = getelementptr i64, i64* %127, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !16, !noalias !13
  %137 = add i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !18

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i64, i64* %50, i64 %144
  %147 = getelementptr i64, i64* %11, i64 %144
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !13
  %150 = getelementptr i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !13
  %153 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !16, !noalias !13
  %154 = getelementptr i64, i64* %146, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !16, !noalias !13
  %156 = add i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !19

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i64* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i64* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i64* %162 to i64
  %165 = shl nuw nsw i64 %45, 3
  %166 = add i64 %56, %165
  %167 = add i64 %166, -8
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i64* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i64* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %176, align 8
  %180 = getelementptr inbounds i64, i64* %176, i64 1
  %181 = getelementptr inbounds i64, i64* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !20

184:                                              ; preds = %175, %161
  %185 = phi i64* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i64* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 56 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i64* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i64* [ %214, %188 ], [ %186, %184 ]
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %190, i64 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  %195 = getelementptr inbounds i64, i64* %189, i64 2
  %196 = getelementptr inbounds i64, i64* %190, i64 2
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds i64, i64* %189, i64 3
  %199 = getelementptr inbounds i64, i64* %190, i64 3
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds i64, i64* %189, i64 4
  %202 = getelementptr inbounds i64, i64* %190, i64 4
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds i64, i64* %189, i64 5
  %205 = getelementptr inbounds i64, i64* %190, i64 5
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %204, align 8
  %207 = getelementptr inbounds i64, i64* %189, i64 6
  %208 = getelementptr inbounds i64, i64* %190, i64 6
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds i64, i64* %189, i64 7
  %211 = getelementptr inbounds i64, i64* %190, i64 7
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %210, align 8
  %213 = getelementptr inbounds i64, i64* %189, i64 8
  %214 = getelementptr inbounds i64, i64* %190, i64 8
  %215 = icmp eq i64* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !21

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i64* %58 to i64
  %218 = load i64*, i64** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i64* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i64** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i64** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i64* %220, null
  %225 = inttoptr i64 %221 to i64*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i64* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #14
  %228 = load i64*, i64** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i64* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i64, i64* %1, align 8
  store i64 %231, i64* %230, align 8
  %232 = load i64*, i64** %3, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 1
  store i64* %233, i64** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !10}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
