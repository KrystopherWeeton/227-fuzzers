; ModuleID = '../../cc/trees/frame_rate_estimator.cc'
source_filename = "../../cc/trees/frame_rate_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.3", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

$_ZN4base8internal7InvokerINS0_9BindStateIMN2cc18FrameRateEstimatorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN2cc18FrameRateEstimatorEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN2cc12_GLOBAL__N_119kInputPriorityDelayE = internal constant %"class.base::TimeDelta" { i64 250000 }, align 8

@_ZN2cc18FrameRateEstimatorC1EPN4base19SequencedTaskRunnerE = hidden unnamed_addr alias void (%"class.cc::FrameRateEstimator"*, %"class.base::SequencedTaskRunner"*), void (%"class.cc::FrameRateEstimator"*, %"class.base::SequencedTaskRunner"*)* @_ZN2cc18FrameRateEstimatorC2EPN4base19SequencedTaskRunnerE
@_ZN2cc18FrameRateEstimatorD1Ev = hidden unnamed_addr alias void (%"class.cc::FrameRateEstimator"*), void (%"class.cc::FrameRateEstimator"*)* @_ZN2cc18FrameRateEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18FrameRateEstimatorC2EPN4base19SequencedTaskRunnerE(%"class.cc::FrameRateEstimator"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 4
  %7 = ptrtoint %"class.cc::FrameRateEstimator"* %0 to i64
  %8 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 17, i1 false)
  %9 = tail call i8* @_Znwm(i64 56) #8, !noalias !2
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc18FrameRateEstimatorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2cc18FrameRateEstimatorEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.cc::FrameRateEstimator"*)* @_ZN2cc18FrameRateEstimator23OnExitInputPriorityModeEv to i64), i64 0>, <2 x i64>* %12, align 8, !noalias !2
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to i64*
  store i64 %7, i64* %14, align 8, !noalias !2
  %15 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %9, i8** %15, align 8, !alias.scope !2
  call void @_ZN2cc21DelayedUniqueNotifierC1EPN4base19SequencedTaskRunnerENS1_17RepeatingCallbackIFvvEEERKNS1_9TimeDeltaE(%"class.cc::DelayedUniqueNotifier"* %6, %"class.base::SequencedTaskRunner"* %1, %"class.base::RepeatingCallback"* nonnull %3, %"class.base::TimeDelta"* nonnull dereferenceable(8) @_ZN2cc12_GLOBAL__N_119kInputPriorityDelayE) #9
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN2cc18FrameRateEstimator23OnExitInputPriorityModeEv(%"class.cc::FrameRateEstimator"* nocapture) #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 17, i1 false)
  ret void
}

declare void @_ZN2cc21DelayedUniqueNotifierC1EPN4base19SequencedTaskRunnerENS1_17RepeatingCallbackIFvvEEERKNS1_9TimeDeltaE(%"class.cc::DelayedUniqueNotifier"*, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback"*, %"class.base::TimeDelta"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18FrameRateEstimatorD2Ev(%"class.cc::FrameRateEstimator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 4
  tail call void @_ZN2cc21DelayedUniqueNotifierD1Ev(%"class.cc::DelayedUniqueNotifier"* %2) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc21DelayedUniqueNotifierD1Ev(%"class.cc::DelayedUniqueNotifier"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18FrameRateEstimator25SetFrameEstimationEnabledEb(%"class.cc::FrameRateEstimator"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !7
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 8
  %10 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18FrameRateEstimator8WillDrawEN4base9TimeTicksE(%"class.cc::FrameRateEstimator"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i64 %1, i64* %11, align 8
  br label %24

15:                                               ; preds = %10
  %16 = sub nsw i64 %1, %12
  store i64 %1, i64* %11, align 8
  %17 = icmp slt i64 %16, 32332
  %18 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 2
  br i1 %17, label %19, label %22

19:                                               ; preds = %15
  %20 = load i64, i64* %18, align 8
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %15 ]
  store i64 %23, i64* %18, align 8
  br label %24

24:                                               ; preds = %6, %2, %22, %14
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc18FrameRateEstimator20GetPreferredIntervalEv(%"class.cc::FrameRateEstimator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, 3
  %13 = select i1 %12, i64 0, i64 33332
  ret i64 %13

14:                                               ; preds = %1, %5
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18FrameRateEstimator16NotifyInputEventEv(%"class.cc::FrameRateEstimator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 3
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.cc::FrameRateEstimator", %"class.cc::FrameRateEstimator"* %0, i64 0, i32 4
  tail call void @_ZN2cc21DelayedUniqueNotifier8ScheduleEv(%"class.cc::DelayedUniqueNotifier"* %7) #9
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN2cc21DelayedUniqueNotifier8ScheduleEv(%"class.cc::DelayedUniqueNotifier"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc18FrameRateEstimatorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.cc::FrameRateEstimator"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.cc::FrameRateEstimator"*)**
  %21 = load void (%"class.cc::FrameRateEstimator"*)*, void (%"class.cc::FrameRateEstimator"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.cc::FrameRateEstimator"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.cc::FrameRateEstimator"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.cc::FrameRateEstimator"* %12) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2cc18FrameRateEstimatorEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN2cc18FrameRateEstimatorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN2cc18FrameRateEstimatorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN2cc18FrameRateEstimatorEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN2cc18FrameRateEstimatorEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{i8 0, i8 2}
