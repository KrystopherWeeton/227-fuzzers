; ModuleID = '../../third_party/webrtc/pc/transport_stats.cc'
source_filename = "../../third_party/webrtc/pc/transport_stats.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cricket::TransportChannelStats" = type { i32, i32, i32, i32, i32, [4 x i8], %"struct.cricket::IceTransportStats" }
%"struct.cricket::IceTransportStats" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.9", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cricket::CandidateStats"*, %"class.cricket::CandidateStats"*, %"class.std::__1::__compressed_pair.4" }
%"class.cricket::CandidateStats" = type { %"class.cricket::Candidate", %"class.absl::optional" }
%"class.cricket::Candidate" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::SocketAddress", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", %"class.rtc::SocketAddress", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, i16, %"class.std::__1::basic_string" }
%"class.rtc::SocketAddress" = type <{ %"class.std::__1::basic_string", %"class.rtc::IPAddress", i16, [2 x i8], i32, i8, [7 x i8] }>
%"class.rtc::IPAddress" = type <{ i32 (...)**, i32, %union.anon.1, [4 x i8] }>
%union.anon.1 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.2 }
%union.anon.2 = type { [4 x i32] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.3 }
%union.anon.3 = type { %"class.cricket::StunStats" }
%"class.cricket::StunStats" = type { i32, i32, double, double }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.cricket::CandidateStats"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"*, %"class.std::__1::__compressed_pair.16" }
%"struct.cricket::ConnectionInfo" = type { i8, i8, i8, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.cricket::Candidate", %"class.cricket::Candidate", i8*, i32, i64, i8, i64, %"class.absl::optional.11" }
%"class.absl::optional.11" = type { %"class.absl::optional_internal::optional_data.12" }
%"class.absl::optional_internal::optional_data.12" = type { %"class.absl::optional_internal::optional_data_base.13" }
%"class.absl::optional_internal::optional_data_base.13" = type { %"class.absl::optional_internal::optional_data_dtor_base.14" }
%"class.absl::optional_internal::optional_data_dtor_base.14" = type { i8, %union.anon.15 }
%union.anon.15 = type { i32 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.cricket::ConnectionInfo"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN7cricket17IceTransportStatsC2ERKS0_ = comdat any

@_ZN7cricket21TransportChannelStatsC1Ev = hidden unnamed_addr alias void (%"struct.cricket::TransportChannelStats"*), void (%"struct.cricket::TransportChannelStats"*)* @_ZN7cricket21TransportChannelStatsC2Ev
@_ZN7cricket21TransportChannelStatsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cricket::TransportChannelStats"*, %"struct.cricket::TransportChannelStats"*), void (%"struct.cricket::TransportChannelStats"*, %"struct.cricket::TransportChannelStats"*)* @_ZN7cricket21TransportChannelStatsC2ERKS0_
@_ZN7cricket21TransportChannelStatsD1Ev = hidden unnamed_addr alias void (%"struct.cricket::TransportChannelStats"*), void (%"struct.cricket::TransportChannelStats"*)* @_ZN7cricket21TransportChannelStatsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket21TransportChannelStatsC2Ev(%"struct.cricket::TransportChannelStats"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cricket::TransportChannelStats", %"struct.cricket::TransportChannelStats"* %0, i64 0, i32 6
  %3 = bitcast %"struct.cricket::IceTransportStats"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 52, i1 false) #8
  %4 = bitcast %"struct.cricket::TransportChannelStats"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket21TransportChannelStatsC2ERKS0_(%"struct.cricket::TransportChannelStats"*, %"struct.cricket::TransportChannelStats"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cricket::TransportChannelStats"* %0 to i8*
  %4 = bitcast %"struct.cricket::TransportChannelStats"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 20, i1 false)
  %5 = getelementptr inbounds %"struct.cricket::TransportChannelStats", %"struct.cricket::TransportChannelStats"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"struct.cricket::TransportChannelStats", %"struct.cricket::TransportChannelStats"* %1, i64 0, i32 6
  tail call void @_ZN7cricket17IceTransportStatsC2ERKS0_(%"struct.cricket::IceTransportStats"* %5, %"struct.cricket::IceTransportStats"* dereferenceable(56) %6)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7cricket17IceTransportStatsC2ERKS0_(%"struct.cricket::IceTransportStats"*, %"struct.cricket::IceTransportStats"* dereferenceable(56)) unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"struct.cricket::IceTransportStats"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #8
  %4 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.cricket::CandidateStats"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.cricket::IceTransportStats"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 472
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 39082084901927016
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.cricket::IceTransportStats"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #9
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #10
  %18 = bitcast i8* %17 to %"class.cricket::CandidateStats"*
  %19 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.cricket::CandidateStats"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.cricket::IceTransportStats"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.cricket::CandidateStats", %"class.cricket::CandidateStats"* %18, i64 %10
  %23 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cricket::CandidateStats"* %22, %"class.cricket::CandidateStats"** %23, align 8
  %24 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.cricket::CandidateStats"*, %"class.cricket::CandidateStats"** %24, align 8
  %26 = load %"class.cricket::CandidateStats"*, %"class.cricket::CandidateStats"** %4, align 8
  %27 = bitcast %"class.cricket::CandidateStats"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.cricket::CandidateStats"* %25, %26
  br i1 %29, label %38, label %30

30:                                               ; preds = %16, %30
  %31 = phi %"class.cricket::CandidateStats"* [ %34, %30 ], [ %18, %16 ]
  %32 = phi %"class.cricket::CandidateStats"* [ %33, %30 ], [ %25, %16 ]
  tail call void @_ZN7cricket14CandidateStatsC1ERKS0_(%"class.cricket::CandidateStats"* %31, %"class.cricket::CandidateStats"* dereferenceable(472) %32) #8
  %33 = getelementptr inbounds %"class.cricket::CandidateStats", %"class.cricket::CandidateStats"* %32, i64 1
  %34 = getelementptr inbounds %"class.cricket::CandidateStats", %"class.cricket::CandidateStats"* %31, i64 1
  %35 = icmp eq %"class.cricket::CandidateStats"* %33, %26
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.cricket::CandidateStats"* %34 to i64
  br label %38

38:                                               ; preds = %36, %16
  %39 = phi i64 [ %28, %16 ], [ %37, %36 ]
  store i64 %39, i64* %27, align 8
  br label %40

40:                                               ; preds = %2, %38
  %41 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %1, i64 0, i32 1
  %43 = bitcast %"class.std::__1::vector.9"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #8
  %44 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %1, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast %"struct.cricket::ConnectionInfo"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.9"* %42 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = sdiv exact i64 %49, 1040
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %80, label %52

52:                                               ; preds = %40
  %53 = icmp ugt i64 %50, 17737253917028415
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.9"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #9
  unreachable

56:                                               ; preds = %52
  %57 = tail call i8* @_Znwm(i64 %49) #10
  %58 = bitcast i8* %57 to %"struct.cricket::ConnectionInfo"*
  %59 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %0, i64 0, i32 1, i32 0, i32 1
  %60 = bitcast %"struct.cricket::ConnectionInfo"** %59 to i8**
  store i8* %57, i8** %60, align 8
  %61 = bitcast %"class.std::__1::vector.9"* %41 to i8**
  store i8* %57, i8** %61, align 8
  %62 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %58, i64 %50
  %63 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.cricket::ConnectionInfo"* %62, %"struct.cricket::ConnectionInfo"** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %42, i64 0, i32 0, i32 0
  %65 = load %"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"** %64, align 8
  %66 = load %"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"** %44, align 8
  %67 = bitcast %"struct.cricket::ConnectionInfo"** %59 to i64*
  %68 = ptrtoint i8* %57 to i64
  %69 = icmp eq %"struct.cricket::ConnectionInfo"* %65, %66
  br i1 %69, label %78, label %70

70:                                               ; preds = %56, %70
  %71 = phi %"struct.cricket::ConnectionInfo"* [ %74, %70 ], [ %58, %56 ]
  %72 = phi %"struct.cricket::ConnectionInfo"* [ %73, %70 ], [ %65, %56 ]
  tail call void @_ZN7cricket14ConnectionInfoC1ERKS0_(%"struct.cricket::ConnectionInfo"* %71, %"struct.cricket::ConnectionInfo"* dereferenceable(1040) %72) #8
  %73 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %72, i64 1
  %74 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %71, i64 1
  %75 = icmp eq %"struct.cricket::ConnectionInfo"* %73, %66
  br i1 %75, label %76, label %70

76:                                               ; preds = %70
  %77 = ptrtoint %"struct.cricket::ConnectionInfo"* %74 to i64
  br label %78

78:                                               ; preds = %76, %56
  %79 = phi i64 [ %68, %56 ], [ %77, %76 ]
  store i64 %79, i64* %67, align 8
  br label %80

80:                                               ; preds = %40, %78
  %81 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %0, i64 0, i32 2
  %82 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %1, i64 0, i32 2
  %83 = load i32, i32* %82, align 8
  store i32 %83, i32* %81, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket21TransportChannelStatsD2Ev(%"struct.cricket::TransportChannelStats"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cricket::TransportChannelStats", %"struct.cricket::TransportChannelStats"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"struct.cricket::TransportChannelStats", %"struct.cricket::TransportChannelStats"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load %"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"** %3, align 8
  %5 = icmp eq %"struct.cricket::ConnectionInfo"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.cricket::TransportChannelStats", %"struct.cricket::TransportChannelStats"* %0, i64 0, i32 6, i32 1, i32 0, i32 1
  %8 = load %"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"** %7, align 8
  %9 = icmp eq %"struct.cricket::ConnectionInfo"* %8, %4
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.cricket::ConnectionInfo"* [ %12, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %11, i64 -1
  tail call void @_ZN7cricket14ConnectionInfoD1Ev(%"struct.cricket::ConnectionInfo"* %12) #8
  %13 = icmp eq %"struct.cricket::ConnectionInfo"* %12, %4
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = load %"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"** %3, align 8
  br label %16

16:                                               ; preds = %14, %6
  %17 = phi %"struct.cricket::ConnectionInfo"* [ %15, %14 ], [ %4, %6 ]
  store %"struct.cricket::ConnectionInfo"* %4, %"struct.cricket::ConnectionInfo"** %7, align 8
  %18 = getelementptr inbounds %"struct.cricket::ConnectionInfo", %"struct.cricket::ConnectionInfo"* %17, i64 0, i32 0
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"struct.cricket::IceTransportStats", %"struct.cricket::IceTransportStats"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.cricket::CandidateStats"*, %"class.cricket::CandidateStats"** %20, align 8
  %22 = icmp eq %"class.cricket::CandidateStats"* %21, null
  br i1 %22, label %37, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.cricket::CandidateStats"* %21 to i8*
  %25 = getelementptr inbounds %"struct.cricket::TransportChannelStats", %"struct.cricket::TransportChannelStats"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %26 = load %"class.cricket::CandidateStats"*, %"class.cricket::CandidateStats"** %25, align 8
  %27 = icmp eq %"class.cricket::CandidateStats"* %26, %21
  br i1 %27, label %35, label %28

28:                                               ; preds = %23, %28
  %29 = phi %"class.cricket::CandidateStats"* [ %30, %28 ], [ %26, %23 ]
  %30 = getelementptr inbounds %"class.cricket::CandidateStats", %"class.cricket::CandidateStats"* %29, i64 -1
  tail call void @_ZN7cricket14CandidateStatsD1Ev(%"class.cricket::CandidateStats"* %30) #8
  %31 = icmp eq %"class.cricket::CandidateStats"* %30, %21
  br i1 %31, label %32, label %28

32:                                               ; preds = %28
  %33 = bitcast %"struct.cricket::IceTransportStats"* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi i8* [ %34, %32 ], [ %24, %23 ]
  store %"class.cricket::CandidateStats"* %21, %"class.cricket::CandidateStats"** %25, align 8
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %19, %35
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN7cricket14CandidateStatsC1ERKS0_(%"class.cricket::CandidateStats"*, %"class.cricket::CandidateStats"* dereferenceable(472)) unnamed_addr #5

declare void @_ZN7cricket14ConnectionInfoC1ERKS0_(%"struct.cricket::ConnectionInfo"*, %"struct.cricket::ConnectionInfo"* dereferenceable(1040)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7cricket14ConnectionInfoD1Ev(%"struct.cricket::ConnectionInfo"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7cricket14CandidateStatsD1Ev(%"class.cricket::CandidateStats"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
