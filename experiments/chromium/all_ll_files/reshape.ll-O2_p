; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/reshape.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/reshape.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteReshapeParams = type { [8 x i32], i32 }

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/reshape.cc\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"stretch_dim\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"-1\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"num_input_elements\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"num_output_elements\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"NumInputs(node) == 1 || NumInputs(node) == 2\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@_ZZN6tflite3ops7builtin16Register_RESHAPEEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7reshape7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7reshape4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7reshape12ResizeOutputEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call %struct.TfLiteIntArray* @_ZN6tflite3ops7builtin7reshape14GetOutputShapeEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %11 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %10, align 8
  %12 = sext i32 %7 to i64
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %11, i64 %12
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi %struct.TfLiteTensor* [ %13, %9 ], [ null, %2 ]
  %16 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %17 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %23 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %22, align 8
  %24 = sext i32 %19 to i64
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %23, i64 %24
  br label %26

26:                                               ; preds = %14, %21
  %27 = phi %struct.TfLiteTensor* [ %25, %21 ], [ null, %14 ]
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %15, i64 0, i32 2
  %29 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %28, align 8
  %30 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %105

33:                                               ; preds = %26
  %34 = sext i32 %31 to i64
  %35 = add nsw i64 %34, -1
  %36 = and i64 %34, 7
  %37 = icmp ult i64 %35, 7
  br i1 %37, label %86, label %38

38:                                               ; preds = %33
  %39 = sub nsw i64 %34, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %83, %40 ]
  %42 = phi i64 [ 1, %38 ], [ %82, %40 ]
  %43 = phi i64 [ %39, %38 ], [ %84, %40 ]
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %41
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %42, %46
  %48 = or i64 %41, 1
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %47, %51
  %53 = or i64 %41, 2
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %52, %56
  %58 = or i64 %41, 3
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %57, %61
  %63 = or i64 %41, 4
  %64 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = mul nsw i64 %62, %66
  %68 = or i64 %41, 5
  %69 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = mul nsw i64 %67, %71
  %73 = or i64 %41, 6
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul nsw i64 %72, %76
  %78 = or i64 %41, 7
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = mul nsw i64 %77, %81
  %83 = add nuw nsw i64 %41, 8
  %84 = add i64 %43, -8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %40

86:                                               ; preds = %40, %33
  %87 = phi i64 [ undef, %33 ], [ %82, %40 ]
  %88 = phi i64 [ 0, %33 ], [ %83, %40 ]
  %89 = phi i64 [ 1, %33 ], [ %82, %40 ]
  %90 = icmp eq i64 %36, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %86, %91
  %92 = phi i64 [ %99, %91 ], [ %88, %86 ]
  %93 = phi i64 [ %98, %91 ], [ %89, %86 ]
  %94 = phi i64 [ %100, %91 ], [ %36, %86 ]
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 %92
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = mul nsw i64 %93, %97
  %99 = add nuw nsw i64 %92, 1
  %100 = add i64 %94, -1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %91, !llvm.loop !2

102:                                              ; preds = %91, %86
  %103 = phi i64 [ %87, %86 ], [ %98, %91 ]
  %104 = trunc i64 %103 to i32
  br label %105

105:                                              ; preds = %102, %26
  %106 = phi i32 [ 1, %26 ], [ %104, %102 ]
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %3, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp sgt i32 %108, 0
  br i1 %109, label %110, label %139

110:                                              ; preds = %105
  %111 = sext i32 %108 to i64
  br label %112

112:                                              ; preds = %124, %110
  %113 = phi i64 [ 0, %110 ], [ %127, %124 ]
  %114 = phi i32 [ -1, %110 ], [ %126, %124 ]
  %115 = phi i32 [ 1, %110 ], [ %125, %124 ]
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %3, i64 0, i32 1, i64 %113
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, -1
  br i1 %118, label %119, label %122

119:                                              ; preds = %112
  %120 = icmp eq i32 %114, -1
  %121 = trunc i64 %113 to i32
  br i1 %120, label %124, label %129

122:                                              ; preds = %112
  %123 = mul nsw i32 %117, %115
  br label %124

124:                                              ; preds = %119, %122
  %125 = phi i32 [ %115, %119 ], [ %123, %122 ]
  %126 = phi i32 [ %121, %119 ], [ %114, %122 ]
  %127 = add nuw nsw i64 %113, 1
  %128 = icmp eq i64 %127, %111
  br i1 %128, label %132, label %112

129:                                              ; preds = %119
  %130 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %131 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %130, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %131(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %114, i32 -1) #4
  br label %149

132:                                              ; preds = %124
  %133 = icmp eq i32 %126, -1
  br i1 %133, label %139, label %134

134:                                              ; preds = %132
  %135 = sdiv i32 %106, %125
  %136 = sext i32 %126 to i64
  %137 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %3, i64 0, i32 1, i64 %136
  store i32 %135, i32* %137, align 4
  %138 = mul nsw i32 %135, %125
  br label %139

139:                                              ; preds = %105, %132, %134
  %140 = phi i32 [ %138, %134 ], [ %125, %132 ], [ 1, %105 ]
  %141 = icmp eq i32 %140, %106
  br i1 %141, label %145, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %144 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %143, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %144(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i32 %106, i32 %140) #4
  br label %149

145:                                              ; preds = %139
  %146 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %147 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %146, align 8
  %148 = tail call i32 %147(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %27, %struct.TfLiteIntArray* %3) #4
  br label %152

149:                                              ; preds = %129, %142
  %150 = icmp eq %struct.TfLiteIntArray* %3, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %149
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* nonnull %3) #4
  br label %152

152:                                              ; preds = %145, %149, %151
  %153 = phi i32 [ %148, %145 ], [ 1, %149 ], [ 1, %151 ]
  ret i32 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.TfLiteIntArray* @_ZN6tflite3ops7builtin7reshape14GetOutputShapeEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %77

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %14 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %13, align 8
  %15 = sext i32 %10 to i64
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 %15
  br label %17

17:                                               ; preds = %12, %8
  %18 = phi %struct.TfLiteTensor* [ %16, %12 ], [ null, %8 ]
  %19 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %18, i64 0, i32 2
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %77

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 2
  br i1 %27, label %28, label %77

28:                                               ; preds = %24
  br i1 %11, label %34, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %10 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %29, %28
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %28 ]
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %37 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %36, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %37, i64 0, i32 1, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %39) #4
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %235

44:                                               ; preds = %34
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 1, i32 0
  %46 = sext i32 %42 to i64
  %47 = add nsw i64 %46, -1
  %48 = and i64 %46, 3
  %49 = icmp ult i64 %47, 3
  br i1 %49, label %222, label %50

50:                                               ; preds = %44
  %51 = sub nsw i64 %46, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %74, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %75, %52 ]
  %55 = load i32*, i32** %45, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %53
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 %53
  store i32 %57, i32* %58, align 4
  %59 = or i64 %53, 1
  %60 = load i32*, i32** %45, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %59
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 %59
  store i32 %62, i32* %63, align 4
  %64 = or i64 %53, 2
  %65 = load i32*, i32** %45, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %64
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 %64
  store i32 %67, i32* %68, align 4
  %69 = or i64 %53, 3
  %70 = load i32*, i32** %45, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %69
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 %69
  store i32 %72, i32* %73, align 4
  %74 = add nuw nsw i64 %53, 4
  %75 = add i64 %54, -4
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %222, label %52

77:                                               ; preds = %17, %24, %2
  %78 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %79 = bitcast i8** %78 to %struct.TfLiteReshapeParams**
  %80 = load %struct.TfLiteReshapeParams*, %struct.TfLiteReshapeParams** %79, align 8
  %81 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %89

84:                                               ; preds = %77
  %85 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp ne i32 %86, 0
  %88 = zext i1 %87 to i32
  br label %89

89:                                               ; preds = %84, %77
  %90 = phi i32 [ %82, %77 ], [ %88, %84 ]
  %91 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %90) #4
  %92 = icmp sgt i32 %90, 0
  br i1 %92, label %93, label %235

93:                                               ; preds = %89
  %94 = zext i32 %90 to i64
  %95 = icmp ult i32 %90, 8
  br i1 %95, label %185, label %96

96:                                               ; preds = %93
  %97 = getelementptr %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 1
  %98 = add nuw nsw i64 %94, 1
  %99 = getelementptr %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 %98
  %100 = getelementptr %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %94
  %101 = bitcast i32* %100 to %struct.TfLiteIntArray*
  %102 = icmp ult %struct.TfLiteIntArray* %97, %101
  %103 = bitcast %struct.TfLiteIntArray* %99 to %struct.TfLiteReshapeParams*
  %104 = icmp ult %struct.TfLiteReshapeParams* %80, %103
  %105 = and i1 %102, %104
  br i1 %105, label %185, label %106

106:                                              ; preds = %96
  %107 = and i64 %94, 4294967288
  %108 = add nsw i64 %107, -8
  %109 = lshr exact i64 %108, 3
  %110 = add nuw nsw i64 %109, 1
  %111 = and i64 %110, 3
  %112 = icmp ult i64 %108, 24
  br i1 %112, label %164, label %113

113:                                              ; preds = %106
  %114 = sub nsw i64 %110, %111
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i64 [ 0, %113 ], [ %161, %115 ]
  %117 = phi i64 [ %114, %113 ], [ %162, %115 ]
  %118 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %116
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4, !alias.scope !4
  %121 = getelementptr inbounds i32, i32* %118, i64 4
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !4
  %124 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %116
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %120, <4 x i32>* %125, align 4, !alias.scope !7, !noalias !4
  %126 = getelementptr inbounds i32, i32* %124, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !7, !noalias !4
  %128 = or i64 %116, 8
  %129 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %128
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !4
  %132 = getelementptr inbounds i32, i32* %129, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !4
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %128
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %136, align 4, !alias.scope !7, !noalias !4
  %137 = getelementptr inbounds i32, i32* %135, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !7, !noalias !4
  %139 = or i64 %116, 16
  %140 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %139
  %141 = bitcast i32* %140 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !4
  %143 = getelementptr inbounds i32, i32* %140, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !4
  %146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %139
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %147, align 4, !alias.scope !7, !noalias !4
  %148 = getelementptr inbounds i32, i32* %146, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %149, align 4, !alias.scope !7, !noalias !4
  %150 = or i64 %116, 24
  %151 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %150
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !4
  %154 = getelementptr inbounds i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !4
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %150
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %158, align 4, !alias.scope !7, !noalias !4
  %159 = getelementptr inbounds i32, i32* %157, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %160, align 4, !alias.scope !7, !noalias !4
  %161 = add i64 %116, 32
  %162 = add i64 %117, -4
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %115, !llvm.loop !9

164:                                              ; preds = %115, %106
  %165 = phi i64 [ 0, %106 ], [ %161, %115 ]
  %166 = icmp eq i64 %111, 0
  br i1 %166, label %183, label %167

167:                                              ; preds = %164, %167
  %168 = phi i64 [ %180, %167 ], [ %165, %164 ]
  %169 = phi i64 [ %181, %167 ], [ %111, %164 ]
  %170 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %168
  %171 = bitcast i32* %170 to <4 x i32>*
  %172 = load <4 x i32>, <4 x i32>* %171, align 4, !alias.scope !4
  %173 = getelementptr inbounds i32, i32* %170, i64 4
  %174 = bitcast i32* %173 to <4 x i32>*
  %175 = load <4 x i32>, <4 x i32>* %174, align 4, !alias.scope !4
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %168
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %172, <4 x i32>* %177, align 4, !alias.scope !7, !noalias !4
  %178 = getelementptr inbounds i32, i32* %176, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %175, <4 x i32>* %179, align 4, !alias.scope !7, !noalias !4
  %180 = add i64 %168, 8
  %181 = add i64 %169, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %167, !llvm.loop !11

183:                                              ; preds = %167, %164
  %184 = icmp eq i64 %107, %94
  br i1 %184, label %235, label %185

185:                                              ; preds = %183, %96, %93
  %186 = phi i64 [ 0, %96 ], [ 0, %93 ], [ %107, %183 ]
  %187 = xor i64 %186, -1
  %188 = add nsw i64 %187, %94
  %189 = and i64 %94, 3
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %200, label %191

191:                                              ; preds = %185, %191
  %192 = phi i64 [ %197, %191 ], [ %186, %185 ]
  %193 = phi i64 [ %198, %191 ], [ %189, %185 ]
  %194 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %192
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %192
  store i32 %195, i32* %196, align 4
  %197 = add nuw nsw i64 %192, 1
  %198 = add i64 %193, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %191, !llvm.loop !12

200:                                              ; preds = %191, %185
  %201 = phi i64 [ %186, %185 ], [ %197, %191 ]
  %202 = icmp ult i64 %188, 3
  br i1 %202, label %235, label %203

203:                                              ; preds = %200, %203
  %204 = phi i64 [ %220, %203 ], [ %201, %200 ]
  %205 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %204
  store i32 %206, i32* %207, align 4
  %208 = add nuw nsw i64 %204, 1
  %209 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %208
  store i32 %210, i32* %211, align 4
  %212 = add nuw nsw i64 %204, 2
  %213 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %212
  store i32 %214, i32* %215, align 4
  %216 = add nuw nsw i64 %204, 3
  %217 = getelementptr inbounds %struct.TfLiteReshapeParams, %struct.TfLiteReshapeParams* %80, i64 0, i32 0, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %216
  store i32 %218, i32* %219, align 4
  %220 = add nuw nsw i64 %204, 4
  %221 = icmp eq i64 %220, %94
  br i1 %221, label %235, label %203, !llvm.loop !13

222:                                              ; preds = %52, %44
  %223 = phi i64 [ 0, %44 ], [ %74, %52 ]
  %224 = icmp eq i64 %48, 0
  br i1 %224, label %235, label %225

225:                                              ; preds = %222, %225
  %226 = phi i64 [ %232, %225 ], [ %223, %222 ]
  %227 = phi i64 [ %233, %225 ], [ %48, %222 ]
  %228 = load i32*, i32** %45, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 %226
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 %226
  store i32 %230, i32* %231, align 4
  %232 = add nuw nsw i64 %226, 1
  %233 = add i64 %227, -1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %225, !llvm.loop !14

235:                                              ; preds = %200, %203, %222, %225, %183, %89, %34
  %236 = phi %struct.TfLiteIntArray* [ %40, %34 ], [ %91, %89 ], [ %91, %183 ], [ %40, %225 ], [ %40, %222 ], [ %91, %203 ], [ %91, %200 ]
  ret %struct.TfLiteIntArray* %236
}

declare void @TfLiteIntArrayFree(%struct.TfLiteIntArray*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7reshape7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  %8 = add i32 %6, -1
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %12 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %11, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %12(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 118, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0)) #4
  br label %62

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 119, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %17, i32 1) #4
  br label %62

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %28 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %27, align 8
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %28, i64 %29
  br label %31

31:                                               ; preds = %22, %26
  %32 = phi %struct.TfLiteTensor* [ %30, %26 ], [ null, %22 ]
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 5
  br i1 %35, label %61, label %36

36:                                               ; preds = %31
  br i1 %7, label %51, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %37, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %37 ]
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %54

51:                                               ; preds = %36, %46
  %52 = tail call i32 @_ZN6tflite3ops7builtin7reshape12ResizeOutputEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %61, label %62

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  store i32 4, i32* %55, align 8
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %60 = bitcast %union.TfLitePtrUnion* %59 to i8**
  store i8* null, i8** %60, align 8
  br label %61

61:                                               ; preds = %58, %54, %31, %51
  br label %62

62:                                               ; preds = %61, %51, %19, %10
  %63 = phi i32 [ 1, %19 ], [ 1, %10 ], [ 0, %61 ], [ %52, %51 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7reshape4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %13, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 4
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = tail call i32 @_ZN6tflite3ops7builtin7reshape12ResizeOutputEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %50

33:                                               ; preds = %30, %25
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 5
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 5
  %39 = load i64, i64* %38, align 8
  tail call void @TfLiteTensorRealloc(i64 %39, %struct.TfLiteTensor* %26) #4
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 5
  store i64 %39, i64* %40, align 8
  br label %41

41:                                               ; preds = %37, %33
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %43 = bitcast %union.TfLitePtrUnion* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %46 = bitcast %union.TfLitePtrUnion* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 5
  %49 = load i64, i64* %48, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %47, i64 %49, i1 false)
  br label %50

50:                                               ; preds = %30, %41
  %51 = phi i32 [ 0, %41 ], [ %31, %30 ]
  ret i32 %51
}

declare void @TfLiteTensorRealloc(i64, %struct.TfLiteTensor*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_RESHAPEEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_RESHAPEEvE1r to %struct.TfLiteRegistration*)
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !3}
