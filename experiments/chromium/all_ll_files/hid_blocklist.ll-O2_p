; ModuleID = '../../services/device/public/cpp/hid/hid_blocklist.cc'
source_filename = "../../services/device/public/cpp/hid/hid_blocklist.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"struct.device::HidBlocklist::Entry" = type { i8, i16, i8, i16, i8, i16, i8, i16, i8, i8, i32 }
%"class.device::HidBlocklist" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.device::HidBlocklist::Entry"*, %"struct.device::HidBlocklist::Entry"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.device::HidBlocklist::Entry"* }
%"class.device::mojom::HidDeviceInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, i16, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::vector.6", %"class.std::__1::vector.13", i8, i64, i64, i64, %"class.std::__1::basic_string", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i8*, i8*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.18" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.device::mojom::HidCollectionInfo"* }
%"class.device::mojom::HidCollectionInfo" = type { %"class.mojo::InlinedStructPtr", %"class.std::__1::vector.6", i32, %"class.std::__1::vector.24", %"class.std::__1::vector.24", %"class.std::__1::vector.24", %"class.std::__1::vector.13" }
%"class.mojo::InlinedStructPtr" = type { %"class.device::mojom::HidUsageAndPage", i32 }
%"class.device::mojom::HidUsageAndPage" = type { i16, i16 }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"*, %"class.std::__1::__compressed_pair.54" }
%"class.mojo::StructPtr.26" = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.device::mojom::HidReportDescription"* }
%"class.device::mojom::HidReportDescription" = type { i8, %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"*, %"class.std::__1::__compressed_pair.46" }
%"class.mojo::StructPtr.32" = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.device::mojom::HidReportItem"* }
%"class.device::mojom::HidReportItem" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.36", %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.mojo::InlinedStructPtr"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.mojo::StructPtr.32"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.mojo::StructPtr.26"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.mojo::StructPtr"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.std::__1::vector.6" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.60", %"class.std::__1::map", i64 }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i8, [6 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.base::BasicStringPiece"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE = comdat any

@_ZZN6device12HidBlocklist3GetEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN6device12HidBlocklist3GetEvE8instance = internal global i64 0, align 8
@_ZN8switches20kDisableHidBlocklistE = external constant [0 x i8], align 1
@_ZN6device12_GLOBAL__N_114kStaticEntriesE = internal constant [46 x %"struct.device::HidBlocklist::Entry"] [%"struct.device::HidBlocklist::Entry" { i8 0, i16 0, i8 0, i16 0, i8 1, i16 -3632, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2128, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2130, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2131, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2132, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2134, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2136, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2138, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2139, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2414, i8 1, i16 2176, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2499, i8 1, i16 35, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 16, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 24, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 48, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 272, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 273, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 274, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 275, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 276, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 277, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 278, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 288, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 512, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 529, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 1025, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 1026, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 1027, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 1028, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 1029, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 1030, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 1031, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4176, i8 1, i16 1040, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4292, i8 1, i16 -30001, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4617, i8 1, i16 17185, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 4617, i8 1, i16 17186, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 6353, i8 1, i16 20518, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 6724, i8 1, i16 187, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 7693, i8 1, i16 -3666, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 7693, i8 1, i16 -3632, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 7848, i8 1, i16 -4059, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 8352, i8 1, i16 17031, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 9436, i8 1, i16 257, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 9601, i8 1, i16 -3632, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 10942, i8 1, i16 4098, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 11471, i8 1, i16 2176, i8 0, i16 0, i8 0, i16 0, i8 0, i8 0, i32 0 }, %"struct.device::HidBlocklist::Entry" { i8 1, i16 2830, i8 0, i16 0, i8 1, i16 -256, i8 0, i16 0, i8 1, i8 5, i32 2 }], align 16
@.str = private unnamed_addr constant [16 x i8] c"WebHIDBlocklist\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"blocklist_additions\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c":\00", align 1

@_ZN6device12HidBlocklistC1Ev = hidden unnamed_addr alias void (%"class.device::HidBlocklist"*), void (%"class.device::HidBlocklist"*)* @_ZN6device12HidBlocklistC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.device::HidBlocklist"* @_ZN6device12HidBlocklist3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN6device12HidBlocklist3GetEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6device12HidBlocklist3GetEvE8instance) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN6device12HidBlocklist3GetEvE8instance, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #7
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN6device12HidBlocklist3GetEvE8instance) #7
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.device::HidBlocklist"* bitcast (%"class.base::NoDestructor"* @_ZZN6device12HidBlocklist3GetEvE8instance to %"class.device::HidBlocklist"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device12HidBlocklist16IsDeviceExcludedERKNS_5mojom13HidDeviceInfoE(%"class.device::mojom::HidDeviceInfo"* nocapture readonly dereferenceable(312)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %2, align 8
  %4 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 8, i32 0, i32 1
  %5 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %4, align 8
  %6 = icmp eq %"class.mojo::StructPtr"* %3, %5
  br i1 %6, label %122, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %12, %14
  %16 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %20, %22
  %24 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.device::mojom::HidDeviceInfo", %"class.device::mojom::HidDeviceInfo"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %28, %30
  br label %32

32:                                               ; preds = %7, %119
  %33 = phi %"class.mojo::StructPtr"* [ %3, %7 ], [ %120, %119 ]
  %34 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.device::mojom::HidCollectionInfo"*, %"class.device::mojom::HidCollectionInfo"** %34, align 8
  %36 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %35, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"** %36, align 8
  %38 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %35, i64 0, i32 3, i32 0, i32 1
  %39 = load %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"** %38, align 8
  %40 = icmp eq %"class.mojo::StructPtr.26"* %37, %39
  br i1 %10, label %62, label %41

41:                                               ; preds = %32
  br i1 %40, label %63, label %44

42:                                               ; preds = %58
  %43 = icmp eq %"class.mojo::StructPtr.26"* %61, %39
  br i1 %43, label %63, label %44

44:                                               ; preds = %41, %42
  %45 = phi %"class.mojo::StructPtr.26"* [ %61, %42 ], [ %37, %41 ]
  br i1 %15, label %58, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.device::mojom::HidReportDescription"*, %"class.device::mojom::HidReportDescription"** %47, align 8
  %49 = getelementptr inbounds %"class.device::mojom::HidReportDescription", %"class.device::mojom::HidReportDescription"* %48, i64 0, i32 0
  %50 = load i8, i8* %49, align 1
  br label %51

51:                                               ; preds = %55, %46
  %52 = phi i8* [ %12, %46 ], [ %56, %55 ]
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, %50
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds i8, i8* %52, i64 1
  %57 = icmp eq i8* %56, %14
  br i1 %57, label %122, label %51

58:                                               ; preds = %51, %44
  %59 = phi i8* [ %12, %44 ], [ %52, %51 ]
  %60 = icmp eq i8* %59, %14
  %61 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %45, i64 1
  br i1 %60, label %122, label %42

62:                                               ; preds = %32
  br i1 %40, label %63, label %122

63:                                               ; preds = %42, %41, %62
  %64 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %35, i64 0, i32 4, i32 0, i32 0
  %65 = load %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"** %64, align 8
  %66 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %35, i64 0, i32 4, i32 0, i32 1
  %67 = load %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"** %66, align 8
  %68 = icmp eq %"class.mojo::StructPtr.26"* %65, %67
  br i1 %18, label %90, label %69

69:                                               ; preds = %63
  br i1 %68, label %91, label %72

70:                                               ; preds = %86
  %71 = icmp eq %"class.mojo::StructPtr.26"* %89, %67
  br i1 %71, label %91, label %72

72:                                               ; preds = %69, %70
  %73 = phi %"class.mojo::StructPtr.26"* [ %89, %70 ], [ %65, %69 ]
  br i1 %23, label %86, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.device::mojom::HidReportDescription"*, %"class.device::mojom::HidReportDescription"** %75, align 8
  %77 = getelementptr inbounds %"class.device::mojom::HidReportDescription", %"class.device::mojom::HidReportDescription"* %76, i64 0, i32 0
  %78 = load i8, i8* %77, align 1
  br label %79

79:                                               ; preds = %83, %74
  %80 = phi i8* [ %20, %74 ], [ %84, %83 ]
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, %78
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds i8, i8* %80, i64 1
  %85 = icmp eq i8* %84, %22
  br i1 %85, label %122, label %79

86:                                               ; preds = %79, %72
  %87 = phi i8* [ %20, %72 ], [ %80, %79 ]
  %88 = icmp eq i8* %87, %22
  %89 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %73, i64 1
  br i1 %88, label %122, label %70

90:                                               ; preds = %63
  br i1 %68, label %91, label %122

91:                                               ; preds = %70, %69, %90
  %92 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %35, i64 0, i32 5, i32 0, i32 0
  %93 = load %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"** %92, align 8
  %94 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %35, i64 0, i32 5, i32 0, i32 1
  %95 = load %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"** %94, align 8
  %96 = icmp eq %"class.mojo::StructPtr.26"* %93, %95
  br i1 %26, label %118, label %97

97:                                               ; preds = %91
  br i1 %96, label %119, label %100

98:                                               ; preds = %114
  %99 = icmp eq %"class.mojo::StructPtr.26"* %117, %95
  br i1 %99, label %119, label %100

100:                                              ; preds = %97, %98
  %101 = phi %"class.mojo::StructPtr.26"* [ %117, %98 ], [ %93, %97 ]
  br i1 %31, label %114, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %101, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.device::mojom::HidReportDescription"*, %"class.device::mojom::HidReportDescription"** %103, align 8
  %105 = getelementptr inbounds %"class.device::mojom::HidReportDescription", %"class.device::mojom::HidReportDescription"* %104, i64 0, i32 0
  %106 = load i8, i8* %105, align 1
  br label %107

107:                                              ; preds = %111, %102
  %108 = phi i8* [ %28, %102 ], [ %112, %111 ]
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, %106
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds i8, i8* %108, i64 1
  %113 = icmp eq i8* %112, %30
  br i1 %113, label %122, label %107

114:                                              ; preds = %107, %100
  %115 = phi i8* [ %28, %100 ], [ %108, %107 ]
  %116 = icmp eq i8* %115, %30
  %117 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %101, i64 1
  br i1 %116, label %122, label %98

118:                                              ; preds = %91
  br i1 %96, label %119, label %122

119:                                              ; preds = %98, %97, %118
  %120 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %33, i64 1
  %121 = icmp eq %"class.mojo::StructPtr"* %120, %5
  br i1 %121, label %122, label %32

122:                                              ; preds = %62, %90, %118, %119, %58, %86, %114, %55, %83, %111, %1
  %123 = phi i1 [ true, %1 ], [ false, %111 ], [ false, %83 ], [ false, %55 ], [ false, %114 ], [ false, %86 ], [ false, %58 ], [ false, %62 ], [ false, %90 ], [ false, %118 ], [ true, %119 ]
  ret i1 %123
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device12HidBlocklist21GetProtectedReportIdsENS0_10ReportTypeEttRKNSt3__16vectorIN4mojo9StructPtrINS_5mojom17HidCollectionInfoEEENS2_9allocatorIS8_EEEE(%"class.std::__1::vector.6"* noalias nocapture sret, %"class.device::HidBlocklist"* nocapture readonly, i32, i16 zeroext, i16 zeroext, %"class.std::__1::vector.13"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::set", align 8
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #7
  %9 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kDisableHidBlocklistE, i64 0, i64 0)) #7
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #7
  br label %120

12:                                               ; preds = %6
  %13 = bitcast %"class.std::__1::set"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %14, align 8
  br label %24

18:                                               ; preds = %24
  %19 = getelementptr inbounds %"class.device::HidBlocklist", %"class.device::HidBlocklist"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.device::HidBlocklist::Entry"*, %"struct.device::HidBlocklist::Entry"** %19, align 8
  %21 = getelementptr inbounds %"class.device::HidBlocklist", %"class.device::HidBlocklist"* %1, i64 0, i32 0, i32 0, i32 1
  %22 = load %"struct.device::HidBlocklist::Entry"*, %"struct.device::HidBlocklist::Entry"** %21, align 8
  %23 = icmp eq %"struct.device::HidBlocklist::Entry"* %20, %22
  br i1 %23, label %28, label %116

24:                                               ; preds = %12, %24
  %25 = phi %"struct.device::HidBlocklist::Entry"* [ getelementptr inbounds ([46 x %"struct.device::HidBlocklist::Entry"], [46 x %"struct.device::HidBlocklist::Entry"]* @_ZN6device12_GLOBAL__N_114kStaticEntriesE, i64 0, i64 0), %12 ], [ %26, %24 ]
  call fastcc void @_ZN6device12_GLOBAL__N_119CheckBlocklistEntryERKNS_12HidBlocklist5EntryENS1_10ReportTypeEttRKNSt3__16vectorIN4mojo9StructPtrINS_5mojom17HidCollectionInfoEEENS6_9allocatorISC_EEEERNS6_3setIhNS6_4lessIhEENSD_IhEEEE(%"struct.device::HidBlocklist::Entry"* dereferenceable(24) %25, i32 %2, i16 zeroext %3, i16 zeroext %4, %"class.std::__1::vector.13"* dereferenceable(24) %5, %"class.std::__1::set"* nonnull dereferenceable(24) %7)
  %26 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %25, i64 1
  %27 = icmp eq %"struct.device::HidBlocklist::Entry"* %26, getelementptr inbounds ([46 x %"struct.device::HidBlocklist::Entry"], [46 x %"struct.device::HidBlocklist::Entry"]* @_ZN6device12_GLOBAL__N_114kStaticEntriesE, i64 1, i64 0)
  br i1 %27, label %18, label %24

28:                                               ; preds = %116, %18
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %30 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #7
  %31 = icmp eq %"class.std::__1::__tree_end_node"* %29, %16
  br i1 %31, label %112, label %32

32:                                               ; preds = %28, %63
  %33 = phi i64 [ %35, %63 ], [ 0, %28 ]
  %34 = phi %"class.std::__1::__tree_end_node"* [ %64, %63 ], [ %29, %28 ]
  %35 = add nuw nsw i64 %33, 1
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 1, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %47

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node_base"*
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 2
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_end_node"**
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %40
  br i1 %46, label %63, label %54

47:                                               ; preds = %32, %47
  %48 = phi %"class.std::__1::__tree_node_base"* [ %50, %47 ], [ %37, %32 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 0
  br label %63

54:                                               ; preds = %39, %54
  %55 = phi %"class.std::__1::__tree_end_node"** [ %58, %54 ], [ %42, %39 ]
  %56 = bitcast %"class.std::__1::__tree_end_node"** %55 to %"class.std::__1::__tree_node_base"**
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 2
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, %57
  br i1 %62, label %63, label %54

63:                                               ; preds = %54, %52, %39
  %64 = phi %"class.std::__1::__tree_end_node"* [ %53, %52 ], [ %43, %39 ], [ %59, %54 ]
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %64, %16
  br i1 %65, label %66, label %32

66:                                               ; preds = %63
  %67 = call i8* @_Znwm(i64 %35) #8
  %68 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  store i8* %67, i8** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  store i8* %67, i8** %69, align 8
  %70 = getelementptr inbounds i8, i8* %67, i64 %35
  %71 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %70, i8** %71, align 8
  br label %72

72:                                               ; preds = %105, %66
  %73 = phi i8* [ %107, %105 ], [ %67, %66 ]
  %74 = phi %"class.std::__1::__tree_end_node"* [ %106, %105 ], [ %29, %66 ]
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node"*
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %75, i64 0, i32 1
  %77 = load i8, i8* %76, align 1
  store i8 %77, i8* %73, align 1
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 1, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %81, label %89

81:                                               ; preds = %72
  %82 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node_base"*
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 2
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_end_node"**
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, %82
  br i1 %88, label %105, label %96

89:                                               ; preds = %72, %89
  %90 = phi %"class.std::__1::__tree_node_base"* [ %92, %89 ], [ %79, %72 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %89

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0
  br label %105

96:                                               ; preds = %81, %96
  %97 = phi %"class.std::__1::__tree_end_node"** [ %100, %96 ], [ %84, %81 ]
  %98 = bitcast %"class.std::__1::__tree_end_node"** %97 to %"class.std::__1::__tree_node_base"**
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  br i1 %104, label %105, label %96

105:                                              ; preds = %96, %94, %81
  %106 = phi %"class.std::__1::__tree_end_node"* [ %95, %94 ], [ %85, %81 ], [ %101, %96 ]
  %107 = getelementptr inbounds i8, i8* %73, i64 1
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %106, %16
  br i1 %108, label %109, label %72

109:                                              ; preds = %105
  %110 = bitcast i8** %68 to i64*
  %111 = ptrtoint i8* %107 to i64
  store i64 %111, i64* %110, align 8
  br label %112

112:                                              ; preds = %28, %109
  %113 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0
  %114 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %115 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %114, align 8
  call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree.75"* nonnull %113, %"class.std::__1::__tree_node"* %115) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #7
  br label %120

116:                                              ; preds = %18, %116
  %117 = phi %"struct.device::HidBlocklist::Entry"* [ %118, %116 ], [ %20, %18 ]
  call fastcc void @_ZN6device12_GLOBAL__N_119CheckBlocklistEntryERKNS_12HidBlocklist5EntryENS1_10ReportTypeEttRKNSt3__16vectorIN4mojo9StructPtrINS_5mojom17HidCollectionInfoEEENS6_9allocatorISC_EEEERNS6_3setIhNS6_4lessIhEENSD_IhEEEE(%"struct.device::HidBlocklist::Entry"* dereferenceable(24) %117, i32 %2, i16 zeroext %3, i16 zeroext %4, %"class.std::__1::vector.13"* dereferenceable(24) %5, %"class.std::__1::set"* nonnull dereferenceable(24) %7)
  %118 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %117, i64 1
  %119 = icmp eq %"struct.device::HidBlocklist::Entry"* %118, %22
  br i1 %119, label %28, label %116

120:                                              ; preds = %112, %10
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6device12_GLOBAL__N_119CheckBlocklistEntryERKNS_12HidBlocklist5EntryENS1_10ReportTypeEttRKNSt3__16vectorIN4mojo9StructPtrINS_5mojom17HidCollectionInfoEEENS6_9allocatorISC_EEEERNS6_3setIhNS6_4lessIhEENSD_IhEEEE(%"struct.device::HidBlocklist::Entry"* nocapture readonly dereferenceable(24), i32, i16 zeroext, i16 zeroext, %"class.std::__1::vector.13"* nocapture readonly dereferenceable(24), %"class.std::__1::set"* dereferenceable(24)) unnamed_addr #0 {
  %7 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 10
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = icmp eq i32 %8, %1
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %167

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 0
  %14 = load i8, i8* %13, align 4, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 1
  %18 = load i16, i16* %17, align 2
  %19 = icmp eq i16 %18, %2
  br i1 %19, label %20, label %167

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 4, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 3
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, %3
  br i1 %27, label %28, label %167

28:                                               ; preds = %24, %20, %12
  %29 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %4, i64 0, i32 0, i32 0
  %30 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %4, i64 0, i32 0, i32 1
  %32 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %31, align 8
  %33 = icmp eq %"class.mojo::StructPtr"* %30, %32
  br i1 %33, label %167, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 5
  %37 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 7
  %39 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 8
  %40 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %0, i64 0, i32 9
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node"**
  %43 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::set"* %5 to i64*
  %47 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %48

48:                                               ; preds = %34, %164
  %49 = phi %"class.mojo::StructPtr"* [ %30, %34 ], [ %165, %164 ]
  %50 = load i8, i8* %35, align 4, !range !3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.device::mojom::HidCollectionInfo"*, %"class.device::mojom::HidCollectionInfo"** %53, align 8
  br label %70

55:                                               ; preds = %48
  %56 = load i16, i16* %36, align 2
  %57 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.device::mojom::HidCollectionInfo"*, %"class.device::mojom::HidCollectionInfo"** %57, align 8
  %59 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %58, i64 0, i32 0, i32 0, i32 1
  %60 = load i16, i16* %59, align 2
  %61 = icmp eq i16 %56, %60
  br i1 %61, label %62, label %164

62:                                               ; preds = %55
  %63 = load i8, i8* %37, align 4, !range !3
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = load i16, i16* %38, align 2
  %67 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %58, i64 0, i32 0, i32 0, i32 0
  %68 = load i16, i16* %67, align 2
  %69 = icmp eq i16 %66, %68
  br i1 %69, label %70, label %164

70:                                               ; preds = %52, %65, %62
  %71 = phi %"class.device::mojom::HidCollectionInfo"* [ %54, %52 ], [ %58, %65 ], [ %58, %62 ]
  switch i32 %1, label %80 [
    i32 1, label %72
    i32 2, label %74
    i32 3, label %76
    i32 0, label %78
  ]

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %71, i64 0, i32 3
  br label %81

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %71, i64 0, i32 4
  br label %81

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %71, i64 0, i32 5
  br label %81

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.device::mojom::HidCollectionInfo", %"class.device::mojom::HidCollectionInfo"* %71, i64 0, i32 3
  br label %81

80:                                               ; preds = %70
  unreachable

81:                                               ; preds = %72, %74, %76, %78
  %82 = phi %"class.std::__1::vector.24"* [ %79, %78 ], [ %77, %76 ], [ %75, %74 ], [ %73, %72 ]
  %83 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %82, i64 0, i32 0, i32 1
  %86 = load %"class.mojo::StructPtr.26"*, %"class.mojo::StructPtr.26"** %85, align 8
  %87 = icmp eq %"class.mojo::StructPtr.26"* %84, %86
  br i1 %87, label %164, label %88

88:                                               ; preds = %81, %161
  %89 = phi %"class.mojo::StructPtr.26"* [ %162, %161 ], [ %84, %81 ]
  %90 = load i8, i8* %39, align 4, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.device::mojom::HidReportDescription"*, %"class.device::mojom::HidReportDescription"** %93, align 8
  br label %102

95:                                               ; preds = %88
  %96 = load i8, i8* %40, align 1
  %97 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.device::mojom::HidReportDescription"*, %"class.device::mojom::HidReportDescription"** %97, align 8
  %99 = getelementptr inbounds %"class.device::mojom::HidReportDescription", %"class.device::mojom::HidReportDescription"* %98, i64 0, i32 0
  %100 = load i8, i8* %99, align 8
  %101 = icmp eq i8 %96, %100
  br i1 %101, label %102, label %161

102:                                              ; preds = %92, %95
  %103 = phi %"class.device::mojom::HidReportDescription"* [ %94, %92 ], [ %98, %95 ]
  %104 = getelementptr inbounds %"class.device::mojom::HidReportDescription", %"class.device::mojom::HidReportDescription"* %103, i64 0, i32 0
  %105 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %106 = icmp eq %"class.std::__1::__tree_node"* %105, null
  br i1 %106, label %135, label %107

107:                                              ; preds = %102
  %108 = load i8, i8* %104, align 1
  br label %109

109:                                              ; preds = %131, %107
  %110 = phi %"class.std::__1::__tree_node"* [ %134, %131 ], [ %105, %107 ]
  %111 = phi %"class.std::__1::__tree_node_base"** [ %133, %131 ], [ %43, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 1
  %113 = load i8, i8* %112, align 1
  %114 = icmp ult i8 %108, %113
  br i1 %114, label %115, label %121

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %119, label %131

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 0, i32 0
  br label %135

121:                                              ; preds = %109
  %122 = icmp ult i8 %113, %108
  br i1 %122, label %123, label %129

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 0, i32 1
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %127, label %131

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 0, i32 0
  br label %135

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 0, i32 0
  br label %135

131:                                              ; preds = %123, %115
  %132 = phi %"class.std::__1::__tree_node_base"* [ %117, %115 ], [ %125, %123 ]
  %133 = phi %"class.std::__1::__tree_node_base"** [ %116, %115 ], [ %124, %123 ]
  %134 = bitcast %"class.std::__1::__tree_node_base"* %132 to %"class.std::__1::__tree_node"*
  br label %109

135:                                              ; preds = %102, %129, %127, %119
  %136 = phi %"class.std::__1::__tree_end_node"* [ %120, %119 ], [ %128, %127 ], [ %130, %129 ], [ %41, %102 ]
  %137 = phi %"class.std::__1::__tree_node_base"** [ %116, %119 ], [ %124, %127 ], [ %111, %129 ], [ %44, %102 ]
  %138 = bitcast %"class.std::__1::__tree_node_base"** %137 to %"class.std::__1::__tree_node"**
  %139 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node"* %139, null
  br i1 %140, label %141, label %161

141:                                              ; preds = %135
  %142 = tail call i8* @_Znwm(i64 32) #8, !noalias !4
  %143 = getelementptr inbounds i8, i8* %142, i64 25
  %144 = load i8, i8* %104, align 1, !noalias !4
  store i8 %144, i8* %143, align 1, !noalias !4
  %145 = bitcast i8* %142 to %"class.std::__1::__tree_node_base"*
  %146 = getelementptr inbounds i8, i8* %142, i64 16
  %147 = bitcast i8* %146 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %136, %"class.std::__1::__tree_end_node"** %147, align 8
  %148 = bitcast %"class.std::__1::__tree_node_base"** %137 to i8**
  store i8* %142, i8** %148, align 8
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %141
  %154 = ptrtoint %"class.std::__1::__tree_node_base"* %151 to i64
  store i64 %154, i64* %46, align 8
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  br label %156

156:                                              ; preds = %153, %141
  %157 = phi %"class.std::__1::__tree_node_base"* [ %145, %141 ], [ %155, %153 ]
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %158, %"class.std::__1::__tree_node_base"* %157) #7
  %159 = load i64, i64* %47, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %47, align 8
  br label %161

161:                                              ; preds = %156, %135, %95
  %162 = getelementptr inbounds %"class.mojo::StructPtr.26", %"class.mojo::StructPtr.26"* %89, i64 1
  %163 = icmp eq %"class.mojo::StructPtr.26"* %162, %86
  br i1 %163, label %164, label %88

164:                                              ; preds = %161, %81, %65, %55
  %165 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %49, i64 1
  %166 = icmp eq %"class.mojo::StructPtr"* %165, %32
  br i1 %166, label %167, label %48

167:                                              ; preds = %164, %28, %6, %24, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device12HidBlocklist32PopulateWithServerProvidedValuesEv(%"class.device::HidBlocklist"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::BasicStringPiece", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.84", align 8
  %7 = alloca %"class.std::__1::vector.84", align 8
  %8 = alloca i32, align 4
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #7
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 15, i8* %15, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i64 15, i1 false) #7
  %16 = getelementptr inbounds i8, i8* %12, i64 15
  store i8 0, i8* %16, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #7
  %18 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 19, i8* %19, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 19, i1 false) #7
  %20 = getelementptr inbounds i8, i8* %17, i64 19
  store i8 0, i8* %20, align 1
  call void @_ZN10variations22GetVariationParamValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #7
  %21 = load i8, i8* %19, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #8
  br label %26

26:                                               ; preds = %1, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #7
  %27 = load i8, i8* %15, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #8
  br label %32

32:                                               ; preds = %26, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #7
  %33 = bitcast %"class.std::__1::vector.84"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #7
  %34 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i8*, i8** %10, align 8
  %39 = select i1 %37, i8* %38, i8* %9
  %40 = load i64, i64* %11, align 8
  %41 = zext i8 %36 to i64
  %42 = select i1 %37, i64 %40, i64 %41
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.84"* nonnull sret %6, i8* %39, i64 %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i32 1, i32 1) #7
  %43 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %6, i64 0, i32 0, i32 0
  %44 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %6, i64 0, i32 0, i32 1
  %46 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %45, align 8
  %47 = icmp eq %"class.base::BasicStringPiece"* %44, %46
  br i1 %47, label %67, label %48

48:                                               ; preds = %32
  %49 = bitcast %"class.std::__1::vector.84"* %7 to i8*
  %50 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %7, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %7, i64 0, i32 0, i32 1
  %52 = bitcast %"class.base::BasicStringPiece"** %51 to i64*
  %53 = bitcast %"class.std::__1::vector.84"* %7 to i64*
  %54 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  %55 = bitcast %"class.base::BasicStringPiece"* %2 to i64*
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %57 = bitcast i32* %8 to i8*
  %58 = getelementptr inbounds %"class.device::HidBlocklist", %"class.device::HidBlocklist"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.device::HidBlocklist", %"class.device::HidBlocklist"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"struct.device::HidBlocklist::Entry"** %58 to i64*
  %61 = bitcast %"class.device::HidBlocklist"* %0 to i64*
  %62 = bitcast %"struct.device::HidBlocklist::Entry"** %59 to i64*
  %63 = getelementptr inbounds %"class.device::HidBlocklist", %"class.device::HidBlocklist"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::vector.84"* %7 to i8*
  br label %80

65:                                               ; preds = %400
  %66 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %43, align 8
  br label %67

67:                                               ; preds = %65, %32
  %68 = phi %"class.base::BasicStringPiece"* [ %66, %65 ], [ %44, %32 ]
  %69 = icmp eq %"class.base::BasicStringPiece"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = ptrtoint %"class.base::BasicStringPiece"* %68 to i64
  %72 = bitcast %"class.base::BasicStringPiece"** %45 to i64*
  store i64 %71, i64* %72, align 8
  %73 = bitcast %"class.base::BasicStringPiece"* %68 to i8*
  call void @_ZdlPv(i8* %73) #8
  br label %74

74:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #7
  %75 = load i8, i8* %35, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %78) #8
  br label %79

79:                                               ; preds = %74, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  ret void

80:                                               ; preds = %48, %400
  %81 = phi %"class.base::BasicStringPiece"* [ %44, %48 ], [ %401, %400 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #7
  %82 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %81, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %81, i64 0, i32 1
  %85 = load i64, i64* %84, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.84"* nonnull sret %7, i8* %83, i64 %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1, i32 0, i32 0) #7
  %86 = load i64, i64* %52, align 8
  %87 = load i64, i64* %53, align 8
  %88 = sub i64 %86, %87
  %89 = icmp eq i64 %88, 96
  %90 = inttoptr i64 %87 to %"class.base::BasicStringPiece"*
  %91 = inttoptr i64 %87 to %"class.base::BasicStringPiece"*
  br i1 %89, label %92, label %394

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %110, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i64 %94, 4
  br i1 %99, label %100, label %392

100:                                              ; preds = %96
  %101 = load i8, i8* %98, align 1
  %102 = add i8 %101, -48
  %103 = icmp ult i8 %102, 10
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  switch i8 %101, label %392 [
    i8 102, label %105
    i8 101, label %105
    i8 100, label %105
    i8 99, label %105
    i8 98, label %105
    i8 97, label %105
    i8 70, label %105
    i8 69, label %105
    i8 68, label %105
    i8 67, label %105
    i8 66, label %105
    i8 65, label %105
  ]

105:                                              ; preds = %104, %104, %104, %104, %104, %104, %104, %104, %104, %104, %104, %104, %100
  %106 = getelementptr inbounds i8, i8* %98, i64 1
  %107 = load i8, i8* %106, align 1
  %108 = add i8 %107, -48
  %109 = icmp ult i8 %108, 10
  br i1 %109, label %404, label %403

110:                                              ; preds = %410, %415, %415, %415, %415, %415, %415, %415, %415, %415, %415, %415, %415, %92
  %111 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 1, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %128, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 1, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = icmp eq i64 %112, 4
  br i1 %117, label %118, label %392

118:                                              ; preds = %114
  %119 = load i8, i8* %116, align 1
  %120 = add i8 %119, -48
  %121 = icmp ult i8 %120, 10
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  switch i8 %119, label %392 [
    i8 102, label %123
    i8 101, label %123
    i8 100, label %123
    i8 99, label %123
    i8 98, label %123
    i8 97, label %123
    i8 70, label %123
    i8 69, label %123
    i8 68, label %123
    i8 67, label %123
    i8 66, label %123
    i8 65, label %123
  ]

123:                                              ; preds = %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %118
  %124 = getelementptr inbounds i8, i8* %116, i64 1
  %125 = load i8, i8* %124, align 1
  %126 = add i8 %125, -48
  %127 = icmp ult i8 %126, 10
  br i1 %127, label %417, label %416

128:                                              ; preds = %423, %428, %428, %428, %428, %428, %428, %428, %428, %428, %428, %428, %428, %110
  %129 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 2, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %146, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 2, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = icmp eq i64 %130, 4
  br i1 %135, label %136, label %392

136:                                              ; preds = %132
  %137 = load i8, i8* %134, align 1
  %138 = add i8 %137, -48
  %139 = icmp ult i8 %138, 10
  br i1 %139, label %141, label %140

140:                                              ; preds = %136
  switch i8 %137, label %392 [
    i8 102, label %141
    i8 101, label %141
    i8 100, label %141
    i8 99, label %141
    i8 98, label %141
    i8 97, label %141
    i8 70, label %141
    i8 69, label %141
    i8 68, label %141
    i8 67, label %141
    i8 66, label %141
    i8 65, label %141
  ]

141:                                              ; preds = %140, %140, %140, %140, %140, %140, %140, %140, %140, %140, %140, %140, %136
  %142 = getelementptr inbounds i8, i8* %134, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = add i8 %143, -48
  %145 = icmp ult i8 %144, 10
  br i1 %145, label %430, label %429

146:                                              ; preds = %436, %441, %441, %441, %441, %441, %441, %441, %441, %441, %441, %441, %441, %128
  %147 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 3, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 3, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = icmp eq i64 %148, 4
  br i1 %153, label %154, label %392

154:                                              ; preds = %150
  %155 = load i8, i8* %152, align 1
  %156 = add i8 %155, -48
  %157 = icmp ult i8 %156, 10
  br i1 %157, label %159, label %158

158:                                              ; preds = %154
  switch i8 %155, label %392 [
    i8 102, label %159
    i8 101, label %159
    i8 100, label %159
    i8 99, label %159
    i8 98, label %159
    i8 97, label %159
    i8 70, label %159
    i8 69, label %159
    i8 68, label %159
    i8 67, label %159
    i8 66, label %159
    i8 65, label %159
  ]

159:                                              ; preds = %158, %158, %158, %158, %158, %158, %158, %158, %158, %158, %158, %158, %154
  %160 = getelementptr inbounds i8, i8* %152, i64 1
  %161 = load i8, i8* %160, align 1
  %162 = add i8 %161, -48
  %163 = icmp ult i8 %162, 10
  br i1 %163, label %443, label %442

164:                                              ; preds = %449, %454, %454, %454, %454, %454, %454, %454, %454, %454, %454, %454, %454, %146
  %165 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 4, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %182, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 4, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = icmp eq i64 %166, 2
  br i1 %171, label %172, label %392

172:                                              ; preds = %168
  %173 = load i8, i8* %170, align 1
  %174 = add i8 %173, -48
  %175 = icmp ult i8 %174, 10
  br i1 %175, label %177, label %176

176:                                              ; preds = %172
  switch i8 %173, label %392 [
    i8 102, label %177
    i8 101, label %177
    i8 100, label %177
    i8 99, label %177
    i8 98, label %177
    i8 97, label %177
    i8 70, label %177
    i8 69, label %177
    i8 68, label %177
    i8 67, label %177
    i8 66, label %177
    i8 65, label %177
  ]

177:                                              ; preds = %176, %176, %176, %176, %176, %176, %176, %176, %176, %176, %176, %176, %172
  %178 = getelementptr inbounds i8, i8* %170, i64 1
  %179 = load i8, i8* %178, align 1
  %180 = add i8 %179, -48
  %181 = icmp ult i8 %180, 10
  br i1 %181, label %182, label %455

182:                                              ; preds = %177, %455, %455, %455, %455, %455, %455, %455, %455, %455, %455, %455, %455, %164
  %183 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 5, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %205, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 5, i32 0
  %188 = bitcast i8** %187 to i64*
  %189 = load i64, i64* %188, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  store i64 %189, i64* %55, align 8
  store i64 %184, i64* %56, align 8
  %190 = icmp eq i64 %184, 1
  br i1 %190, label %191, label %199

191:                                              ; preds = %186
  %192 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %2, i64 0) #7
  %193 = load i8, i8* %192, align 1
  %194 = icmp eq i8 %193, 73
  br i1 %194, label %200, label %195

195:                                              ; preds = %191
  %196 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %2, i64 0) #7
  %197 = load i8, i8* %196, align 1
  %198 = icmp eq i8 %197, 79
  br i1 %198, label %200, label %201

199:                                              ; preds = %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  br label %392

200:                                              ; preds = %195, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  br label %205

201:                                              ; preds = %195
  %202 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %2, i64 0) #7
  %203 = load i8, i8* %202, align 1
  %204 = icmp eq i8 %203, 70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  br i1 %204, label %205, label %392

205:                                              ; preds = %200, %201, %182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #7
  store i32 -1431655766, i32* %8, align 4
  %206 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8
  %207 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %206, i64 0, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %206, i64 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %212, i64 %208, i32* nonnull %8) #7
  %214 = load i32, i32* %8, align 4
  %215 = trunc i32 %214 to i16
  %216 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8
  br label %217

217:                                              ; preds = %210, %205
  %218 = phi %"class.base::BasicStringPiece"* [ %206, %205 ], [ %216, %210 ]
  %219 = phi i16 [ 0, %205 ], [ %215, %210 ]
  %220 = phi i8 [ 0, %205 ], [ 1, %210 ]
  %221 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %218, i64 1, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %231, label %224

224:                                              ; preds = %217
  %225 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %218, i64 1, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %226, i64 %222, i32* nonnull %8) #7
  %228 = load i32, i32* %8, align 4
  %229 = trunc i32 %228 to i16
  %230 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8
  br label %231

231:                                              ; preds = %224, %217
  %232 = phi %"class.base::BasicStringPiece"* [ %218, %217 ], [ %230, %224 ]
  %233 = phi i16 [ 0, %217 ], [ %229, %224 ]
  %234 = phi i8 [ 0, %217 ], [ 1, %224 ]
  %235 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %232, i64 2, i32 1
  %236 = load i64, i64* %235, align 8
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %245, label %238

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %232, i64 2, i32 0
  %240 = load i8*, i8** %239, align 8
  %241 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %240, i64 %236, i32* nonnull %8) #7
  %242 = load i32, i32* %8, align 4
  %243 = trunc i32 %242 to i16
  %244 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8
  br label %245

245:                                              ; preds = %238, %231
  %246 = phi %"class.base::BasicStringPiece"* [ %232, %231 ], [ %244, %238 ]
  %247 = phi i16 [ 0, %231 ], [ %243, %238 ]
  %248 = phi i8 [ 0, %231 ], [ 1, %238 ]
  %249 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %246, i64 3, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %259, label %252

252:                                              ; preds = %245
  %253 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %246, i64 3, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %254, i64 %250, i32* nonnull %8) #7
  %256 = load i32, i32* %8, align 4
  %257 = trunc i32 %256 to i16
  %258 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8
  br label %259

259:                                              ; preds = %252, %245
  %260 = phi %"class.base::BasicStringPiece"* [ %246, %245 ], [ %258, %252 ]
  %261 = phi i8 [ 0, %245 ], [ 1, %252 ]
  %262 = phi i16 [ 0, %245 ], [ %257, %252 ]
  %263 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %260, i64 4, i32 1
  %264 = load i64, i64* %263, align 8
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %273, label %266

266:                                              ; preds = %259
  %267 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %260, i64 4, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %268, i64 %264, i32* nonnull %8) #7
  %270 = load i32, i32* %8, align 4
  %271 = trunc i32 %270 to i8
  %272 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8
  br label %273

273:                                              ; preds = %266, %259
  %274 = phi %"class.base::BasicStringPiece"* [ %260, %259 ], [ %272, %266 ]
  %275 = phi i8 [ 0, %259 ], [ 1, %266 ]
  %276 = phi i8 [ 0, %259 ], [ %271, %266 ]
  %277 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %274, i64 5, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %274, i64 5, i32 1
  %280 = load i64, i64* %279, align 8
  %281 = icmp eq i64 %280, 1
  br i1 %281, label %282, label %292

282:                                              ; preds = %273
  %283 = load i8, i8* %278, align 1
  %284 = icmp eq i8 %283, 73
  br i1 %284, label %292, label %285

285:                                              ; preds = %282
  %286 = load i8, i8* %278, align 1
  %287 = icmp eq i8 %286, 79
  br i1 %287, label %292, label %288

288:                                              ; preds = %285
  %289 = load i8, i8* %278, align 1
  %290 = icmp eq i8 %289, 70
  %291 = select i1 %290, i32 3, i32 0
  br label %292

292:                                              ; preds = %273, %288, %285, %282
  %293 = phi i32 [ 1, %282 ], [ 2, %285 ], [ %291, %288 ], [ 0, %273 ]
  %294 = icmp ne i8 %220, 0
  %295 = icmp eq i8 %234, 0
  %296 = or i1 %294, %295
  br i1 %296, label %297, label %391

297:                                              ; preds = %292
  %298 = icmp ne i8 %248, 0
  %299 = icmp eq i8 %261, 0
  %300 = or i1 %298, %299
  br i1 %300, label %301, label %391

301:                                              ; preds = %297
  %302 = load %"struct.device::HidBlocklist::Entry"*, %"struct.device::HidBlocklist::Entry"** %58, align 8
  %303 = load %"struct.device::HidBlocklist::Entry"*, %"struct.device::HidBlocklist::Entry"** %59, align 8
  %304 = icmp eq %"struct.device::HidBlocklist::Entry"* %302, %303
  %305 = ptrtoint %"struct.device::HidBlocklist::Entry"* %303 to i64
  br i1 %304, label %326, label %306

306:                                              ; preds = %301
  %307 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 0
  store i8 %220, i8* %307, align 4
  %308 = getelementptr inbounds i8, i8* %307, i64 1
  store i8 0, i8* %308, align 1
  %309 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 1
  store i16 %219, i16* %309, align 2
  %310 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 2
  store i8 %234, i8* %310, align 4
  %311 = getelementptr inbounds i8, i8* %307, i64 5
  store i8 0, i8* %311, align 1
  %312 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 3
  store i16 %233, i16* %312, align 2
  %313 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 4
  store i8 %248, i8* %313, align 4
  %314 = getelementptr inbounds i8, i8* %307, i64 9
  store i8 0, i8* %314, align 1
  %315 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 5
  store i16 %247, i16* %315, align 2
  %316 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 6
  store i8 %261, i8* %316, align 4
  %317 = getelementptr inbounds i8, i8* %307, i64 13
  store i8 0, i8* %317, align 1
  %318 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 7
  store i16 %262, i16* %318, align 2
  %319 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 8
  store i8 %275, i8* %319, align 4
  %320 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 9
  store i8 %276, i8* %320, align 1
  %321 = getelementptr inbounds i8, i8* %307, i64 18
  %322 = bitcast i8* %321 to i16*
  store i16 0, i16* %322, align 2
  %323 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 0, i32 10
  store i32 %293, i32* %323, align 4
  %324 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %302, i64 1
  %325 = ptrtoint %"struct.device::HidBlocklist::Entry"* %324 to i64
  store i64 %325, i64* %60, align 8
  br label %391

326:                                              ; preds = %301
  %327 = ptrtoint %"struct.device::HidBlocklist::Entry"* %302 to i64
  %328 = load i64, i64* %61, align 8
  %329 = sub i64 %327, %328
  %330 = sdiv exact i64 %329, 24
  %331 = add nsw i64 %330, 1
  %332 = icmp ugt i64 %331, 768614336404564650
  br i1 %332, label %333, label %335

333:                                              ; preds = %326
  %334 = bitcast %"class.device::HidBlocklist"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %334) #9
  unreachable

335:                                              ; preds = %326
  %336 = sub i64 %305, %328
  %337 = sdiv exact i64 %336, 24
  %338 = icmp ult i64 %337, 384307168202282325
  br i1 %338, label %339, label %344

339:                                              ; preds = %335
  %340 = shl nsw i64 %337, 1
  %341 = icmp ult i64 %340, %331
  %342 = select i1 %341, i64 %331, i64 %340
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %349, label %344

344:                                              ; preds = %339, %335
  %345 = phi i64 [ %342, %339 ], [ 768614336404564650, %335 ]
  %346 = mul i64 %345, 24
  %347 = call i8* @_Znwm(i64 %346) #8
  %348 = bitcast i8* %347 to %"struct.device::HidBlocklist::Entry"*
  br label %349

349:                                              ; preds = %344, %339
  %350 = phi i64 [ %345, %344 ], [ 0, %339 ]
  %351 = phi %"struct.device::HidBlocklist::Entry"* [ %348, %344 ], [ null, %339 ]
  %352 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330
  %353 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %350
  %354 = ptrtoint %"struct.device::HidBlocklist::Entry"* %353 to i64
  %355 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %352, i64 0, i32 0
  store i8 %220, i8* %355, align 4
  %356 = getelementptr inbounds i8, i8* %355, i64 1
  store i8 0, i8* %356, align 1
  %357 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 1
  store i16 %219, i16* %357, align 2
  %358 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 2
  store i8 %234, i8* %358, align 4
  %359 = getelementptr inbounds i8, i8* %355, i64 5
  store i8 0, i8* %359, align 1
  %360 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 3
  store i16 %233, i16* %360, align 2
  %361 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 4
  store i8 %248, i8* %361, align 4
  %362 = getelementptr inbounds i8, i8* %355, i64 9
  store i8 0, i8* %362, align 1
  %363 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 5
  store i16 %247, i16* %363, align 2
  %364 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 6
  store i8 %261, i8* %364, align 4
  %365 = getelementptr inbounds i8, i8* %355, i64 13
  store i8 0, i8* %365, align 1
  %366 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 7
  store i16 %262, i16* %366, align 2
  %367 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 8
  store i8 %275, i8* %367, align 4
  %368 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 9
  store i8 %276, i8* %368, align 1
  %369 = getelementptr inbounds i8, i8* %355, i64 18
  %370 = bitcast i8* %369 to i16*
  store i16 0, i16* %370, align 2
  %371 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %351, i64 %330, i32 10
  store i32 %293, i32* %371, align 4
  %372 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %352, i64 1
  %373 = ptrtoint %"struct.device::HidBlocklist::Entry"* %372 to i64
  %374 = load %"struct.device::HidBlocklist::Entry"*, %"struct.device::HidBlocklist::Entry"** %63, align 8
  %375 = load i64, i64* %60, align 8
  %376 = ptrtoint %"struct.device::HidBlocklist::Entry"* %374 to i64
  %377 = sub i64 %375, %376
  %378 = sdiv exact i64 %377, -24
  %379 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %352, i64 %378
  %380 = ptrtoint %"struct.device::HidBlocklist::Entry"* %379 to i64
  %381 = icmp sgt i64 %377, 0
  br i1 %381, label %382, label %386

382:                                              ; preds = %349
  %383 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %379, i64 0, i32 0
  %384 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %374, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %383, i8* align 4 %384, i64 %377, i1 false) #7
  %385 = load %"struct.device::HidBlocklist::Entry"*, %"struct.device::HidBlocklist::Entry"** %63, align 8
  br label %386

386:                                              ; preds = %382, %349
  %387 = phi %"struct.device::HidBlocklist::Entry"* [ %374, %349 ], [ %385, %382 ]
  store i64 %380, i64* %61, align 8
  store i64 %373, i64* %60, align 8
  store i64 %354, i64* %62, align 8
  %388 = icmp eq %"struct.device::HidBlocklist::Entry"* %387, null
  br i1 %388, label %391, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"struct.device::HidBlocklist::Entry", %"struct.device::HidBlocklist::Entry"* %387, i64 0, i32 0
  call void @_ZdlPv(i8* %390) #8
  br label %391

391:                                              ; preds = %297, %292, %389, %386, %306
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #7
  br label %392

392:                                              ; preds = %104, %403, %409, %415, %122, %416, %422, %428, %140, %429, %435, %441, %158, %442, %448, %454, %176, %455, %391, %201, %199, %96, %114, %132, %150, %168
  %393 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8
  br label %394

394:                                              ; preds = %392, %80
  %395 = phi %"class.base::BasicStringPiece"* [ %393, %392 ], [ %91, %80 ]
  %396 = icmp eq %"class.base::BasicStringPiece"* %395, null
  br i1 %396, label %400, label %397

397:                                              ; preds = %394
  %398 = ptrtoint %"class.base::BasicStringPiece"* %395 to i64
  store i64 %398, i64* %52, align 8
  %399 = bitcast %"class.base::BasicStringPiece"* %395 to i8*
  call void @_ZdlPv(i8* %399) #8
  br label %400

400:                                              ; preds = %394, %397
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #7
  %401 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %81, i64 1
  %402 = icmp eq %"class.base::BasicStringPiece"* %401, %46
  br i1 %402, label %65, label %80

403:                                              ; preds = %105
  switch i8 %107, label %392 [
    i8 102, label %404
    i8 101, label %404
    i8 100, label %404
    i8 99, label %404
    i8 98, label %404
    i8 97, label %404
    i8 70, label %404
    i8 69, label %404
    i8 68, label %404
    i8 67, label %404
    i8 66, label %404
    i8 65, label %404
  ]

404:                                              ; preds = %403, %403, %403, %403, %403, %403, %403, %403, %403, %403, %403, %403, %105
  %405 = getelementptr inbounds i8, i8* %98, i64 2
  %406 = load i8, i8* %405, align 1
  %407 = add i8 %406, -48
  %408 = icmp ult i8 %407, 10
  br i1 %408, label %410, label %409

409:                                              ; preds = %404
  switch i8 %406, label %392 [
    i8 102, label %410
    i8 101, label %410
    i8 100, label %410
    i8 99, label %410
    i8 98, label %410
    i8 97, label %410
    i8 70, label %410
    i8 69, label %410
    i8 68, label %410
    i8 67, label %410
    i8 66, label %410
    i8 65, label %410
  ]

410:                                              ; preds = %409, %409, %409, %409, %409, %409, %409, %409, %409, %409, %409, %409, %404
  %411 = getelementptr inbounds i8, i8* %98, i64 3
  %412 = load i8, i8* %411, align 1
  %413 = add i8 %412, -48
  %414 = icmp ult i8 %413, 10
  br i1 %414, label %110, label %415

415:                                              ; preds = %410
  switch i8 %412, label %392 [
    i8 102, label %110
    i8 101, label %110
    i8 100, label %110
    i8 99, label %110
    i8 98, label %110
    i8 97, label %110
    i8 70, label %110
    i8 69, label %110
    i8 68, label %110
    i8 67, label %110
    i8 66, label %110
    i8 65, label %110
  ]

416:                                              ; preds = %123
  switch i8 %125, label %392 [
    i8 102, label %417
    i8 101, label %417
    i8 100, label %417
    i8 99, label %417
    i8 98, label %417
    i8 97, label %417
    i8 70, label %417
    i8 69, label %417
    i8 68, label %417
    i8 67, label %417
    i8 66, label %417
    i8 65, label %417
  ]

417:                                              ; preds = %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %123
  %418 = getelementptr inbounds i8, i8* %116, i64 2
  %419 = load i8, i8* %418, align 1
  %420 = add i8 %419, -48
  %421 = icmp ult i8 %420, 10
  br i1 %421, label %423, label %422

422:                                              ; preds = %417
  switch i8 %419, label %392 [
    i8 102, label %423
    i8 101, label %423
    i8 100, label %423
    i8 99, label %423
    i8 98, label %423
    i8 97, label %423
    i8 70, label %423
    i8 69, label %423
    i8 68, label %423
    i8 67, label %423
    i8 66, label %423
    i8 65, label %423
  ]

423:                                              ; preds = %422, %422, %422, %422, %422, %422, %422, %422, %422, %422, %422, %422, %417
  %424 = getelementptr inbounds i8, i8* %116, i64 3
  %425 = load i8, i8* %424, align 1
  %426 = add i8 %425, -48
  %427 = icmp ult i8 %426, 10
  br i1 %427, label %128, label %428

428:                                              ; preds = %423
  switch i8 %425, label %392 [
    i8 102, label %128
    i8 101, label %128
    i8 100, label %128
    i8 99, label %128
    i8 98, label %128
    i8 97, label %128
    i8 70, label %128
    i8 69, label %128
    i8 68, label %128
    i8 67, label %128
    i8 66, label %128
    i8 65, label %128
  ]

429:                                              ; preds = %141
  switch i8 %143, label %392 [
    i8 102, label %430
    i8 101, label %430
    i8 100, label %430
    i8 99, label %430
    i8 98, label %430
    i8 97, label %430
    i8 70, label %430
    i8 69, label %430
    i8 68, label %430
    i8 67, label %430
    i8 66, label %430
    i8 65, label %430
  ]

430:                                              ; preds = %429, %429, %429, %429, %429, %429, %429, %429, %429, %429, %429, %429, %141
  %431 = getelementptr inbounds i8, i8* %134, i64 2
  %432 = load i8, i8* %431, align 1
  %433 = add i8 %432, -48
  %434 = icmp ult i8 %433, 10
  br i1 %434, label %436, label %435

435:                                              ; preds = %430
  switch i8 %432, label %392 [
    i8 102, label %436
    i8 101, label %436
    i8 100, label %436
    i8 99, label %436
    i8 98, label %436
    i8 97, label %436
    i8 70, label %436
    i8 69, label %436
    i8 68, label %436
    i8 67, label %436
    i8 66, label %436
    i8 65, label %436
  ]

436:                                              ; preds = %435, %435, %435, %435, %435, %435, %435, %435, %435, %435, %435, %435, %430
  %437 = getelementptr inbounds i8, i8* %134, i64 3
  %438 = load i8, i8* %437, align 1
  %439 = add i8 %438, -48
  %440 = icmp ult i8 %439, 10
  br i1 %440, label %146, label %441

441:                                              ; preds = %436
  switch i8 %438, label %392 [
    i8 102, label %146
    i8 101, label %146
    i8 100, label %146
    i8 99, label %146
    i8 98, label %146
    i8 97, label %146
    i8 70, label %146
    i8 69, label %146
    i8 68, label %146
    i8 67, label %146
    i8 66, label %146
    i8 65, label %146
  ]

442:                                              ; preds = %159
  switch i8 %161, label %392 [
    i8 102, label %443
    i8 101, label %443
    i8 100, label %443
    i8 99, label %443
    i8 98, label %443
    i8 97, label %443
    i8 70, label %443
    i8 69, label %443
    i8 68, label %443
    i8 67, label %443
    i8 66, label %443
    i8 65, label %443
  ]

443:                                              ; preds = %442, %442, %442, %442, %442, %442, %442, %442, %442, %442, %442, %442, %159
  %444 = getelementptr inbounds i8, i8* %152, i64 2
  %445 = load i8, i8* %444, align 1
  %446 = add i8 %445, -48
  %447 = icmp ult i8 %446, 10
  br i1 %447, label %449, label %448

448:                                              ; preds = %443
  switch i8 %445, label %392 [
    i8 102, label %449
    i8 101, label %449
    i8 100, label %449
    i8 99, label %449
    i8 98, label %449
    i8 97, label %449
    i8 70, label %449
    i8 69, label %449
    i8 68, label %449
    i8 67, label %449
    i8 66, label %449
    i8 65, label %449
  ]

449:                                              ; preds = %448, %448, %448, %448, %448, %448, %448, %448, %448, %448, %448, %448, %443
  %450 = getelementptr inbounds i8, i8* %152, i64 3
  %451 = load i8, i8* %450, align 1
  %452 = add i8 %451, -48
  %453 = icmp ult i8 %452, 10
  br i1 %453, label %164, label %454

454:                                              ; preds = %449
  switch i8 %451, label %392 [
    i8 102, label %164
    i8 101, label %164
    i8 100, label %164
    i8 99, label %164
    i8 98, label %164
    i8 97, label %164
    i8 70, label %164
    i8 69, label %164
    i8 68, label %164
    i8 67, label %164
    i8 66, label %164
    i8 65, label %164
  ]

455:                                              ; preds = %177
  switch i8 %179, label %392 [
    i8 102, label %182
    i8 101, label %182
    i8 100, label %182
    i8 99, label %182
    i8 98, label %182
    i8 97, label %182
    i8 70, label %182
    i8 69, label %182
    i8 68, label %182
    i8 67, label %182
    i8 66, label %182
    i8 65, label %182
  ]
}

declare void @_ZN10variations22GetVariationParamValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.84"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device12HidBlocklist27ResetToDefaultValuesForTestEv(%"class.device::HidBlocklist"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.device::HidBlocklist"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.device::HidBlocklist", %"class.device::HidBlocklist"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.device::HidBlocklist::Entry"** %4 to i64*
  store i64 %3, i64* %5, align 8
  tail call void @_ZN6device12HidBlocklist32PopulateWithServerProvidedValuesEv(%"class.device::HidBlocklist"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device12HidBlocklistC2Ev(%"class.device::HidBlocklist"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.device::HidBlocklist"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree.75"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree.75"* %0, %"class.std::__1::__tree_node"* %6) #7
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree.75"* %0, %"class.std::__1::__tree_node"* %9) #7
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJRKhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJRKhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
