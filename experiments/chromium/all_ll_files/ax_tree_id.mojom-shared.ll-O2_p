; ModuleID = 'gen/ui/accessibility/mojom/ax_tree_id.mojom-shared.cc'
source_filename = "gen/ui/accessibility/mojom/ax_tree_id.mojom-shared.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }

@.str = private unnamed_addr constant [24 x i8] c"unknown tag in AXTreeID\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ax5mojom8internal13AXTreeID_Data8ValidateEPKvPN4mojo8internal17ValidationContextEb(i8*, %"class.mojo::internal::ValidationContext"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %3
  br i1 %2, label %8, label %6

6:                                                ; preds = %5
  %7 = tail call zeroext i1 @_ZN4mojo8internal43ValidateNonInlinedUnionHeaderAndClaimMemoryEPKvPNS0_17ValidationContextE(i8* nonnull %0, %"class.mojo::internal::ValidationContext"* %1) #2
  br i1 %7, label %12, label %47

8:                                                ; preds = %5
  %9 = bitcast i8* %0 to i32*
  %10 = load i32, i32* %9, align 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %47, label %12

12:                                               ; preds = %6, %8
  %13 = getelementptr inbounds i8, i8* %0, i64 4
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 1
  switch i32 %15, label %46 [
    i32 0, label %47
    i32 1, label %16
  ]

16:                                               ; preds = %12
  %17 = getelementptr inbounds i8, i8* %0, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  tail call void @_ZN4mojo8internal32ReportNonNullableValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEi(%"class.mojo::internal::ValidationContext"* %1, i32 8, i32 2) #2
  br label %47

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %1, i64 0, i32 10
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 8
  %26 = icmp sgt i32 %24, 199
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = load i64, i64* %18, align 8
  %29 = icmp ugt i64 %28, 4294967295
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = ptrtoint i8* %17 to i64
  %32 = and i64 %28, 4294967295
  %33 = xor i64 %31, -1
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %27, %30, %22
  %36 = phi i32 [ 18, %22 ], [ 7, %30 ], [ 7, %27 ]
  tail call void @_ZN4mojo8internal21ReportValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEPKc(%"class.mojo::internal::ValidationContext"* %1, i32 %36, i8* null) #2
  %37 = load i32, i32* %23, align 8
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* %23, align 8
  br label %47

39:                                               ; preds = %30
  %40 = icmp eq i64 %28, 0
  %41 = getelementptr inbounds i8, i8* %17, i64 %28
  %42 = select i1 %40, i8* null, i8* %41
  %43 = tail call zeroext i1 @_ZN9mojo_base5mojom8internal21UnguessableToken_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %42, %"class.mojo::internal::ValidationContext"* %1) #2
  %44 = load i32, i32* %23, align 8
  %45 = add nsw i32 %44, -1
  store i32 %45, i32* %23, align 8
  ret i1 %43

46:                                               ; preds = %12
  tail call void @_ZN4mojo8internal21ReportValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEPKc(%"class.mojo::internal::ValidationContext"* %1, i32 15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)) #2
  br label %47

47:                                               ; preds = %35, %21, %46, %8, %12, %6, %3
  %48 = phi i1 [ true, %3 ], [ false, %6 ], [ false, %46 ], [ true, %8 ], [ true, %12 ], [ false, %21 ], [ false, %35 ]
  ret i1 %48
}

declare zeroext i1 @_ZN4mojo8internal43ValidateNonInlinedUnionHeaderAndClaimMemoryEPKvPNS0_17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal21ReportValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEPKc(%"class.mojo::internal::ValidationContext"*, i32, i8*) local_unnamed_addr #1

declare void @_ZN4mojo8internal32ReportNonNullableValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEi(%"class.mojo::internal::ValidationContext"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN9mojo_base5mojom8internal21UnguessableToken_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
