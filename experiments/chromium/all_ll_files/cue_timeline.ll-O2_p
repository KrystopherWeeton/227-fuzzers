; ModuleID = '../../third_party/blink/renderer/core/html/track/cue_timeline.cc'
source_filename = "../../third_party/blink/renderer/core/html/track/cue_timeline.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.205", i32, [4 x i8], %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.341", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.358", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.370", %"class.std::__1::unique_ptr.376", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.383", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.321", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__atomic_base.243" }
%"struct.std::__1::__atomic_base.243" = type { %"struct.std::__1::__cxx_atomic_impl.244" }
%"struct.std::__1::__cxx_atomic_impl.244" = type { %"struct.std::__1::__cxx_atomic_base_impl.245" }
%"struct.std::__1::__cxx_atomic_base_impl.245" = type { i64 }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::Worklist.266"* }
%"class.blink::Worklist.266" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::Worklist.273"* }
%"class.blink::Worklist.273" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::Worklist.280"* }
%"class.blink::Worklist.280" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::Worklist.287"* }
%"class.blink::Worklist.287" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::Worklist.294"* }
%"class.blink::Worklist.294" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.241" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.301", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.315", [4 x i8] }>
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303", %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { i64 }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { float }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.324", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.333" }
%"class.WTF::Vector.333" = type { %"class.WTF::VectorBuffer.334" }
%"class.WTF::VectorBuffer.334" = type { %"class.WTF::VectorBufferBase.335" }
%"class.WTF::VectorBufferBase.335" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.349" }
%"class.WTF::VectorBuffer.349" = type { %"class.WTF::VectorBufferBase.350" }
%"class.WTF::VectorBufferBase.350" = type { %"struct.std::__1::pair.351"*, i32, i32 }
%"struct.std::__1::pair.351" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.364" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.252"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.259"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.266"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.273"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.280"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.608" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.382 }
%class.scoped_refptr.382 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.383" = type { %"struct.std::__1::__atomic_base.384" }
%"struct.std::__1::__atomic_base.384" = type { %"struct.std::__1::__cxx_atomic_impl.385" }
%"struct.std::__1::__cxx_atomic_impl.385" = type { %"struct.std::__1::__cxx_atomic_base_impl.386" }
%"struct.std::__1::__cxx_atomic_base_impl.386" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.81" }
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl.84" }
%"struct.std::__1::__cxx_atomic_impl.84" = type { %"struct.std::__1::__cxx_atomic_base_impl.85" }
%"struct.std::__1::__cxx_atomic_base_impl.85" = type { i32 }
%"class.blink::CueTimeline" = type <{ %"class.blink::Member", %"class.WTF::PODIntervalTree", %"class.WTF::Vector", double, %"class.absl::optional", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", i32, i8, [3 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLMediaElement"* }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, i8 }>
%class.scoped_refptr = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type { %"class.WTF::RefCounted.1044", %class.scoped_refptr.1046, %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* }
%"class.WTF::RefCounted.1044" = type { %"class.base::RefCounted.1045" }
%"class.base::RefCounted.1045" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.1046 = type { %"class.WTF::PODArena"* }
%"class.WTF::PODArena" = type { %"class.WTF::RefCounted.1047", %class.scoped_refptr.1049, %"class.WTF::PODArena::Chunk"*, i64, %"class.WTF::Vector.1052" }
%"class.WTF::RefCounted.1047" = type { %"class.base::RefCounted.1048" }
%"class.base::RefCounted.1048" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1049 = type { %"class.WTF::PODArena::Allocator"* }
%"class.WTF::PODArena::Allocator" = type <{ i32 (...)**, %"class.WTF::RefCounted.1050", [4 x i8] }>
%"class.WTF::RefCounted.1050" = type { %"class.base::RefCounted.1051" }
%"class.base::RefCounted.1051" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::PODArena::Chunk" = type { %"class.WTF::PODArena::Allocator"*, i8*, i64, i64 }
%"class.WTF::Vector.1052" = type { %"class.WTF::VectorBuffer.1053" }
%"class.WTF::VectorBuffer.1053" = type { %"class.WTF::VectorBufferBase.1054" }
%"class.WTF::VectorBufferBase.1054" = type { %"class.std::__1::unique_ptr.1055"*, i32, i32 }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.WTF::PODArena::Chunk"* }
%"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk" = type { %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* }
%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node" = type { i32 (...)**, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, i32, %"class.WTF::PODInterval" }
%"class.WTF::PODInterval" = type { double, double, %"class.blink::TextTrackCue"*, double, double }
%"class.blink::TextTrackCue" = type <{ %"class.blink::EventTargetWithInlineData", %"class.WTF::AtomicString", double, double, %"class.blink::Member.16", i32, i8, [3 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.6" }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8", [32 x i8] }
%"class.WTF::VectorBufferBase.8" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.11" }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::HeapVector.13"* }
%"class.blink::HeapVector.13" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.14"* }
%"class.WTF::Vector.14" = type opaque
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::TextTrack"* }
%"class.blink::TextTrack" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::TrackBase", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::HeapVector.32", %"class.blink::Member.76", %"class.WTF::AtomicString", i32, i32, i32, i32, i8, [7 x i8] }>
%"class.blink::TrackBase" = type { %"class.blink::Supplementable", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::TextTrackCueList"* }
%"class.blink::TextTrackCueList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::HeapVector.23", i32, [4 x i8] }>
%"class.blink::HeapVector.23" = type { %"class.WTF::Vector.26" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TextTrackCue"* }
%"class.blink::HeapVector.32" = type { %"class.WTF::Vector.35" }
%"class.WTF::Vector.35" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { %"class.blink::Member.38"*, i32, i32 }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.40", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.42, %"class.WTF::Vector.43", %"class.WTF::Vector.43", %"class.blink::Member.48", %"class.blink::Member.50", %"class.blink::HeapHashSet", %"class.blink::Member.58", %"class.WTF::HashSet.60", %"class.WTF::TextPosition", %"class.blink::Member.64", %"class.blink::HeapVector.66", %"class.blink::Member.73" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.42 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45" }
%"class.WTF::VectorBufferBase.45" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.48", %"class.blink::Member.95", %"class.blink::Member.48", %"class.blink::Member.48", %"class.blink::Member.97" }
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.101", %"class.blink::Member.58", %"class.blink::Member.95", %"class.blink::Member.103", %"class.blink::Member.103", %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.153", %"class.blink::HeapVector.32" }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.48", %"class.blink::Member.48" }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.107" }
%"class.blink::HeapHashMap.107" = type { %"class.WTF::HashMap.110" }
%"class.WTF::HashMap.110" = type { %"class.WTF::HashTable.111" }
%"class.WTF::HashTable.111" = type <{ %"struct.WTF::KeyValuePair.113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.113" = type { %"class.WTF::AtomicString", %"class.blink::Member.114" }
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.118", i32, %"class.blink::HeapVector.137" }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.121" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.125", %"class.blink::Member.127", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.125" = type { %"class.WTF::SingleThreadedBitField.126" }
%"class.WTF::SingleThreadedBitField.126" = type { i32 }
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.129 }
%class.scoped_refptr.129 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.130", %"class.WTF::AtomicString", %"class.WTF::Vector.132" }
%"class.WTF::RefCounted.130" = type { %"class.base::RefCounted.131" }
%"class.base::RefCounted.131" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.132" = type { %"class.WTF::VectorBuffer.133" }
%"class.WTF::VectorBuffer.133" = type { %"class.WTF::VectorBufferBase.134", [32 x i8] }
%"class.WTF::VectorBufferBase.134" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector.137" = type { %"class.WTF::Vector.140" }
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.blink::Member.118"*, i32, i32 }
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.150" }
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::HeapHashMap.152"* }
%"class.blink::HeapHashMap.152" = type opaque
%"class.blink::Member.153" = type { %"class.blink::MemberBase.154" }
%"class.blink::MemberBase.154" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.52" }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.56" }
%"class.WTF::HashTable.56" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.96" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.155", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.163", %"class.WTF::Vector.163", i8, i32, %"class.blink::Member.170", %"class.blink::Member.172", %"class.blink::Member.174", %"class.blink::Member.176", %"class.blink::Member.178", %"class.blink::Member.180", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.188", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.194", %"class.blink::Member.196", %"class.blink::Member.38", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.199", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.389", %"class.blink::HeapVector.137", %"class.blink::Member.118", %"class.blink::Member.391", %"class.blink::Member.118", %"class.blink::Member.118", %"class.blink::Member.118", %"class.blink::UserActionElementSet", %"class.blink::Member.400", double, double, i64, i64, %"class.blink::HeapHashSet.402", %"class.blink::HeapHashSet.409", i16, i8, %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::Member.422", %"class.blink::TextLinkColors", %"class.blink::Member.424", i8, [7 x i8], %"class.blink::HeapHashMap.426", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.118", %"class.WTF::Vector.433", %"class.blink::Member.438", %"class.blink::Member.440", i8, %"class.blink::Member.118", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.442", %"class.blink::HeapVector.444", %"class.std::__1::unique_ptr.452", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.458", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.471", %"class.WTF::Vector.473", i8, i8, %"class.std::__1::unique_ptr.478", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.137", %"class.blink::HeapVector.484", i32, i8, %"class.blink::HeapTaskRunnerTimer.389", %"class.blink::HeapTaskRunnerTimer.389", %"class.blink::DocumentTiming", %"class.blink::Member.492", i8, i32, %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.498", %"class.blink::HeapTaskRunnerTimer.389", %"class.blink::Member.500", %"class.WTF::HashMap.502", %"class.blink::Member.507", %"class.blink::Member.509", %"class.blink::Member.511", %"class.blink::Member.513", %"class.blink::Member.58", %"class.blink::Member.58", %"class.blink::HeapTaskRunnerTimer.389", %"class.blink::HeapHashSet.515", i8, i32, %"class.blink::Member.522", %"class.blink::Member.524", i32, %"class.blink::Member.526", %"class.blink::Member.528", %"class.blink::Member.530", %"class.std::__1::unique_ptr.532", i64, %"class.std::__1::unique_ptr.538", i32, i32, %"class.blink::Member.544", %"class.blink::Member.546", %"class.blink::Member.548", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.550", %"class.WTF::Vector.552", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.557", %"class.blink::Member.564", %"class.std::__1::unique_ptr.566", %"class.blink::Member.572", i8, i8, %"class.WTF::String", %"class.blink::Member.574", i8, [7 x i8], %"class.blink::HeapHashMap.576", %"class.blink::HeapObserverSet", %"class.blink::Member.590", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.592", i32, i8, i8, %"class.blink::WeakMember.594", %"class.blink::Member.595" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.155" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.156" }
%"class.blink::HeapHashMap.156" = type { %"class.WTF::HashMap.159" }
%"class.WTF::HashMap.159" = type { %"class.WTF::HashTable.160" }
%"class.WTF::HashTable.160" = type <{ %"struct.WTF::KeyValuePair.162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.162" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.163" = type { %"class.WTF::VectorBuffer.164" }
%"class.WTF::VectorBuffer.164" = type { %"class.WTF::VectorBufferBase.165" }
%"class.WTF::VectorBufferBase.165" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.167", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.167" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.81" }
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.174" = type { %"class.blink::MemberBase.175" }
%"class.blink::MemberBase.175" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.182" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::KURL"* }
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.199" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201" }
%"class.WTF::VectorBufferBase.201" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.202 }
%class.scoped_refptr.202 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.203", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.203" = type { %"class.base::RefCounted.204" }
%"class.base::RefCounted.204" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.393" }
%"class.blink::HeapHashMap.393" = type { %"class.WTF::HashMap.396" }
%"class.WTF::HashMap.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"struct.WTF::KeyValuePair.399"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.399" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.402" = type { %"class.WTF::HashSet.405" }
%"class.WTF::HashSet.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"class.blink::WeakMember.408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.408" = type opaque
%"class.blink::HeapHashSet.409" = type { %"class.WTF::HashSet.412" }
%"class.WTF::HashSet.412" = type { %"class.WTF::HashTable.413" }
%"class.WTF::HashTable.413" = type <{ %"class.blink::WeakMember.415"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.415" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.426" = type { %"class.WTF::HashMap.429" }
%"class.WTF::HashMap.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"struct.WTF::KeyValuePair.432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.432" = type opaque
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.444" = type { %"class.WTF::Vector.447" }
%"class.WTF::Vector.447" = type { %"class.WTF::VectorBuffer.448" }
%"class.WTF::VectorBuffer.448" = type { %"class.WTF::VectorBufferBase.449" }
%"class.WTF::VectorBufferBase.449" = type { %"class.blink::Member.450"*, i32, i32 }
%"class.blink::Member.450" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.458" = type { %"class.WTF::HashSet.461" }
%"class.WTF::HashSet.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"class.blink::WeakMember.464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.464" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.465", i32, [4 x i8] }>
%"class.WTF::Vector.465" = type { %"class.WTF::VectorBuffer.466" }
%"class.WTF::VectorBuffer.466" = type { %"class.WTF::VectorBufferBase.467" }
%"class.WTF::VectorBufferBase.467" = type { %"struct.std::__1::pair.468"*, i32, i32 }
%"struct.std::__1::pair.468" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.484" = type { %"class.WTF::Vector.487" }
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489" }
%"class.WTF::VectorBufferBase.489" = type { %"class.blink::Member.490"*, i32, i32 }
%"class.blink::Member.490" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.58" }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"struct.WTF::KeyValuePair.506"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.506" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.389" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.390", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.80, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.80 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.86 }
%class.scoped_refptr.86 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.87", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.87" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.88" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i8 }
%"class.blink::WeakMember.390" = type { %"class.blink::MemberBase.59" }
%"class.blink::HeapHashSet.515" = type { %"class.WTF::HashSet.518" }
%"class.WTF::HashSet.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"class.blink::Member.521"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.521" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.576" = type { %"class.WTF::HashMap.579" }
%"class.WTF::HashMap.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"struct.WTF::KeyValuePair.582"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.582" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.583" }
%"class.blink::HeapHashSet.583" = type { %"class.WTF::HashSet.586" }
%"class.WTF::HashSet.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"class.blink::WeakMember.589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.589" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.58", %"class.blink::HeapHashSet.599", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.606", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.599" = type { %"class.WTF::HashSet.602" }
%"class.WTF::HashSet.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"class.blink::Member.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.605" = type opaque
%"class.blink::HeapTaskRunnerTimer.606" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.607", { i64, i64 } }
%"class.blink::WeakMember.607" = type { %"class.blink::MemberBase.593" }
%"class.blink::WeakMember.594" = type { %"class.blink::MemberBase.49" }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::HashSet.60" = type { %"class.WTF::HashTable.61" }
%"class.WTF::HashTable.61" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.66" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::Member.50"*, i32, i32 }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::PODInterval"*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.93", { i64, i64 } }
%"class.blink::WeakMember.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::CueTimeline"* }
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable.613", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::HeapTaskRunnerTimer.631", %"class.blink::HeapTaskRunnerTimer.631", %"class.blink::HeapTaskRunnerTimer.631", %"class.blink::HeapTaskRunnerTimer.631", %"class.blink::HeapTaskRunnerTimer.631", %"class.blink::Member.633", %"class.blink::Member.635", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.637", %"class.blink::Member.639", double, double, %"class.absl::optional.641", double, double, double, i32, %"class.blink::Member.650", %"class.blink::Member.48", i32, %"class.blink::HeapTaskRunnerTimer.631", %"class.std::__1::unique_ptr.652", %"class.cc::Layer"*, %class.scoped_refptr.658, %"class.blink::Member.659", double, i8, double, i32, i16, %"class.absl::optional.661", i8, %"class.base::TimeTicks", %"class.blink::Member.666", %"class.blink::Member.668", %"class.blink::Member.76", %"class.blink::HeapVector.670", %"class.blink::Member.677", %"class.blink::HeapVector.678", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.678", %"class.blink::HeapVector.678", i32, %"class.blink::Member.686", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.719", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.721", %"class.blink::Member.723", %"class.blink::Member.725", %"class.blink::Member.753", %"class.blink::Member.755", %"class.blink::Member.762" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Supplementable.613" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.614" }
%"class.blink::HeapHashMap.614" = type { %"class.WTF::HashMap.617" }
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.620" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.621" }
%"class.blink::WeakMember.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.623" }
%"class.blink::HeapObserverSet.623" = type { i32, [4 x i8], %"class.blink::HeapHashSet.624" }
%"class.blink::HeapHashSet.624" = type { %"class.WTF::HashSet.627" }
%"class.WTF::HashSet.627" = type { %"class.WTF::HashTable.628" }
%"class.WTF::HashTable.628" = type <{ %"class.blink::WeakMember.630"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.630" = type opaque
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.641" = type { %"class.absl::optional_internal::optional_data.642" }
%"class.absl::optional_internal::optional_data.642" = type { %"class.absl::optional_internal::optional_data_base.643" }
%"class.absl::optional_internal::optional_data_base.643" = type { %"class.absl::optional_internal::optional_data_dtor_base.644" }
%"class.absl::optional_internal::optional_data_dtor_base.644" = type { i8, %union.anon.645 }
%union.anon.645 = type { %"class.base::ElapsedTimer" }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.blink::HeapTaskRunnerTimer.631" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.632", { i64, i64 } }
%"class.blink::WeakMember.632" = type { %"class.blink::MemberBase" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.658 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.661" = type { %"class.absl::optional_internal::optional_data.662" }
%"class.absl::optional_internal::optional_data.662" = type { %"class.absl::optional_internal::optional_data_base.663" }
%"class.absl::optional_internal::optional_data_base.663" = type { %"class.absl::optional_internal::optional_data_dtor_base.664" }
%"class.absl::optional_internal::optional_data_dtor_base.664" = type { i8, %union.anon.665 }
%union.anon.665 = type { i8 }
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::HeapVector.670" = type { %"class.WTF::Vector.673" }
%"class.WTF::Vector.673" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675" }
%"class.WTF::VectorBufferBase.675" = type { %"class.blink::Member.16"*, i32, i32 }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.94" }
%"class.blink::HeapVector.678" = type { %"class.WTF::Vector.681" }
%"class.WTF::Vector.681" = type { %"class.WTF::VectorBuffer.682" }
%"class.WTF::VectorBuffer.682" = type { %"class.WTF::VectorBufferBase.683" }
%"class.WTF::VectorBufferBase.683" = type { %"class.blink::Member.684"*, i32, i32 }
%"class.blink::Member.684" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.688, %"class.blink::Member.715", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.688 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.690, %"class.std::__1::unique_ptr.691", %"class.std::__1::unique_ptr.708", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.714" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.689" }>
%"class.base::RefCountedThreadSafe.689" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.690 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.694", i8, i64, i32, %"class.std::__1::vector.698", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { float* }
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { float**, float**, %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { float** }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.714" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.686" }
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member" }
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.727", %"class.blink::ExecutionContextClient", %"class.blink::Member.729", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.742", double, %"class.WTF::Vector.747", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable.727" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.728" }
%"class.blink::WeakMember.728" = type { %"class.blink::MemberBase.173" }
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::Node"* }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.734", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.734" = type { %"class.WTF::HashTable.735" }
%"class.WTF::HashTable.735" = type <{ %"struct.WTF::KeyValuePair.737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.737" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.738", i32, i32 }
%"class.WTF::Vector.738" = type { %"class.WTF::VectorBuffer.739" }
%"class.WTF::VectorBuffer.739" = type { %"class.WTF::VectorBufferBase.740" }
%"class.WTF::VectorBufferBase.740" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.742" = type { %"class.WTF::VectorBuffer.743" }
%"class.WTF::VectorBuffer.743" = type { %"class.WTF::VectorBufferBase.744" }
%"class.WTF::VectorBufferBase.744" = type { float*, i32, i32 }
%"class.WTF::Vector.747" = type { %"class.WTF::VectorBuffer.748" }
%"class.WTF::VectorBuffer.748" = type { %"class.WTF::VectorBufferBase.749" }
%"class.WTF::VectorBufferBase.749" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::Length" = type <{ %union.anon.750, i8, i8, i8, i8 }>
%union.anon.750 = type { i32 }
%"class.blink::Member.753" = type { %"class.blink::MemberBase.754" }
%"class.blink::MemberBase.754" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::Member.755" = type { %"class.blink::MemberBase.756" }
%"class.blink::MemberBase.756" = type { %"class.blink::DisallowNewWrapper.757"* }
%"class.blink::DisallowNewWrapper.757" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.760" }
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::DisallowNewWrapper.764"* }
%"class.blink::DisallowNewWrapper.764" = type opaque
%"class.WTF::PODRedBlackTree" = type <{ i32 (...)**, %class.scoped_refptr, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, i8, [7 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.812 }
%union.anon.812 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::pair.773" = type { double, %"class.blink::TextTrackCue"* }
%"class.WTF::PODIntervalSearchAdapter" = type { %"class.WTF::Vector"*, double, double }
%"class.blink::HeapVector.765" = type { %"class.WTF::Vector.768" }
%"class.WTF::Vector.768" = type { %"class.WTF::VectorBuffer.769" }
%"class.WTF::VectorBuffer.769" = type { %"class.WTF::VectorBufferBase.770" }
%"class.WTF::VectorBufferBase.770" = type { %"struct.std::__1::pair.771"*, i32, i32 }
%"struct.std::__1::pair.771" = type { double, %"class.blink::Member.29" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.779", %"class.blink::Member.779", %"class.blink::Member.781", %"class.blink::Member.783", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.774" }
%"class.absl::optional.774" = type { %"class.absl::optional_internal::optional_data.775" }
%"class.absl::optional_internal::optional_data.775" = type { %"class.absl::optional_internal::optional_data_base.776" }
%"class.absl::optional_internal::optional_data_base.776" = type { %"class.absl::optional_internal::optional_data_dtor_base.777" }
%"class.absl::optional_internal::optional_data_dtor_base.777" = type { i8, %union.anon.778 }
%union.anon.778 = type { i64 }
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::Event"* }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HTMLTrackElement" = type { %"class.blink::HTMLElement", %"class.blink::TextTrackLoaderClient", %"class.blink::Member.787", %"class.blink::Member.789", %"class.blink::HeapTaskRunnerTimer.791", %"class.blink::KURL" }
%"class.blink::TextTrackLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::LoadableTextTrack"* }
%"class.blink::LoadableTextTrack" = type { %"class.blink::TextTrack.base", %"class.blink::Member.785" }
%"class.blink::TextTrack.base" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::TrackBase", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::HeapVector.32", %"class.blink::Member.76", %"class.WTF::AtomicString", i32, i32, i32, i32, i8 }>
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::HTMLTrackElement"* }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::TextTrackLoader"* }
%"class.blink::TextTrackLoader" = type <{ %"class.blink::RawResourceClient.base", [7 x i8], %"class.blink::VTTParserClient", %"class.blink::Member.973", %"class.blink::Member.975", %"class.blink::Member.58", %"class.blink::HeapTaskRunnerTimer.1025", i32, i8, [3 x i8] }>
%"class.blink::RawResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.795", [7 x i8], %"class.blink::Member.796", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.795" = type { i8 }
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.800", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.831", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.933", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.949", %"class.blink::ResourceResponse", %class.scoped_refptr.951, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.800" = type { %"class.absl::optional_internal::optional_data.801" }
%"class.absl::optional_internal::optional_data.801" = type { %"class.absl::optional_internal::optional_data_base.802" }
%"class.absl::optional_internal::optional_data_base.802" = type { %"class.absl::optional_internal::optional_data_dtor_base.803" }
%"class.absl::optional_internal::optional_data_dtor_base.803" = type { i8, %union.anon.804 }
%union.anon.804 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.805", i8, %"class.absl::optional.816", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.805" = type { %"class.absl::optional_internal::optional_data.806" }
%"class.absl::optional_internal::optional_data.806" = type { %"class.absl::optional_internal::optional_data_base.807" }
%"class.absl::optional_internal::optional_data_base.807" = type { %"class.absl::optional_internal::optional_data_dtor_base.808" }
%"class.absl::optional_internal::optional_data_dtor_base.808" = type { i8, [7 x i8], %union.anon.809 }
%union.anon.809 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.816" = type { %"class.absl::optional_internal::optional_data.817" }
%"class.absl::optional_internal::optional_data.817" = type { %"class.absl::optional_internal::optional_data_base.818" }
%"class.absl::optional_internal::optional_data_base.818" = type { %"class.absl::optional_internal::optional_data_dtor_base.819" }
%"class.absl::optional_internal::optional_data_dtor_base.819" = type { i8, %union.anon.820 }
%union.anon.820 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.821", %"class.WTF::Vector.826" }
%"class.WTF::Vector.821" = type { %"class.WTF::VectorBuffer.822" }
%"class.WTF::VectorBuffer.822" = type { %"class.WTF::VectorBufferBase.823" }
%"class.WTF::VectorBufferBase.823" = type { i32*, i32, i32 }
%"class.WTF::Vector.826" = type { %"class.WTF::VectorBuffer.827" }
%"class.WTF::VectorBuffer.827" = type { %"class.WTF::VectorBufferBase.828" }
%"class.WTF::VectorBufferBase.828" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.929" }
%"class.WTF::HashMap.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"struct.WTF::KeyValuePair.932"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.932" = type <{ %"class.blink::WeakMember.1042", i32, [4 x i8] }>
%"class.blink::WeakMember.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.795", [7 x i8], %"class.blink::Member.796", i8, [7 x i8] }>
%"class.blink::HeapHashSet.933" = type { %"class.WTF::HashSet.936" }
%"class.WTF::HashSet.936" = type { %"class.WTF::HashTable.937" }
%"class.WTF::HashTable.937" = type <{ %"class.blink::WeakMember.939"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.939" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.940", i8, i8, %class.scoped_refptr.202, %class.scoped_refptr.945, %class.scoped_refptr.947 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %"struct.std::__1::pair.944"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.944" = type opaque
%class.scoped_refptr.945 = type { %"class.base::RefCountedData.946"* }
%"class.base::RefCountedData.946" = type opaque
%class.scoped_refptr.947 = type { %"class.base::RefCountedData.948"* }
%"class.base::RefCountedData.948" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.893" }
%"class.base::time_internal::TimeBase.893" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.839, %class.scoped_refptr.839, %class.scoped_refptr.839, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.845, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.857", %"class.absl::optional.862", %"class.absl::optional.872", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.882", %"class.absl::optional.872", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.872", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.882", %"class.absl::optional.887", i8, %class.scoped_refptr.892 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.834" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.834" = type { %"class.absl::optional_internal::optional_data.835" }
%"class.absl::optional_internal::optional_data.835" = type { %"class.absl::optional_internal::optional_data_base.836" }
%"class.absl::optional_internal::optional_data_base.836" = type { %"class.absl::optional_internal::optional_data_dtor_base.837" }
%"class.absl::optional_internal::optional_data_dtor_base.837" = type { i8, %union.anon.838 }
%union.anon.838 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.839 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1027", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.834", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.839 }
%"class.WTF::RefCounted.1027" = type { %"class.base::RefCounted.1028" }
%"class.base::RefCounted.1028" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.840" }
%"class.WTF::HashMap.840" = type { %"class.WTF::HashTable.841" }
%"class.WTF::HashTable.841" = type <{ %"struct.WTF::KeyValuePair.844"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.844" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.845 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.846", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.855, i8, %"class.url::Origin" }
%"class.base::RefCounted.846" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.9 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.847" }
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { %"class.std::__1::unique_ptr.849"*, %"class.std::__1::unique_ptr.849"*, %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.std::__1::unique_ptr.849"* }
%class.scoped_refptr.855 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.856", [4 x i8] }>
%"class.base::RefCountedThreadSafe.856" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.857" = type { %"class.absl::optional_internal::optional_data.858" }
%"class.absl::optional_internal::optional_data.858" = type { %"class.absl::optional_internal::optional_data_base.859" }
%"class.absl::optional_internal::optional_data_base.859" = type { %"class.absl::optional_internal::optional_data_dtor_base.860" }
%"class.absl::optional_internal::optional_data_dtor_base.860" = type { i8, %union.anon.861 }
%union.anon.861 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.862" = type { %"class.absl::optional_internal::optional_data.863" }
%"class.absl::optional_internal::optional_data.863" = type { %"class.absl::optional_internal::optional_data_base.864" }
%"class.absl::optional_internal::optional_data_base.864" = type { %"class.absl::optional_internal::optional_data_dtor_base.865" }
%"class.absl::optional_internal::optional_data_dtor_base.865" = type { i8, %union.anon.866 }
%union.anon.866 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.867", %"class.WTF::Vector.826", %"class.WTF::String" }
%"class.WTF::Vector.867" = type { %"class.WTF::VectorBuffer.868" }
%"class.WTF::VectorBuffer.868" = type { %"class.WTF::VectorBufferBase.869" }
%"class.WTF::VectorBufferBase.869" = type { %class.scoped_refptr.839*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.877", %"class.absl::optional.877" }
%"class.absl::optional.877" = type { %"class.absl::optional_internal::optional_data.878" }
%"class.absl::optional_internal::optional_data.878" = type { %"class.absl::optional_internal::optional_data_base.879" }
%"class.absl::optional_internal::optional_data_base.879" = type { %"class.absl::optional_internal::optional_data_dtor_base.880" }
%"class.absl::optional_internal::optional_data_dtor_base.880" = type { i8, %union.anon.881 }
%union.anon.881 = type { %"class.base::TimeDelta" }
%"class.absl::optional.872" = type { %"class.absl::optional_internal::optional_data.873" }
%"class.absl::optional_internal::optional_data.873" = type { %"class.absl::optional_internal::optional_data_base.874" }
%"class.absl::optional_internal::optional_data_base.874" = type { %"class.absl::optional_internal::optional_data_dtor_base.875" }
%"class.absl::optional_internal::optional_data_dtor_base.875" = type { i8, %union.anon.876 }
%union.anon.876 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.882" = type { %"class.absl::optional_internal::optional_data.883" }
%"class.absl::optional_internal::optional_data.883" = type { %"class.absl::optional_internal::optional_data_base.884" }
%"class.absl::optional_internal::optional_data_base.884" = type { %"class.absl::optional_internal::optional_data_dtor_base.885" }
%"class.absl::optional_internal::optional_data_dtor_base.885" = type { i8, %union.anon.886 }
%union.anon.886 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.887" = type { %"class.absl::optional_internal::optional_data.888" }
%"class.absl::optional_internal::optional_data.888" = type { %"class.absl::optional_internal::optional_data_base.889" }
%"class.absl::optional_internal::optional_data_base.889" = type { %"class.absl::optional_internal::optional_data_dtor_base.890" }
%"class.absl::optional_internal::optional_data_dtor_base.890" = type { i8, %union.anon.891 }
%union.anon.891 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.892 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1034", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1034" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1035" }
%"class.std::__1::vector.1035" = type { %"class.std::__1::__vector_base.1036" }
%"class.std::__1::__vector_base.1036" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { i32* }
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.894", %class.scoped_refptr.908, %class.scoped_refptr.909, %"struct.blink::CacheControlHeader", %"class.absl::optional.877", %"class.absl::optional.910", %"class.absl::optional.910", %"class.absl::optional.910", i64, %"class.blink::KURL", %"class.WTF::Vector.915", %"class.WTF::String", %"class.WTF::Vector.826", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.882", %"class.WTF::Vector.826", %"class.blink::KURL", %"class.absl::optional.920" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.894" = type { %"class.absl::optional_internal::optional_data.895" }
%"class.absl::optional_internal::optional_data.895" = type { %"class.absl::optional_internal::optional_data_base.896" }
%"class.absl::optional_internal::optional_data_base.896" = type { %"class.absl::optional_internal::optional_data_dtor_base.897" }
%"class.absl::optional_internal::optional_data_dtor_base.897" = type { i8, %union.anon.898 }
%union.anon.898 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.826", %"class.WTF::String", i64, i64, %"class.WTF::Vector.899", %"class.WTF::Vector.903" }
%"class.WTF::Vector.899" = type { %"class.WTF::VectorBuffer.900" }
%"class.WTF::VectorBuffer.900" = type { %"class.WTF::VectorBufferBase.134" }
%"class.WTF::Vector.903" = type { %"class.WTF::VectorBuffer.904" }
%"class.WTF::VectorBuffer.904" = type { %"class.WTF::VectorBufferBase.905" }
%"class.WTF::VectorBufferBase.905" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.908 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.909 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.910" = type { %"class.absl::optional_internal::optional_data.911" }
%"class.absl::optional_internal::optional_data.911" = type { %"class.absl::optional_internal::optional_data_base.912" }
%"class.absl::optional_internal::optional_data_base.912" = type { %"class.absl::optional_internal::optional_data_dtor_base.913" }
%"class.absl::optional_internal::optional_data_dtor_base.913" = type { i8, %union.anon.914 }
%union.anon.914 = type { %"class.base::Time" }
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.920" = type { %"class.absl::optional_internal::optional_data.921" }
%"class.absl::optional_internal::optional_data.921" = type { %"class.absl::optional_internal::optional_data_base.922" }
%"class.absl::optional_internal::optional_data_base.922" = type { %"class.absl::optional_internal::optional_data_dtor_base.923" }
%"class.absl::optional_internal::optional_data_dtor_base.923" = type { i8, %union.anon.924 }
%union.anon.924 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.951 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.952", i64, %"class.WTF::Vector.954", %"class.WTF::Vector.959" }
%"class.WTF::RefCounted.952" = type { %"class.base::RefCounted.953" }
%"class.base::RefCounted.953" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.954" = type { %"class.WTF::VectorBuffer.955" }
%"class.WTF::VectorBuffer.955" = type { %"class.WTF::VectorBufferBase.956" }
%"class.WTF::VectorBufferBase.956" = type { i8*, i32, i32 }
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"class.std::__1::unique_ptr.962"*, i32, i32 }
%"class.std::__1::unique_ptr.962" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.965", %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"class.blink::VTTParserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::TextTrackLoaderClient"* }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::VTTParser"* }
%"class.blink::VTTParser" = type { %"class.blink::Member.58", i32, [4 x i8], %"class.blink::BufferedLineReader", %"class.std::__1::unique_ptr.996", %"class.WTF::AtomicString", double, double, %"class.WTF::StringBuilder", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1014", %"class.blink::Member.1016", %"class.blink::HeapVector.32", %"class.blink::HeapVector.23", i8, [7 x i8], %"class.blink::HeapHashMap.1018" }
%"class.blink::BufferedLineReader" = type { %"class.blink::SegmentedString", %"class.WTF::StringBuilder", i8, i8, [6 x i8] }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque.980", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon.979, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon.979 = type { i8* }
%"class.WTF::Deque.980" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.983" }
%"class.WTF::VectorBuffer.983" = type { %"class.WTF::VectorBufferBase.984" }
%"class.WTF::VectorBufferBase.984" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.std::__1::unique_ptr.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.999", i32, %"class.WTF::Vector.954", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1005" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.985, i32, i8, i8, [2 x i8] }>
%union.anon.985 = type { %"class.WTF::Vector.986" }
%"class.WTF::Vector.986" = type { %"class.WTF::VectorBuffer.987" }
%"class.WTF::VectorBuffer.987" = type { %"class.WTF::VectorBufferBase.988", [16 x i8] }
%"class.WTF::VectorBufferBase.988" = type { i8*, i32, i32 }
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::VTTRegion"* }
%"class.blink::VTTRegion" = type opaque
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::VTTParserClient"* }
%"class.blink::HeapHashMap.1018" = type { %"class.WTF::HashMap.1021" }
%"class.WTF::HashMap.1021" = type { %"class.WTF::HashTable.1022" }
%"class.WTF::HashTable.1022" = type <{ %"struct.WTF::KeyValuePair.1024"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1024" = type opaque
%"class.blink::HeapTaskRunnerTimer.1025" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1026", { i64, i64 } }
%"class.blink::WeakMember.1026" = type { %"class.blink::MemberBase.790" }
%"class.blink::HeapTaskRunnerTimer.791" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.792", { i64, i64 } }
%"class.blink::WeakMember.792" = type { %"class.blink::MemberBase.786" }
%"class.blink::CueTimeline::IgnoreUpdateScope" = type { %"class.blink::CueTimeline"* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1080 }
%class.scoped_refptr.1080 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1081" }
%"class.blink::PersistentBase.1081" = type { %"class.blink::CueTimeline"*, %"class.blink::PersistentNodePtr.1082" }
%"class.blink::PersistentNodePtr.1082" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.1083" }
%"class.std::__1::__tuple_leaf" = type { %"class.base::WeakPtr" }
%"class.std::__1::__tuple_leaf.1083" = type { %"class.blink::WeakPersistent" }
%"class.WTF::PODArena::FastMallocAllocator" = type { %"class.WTF::PODArena::Allocator.base", [4 x i8] }
%"class.WTF::PODArena::Allocator.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1050" }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.1120" = type { i8 }

$_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEEaSERKS7_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEED0Ev = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE5FiredEv = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_11CueTimelineEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_11CueTimelineEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_11CueTimelineEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11CueTimelineELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_11CueTimelineELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEED0Ev = comdat any

$_ZNK3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE15CheckInvariantsEv = comdat any

$_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE10UpdateNodeEPNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED2Ev = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED0Ev = comdat any

$_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE15CheckInvariantsEv = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10UpdateNodeEPNS6_4NodeE = comdat any

$_ZN3WTF8PODArena19FastMallocAllocator8AllocateEm = comdat any

$_ZN3WTF8PODArena19FastMallocAllocator4FreeEPv = comdat any

$_ZN3WTF8PODArena9AllocatorD2Ev = comdat any

$_ZN3WTF8PODArena19FastMallocAllocatorD0Ev = comdat any

$_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE23CheckInvariantsFromNodeEPNS6_4NodeEPi = comdat any

$_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE23CheckInvariantsFromNodeEPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE = comdat any

$_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE25TreeSearchFullComparisonsEPNS6_4NodeERKS5_ = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10InsertNodeEPNS6_4NodeE = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeD2Ev = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeD0Ev = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4Node8CopyFromEPS7_ = comdat any

$_ZN3WTF8PODArena12AllocateBaseINS_15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeEEEPvv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrINS_8PODArena5ChunkENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10DeleteNodeEPNS6_4NodeE = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE11DeleteFixupEPNS6_4NodeES8_ = comdat any

$_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE17NextIntervalPointEdPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE = comdat any

$_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE21SearchForOverlapsFromINS_24PODIntervalSearchAdapterIdS3_EEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeERT_ = comdat any

$_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS5_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEmm = comdat any

$_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS5_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF15ConstructTraitsINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEENS_12VectorTraitsIS7_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IdPS5_EEEEEPS7_PvDpOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IdPS5_EEEEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS6_EEE14AllocateObjectISA_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE7GetNameEPKv = comdat any

$_ZNSt3__16__sortIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEvT0_SF_T_ = comdat any

$_ZNSt3__17__sort3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_T_ = comdat any

$_ZNSt3__17__sort5IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_SF_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEvT0_SF_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEbT0_SF_T_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_9TextTrackEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_9TextTrackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__16__sortIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort3IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_ = comdat any

$_ZN5blink10TraceTraitINS_16HTMLMediaElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_11CueTimelineEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_11CueTimelineEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19HeapTaskRunnerTimerINS_11CueTimelineEEE = comdat any

$_ZTVN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEEE = comdat any

$_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEE = comdat any

$_ZTVN3WTF8PODArena19FastMallocAllocatorE = comdat any

$_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink16event_type_names6kEnterE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names5kExitE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names10kCuechangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [17 x i8] c"SetCueEventTimer\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/core/html/track/cue_timeline.cc\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"SetCueTimestampEventTimer\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZZN5blink12_GLOBAL__N_121CalculateEventTimeoutEdRKNS_16HTMLMediaElementEE19kMinTimeoutInterval = internal unnamed_addr constant %"class.base::TimeDelta" { i64 1000 }, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.6 = private unnamed_addr constant [61 x i8] c"../../third_party/blink/renderer/platform/wtf/pod_interval.h\00", section "llvm.metadata"
@_ZTVN5blink19HeapTaskRunnerTimerINS_11CueTimelineEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapTaskRunnerTimer"*)* @_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEED0Ev to i8*), i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase4StopEv to i8*), i8* bitcast (void (%"class.blink::HeapTaskRunnerTimer"*)* @_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE5FiredEv to i8*), i8* bitcast (void (%"class.base::OnceCallback"*, %"class.blink::HeapTaskRunnerTimer"*, %"class.base::WeakPtr"*)* @_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE to i8*)] }, comdat, align 8
@_ZTVN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.WTF::PODRedBlackTree"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED2Ev to i8*), i8* bitcast (void (%"class.WTF::PODIntervalTree"*)* @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEED0Ev to i8*), i8* bitcast (i1 (%"class.WTF::PODIntervalTree"*)* @_ZNK3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE15CheckInvariantsEv to i8*), i8* bitcast (i1 (%"class.WTF::PODIntervalTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)* @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE10UpdateNodeEPNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE to i8*)] }, comdat, align 8
@_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.WTF::PODRedBlackTree"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED2Ev to i8*), i8* bitcast (void (%"class.WTF::PODRedBlackTree"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED0Ev to i8*), i8* bitcast (i1 (%"class.WTF::PODRedBlackTree"*)* @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE15CheckInvariantsEv to i8*), i8* bitcast (i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10UpdateNodeEPNS6_4NodeE to i8*)] }, comdat, align 8
@_ZTVN3WTF8PODArena19FastMallocAllocatorE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.WTF::PODArena::FastMallocAllocator"*, i64)* @_ZN3WTF8PODArena19FastMallocAllocator8AllocateEm to i8*), i8* bitcast (void (%"class.WTF::PODArena::FastMallocAllocator"*, i8*)* @_ZN3WTF8PODArena19FastMallocAllocator4FreeEPv to i8*), i8* bitcast (void (%"class.WTF::PODArena::Allocator"*)* @_ZN3WTF8PODArena9AllocatorD2Ev to i8*), i8* bitcast (void (%"class.WTF::PODArena::FastMallocAllocator"*)* @_ZN3WTF8PODArena19FastMallocAllocatorD0Ev to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_8PODArenaEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::PODArena]\00", align 1
@_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeD2Ev to i8*), i8* bitcast (void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeD0Ev to i8*), i8* bitcast (void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4Node8CopyFromEPS7_ to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [139 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<WTF::PODArena::Chunk, std::__1::default_delete<WTF::PODArena::Chunk> >]\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::PODInterval<double, blink::TextTrackCue *>]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.20 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.22 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.23 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairIdNS1_6MemberINS1_12TextTrackCueEEEEENS_12VectorTraitsIS8_EEEEEEPKcv = private unnamed_addr constant [215 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<std::__1::pair<double, blink::Member<blink::TextTrackCue> >, WTF::VectorTraits<std::__1::pair<double, blink::Member<blink::TextTrackCue> > > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_9TextTrackEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [159 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::TextTrack>, WTF::VectorTraits<blink::Member<blink::TextTrack> > >]\00", align 1

@_ZN5blink11CueTimelineC1ERNS_16HTMLMediaElementE = hidden unnamed_addr alias void (%"class.blink::CueTimeline"*, %"class.blink::HTMLMediaElement"*), void (%"class.blink::CueTimeline"*, %"class.blink::HTMLMediaElement"*)* @_ZN5blink11CueTimelineC2ERNS_16HTMLMediaElementE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimelineC2ERNS_16HTMLMediaElementE(%"class.blink::CueTimeline"*, %"class.blink::HTMLMediaElement"* dereferenceable(1528)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::HTMLMediaElement"* %1, %"class.blink::HTMLMediaElement"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = tail call noalias i8* @malloc(i64 24) #8
  %6 = bitcast i8* %5 to i32*
  store i32 1, i32* %6, align 4
  %7 = tail call noalias i8* @malloc(i64 48) #8
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = tail call noalias i8* @malloc(i64 16) #8
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3WTF8PODArena19FastMallocAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = ptrtoint i8* %10 to i64
  %15 = bitcast i8* %9 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 16
  %17 = bitcast i8* %16 to %"class.WTF::PODArena::Chunk"**
  store %"class.WTF::PODArena::Chunk"* null, %"class.WTF::PODArena::Chunk"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 24
  %19 = bitcast i8* %18 to i64*
  store i64 16384, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  %22 = bitcast i8* %21 to i8**
  store i8* %7, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %5, i64 16
  %24 = bitcast i8* %23 to %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"**
  store %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* null, %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %26 = bitcast %"class.WTF::PODFreeListArena"** %25 to i8**
  store i8* %5, i8** %26, align 8
  %27 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 2
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* null, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2
  %30 = bitcast %"class.WTF::Vector"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #8
  %31 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 3
  store double -1.000000e+00, double* %31, align 8
  %32 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5
  %34 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %37, i8 zeroext 29) #8
  %39 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %33, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %39, %"class.base::SingleThreadTaskRunner"* %38) #8
  %40 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %33, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink19HeapTaskRunnerTimerINS_11CueTimelineEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  store %"class.blink::CueTimeline"* %0, %"class.blink::CueTimeline"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 2, i32 0
  %43 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::CueTimeline"*, %"class.blink::TimerBase"*)* @_ZN5blink11CueTimeline18CueEventTimerFiredEPNS_9TimerBaseE to i64), i64 0>, <2 x i64>* %43, align 8
  %44 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %47, i8 zeroext 29) #8
  %49 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %44, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %49, %"class.base::SingleThreadTaskRunner"* %48) #8
  %50 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %44, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink19HeapTaskRunnerTimerINS_11CueTimelineEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  store %"class.blink::CueTimeline"* %0, %"class.blink::CueTimeline"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 2, i32 0
  %53 = bitcast i64* %52 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::CueTimeline"*, %"class.blink::TimerBase"*)* @_ZN5blink11CueTimeline27CueTimestampEventTimerFiredEPNS_9TimerBaseE to i64), i64 0>, <2 x i64>* %53, align 8
  %54 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 7
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 8
  store i8 0, i8* %55, align 4
  ret void
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline18CueEventTimerFiredEPNS_9TimerBaseE(%"class.blink::CueTimeline"*, %"class.blink::TimerBase"* nocapture readnone) #0 align 2 {
  tail call void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline27CueTimestampEventTimerFiredEPNS_9TimerBaseE(%"class.blink::CueTimeline"*, %"class.blink::TimerBase"* nocapture readnone) #0 align 2 {
  tail call void @_ZN5blink11CueTimeline33UpdateActiveCuePastAndFutureNodesEv(%"class.blink::CueTimeline"* %0)
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline7AddCuesEPNS_9TextTrackEPKNS_16TextTrackCueListE(%"class.blink::CueTimeline"*, %"class.blink::TextTrack"* nocapture readnone, %"class.blink::TextTrackCueList"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZNK5blink16TextTrackCueList6lengthEv(%"class.blink::TextTrackCueList"* %2) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %13, %3
  %7 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %8, i64 0, i32 42
  %10 = load i16, i16* %9, align 4
  %11 = and i16 %10, 256
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %19, label %20

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %16, %13 ], [ 0, %3 ]
  %15 = tail call %"class.blink::TextTrackCue"* @_ZNK5blink16TextTrackCueList22AnonymousIndexedGetterEj(%"class.blink::TextTrackCueList"* %2, i32 %14) #8
  tail call void @_ZN5blink11CueTimeline14AddCueInternalEPNS_12TextTrackCueE(%"class.blink::CueTimeline"* %0, %"class.blink::TextTrackCue"* %15)
  %16 = add nuw i32 %14, 1
  %17 = tail call i32 @_ZNK5blink16TextTrackCueList6lengthEv(%"class.blink::TextTrackCueList"* %2) #8
  %18 = icmp ult i32 %16, %17
  br i1 %18, label %13, label %6

19:                                               ; preds = %6
  tail call void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  br label %20

20:                                               ; preds = %6, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK5blink16TextTrackCueList6lengthEv(%"class.blink::TextTrackCueList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline14AddCueInternalEPNS_12TextTrackCueE(%"class.blink::CueTimeline"*, %"class.blink::TextTrackCue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca %"class.WTF::PODInterval", align 8
  %6 = bitcast %"class.WTF::PODInterval"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 2
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 3
  %11 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 4
  %12 = bitcast double* %3 to i8*
  %13 = bitcast double* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %14 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1, i64 0, i32 2
  %15 = load double, double* %14, align 8, !noalias !2
  store double %15, double* %3, align 8, !noalias !2
  %16 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1, i64 0, i32 3
  %18 = load double, double* %17, align 8, !noalias !2
  store double %18, double* %4, align 8, !noalias !2
  %19 = fcmp olt double %15, %18
  %20 = select i1 %19, double* %4, double* %3
  %21 = bitcast double* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store double %15, double* %7, align 8, !alias.scope !5
  %23 = bitcast double* %8 to i64*
  store i64 %22, i64* %23, align 8, !alias.scope !5
  %24 = bitcast %"class.blink::TextTrackCue"** %9 to i8*
  %25 = call i8* @llvm.ptr.annotation.p0i8(i8* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %26 = bitcast i8* %25 to %"class.blink::TextTrackCue"**
  store %"class.blink::TextTrackCue"* %1, %"class.blink::TextTrackCue"** %26, align 8
  store double %15, double* %10, align 8, !alias.scope !5
  %27 = bitcast double* %11 to i64*
  store i64 %22, i64* %27, align 8, !alias.scope !5
  %28 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1
  %29 = bitcast %"class.WTF::PODIntervalTree"* %28 to %"class.WTF::PODRedBlackTree"*
  %30 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 3
  %31 = load i8, i8* %30, align 8, !range !8
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 2
  %34 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %33, align 8
  br i1 %32, label %35, label %72

35:                                               ; preds = %2
  %36 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %34, null
  br i1 %36, label %75, label %37

37:                                               ; preds = %35
  %38 = load double, double* %7, align 8
  br label %39

39:                                               ; preds = %63, %37
  %40 = phi double [ %38, %37 ], [ %65, %63 ]
  %41 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %34, %37 ], [ %70, %63 ]
  %42 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 5, i32 0
  %43 = load double, double* %42, align 8
  %44 = fcmp oeq double %43, %40
  br i1 %44, label %45, label %63

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 5, i32 1
  %47 = load double, double* %46, align 8
  %48 = load double, double* %8, align 8
  %49 = fcmp oeq double %47, %48
  br i1 %49, label %50, label %63

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 5, i32 2
  %52 = bitcast %"class.blink::TextTrackCue"** %51 to i8*
  %53 = call i8* @llvm.ptr.annotation.p0i8(i8* %52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %54 = bitcast i8* %53 to %"class.blink::TextTrackCue"**
  %55 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %54, align 8
  %56 = call i8* @llvm.ptr.annotation.p0i8(i8* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %57 = bitcast i8* %56 to %"class.blink::TextTrackCue"**
  %58 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %57, align 8
  %59 = icmp eq %"class.blink::TextTrackCue"* %55, %58
  br i1 %59, label %106, label %60

60:                                               ; preds = %50
  %61 = load double, double* %7, align 8
  %62 = load double, double* %42, align 8
  br label %63

63:                                               ; preds = %60, %45, %39
  %64 = phi double [ %62, %60 ], [ %43, %39 ], [ %43, %45 ]
  %65 = phi double [ %61, %60 ], [ %40, %39 ], [ %40, %45 ]
  %66 = fcmp olt double %65, %64
  %67 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 2
  %69 = select i1 %66, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %67, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %68
  %70 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %69, align 8
  %71 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %70, null
  br i1 %71, label %75, label %39

72:                                               ; preds = %2
  %73 = call %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE25TreeSearchFullComparisonsEPNS6_4NodeERKS5_(%"class.WTF::PODRedBlackTree"* %29, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %34, %"class.WTF::PODInterval"* nonnull dereferenceable(40) %5) #8
  %74 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %73, null
  br i1 %74, label %75, label %106

75:                                               ; preds = %63, %72, %35
  %76 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %77 = load %"class.WTF::PODFreeListArena"*, %"class.WTF::PODFreeListArena"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::PODFreeListArena", %"class.WTF::PODFreeListArena"* %77, i64 0, i32 2
  %79 = load %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"*, %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"** %78, align 8
  %80 = icmp eq %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %79, null
  br i1 %80, label %93, label %81

81:                                               ; preds = %75
  %82 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %79 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"** %78 to i64*
  store i64 %83, i64* %84, align 8
  %85 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %79 to %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*
  %86 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk", %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %79, i64 1
  %88 = getelementptr inbounds %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk", %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %79, i64 4
  %89 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %88 to i32*
  %90 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #8
  store i32 1, i32* %89, align 8
  %91 = getelementptr inbounds %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk", %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %79, i64 5
  %92 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"* %91 to i8*
  br label %103

93:                                               ; preds = %75
  %94 = getelementptr inbounds %"class.WTF::PODFreeListArena", %"class.WTF::PODFreeListArena"* %77, i64 0, i32 1, i32 0
  %95 = load %"class.WTF::PODArena"*, %"class.WTF::PODArena"** %94, align 8
  %96 = call i8* @_ZN3WTF8PODArena12AllocateBaseINS_15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeEEEPvv(%"class.WTF::PODArena"* %95) #8
  %97 = bitcast i8* %96 to %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*
  %98 = bitcast i8* %96 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds i8, i8* %96, i64 8
  %100 = getelementptr inbounds i8, i8* %96, i64 32
  %101 = bitcast i8* %100 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #8
  store i32 1, i32* %101, align 8
  %102 = getelementptr inbounds i8, i8* %96, i64 40
  br label %103

103:                                              ; preds = %81, %93
  %104 = phi i8* [ %92, %81 ], [ %102, %93 ]
  %105 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %85, %81 ], [ %97, %93 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* nonnull align 8 %6, i64 40, i1 false) #8
  call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10InsertNodeEPNS6_4NodeE(%"class.WTF::PODRedBlackTree"* %29, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %105) #8
  br label %106

106:                                              ; preds = %50, %72, %103
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #8
  ret void
}

declare %"class.blink::TextTrackCue"* @_ZNK5blink16TextTrackCueList22AnonymousIndexedGetterEj(%"class.blink::TextTrackCueList"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline19InvokeTimeMarchesOnEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"* %0)
  tail call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0)
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline6AddCueEPNS_9TextTrackEPNS_12TextTrackCueE(%"class.blink::CueTimeline"*, %"class.blink::TextTrack"* nocapture readnone, %"class.blink::TextTrackCue"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11CueTimeline14AddCueInternalEPNS_12TextTrackCueE(%"class.blink::CueTimeline"* %0, %"class.blink::TextTrackCue"* %2)
  %4 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %5, i64 0, i32 42
  %7 = load i16, i16* %6, align 4
  %8 = and i16 %7, 256
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  tail call void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  br label %11

11:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline10RemoveCuesEPNS_9TextTrackEPKNS_16TextTrackCueListE(%"class.blink::CueTimeline"*, %"class.blink::TextTrack"* nocapture readnone, %"class.blink::TextTrackCueList"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZNK5blink16TextTrackCueList6lengthEv(%"class.blink::TextTrackCueList"* %2) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %13, %3
  %7 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %8, i64 0, i32 42
  %10 = load i16, i16* %9, align 4
  %11 = and i16 %10, 256
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %19, label %20

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %16, %13 ], [ 0, %3 ]
  %15 = tail call %"class.blink::TextTrackCue"* @_ZNK5blink16TextTrackCueList22AnonymousIndexedGetterEj(%"class.blink::TextTrackCueList"* %2, i32 %14) #8
  tail call void @_ZN5blink11CueTimeline17RemoveCueInternalEPNS_12TextTrackCueE(%"class.blink::CueTimeline"* %0, %"class.blink::TextTrackCue"* %15)
  %16 = add nuw i32 %14, 1
  %17 = tail call i32 @_ZNK5blink16TextTrackCueList6lengthEv(%"class.blink::TextTrackCueList"* %2) #8
  %18 = icmp ult i32 %16, %17
  br i1 %18, label %13, label %6

19:                                               ; preds = %6
  tail call void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  br label %20

20:                                               ; preds = %6, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline17RemoveCueInternalEPNS_12TextTrackCueE(%"class.blink::CueTimeline"*, %"class.blink::TextTrackCue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca %"class.WTF::PODInterval", align 8
  %6 = bitcast %"class.WTF::PODInterval"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 2
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 3
  %11 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 0, i32 4
  %12 = bitcast double* %3 to i8*
  %13 = bitcast double* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %14 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1, i64 0, i32 2
  %15 = load double, double* %14, align 8, !noalias !9
  store double %15, double* %3, align 8, !noalias !9
  %16 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1, i64 0, i32 3
  %18 = load double, double* %17, align 8, !noalias !9
  store double %18, double* %4, align 8, !noalias !9
  %19 = fcmp olt double %15, %18
  %20 = select i1 %19, double* %4, double* %3
  %21 = bitcast double* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store double %15, double* %7, align 8, !alias.scope !12
  %23 = bitcast double* %8 to i64*
  store i64 %22, i64* %23, align 8, !alias.scope !12
  %24 = bitcast %"class.blink::TextTrackCue"** %9 to i8*
  %25 = call i8* @llvm.ptr.annotation.p0i8(i8* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %26 = bitcast i8* %25 to %"class.blink::TextTrackCue"**
  store %"class.blink::TextTrackCue"* %1, %"class.blink::TextTrackCue"** %26, align 8
  store double %15, double* %10, align 8, !alias.scope !12
  %27 = bitcast double* %11 to i64*
  store i64 %22, i64* %27, align 8, !alias.scope !12
  %28 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1
  %29 = bitcast %"class.WTF::PODIntervalTree"* %28 to %"class.WTF::PODRedBlackTree"*
  %30 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 3
  %31 = load i8, i8* %30, align 8, !range !8
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 2
  %34 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %33, align 8
  br i1 %32, label %35, label %72

35:                                               ; preds = %2
  %36 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %34, null
  br i1 %36, label %77, label %37

37:                                               ; preds = %35
  %38 = load double, double* %7, align 8
  br label %39

39:                                               ; preds = %63, %37
  %40 = phi double [ %38, %37 ], [ %65, %63 ]
  %41 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %34, %37 ], [ %70, %63 ]
  %42 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 5, i32 0
  %43 = load double, double* %42, align 8
  %44 = fcmp oeq double %43, %40
  br i1 %44, label %45, label %63

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 5, i32 1
  %47 = load double, double* %46, align 8
  %48 = load double, double* %8, align 8
  %49 = fcmp oeq double %47, %48
  br i1 %49, label %50, label %63

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 5, i32 2
  %52 = bitcast %"class.blink::TextTrackCue"** %51 to i8*
  %53 = call i8* @llvm.ptr.annotation.p0i8(i8* %52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %54 = bitcast i8* %53 to %"class.blink::TextTrackCue"**
  %55 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %54, align 8
  %56 = call i8* @llvm.ptr.annotation.p0i8(i8* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %57 = bitcast i8* %56 to %"class.blink::TextTrackCue"**
  %58 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %57, align 8
  %59 = icmp eq %"class.blink::TextTrackCue"* %55, %58
  br i1 %59, label %75, label %60

60:                                               ; preds = %50
  %61 = load double, double* %7, align 8
  %62 = load double, double* %42, align 8
  br label %63

63:                                               ; preds = %60, %45, %39
  %64 = phi double [ %62, %60 ], [ %43, %39 ], [ %43, %45 ]
  %65 = phi double [ %61, %60 ], [ %40, %39 ], [ %40, %45 ]
  %66 = fcmp olt double %65, %64
  %67 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %41, i64 0, i32 2
  %69 = select i1 %66, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %67, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %68
  %70 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %69, align 8
  %71 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %70, null
  br i1 %71, label %77, label %39

72:                                               ; preds = %2
  %73 = call %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE25TreeSearchFullComparisonsEPNS6_4NodeERKS5_(%"class.WTF::PODRedBlackTree"* %29, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %34, %"class.WTF::PODInterval"* nonnull dereferenceable(40) %5) #8
  %74 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %50, %72
  %76 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %73, %72 ], [ %41, %50 ]
  call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10DeleteNodeEPNS6_4NodeE(%"class.WTF::PODRedBlackTree"* %29, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* nonnull %76) #8
  br label %77

77:                                               ; preds = %63, %35, %72, %75
  %78 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2
  %79 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %80, i64 %83
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %125, label %86

86:                                               ; preds = %77, %107
  %87 = phi %"class.WTF::PODInterval"* [ %108, %107 ], [ %80, %77 ]
  %88 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %87, i64 0, i32 0
  %89 = load double, double* %88, align 8
  %90 = load double, double* %7, align 8
  %91 = fcmp oeq double %89, %90
  br i1 %91, label %92, label %107

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %87, i64 0, i32 1
  %94 = load double, double* %93, align 8
  %95 = load double, double* %8, align 8
  %96 = fcmp oeq double %94, %95
  br i1 %96, label %97, label %107

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %87, i64 0, i32 2
  %99 = bitcast %"class.blink::TextTrackCue"** %98 to i8*
  %100 = call i8* @llvm.ptr.annotation.p0i8(i8* %99, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %101 = bitcast i8* %100 to %"class.blink::TextTrackCue"**
  %102 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %101, align 8
  %103 = call i8* @llvm.ptr.annotation.p0i8(i8* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %104 = bitcast i8* %103 to %"class.blink::TextTrackCue"**
  %105 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %104, align 8
  %106 = icmp eq %"class.blink::TextTrackCue"* %102, %105
  br i1 %106, label %110, label %107

107:                                              ; preds = %97, %92, %86
  %108 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %87, i64 1
  %109 = icmp ult %"class.WTF::PODInterval"* %108, %84
  br i1 %109, label %86, label %125

110:                                              ; preds = %97
  %111 = ptrtoint %"class.WTF::PODInterval"* %87 to i64
  %112 = ptrtoint %"class.WTF::PODInterval"* %80 to i64
  %113 = sub i64 %111, %112
  %114 = sdiv exact i64 %113, 40
  %115 = trunc i64 %114 to i32
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %125, label %117

117:                                              ; preds = %110
  call void @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %78, i32 %115)
  %118 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1, i64 0, i32 6
  %119 = load i8, i8* %118, align 4
  %120 = and i8 %119, -2
  store i8 %120, i8* %118, align 4
  %121 = bitcast %"class.blink::TextTrackCue"* %1 to void (%"class.blink::TextTrackCue"*, i32)***
  %122 = load void (%"class.blink::TextTrackCue"*, i32)**, void (%"class.blink::TextTrackCue"*, i32)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::TextTrackCue"*, i32)*, void (%"class.blink::TextTrackCue"*, i32)** %122, i64 30
  %124 = load void (%"class.blink::TextTrackCue"*, i32)*, void (%"class.blink::TextTrackCue"*, i32)** %123, align 8
  call void %124(%"class.blink::TextTrackCue"* %1, i32 0) #8
  br label %125

125:                                              ; preds = %107, %77, %110, %117
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline9RemoveCueEPNS_9TextTrackEPNS_12TextTrackCueE(%"class.blink::CueTimeline"*, %"class.blink::TextTrack"* nocapture readnone, %"class.blink::TextTrackCue"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11CueTimeline17RemoveCueInternalEPNS_12TextTrackCueE(%"class.blink::CueTimeline"* %0, %"class.blink::TextTrackCue"* %2)
  %4 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %5, i64 0, i32 42
  %7 = load i16, i16* %6, align 4
  %8 = and i16 %7, 256
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  tail call void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  br label %11

11:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %24, i64 %25
  %27 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %26, i64 1
  %28 = icmp ne %"class.WTF::PODInterval"* %26, null
  %29 = icmp ne %"class.WTF::PODInterval"* %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %40, !prof !15

31:                                               ; preds = %22
  %32 = load i32, i32* %8, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %24, i64 %33
  %35 = bitcast %"class.WTF::PODInterval"* %26 to i8*
  %36 = bitcast %"class.WTF::PODInterval"* %27 to i8*
  %37 = ptrtoint %"class.WTF::PODInterval"* %34 to i64
  %38 = ptrtoint %"class.WTF::PODInterval"* %27 to i64
  %39 = sub i64 %37, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %36, i64 %39, i1 false) #8
  br label %40

40:                                               ; preds = %22, %31
  %41 = load i32, i32* %8, align 4
  %42 = add i32 %41, -1
  store i32 %42, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline8HideCuesEPNS_9TextTrackEPKNS_16TextTrackCueListE(%"class.blink::CueTimeline"* nocapture readnone, %"class.blink::TextTrack"* nocapture readnone, %"class.blink::TextTrackCueList"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZNK5blink16TextTrackCueList6lengthEv(%"class.blink::TextTrackCueList"* %2) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %7, %3
  ret void

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %14, %7 ], [ 0, %3 ]
  %9 = tail call %"class.blink::TextTrackCue"* @_ZNK5blink16TextTrackCueList22AnonymousIndexedGetterEj(%"class.blink::TextTrackCueList"* %2, i32 %8) #8
  %10 = bitcast %"class.blink::TextTrackCue"* %9 to void (%"class.blink::TextTrackCue"*, i32)***
  %11 = load void (%"class.blink::TextTrackCue"*, i32)**, void (%"class.blink::TextTrackCue"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::TextTrackCue"*, i32)*, void (%"class.blink::TextTrackCue"*, i32)** %11, i64 30
  %13 = load void (%"class.blink::TextTrackCue"*, i32)*, void (%"class.blink::TextTrackCue"*, i32)** %12, align 8
  tail call void %13(%"class.blink::TextTrackCue"* %9, i32 1) #8
  %14 = add nuw i32 %8, 1
  %15 = tail call i32 @_ZNK5blink16TextTrackCueList6lengthEv(%"class.blink::TextTrackCueList"* %2) #8
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %7, label %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, align 8
  %3 = alloca i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, align 8
  %4 = alloca %"class.WTF::PODIntervalSearchAdapter", align 8
  %5 = alloca %"class.WTF::PODIntervalSearchAdapter", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.WTF::PODInterval", align 16
  %9 = alloca %"class.WTF::Vector", align 8
  %10 = alloca %"class.WTF::Vector", align 8
  %11 = alloca %"class.WTF::Vector", align 8
  %12 = alloca %"class.WTF::PODInterval", align 16
  %13 = alloca %"class.WTF::PODInterval", align 8
  %14 = alloca %"class.WTF::PODInterval", align 8
  %15 = alloca %"class.blink::HeapVector.765", align 8
  %16 = alloca %"class.blink::HeapVector.670", align 8
  %17 = alloca %"struct.std::__1::pair.773", align 8
  %18 = alloca %"struct.std::__1::pair.773", align 8
  %19 = alloca %"struct.std::__1::pair.773", align 8
  %20 = alloca %"struct.std::__1::pair.773", align 8
  %21 = alloca %"class.blink::TextTrack"*, align 8
  %22 = alloca %"class.WTF::AtomicString", align 8
  %23 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 8
  store i8 1, i8* %27, align 4
  br label %1182

28:                                               ; preds = %1
  %29 = add nsw i32 %24, 1
  store i32 %29, i32* %23, align 8, !noalias !16
  %30 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %30, align 8
  %32 = tail call double @_ZNK5blink16HTMLMediaElement11currentTimeEv(%"class.blink::HTMLMediaElement"* %31) #8
  %33 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 5, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 19
  br i1 %39, label %1167, label %40

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 1, i32 0, i32 2
  %42 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %41, align 8
  %43 = tail call { i8, double } @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE17NextIntervalPointEdPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(double %32, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %42) #8
  %44 = extractvalue { i8, double } %43, 0
  %45 = extractvalue { i8, double } %43, 1
  %46 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 %44, i8* %46, align 8
  %47 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %45, double* %47, align 8
  %48 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #8
  %52 = tail call i32 @_ZNK5blink16HTMLMediaElement13getReadyStateEv(%"class.blink::HTMLMediaElement"* %31) #8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %94, label %54

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %31, i64 0, i32 34, i32 0, i32 0, i32 0
  %56 = load %"class.blink::WebMediaPlayer"*, %"class.blink::WebMediaPlayer"** %55, align 8
  %57 = icmp eq %"class.blink::WebMediaPlayer"* %56, null
  br i1 %57, label %94, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #8
  %60 = bitcast %"class.WTF::PODInterval"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #8
  %61 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %8, i64 0, i32 0
  store double %32, double* %61, align 16, !alias.scope !19
  %62 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %8, i64 0, i32 1
  store double %32, double* %62, align 8, !alias.scope !19
  %63 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %8, i64 0, i32 2
  %64 = bitcast %"class.blink::TextTrackCue"** %63 to i8*
  %65 = call i8* @llvm.ptr.annotation.p0i8(i8* %64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %66 = bitcast i8* %65 to %"class.blink::TextTrackCue"**
  store %"class.blink::TextTrackCue"* null, %"class.blink::TextTrackCue"** %66, align 8
  %67 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %8, i64 0, i32 3
  store double %32, double* %67, align 8, !alias.scope !19
  %68 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %8, i64 0, i32 4
  store double %32, double* %68, align 16, !alias.scope !19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 16, i1 false) #8, !alias.scope !22
  %69 = bitcast %"class.WTF::PODIntervalSearchAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #8, !noalias !22
  %70 = getelementptr inbounds %"class.WTF::PODIntervalSearchAdapter", %"class.WTF::PODIntervalSearchAdapter"* %5, i64 0, i32 0
  %71 = getelementptr inbounds %"class.WTF::PODIntervalSearchAdapter", %"class.WTF::PODIntervalSearchAdapter"* %5, i64 0, i32 1
  store %"class.WTF::Vector"* %7, %"class.WTF::Vector"** %70, align 8, !noalias !22
  %72 = bitcast %"class.WTF::PODInterval"* %8 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 16, !noalias !22
  %74 = bitcast double* %71 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %74, align 8, !noalias !22
  %75 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %41, align 8, !noalias !22
  call void @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE21SearchForOverlapsFromINS_24PODIntervalSearchAdapterIdS3_EEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeERT_(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %75, %"class.WTF::PODIntervalSearchAdapter"* nonnull dereferenceable(24) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #8, !noalias !22
  %76 = bitcast %"class.WTF::Vector"* %7 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::Vector"* %6 to i64*
  %79 = load i64, i64* %78, align 8
  store atomic i64 %79, i64* %76 monotonic, align 8
  store atomic i64 %77, i64* %78 monotonic, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %50, align 8
  %82 = load i32, i32* %80, align 8
  store i32 %82, i32* %50, align 8
  store i32 %81, i32* %80, align 8
  %83 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %51, align 4
  %85 = load i32, i32* %83, align 4
  store i32 %85, i32* %51, align 4
  store i32 %84, i32* %83, align 4
  %86 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %87 = icmp eq i64 %79, 0
  %88 = inttoptr i64 %79 to i8*
  br i1 %87, label %93, label %89, !prof !15

89:                                               ; preds = %58
  %90 = icmp eq i32 %84, 0
  br i1 %90, label %92, label %91, !prof !25

91:                                               ; preds = %89
  store i32 0, i32* %83, align 4
  br label %92

92:                                               ; preds = %91, %89
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %88) #8
  store %"class.WTF::PODInterval"* null, %"class.WTF::PODInterval"** %86, align 8
  br label %93

93:                                               ; preds = %58, %92
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #8
  br label %94

94:                                               ; preds = %54, %40, %93
  %95 = bitcast %"class.WTF::Vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #8
  %96 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 16, i1 false) #8
  %98 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2
  %99 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector"* nonnull %9, %"class.WTF::Vector"* dereferenceable(16) %98)
  %100 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 3
  %101 = bitcast double* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %31, i64 0, i32 24
  %104 = load double, double* %103, align 8
  %105 = bitcast %"class.WTF::Vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #8
  %106 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 16, i1 false) #8
  %109 = bitcast i64 %102 to double
  %110 = fcmp oge double %109, 0.000000e+00
  %111 = fcmp olt double %104, %32
  %112 = and i1 %110, %111
  br i1 %112, label %113, label %197

113:                                              ; preds = %94
  %114 = bitcast %"class.WTF::Vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #8
  %115 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 2
  %117 = bitcast %"class.WTF::PODInterval"* %12 to i8*
  %118 = bitcast %"class.WTF::Vector"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #8
  %119 = bitcast %"class.WTF::PODInterval"* %12 to i64*
  store i64 %102, i64* %119, align 16, !alias.scope !26
  %120 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %12, i64 0, i32 1
  store double %32, double* %120, align 8, !alias.scope !26
  %121 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %12, i64 0, i32 2
  %122 = bitcast %"class.blink::TextTrackCue"** %121 to i8*
  %123 = call i8* @llvm.ptr.annotation.p0i8(i8* %122, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %124 = bitcast i8* %123 to %"class.blink::TextTrackCue"**
  store %"class.blink::TextTrackCue"* null, %"class.blink::TextTrackCue"** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %12, i64 0, i32 3
  %126 = bitcast double* %125 to i64*
  store i64 %102, i64* %126, align 8, !alias.scope !26
  %127 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %12, i64 0, i32 4
  store double %32, double* %127, align 16, !alias.scope !26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 16, i1 false) #8, !alias.scope !29
  %128 = bitcast %"class.WTF::PODIntervalSearchAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #8, !noalias !29
  %129 = getelementptr inbounds %"class.WTF::PODIntervalSearchAdapter", %"class.WTF::PODIntervalSearchAdapter"* %4, i64 0, i32 0
  %130 = getelementptr inbounds %"class.WTF::PODIntervalSearchAdapter", %"class.WTF::PODIntervalSearchAdapter"* %4, i64 0, i32 1
  store %"class.WTF::Vector"* %11, %"class.WTF::Vector"** %129, align 8, !noalias !29
  %131 = bitcast %"class.WTF::PODInterval"* %12 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 16, !noalias !29
  %133 = bitcast double* %130 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %133, align 8, !noalias !29
  %134 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %41, align 8, !noalias !29
  call void @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE21SearchForOverlapsFromINS_24PODIntervalSearchAdapterIdS3_EEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeERT_(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %134, %"class.WTF::PODIntervalSearchAdapter"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #8, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #8
  %135 = load i32, i32* %116, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %113
  %138 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %115, align 8
  br label %164

139:                                              ; preds = %113
  %140 = zext i32 %135 to i64
  %141 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEmm(i64 %140) #8
  %142 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %141, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEPKcv, i64 0, i64 0)) #8
  %143 = ptrtoint i8* %142 to i64
  %144 = bitcast %"class.WTF::Vector"* %10 to i64*
  store atomic i64 %143, i64* %144 monotonic, align 8
  %145 = udiv i64 %141, 40
  %146 = trunc i64 %145 to i32
  store i32 %146, i32* %107, align 8
  %147 = load i32, i32* %116, align 4
  %148 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %115, align 8
  %149 = zext i32 %147 to i64
  %150 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %148, i64 %149
  %151 = icmp eq i32 %147, 0
  br i1 %151, label %164, label %152

152:                                              ; preds = %139
  %153 = bitcast %"class.WTF::PODInterval"* %13 to i8*
  %154 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %13, i64 0, i32 0
  %155 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %13, i64 0, i32 1
  %156 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %13, i64 0, i32 2
  %157 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %13, i64 0, i32 3
  %158 = fcmp olt double %104, %109
  %159 = select i1 %158, double %109, double %104
  %160 = bitcast %"class.WTF::PODInterval"* %13 to i8*
  %161 = bitcast double* %157 to i8*
  br label %175

162:                                              ; preds = %194
  %163 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %115, align 8
  br label %164

164:                                              ; preds = %137, %162, %139
  %165 = phi %"class.WTF::PODInterval"* [ %163, %162 ], [ %148, %139 ], [ %138, %137 ]
  %166 = icmp eq %"class.WTF::PODInterval"* %165, null
  %167 = bitcast %"class.WTF::PODInterval"* %165 to i8*
  br i1 %166, label %173, label %168, !prof !15

168:                                              ; preds = %164
  %169 = load i32, i32* %116, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !25

171:                                              ; preds = %168
  store i32 0, i32* %116, align 4
  br label %172

172:                                              ; preds = %171, %168
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %167) #8
  store %"class.WTF::PODInterval"* null, %"class.WTF::PODInterval"** %115, align 8
  br label %173

173:                                              ; preds = %164, %172
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #8
  %174 = load i32, i32* %108, align 4
  br label %197

175:                                              ; preds = %152, %194
  %176 = phi %"class.WTF::PODInterval"* [ %148, %152 ], [ %195, %194 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %153) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -1, i64 16, i1 false)
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %156, align 8
  %177 = bitcast %"class.WTF::PODInterval"* %176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 -1, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %153, i8* align 8 %177, i64 40, i1 false)
  %178 = load double, double* %154, align 8
  %179 = fcmp ogt double %178, %159
  %180 = load double, double* %155, align 8
  %181 = fcmp olt double %180, %32
  %182 = and i1 %179, %181
  br i1 %182, label %183, label %194

183:                                              ; preds = %175
  %184 = load i32, i32* %108, align 4
  %185 = load i32, i32* %107, align 8
  %186 = icmp eq i32 %184, %185
  br i1 %186, label %193, label %187, !prof !25

187:                                              ; preds = %183
  %188 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %106, align 8
  %189 = zext i32 %184 to i64
  %190 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %188, i64 %189
  %191 = bitcast %"class.WTF::PODInterval"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* nonnull align 8 %153, i64 40, i1 false) #8
  %192 = add i32 %184, 1
  store i32 %192, i32* %108, align 4
  br label %194

193:                                              ; preds = %183
  call void @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS5_EEvOT_(%"class.WTF::Vector"* nonnull %10, %"class.WTF::PODInterval"* nonnull dereferenceable(40) %13) #8
  br label %194

194:                                              ; preds = %193, %187, %175
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %153) #8
  %195 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %176, i64 1
  %196 = icmp eq %"class.WTF::PODInterval"* %195, %150
  br i1 %196, label %162, label %175

197:                                              ; preds = %94, %173
  %198 = phi i32 [ 0, %94 ], [ %174, %173 ]
  store double %32, double* %100, align 8
  %199 = load i32, i32* %97, align 4
  %200 = icmp ne i32 %198, 0
  %201 = zext i1 %200 to i8
  %202 = xor i1 %200, true
  %203 = icmp ne i32 %199, 0
  %204 = and i1 %203, %202
  br i1 %204, label %219, label %205

205:                                              ; preds = %276, %197
  %206 = phi i8 [ %201, %197 ], [ %277, %276 ]
  %207 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %49, align 8
  %208 = load i32, i32* %51, align 4
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %207, i64 %209
  %211 = icmp eq i32 %208, 0
  br i1 %211, label %283, label %212

212:                                              ; preds = %205
  %213 = bitcast %"class.WTF::PODInterval"* %14 to i8*
  %214 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %14, i64 0, i32 2
  %215 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %14, i64 0, i32 3
  %216 = bitcast %"class.blink::TextTrackCue"** %214 to i8*
  %217 = bitcast %"class.WTF::PODInterval"* %14 to i8*
  %218 = bitcast double* %215 to i8*
  br label %291

219:                                              ; preds = %197, %276
  %220 = phi i8 [ %277, %276 ], [ %201, %197 ]
  %221 = phi i32 [ %278, %276 ], [ 0, %197 ]
  %222 = call dereferenceable(40) %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %9, i32 %221) #8
  %223 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %49, align 8
  %224 = load i32, i32* %51, align 4
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %223, i64 %225
  %227 = icmp eq i32 %224, 0
  br i1 %227, label %264, label %228

228:                                              ; preds = %219
  %229 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %222, i64 0, i32 0
  %230 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %222, i64 0, i32 1
  %231 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %222, i64 0, i32 2
  %232 = bitcast %"class.blink::TextTrackCue"** %231 to i8*
  br label %233

233:                                              ; preds = %254, %228
  %234 = phi %"class.WTF::PODInterval"* [ %223, %228 ], [ %255, %254 ]
  %235 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %234, i64 0, i32 0
  %236 = load double, double* %235, align 8
  %237 = load double, double* %229, align 8
  %238 = fcmp oeq double %236, %237
  br i1 %238, label %239, label %254

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %234, i64 0, i32 1
  %241 = load double, double* %240, align 8
  %242 = load double, double* %230, align 8
  %243 = fcmp oeq double %241, %242
  br i1 %243, label %244, label %254

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %234, i64 0, i32 2
  %246 = bitcast %"class.blink::TextTrackCue"** %245 to i8*
  %247 = call i8* @llvm.ptr.annotation.p0i8(i8* %246, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %248 = bitcast i8* %247 to %"class.blink::TextTrackCue"**
  %249 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %248, align 8
  %250 = call i8* @llvm.ptr.annotation.p0i8(i8* %232, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %251 = bitcast i8* %250 to %"class.blink::TextTrackCue"**
  %252 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %251, align 8
  %253 = icmp eq %"class.blink::TextTrackCue"* %249, %252
  br i1 %253, label %257, label %254

254:                                              ; preds = %244, %239, %233
  %255 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %234, i64 1
  %256 = icmp ult %"class.WTF::PODInterval"* %255, %226
  br i1 %256, label %233, label %264

257:                                              ; preds = %244
  %258 = ptrtoint %"class.WTF::PODInterval"* %234 to i64
  %259 = ptrtoint %"class.WTF::PODInterval"* %223 to i64
  %260 = sub i64 %258, %259
  %261 = sdiv exact i64 %260, 40
  %262 = trunc i64 %261 to i32
  %263 = icmp eq i32 %262, -1
  br i1 %263, label %264, label %276

264:                                              ; preds = %254, %257, %219
  %265 = call dereferenceable(40) %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %9, i32 %221) #8
  %266 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %265, i64 0, i32 2
  %267 = bitcast %"class.blink::TextTrackCue"** %266 to i8*
  %268 = call i8* @llvm.ptr.annotation.p0i8(i8* %267, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %269 = bitcast i8* %268 to %"class.blink::TextTrackCue"**
  %270 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %269, align 8
  %271 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %270, i64 0, i32 6
  %272 = load i8, i8* %271, align 4
  %273 = and i8 %272, 1
  %274 = icmp eq i8 %273, 0
  %275 = select i1 %274, i8 %220, i8 1
  br label %276

276:                                              ; preds = %257, %264
  %277 = phi i8 [ %220, %257 ], [ %275, %264 ]
  %278 = add nuw i32 %221, 1
  %279 = and i8 %277, 1
  %280 = icmp eq i8 %279, 0
  %281 = icmp ult i32 %278, %199
  %282 = and i1 %281, %280
  br i1 %282, label %219, label %205

283:                                              ; preds = %310, %205
  %284 = phi i8 [ %206, %205 ], [ %311, %310 ]
  %285 = and i8 %284, 1
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %1139, label %287

287:                                              ; preds = %283
  %288 = call zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"* %31) #8
  %289 = xor i1 %288, true
  %290 = and i1 %203, %289
  br i1 %290, label %318, label %314

291:                                              ; preds = %212, %310
  %292 = phi i8 [ %206, %212 ], [ %311, %310 ]
  %293 = phi %"class.WTF::PODInterval"* [ %207, %212 ], [ %312, %310 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %213) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %217, i8 -1, i64 16, i1 false)
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %214, align 8
  %294 = bitcast %"class.WTF::PODInterval"* %293 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 -1, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %213, i8* align 8 %294, i64 40, i1 false)
  %295 = call i8* @llvm.ptr.annotation.p0i8(i8* %216, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %296 = bitcast i8* %295 to %"class.blink::TextTrackCue"**
  %297 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %296, align 8
  %298 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %297, i64 0, i32 6
  %299 = load i8, i8* %298, align 4
  %300 = and i8 %299, 1
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %310, label %302

302:                                              ; preds = %291
  %303 = call i8* @llvm.ptr.annotation.p0i8(i8* %216, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %304 = bitcast i8* %303 to %"class.blink::TextTrackCue"**
  %305 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %304, align 8
  %306 = bitcast %"class.blink::TextTrackCue"* %305 to void (%"class.blink::TextTrackCue"*, double)***
  %307 = load void (%"class.blink::TextTrackCue"*, double)**, void (%"class.blink::TextTrackCue"*, double)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.blink::TextTrackCue"*, double)*, void (%"class.blink::TextTrackCue"*, double)** %307, i64 28
  %309 = load void (%"class.blink::TextTrackCue"*, double)*, void (%"class.blink::TextTrackCue"*, double)** %308, align 8
  call void %309(%"class.blink::TextTrackCue"* %305, double %32) #8
  br label %310

310:                                              ; preds = %291, %302
  %311 = phi i8 [ %292, %302 ], [ 1, %291 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %213) #8
  %312 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %293, i64 1
  %313 = icmp eq %"class.WTF::PODInterval"* %312, %210
  br i1 %313, label %283, label %291

314:                                              ; preds = %385, %287
  %315 = call zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"* %31) #8
  %316 = xor i1 %315, true
  %317 = and i1 %200, %316
  br i1 %317, label %415, label %391

318:                                              ; preds = %287, %385
  %319 = phi i32 [ %386, %385 ], [ 0, %287 ]
  %320 = call dereferenceable(40) %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %9, i32 %319) #8
  %321 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %320, i64 0, i32 2
  %322 = bitcast %"class.blink::TextTrackCue"** %321 to i8*
  %323 = call i8* @llvm.ptr.annotation.p0i8(i8* %322, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %324 = bitcast i8* %323 to %"class.blink::TextTrackCue"**
  %325 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %324, align 8
  %326 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %325, i64 0, i32 6
  %327 = load i8, i8* %326, align 4
  %328 = and i8 %327, 2
  %329 = icmp eq i8 %328, 0
  br i1 %329, label %385, label %330

330:                                              ; preds = %318
  %331 = call dereferenceable(40) %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %9, i32 %319) #8
  %332 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %331, i64 0, i32 2
  %333 = bitcast %"class.blink::TextTrackCue"** %332 to i8*
  %334 = call i8* @llvm.ptr.annotation.p0i8(i8* %333, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %335 = bitcast i8* %334 to %"class.blink::TextTrackCue"**
  %336 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %335, align 8
  %337 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %336, i64 0, i32 6
  %338 = load i8, i8* %337, align 4
  %339 = and i8 %338, 1
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %385, label %341

341:                                              ; preds = %330
  %342 = call dereferenceable(40) %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %9, i32 %319) #8
  %343 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %49, align 8
  %344 = load i32, i32* %51, align 4
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %343, i64 %345
  %347 = icmp eq i32 %344, 0
  br i1 %347, label %384, label %348

348:                                              ; preds = %341
  %349 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %342, i64 0, i32 0
  %350 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %342, i64 0, i32 1
  %351 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %342, i64 0, i32 2
  %352 = bitcast %"class.blink::TextTrackCue"** %351 to i8*
  br label %353

353:                                              ; preds = %374, %348
  %354 = phi %"class.WTF::PODInterval"* [ %343, %348 ], [ %375, %374 ]
  %355 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %354, i64 0, i32 0
  %356 = load double, double* %355, align 8
  %357 = load double, double* %349, align 8
  %358 = fcmp oeq double %356, %357
  br i1 %358, label %359, label %374

359:                                              ; preds = %353
  %360 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %354, i64 0, i32 1
  %361 = load double, double* %360, align 8
  %362 = load double, double* %350, align 8
  %363 = fcmp oeq double %361, %362
  br i1 %363, label %364, label %374

364:                                              ; preds = %359
  %365 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %354, i64 0, i32 2
  %366 = bitcast %"class.blink::TextTrackCue"** %365 to i8*
  %367 = call i8* @llvm.ptr.annotation.p0i8(i8* %366, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %368 = bitcast i8* %367 to %"class.blink::TextTrackCue"**
  %369 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %368, align 8
  %370 = call i8* @llvm.ptr.annotation.p0i8(i8* %352, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %371 = bitcast i8* %370 to %"class.blink::TextTrackCue"**
  %372 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %371, align 8
  %373 = icmp eq %"class.blink::TextTrackCue"* %369, %372
  br i1 %373, label %377, label %374

374:                                              ; preds = %364, %359, %353
  %375 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %354, i64 1
  %376 = icmp ult %"class.WTF::PODInterval"* %375, %346
  br i1 %376, label %353, label %384

377:                                              ; preds = %364
  %378 = ptrtoint %"class.WTF::PODInterval"* %354 to i64
  %379 = ptrtoint %"class.WTF::PODInterval"* %343 to i64
  %380 = sub i64 %378, %379
  %381 = sdiv exact i64 %380, 40
  %382 = trunc i64 %381 to i32
  %383 = icmp eq i32 %382, -1
  br i1 %383, label %384, label %385

384:                                              ; preds = %374, %377, %341
  call void @_ZN5blink16HTMLMediaElement5pauseEv(%"class.blink::HTMLMediaElement"* %31) #8
  br label %385

385:                                              ; preds = %377, %330, %318, %384
  %386 = add nuw i32 %319, 1
  %387 = call zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"* %31) #8
  %388 = xor i1 %387, true
  %389 = icmp ult i32 %386, %199
  %390 = and i1 %389, %388
  br i1 %390, label %318, label %314

391:                                              ; preds = %428, %314
  %392 = bitcast %"class.blink::HeapVector.765"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %392) #8
  %393 = getelementptr inbounds %"class.blink::HeapVector.765", %"class.blink::HeapVector.765"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %394 = getelementptr inbounds %"class.blink::HeapVector.765", %"class.blink::HeapVector.765"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %395 = getelementptr inbounds %"class.blink::HeapVector.765", %"class.blink::HeapVector.765"* %15, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %392, i8 0, i64 16, i1 false) #8
  %396 = bitcast %"class.blink::HeapVector.670"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %396) #8
  %397 = getelementptr inbounds %"class.blink::HeapVector.670", %"class.blink::HeapVector.670"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %398 = getelementptr inbounds %"class.blink::HeapVector.670", %"class.blink::HeapVector.670"* %16, i64 0, i32 0, i32 0, i32 0, i32 1
  %399 = getelementptr inbounds %"class.blink::HeapVector.670", %"class.blink::HeapVector.670"* %16, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %396, i8 0, i64 16, i1 false) #8
  %400 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %106, align 8
  %401 = load i32, i32* %108, align 4
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %400, i64 %402
  %404 = icmp eq i32 %401, 0
  br i1 %404, label %434, label %405

405:                                              ; preds = %391
  %406 = getelementptr inbounds %"class.blink::HeapVector.765", %"class.blink::HeapVector.765"* %15, i64 0, i32 0
  %407 = bitcast %"struct.std::__1::pair.773"* %17 to i8*
  %408 = bitcast %"struct.std::__1::pair.773"* %17 to i64*
  %409 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %17, i64 0, i32 1
  %410 = bitcast %"class.blink::TextTrackCue"** %409 to i64*
  %411 = bitcast %"struct.std::__1::pair.773"* %18 to i8*
  %412 = bitcast %"struct.std::__1::pair.773"* %18 to i64*
  %413 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %18, i64 0, i32 1
  %414 = bitcast %"class.blink::TextTrackCue"** %413 to i64*
  br label %450

415:                                              ; preds = %314, %428
  %416 = phi i32 [ %429, %428 ], [ 0, %314 ]
  %417 = call dereferenceable(40) %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %10, i32 %416) #8
  %418 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %417, i64 0, i32 2
  %419 = bitcast %"class.blink::TextTrackCue"** %418 to i8*
  %420 = call i8* @llvm.ptr.annotation.p0i8(i8* %419, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %421 = bitcast i8* %420 to %"class.blink::TextTrackCue"**
  %422 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %421, align 8
  %423 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %422, i64 0, i32 6
  %424 = load i8, i8* %423, align 4
  %425 = and i8 %424, 2
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %428, label %427

427:                                              ; preds = %415
  call void @_ZN5blink16HTMLMediaElement5pauseEv(%"class.blink::HTMLMediaElement"* %31) #8
  br label %428

428:                                              ; preds = %415, %427
  %429 = add nuw i32 %416, 1
  %430 = call zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"* %31) #8
  %431 = xor i1 %430, true
  %432 = icmp ult i32 %429, %198
  %433 = and i1 %432, %431
  br i1 %433, label %415, label %391

434:                                              ; preds = %586, %391
  %435 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %96, align 8
  %436 = load i32, i32* %97, align 4
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %435, i64 %437
  %439 = icmp eq i32 %436, 0
  %440 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %49, align 8
  %441 = load i32, i32* %51, align 4
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %440, i64 %442
  br i1 %439, label %589, label %444

444:                                              ; preds = %434
  %445 = bitcast %"struct.std::__1::pair.773"* %19 to i8*
  %446 = bitcast %"struct.std::__1::pair.773"* %19 to i64*
  %447 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %19, i64 0, i32 1
  %448 = bitcast %"class.blink::TextTrackCue"** %447 to i64*
  %449 = getelementptr inbounds %"class.blink::HeapVector.765", %"class.blink::HeapVector.765"* %15, i64 0, i32 0
  br label %599

450:                                              ; preds = %405, %586
  %451 = phi %"class.WTF::PODInterval"* [ %400, %405 ], [ %587, %586 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %407) #8
  %452 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %451, i64 0, i32 2
  %453 = bitcast %"class.blink::TextTrackCue"** %452 to i8*
  %454 = call i8* @llvm.ptr.annotation.p0i8(i8* %453, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %455 = bitcast i8* %454 to %"class.blink::TextTrackCue"**
  %456 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %455, align 8
  %457 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %456, i64 0, i32 2
  %458 = bitcast double* %457 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = call i8* @llvm.ptr.annotation.p0i8(i8* %453, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %461 = bitcast i8* %460 to i64*
  %462 = load i64, i64* %461, align 8
  store i64 %459, i64* %408, align 8
  store i64 %462, i64* %410, align 8
  %463 = load i32, i32* %395, align 4
  %464 = load i32, i32* %394, align 8
  %465 = icmp eq i32 %463, %464
  br i1 %465, label %512, label %466, !prof !25

466:                                              ; preds = %450
  %467 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %393, align 8
  %468 = zext i32 %463 to i64
  %469 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %467, i64 %468
  %470 = bitcast %"struct.std::__1::pair.771"* %469 to i64*
  store i64 %459, i64* %470, align 8
  %471 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %467, i64 %468, i32 1
  %472 = load i64, i64* %410, align 8
  %473 = bitcast %"class.blink::Member.29"* %471 to i64*
  store i64 %472, i64* %473, align 8
  %474 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %509, label %476

476:                                              ; preds = %466
  %477 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %478 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %477, i64 0, i32 1
  %479 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %478) #8
  %480 = icmp eq i8* %479, null
  br i1 %480, label %481, label %483, !prof !25

481:                                              ; preds = %476
  %482 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %478, i8* %482) #8
  br label %483

483:                                              ; preds = %481, %476
  %484 = phi i8* [ %482, %481 ], [ %479, %476 ]
  %485 = bitcast i8* %484 to %"class.blink::ThreadState"**
  %486 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %485, align 8
  %487 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %486, i64 0, i32 9
  %488 = load i8, i8* %487, align 1, !range !8
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %509, label %490

490:                                              ; preds = %483
  %491 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %486, i64 0, i32 13
  %492 = load i64, i64* %491, align 8
  %493 = add i64 %492, 1
  store i64 %493, i64* %491, align 8
  %494 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %486, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %495 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %494, align 8
  %496 = load atomic i64, i64* %473 monotonic, align 8
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %506, label %498

498:                                              ; preds = %490
  %499 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %495, i64 0, i32 0, i32 0
  %500 = inttoptr i64 %496 to i8*
  %501 = bitcast %"class.blink::MarkingVisitor"* %495 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %502 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %501, align 8
  %503 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %502, i64 5
  %504 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %503, align 8
  call void %504(%"class.blink::Visitor"* %499, i8* nonnull %500, i8* %500, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv) #8
  %505 = load i64, i64* %491, align 8
  br label %506

506:                                              ; preds = %498, %490
  %507 = phi i64 [ %493, %490 ], [ %505, %498 ]
  %508 = add i64 %507, -1
  store i64 %508, i64* %491, align 8
  br label %509

509:                                              ; preds = %466, %483, %506
  %510 = load i32, i32* %395, align 4
  %511 = add i32 %510, 1
  store i32 %511, i32* %395, align 4
  br label %513

512:                                              ; preds = %450
  call void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IdPS5_EEEEvOT_(%"class.WTF::Vector.768"* nonnull %406, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %17) #8
  br label %513

513:                                              ; preds = %509, %512
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %407) #8
  %514 = call i8* @llvm.ptr.annotation.p0i8(i8* %453, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %515 = bitcast i8* %514 to %"class.blink::TextTrackCue"**
  %516 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %515, align 8
  %517 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %516, i64 0, i32 2
  %518 = load double, double* %517, align 8
  %519 = call i8* @llvm.ptr.annotation.p0i8(i8* %453, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %520 = bitcast i8* %519 to %"class.blink::TextTrackCue"**
  %521 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %520, align 8
  %522 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %521, i64 0, i32 3
  %523 = load double, double* %522, align 8
  %524 = fcmp olt double %518, %523
  br i1 %524, label %525, label %586

525:                                              ; preds = %513
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %411) #8
  %526 = call i8* @llvm.ptr.annotation.p0i8(i8* %453, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %527 = bitcast i8* %526 to %"class.blink::TextTrackCue"**
  %528 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %527, align 8
  %529 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %528, i64 0, i32 3
  %530 = bitcast double* %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = call i8* @llvm.ptr.annotation.p0i8(i8* %453, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %533 = bitcast i8* %532 to i64*
  %534 = load i64, i64* %533, align 8
  store i64 %531, i64* %412, align 8
  store i64 %534, i64* %414, align 8
  %535 = load i32, i32* %395, align 4
  %536 = load i32, i32* %394, align 8
  %537 = icmp eq i32 %535, %536
  br i1 %537, label %584, label %538, !prof !25

538:                                              ; preds = %525
  %539 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %393, align 8
  %540 = zext i32 %535 to i64
  %541 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %539, i64 %540
  %542 = bitcast %"struct.std::__1::pair.771"* %541 to i64*
  store i64 %531, i64* %542, align 8
  %543 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %539, i64 %540, i32 1
  %544 = load i64, i64* %414, align 8
  %545 = bitcast %"class.blink::Member.29"* %543 to i64*
  store i64 %544, i64* %545, align 8
  %546 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %581, label %548

548:                                              ; preds = %538
  %549 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %550 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %549, i64 0, i32 1
  %551 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %550) #8
  %552 = icmp eq i8* %551, null
  br i1 %552, label %553, label %555, !prof !25

553:                                              ; preds = %548
  %554 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %550, i8* %554) #8
  br label %555

555:                                              ; preds = %553, %548
  %556 = phi i8* [ %554, %553 ], [ %551, %548 ]
  %557 = bitcast i8* %556 to %"class.blink::ThreadState"**
  %558 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %557, align 8
  %559 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %558, i64 0, i32 9
  %560 = load i8, i8* %559, align 1, !range !8
  %561 = icmp eq i8 %560, 0
  br i1 %561, label %581, label %562

562:                                              ; preds = %555
  %563 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %558, i64 0, i32 13
  %564 = load i64, i64* %563, align 8
  %565 = add i64 %564, 1
  store i64 %565, i64* %563, align 8
  %566 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %558, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %567 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %566, align 8
  %568 = load atomic i64, i64* %545 monotonic, align 8
  %569 = icmp eq i64 %568, 0
  br i1 %569, label %578, label %570

570:                                              ; preds = %562
  %571 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %567, i64 0, i32 0, i32 0
  %572 = inttoptr i64 %568 to i8*
  %573 = bitcast %"class.blink::MarkingVisitor"* %567 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %574 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %573, align 8
  %575 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %574, i64 5
  %576 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %575, align 8
  call void %576(%"class.blink::Visitor"* %571, i8* nonnull %572, i8* %572, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv) #8
  %577 = load i64, i64* %563, align 8
  br label %578

578:                                              ; preds = %570, %562
  %579 = phi i64 [ %565, %562 ], [ %577, %570 ]
  %580 = add i64 %579, -1
  store i64 %580, i64* %563, align 8
  br label %581

581:                                              ; preds = %538, %555, %578
  %582 = load i32, i32* %395, align 4
  %583 = add i32 %582, 1
  store i32 %583, i32* %395, align 4
  br label %585

584:                                              ; preds = %525
  call void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IdPS5_EEEEvOT_(%"class.WTF::Vector.768"* nonnull %406, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %18) #8
  br label %585

585:                                              ; preds = %581, %584
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %411) #8
  br label %586

586:                                              ; preds = %585, %513
  %587 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %451, i64 1
  %588 = icmp eq %"class.WTF::PODInterval"* %587, %403
  br i1 %588, label %434, label %450

589:                                              ; preds = %704, %434
  %590 = phi %"class.WTF::PODInterval"* [ %440, %434 ], [ %707, %704 ]
  %591 = phi %"class.WTF::PODInterval"* [ %443, %434 ], [ %710, %704 ]
  %592 = icmp eq %"class.WTF::PODInterval"* %590, %591
  br i1 %592, label %711, label %593

593:                                              ; preds = %589
  %594 = bitcast %"struct.std::__1::pair.773"* %20 to i8*
  %595 = bitcast %"struct.std::__1::pair.773"* %20 to i64*
  %596 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %20, i64 0, i32 1
  %597 = bitcast %"class.blink::TextTrackCue"** %596 to i64*
  %598 = getelementptr inbounds %"class.blink::HeapVector.765", %"class.blink::HeapVector.765"* %15, i64 0, i32 0
  br label %729

599:                                              ; preds = %444, %704
  %600 = phi %"class.WTF::PODInterval"* [ %443, %444 ], [ %710, %704 ]
  %601 = phi i32 [ %441, %444 ], [ %708, %704 ]
  %602 = phi %"class.WTF::PODInterval"* [ %440, %444 ], [ %707, %704 ]
  %603 = phi %"class.WTF::PODInterval"* [ %435, %444 ], [ %705, %704 ]
  %604 = icmp eq i32 %601, 0
  br i1 %604, label %641, label %605

605:                                              ; preds = %599
  %606 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %603, i64 0, i32 0
  %607 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %603, i64 0, i32 1
  %608 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %603, i64 0, i32 2
  %609 = bitcast %"class.blink::TextTrackCue"** %608 to i8*
  br label %610

610:                                              ; preds = %631, %605
  %611 = phi %"class.WTF::PODInterval"* [ %602, %605 ], [ %632, %631 ]
  %612 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %611, i64 0, i32 0
  %613 = load double, double* %612, align 8
  %614 = load double, double* %606, align 8
  %615 = fcmp oeq double %613, %614
  br i1 %615, label %616, label %631

616:                                              ; preds = %610
  %617 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %611, i64 0, i32 1
  %618 = load double, double* %617, align 8
  %619 = load double, double* %607, align 8
  %620 = fcmp oeq double %618, %619
  br i1 %620, label %621, label %631

621:                                              ; preds = %616
  %622 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %611, i64 0, i32 2
  %623 = bitcast %"class.blink::TextTrackCue"** %622 to i8*
  %624 = call i8* @llvm.ptr.annotation.p0i8(i8* %623, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %625 = bitcast i8* %624 to %"class.blink::TextTrackCue"**
  %626 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %625, align 8
  %627 = call i8* @llvm.ptr.annotation.p0i8(i8* %609, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %628 = bitcast i8* %627 to %"class.blink::TextTrackCue"**
  %629 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %628, align 8
  %630 = icmp eq %"class.blink::TextTrackCue"* %626, %629
  br i1 %630, label %634, label %631

631:                                              ; preds = %621, %616, %610
  %632 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %611, i64 1
  %633 = icmp ult %"class.WTF::PODInterval"* %632, %600
  br i1 %633, label %610, label %641

634:                                              ; preds = %621
  %635 = ptrtoint %"class.WTF::PODInterval"* %611 to i64
  %636 = ptrtoint %"class.WTF::PODInterval"* %602 to i64
  %637 = sub i64 %635, %636
  %638 = sdiv exact i64 %637, 40
  %639 = trunc i64 %638 to i32
  %640 = icmp eq i32 %639, -1
  br i1 %640, label %641, label %704

641:                                              ; preds = %631, %599, %634
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %445) #8
  %642 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %603, i64 0, i32 2
  %643 = bitcast %"class.blink::TextTrackCue"** %642 to i8*
  %644 = call i8* @llvm.ptr.annotation.p0i8(i8* %643, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %645 = bitcast i8* %644 to %"class.blink::TextTrackCue"**
  %646 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %645, align 8
  %647 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %646, i64 0, i32 3
  %648 = bitcast double* %647 to i64*
  %649 = load i64, i64* %648, align 8
  %650 = call i8* @llvm.ptr.annotation.p0i8(i8* %643, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %651 = bitcast i8* %650 to i64*
  %652 = load i64, i64* %651, align 8
  store i64 %649, i64* %446, align 8
  store i64 %652, i64* %448, align 8
  %653 = load i32, i32* %395, align 4
  %654 = load i32, i32* %394, align 8
  %655 = icmp eq i32 %653, %654
  br i1 %655, label %702, label %656, !prof !25

656:                                              ; preds = %641
  %657 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %393, align 8
  %658 = zext i32 %653 to i64
  %659 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %657, i64 %658
  %660 = bitcast %"struct.std::__1::pair.771"* %659 to i64*
  store i64 %649, i64* %660, align 8
  %661 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %657, i64 %658, i32 1
  %662 = load i64, i64* %448, align 8
  %663 = bitcast %"class.blink::Member.29"* %661 to i64*
  store i64 %662, i64* %663, align 8
  %664 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %699, label %666

666:                                              ; preds = %656
  %667 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %668 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %667, i64 0, i32 1
  %669 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %668) #8
  %670 = icmp eq i8* %669, null
  br i1 %670, label %671, label %673, !prof !25

671:                                              ; preds = %666
  %672 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %668, i8* %672) #8
  br label %673

673:                                              ; preds = %671, %666
  %674 = phi i8* [ %672, %671 ], [ %669, %666 ]
  %675 = bitcast i8* %674 to %"class.blink::ThreadState"**
  %676 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %675, align 8
  %677 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %676, i64 0, i32 9
  %678 = load i8, i8* %677, align 1, !range !8
  %679 = icmp eq i8 %678, 0
  br i1 %679, label %699, label %680

680:                                              ; preds = %673
  %681 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %676, i64 0, i32 13
  %682 = load i64, i64* %681, align 8
  %683 = add i64 %682, 1
  store i64 %683, i64* %681, align 8
  %684 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %676, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %685 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %684, align 8
  %686 = load atomic i64, i64* %663 monotonic, align 8
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %696, label %688

688:                                              ; preds = %680
  %689 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %685, i64 0, i32 0, i32 0
  %690 = inttoptr i64 %686 to i8*
  %691 = bitcast %"class.blink::MarkingVisitor"* %685 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %692 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %691, align 8
  %693 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %692, i64 5
  %694 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %693, align 8
  call void %694(%"class.blink::Visitor"* %689, i8* nonnull %690, i8* %690, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv) #8
  %695 = load i64, i64* %681, align 8
  br label %696

696:                                              ; preds = %688, %680
  %697 = phi i64 [ %683, %680 ], [ %695, %688 ]
  %698 = add i64 %697, -1
  store i64 %698, i64* %681, align 8
  br label %699

699:                                              ; preds = %656, %673, %696
  %700 = load i32, i32* %395, align 4
  %701 = add i32 %700, 1
  store i32 %701, i32* %395, align 4
  br label %703

702:                                              ; preds = %641
  call void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IdPS5_EEEEvOT_(%"class.WTF::Vector.768"* nonnull %449, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %19) #8
  br label %703

703:                                              ; preds = %699, %702
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %445) #8
  br label %704

704:                                              ; preds = %634, %703
  %705 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %603, i64 1
  %706 = icmp eq %"class.WTF::PODInterval"* %705, %438
  %707 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %49, align 8
  %708 = load i32, i32* %51, align 4
  %709 = zext i32 %708 to i64
  %710 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %707, i64 %709
  br i1 %706, label %589, label %599

711:                                              ; preds = %835, %589
  %712 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %393, align 8
  %713 = load i32, i32* %395, align 4
  %714 = zext i32 %713 to i64
  %715 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %712, i64 %714
  %716 = bitcast i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %716)
  store i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)* @_ZN5blinkL19EventTimeCueCompareERKNSt3__14pairIdPNS_12TextTrackCueEEES6_, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEvT0_SF_T_(%"struct.std::__1::pair.771"* %712, %"struct.std::__1::pair.771"* %715, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %716)
  %717 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %393, align 8
  %718 = load i32, i32* %395, align 4
  %719 = zext i32 %718 to i64
  %720 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %717, i64 %719
  %721 = icmp eq i32 %718, 0
  %722 = getelementptr inbounds %"class.blink::HeapVector.670", %"class.blink::HeapVector.670"* %16, i64 0, i32 0
  br i1 %721, label %838, label %723

723:                                              ; preds = %711
  %724 = bitcast %"class.blink::TextTrack"** %21 to i8*
  %725 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kEnterE, align 8
  %726 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kExitE, align 8
  %727 = bitcast %"class.WTF::AtomicString"* %22 to i8*
  %728 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  br label %851

729:                                              ; preds = %593, %835
  %730 = phi %"class.WTF::PODInterval"* [ %590, %593 ], [ %836, %835 ]
  %731 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %96, align 8
  %732 = load i32, i32* %97, align 4
  %733 = zext i32 %732 to i64
  %734 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %731, i64 %733
  %735 = icmp eq i32 %732, 0
  br i1 %735, label %772, label %736

736:                                              ; preds = %729
  %737 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %730, i64 0, i32 0
  %738 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %730, i64 0, i32 1
  %739 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %730, i64 0, i32 2
  %740 = bitcast %"class.blink::TextTrackCue"** %739 to i8*
  br label %741

741:                                              ; preds = %762, %736
  %742 = phi %"class.WTF::PODInterval"* [ %731, %736 ], [ %763, %762 ]
  %743 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %742, i64 0, i32 0
  %744 = load double, double* %743, align 8
  %745 = load double, double* %737, align 8
  %746 = fcmp oeq double %744, %745
  br i1 %746, label %747, label %762

747:                                              ; preds = %741
  %748 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %742, i64 0, i32 1
  %749 = load double, double* %748, align 8
  %750 = load double, double* %738, align 8
  %751 = fcmp oeq double %749, %750
  br i1 %751, label %752, label %762

752:                                              ; preds = %747
  %753 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %742, i64 0, i32 2
  %754 = bitcast %"class.blink::TextTrackCue"** %753 to i8*
  %755 = call i8* @llvm.ptr.annotation.p0i8(i8* %754, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %756 = bitcast i8* %755 to %"class.blink::TextTrackCue"**
  %757 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %756, align 8
  %758 = call i8* @llvm.ptr.annotation.p0i8(i8* %740, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %759 = bitcast i8* %758 to %"class.blink::TextTrackCue"**
  %760 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %759, align 8
  %761 = icmp eq %"class.blink::TextTrackCue"* %757, %760
  br i1 %761, label %765, label %762

762:                                              ; preds = %752, %747, %741
  %763 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %742, i64 1
  %764 = icmp ult %"class.WTF::PODInterval"* %763, %734
  br i1 %764, label %741, label %772

765:                                              ; preds = %752
  %766 = ptrtoint %"class.WTF::PODInterval"* %742 to i64
  %767 = ptrtoint %"class.WTF::PODInterval"* %731 to i64
  %768 = sub i64 %766, %767
  %769 = sdiv exact i64 %768, 40
  %770 = trunc i64 %769 to i32
  %771 = icmp eq i32 %770, -1
  br i1 %771, label %772, label %835

772:                                              ; preds = %762, %729, %765
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %594) #8
  %773 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %730, i64 0, i32 2
  %774 = bitcast %"class.blink::TextTrackCue"** %773 to i8*
  %775 = call i8* @llvm.ptr.annotation.p0i8(i8* %774, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %776 = bitcast i8* %775 to %"class.blink::TextTrackCue"**
  %777 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %776, align 8
  %778 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %777, i64 0, i32 2
  %779 = bitcast double* %778 to i64*
  %780 = load i64, i64* %779, align 8
  %781 = call i8* @llvm.ptr.annotation.p0i8(i8* %774, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %782 = bitcast i8* %781 to i64*
  %783 = load i64, i64* %782, align 8
  store i64 %780, i64* %595, align 8
  store i64 %783, i64* %597, align 8
  %784 = load i32, i32* %395, align 4
  %785 = load i32, i32* %394, align 8
  %786 = icmp eq i32 %784, %785
  br i1 %786, label %833, label %787, !prof !25

787:                                              ; preds = %772
  %788 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %393, align 8
  %789 = zext i32 %784 to i64
  %790 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %788, i64 %789
  %791 = bitcast %"struct.std::__1::pair.771"* %790 to i64*
  store i64 %780, i64* %791, align 8
  %792 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %788, i64 %789, i32 1
  %793 = load i64, i64* %597, align 8
  %794 = bitcast %"class.blink::Member.29"* %792 to i64*
  store i64 %793, i64* %794, align 8
  %795 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %796 = icmp eq i32 %795, 0
  br i1 %796, label %830, label %797

797:                                              ; preds = %787
  %798 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %799 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %798, i64 0, i32 1
  %800 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %799) #8
  %801 = icmp eq i8* %800, null
  br i1 %801, label %802, label %804, !prof !25

802:                                              ; preds = %797
  %803 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %799, i8* %803) #8
  br label %804

804:                                              ; preds = %802, %797
  %805 = phi i8* [ %803, %802 ], [ %800, %797 ]
  %806 = bitcast i8* %805 to %"class.blink::ThreadState"**
  %807 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %806, align 8
  %808 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %807, i64 0, i32 9
  %809 = load i8, i8* %808, align 1, !range !8
  %810 = icmp eq i8 %809, 0
  br i1 %810, label %830, label %811

811:                                              ; preds = %804
  %812 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %807, i64 0, i32 13
  %813 = load i64, i64* %812, align 8
  %814 = add i64 %813, 1
  store i64 %814, i64* %812, align 8
  %815 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %807, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %816 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %815, align 8
  %817 = load atomic i64, i64* %794 monotonic, align 8
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %827, label %819

819:                                              ; preds = %811
  %820 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %816, i64 0, i32 0, i32 0
  %821 = inttoptr i64 %817 to i8*
  %822 = bitcast %"class.blink::MarkingVisitor"* %816 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %823 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %822, align 8
  %824 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %823, i64 5
  %825 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %824, align 8
  call void %825(%"class.blink::Visitor"* %820, i8* nonnull %821, i8* %821, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv) #8
  %826 = load i64, i64* %812, align 8
  br label %827

827:                                              ; preds = %819, %811
  %828 = phi i64 [ %814, %811 ], [ %826, %819 ]
  %829 = add i64 %828, -1
  store i64 %829, i64* %812, align 8
  br label %830

830:                                              ; preds = %787, %804, %827
  %831 = load i32, i32* %395, align 4
  %832 = add i32 %831, 1
  store i32 %832, i32* %395, align 4
  br label %834

833:                                              ; preds = %772
  call void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IdPS5_EEEEvOT_(%"class.WTF::Vector.768"* nonnull %598, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %20) #8
  br label %834

834:                                              ; preds = %830, %833
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %594) #8
  br label %835

835:                                              ; preds = %765, %834
  %836 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %730, i64 1
  %837 = icmp eq %"class.WTF::PODInterval"* %836, %591
  br i1 %837, label %711, label %729

838:                                              ; preds = %972, %711
  %839 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %397, align 8
  %840 = load i32, i32* %399, align 4
  %841 = zext i32 %840 to i64
  %842 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %839, i64 %841
  %843 = bitcast i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %843)
  store i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)* @_ZN5blinkL17TrackIndexCompareEPNS_9TextTrackES1_, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  call void @_ZNSt3__16__sortIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member.16"* %839, %"class.blink::Member.16"* %842, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** nonnull dereferenceable(8) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %843)
  %844 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %397, align 8
  %845 = load i32, i32* %399, align 4
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %844, i64 %846
  %848 = icmp eq i32 %845, 0
  br i1 %848, label %975, label %849

849:                                              ; preds = %838
  %850 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kCuechangeE, align 8
  br label %1005

851:                                              ; preds = %723, %972
  %852 = phi %"struct.std::__1::pair.771"* [ %717, %723 ], [ %973, %972 ]
  %853 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %852, i64 0, i32 1, i32 0, i32 0
  %854 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %853, align 8
  %855 = call %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"* %854) #8
  %856 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %397, align 8
  %857 = load i32, i32* %399, align 4
  %858 = zext i32 %857 to i64
  %859 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %856, i64 %858
  %860 = icmp eq i32 %857, 0
  br i1 %860, label %876, label %861

861:                                              ; preds = %851, %866
  %862 = phi %"class.blink::Member.16"* [ %867, %866 ], [ %856, %851 ]
  %863 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %862, i64 0, i32 0, i32 0
  %864 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %863, align 8
  %865 = icmp eq %"class.blink::TextTrack"* %864, %855
  br i1 %865, label %869, label %866

866:                                              ; preds = %861
  %867 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %862, i64 1
  %868 = icmp ult %"class.blink::Member.16"* %867, %859
  br i1 %868, label %861, label %876

869:                                              ; preds = %861
  %870 = ptrtoint %"class.blink::Member.16"* %862 to i64
  %871 = ptrtoint %"class.blink::Member.16"* %856 to i64
  %872 = sub i64 %870, %871
  %873 = lshr exact i64 %872, 3
  %874 = trunc i64 %873 to i32
  %875 = icmp eq i32 %874, -1
  br i1 %875, label %876, label %898

876:                                              ; preds = %866, %869, %851
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %724) #8
  %877 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %853, align 8
  %878 = call %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"* %877) #8
  store %"class.blink::TextTrack"* %878, %"class.blink::TextTrack"** %21, align 8
  %879 = load i32, i32* %399, align 4
  %880 = load i32, i32* %398, align 8
  %881 = icmp eq i32 %879, %880
  br i1 %881, label %896, label %882, !prof !25

882:                                              ; preds = %876
  %883 = ptrtoint %"class.blink::TextTrack"* %878 to i64
  %884 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %397, align 8
  %885 = zext i32 %879 to i64
  %886 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %884, i64 %885
  %887 = bitcast %"class.blink::Member.16"* %886 to i64*
  store atomic i64 %883, i64* %887 monotonic, align 8
  %888 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %893, label %890

890:                                              ; preds = %882
  %891 = bitcast %"class.blink::TextTrack"* %878 to i8*
  %892 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %891) #8
  br label %893

893:                                              ; preds = %890, %882
  %894 = load i32, i32* %399, align 4
  %895 = add i32 %894, 1
  store i32 %895, i32* %399, align 4
  br label %897

896:                                              ; preds = %876
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.673"* nonnull %722, %"class.blink::TextTrack"** nonnull dereferenceable(8) %21) #8
  br label %897

897:                                              ; preds = %893, %896
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %724) #8
  br label %898

898:                                              ; preds = %869, %897
  %899 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %853, align 8
  %900 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %899, i64 0, i32 2
  %901 = load double, double* %900, align 8
  %902 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %899, i64 0, i32 3
  %903 = load double, double* %902, align 8
  %904 = fcmp ult double %901, %903
  br i1 %904, label %921, label %905

905:                                              ; preds = %898
  %906 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %899, i64 0, i32 0, i32 0
  %907 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %908 = bitcast i8* %907 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %908, %"class.WTF::AtomicString"* dereferenceable(8) %725, i32 1, i32 1, i32 1) #8
  %909 = getelementptr inbounds i8, i8* %907, i64 -4
  %910 = bitcast i8* %909 to i16*
  %911 = load atomic i16, i16* %910 monotonic, align 2
  %912 = or i16 %911, 1
  store atomic i16 %912, i16* %910 release, align 2
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %908, %"class.blink::EventTarget"* %906) #8
  call void @_ZN5blink16HTMLMediaElement13ScheduleEventEPNS_5EventE(%"class.blink::HTMLMediaElement"* %31, %"class.blink::Event"* %908) #8
  %913 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %853, align 8
  %914 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %913, i64 0, i32 0, i32 0
  %915 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %916 = bitcast i8* %915 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %916, %"class.WTF::AtomicString"* dereferenceable(8) %726, i32 1, i32 1, i32 1) #8
  %917 = getelementptr inbounds i8, i8* %915, i64 -4
  %918 = bitcast i8* %917 to i16*
  %919 = load atomic i16, i16* %918 monotonic, align 2
  %920 = or i16 %919, 1
  store atomic i16 %920, i16* %918 release, align 2
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %916, %"class.blink::EventTarget"* %914) #8
  call void @_ZN5blink16HTMLMediaElement13ScheduleEventEPNS_5EventE(%"class.blink::HTMLMediaElement"* %31, %"class.blink::Event"* %916) #8
  br label %972

921:                                              ; preds = %898
  %922 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %852, i64 0, i32 0
  %923 = load double, double* %922, align 8
  %924 = fcmp oeq double %923, %901
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %727) #8
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %728, align 8
  %925 = select i1 %924, %"class.WTF::AtomicString"* %725, %"class.WTF::AtomicString"* %726
  %926 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %925, i64 0, i32 0, i32 0, i32 0
  %927 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %926, align 8
  store %"class.WTF::StringImpl"* %927, %"class.WTF::StringImpl"** %728, align 8
  %928 = icmp eq %"class.WTF::StringImpl"* %927, null
  br i1 %928, label %947, label %929

929:                                              ; preds = %921
  %930 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %927, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %931 = load atomic i32, i32* %930 monotonic, align 4
  %932 = and i32 %931, 2
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %934, label %947

934:                                              ; preds = %929
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %927, i64 0, i32 0
  %936 = load i32, i32* %935, align 4
  %937 = zext i32 %936 to i33
  %938 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %937, i33 1) #8
  %939 = extractvalue { i33, i1 } %938, 1
  %940 = extractvalue { i33, i1 } %938, 0
  %941 = icmp slt i33 %940, 0
  %942 = or i1 %939, %941
  br i1 %942, label %943, label %944, !prof !25

943:                                              ; preds = %934
  call void @llvm.trap() #8
  unreachable

944:                                              ; preds = %934
  %945 = trunc i33 %940 to i32
  store i32 %945, i32* %935, align 4
  %946 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %853, align 8
  br label %947

947:                                              ; preds = %921, %929, %944
  %948 = phi %"class.blink::TextTrackCue"* [ %899, %921 ], [ %899, %929 ], [ %946, %944 ]
  %949 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %948, i64 0, i32 0, i32 0
  %950 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %951 = bitcast i8* %950 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %951, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %22, i32 1, i32 1, i32 1) #8
  %952 = getelementptr inbounds i8, i8* %950, i64 -4
  %953 = bitcast i8* %952 to i16*
  %954 = load atomic i16, i16* %953 monotonic, align 2
  %955 = or i16 %954, 1
  store atomic i16 %955, i16* %953 release, align 2
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %951, %"class.blink::EventTarget"* %949) #8
  call void @_ZN5blink16HTMLMediaElement13ScheduleEventEPNS_5EventE(%"class.blink::HTMLMediaElement"* %31, %"class.blink::Event"* %951) #8
  %956 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %728, align 8
  %957 = icmp eq %"class.WTF::StringImpl"* %956, null
  br i1 %957, label %971, label %958

958:                                              ; preds = %947
  %959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %956, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %960 = load atomic i32, i32* %959 monotonic, align 4
  %961 = and i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %956, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  br i1 %962, label %965, label %967

965:                                              ; preds = %958
  %966 = add i32 %964, -1
  store i32 %966, i32* %963, align 4
  br label %967

967:                                              ; preds = %965, %958
  %968 = phi i32 [ %966, %965 ], [ %964, %958 ]
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %970, label %971

970:                                              ; preds = %967
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %956) #8
  br label %971

971:                                              ; preds = %947, %967, %970
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %727) #8
  br label %972

972:                                              ; preds = %971, %905
  %973 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %852, i64 1
  %974 = icmp eq %"struct.std::__1::pair.771"* %973, %720
  br i1 %974, label %838, label %851

975:                                              ; preds = %1033, %838
  %976 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %49, align 8
  %977 = load i32, i32* %51, align 4
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %976, i64 %978
  %980 = icmp eq i32 %977, 0
  br i1 %980, label %1036, label %981

981:                                              ; preds = %975
  %982 = shl nuw nsw i64 %978, 3
  %983 = add nsw i64 %982, -8
  %984 = lshr exact i64 %983, 3
  %985 = add nuw nsw i64 %984, 1
  %986 = and i64 %985, 3
  %987 = icmp eq i64 %986, 0
  br i1 %987, label %1002, label %988

988:                                              ; preds = %981, %988
  %989 = phi %"class.WTF::PODInterval"* [ %999, %988 ], [ %976, %981 ]
  %990 = phi i64 [ %1000, %988 ], [ %986, %981 ]
  %991 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %989, i64 0, i32 2
  %992 = bitcast %"class.blink::TextTrackCue"** %991 to i8*
  %993 = call i8* @llvm.ptr.annotation.p0i8(i8* %992, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %994 = bitcast i8* %993 to %"class.blink::TextTrackCue"**
  %995 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %994, align 8
  %996 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %995, i64 0, i32 6
  %997 = load i8, i8* %996, align 4
  %998 = or i8 %997, 1
  store i8 %998, i8* %996, align 4
  %999 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %989, i64 1
  %1000 = add i64 %990, -1
  %1001 = icmp eq i64 %1000, 0
  br i1 %1001, label %1002, label %988, !llvm.loop !32

1002:                                             ; preds = %988, %981
  %1003 = phi %"class.WTF::PODInterval"* [ %976, %981 ], [ %999, %988 ]
  %1004 = icmp ult i64 %983, 24
  br i1 %1004, label %1036, label %1042

1005:                                             ; preds = %849, %1033
  %1006 = phi %"class.blink::Member.16"* [ %844, %849 ], [ %1034, %1033 ]
  %1007 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1006, i64 0, i32 0, i32 0
  %1008 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %1007, align 8
  %1009 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %1008, i64 0, i32 0, i32 0
  %1010 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %1011 = bitcast i8* %1010 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %1011, %"class.WTF::AtomicString"* dereferenceable(8) %850, i32 1, i32 1, i32 1) #8
  %1012 = getelementptr inbounds i8, i8* %1010, i64 -4
  %1013 = bitcast i8* %1012 to i16*
  %1014 = load atomic i16, i16* %1013 monotonic, align 2
  %1015 = or i16 %1014, 1
  store atomic i16 %1015, i16* %1013 release, align 2
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %1011, %"class.blink::EventTarget"* %1009) #8
  call void @_ZN5blink16HTMLMediaElement13ScheduleEventEPNS_5EventE(%"class.blink::HTMLMediaElement"* %31, %"class.blink::Event"* %1011) #8
  %1016 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %1007, align 8
  %1017 = icmp eq %"class.blink::TextTrack"* %1016, null
  br i1 %1017, label %1033, label %1018

1018:                                             ; preds = %1005
  %1019 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %1016, i64 0, i32 7
  %1020 = load i32, i32* %1019, align 8
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1022, label %1033

1022:                                             ; preds = %1018
  %1023 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %1016, i64 1
  %1024 = bitcast %"class.blink::TextTrack"* %1023 to %"class.blink::HTMLTrackElement"**
  %1025 = load %"class.blink::HTMLTrackElement"*, %"class.blink::HTMLTrackElement"** %1024, align 8
  %1026 = getelementptr inbounds %"class.blink::HTMLTrackElement", %"class.blink::HTMLTrackElement"* %1025, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1027 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %1028 = bitcast i8* %1027 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %1028, %"class.WTF::AtomicString"* dereferenceable(8) %850, i32 1, i32 1, i32 1) #8
  %1029 = getelementptr inbounds i8, i8* %1027, i64 -4
  %1030 = bitcast i8* %1029 to i16*
  %1031 = load atomic i16, i16* %1030 monotonic, align 2
  %1032 = or i16 %1031, 1
  store atomic i16 %1032, i16* %1030 release, align 2
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %1028, %"class.blink::EventTarget"* %1026) #8
  call void @_ZN5blink16HTMLMediaElement13ScheduleEventEPNS_5EventE(%"class.blink::HTMLMediaElement"* %31, %"class.blink::Event"* %1028) #8
  br label %1033

1033:                                             ; preds = %1018, %1005, %1022
  %1034 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1006, i64 1
  %1035 = icmp eq %"class.blink::Member.16"* %1034, %847
  br i1 %1035, label %975, label %1005

1036:                                             ; preds = %1002, %1042, %975
  %1037 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %96, align 8
  %1038 = load i32, i32* %97, align 4
  %1039 = zext i32 %1038 to i64
  %1040 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1037, i64 %1039
  %1041 = icmp eq i32 %1038, 0
  br i1 %1041, label %1078, label %1080

1042:                                             ; preds = %1002, %1042
  %1043 = phi %"class.WTF::PODInterval"* [ %1076, %1042 ], [ %1003, %1002 ]
  %1044 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1043, i64 0, i32 2
  %1045 = bitcast %"class.blink::TextTrackCue"** %1044 to i8*
  %1046 = call i8* @llvm.ptr.annotation.p0i8(i8* %1045, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %1047 = bitcast i8* %1046 to %"class.blink::TextTrackCue"**
  %1048 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %1047, align 8
  %1049 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1048, i64 0, i32 6
  %1050 = load i8, i8* %1049, align 4
  %1051 = or i8 %1050, 1
  store i8 %1051, i8* %1049, align 4
  %1052 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1043, i64 1, i32 2
  %1053 = bitcast %"class.blink::TextTrackCue"** %1052 to i8*
  %1054 = call i8* @llvm.ptr.annotation.p0i8(i8* %1053, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %1055 = bitcast i8* %1054 to %"class.blink::TextTrackCue"**
  %1056 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %1055, align 8
  %1057 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1056, i64 0, i32 6
  %1058 = load i8, i8* %1057, align 4
  %1059 = or i8 %1058, 1
  store i8 %1059, i8* %1057, align 4
  %1060 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1043, i64 2, i32 2
  %1061 = bitcast %"class.blink::TextTrackCue"** %1060 to i8*
  %1062 = call i8* @llvm.ptr.annotation.p0i8(i8* %1061, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %1063 = bitcast i8* %1062 to %"class.blink::TextTrackCue"**
  %1064 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %1063, align 8
  %1065 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1064, i64 0, i32 6
  %1066 = load i8, i8* %1065, align 4
  %1067 = or i8 %1066, 1
  store i8 %1067, i8* %1065, align 4
  %1068 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1043, i64 3, i32 2
  %1069 = bitcast %"class.blink::TextTrackCue"** %1068 to i8*
  %1070 = call i8* @llvm.ptr.annotation.p0i8(i8* %1069, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %1071 = bitcast i8* %1070 to %"class.blink::TextTrackCue"**
  %1072 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %1071, align 8
  %1073 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1072, i64 0, i32 6
  %1074 = load i8, i8* %1073, align 4
  %1075 = or i8 %1074, 1
  store i8 %1075, i8* %1073, align 4
  %1076 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1043, i64 4
  %1077 = icmp eq %"class.WTF::PODInterval"* %1076, %979
  br i1 %1077, label %1036, label %1042

1078:                                             ; preds = %1136, %1036
  %1079 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector"* %98, %"class.WTF::Vector"* nonnull dereferenceable(16) %6)
  call void @_ZN5blink16HTMLMediaElement22UpdateTextTrackDisplayEv(%"class.blink::HTMLMediaElement"* %31) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %396) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %392) #8
  br label %1139

1080:                                             ; preds = %1036, %1136
  %1081 = phi %"class.WTF::PODInterval"* [ %1137, %1136 ], [ %1037, %1036 ]
  %1082 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %49, align 8
  %1083 = load i32, i32* %51, align 4
  %1084 = zext i32 %1083 to i64
  %1085 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1082, i64 %1084
  %1086 = icmp eq i32 %1083, 0
  br i1 %1086, label %1123, label %1087

1087:                                             ; preds = %1080
  %1088 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1081, i64 0, i32 0
  %1089 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1081, i64 0, i32 1
  %1090 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1081, i64 0, i32 2
  %1091 = bitcast %"class.blink::TextTrackCue"** %1090 to i8*
  br label %1092

1092:                                             ; preds = %1113, %1087
  %1093 = phi %"class.WTF::PODInterval"* [ %1082, %1087 ], [ %1114, %1113 ]
  %1094 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1093, i64 0, i32 0
  %1095 = load double, double* %1094, align 8
  %1096 = load double, double* %1088, align 8
  %1097 = fcmp oeq double %1095, %1096
  br i1 %1097, label %1098, label %1113

1098:                                             ; preds = %1092
  %1099 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1093, i64 0, i32 1
  %1100 = load double, double* %1099, align 8
  %1101 = load double, double* %1089, align 8
  %1102 = fcmp oeq double %1100, %1101
  br i1 %1102, label %1103, label %1113

1103:                                             ; preds = %1098
  %1104 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1093, i64 0, i32 2
  %1105 = bitcast %"class.blink::TextTrackCue"** %1104 to i8*
  %1106 = call i8* @llvm.ptr.annotation.p0i8(i8* %1105, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %1107 = bitcast i8* %1106 to %"class.blink::TextTrackCue"**
  %1108 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %1107, align 8
  %1109 = call i8* @llvm.ptr.annotation.p0i8(i8* %1091, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %1110 = bitcast i8* %1109 to %"class.blink::TextTrackCue"**
  %1111 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %1110, align 8
  %1112 = icmp eq %"class.blink::TextTrackCue"* %1108, %1111
  br i1 %1112, label %1116, label %1113

1113:                                             ; preds = %1103, %1098, %1092
  %1114 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1093, i64 1
  %1115 = icmp ult %"class.WTF::PODInterval"* %1114, %1085
  br i1 %1115, label %1092, label %1123

1116:                                             ; preds = %1103
  %1117 = ptrtoint %"class.WTF::PODInterval"* %1093 to i64
  %1118 = ptrtoint %"class.WTF::PODInterval"* %1082 to i64
  %1119 = sub i64 %1117, %1118
  %1120 = sdiv exact i64 %1119, 40
  %1121 = trunc i64 %1120 to i32
  %1122 = icmp eq i32 %1121, -1
  br i1 %1122, label %1123, label %1136

1123:                                             ; preds = %1113, %1080, %1116
  %1124 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1081, i64 0, i32 2
  %1125 = bitcast %"class.blink::TextTrackCue"** %1124 to i8*
  %1126 = call i8* @llvm.ptr.annotation.p0i8(i8* %1125, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %1127 = bitcast i8* %1126 to %"class.blink::TextTrackCue"**
  %1128 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %1127, align 8
  %1129 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %1128, i64 0, i32 6
  %1130 = load i8, i8* %1129, align 4
  %1131 = and i8 %1130, -2
  store i8 %1131, i8* %1129, align 4
  %1132 = bitcast %"class.blink::TextTrackCue"* %1128 to void (%"class.blink::TextTrackCue"*, i32)***
  %1133 = load void (%"class.blink::TextTrackCue"*, i32)**, void (%"class.blink::TextTrackCue"*, i32)*** %1132, align 8
  %1134 = getelementptr inbounds void (%"class.blink::TextTrackCue"*, i32)*, void (%"class.blink::TextTrackCue"*, i32)** %1133, i64 30
  %1135 = load void (%"class.blink::TextTrackCue"*, i32)*, void (%"class.blink::TextTrackCue"*, i32)** %1134, align 8
  call void %1135(%"class.blink::TextTrackCue"* %1128, i32 1) #8
  br label %1136

1136:                                             ; preds = %1116, %1123
  %1137 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %1081, i64 1
  %1138 = icmp eq %"class.WTF::PODInterval"* %1137, %1040
  br i1 %1138, label %1078, label %1080

1139:                                             ; preds = %283, %1078
  %1140 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %106, align 8
  %1141 = icmp eq %"class.WTF::PODInterval"* %1140, null
  %1142 = bitcast %"class.WTF::PODInterval"* %1140 to i8*
  br i1 %1141, label %1148, label %1143, !prof !15

1143:                                             ; preds = %1139
  %1144 = load i32, i32* %108, align 4
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1147, label %1146, !prof !25

1146:                                             ; preds = %1143
  store i32 0, i32* %108, align 4
  br label %1147

1147:                                             ; preds = %1146, %1143
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1142) #8
  store %"class.WTF::PODInterval"* null, %"class.WTF::PODInterval"** %106, align 8
  br label %1148

1148:                                             ; preds = %1139, %1147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #8
  %1149 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %96, align 8
  %1150 = icmp eq %"class.WTF::PODInterval"* %1149, null
  %1151 = bitcast %"class.WTF::PODInterval"* %1149 to i8*
  br i1 %1150, label %1157, label %1152, !prof !15

1152:                                             ; preds = %1148
  %1153 = load i32, i32* %97, align 4
  %1154 = icmp eq i32 %1153, 0
  br i1 %1154, label %1156, label %1155, !prof !25

1155:                                             ; preds = %1152
  store i32 0, i32* %97, align 4
  br label %1156

1156:                                             ; preds = %1155, %1152
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1151) #8
  store %"class.WTF::PODInterval"* null, %"class.WTF::PODInterval"** %96, align 8
  br label %1157

1157:                                             ; preds = %1148, %1156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #8
  %1158 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %49, align 8
  %1159 = icmp eq %"class.WTF::PODInterval"* %1158, null
  %1160 = bitcast %"class.WTF::PODInterval"* %1158 to i8*
  br i1 %1159, label %1166, label %1161, !prof !15

1161:                                             ; preds = %1157
  %1162 = load i32, i32* %51, align 4
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1165, label %1164, !prof !25

1164:                                             ; preds = %1161
  store i32 0, i32* %51, align 4
  br label %1165

1165:                                             ; preds = %1164, %1161
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1160) #8
  store %"class.WTF::PODInterval"* null, %"class.WTF::PODInterval"** %49, align 8
  br label %1166

1166:                                             ; preds = %1157, %1165
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #8
  br label %1167

1167:                                             ; preds = %28, %1166
  %1168 = load i32, i32* %23, align 8
  %1169 = add nsw i32 %1168, -1
  store i32 %1169, i32* %23, align 8
  %1170 = icmp eq i32 %1169, 0
  br i1 %1170, label %1171, label %1182

1171:                                             ; preds = %1167
  %1172 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 8
  %1173 = load i8, i8* %1172, align 4, !range !8
  %1174 = icmp eq i8 %1173, 0
  br i1 %1174, label %1182, label %1175

1175:                                             ; preds = %1171
  store i8 0, i8* %1172, align 4
  %1176 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %30, align 8
  %1177 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %1176, i64 0, i32 42
  %1178 = load i16, i16* %1177, align 4
  %1179 = and i16 %1178, 256
  %1180 = icmp eq i16 %1179, 0
  br i1 %1180, label %1181, label %1182

1181:                                             ; preds = %1175
  call void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"* %0) #8
  call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  br label %1182

1182:                                             ; preds = %1175, %1181, %1171, %1167, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline22BeginIgnoreUpdateScopeEv(%"class.blink::CueTimeline::IgnoreUpdateScope"* noalias nocapture sret, %"class.blink::CueTimeline"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %1, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::CueTimeline::IgnoreUpdateScope", %"class.blink::CueTimeline::IgnoreUpdateScope"* %0, i64 0, i32 0
  store %"class.blink::CueTimeline"* %1, %"class.blink::CueTimeline"** %6, align 8
  ret void
}

declare double @_ZNK5blink16HTMLMediaElement11currentTimeEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZNK5blink16HTMLMediaElement13getReadyStateEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %90, label %4, !prof !25

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #8
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !15

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %31, align 8
  %33 = icmp eq %"class.WTF::PODInterval"* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEmm(i64 %34) #8
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEPKcv, i64 0, i64 0)) #8
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = udiv i64 %35, 40
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = udiv i64 %35, 40
  %44 = ptrtoint i8* %36 to i64
  %45 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne %"class.WTF::PODInterval"* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast %"class.WTF::PODInterval"* %45 to i8*
  br i1 %48, label %50, label %56, !prof !15

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = mul nuw nsw i64 %52, 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %49, i64 %53, i1 false) #8
  %54 = bitcast %"class.WTF::Vector"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #8
  %58 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = mul nuw nsw i64 %65, 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %63, i64 %69, i1 false) #8
  %70 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %70, i64 %72
  %74 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %66, align 8
  %75 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %74, i64 %72
  %76 = icmp ne %"class.WTF::PODInterval"* %75, null
  %77 = icmp ne %"class.WTF::PODInterval"* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !15

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %70, i64 %81
  %83 = bitcast %"class.WTF::PODInterval"* %75 to i8*
  %84 = bitcast %"class.WTF::PODInterval"* %73 to i8*
  %85 = ptrtoint %"class.WTF::PODInterval"* %82 to i64
  %86 = ptrtoint %"class.WTF::PODInterval"* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* nonnull align 8 %84, i64 %87, i1 false) #8
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector"* %0
}

declare zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLMediaElement5pauseEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL19EventTimeCueCompareERKNSt3__14pairIdPNS_12TextTrackCueEEES6_(%"struct.std::__1::pair.773"* nocapture readonly dereferenceable(16), %"struct.std::__1::pair.773"* nocapture readonly dereferenceable(16)) #0 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp une double %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = fsub double %4, %6
  %10 = fcmp olt double %9, 0.000000e+00
  br label %32

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %0, i64 0, i32 1
  %13 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %12, align 8
  %14 = tail call %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"* %13) #8
  %15 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %1, i64 0, i32 1
  %16 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %15, align 8
  %17 = tail call %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"* %16) #8
  %18 = icmp eq %"class.blink::TextTrack"* %14, %17
  %19 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %12, align 8
  br i1 %18, label %27, label %20

20:                                               ; preds = %11
  %21 = tail call %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"* %19) #8
  %22 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %15, align 8
  %23 = tail call %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"* %22) #8
  %24 = tail call i32 @_ZN5blink9TextTrack10TrackIndexEv(%"class.blink::TextTrack"* %21) #8
  %25 = tail call i32 @_ZN5blink9TextTrack10TrackIndexEv(%"class.blink::TextTrack"* %23) #8
  %26 = icmp slt i32 %24, %25
  br label %32

27:                                               ; preds = %11
  %28 = tail call i32 @_ZN5blink12TextTrackCue8CueIndexEv(%"class.blink::TextTrackCue"* %19) #8
  %29 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %15, align 8
  %30 = tail call i32 @_ZN5blink12TextTrackCue8CueIndexEv(%"class.blink::TextTrackCue"* %29) #8
  %31 = icmp ult i32 %28, %30
  br label %32

32:                                               ; preds = %27, %20, %8
  %33 = phi i1 [ %10, %8 ], [ %26, %20 ], [ %31, %27 ]
  ret i1 %33
}

declare %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLMediaElement13ScheduleEventEPNS_5EventE(%"class.blink::HTMLMediaElement"*, %"class.blink::Event"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL17TrackIndexCompareEPNS_9TextTrackES1_(%"class.blink::TextTrack"*, %"class.blink::TextTrack"*) #0 {
  %3 = tail call i32 @_ZN5blink9TextTrack10TrackIndexEv(%"class.blink::TextTrack"* %0) #8
  %4 = tail call i32 @_ZN5blink9TextTrack10TrackIndexEv(%"class.blink::TextTrack"* %1) #8
  %5 = icmp slt i32 %3, %4
  ret i1 %5
}

declare void @_ZN5blink16HTMLMediaElement22UpdateTextTrackDisplayEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline33UpdateActiveCuePastAndFutureNodesEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::PODInterval", align 8
  %3 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %3, align 8
  %5 = tail call double @_ZNK5blink16HTMLMediaElement11currentTimeEv(%"class.blink::HTMLMediaElement"* %4) #8
  %6 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.WTF::PODInterval"* %2 to i8*
  %15 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %2, i64 0, i32 2
  %16 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %2, i64 0, i32 3
  %17 = bitcast %"class.blink::TextTrackCue"** %15 to i8*
  %18 = bitcast %"class.WTF::PODInterval"* %2 to i8*
  %19 = bitcast double* %16 to i8*
  br label %21

20:                                               ; preds = %43, %1
  call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0)
  ret void

21:                                               ; preds = %13, %43
  %22 = phi %"class.WTF::PODInterval"* [ %7, %13 ], [ %44, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -1, i64 16, i1 false)
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %15, align 8
  %23 = bitcast %"class.WTF::PODInterval"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -1, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %23, i64 40, i1 false)
  %24 = call i8* @llvm.ptr.annotation.p0i8(i8* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %25 = bitcast i8* %24 to %"class.blink::TextTrackCue"**
  %26 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %25, align 8
  %27 = call %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"* %26) #8
  %28 = icmp eq %"class.blink::TextTrack"* %27, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %21
  %30 = call i8* @llvm.ptr.annotation.p0i8(i8* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %31 = bitcast i8* %30 to %"class.blink::TextTrackCue"**
  %32 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %31, align 8
  %33 = call %"class.blink::TextTrack"* @_ZNK5blink12TextTrackCue5trackEv(%"class.blink::TextTrackCue"* %32) #8
  %34 = call zeroext i1 @_ZNK5blink9TextTrack10IsRenderedEv(%"class.blink::TextTrack"* %33) #8
  br i1 %34, label %35, label %43

35:                                               ; preds = %29
  %36 = call i8* @llvm.ptr.annotation.p0i8(i8* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %37 = bitcast i8* %36 to %"class.blink::TextTrackCue"**
  %38 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %37, align 8
  %39 = bitcast %"class.blink::TextTrackCue"* %38 to void (%"class.blink::TextTrackCue"*, double)***
  %40 = load void (%"class.blink::TextTrackCue"*, double)**, void (%"class.blink::TextTrackCue"*, double)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::TextTrackCue"*, double)*, void (%"class.blink::TextTrackCue"*, double)** %40, i64 28
  %42 = load void (%"class.blink::TextTrackCue"*, double)*, void (%"class.blink::TextTrackCue"*, double)** %41, align 8
  call void %42(%"class.blink::TextTrackCue"* %38, double %5) #8
  br label %43

43:                                               ; preds = %29, %21, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #8
  %44 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %22, i64 1
  %45 = icmp eq %"class.WTF::PODInterval"* %44, %11
  br i1 %45, label %20, label %21
}

declare zeroext i1 @_ZNK5blink9TextTrack10IsRenderedEv(%"class.blink::TextTrack"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.WTF::PODInterval", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"* %7) #8
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = tail call double @_ZNK5blink16HTMLMediaElement12playbackRateEv(%"class.blink::HTMLMediaElement"* %7) #8
  %11 = fcmp oeq double %10, 0.000000e+00
  br i1 %11, label %12, label %19

12:                                               ; preds = %9, %1
  %13 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %14, i64 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %15) #8
  br i1 %16, label %90, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %18) #8
  br label %90

19:                                               ; preds = %9
  %20 = tail call double @_ZNK5blink16HTMLMediaElement11currentTimeEv(%"class.blink::HTMLMediaElement"* %7) #8
  %21 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %19
  %29 = bitcast %"class.WTF::PODInterval"* %4 to i8*
  %30 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %4, i64 0, i32 2
  %31 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %4, i64 0, i32 3
  %32 = bitcast %"class.blink::TextTrackCue"** %30 to i8*
  %33 = bitcast %"class.WTF::PODInterval"* %4 to i8*
  %34 = bitcast double* %31 to i8*
  br label %39

35:                                               ; preds = %39, %19
  %36 = phi double [ 0x7FF0000000000000, %19 ], [ %56, %39 ]
  %37 = call double @llvm.fabs.f64(double %36) #14
  %38 = fcmp oeq double %37, 0x7FF0000000000000
  br i1 %38, label %59, label %66

39:                                               ; preds = %28, %39
  %40 = phi double [ 0x7FF0000000000000, %28 ], [ %56, %39 ]
  %41 = phi %"class.WTF::PODInterval"* [ %22, %28 ], [ %57, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -1, i64 16, i1 false)
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %30, align 8
  %42 = bitcast %"class.WTF::PODInterval"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 -1, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %42, i64 40, i1 false)
  %43 = call i8* @llvm.ptr.annotation.p0i8(i8* %32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %44 = bitcast i8* %43 to %"class.blink::TextTrackCue"**
  %45 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %44, align 8
  %46 = bitcast %"class.blink::TextTrackCue"* %45 to { i8, double } (%"class.blink::TextTrackCue"*, double)***
  %47 = load { i8, double } (%"class.blink::TextTrackCue"*, double)**, { i8, double } (%"class.blink::TextTrackCue"*, double)*** %46, align 8
  %48 = getelementptr inbounds { i8, double } (%"class.blink::TextTrackCue"*, double)*, { i8, double } (%"class.blink::TextTrackCue"*, double)** %47, i64 29
  %49 = load { i8, double } (%"class.blink::TextTrackCue"*, double)*, { i8, double } (%"class.blink::TextTrackCue"*, double)** %48, align 8
  %50 = call { i8, double } %49(%"class.blink::TextTrackCue"* %45, double %20) #8
  %51 = extractvalue { i8, double } %50, 0
  %52 = extractvalue { i8, double } %50, 1
  %53 = icmp eq i8 %51, 0
  %54 = select i1 %53, double 0x7FF0000000000000, double %52
  %55 = fcmp olt double %54, %40
  %56 = select i1 %55, double %54, double %40
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #8
  %57 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %41, i64 1
  %58 = icmp eq %"class.WTF::PODInterval"* %57, %26
  br i1 %58, label %35, label %39

59:                                               ; preds = %35
  %60 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %60, align 8
  %62 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %61, i64 0, i32 0, i32 0
  %63 = call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %62) #8
  br i1 %63, label %90, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0
  call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %65) #8
  br label %90

66:                                               ; preds = %35
  %67 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #8
  %68 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %69 = call double @_ZNK5blink16HTMLMediaElement11currentTimeEv(%"class.blink::HTMLMediaElement"* %7) #8
  %70 = fsub double %36, %69
  %71 = call double @_ZNK5blink16HTMLMediaElement12playbackRateEv(%"class.blink::HTMLMediaElement"* %7) #8
  %72 = fdiv double %70, %71
  %73 = fmul double %72, 1.000000e+06
  %74 = fcmp ult double %73, 0xC3E0000000000000
  %75 = fcmp ugt double %73, 0x43DFFFFFFFFFFFFF
  %76 = fcmp ogt double %73, 0xC3E0000000000000
  %77 = select i1 %76, double %73, double 0xC3E0000000000000
  %78 = fptosi double %77 to i64
  %79 = select i1 %74, i64 0, i64 9223372036854775807
  %80 = select i1 %75, i64 %79, i64 %78
  store i64 %80, i64* %68, align 8
  %81 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  %82 = call i64 @_ZNK4base9TimeDelta14CeilToMultipleES0_(%"class.base::TimeDelta"* nonnull %2, i64 1000) #8
  store i64 %82, i64* %3, align 8
  %83 = icmp slt i64 %82, 1000
  %84 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %85 = select i1 %83, %"class.base::TimeDelta"* @_ZZN5blink12_GLOBAL__N_121CalculateEventTimeoutEdRKNS_16HTMLMediaElementEE19kMinTimeoutInterval, %"class.base::TimeDelta"* %84
  %86 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %85, i64 0, i32 0
  %87 = load i64, i64* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #8
  %88 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0
  %89 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %89) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 528) #8
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %88, i64 %87, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %89) #8
  br label %90

90:                                               ; preds = %66, %59, %64, %17, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline20EndIgnoreUpdateScopeEN4base7PassKeyINS0_17IgnoreUpdateScopeEEERKS3_(%"class.blink::CueTimeline"*, %"class.blink::CueTimeline::IgnoreUpdateScope"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* %3, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 8
  %9 = load i8, i8* %8, align 4, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %7
  store i8 0, i8* %8, align 4
  %12 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %13, i64 0, i32 42
  %15 = load i16, i16* %14, align 4
  %16 = and i16 %15, 256
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %11
  tail call void @_ZN5blink11CueTimeline13TimeMarchesOnEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0) #8
  br label %19

19:                                               ; preds = %11, %7, %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"* %6) #8
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = tail call double @_ZNK5blink16HTMLMediaElement12playbackRateEv(%"class.blink::HTMLMediaElement"* %6) #8
  %14 = fcmp oeq double %13, 0.000000e+00
  br i1 %14, label %15, label %22

15:                                               ; preds = %1, %12, %10
  %16 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %17, i64 0, i32 0, i32 0
  %19 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %18) #8
  br i1 %19, label %52, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %21) #8
  br label %52

22:                                               ; preds = %12
  %23 = load i8, i8* %7, align 8, !range !8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = load double, double* %27, align 8
  %29 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %31 = tail call double @_ZNK5blink16HTMLMediaElement11currentTimeEv(%"class.blink::HTMLMediaElement"* %6) #8
  %32 = fsub double %28, %31
  %33 = tail call double @_ZNK5blink16HTMLMediaElement12playbackRateEv(%"class.blink::HTMLMediaElement"* %6) #8
  %34 = fdiv double %32, %33
  %35 = fmul double %34, 1.000000e+06
  %36 = fcmp ult double %35, 0xC3E0000000000000
  %37 = fcmp ugt double %35, 0x43DFFFFFFFFFFFFF
  %38 = fcmp ogt double %35, 0xC3E0000000000000
  %39 = select i1 %38, double %35, double 0xC3E0000000000000
  %40 = fptosi double %39 to i64
  %41 = select i1 %36, i64 0, i64 9223372036854775807
  %42 = select i1 %37, i64 %41, i64 %40
  store i64 %42, i64* %30, align 8
  %43 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = call i64 @_ZNK4base9TimeDelta14CeilToMultipleES0_(%"class.base::TimeDelta"* nonnull %2, i64 1000) #8
  store i64 %44, i64* %3, align 8
  %45 = icmp slt i64 %44, 1000
  %46 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %47 = select i1 %45, %"class.base::TimeDelta"* @_ZZN5blink12_GLOBAL__N_121CalculateEventTimeoutEdRKNS_16HTMLMediaElementEE19kMinTimeoutInterval, %"class.base::TimeDelta"* %46
  %48 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %47, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  %50 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0
  %51 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 486) #8
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %50, i64 %49, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #8
  br label %52

52:                                               ; preds = %20, %15, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline7OnPauseEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %3, i64 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %4) #8
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %10, i64 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %11) #8
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %14) #8
  br label %15

15:                                               ; preds = %8, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline19CancelCueEventTimerEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %3, i64 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %4) #8
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline28CancelCueTimestampEventTimerEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %3, i64 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %4) #8
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline21OnPlaybackRateUpdatedEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11CueTimeline16SetCueEventTimerEv(%"class.blink::CueTimeline"* %0)
  tail call void @_ZN5blink11CueTimeline25SetCueTimestampEventTimerEv(%"class.blink::CueTimeline"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline17OnReadyStateResetEv(%"class.blink::CueTimeline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::PODInterval", align 8
  %3 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.WTF::PODInterval"* %2 to i8*
  %15 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %2, i64 0, i32 2
  %16 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %2, i64 0, i32 3
  %17 = bitcast %"class.blink::TextTrackCue"** %15 to i8*
  %18 = bitcast %"class.WTF::PODInterval"* %2 to i8*
  %19 = bitcast double* %16 to i8*
  %20 = shl nuw nsw i64 %10, 3
  %21 = add nsw i64 %20, -8
  %22 = and i64 %21, 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -1, i64 16, i1 false)
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %15, align 8
  %25 = bitcast %"class.WTF::PODInterval"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -1, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %25, i64 40, i1 false)
  %26 = call i8* @llvm.ptr.annotation.p0i8(i8* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %27 = bitcast i8* %26 to %"class.blink::TextTrackCue"**
  %28 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %28, i64 0, i32 6
  %30 = load i8, i8* %29, align 4
  %31 = and i8 %30, -2
  store i8 %31, i8* %29, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #8
  %32 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %7, i64 1
  br label %33

33:                                               ; preds = %24, %13
  %34 = phi %"class.WTF::PODInterval"* [ %7, %13 ], [ %32, %24 ]
  %35 = icmp eq i64 %21, 0
  br i1 %35, label %36, label %69

36:                                               ; preds = %33, %69, %1
  %37 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = load i32, i32* %8, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  store i32 0, i32* %8, align 4
  br label %44

44:                                               ; preds = %43, %40
  %45 = bitcast %"class.WTF::Vector"* %5 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store i32 0, i32* %37, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #8
  br label %48

48:                                               ; preds = %36, %44
  %49 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %49, align 8
  %51 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %50, i64 0, i32 0, i32 0
  %52 = call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %51) #8
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0
  call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %54) #8
  br label %55

55:                                               ; preds = %48, %53
  %56 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %56, align 8
  %58 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %57, i64 0, i32 0, i32 0
  %59 = call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %58) #8
  br i1 %59, label %62, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0
  call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %61) #8
  br label %62

62:                                               ; preds = %55, %60
  %63 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 3
  store double -1.000000e+00, double* %63, align 8
  %64 = bitcast %"class.blink::HTMLMediaElement"* %4 to i1 (%"class.blink::HTMLMediaElement"*)***
  %65 = load i1 (%"class.blink::HTMLMediaElement"*)**, i1 (%"class.blink::HTMLMediaElement"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::HTMLMediaElement"*)*, i1 (%"class.blink::HTMLMediaElement"*)** %65, i64 173
  %67 = load i1 (%"class.blink::HTMLMediaElement"*)*, i1 (%"class.blink::HTMLMediaElement"*)** %66, align 8
  %68 = call zeroext i1 %67(%"class.blink::HTMLMediaElement"* %4) #8
  br i1 %68, label %88, label %91

69:                                               ; preds = %33, %69
  %70 = phi %"class.WTF::PODInterval"* [ %86, %69 ], [ %34, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -1, i64 16, i1 false)
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %15, align 8
  %71 = bitcast %"class.WTF::PODInterval"* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -1, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %71, i64 40, i1 false)
  %72 = call i8* @llvm.ptr.annotation.p0i8(i8* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %73 = bitcast i8* %72 to %"class.blink::TextTrackCue"**
  %74 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %74, i64 0, i32 6
  %76 = load i8, i8* %75, align 4
  %77 = and i8 %76, -2
  store i8 %77, i8* %75, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #8
  %78 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %70, i64 1
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -1, i64 16, i1 false)
  store %"class.blink::TextTrackCue"* inttoptr (i64 -6148914691236517206 to %"class.blink::TextTrackCue"*), %"class.blink::TextTrackCue"** %15, align 8
  %79 = bitcast %"class.WTF::PODInterval"* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -1, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %79, i64 40, i1 false)
  %80 = call i8* @llvm.ptr.annotation.p0i8(i8* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %81 = bitcast i8* %80 to %"class.blink::TextTrackCue"**
  %82 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::TextTrackCue", %"class.blink::TextTrackCue"* %82, i64 0, i32 6
  %84 = load i8, i8* %83, align 4
  %85 = and i8 %84, -2
  store i8 %85, i8* %83, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #8
  %86 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %70, i64 2
  %87 = icmp eq %"class.WTF::PODInterval"* %86, %11
  br i1 %87, label %36, label %69

88:                                               ; preds = %62
  %89 = call zeroext i1 @_ZNK5blink16HTMLMediaElement17TextTracksVisibleEv(%"class.blink::HTMLMediaElement"* %4) #8
  br i1 %89, label %90, label %91

90:                                               ; preds = %88
  call void @_ZN5blink16HTMLMediaElement22UpdateTextTrackDisplayEv(%"class.blink::HTMLMediaElement"* %4) #8
  br label %91

91:                                               ; preds = %90, %88, %62
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLMediaElement17TextTracksVisibleEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

declare double @_ZNK5blink16HTMLMediaElement12playbackRateEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CueTimeline20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::CueTimeline"*, %"class.blink::Document"* nocapture readnone dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 0
  %4 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %9, i8 zeroext 29) #8
  tail call void @_ZN5blink9TimerBase19MoveToNewTaskRunnerE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %3, %"class.base::SingleThreadTaskRunner"* %10) #8
  %11 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 0
  %12 = load %"class.blink::HTMLMediaElement"*, %"class.blink::HTMLMediaElement"** %4, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLMediaElement", %"class.blink::HTMLMediaElement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %16, i8 zeroext 29) #8
  tail call void @_ZN5blink9TimerBase19MoveToNewTaskRunnerE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %11, %"class.base::SingleThreadTaskRunner"* %17) #8
  ret void
}

declare void @_ZN5blink9TimerBase19MoveToNewTaskRunnerE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11CueTimeline5TraceEPNS_7VisitorE(%"class.blink::CueTimeline"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CueTimeline"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLMediaElementEE5TraceEPNS_7VisitorEPKv) #8
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5
  %14 = bitcast %"class.blink::HeapTaskRunnerTimer"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 5, i32 1
  %19 = bitcast %"class.blink::WeakMember.93"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::WeakMember.93"* %18 to i8*
  %24 = inttoptr i64 %20 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %26, i64 6
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* %23, i8* %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CueTimelineEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_11CueTimelineEEEvRKNS_14LivenessBrokerEPKv) #8
  br label %29

29:                                               ; preds = %12, %17, %22
  %30 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6
  %31 = bitcast %"class.blink::HeapTaskRunnerTimer"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %0, i64 0, i32 6, i32 1
  %36 = bitcast %"class.blink::WeakMember.93"* %35 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::WeakMember.93"* %35 to i8*
  %41 = inttoptr i64 %37 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %43, i64 6
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* %40, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CueTimelineEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_11CueTimelineEEEvRKNS_14LivenessBrokerEPKv) #8
  br label %46

46:                                               ; preds = %29, %34, %39
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare i32 @_ZN5blink12TextTrackCue8CueIndexEv(%"class.blink::TextTrackCue"*) local_unnamed_addr #1

declare void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"*, %"class.blink::EventTarget"*) local_unnamed_addr #1

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !25

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !25

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i32 @_ZN5blink9TextTrack10TrackIndexEv(%"class.blink::TextTrack"*) local_unnamed_addr #1

declare i64 @_ZNK4base9TimeDelta14CeilToMultipleES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #1

declare void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"*, i64, i64, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #8

declare void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEED0Ev(%"class.blink::HeapTaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %2) #8
  %3 = bitcast %"class.blink::HeapTaskRunnerTimer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE5FiredEv(%"class.blink::HeapTaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::CueTimeline"** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = bitcast i8* %9 to %"class.blink::CueTimeline"*
  %11 = and i64 %6, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast i8* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = add i64 %6, -1
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = bitcast i8* %17 to void (%"class.blink::CueTimeline"*, %"class.blink::TimerBase"*)**
  %19 = load void (%"class.blink::CueTimeline"*, %"class.blink::TimerBase"*)*, void (%"class.blink::CueTimeline"*, %"class.blink::TimerBase"*)** %18, align 8
  br label %22

20:                                               ; preds = %1
  %21 = inttoptr i64 %6 to void (%"class.blink::CueTimeline"*, %"class.blink::TimerBase"*)*
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi void (%"class.blink::CueTimeline"*, %"class.blink::TimerBase"*)* [ %19, %13 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 0
  tail call void %23(%"class.blink::CueTimeline"* %10, %"class.blink::TimerBase"* %24) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE(%"class.base::OnceCallback"* noalias sret, %"class.blink::HeapTaskRunnerTimer"*, %"class.base::WeakPtr"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::WeakPersistent", align 8
  %5 = bitcast %"class.blink::WeakPersistent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::CueTimeline"*, %"class.blink::CueTimeline"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 0
  store %"class.blink::CueTimeline"* %7, %"class.blink::CueTimeline"** %9, align 8, !alias.scope !34
  %10 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8, !alias.scope !34
  %11 = ptrtoint %"class.blink::CueTimeline"* %7 to i64
  switch i64 %11, label %12 [
    i64 0, label %38
    i64 -1, label %38
  ]

12:                                               ; preds = %3
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !34
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #8, !noalias !34
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !25

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #8
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8, !noalias !34
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8, !noalias !34
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8, !noalias !34
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %28, label %31, !prof !25

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %29) #8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi %"class.blink::PersistentNode"* [ %30, %28 ], [ %26, %19 ]
  %33 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !34
  %35 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  store i64 %34, i64* %35, align 8, !noalias !34
  %36 = bitcast %"class.blink::PersistentNode"* %32 to %"class.blink::PersistentBase.1081"**
  store %"class.blink::PersistentBase.1081"* %8, %"class.blink::PersistentBase.1081"** %36, align 8, !noalias !34
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11CueTimelineELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %10, align 8, !alias.scope !34
  br label %38

38:                                               ; preds = %3, %3, %31
  %39 = call i8* @_Znwm(i64 72) #16, !noalias !37
  %40 = bitcast i8* %39 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %40, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_11CueTimelineEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_11CueTimelineEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !37
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr"*, %"class.blink::CueTimeline"*)* @_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_ to i64), i64* %42, align 8, !noalias !37
  %43 = getelementptr inbounds i8, i8* %39, i64 40
  %44 = bitcast i8* %43 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_11CueTimelineEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %44, %"class.base::WeakPtr"* dereferenceable(16) %2, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %4) #8, !noalias !37
  %45 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %39, i8** %45, align 8, !alias.scope !37
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %38
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !25

53:                                               ; preds = %48
  %54 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #8
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %63 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentNode"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  store %"class.blink::PersistentNode"* %61, %"class.blink::PersistentNode"** %62, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  br label %67

67:                                               ; preds = %38, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_11CueTimelineEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_(%"class.base::WeakPtr"*, %"class.blink::CueTimeline"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #8
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.blink::TimerBase"**
  %8 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %7, align 8
  %9 = icmp ne %"class.blink::TimerBase"* %8, null
  %10 = icmp ne %"class.blink::CueTimeline"* %1, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #8
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %7, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi %"class.blink::TimerBase"* [ %15, %14 ], [ null, %12 ]
  tail call void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"* %17) #8
  br label %18

18:                                               ; preds = %2, %16, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_11CueTimelineEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr"*, %"class.blink::CueTimeline"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = load void (%"class.base::WeakPtr"*, %"class.blink::CueTimeline"*)*, void (%"class.base::WeakPtr"*, %"class.blink::CueTimeline"*)** %4, align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %9 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %8, %"class.base::internal::WeakReference"* dereferenceable(8) %9) #8
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  %14 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %15 = bitcast void ()** %14 to %"class.blink::CueTimeline"**
  %16 = load %"class.blink::CueTimeline"*, %"class.blink::CueTimeline"** %15, align 8
  call void %7(%"class.base::WeakPtr"* nonnull %2, %"class.blink::CueTimeline"* %16) #8
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_11CueTimelineEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !25

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #8
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %5, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %29 = bitcast void ()** %28 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %29) #8
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_11CueTimelineEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.base::WeakPtr"* dereferenceable(16), %"class.blink::WeakPersistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %4, %"class.base::internal::WeakReference"* dereferenceable(8) %5) #8
  %6 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::__tuple_leaf.1083", %"class.std::__1::__tuple_leaf.1083"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::WeakPersistent"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::__tuple_leaf.1083"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  switch i64 %12, label %15 [
    i64 0, label %41
    i64 -1, label %41
  ]

15:                                               ; preds = %3
  %16 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !25

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #8
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %31, label %34, !prof !25

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %32) #8
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  br label %34

34:                                               ; preds = %31, %22
  %35 = phi %"class.blink::PersistentNode"* [ %33, %31 ], [ %29, %22 ]
  %36 = bitcast %"class.blink::PersistentNode"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %"class.blink::PersistentNode"* %35 to %"class.blink::PersistentBase.1081"**
  store %"class.blink::PersistentBase.1081"* %10, %"class.blink::PersistentBase.1081"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11CueTimelineELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %40, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %14, align 8
  br label %41

41:                                               ; preds = %3, %3, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11CueTimelineELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_11CueTimelineELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_11CueTimelineELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CueTimeline"**
  %4 = load %"class.blink::CueTimeline"*, %"class.blink::CueTimeline"** %3, align 8
  %5 = icmp eq %"class.blink::CueTimeline"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !25

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %4, i64 -1, i32 7
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::CueTimeline"* null, %"class.blink::CueTimeline"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !25

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #8
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEED0Ev(%"class.WTF::PODIntervalTree"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.WTF::PODIntervalTree"* %0 to %"class.WTF::PODRedBlackTree"*
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED2Ev(%"class.WTF::PODRedBlackTree"* %2) #8
  %3 = bitcast %"class.WTF::PODIntervalTree"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE15CheckInvariantsEv(%"class.WTF::PODIntervalTree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast %"class.WTF::PODIntervalTree"* %0 to %"class.WTF::PODRedBlackTree"*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 -1431655766, i32* %2, align 4
  %5 = getelementptr inbounds %"class.WTF::PODIntervalTree", %"class.WTF::PODIntervalTree"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %5, align 8
  %7 = call zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE23CheckInvariantsFromNodeEPNS6_4NodeEPi(%"class.WTF::PODRedBlackTree"* %3, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %6, i32* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %5, align 8
  %10 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = call zeroext i1 @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE23CheckInvariantsFromNodeEPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* nonnull %9)
  br label %13

13:                                               ; preds = %8, %1, %11
  %14 = phi i1 [ %12, %11 ], [ false, %1 ], [ true, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE10UpdateNodeEPNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(%"class.WTF::PODIntervalTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5, i32 1
  %4 = bitcast double* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5, i32 0
  %7 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 1
  %8 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %7, align 8
  %9 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %8, null
  %10 = bitcast i64 %5 to double
  br i1 %9, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %8, i64 0, i32 5, i32 3
  %13 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %8, i64 0, i32 5, i32 4
  %14 = load double, double* %13, align 8
  %15 = fcmp ogt double %14, %10
  %16 = bitcast double %14 to i64
  %17 = select i1 %15, i64 %16, i64 %5
  %18 = bitcast i64 %17 to double
  br label %19

19:                                               ; preds = %2, %11
  %20 = phi i64 [ %5, %2 ], [ %17, %11 ]
  %21 = phi double [ %10, %2 ], [ %18, %11 ]
  %22 = phi double* [ %6, %2 ], [ %12, %11 ]
  %23 = load double, double* %22, align 8
  %24 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 2
  %25 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %24, align 8
  %26 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %25, i64 0, i32 5, i32 4
  %29 = load double, double* %28, align 8
  %30 = fcmp olt double %21, %29
  %31 = select i1 %30, double %29, double %21
  %32 = bitcast double %31 to i64
  br label %33

33:                                               ; preds = %19, %27
  %34 = phi i64 [ %20, %19 ], [ %32, %27 ]
  %35 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5, i32 3
  %36 = load double, double* %35, align 8
  %37 = fcmp oeq double %36, %23
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  store double %23, double* %35, align 8
  br label %39

39:                                               ; preds = %38, %33
  %40 = phi i1 [ false, %33 ], [ true, %38 ]
  %41 = bitcast i64 %34 to double
  %42 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5, i32 4
  %43 = load double, double* %42, align 8
  %44 = fcmp oeq double %43, %41
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = bitcast double* %42 to i64*
  store i64 %34, i64* %46, align 8
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i1 [ %40, %39 ], [ true, %45 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED2Ev(%"class.WTF::PODRedBlackTree"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::PODRedBlackTree", %"class.WTF::PODRedBlackTree"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.WTF::PODRedBlackTree", %"class.WTF::PODRedBlackTree"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.WTF::PODFreeListArena"*, %"class.WTF::PODFreeListArena"** %3, align 8
  %5 = icmp eq %"class.WTF::PODFreeListArena"* %4, null
  br i1 %5, label %79, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::PODFreeListArena", %"class.WTF::PODFreeListArena"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #8
  %8 = getelementptr inbounds %"class.WTF::PODFreeListArena", %"class.WTF::PODFreeListArena"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::PODFreeListArena", %"class.WTF::PODFreeListArena"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.1045", %"class.base::RefCounted.1045"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.1045"* %13 to %"class.WTF::PODArena"**
  %15 = load %"class.WTF::PODArena"*, %"class.WTF::PODArena"** %14, align 8
  %16 = icmp eq %"class.WTF::PODArena"* %15, null
  br i1 %16, label %77, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #8
  %19 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %77

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 4
  %24 = getelementptr inbounds %"class.WTF::Vector.1052", %"class.WTF::Vector.1052"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr.1055"*, %"class.std::__1::unique_ptr.1055"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.1055"* %25, null
  br i1 %26, label %58, label %27, !prof !15

27:                                               ; preds = %22
  %28 = bitcast %"class.std::__1::unique_ptr.1055"* %25 to i8*
  %29 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %56, label %32, !prof !25

32:                                               ; preds = %27
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %25, i64 %33
  br label %35

35:                                               ; preds = %50, %32
  %36 = phi %"class.std::__1::unique_ptr.1055"* [ %51, %50 ], [ %25, %32 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::PODArena::Chunk"*, %"class.WTF::PODArena::Chunk"** %37, align 8
  store %"class.WTF::PODArena::Chunk"* null, %"class.WTF::PODArena::Chunk"** %37, align 8
  %39 = icmp eq %"class.WTF::PODArena::Chunk"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %38, i64 0, i32 0
  %42 = load %"class.WTF::PODArena::Allocator"*, %"class.WTF::PODArena::Allocator"** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %38, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.WTF::PODArena::Allocator"* %42 to void (%"class.WTF::PODArena::Allocator"*, i8*)***
  %46 = load void (%"class.WTF::PODArena::Allocator"*, i8*)**, void (%"class.WTF::PODArena::Allocator"*, i8*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.WTF::PODArena::Allocator"*, i8*)*, void (%"class.WTF::PODArena::Allocator"*, i8*)** %46, i64 1
  %48 = load void (%"class.WTF::PODArena::Allocator"*, i8*)*, void (%"class.WTF::PODArena::Allocator"*, i8*)** %47, align 8
  tail call void %48(%"class.WTF::PODArena::Allocator"* %42, i8* %44) #8
  %49 = bitcast %"class.WTF::PODArena::Chunk"* %38 to i8*
  tail call void @free(i8* %49) #8
  br label %50

50:                                               ; preds = %40, %35
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %36, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr.1055"* %51, %34
  br i1 %52, label %53, label %35

53:                                               ; preds = %50
  store i32 0, i32* %29, align 4
  %54 = bitcast %"class.WTF::Vector.1052"* %23 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %27
  %57 = phi i8* [ %55, %53 ], [ %28, %27 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #8
  store %"class.std::__1::unique_ptr.1055"* null, %"class.std::__1::unique_ptr.1055"** %24, align 8
  br label %58

58:                                               ; preds = %56, %22
  %59 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 1, i32 0
  %60 = load %"class.WTF::PODArena::Allocator"*, %"class.WTF::PODArena::Allocator"** %59, align 8
  %61 = icmp eq %"class.WTF::PODArena::Allocator"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::PODArena::Allocator", %"class.WTF::PODArena::Allocator"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCounted.1051", %"class.base::RefCounted.1051"* %63, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #8
  %65 = getelementptr inbounds %"class.base::RefCounted.1051", %"class.base::RefCounted.1051"* %63, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.base::RefCounted.1051", %"class.base::RefCounted.1051"* %63, i64 -2
  %70 = bitcast %"class.base::RefCounted.1051"* %69 to %"class.WTF::PODArena::Allocator"*
  %71 = bitcast %"class.base::RefCounted.1051"* %69 to void (%"class.WTF::PODArena::Allocator"*)***
  %72 = load void (%"class.WTF::PODArena::Allocator"*)**, void (%"class.WTF::PODArena::Allocator"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.WTF::PODArena::Allocator"*)*, void (%"class.WTF::PODArena::Allocator"*)** %72, i64 3
  %74 = load void (%"class.WTF::PODArena::Allocator"*)*, void (%"class.WTF::PODArena::Allocator"*)** %73, align 8
  tail call void %74(%"class.WTF::PODArena::Allocator"* nonnull %70) #8
  br label %75

75:                                               ; preds = %58, %62, %68
  %76 = bitcast %"class.WTF::PODArena"* %15 to i8*
  tail call void @free(i8* %76) #8
  br label %77

77:                                               ; preds = %75, %17, %11
  %78 = bitcast %"class.WTF::PODFreeListArena"* %4 to i8*
  tail call void @free(i8* %78) #8
  br label %79

79:                                               ; preds = %1, %6, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED0Ev(%"class.WTF::PODRedBlackTree"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEED2Ev(%"class.WTF::PODRedBlackTree"* %0) #8
  %2 = bitcast %"class.WTF::PODRedBlackTree"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE15CheckInvariantsEv(%"class.WTF::PODRedBlackTree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 -1431655766, i32* %2, align 4
  %4 = getelementptr inbounds %"class.WTF::PODRedBlackTree", %"class.WTF::PODRedBlackTree"* %0, i64 0, i32 2
  %5 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %4, align 8
  %6 = call zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE23CheckInvariantsFromNodeEPNS6_4NodeEPi(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %5, i32* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10UpdateNodeEPNS6_4NodeE(%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN3WTF8PODArena19FastMallocAllocator8AllocateEm(%"class.WTF::PODArena::FastMallocAllocator"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 %1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_8PODArenaEEEPKcv, i64 0, i64 0)) #8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8PODArena19FastMallocAllocator4FreeEPv(%"class.WTF::PODArena::FastMallocAllocator"*, i8*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8PODArena9AllocatorD2Ev(%"class.WTF::PODArena::Allocator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8PODArena19FastMallocAllocatorD0Ev(%"class.WTF::PODArena::FastMallocAllocator"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.WTF::PODArena::FastMallocAllocator"* %0 to i8*
  tail call void @free(i8* %2) #8
  ret void
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE23CheckInvariantsFromNodeEPNS6_4NodeEPi(%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store i32 1, i32* %2, align 4
  br label %49

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %49 [
    i32 1, label %14
    i32 2, label %11
  ]

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 1
  %13 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %12, align 8
  br label %30

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 1
  %16 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %15, align 8
  %17 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %16, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %49

22:                                               ; preds = %14, %18
  %23 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 2
  %24 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23, align 8
  %25 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %24, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %30, label %49

30:                                               ; preds = %11, %22, %26
  %31 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %13, %11 ], [ %16, %22 ], [ %16, %26 ]
  %32 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #8
  store i32 0, i32* %4, align 4
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #8
  store i32 0, i32* %5, align 4
  %34 = call zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE23CheckInvariantsFromNodeEPNS6_4NodeEPi(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %31, i32* nonnull %4)
  %35 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 2
  %36 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %35, align 8
  %37 = call zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE23CheckInvariantsFromNodeEPNS6_4NodeEPi(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %36, i32* nonnull %5)
  %38 = and i1 %34, %37
  br i1 %38, label %39, label %47

39:                                               ; preds = %30
  %40 = load i32, i32* %4, align 4
  %41 = load i32, i32* %9, align 8
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i32
  %44 = add nsw i32 %40, %43
  store i32 %44, i32* %2, align 4
  %45 = load i32, i32* %5, align 4
  %46 = icmp eq i32 %40, %45
  br label %47

47:                                               ; preds = %30, %39
  %48 = phi i1 [ %46, %39 ], [ false, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #8
  br label %49

49:                                               ; preds = %8, %26, %18, %47, %7
  %50 = phi i1 [ %48, %47 ], [ true, %7 ], [ false, %18 ], [ false, %26 ], [ false, %8 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE23CheckInvariantsFromNodeEPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 1
  %4 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 2
  %6 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5, i32 0
  %8 = load double, double* %7, align 8
  %9 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5, i32 1
  %11 = bitcast double* %10 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %2, align 8
  %13 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %4, null
  %14 = bitcast i64 %12 to double
  br i1 %13, label %35, label %15

15:                                               ; preds = %1
  %16 = tail call zeroext i1 @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE23CheckInvariantsFromNodeEPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* nonnull %4)
  br i1 %16, label %17, label %71

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %4, i64 0, i32 5, i32 3
  %19 = load double, double* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5, i32 3
  %21 = load double, double* %20, align 8
  %22 = fcmp oeq double %19, %21
  br i1 %22, label %23, label %71

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5, i32 4
  %25 = load double, double* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %4, i64 0, i32 5, i32 4
  %27 = load double, double* %26, align 8
  %28 = fcmp olt double %25, %27
  br i1 %28, label %71, label %29

29:                                               ; preds = %23
  %30 = fcmp ogt double %27, %14
  %31 = bitcast double* %26 to i64*
  %32 = select i1 %30, i64* %31, i64* %2
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %2, align 8
  %34 = bitcast i64 %33 to double
  br label %35

35:                                               ; preds = %1, %29
  %36 = phi double [ %34, %29 ], [ %14, %1 ]
  %37 = phi double [ %19, %29 ], [ %8, %1 ]
  %38 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %6, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5, i32 3
  %41 = load double, double* %40, align 8
  br label %62

42:                                               ; preds = %35
  %43 = tail call zeroext i1 @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE23CheckInvariantsFromNodeEPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* nonnull %6)
  br i1 %43, label %44, label %71

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %6, i64 0, i32 5, i32 3
  %46 = load double, double* %45, align 8
  %47 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5, i32 3
  %48 = load double, double* %47, align 8
  %49 = fcmp olt double %46, %48
  br i1 %49, label %71, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5, i32 4
  %52 = load double, double* %51, align 8
  %53 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %6, i64 0, i32 5, i32 4
  %54 = load double, double* %53, align 8
  %55 = fcmp olt double %52, %54
  br i1 %55, label %71, label %56

56:                                               ; preds = %50
  %57 = fcmp olt double %36, %54
  %58 = bitcast double* %53 to i64*
  %59 = select i1 %57, i64* %58, i64* %2
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %2, align 8
  %61 = bitcast i64 %60 to double
  br label %62

62:                                               ; preds = %39, %56
  %63 = phi double [ %36, %39 ], [ %61, %56 ]
  %64 = phi double [ %41, %39 ], [ %48, %56 ]
  %65 = fcmp oeq double %37, %64
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5, i32 4
  %68 = load double, double* %67, align 8
  %69 = fcmp oeq double %63, %68
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %62, %50, %44, %23, %17, %66, %42, %15, %70
  %72 = phi i1 [ false, %70 ], [ false, %15 ], [ false, %42 ], [ true, %66 ], [ false, %17 ], [ false, %23 ], [ false, %44 ], [ false, %50 ], [ false, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE25TreeSearchFullComparisonsEPNS6_4NodeERKS5_(%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODInterval"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %2, i64 0, i32 2
  %5 = bitcast %"class.blink::TextTrackCue"** %4 to i8*
  %6 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, null
  br i1 %6, label %50, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %2, i64 0, i32 1
  br label %10

10:                                               ; preds = %7, %18
  %11 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %1, %7 ], [ %20, %18 ]
  %12 = load double, double* %8, align 8
  %13 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %11, i64 0, i32 5, i32 0
  %14 = load double, double* %13, align 8
  %15 = fcmp olt double %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %11, i64 0, i32 1
  br label %18

18:                                               ; preds = %16, %24, %48
  %19 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %17, %16 ], [ %25, %24 ], [ %49, %48 ]
  %20 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %19, align 8
  %21 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %20, null
  br i1 %21, label %50, label %10

22:                                               ; preds = %10
  %23 = fcmp olt double %14, %12
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %11, i64 0, i32 2
  br label %18

26:                                               ; preds = %22
  %27 = fcmp oeq double %12, %14
  br i1 %27, label %28, label %43

28:                                               ; preds = %26
  %29 = load double, double* %9, align 8
  %30 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %11, i64 0, i32 5, i32 1
  %31 = load double, double* %30, align 8
  %32 = fcmp oeq double %29, %31
  br i1 %32, label %33, label %43

33:                                               ; preds = %28
  %34 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %35 = bitcast i8* %34 to %"class.blink::TextTrackCue"**
  %36 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %11, i64 0, i32 5, i32 2
  %38 = bitcast %"class.blink::TextTrackCue"** %37 to i8*
  %39 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %38, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i32 152) #8
  %40 = bitcast i8* %39 to %"class.blink::TextTrackCue"**
  %41 = load %"class.blink::TextTrackCue"*, %"class.blink::TextTrackCue"** %40, align 8
  %42 = icmp eq %"class.blink::TextTrackCue"* %36, %41
  br i1 %42, label %50, label %43

43:                                               ; preds = %26, %28, %33
  %44 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %11, i64 0, i32 1
  %45 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %44, align 8
  %46 = tail call %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE25TreeSearchFullComparisonsEPNS6_4NodeERKS5_(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, %"class.WTF::PODInterval"* dereferenceable(40) %2)
  %47 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %11, i64 0, i32 2
  br label %18

50:                                               ; preds = %18, %33, %43, %3
  %51 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ null, %3 ], [ %46, %43 ], [ %11, %33 ], [ null, %18 ]
  ret %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10InsertNodeEPNS6_4NodeE(%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::PODRedBlackTree", %"class.WTF::PODRedBlackTree"* %0, i64 0, i32 2
  %4 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %3, align 8
  %5 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5, i32 0
  %8 = load double, double* %7, align 8
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %4, %6 ], [ %17, %9 ]
  %11 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %10, i64 0, i32 5, i32 0
  %12 = load double, double* %11, align 8
  %13 = fcmp olt double %8, %12
  %14 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %10, i64 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %10, i64 0, i32 2
  %16 = select i1 %13, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %14, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %15
  %17 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %16, align 8
  %18 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %17, null
  br i1 %18, label %21, label %9

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* null, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %20, align 8
  br label %27

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %10, i64 0, i32 5, i32 0
  %23 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %10, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23, align 8
  %24 = load double, double* %22, align 8
  %25 = fcmp olt double %8, %24
  %26 = select i1 %25, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %14, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %15
  br label %27

27:                                               ; preds = %21, %19
  %28 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %3, %19 ], [ %26, %21 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 4
  store i32 1, i32* %29, align 8
  %30 = bitcast %"class.WTF::PODRedBlackTree"* %0 to i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)***
  %31 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %31, i64 3
  %33 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1) #8
  %35 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 3
  %36 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %35, align 8
  %37 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %3, align 8
  %38 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %37, %1
  br i1 %38, label %282, label %39

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %36, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %282

43:                                               ; preds = %39, %276
  %44 = phi i32* [ %279, %276 ], [ %40, %39 ]
  %45 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %272, %276 ], [ %1, %39 ]
  %46 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %278, %276 ], [ %36, %39 ]
  %47 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, i64 0, i32 3
  %48 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, i64 0, i32 3
  %49 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %49, i64 0, i32 1
  %51 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %50, align 8
  %52 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, %51
  %53 = ptrtoint %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %49 to i64
  br i1 %52, label %54, label %163

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %49, i64 0, i32 2
  %56 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %55, align 8
  %57 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %56, null
  br i1 %57, label %80, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %56, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %80

62:                                               ; preds = %58
  store i32 2, i32* %44, align 8
  store i32 2, i32* %59, align 8
  %63 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47, align 8
  %64 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %63, i64 0, i32 3
  %65 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, i64 0, i32 4
  store i32 1, i32* %66, align 8
  %67 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47, align 8
  %68 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %69 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %68, i64 3
  %70 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %69, align 8
  %71 = tail call zeroext i1 %70(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %67) #8
  %72 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47, align 8
  %73 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %72, i64 0, i32 3
  %74 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %73, align 8
  %75 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %76 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %75, i64 3
  %77 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %74) #8
  %79 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %74, i64 0, i32 3
  br label %270

80:                                               ; preds = %54, %58
  %81 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, i64 0, i32 2
  %82 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %81, align 8
  %83 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, %82
  br i1 %83, label %84, label %117

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, i64 0, i32 1
  %86 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %81 to i64*
  store i64 %87, i64* %88, align 8
  %89 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %85, align 8
  %90 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %89, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %92, align 8
  %93 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48 to i64*
  %94 = load i64, i64* %93, align 8
  br label %95

95:                                               ; preds = %84, %91
  %96 = phi i64 [ %94, %91 ], [ %53, %84 ]
  %97 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47 to i64*
  store i64 %96, i64* %97, align 8
  %98 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, align 8
  %99 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %98, i64 0, i32 1
  %102 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %101, align 8
  %103 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %102, %46
  %104 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %98, i64 0, i32 2
  %105 = select i1 %103, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %101, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %104
  br label %106

106:                                              ; preds = %100, %95
  %107 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %3, %95 ], [ %105, %100 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %107, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %85, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, align 8
  %108 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %109 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %108, i64 3
  %110 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46) #8
  %112 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %113 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %112, i64 3
  %114 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45) #8
  %116 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, align 8
  br label %117

117:                                              ; preds = %106, %80
  %118 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %116, %106 ], [ %46, %80 ]
  %119 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %46, %106 ], [ %45, %80 ]
  %120 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %119, i64 0, i32 3
  %121 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %118, i64 0, i32 4
  store i32 2, i32* %121, align 8
  %122 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %120, align 8
  %123 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %122, i64 0, i32 3
  %124 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %123, align 8
  %125 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %124, i64 0, i32 4
  store i32 1, i32* %125, align 8
  %126 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %120, align 8
  %127 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %126, i64 0, i32 3
  %128 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %127, align 8
  %129 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %128, i64 0, i32 1
  %130 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %129, align 8
  %131 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %130, i64 0, i32 2
  %132 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %129 to i64*
  store i64 %133, i64* %134, align 8
  %135 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %131, align 8
  %136 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %117
  %138 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %135, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %128, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %138, align 8
  br label %139

139:                                              ; preds = %137, %117
  %140 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %128, i64 0, i32 3
  %141 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %130, i64 0, i32 3
  %144 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %140, align 8
  %146 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %145, i64 0, i32 1
  %149 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %148, align 8
  %150 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %149, %128
  %151 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %145, i64 0, i32 2
  %152 = select i1 %150, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %148, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %151
  br label %153

153:                                              ; preds = %147, %139
  %154 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %3, %139 ], [ %152, %147 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %130, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %154, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %128, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %131, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %130, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %140, align 8
  %155 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %156 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %155, i64 3
  %157 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %156, align 8
  %158 = tail call zeroext i1 %157(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %128) #8
  %159 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %160 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %159, i64 3
  %161 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %160, align 8
  %162 = tail call zeroext i1 %161(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %130) #8
  br label %270

163:                                              ; preds = %43
  %164 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %51, null
  br i1 %164, label %187, label %165

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %51, i64 0, i32 4
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %187

169:                                              ; preds = %165
  store i32 2, i32* %44, align 8
  store i32 2, i32* %166, align 8
  %170 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47, align 8
  %171 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %170, i64 0, i32 3
  %172 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %171, align 8
  %173 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %172, i64 0, i32 4
  store i32 1, i32* %173, align 8
  %174 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47, align 8
  %175 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %176 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %175, i64 3
  %177 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %176, align 8
  %178 = tail call zeroext i1 %177(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %174) #8
  %179 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47, align 8
  %180 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %179, i64 0, i32 3
  %181 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %180, align 8
  %182 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %183 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %182, i64 3
  %184 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %183, align 8
  %185 = tail call zeroext i1 %184(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %181) #8
  %186 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %181, i64 0, i32 3
  br label %270

187:                                              ; preds = %163, %165
  %188 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, i64 0, i32 1
  %189 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %188, align 8
  %190 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, %189
  br i1 %190, label %191, label %224

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, i64 0, i32 2
  %193 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %188 to i64*
  store i64 %194, i64* %195, align 8
  %196 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %192, align 8
  %197 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %196, null
  br i1 %197, label %202, label %198

198:                                              ; preds = %191
  %199 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %196, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %199, align 8
  %200 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48 to i64*
  %201 = load i64, i64* %200, align 8
  br label %202

202:                                              ; preds = %191, %198
  %203 = phi i64 [ %201, %198 ], [ %53, %191 ]
  %204 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47 to i64*
  store i64 %203, i64* %204, align 8
  %205 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, align 8
  %206 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %205, null
  br i1 %206, label %213, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %205, i64 0, i32 1
  %209 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %208, align 8
  %210 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %209, %46
  %211 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %205, i64 0, i32 2
  %212 = select i1 %210, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %208, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %211
  br label %213

213:                                              ; preds = %207, %202
  %214 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %3, %202 ], [ %212, %207 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %214, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %192, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, align 8
  %215 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %216 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %215, i64 3
  %217 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %216, align 8
  %218 = tail call zeroext i1 %217(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %46) #8
  %219 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %220 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %219, i64 3
  %221 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %220, align 8
  %222 = tail call zeroext i1 %221(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45) #8
  %223 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, align 8
  br label %224

224:                                              ; preds = %213, %187
  %225 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %223, %213 ], [ %46, %187 ]
  %226 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %46, %213 ], [ %45, %187 ]
  %227 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %226, i64 0, i32 3
  %228 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %225, i64 0, i32 4
  store i32 2, i32* %228, align 8
  %229 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %227, align 8
  %230 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %229, i64 0, i32 3
  %231 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %230, align 8
  %232 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %231, i64 0, i32 4
  store i32 1, i32* %232, align 8
  %233 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %227, align 8
  %234 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %233, i64 0, i32 3
  %235 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %234, align 8
  %236 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %235, i64 0, i32 2
  %237 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %236, align 8
  %238 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %237, i64 0, i32 1
  %239 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %238, align 8
  %243 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %224
  %245 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %242, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %235, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %245, align 8
  br label %246

246:                                              ; preds = %244, %224
  %247 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %235, i64 0, i32 3
  %248 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %237, i64 0, i32 3
  %251 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %247, align 8
  %253 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %252, null
  br i1 %253, label %260, label %254

254:                                              ; preds = %246
  %255 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %252, i64 0, i32 1
  %256 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %255, align 8
  %257 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %256, %235
  %258 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %252, i64 0, i32 2
  %259 = select i1 %257, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %255, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %258
  br label %260

260:                                              ; preds = %254, %246
  %261 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %3, %246 ], [ %259, %254 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %237, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %261, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %235, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %238, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %237, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %247, align 8
  %262 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %263 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %262, i64 3
  %264 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %263, align 8
  %265 = tail call zeroext i1 %264(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %235) #8
  %266 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %267 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %266, i64 3
  %268 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %267, align 8
  %269 = tail call zeroext i1 %268(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %237) #8
  br label %270

270:                                              ; preds = %169, %260, %62, %153
  %271 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %79, %62 ], [ %143, %153 ], [ %186, %169 ], [ %250, %260 ]
  %272 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %74, %62 ], [ %119, %153 ], [ %181, %169 ], [ %226, %260 ]
  %273 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %271, align 8
  %274 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %3, align 8
  %275 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %272, %274
  br i1 %275, label %282, label %276

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %272, i64 0, i32 3
  %278 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %277, align 8
  %279 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %278, i64 0, i32 4
  %280 = load i32, i32* %279, align 8
  %281 = icmp eq i32 %280, 1
  br i1 %281, label %43, label %282

282:                                              ; preds = %270, %276, %39, %27
  %283 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %1, %27 ], [ %37, %39 ], [ %274, %276 ], [ %272, %270 ]
  %284 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %36, %27 ], [ %36, %39 ], [ %273, %276 ], [ %273, %270 ]
  %285 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %284, null
  br i1 %285, label %298, label %286

286:                                              ; preds = %282, %286
  %287 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %293, %286 ], [ %284, %282 ]
  %288 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %30, align 8
  %289 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %288, i64 3
  %290 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %289, align 8
  %291 = tail call zeroext i1 %290(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* nonnull %287) #8
  %292 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %287, i64 0, i32 3
  %293 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %292, align 8
  %294 = icmp ne %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %293, null
  %295 = and i1 %291, %294
  br i1 %295, label %286, label %296

296:                                              ; preds = %286
  %297 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %3, align 8
  br label %298

298:                                              ; preds = %296, %282
  %299 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %297, %296 ], [ %283, %282 ]
  %300 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %299, i64 0, i32 4
  store i32 2, i32* %300, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeD2Ev(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeD0Ev(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4Node8CopyFromEPS7_(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5
  %4 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, i64 0, i32 5
  %5 = bitcast %"class.WTF::PODInterval"* %4 to i8*
  %6 = bitcast %"class.WTF::PODInterval"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN3WTF8PODArena12AllocateBaseINS_15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE4NodeEEEPvv(%"class.WTF::PODArena"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1055", align 8
  %3 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %0, i64 0, i32 2
  %4 = load %"class.WTF::PODArena::Chunk"*, %"class.WTF::PODArena::Chunk"** %3, align 8
  %5 = icmp eq %"class.WTF::PODArena::Chunk"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %4, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 80
  %10 = icmp ugt i64 %8, -81
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %4, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %4, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %8
  store i64 %9, i64* %7, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %91

20:                                               ; preds = %11, %6, %1, %15
  %21 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %0, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 80
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  store i64 80, i64* %21, align 8
  br label %25

25:                                               ; preds = %24, %20
  %26 = phi i64 [ 80, %24 ], [ %22, %20 ]
  %27 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %0, i64 0, i32 4
  %28 = bitcast %"class.std::__1::unique_ptr.1055"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %0, i64 0, i32 1, i32 0
  %30 = load %"class.WTF::PODArena::Allocator"*, %"class.WTF::PODArena::Allocator"** %29, align 8
  %31 = tail call noalias i8* @malloc(i64 32) #8
  %32 = bitcast i8* %31 to %"class.WTF::PODArena::Allocator"**
  store %"class.WTF::PODArena::Allocator"* %30, %"class.WTF::PODArena::Allocator"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 16
  %34 = bitcast i8* %33 to i64*
  store i64 %26, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %31, i64 24
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = bitcast %"class.WTF::PODArena::Allocator"* %30 to i8* (%"class.WTF::PODArena::Allocator"*, i64)***
  %38 = load i8* (%"class.WTF::PODArena::Allocator"*, i64)**, i8* (%"class.WTF::PODArena::Allocator"*, i64)*** %37, align 8
  %39 = load i8* (%"class.WTF::PODArena::Allocator"*, i64)*, i8* (%"class.WTF::PODArena::Allocator"*, i64)** %38, align 8
  %40 = tail call i8* %39(%"class.WTF::PODArena::Allocator"* %30, i64 %26) #8
  %41 = getelementptr inbounds i8, i8* %31, i64 8
  %42 = bitcast i8* %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %2, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::unique_ptr.1055"* %2 to i8**
  store i8* %31, i8** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %59, label %50, !prof !25

50:                                               ; preds = %25
  %51 = ptrtoint i8* %31 to i64
  %52 = getelementptr inbounds %"class.WTF::Vector.1052", %"class.WTF::Vector.1052"* %27, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr.1055"*, %"class.std::__1::unique_ptr.1055"** %52, align 8
  %54 = zext i32 %46 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %53, i64 %54
  store %"class.WTF::PODArena::Chunk"* null, %"class.WTF::PODArena::Chunk"** %43, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.1055"* %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = load i32, i32* %45, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %45, align 4
  br label %60

59:                                               ; preds = %25
  call void @_ZN3WTF6VectorINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1052"* %27, %"class.std::__1::unique_ptr.1055"* nonnull dereferenceable(8) %2) #8
  br label %60

60:                                               ; preds = %50, %59
  %61 = load %"class.WTF::PODArena::Chunk"*, %"class.WTF::PODArena::Chunk"** %43, align 8
  store %"class.WTF::PODArena::Chunk"* null, %"class.WTF::PODArena::Chunk"** %43, align 8
  %62 = icmp eq %"class.WTF::PODArena::Chunk"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %61, i64 0, i32 0
  %65 = load %"class.WTF::PODArena::Allocator"*, %"class.WTF::PODArena::Allocator"** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %61, i64 0, i32 1
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"class.WTF::PODArena::Allocator"* %65 to void (%"class.WTF::PODArena::Allocator"*, i8*)***
  %69 = load void (%"class.WTF::PODArena::Allocator"*, i8*)**, void (%"class.WTF::PODArena::Allocator"*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.WTF::PODArena::Allocator"*, i8*)*, void (%"class.WTF::PODArena::Allocator"*, i8*)** %69, i64 1
  %71 = load void (%"class.WTF::PODArena::Allocator"*, i8*)*, void (%"class.WTF::PODArena::Allocator"*, i8*)** %70, align 8
  call void %71(%"class.WTF::PODArena::Allocator"* %65, i8* %67) #8
  %72 = bitcast %"class.WTF::PODArena::Chunk"* %61 to i8*
  call void @free(i8* %72) #8
  br label %73

73:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  %74 = load i32, i32* %45, align 4
  %75 = add i32 %74, -1
  %76 = call dereferenceable(8) %"class.std::__1::unique_ptr.1055"* @_ZN3WTF6VectorINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1052"* %27, i32 %75) #8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::PODArena::Chunk"*, %"class.WTF::PODArena::Chunk"** %77, align 8
  store %"class.WTF::PODArena::Chunk"* %78, %"class.WTF::PODArena::Chunk"** %3, align 8
  %79 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %78, i64 0, i32 3
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 80
  %82 = icmp ugt i64 %80, -81
  br i1 %82, label %91, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %78, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %81, %85
  br i1 %86, label %91, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %78, i64 0, i32 1
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %80
  store i64 %81, i64* %79, align 8
  br label %91

91:                                               ; preds = %87, %83, %73, %15
  %92 = phi i8* [ %18, %15 ], [ %90, %87 ], [ null, %73 ], [ null, %83 ]
  ret i8* %92
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1052"*, %"class.std::__1::unique_ptr.1055"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1052", %"class.WTF::Vector.1052"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1052", %"class.WTF::Vector.1052"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.1055"*, %"class.std::__1::unique_ptr.1055"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.1055"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.1055"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1052", %"class.WTF::Vector.1052"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !15

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.1055"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrINS_8PODArena5ChunkENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1052"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.1055"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.1055"*, %"class.std::__1::unique_ptr.1055"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.1055"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.1055"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !15

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.1052"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.1052"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.1055"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.1055"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.1055"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1052", %"class.WTF::Vector.1052"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !15

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.1055"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrINS_8PODArena5ChunkENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1052"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.1055"*, %"class.std::__1::unique_ptr.1055"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.1055"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.1055"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !15

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.1052"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.1052"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.1055"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.1055"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.1055"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.1055"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1055"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.WTF::PODArena::Chunk"* null, %"class.WTF::PODArena::Chunk"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1055"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrINS_8PODArena5ChunkENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.1055"* @_ZN3WTF6VectorINSt3__110unique_ptrINS_8PODArena5ChunkENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1052"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1052", %"class.WTF::Vector.1052"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1052", %"class.WTF::Vector.1052"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.1055"*, %"class.std::__1::unique_ptr.1055"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.1055"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE10DeleteNodeEPNS6_4NodeE(%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 1
  %4 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %3, align 8
  %5 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 2
  %8 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %7, align 8
  %9 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %11, i64 0, i32 1
  %13 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %12, align 8
  %14 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %13, null
  br i1 %14, label %18, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 3
  %17 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %16, align 8
  br label %25

18:                                               ; preds = %10, %2
  %19 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %1, %2 ], [ %11, %10 ]
  %20 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %19, i64 0, i32 2
  %21 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %20, align 8
  %22 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %21, null
  %23 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %19, i64 0, i32 3
  %24 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23, align 8
  br i1 %22, label %32, label %25

25:                                               ; preds = %15, %18
  %26 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %1, %15 ], [ %19, %18 ]
  %27 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %17, %15 ], [ %24, %18 ]
  %28 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %16, %15 ], [ %23, %18 ]
  %29 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %4, %15 ], [ %21, %18 ]
  %30 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %29, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %27, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %30, align 8
  %31 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %28, align 8
  br label %32

32:                                               ; preds = %18, %25
  %33 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %19, %18 ], [ %26, %25 ]
  %34 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %24, %18 ], [ %31, %25 ]
  %35 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ null, %18 ], [ %29, %25 ]
  %36 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %24, %18 ], [ %27, %25 ]
  %37 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %34, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::PODRedBlackTree", %"class.WTF::PODRedBlackTree"* %0, i64 0, i32 2
  br label %46

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %34, i64 0, i32 1
  %42 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %41, align 8
  %43 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %33, %42
  %44 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %34, i64 0, i32 2
  %45 = select i1 %43, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %41, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %44
  br label %46

46:                                               ; preds = %40, %38
  %47 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %39, %38 ], [ %45, %40 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %35, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %47, align 8
  %48 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %33, %1
  br i1 %48, label %72, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1 to void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)***
  %51 = load void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %51, i64 2
  %53 = load void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, void (%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %52, align 8
  tail call void %53(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %33) #8
  %54 = bitcast %"class.WTF::PODRedBlackTree"* %0 to i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)***
  %55 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %55, i64 3
  %57 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1) #8
  %59 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 3
  %60 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %59, align 8
  %61 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %49, %62
  %63 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %69, %62 ], [ %60, %49 ]
  %64 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %54, align 8
  %65 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %64, i64 3
  %66 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* nonnull %63) #8
  %68 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %63, i64 0, i32 3
  %69 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %68, align 8
  %70 = icmp ne %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %69, null
  %71 = and i1 %67, %70
  br i1 %71, label %62, label %72

72:                                               ; preds = %62, %49, %46
  %73 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %36, null
  %74 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %36, %33
  %75 = or i1 %73, %74
  %76 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %36, %1
  %77 = or i1 %76, %75
  br i1 %77, label %90, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.WTF::PODRedBlackTree"* %0 to i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)***
  br label %80

80:                                               ; preds = %80, %78
  %81 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %36, %78 ], [ %87, %80 ]
  %82 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %79, align 8
  %83 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %82, i64 3
  %84 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* nonnull %81) #8
  %86 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %81, i64 0, i32 3
  %87 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %86, align 8
  %88 = icmp ne %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %87, null
  %89 = and i1 %85, %88
  br i1 %89, label %80, label %90

90:                                               ; preds = %80, %72
  %91 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %33, i64 0, i32 4
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 2
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE11DeleteFixupEPNS6_4NodeES8_(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %35, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %36)
  br label %95

95:                                               ; preds = %94, %90
  %96 = getelementptr inbounds %"class.WTF::PODRedBlackTree", %"class.WTF::PODRedBlackTree"* %0, i64 0, i32 1, i32 0
  %97 = load %"class.WTF::PODFreeListArena"*, %"class.WTF::PODFreeListArena"** %96, align 8
  %98 = getelementptr inbounds %"class.WTF::PODFreeListArena", %"class.WTF::PODFreeListArena"* %97, i64 0, i32 2
  %99 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node>::FixedSizeMemoryChunk"** %98 to %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"**
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %33, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %101, align 8
  %102 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %33 to i64*
  store i64 %100, i64* %102, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIdPN5blink12TextTrackCueEEEE11DeleteFixupEPNS6_4NodeES8_(%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::PODRedBlackTree", %"class.WTF::PODRedBlackTree"* %0, i64 0, i32 2
  %5 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %4, align 8
  %6 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %5, %1
  %7 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, null
  br i1 %6, label %331, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.WTF::PODRedBlackTree"* %0 to i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)***
  br label %10

10:                                               ; preds = %8, %324
  %11 = phi i1 [ %7, %8 ], [ %330, %324 ]
  %12 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %2, %8 ], [ %327, %324 ]
  %13 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %1, %8 ], [ %325, %324 ]
  br i1 %11, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %13, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %334

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 1
  %20 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %19, align 8
  %21 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %13, %20
  br i1 %21, label %22, label %174

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 2
  %24 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %24, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %64

28:                                               ; preds = %22
  store i32 2, i32* %25, align 8
  %29 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 4
  store i32 1, i32* %29, align 8
  %30 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23, align 8
  %31 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %30, i64 0, i32 1
  %32 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23 to i64*
  store i64 %33, i64* %34, align 8
  %35 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %31, align 8
  %36 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %35, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %38, align 8
  br label %39

39:                                               ; preds = %37, %28
  %40 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 3
  %41 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %30, i64 0, i32 3
  %44 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %40, align 8
  %46 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, i64 0, i32 1
  %49 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, align 8
  %50 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %49, %12
  %51 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %45, i64 0, i32 2
  %52 = select i1 %50, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %48, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %51
  br label %53

53:                                               ; preds = %47, %39
  %54 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %4, %39 ], [ %52, %47 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %30, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %54, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %31, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %30, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %40, align 8
  %55 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %56 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %55, i64 3
  %57 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12) #8
  %59 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %60 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %59, i64 3
  %61 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %30) #8
  %63 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23, align 8
  br label %64

64:                                               ; preds = %53, %22
  %65 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %63, %53 ], [ %24, %22 ]
  %66 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, i64 0, i32 1
  %67 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %66, align 8
  %68 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %67, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 2
  br i1 %72, label %73, label %83

73:                                               ; preds = %64, %69
  %74 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, i64 0, i32 2
  %75 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %74, align 8
  %76 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %75, i64 0, i32 4
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 2
  br i1 %80, label %81, label %87

81:                                               ; preds = %73, %77
  %82 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, i64 0, i32 4
  store i32 1, i32* %82, align 8
  br label %324

83:                                               ; preds = %69
  %84 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, i64 0, i32 2
  %85 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %84, align 8
  %86 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %77, %83
  %88 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %85, %83 ], [ %75, %77 ]
  %89 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %88, i64 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 2
  br i1 %91, label %92, label %129

92:                                               ; preds = %83, %87
  %93 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %67, i64 0, i32 4
  store i32 2, i32* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, i64 0, i32 4
  store i32 1, i32* %94, align 8
  %95 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %66, align 8
  %96 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %95, i64 0, i32 2
  %97 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %66 to i64*
  store i64 %98, i64* %99, align 8
  %100 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %96, align 8
  %101 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %100, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %103, align 8
  br label %104

104:                                              ; preds = %102, %92
  %105 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, i64 0, i32 3
  %106 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %95, i64 0, i32 3
  %109 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %105, align 8
  %111 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %110, null
  br i1 %111, label %118, label %112

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %110, i64 0, i32 1
  %114 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %113, align 8
  %115 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %114, %65
  %116 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %110, i64 0, i32 2
  %117 = select i1 %115, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %113, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %116
  br label %118

118:                                              ; preds = %112, %104
  %119 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %4, %104 ], [ %117, %112 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %95, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %119, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %96, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %95, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %105, align 8
  %120 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %121 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %120, i64 3
  %122 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %65) #8
  %124 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %125 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %124, i64 3
  %126 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %125, align 8
  %127 = tail call zeroext i1 %126(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %95) #8
  %128 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23, align 8
  br label %129

129:                                              ; preds = %118, %87
  %130 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %128, %118 ], [ %65, %87 ]
  %131 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 4
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %130, i64 0, i32 4
  store i32 %132, i32* %133, align 8
  store i32 2, i32* %131, align 8
  %134 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %130, i64 0, i32 2
  %135 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %134, align 8
  %136 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %135, i64 0, i32 4
  store i32 2, i32* %138, align 8
  br label %139

139:                                              ; preds = %129, %137
  %140 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23, align 8
  %141 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %140, i64 0, i32 1
  %142 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %23 to i64*
  store i64 %143, i64* %144, align 8
  %145 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %141, align 8
  %146 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %145, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %148, align 8
  br label %149

149:                                              ; preds = %147, %139
  %150 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 3
  %151 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %140, i64 0, i32 3
  %154 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %150, align 8
  %156 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %155, i64 0, i32 1
  %159 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %158, align 8
  %160 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %159, %12
  %161 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %155, i64 0, i32 2
  %162 = select i1 %160, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %158, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %161
  br label %163

163:                                              ; preds = %157, %149
  %164 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %4, %149 ], [ %162, %157 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %140, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %164, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %141, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %140, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %150, align 8
  %165 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %166 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %165, i64 3
  %167 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %166, align 8
  %168 = tail call zeroext i1 %167(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12) #8
  %169 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %170 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %169, i64 3
  %171 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %170, align 8
  %172 = tail call zeroext i1 %171(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %140) #8
  %173 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %4, align 8
  br label %324

174:                                              ; preds = %18
  %175 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %20, i64 0, i32 4
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %214

178:                                              ; preds = %174
  store i32 2, i32* %175, align 8
  %179 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 4
  store i32 1, i32* %179, align 8
  %180 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %19, align 8
  %181 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %180, i64 0, i32 2
  %182 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %19 to i64*
  store i64 %183, i64* %184, align 8
  %185 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %181, align 8
  %186 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %185, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %188, align 8
  br label %189

189:                                              ; preds = %187, %178
  %190 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 3
  %191 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %180, i64 0, i32 3
  %194 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %193 to i64*
  store i64 %192, i64* %194, align 8
  %195 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %190, align 8
  %196 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %195, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %195, i64 0, i32 1
  %199 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %198, align 8
  %200 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %199, %12
  %201 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %195, i64 0, i32 2
  %202 = select i1 %200, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %198, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %201
  br label %203

203:                                              ; preds = %197, %189
  %204 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %4, %189 ], [ %202, %197 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %180, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %204, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %181, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %180, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %190, align 8
  %205 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %206 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %205, i64 3
  %207 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %206, align 8
  %208 = tail call zeroext i1 %207(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12) #8
  %209 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %210 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %209, i64 3
  %211 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %210, align 8
  %212 = tail call zeroext i1 %211(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %180) #8
  %213 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %19, align 8
  br label %214

214:                                              ; preds = %203, %174
  %215 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %213, %203 ], [ %20, %174 ]
  %216 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215, i64 0, i32 2
  %217 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %216, align 8
  %218 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %217, null
  br i1 %218, label %223, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %217, i64 0, i32 4
  %221 = load i32, i32* %220, align 8
  %222 = icmp eq i32 %221, 2
  br i1 %222, label %223, label %233

223:                                              ; preds = %214, %219
  %224 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215, i64 0, i32 1
  %225 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %224, align 8
  %226 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %225, null
  br i1 %226, label %231, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %225, i64 0, i32 4
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, 2
  br i1 %230, label %231, label %237

231:                                              ; preds = %223, %227
  %232 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215, i64 0, i32 4
  store i32 1, i32* %232, align 8
  br label %324

233:                                              ; preds = %219
  %234 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215, i64 0, i32 1
  %235 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %234, align 8
  %236 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %227, %233
  %238 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %235, %233 ], [ %225, %227 ]
  %239 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %238, i64 0, i32 4
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, 2
  br i1 %241, label %242, label %279

242:                                              ; preds = %233, %237
  %243 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %217, i64 0, i32 4
  store i32 2, i32* %243, align 8
  %244 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215, i64 0, i32 4
  store i32 1, i32* %244, align 8
  %245 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %216, align 8
  %246 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %245, i64 0, i32 1
  %247 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %216 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %246, align 8
  %251 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %242
  %253 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %250, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %253, align 8
  br label %254

254:                                              ; preds = %252, %242
  %255 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215, i64 0, i32 3
  %256 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %245, i64 0, i32 3
  %259 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %258 to i64*
  store i64 %257, i64* %259, align 8
  %260 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %255, align 8
  %261 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %260, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %254
  %263 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %260, i64 0, i32 1
  %264 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %263, align 8
  %265 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %264, %215
  %266 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %260, i64 0, i32 2
  %267 = select i1 %265, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %263, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %266
  br label %268

268:                                              ; preds = %262, %254
  %269 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %4, %254 ], [ %267, %262 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %245, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %269, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %246, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %245, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %255, align 8
  %270 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %271 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %270, i64 3
  %272 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %271, align 8
  %273 = tail call zeroext i1 %272(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %215) #8
  %274 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %275 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %274, i64 3
  %276 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %275, align 8
  %277 = tail call zeroext i1 %276(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %245) #8
  %278 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %19, align 8
  br label %279

279:                                              ; preds = %268, %237
  %280 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %278, %268 ], [ %215, %237 ]
  %281 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 4
  %282 = load i32, i32* %281, align 8
  %283 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %280, i64 0, i32 4
  store i32 %282, i32* %283, align 8
  store i32 2, i32* %281, align 8
  %284 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %280, i64 0, i32 1
  %285 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %284, align 8
  %286 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %285, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %279
  %288 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %285, i64 0, i32 4
  store i32 2, i32* %288, align 8
  br label %289

289:                                              ; preds = %279, %287
  %290 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %19, align 8
  %291 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %290, i64 0, i32 2
  %292 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %19 to i64*
  store i64 %293, i64* %294, align 8
  %295 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %291, align 8
  %296 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %295, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %289
  %298 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %295, i64 0, i32 3
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %298, align 8
  br label %299

299:                                              ; preds = %297, %289
  %300 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, i64 0, i32 3
  %301 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %300 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %290, i64 0, i32 3
  %304 = bitcast %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %303 to i64*
  store i64 %302, i64* %304, align 8
  %305 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %300, align 8
  %306 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %305, null
  br i1 %306, label %313, label %307

307:                                              ; preds = %299
  %308 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %305, i64 0, i32 1
  %309 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %308, align 8
  %310 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %309, %12
  %311 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %305, i64 0, i32 2
  %312 = select i1 %310, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %308, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %311
  br label %313

313:                                              ; preds = %307, %299
  %314 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** [ %4, %299 ], [ %312, %307 ]
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %290, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %314, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %291, align 8
  store %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %290, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %300, align 8
  %315 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %316 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %315, i64 3
  %317 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %316, align 8
  %318 = tail call zeroext i1 %317(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %12) #8
  %319 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)**, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*** %9, align 8
  %320 = getelementptr inbounds i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %319, i64 3
  %321 = load i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)*, i1 (%"class.WTF::PODRedBlackTree"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*)** %320, align 8
  %322 = tail call zeroext i1 %321(%"class.WTF::PODRedBlackTree"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %290) #8
  %323 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %4, align 8
  br label %324

324:                                              ; preds = %231, %313, %81, %163
  %325 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %12, %231 ], [ %323, %313 ], [ %12, %81 ], [ %173, %163 ]
  %326 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %325, i64 0, i32 3
  %327 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %326, align 8
  %328 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %4, align 8
  %329 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %325, %328
  %330 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %325, null
  br i1 %329, label %331, label %10

331:                                              ; preds = %324, %3
  %332 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %1, %3 ], [ %325, %324 ]
  %333 = phi i1 [ %7, %3 ], [ %330, %324 ]
  br i1 %333, label %337, label %334

334:                                              ; preds = %14, %331
  %335 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %332, %331 ], [ %13, %14 ]
  %336 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %335, i64 0, i32 4
  store i32 2, i32* %336, align 8
  br label %337

337:                                              ; preds = %331, %334
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, double } @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE17NextIntervalPointEdPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(double, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, null
  br i1 %4, label %75, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5
  %7 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5, i32 4
  %8 = load double, double* %7, align 8
  %9 = fcmp olt double %8, %0
  br i1 %9, label %75, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5, i32 3
  %12 = load double, double* %11, align 8
  %13 = fcmp ogt double %12, %0
  br i1 %13, label %75, label %14

14:                                               ; preds = %10
  %15 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 1
  %17 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %16, align 8
  %18 = tail call { i8, double } @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE17NextIntervalPointEdPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(double %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %17)
  %19 = extractvalue { i8, double } %18, 0
  %20 = extractvalue { i8, double } %18, 1
  %21 = bitcast i64* %3 to double*
  store double %20, double* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %6, i64 0, i32 0
  %23 = load double, double* %22, align 8
  %24 = fcmp ogt double %23, %0
  br i1 %24, label %25, label %33

25:                                               ; preds = %14
  %26 = icmp eq i8 %19, 0
  br i1 %26, label %72, label %27

27:                                               ; preds = %25
  %28 = fcmp olt double %20, %23
  %29 = bitcast %"class.WTF::PODInterval"* %6 to i64*
  %30 = select i1 %28, i64* %3, i64* %29
  %31 = bitcast i64* %30 to double*
  %32 = load double, double* %31, align 8
  br label %72

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 5, i32 1
  %35 = load double, double* %34, align 8
  %36 = fcmp ogt double %35, %0
  %37 = icmp eq i8 %19, 0
  br i1 %36, label %38, label %46

38:                                               ; preds = %33
  %39 = bitcast double %35 to i64
  br i1 %37, label %54, label %40

40:                                               ; preds = %38
  %41 = fcmp olt double %20, %35
  %42 = bitcast double* %34 to i64*
  %43 = select i1 %41, i64* %3, i64* %42
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i64 %44 to double
  br label %54

46:                                               ; preds = %33
  %47 = bitcast double %20 to i64
  br i1 %37, label %48, label %54

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 2
  %50 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %49, align 8
  %51 = tail call { i8, double } @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE17NextIntervalPointEdPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(double %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %50)
  %52 = extractvalue { i8, double } %51, 0
  %53 = extractvalue { i8, double } %51, 1
  br label %72

54:                                               ; preds = %38, %46, %40
  %55 = phi i64 [ %47, %46 ], [ %44, %40 ], [ %39, %38 ]
  %56 = phi double [ %20, %46 ], [ %45, %40 ], [ %35, %38 ]
  %57 = phi i8 [ %19, %46 ], [ 1, %40 ], [ 1, %38 ]
  %58 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %1, i64 0, i32 2
  %59 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %58, align 8
  %60 = tail call { i8, double } @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE17NextIntervalPointEdPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeE(double %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %59)
  %61 = extractvalue { i8, double } %60, 0
  %62 = extractvalue { i8, double } %60, 1
  %63 = icmp eq i8 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = fcmp olt double %62, %56
  %66 = select i1 %65, double %62, double %56
  %67 = bitcast double %66 to i64
  br label %68

68:                                               ; preds = %54, %64
  %69 = phi i8 [ 1, %64 ], [ %57, %54 ]
  %70 = phi i64 [ %67, %64 ], [ %55, %54 ]
  %71 = bitcast i64 %70 to double
  br label %72

72:                                               ; preds = %48, %68, %25, %27
  %73 = phi i8 [ 1, %27 ], [ 1, %25 ], [ %69, %68 ], [ %52, %48 ]
  %74 = phi double [ %32, %27 ], [ %23, %25 ], [ %71, %68 ], [ %53, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  br label %75

75:                                               ; preds = %10, %5, %2, %72
  %76 = phi i8 [ %73, %72 ], [ 0, %2 ], [ 0, %5 ], [ 1, %10 ]
  %77 = phi double [ %74, %72 ], [ undef, %2 ], [ undef, %5 ], [ %12, %10 ]
  %78 = insertvalue { i8, double } undef, i8 %76, 0
  %79 = insertvalue { i8, double } %78, double %77, 1
  ret { i8, double } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE21SearchForOverlapsFromINS_24PODIntervalSearchAdapterIdS3_EEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeERT_(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODIntervalSearchAdapter"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::PODIntervalSearchAdapter", %"class.WTF::PODIntervalSearchAdapter"* %1, i64 0, i32 2
  %4 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %0, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::PODIntervalSearchAdapter", %"class.WTF::PODIntervalSearchAdapter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::PODIntervalSearchAdapter", %"class.WTF::PODIntervalSearchAdapter"* %1, i64 0, i32 0
  br label %8

8:                                                ; preds = %5, %49
  %9 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* [ %0, %5 ], [ %51, %49 ]
  %10 = load double, double* %3, align 8
  %11 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %9, i64 0, i32 5
  %12 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %9, i64 0, i32 5, i32 3
  %13 = load double, double* %12, align 8
  %14 = fcmp olt double %10, %13
  br i1 %14, label %53, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %9, i64 0, i32 5, i32 4
  %17 = load double, double* %16, align 8
  %18 = load double, double* %6, align 8
  %19 = fcmp olt double %17, %18
  br i1 %19, label %53, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %9, i64 0, i32 1
  %22 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %21, align 8
  tail call void @_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE21SearchForOverlapsFromINS_24PODIntervalSearchAdapterIdS3_EEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIdS3_EEE4NodeERT_(%"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %22, %"class.WTF::PODIntervalSearchAdapter"* dereferenceable(24) %1)
  %23 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %9, i64 0, i32 5, i32 1
  %24 = load double, double* %23, align 8
  %25 = load double, double* %6, align 8
  %26 = fcmp olt double %24, %25
  br i1 %26, label %49, label %27

27:                                               ; preds = %20
  %28 = load double, double* %3, align 8
  %29 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %11, i64 0, i32 0
  %30 = load double, double* %29, align 8
  %31 = fcmp uge double %28, %30
  br i1 %31, label %32, label %49

32:                                               ; preds = %27
  %33 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %7, align 8
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %48, label %39, !prof !25

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %40, align 8
  %42 = zext i32 %35 to i64
  %43 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %41, i64 %42
  %44 = bitcast %"class.WTF::PODInterval"* %43 to i8*
  %45 = bitcast %"class.WTF::PODInterval"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 40, i1 false) #8
  %46 = load i32, i32* %34, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %34, align 4
  br label %49

48:                                               ; preds = %32
  tail call void @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS5_EEvOT_(%"class.WTF::Vector"* %33, %"class.WTF::PODInterval"* dereferenceable(40) %11) #8
  br label %49

49:                                               ; preds = %20, %27, %39, %48
  %50 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %9, i64 0, i32 2
  %51 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"** %50, align 8
  %52 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<double, blink::TextTrackCue *> >::Node"* %51, null
  br i1 %52, label %53, label %8

53:                                               ; preds = %15, %8, %49, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS5_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::PODInterval"* dereferenceable(40)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS5_(%"class.WTF::Vector"* %0, i32 %5, %"class.WTF::PODInterval"* %1) #8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %8, i64 %10
  %12 = bitcast %"class.WTF::PODInterval"* %11 to i8*
  %13 = bitcast %"class.WTF::PODInterval"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false) #8
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS5_(%"class.WTF::Vector"*, i32, %"class.WTF::PODInterval"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %4, align 8
  %6 = icmp ugt %"class.WTF::PODInterval"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %5, i64 %10
  %12 = icmp ugt %"class.WTF::PODInterval"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !15

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::PODInterval"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 40
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = udiv i64 %27, 40
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.WTF::PODInterval"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.WTF::PODInterval"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !15

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.WTF::PODInterval"* %2 to i64
  %55 = ptrtoint %"class.WTF::PODInterval"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = sdiv exact i64 %56, 40
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !15

68:                                               ; preds = %53
  %69 = icmp eq %"class.WTF::PODInterval"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEmm(i64 %70) #8
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEPKcv, i64 0, i64 0)) #8
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.WTF::PODInterval"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.WTF::PODInterval"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !15

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = mul nuw nsw i64 %84, 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #8
  %86 = bitcast %"class.WTF::Vector"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #8
  %90 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = udiv i64 %71, 40
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.WTF::PODInterval"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.WTF::PODInterval"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.WTF::PODInterval"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.WTF::PODInterval"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_11PODIntervalIdPN5blink12TextTrackCueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS5_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::PODInterval"* dereferenceable(40)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS5_(%"class.WTF::Vector"* %0, i32 %5, %"class.WTF::PODInterval"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %8, i64 %10
  %12 = bitcast %"class.WTF::PODInterval"* %11 to i8*
  %13 = bitcast %"class.WTF::PODInterval"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false) #8
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.WTF::PODInterval"* @_ZN3WTF6VectorINS_11PODIntervalIdPN5blink12TextTrackCueEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::PODInterval"*, %"class.WTF::PODInterval"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::PODInterval", %"class.WTF::PODInterval"* %24, i64 %25
  ret %"class.WTF::PODInterval"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.771"* @_ZN3WTF15ConstructTraitsINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEENS_12VectorTraitsIS7_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IdPS5_EEEEEPS7_PvDpOT_(i8*, %"struct.std::__1::pair.773"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.std::__1::pair.771"*
  %4 = bitcast %"struct.std::__1::pair.773"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::TextTrackCue"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !25

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #8
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %11 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv) #8
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"struct.std::__1::pair.771"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IdPS5_EEEEvOT_(%"class.WTF::Vector.768"*, %"struct.std::__1::pair.773"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.768"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %16, i64 %18
  %20 = bitcast %"struct.std::__1::pair.771"* %19 to i8*
  %21 = tail call %"struct.std::__1::pair.771"* @_ZN3WTF15ConstructTraitsINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEENS_12VectorTraitsIS7_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IdPS5_EEEEEPS7_PvDpOT_(i8* %20, %"struct.std::__1::pair.773"* dereferenceable(16) %1)
  %22 = load i32, i32* %3, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TextTrackCue"*
  %4 = bitcast i8* %1 to void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)**, void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)*, void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)*, void (%"class.blink::TextTrackCue"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::TextTrackCue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.768"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.771"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.768"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %8, align 8
  %26 = icmp eq %"struct.std::__1::pair.771"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.std::__1::pair.771"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !25

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.768"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIdN5blink6MemberINS3_12TextTrackCueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.768"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.768"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.768"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"struct.std::__1::pair.771"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"struct.std::__1::pair.771"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !15

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.768"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector.768"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector.768"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.768", %"class.WTF::Vector.768"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.22, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS6_EEE14AllocateObjectISA_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS6_EEE14AllocateObjectISA_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !25

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([215 x i8], [215 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairIdNS1_6MemberINS1_12TextTrackCueEEEEENS_12VectorTraitsIS8_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair.771"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !25

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member.29"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12TextTrackCueEE5TraceEPNS_7VisitorEPKv) #8
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairIdNS_6MemberINS_12TextTrackCueEEEEEN3WTF12VectorTraitsIS7_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEvT0_SF_T_(%"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair.773", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.std::__1::pair.773"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.std::__1::pair.773"*
  %9 = alloca %"struct.std::__1::pair.773", align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"struct.std::__1::pair.773"*
  %12 = alloca %"struct.std::__1::pair.773", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"struct.std::__1::pair.773"*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %"struct.std::__1::pair.773"*
  %17 = alloca <2 x i64>, align 16
  %18 = bitcast <2 x i64>* %17 to %"struct.std::__1::pair.773"*
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %"struct.std::__1::pair.773"*
  %21 = alloca <2 x i64>, align 16
  %22 = bitcast <2 x i64>* %21 to %"struct.std::__1::pair.773"*
  %23 = alloca %"struct.std::__1::pair.773", align 8
  %24 = alloca %"struct.std::__1::pair.773", align 8
  %25 = alloca %"struct.std::__1::pair.773", align 8
  %26 = alloca <2 x i64>, align 16
  %27 = bitcast <2 x i64>* %26 to %"struct.std::__1::pair.773"*
  %28 = alloca <2 x i64>, align 16
  %29 = bitcast <2 x i64>* %28 to %"struct.std::__1::pair.773"*
  %30 = alloca %"struct.std::__1::pair.773", align 8
  %31 = alloca <2 x i64>, align 16
  %32 = bitcast <2 x i64>* %31 to %"struct.std::__1::pair.773"*
  %33 = alloca <2 x i64>, align 16
  %34 = bitcast <2 x i64>* %33 to %"struct.std::__1::pair.773"*
  %35 = alloca <2 x i64>, align 16
  %36 = bitcast <2 x i64>* %35 to %"struct.std::__1::pair.773"*
  %37 = bitcast <2 x i64>* %7 to i8*
  %38 = bitcast %"struct.std::__1::pair.773"* %9 to i8*
  %39 = bitcast %"struct.std::__1::pair.773"* %9 to i64*
  %40 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %9, i64 0, i32 1
  %41 = bitcast %"class.blink::TextTrackCue"** %40 to i64*
  %42 = bitcast %"struct.std::__1::pair.773"* %24 to i8*
  %43 = bitcast %"struct.std::__1::pair.773"* %24 to i64*
  %44 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %24, i64 0, i32 1
  %45 = bitcast %"class.blink::TextTrackCue"** %44 to i64*
  %46 = bitcast %"struct.std::__1::pair.773"* %25 to i8*
  %47 = bitcast %"struct.std::__1::pair.773"* %25 to i64*
  %48 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %25, i64 0, i32 1
  %49 = bitcast %"class.blink::TextTrackCue"** %48 to i64*
  %50 = bitcast <2 x i64>* %10 to i8*
  %51 = bitcast %"struct.std::__1::pair.773"* %12 to i8*
  %52 = bitcast %"struct.std::__1::pair.773"* %12 to i64*
  %53 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %12, i64 0, i32 1
  %54 = bitcast %"class.blink::TextTrackCue"** %53 to i64*
  %55 = bitcast <2 x i64>* %13 to i8*
  %56 = bitcast <2 x i64>* %15 to i8*
  %57 = bitcast <2 x i64>* %17 to i8*
  %58 = bitcast <2 x i64>* %19 to i8*
  %59 = bitcast <2 x i64>* %21 to i8*
  %60 = bitcast %"struct.std::__1::pair.773"* %23 to i8*
  %61 = bitcast %"struct.std::__1::pair.773"* %23 to i64*
  %62 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %23, i64 0, i32 1
  %63 = bitcast %"class.blink::TextTrackCue"** %62 to i64*
  %64 = bitcast <2 x i64>* %26 to i8*
  %65 = bitcast <2 x i64>* %28 to i8*
  %66 = bitcast %"struct.std::__1::pair.773"* %30 to i8*
  %67 = bitcast %"struct.std::__1::pair.773"* %30 to i64*
  %68 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %30, i64 0, i32 1
  %69 = bitcast %"class.blink::TextTrackCue"** %68 to i64*
  %70 = bitcast <2 x i64>* %31 to i8*
  %71 = bitcast <2 x i64>* %33 to i8*
  %72 = bitcast <2 x i64>* %35 to i8*
  br label %73

73:                                               ; preds = %421, %3
  %74 = phi %"struct.std::__1::pair.771"* [ %1, %3 ], [ %377, %421 ]
  %75 = phi %"struct.std::__1::pair.771"* [ %0, %3 ], [ %88, %421 ]
  %76 = ptrtoint %"struct.std::__1::pair.771"* %74 to i64
  %77 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1
  %78 = bitcast %"struct.std::__1::pair.771"* %77 to i64*
  %79 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1, i32 1, i32 0, i32 0
  %80 = bitcast %"class.blink::TextTrackCue"** %79 to i64*
  %81 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1, i32 1
  %82 = bitcast %"class.blink::Member.29"* %81 to i64*
  %83 = bitcast %"class.blink::Member.29"* %81 to i8**
  %84 = ptrtoint %"struct.std::__1::pair.771"* %74 to i64
  br label %85

85:                                               ; preds = %430, %73
  %86 = phi %"struct.std::__1::pair.771"* [ %75, %73 ], [ %431, %430 ]
  br label %87

87:                                               ; preds = %249, %85
  %88 = phi %"struct.std::__1::pair.771"* [ %86, %85 ], [ %229, %249 ]
  %89 = ptrtoint %"struct.std::__1::pair.771"* %88 to i64
  %90 = sub i64 %76, %89
  %91 = ashr exact i64 %90, 4
  switch i64 %91, label %146 [
    i64 0, label %434
    i64 1, label %434
    i64 2, label %92
    i64 3, label %131
    i64 4, label %135
    i64 5, label %140
  ]

92:                                               ; preds = %87
  %93 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  %94 = bitcast %"struct.std::__1::pair.773"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #8
  %95 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1
  %96 = bitcast %"struct.std::__1::pair.771"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"struct.std::__1::pair.773"* %4 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %4, i64 0, i32 1
  %100 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1, i32 1, i32 0, i32 0
  %101 = bitcast %"class.blink::TextTrackCue"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.blink::TextTrackCue"** %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #8
  %105 = bitcast %"struct.std::__1::pair.771"* %88 to i64*
  %106 = bitcast %"struct.std::__1::pair.771"* %88 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8
  store <2 x i64> %107, <2 x i64>* %5, align 16
  %108 = call zeroext i1 %93(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %4, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #8
  br i1 %108, label %109, label %434

109:                                              ; preds = %92
  %110 = load i64, i64* %105, align 8
  %111 = load i64, i64* %96, align 8
  store i64 %111, i64* %105, align 8
  store i64 %110, i64* %96, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1, i32 1
  %114 = bitcast %"class.blink::Member.29"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.blink::Member.29"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store atomic i64 %117, i64* %114 monotonic, align 8
  store atomic i64 %115, i64* %116 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %109
  %121 = bitcast %"class.blink::Member.29"* %112 to i8**
  %122 = load i8*, i8** %121, align 8
  %123 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %122) #8
  br label %124

124:                                              ; preds = %120, %109
  %125 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %434, label %127

127:                                              ; preds = %124
  %128 = bitcast %"class.blink::Member.29"* %113 to i8**
  %129 = load i8*, i8** %128, align 8
  %130 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %129) #8
  br label %434

131:                                              ; preds = %87
  %132 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 1
  %133 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1
  %134 = call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_T_(%"struct.std::__1::pair.771"* %88, %"struct.std::__1::pair.771"* %132, %"struct.std::__1::pair.771"* %133, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %434

135:                                              ; preds = %87
  %136 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 1
  %137 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 2
  %138 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1
  %139 = call i32 @_ZNSt3__17__sort4IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_T_(%"struct.std::__1::pair.771"* %88, %"struct.std::__1::pair.771"* %136, %"struct.std::__1::pair.771"* %137, %"struct.std::__1::pair.771"* %138, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %434

140:                                              ; preds = %87
  %141 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 1
  %142 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 2
  %143 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 3
  %144 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %74, i64 -1
  %145 = call i32 @_ZNSt3__17__sort5IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_SF_T_(%"struct.std::__1::pair.771"* %88, %"struct.std::__1::pair.771"* %141, %"struct.std::__1::pair.771"* %142, %"struct.std::__1::pair.771"* %143, %"struct.std::__1::pair.771"* %144, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %434

146:                                              ; preds = %87
  %147 = icmp slt i64 %90, 112
  br i1 %147, label %148, label %149

148:                                              ; preds = %146
  call void @_ZNSt3__118__insertion_sort_3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEvT0_SF_T_(%"struct.std::__1::pair.771"* %88, %"struct.std::__1::pair.771"* %74, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %434

149:                                              ; preds = %146
  %150 = icmp sgt i64 %90, 15984
  %151 = sdiv i64 %91, 2
  %152 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 %151
  br i1 %150, label %153, label %158

153:                                              ; preds = %149
  %154 = sdiv i64 %91, 4
  %155 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 %154
  %156 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %152, i64 %154
  %157 = call i32 @_ZNSt3__17__sort5IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_SF_T_(%"struct.std::__1::pair.771"* %88, %"struct.std::__1::pair.771"* %155, %"struct.std::__1::pair.771"* %152, %"struct.std::__1::pair.771"* %156, %"struct.std::__1::pair.771"* %77, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %160

158:                                              ; preds = %149
  %159 = call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_T_(%"struct.std::__1::pair.771"* %88, %"struct.std::__1::pair.771"* %152, %"struct.std::__1::pair.771"* %77, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %160

160:                                              ; preds = %158, %153
  %161 = phi i32 [ %157, %153 ], [ %159, %158 ]
  %162 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8
  %163 = bitcast %"struct.std::__1::pair.771"* %88 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8
  store <2 x i64> %164, <2 x i64>* %7, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #8
  %165 = bitcast %"struct.std::__1::pair.771"* %152 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %39, align 8
  %167 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 %151, i32 1, i32 0, i32 0
  %168 = bitcast %"class.blink::TextTrackCue"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %41, align 8
  %170 = call zeroext i1 %162(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %8, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  br i1 %170, label %311, label %171

171:                                              ; preds = %160, %275
  %172 = phi %"struct.std::__1::pair.771"* [ %173, %275 ], [ %77, %160 ]
  %173 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %172, i64 -1
  %174 = icmp eq %"struct.std::__1::pair.771"* %88, %173
  br i1 %174, label %175, label %275

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 1
  %177 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  %178 = bitcast %"struct.std::__1::pair.771"* %88 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8
  store <2 x i64> %179, <2 x i64>* %10, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  %180 = load i64, i64* %78, align 8
  store i64 %180, i64* %52, align 8
  %181 = load i64, i64* %80, align 8
  store i64 %181, i64* %54, align 8
  %182 = call zeroext i1 %177(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %11, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  br i1 %182, label %219, label %183

183:                                              ; preds = %175
  %184 = icmp eq %"struct.std::__1::pair.771"* %176, %77
  br i1 %184, label %434, label %185

185:                                              ; preds = %183
  %186 = bitcast %"struct.std::__1::pair.771"* %88 to <2 x i64>*
  br label %187

187:                                              ; preds = %185, %216
  %188 = phi %"struct.std::__1::pair.771"* [ %217, %216 ], [ %176, %185 ]
  %189 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #8
  %190 = load <2 x i64>, <2 x i64>* %186, align 8
  store <2 x i64> %190, <2 x i64>* %13, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #8
  %191 = bitcast %"struct.std::__1::pair.771"* %188 to <2 x i64>*
  %192 = load <2 x i64>, <2 x i64>* %191, align 8
  store <2 x i64> %192, <2 x i64>* %15, align 16
  %193 = call zeroext i1 %189(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %14, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #8
  br i1 %193, label %194, label %216

194:                                              ; preds = %187
  %195 = bitcast %"struct.std::__1::pair.771"* %188 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = load i64, i64* %78, align 8
  store i64 %197, i64* %195, align 8
  store i64 %196, i64* %78, align 8
  %198 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %188, i64 0, i32 1
  %199 = bitcast %"class.blink::Member.29"* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = load i64, i64* %82, align 8
  store atomic i64 %201, i64* %199 monotonic, align 8
  store atomic i64 %200, i64* %82 monotonic, align 8
  %202 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %208, label %204

204:                                              ; preds = %194
  %205 = bitcast %"class.blink::Member.29"* %198 to i8**
  %206 = load i8*, i8** %205, align 8
  %207 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %206) #8
  br label %208

208:                                              ; preds = %204, %194
  %209 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %208
  %212 = load i8*, i8** %83, align 8
  %213 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %212) #8
  br label %214

214:                                              ; preds = %208, %211
  %215 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %188, i64 1
  br label %219

216:                                              ; preds = %187
  %217 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %188, i64 1
  %218 = icmp eq %"struct.std::__1::pair.771"* %217, %77
  br i1 %218, label %434, label %187

219:                                              ; preds = %175, %214
  %220 = phi %"struct.std::__1::pair.771"* [ %215, %214 ], [ %176, %175 ]
  %221 = icmp eq %"struct.std::__1::pair.771"* %220, %77
  br i1 %221, label %434, label %222

222:                                              ; preds = %219
  %223 = bitcast %"struct.std::__1::pair.771"* %88 to <2 x i64>*
  %224 = bitcast %"struct.std::__1::pair.771"* %88 to <2 x i64>*
  br label %225

225:                                              ; preds = %270, %222
  %226 = phi %"struct.std::__1::pair.771"* [ %220, %222 ], [ %235, %270 ]
  %227 = phi %"struct.std::__1::pair.771"* [ %77, %222 ], [ %242, %270 ]
  br label %228

228:                                              ; preds = %228, %225
  %229 = phi %"struct.std::__1::pair.771"* [ %226, %225 ], [ %235, %228 ]
  %230 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8
  %231 = load <2 x i64>, <2 x i64>* %223, align 8
  store <2 x i64> %231, <2 x i64>* %17, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #8
  %232 = bitcast %"struct.std::__1::pair.771"* %229 to <2 x i64>*
  %233 = load <2 x i64>, <2 x i64>* %232, align 8
  store <2 x i64> %233, <2 x i64>* %19, align 16
  %234 = call zeroext i1 %230(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %18, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %20) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8
  %235 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %229, i64 1
  br i1 %234, label %236, label %228

236:                                              ; preds = %228
  %237 = bitcast %"struct.std::__1::pair.771"* %229 to i64*
  br label %238

238:                                              ; preds = %236, %238
  %239 = phi %"struct.std::__1::pair.771"* [ %242, %238 ], [ %227, %236 ]
  %240 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #8
  %241 = load <2 x i64>, <2 x i64>* %224, align 8
  store <2 x i64> %241, <2 x i64>* %21, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8
  %242 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %239, i64 -1
  %243 = bitcast %"struct.std::__1::pair.771"* %242 to i64*
  %244 = load i64, i64* %243, align 8
  store i64 %244, i64* %61, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %239, i64 -1, i32 1, i32 0, i32 0
  %246 = bitcast %"class.blink::TextTrackCue"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  store i64 %247, i64* %63, align 8
  %248 = call zeroext i1 %240(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %22, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %23) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #8
  br i1 %248, label %238, label %249

249:                                              ; preds = %238
  %250 = bitcast %"struct.std::__1::pair.771"* %242 to i64*
  %251 = icmp ult %"struct.std::__1::pair.771"* %229, %242
  br i1 %251, label %252, label %87

252:                                              ; preds = %249
  %253 = load i64, i64* %237, align 8
  %254 = load i64, i64* %250, align 8
  store i64 %254, i64* %237, align 8
  store i64 %253, i64* %250, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %229, i64 0, i32 1
  %256 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %239, i64 -1, i32 1
  %257 = bitcast %"class.blink::Member.29"* %255 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.blink::Member.29"* %256 to i64*
  %260 = load i64, i64* %259, align 8
  store atomic i64 %260, i64* %257 monotonic, align 8
  store atomic i64 %258, i64* %259 monotonic, align 8
  %261 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %267, label %263

263:                                              ; preds = %252
  %264 = bitcast %"class.blink::Member.29"* %255 to i8**
  %265 = load i8*, i8** %264, align 8
  %266 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %265) #8
  br label %267

267:                                              ; preds = %263, %252
  %268 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267, %271
  br label %225

271:                                              ; preds = %267
  %272 = bitcast %"class.blink::Member.29"* %256 to i8**
  %273 = load i8*, i8** %272, align 8
  %274 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %273) #8
  br label %270

275:                                              ; preds = %171
  %276 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  %277 = bitcast %"struct.std::__1::pair.771"* %173 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %43, align 8
  %279 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %172, i64 -1, i32 1, i32 0, i32 0
  %280 = bitcast %"class.blink::TextTrackCue"** %279 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #8
  %282 = load i64, i64* %165, align 8
  store i64 %282, i64* %47, align 8
  %283 = load i64, i64* %168, align 8
  store i64 %283, i64* %49, align 8
  %284 = call zeroext i1 %276(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %24, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %25) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  br i1 %284, label %285, label %171

285:                                              ; preds = %275
  %286 = bitcast %"struct.std::__1::pair.771"* %88 to i64*
  %287 = bitcast %"struct.std::__1::pair.771"* %173 to i64*
  %288 = load i64, i64* %286, align 8
  %289 = load i64, i64* %287, align 8
  store i64 %289, i64* %286, align 8
  store i64 %288, i64* %287, align 8
  %290 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 0, i32 1
  %291 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %172, i64 -1, i32 1
  %292 = bitcast %"class.blink::Member.29"* %290 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast %"class.blink::Member.29"* %291 to i64*
  %295 = load i64, i64* %294, align 8
  store atomic i64 %295, i64* %292 monotonic, align 8
  store atomic i64 %293, i64* %294 monotonic, align 8
  %296 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %302, label %298

298:                                              ; preds = %285
  %299 = bitcast %"class.blink::Member.29"* %290 to i8**
  %300 = load i8*, i8** %299, align 8
  %301 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %300) #8
  br label %302

302:                                              ; preds = %298, %285
  %303 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %309, label %305

305:                                              ; preds = %302
  %306 = bitcast %"class.blink::Member.29"* %291 to i8**
  %307 = load i8*, i8** %306, align 8
  %308 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %307) #8
  br label %309

309:                                              ; preds = %302, %305
  %310 = add i32 %161, 1
  br label %311

311:                                              ; preds = %160, %309
  %312 = phi i32 [ %310, %309 ], [ %161, %160 ]
  %313 = phi %"struct.std::__1::pair.771"* [ %173, %309 ], [ %77, %160 ]
  %314 = ptrtoint %"struct.std::__1::pair.771"* %88 to i64
  %315 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %88, i64 1
  %316 = icmp ult %"struct.std::__1::pair.771"* %315, %313
  br i1 %316, label %317, label %374

317:                                              ; preds = %311, %370
  %318 = phi %"struct.std::__1::pair.771"* [ %373, %370 ], [ %152, %311 ]
  %319 = phi i32 [ %371, %370 ], [ %312, %311 ]
  %320 = phi %"struct.std::__1::pair.771"* [ %330, %370 ], [ %315, %311 ]
  %321 = phi %"struct.std::__1::pair.771"* [ %337, %370 ], [ %313, %311 ]
  %322 = bitcast %"struct.std::__1::pair.771"* %318 to <2 x i64>*
  br label %323

323:                                              ; preds = %323, %317
  %324 = phi %"struct.std::__1::pair.771"* [ %320, %317 ], [ %330, %323 ]
  %325 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #8
  %326 = bitcast %"struct.std::__1::pair.771"* %324 to <2 x i64>*
  %327 = load <2 x i64>, <2 x i64>* %326, align 8
  store <2 x i64> %327, <2 x i64>* %26, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #8
  %328 = load <2 x i64>, <2 x i64>* %322, align 8
  store <2 x i64> %328, <2 x i64>* %28, align 16
  %329 = call zeroext i1 %325(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %27, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #8
  %330 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %324, i64 1
  br i1 %329, label %323, label %331

331:                                              ; preds = %323
  %332 = bitcast %"struct.std::__1::pair.771"* %324 to i64*
  %333 = bitcast %"struct.std::__1::pair.771"* %318 to <2 x i64>*
  br label %334

334:                                              ; preds = %331, %334
  %335 = phi %"struct.std::__1::pair.771"* [ %337, %334 ], [ %321, %331 ]
  %336 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #8
  %337 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %335, i64 -1
  %338 = bitcast %"struct.std::__1::pair.771"* %337 to i64*
  %339 = load i64, i64* %338, align 8
  store i64 %339, i64* %67, align 8
  %340 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %335, i64 -1, i32 1, i32 0, i32 0
  %341 = bitcast %"class.blink::TextTrackCue"** %340 to i64*
  %342 = load i64, i64* %341, align 8
  store i64 %342, i64* %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #8
  %343 = load <2 x i64>, <2 x i64>* %333, align 8
  store <2 x i64> %343, <2 x i64>* %31, align 16
  %344 = call zeroext i1 %336(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %30, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #8
  br i1 %344, label %345, label %334

345:                                              ; preds = %334
  %346 = bitcast %"struct.std::__1::pair.771"* %337 to i64*
  %347 = icmp ugt %"struct.std::__1::pair.771"* %324, %337
  br i1 %347, label %374, label %348

348:                                              ; preds = %345
  %349 = load i64, i64* %332, align 8
  %350 = load i64, i64* %346, align 8
  store i64 %350, i64* %332, align 8
  store i64 %349, i64* %346, align 8
  %351 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %324, i64 0, i32 1
  %352 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %335, i64 -1, i32 1
  %353 = bitcast %"class.blink::Member.29"* %351 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = bitcast %"class.blink::Member.29"* %352 to i64*
  %356 = load i64, i64* %355, align 8
  store atomic i64 %356, i64* %353 monotonic, align 8
  store atomic i64 %354, i64* %355 monotonic, align 8
  %357 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %363, label %359

359:                                              ; preds = %348
  %360 = bitcast %"class.blink::Member.29"* %351 to i8**
  %361 = load i8*, i8** %360, align 8
  %362 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %361) #8
  br label %363

363:                                              ; preds = %359, %348
  %364 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %370, label %366

366:                                              ; preds = %363
  %367 = bitcast %"class.blink::Member.29"* %352 to i8**
  %368 = load i8*, i8** %367, align 8
  %369 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %368) #8
  br label %370

370:                                              ; preds = %363, %366
  %371 = add i32 %319, 1
  %372 = icmp eq %"struct.std::__1::pair.771"* %318, %324
  %373 = select i1 %372, %"struct.std::__1::pair.771"* %337, %"struct.std::__1::pair.771"* %318
  br label %317

374:                                              ; preds = %345, %311
  %375 = phi %"struct.std::__1::pair.771"* [ %152, %311 ], [ %318, %345 ]
  %376 = phi i32 [ %312, %311 ], [ %319, %345 ]
  %377 = phi %"struct.std::__1::pair.771"* [ %315, %311 ], [ %324, %345 ]
  %378 = icmp eq %"struct.std::__1::pair.771"* %377, %375
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #8
  br i1 %378, label %412, label %379

379:                                              ; preds = %374
  %380 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  %381 = bitcast %"struct.std::__1::pair.771"* %375 to i64*
  %382 = bitcast %"struct.std::__1::pair.771"* %375 to <2 x i64>*
  %383 = load <2 x i64>, <2 x i64>* %382, align 8
  store <2 x i64> %383, <2 x i64>* %33, align 16
  %384 = bitcast %"struct.std::__1::pair.771"* %377 to i64*
  %385 = bitcast %"struct.std::__1::pair.771"* %377 to <2 x i64>*
  %386 = load <2 x i64>, <2 x i64>* %385, align 8
  store <2 x i64> %386, <2 x i64>* %35, align 16
  %387 = call zeroext i1 %380(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %34, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #8
  br i1 %387, label %388, label %413

388:                                              ; preds = %379
  %389 = load i64, i64* %384, align 8
  %390 = load i64, i64* %381, align 8
  store i64 %390, i64* %384, align 8
  store i64 %389, i64* %381, align 8
  %391 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %377, i64 0, i32 1
  %392 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %375, i64 0, i32 1
  %393 = bitcast %"class.blink::Member.29"* %391 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = bitcast %"class.blink::Member.29"* %392 to i64*
  %396 = load i64, i64* %395, align 8
  store atomic i64 %396, i64* %393 monotonic, align 8
  store atomic i64 %394, i64* %395 monotonic, align 8
  %397 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %403, label %399

399:                                              ; preds = %388
  %400 = bitcast %"class.blink::Member.29"* %391 to i8**
  %401 = load i8*, i8** %400, align 8
  %402 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %401) #8
  br label %403

403:                                              ; preds = %399, %388
  %404 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %410, label %406

406:                                              ; preds = %403
  %407 = bitcast %"class.blink::Member.29"* %392 to i8**
  %408 = load i8*, i8** %407, align 8
  %409 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %408) #8
  br label %410

410:                                              ; preds = %403, %406
  %411 = add i32 %376, 1
  br label %413

412:                                              ; preds = %374
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #8
  br label %413

413:                                              ; preds = %412, %410, %379
  %414 = phi i32 [ %411, %410 ], [ %376, %379 ], [ %376, %412 ]
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %423

416:                                              ; preds = %413
  %417 = call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEbT0_SF_T_(%"struct.std::__1::pair.771"* %88, %"struct.std::__1::pair.771"* %377, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  %418 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %377, i64 1
  %419 = call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEbT0_SF_T_(%"struct.std::__1::pair.771"* %418, %"struct.std::__1::pair.771"* %74, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br i1 %419, label %420, label %422

420:                                              ; preds = %416
  br i1 %417, label %434, label %421

421:                                              ; preds = %420, %432
  br label %73

422:                                              ; preds = %416
  br i1 %417, label %430, label %423

423:                                              ; preds = %422, %413
  %424 = ptrtoint %"struct.std::__1::pair.771"* %377 to i64
  %425 = sub i64 %424, %314
  %426 = sub i64 %84, %424
  %427 = icmp slt i64 %425, %426
  br i1 %427, label %428, label %432

428:                                              ; preds = %423
  call void @_ZNSt3__16__sortIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEvT0_SF_T_(%"struct.std::__1::pair.771"* %88, %"struct.std::__1::pair.771"* %377, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  %429 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %377, i64 1
  br label %430

430:                                              ; preds = %428, %422
  %431 = phi %"struct.std::__1::pair.771"* [ %418, %422 ], [ %429, %428 ]
  br label %85

432:                                              ; preds = %423
  %433 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %377, i64 1
  call void @_ZNSt3__16__sortIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEvT0_SF_T_(%"struct.std::__1::pair.771"* %433, %"struct.std::__1::pair.771"* %74, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %421

434:                                              ; preds = %420, %219, %87, %87, %183, %216, %127, %124, %92, %131, %135, %140, %148
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_T_(%"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.std::__1::pair.773"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.std::__1::pair.773"*
  %9 = alloca <2 x i64>, align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"struct.std::__1::pair.773"*
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"struct.std::__1::pair.773"*
  %15 = alloca <2 x i64>, align 16
  %16 = alloca <2 x i64>, align 16
  %17 = alloca <2 x i64>, align 16
  %18 = bitcast <2 x i64>* %17 to %"struct.std::__1::pair.773"*
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %"struct.std::__1::pair.773"*
  %21 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %3, align 8
  %22 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #8
  %23 = bitcast %"struct.std::__1::pair.771"* %1 to i64*
  %24 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  store <2 x i64> %25, <2 x i64>* %5, align 16
  %26 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = bitcast %"struct.std::__1::pair.771"* %0 to i64*
  %28 = bitcast %"struct.std::__1::pair.771"* %0 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8
  store <2 x i64> %29, <2 x i64>* %7, align 16
  %30 = call zeroext i1 %21(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %6, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8
  %31 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %3, align 8
  br i1 %30, label %94, label %32

32:                                               ; preds = %4
  %33 = bitcast <2 x i64>* %10 to %"struct.std::__1::pair.773"*
  %34 = bitcast <2 x i64>* %9 to %"struct.std::__1::pair.773"*
  %35 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8
  %36 = bitcast %"struct.std::__1::pair.771"* %2 to i64*
  %37 = bitcast %"struct.std::__1::pair.771"* %2 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  store <2 x i64> %38, <2 x i64>* %9, align 16
  %39 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #8
  %40 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  store <2 x i64> %41, <2 x i64>* %10, align 16
  %42 = call zeroext i1 %31(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %34, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %33) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  br i1 %42, label %43, label %177

43:                                               ; preds = %32
  %44 = load i64, i64* %23, align 8
  %45 = load i64, i64* %36, align 8
  store i64 %45, i64* %23, align 8
  store i64 %44, i64* %36, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %2, i64 0, i32 1
  %48 = bitcast %"class.blink::Member.29"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.29"* %47 to i64*
  %51 = load i64, i64* %50, align 8
  store atomic i64 %51, i64* %48 monotonic, align 8
  store atomic i64 %49, i64* %50 monotonic, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %43
  %55 = bitcast %"class.blink::Member.29"* %46 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %56) #8
  br label %58

58:                                               ; preds = %54, %43
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.blink::Member.29"* %47 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %63) #8
  br label %65

65:                                               ; preds = %58, %61
  %66 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %3, align 8
  %67 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #8
  %68 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8
  store <2 x i64> %69, <2 x i64>* %11, align 16
  %70 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #8
  %71 = bitcast %"struct.std::__1::pair.771"* %0 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8
  store <2 x i64> %72, <2 x i64>* %13, align 16
  %73 = call zeroext i1 %66(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %12, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #8
  br i1 %73, label %74, label %177

74:                                               ; preds = %65
  %75 = load i64, i64* %27, align 8
  %76 = load i64, i64* %23, align 8
  store i64 %76, i64* %27, align 8
  store i64 %75, i64* %23, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 0, i32 1
  %78 = bitcast %"class.blink::Member.29"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %48, align 8
  store atomic i64 %80, i64* %78 monotonic, align 8
  store atomic i64 %79, i64* %48 monotonic, align 8
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %74
  %84 = bitcast %"class.blink::Member.29"* %77 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #8
  br label %87

87:                                               ; preds = %83, %74
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %177, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.blink::Member.29"* %46 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %92) #8
  br label %177

94:                                               ; preds = %4
  %95 = bitcast <2 x i64>* %16 to %"struct.std::__1::pair.773"*
  %96 = bitcast <2 x i64>* %15 to %"struct.std::__1::pair.773"*
  %97 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #8
  %98 = bitcast %"struct.std::__1::pair.771"* %2 to i64*
  %99 = bitcast %"struct.std::__1::pair.771"* %2 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8
  store <2 x i64> %100, <2 x i64>* %15, align 16
  %101 = bitcast <2 x i64>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #8
  %102 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8
  store <2 x i64> %103, <2 x i64>* %16, align 16
  %104 = call zeroext i1 %31(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %96, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %95) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #8
  %105 = load i64, i64* %27, align 8
  br i1 %104, label %106, label %127

106:                                              ; preds = %94
  %107 = load i64, i64* %98, align 8
  store i64 %107, i64* %27, align 8
  store i64 %105, i64* %98, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 0, i32 1
  %109 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %2, i64 0, i32 1
  %110 = bitcast %"class.blink::Member.29"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.blink::Member.29"* %109 to i64*
  %113 = load i64, i64* %112, align 8
  store atomic i64 %113, i64* %110 monotonic, align 8
  store atomic i64 %111, i64* %112 monotonic, align 8
  %114 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %106
  %117 = bitcast %"class.blink::Member.29"* %108 to i8**
  %118 = load i8*, i8** %117, align 8
  %119 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %118) #8
  br label %120

120:                                              ; preds = %116, %106
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %177, label %123

123:                                              ; preds = %120
  %124 = bitcast %"class.blink::Member.29"* %109 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %125) #8
  br label %177

127:                                              ; preds = %94
  %128 = load i64, i64* %23, align 8
  store i64 %128, i64* %27, align 8
  store i64 %105, i64* %23, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 0, i32 1
  %130 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 0, i32 1
  %131 = bitcast %"class.blink::Member.29"* %129 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.blink::Member.29"* %130 to i64*
  %134 = load i64, i64* %133, align 8
  store atomic i64 %134, i64* %131 monotonic, align 8
  store atomic i64 %132, i64* %133 monotonic, align 8
  %135 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %127
  %138 = bitcast %"class.blink::Member.29"* %129 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %139) #8
  br label %141

141:                                              ; preds = %137, %127
  %142 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.blink::Member.29"* %130 to i8**
  %146 = load i8*, i8** %145, align 8
  %147 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %146) #8
  br label %148

148:                                              ; preds = %141, %144
  %149 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %3, align 8
  %150 = bitcast <2 x i64>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #8
  %151 = bitcast %"struct.std::__1::pair.771"* %2 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8
  store <2 x i64> %152, <2 x i64>* %17, align 16
  %153 = bitcast <2 x i64>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #8
  %154 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8
  store <2 x i64> %155, <2 x i64>* %19, align 16
  %156 = call zeroext i1 %149(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %18, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %20) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #8
  br i1 %156, label %157, label %177

157:                                              ; preds = %148
  %158 = load i64, i64* %23, align 8
  %159 = load i64, i64* %98, align 8
  store i64 %159, i64* %23, align 8
  store i64 %158, i64* %98, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %2, i64 0, i32 1
  %161 = load i64, i64* %133, align 8
  %162 = bitcast %"class.blink::Member.29"* %160 to i64*
  %163 = load i64, i64* %162, align 8
  store atomic i64 %163, i64* %133 monotonic, align 8
  store atomic i64 %161, i64* %162 monotonic, align 8
  %164 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %157
  %167 = bitcast %"class.blink::Member.29"* %130 to i8**
  %168 = load i8*, i8** %167, align 8
  %169 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %168) #8
  br label %170

170:                                              ; preds = %166, %157
  %171 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %170
  %174 = bitcast %"class.blink::Member.29"* %160 to i8**
  %175 = load i8*, i8** %174, align 8
  %176 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %175) #8
  br label %177

177:                                              ; preds = %173, %170, %123, %120, %90, %87, %148, %65, %32
  %178 = phi i32 [ 0, %32 ], [ 1, %65 ], [ 1, %148 ], [ 2, %87 ], [ 2, %90 ], [ 1, %120 ], [ 1, %123 ], [ 2, %170 ], [ 2, %173 ]
  ret i32 %178
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_T_(%"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.std::__1::pair.773"*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"struct.std::__1::pair.773"*
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"struct.std::__1::pair.773"*
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"struct.std::__1::pair.773"*
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"struct.std::__1::pair.773"*
  %16 = alloca <2 x i64>, align 16
  %17 = bitcast <2 x i64>* %16 to %"struct.std::__1::pair.773"*
  %18 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_T_(%"struct.std::__1::pair.771"* %0, %"struct.std::__1::pair.771"* %1, %"struct.std::__1::pair.771"* %2, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %4)
  %19 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %4, align 8
  %20 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = bitcast %"struct.std::__1::pair.771"* %3 to i64*
  %22 = bitcast %"struct.std::__1::pair.771"* %3 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8
  store <2 x i64> %23, <2 x i64>* %6, align 16
  %24 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8
  %25 = bitcast %"struct.std::__1::pair.771"* %2 to i64*
  %26 = bitcast %"struct.std::__1::pair.771"* %2 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  store <2 x i64> %27, <2 x i64>* %8, align 16
  %28 = call zeroext i1 %19(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %7, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  br i1 %28, label %29, label %115

29:                                               ; preds = %5
  %30 = load i64, i64* %25, align 8
  %31 = load i64, i64* %21, align 8
  store i64 %31, i64* %25, align 8
  store i64 %30, i64* %21, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %2, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %3, i64 0, i32 1
  %34 = bitcast %"class.blink::Member.29"* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::Member.29"* %33 to i64*
  %37 = load i64, i64* %36, align 8
  store atomic i64 %37, i64* %34 monotonic, align 8
  store atomic i64 %35, i64* %36 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::Member.29"* %32 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #8
  br label %44

44:                                               ; preds = %40, %29
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::Member.29"* %33 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #8
  br label %51

51:                                               ; preds = %44, %47
  %52 = add i32 %18, 1
  %53 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %4, align 8
  %54 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #8
  %55 = bitcast %"struct.std::__1::pair.771"* %2 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8
  store <2 x i64> %56, <2 x i64>* %10, align 16
  %57 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8
  %58 = bitcast %"struct.std::__1::pair.771"* %1 to i64*
  %59 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  store <2 x i64> %60, <2 x i64>* %12, align 16
  %61 = call zeroext i1 %53(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %11, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #8
  br i1 %61, label %62, label %115

62:                                               ; preds = %51
  %63 = load i64, i64* %58, align 8
  %64 = load i64, i64* %25, align 8
  store i64 %64, i64* %58, align 8
  store i64 %63, i64* %25, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 0, i32 1
  %66 = bitcast %"class.blink::Member.29"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = load i64, i64* %34, align 8
  store atomic i64 %68, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %34 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %62
  %72 = bitcast %"class.blink::Member.29"* %65 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #8
  br label %75

75:                                               ; preds = %71, %62
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.blink::Member.29"* %32 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #8
  br label %82

82:                                               ; preds = %75, %78
  %83 = add i32 %18, 2
  %84 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %4, align 8
  %85 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #8
  %86 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8
  store <2 x i64> %87, <2 x i64>* %14, align 16
  %88 = bitcast <2 x i64>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #8
  %89 = bitcast %"struct.std::__1::pair.771"* %0 to i64*
  %90 = bitcast %"struct.std::__1::pair.771"* %0 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8
  store <2 x i64> %91, <2 x i64>* %16, align 16
  %92 = call zeroext i1 %84(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %15, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #8
  br i1 %92, label %93, label %115

93:                                               ; preds = %82
  %94 = load i64, i64* %89, align 8
  %95 = load i64, i64* %58, align 8
  store i64 %95, i64* %89, align 8
  store i64 %94, i64* %58, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 0, i32 1
  %97 = bitcast %"class.blink::Member.29"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = load i64, i64* %66, align 8
  store atomic i64 %99, i64* %97 monotonic, align 8
  store atomic i64 %98, i64* %66 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %93
  %103 = bitcast %"class.blink::Member.29"* %96 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %104) #8
  br label %106

106:                                              ; preds = %102, %93
  %107 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %113, label %109

109:                                              ; preds = %106
  %110 = bitcast %"class.blink::Member.29"* %65 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %111) #8
  br label %113

113:                                              ; preds = %106, %109
  %114 = add i32 %18, 3
  br label %115

115:                                              ; preds = %51, %113, %82, %5
  %116 = phi i32 [ %114, %113 ], [ %83, %82 ], [ %52, %51 ], [ %18, %5 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_SF_T_(%"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.std::__1::pair.773"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.std::__1::pair.773"*
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"struct.std::__1::pair.773"*
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"struct.std::__1::pair.773"*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %"struct.std::__1::pair.773"*
  %17 = alloca <2 x i64>, align 16
  %18 = bitcast <2 x i64>* %17 to %"struct.std::__1::pair.773"*
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %"struct.std::__1::pair.773"*
  %21 = alloca <2 x i64>, align 16
  %22 = bitcast <2 x i64>* %21 to %"struct.std::__1::pair.773"*
  %23 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_T_(%"struct.std::__1::pair.771"* %0, %"struct.std::__1::pair.771"* %1, %"struct.std::__1::pair.771"* %2, %"struct.std::__1::pair.771"* %3, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %5)
  %24 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %5, align 8
  %25 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  %26 = bitcast %"struct.std::__1::pair.771"* %4 to i64*
  %27 = bitcast %"struct.std::__1::pair.771"* %4 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  store <2 x i64> %28, <2 x i64>* %7, align 16
  %29 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8
  %30 = bitcast %"struct.std::__1::pair.771"* %3 to i64*
  %31 = bitcast %"struct.std::__1::pair.771"* %3 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  store <2 x i64> %32, <2 x i64>* %9, align 16
  %33 = call zeroext i1 %24(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %8, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  br i1 %33, label %34, label %151

34:                                               ; preds = %6
  %35 = load i64, i64* %30, align 8
  %36 = load i64, i64* %26, align 8
  store i64 %36, i64* %30, align 8
  store i64 %35, i64* %26, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %3, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %4, i64 0, i32 1
  %39 = bitcast %"class.blink::Member.29"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::Member.29"* %38 to i64*
  %42 = load i64, i64* %41, align 8
  store atomic i64 %42, i64* %39 monotonic, align 8
  store atomic i64 %40, i64* %41 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %34
  %46 = bitcast %"class.blink::Member.29"* %37 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #8
  br label %49

49:                                               ; preds = %45, %34
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::Member.29"* %38 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #8
  br label %56

56:                                               ; preds = %49, %52
  %57 = add i32 %23, 1
  %58 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %5, align 8
  %59 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #8
  %60 = bitcast %"struct.std::__1::pair.771"* %3 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8
  store <2 x i64> %61, <2 x i64>* %11, align 16
  %62 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #8
  %63 = bitcast %"struct.std::__1::pair.771"* %2 to i64*
  %64 = bitcast %"struct.std::__1::pair.771"* %2 to <2 x i64>*
  %65 = load <2 x i64>, <2 x i64>* %64, align 8
  store <2 x i64> %65, <2 x i64>* %13, align 16
  %66 = call zeroext i1 %58(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %12, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #8
  br i1 %66, label %67, label %151

67:                                               ; preds = %56
  %68 = load i64, i64* %63, align 8
  %69 = load i64, i64* %30, align 8
  store i64 %69, i64* %63, align 8
  store i64 %68, i64* %30, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %2, i64 0, i32 1
  %71 = bitcast %"class.blink::Member.29"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %39, align 8
  store atomic i64 %73, i64* %71 monotonic, align 8
  store atomic i64 %72, i64* %39 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %67
  %77 = bitcast %"class.blink::Member.29"* %70 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #8
  br label %80

80:                                               ; preds = %76, %67
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::Member.29"* %37 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #8
  br label %87

87:                                               ; preds = %80, %83
  %88 = add i32 %23, 2
  %89 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %5, align 8
  %90 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #8
  %91 = bitcast %"struct.std::__1::pair.771"* %2 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8
  store <2 x i64> %92, <2 x i64>* %15, align 16
  %93 = bitcast <2 x i64>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #8
  %94 = bitcast %"struct.std::__1::pair.771"* %1 to i64*
  %95 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  store <2 x i64> %96, <2 x i64>* %17, align 16
  %97 = call zeroext i1 %89(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %16, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %18) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #8
  br i1 %97, label %98, label %151

98:                                               ; preds = %87
  %99 = load i64, i64* %94, align 8
  %100 = load i64, i64* %63, align 8
  store i64 %100, i64* %94, align 8
  store i64 %99, i64* %63, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 0, i32 1
  %102 = bitcast %"class.blink::Member.29"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %71, align 8
  store atomic i64 %104, i64* %102 monotonic, align 8
  store atomic i64 %103, i64* %71 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %98
  %108 = bitcast %"class.blink::Member.29"* %101 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #8
  br label %111

111:                                              ; preds = %107, %98
  %112 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %111
  %115 = bitcast %"class.blink::Member.29"* %70 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %116) #8
  br label %118

118:                                              ; preds = %111, %114
  %119 = add i32 %23, 3
  %120 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %5, align 8
  %121 = bitcast <2 x i64>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #8
  %122 = bitcast %"struct.std::__1::pair.771"* %1 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8
  store <2 x i64> %123, <2 x i64>* %19, align 16
  %124 = bitcast <2 x i64>* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #8
  %125 = bitcast %"struct.std::__1::pair.771"* %0 to i64*
  %126 = bitcast %"struct.std::__1::pair.771"* %0 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8
  store <2 x i64> %127, <2 x i64>* %21, align 16
  %128 = call zeroext i1 %120(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %20, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %22) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #8
  br i1 %128, label %129, label %151

129:                                              ; preds = %118
  %130 = load i64, i64* %125, align 8
  %131 = load i64, i64* %94, align 8
  store i64 %131, i64* %125, align 8
  store i64 %130, i64* %94, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 0, i32 1
  %133 = bitcast %"class.blink::Member.29"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = load i64, i64* %102, align 8
  store atomic i64 %135, i64* %133 monotonic, align 8
  store atomic i64 %134, i64* %102 monotonic, align 8
  %136 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %129
  %139 = bitcast %"class.blink::Member.29"* %132 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %140) #8
  br label %142

142:                                              ; preds = %138, %129
  %143 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.blink::Member.29"* %101 to i8**
  %147 = load i8*, i8** %146, align 8
  %148 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %147) #8
  br label %149

149:                                              ; preds = %142, %145
  %150 = add i32 %23, 4
  br label %151

151:                                              ; preds = %56, %118, %149, %87, %6
  %152 = phi i32 [ %150, %149 ], [ %119, %118 ], [ %88, %87 ], [ %57, %56 ], [ %23, %6 ]
  ret i32 %152
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEvT0_SF_T_(%"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.std::__1::pair.773"*
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.std::__1::pair.773"*
  %8 = alloca %"struct.std::__1::pair.773", align 8
  %9 = alloca %"struct.std::__1::pair.773", align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 2
  %11 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 1
  %12 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_T_(%"struct.std::__1::pair.771"* %0, %"struct.std::__1::pair.771"* %11, %"struct.std::__1::pair.771"* %10, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  %13 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 3
  %14 = icmp eq %"struct.std::__1::pair.771"* %13, %1
  br i1 %14, label %26, label %15

15:                                               ; preds = %3
  %16 = bitcast <2 x i64>* %4 to i8*
  %17 = bitcast <2 x i64>* %6 to i8*
  %18 = bitcast %"struct.std::__1::pair.773"* %8 to i8*
  %19 = bitcast %"struct.std::__1::pair.773"* %9 to i8*
  %20 = bitcast %"struct.std::__1::pair.773"* %8 to i64*
  %21 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %8, i64 0, i32 1
  %22 = bitcast %"class.blink::TextTrackCue"** %21 to i64*
  %23 = bitcast %"struct.std::__1::pair.773"* %9 to i64*
  %24 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %9, i64 0, i32 1
  %25 = bitcast %"class.blink::TextTrackCue"** %24 to i64*
  br label %27

26:                                               ; preds = %79, %3
  ret void

27:                                               ; preds = %15, %79
  %28 = phi %"struct.std::__1::pair.771"* [ %13, %15 ], [ %80, %79 ]
  %29 = phi %"struct.std::__1::pair.771"* [ %10, %15 ], [ %28, %79 ]
  %30 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %31 = bitcast %"struct.std::__1::pair.771"* %28 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  store <2 x i64> %32, <2 x i64>* %4, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8
  %33 = bitcast %"struct.std::__1::pair.771"* %29 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 8
  store <2 x i64> %34, <2 x i64>* %6, align 16
  %35 = call zeroext i1 %30(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %5, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  br i1 %35, label %36, label %79

36:                                               ; preds = %27
  %37 = bitcast %"struct.std::__1::pair.771"* %28 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %28, i64 0, i32 1
  %40 = bitcast %"class.blink::Member.29"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %60, %36
  %43 = phi %"struct.std::__1::pair.771"* [ %28, %36 ], [ %44, %60 ]
  %44 = phi %"struct.std::__1::pair.771"* [ %29, %36 ], [ %62, %60 ]
  %45 = bitcast %"struct.std::__1::pair.771"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.std::__1::pair.771"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %44, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %43, i64 0, i32 1
  %50 = bitcast %"class.blink::Member.29"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.blink::Member.29"* %49 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %42
  %56 = inttoptr i64 %51 to i8*
  %57 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %56) #8
  br label %58

58:                                               ; preds = %42, %55
  %59 = icmp eq %"struct.std::__1::pair.771"* %44, %0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  store i64 %38, i64* %20, align 8
  store i64 %41, i64* %22, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %44, i64 -1
  %63 = bitcast %"struct.std::__1::pair.771"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %23, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %44, i64 -1, i32 1, i32 0, i32 0
  %66 = bitcast %"class.blink::TextTrackCue"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %25, align 8
  %68 = call zeroext i1 %61(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %8, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  br i1 %68, label %42, label %70

69:                                               ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  br label %70

70:                                               ; preds = %60, %69
  %71 = phi %"struct.std::__1::pair.771"* [ %0, %69 ], [ %44, %60 ]
  %72 = bitcast %"class.blink::Member.29"* %48 to i64*
  %73 = bitcast %"struct.std::__1::pair.771"* %71 to i64*
  store i64 %38, i64* %73, align 8
  store atomic i64 %41, i64* %72 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %70
  %77 = inttoptr i64 %41 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #8
  br label %79

79:                                               ; preds = %76, %70, %27
  %80 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %28, i64 1
  %81 = icmp eq %"struct.std::__1::pair.771"* %80, %1
  br i1 %81, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEbT0_SF_T_(%"struct.std::__1::pair.771"*, %"struct.std::__1::pair.771"*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.std::__1::pair.773"*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"struct.std::__1::pair.773"*
  %10 = alloca %"struct.std::__1::pair.773", align 8
  %11 = alloca %"struct.std::__1::pair.773", align 8
  %12 = ptrtoint %"struct.std::__1::pair.771"* %1 to i64
  %13 = ptrtoint %"struct.std::__1::pair.771"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 4
  switch i64 %15, label %67 [
    i64 0, label %147
    i64 1, label %147
    i64 2, label %16
    i64 3, label %52
    i64 4, label %56
    i64 5, label %61
  ]

16:                                               ; preds = %3
  %17 = bitcast <2 x i64>* %5 to %"struct.std::__1::pair.773"*
  %18 = bitcast <2 x i64>* %4 to %"struct.std::__1::pair.773"*
  %19 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  %20 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 -1
  %22 = bitcast %"struct.std::__1::pair.771"* %21 to i64*
  %23 = bitcast %"struct.std::__1::pair.771"* %21 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  store <2 x i64> %24, <2 x i64>* %4, align 16
  %25 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  %26 = bitcast %"struct.std::__1::pair.771"* %0 to i64*
  %27 = bitcast %"struct.std::__1::pair.771"* %0 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  store <2 x i64> %28, <2 x i64>* %5, align 16
  %29 = call zeroext i1 %19(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %18, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  br i1 %29, label %30, label %147

30:                                               ; preds = %16
  %31 = load i64, i64* %26, align 8
  %32 = load i64, i64* %22, align 8
  store i64 %32, i64* %26, align 8
  store i64 %31, i64* %22, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 -1, i32 1
  %35 = bitcast %"class.blink::Member.29"* %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::Member.29"* %34 to i64*
  %38 = load i64, i64* %37, align 8
  store atomic i64 %38, i64* %35 monotonic, align 8
  store atomic i64 %36, i64* %37 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %30
  %42 = bitcast %"class.blink::Member.29"* %33 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #8
  br label %45

45:                                               ; preds = %41, %30
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %147, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.blink::Member.29"* %34 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #8
  br label %147

52:                                               ; preds = %3
  %53 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 1
  %54 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 -1
  %55 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_T_(%"struct.std::__1::pair.771"* %0, %"struct.std::__1::pair.771"* %53, %"struct.std::__1::pair.771"* %54, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %147

56:                                               ; preds = %3
  %57 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 2
  %59 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 -1
  %60 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_T_(%"struct.std::__1::pair.771"* %0, %"struct.std::__1::pair.771"* %57, %"struct.std::__1::pair.771"* %58, %"struct.std::__1::pair.771"* %59, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %147

61:                                               ; preds = %3
  %62 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 1
  %63 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 2
  %64 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 3
  %65 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort5IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_SF_SF_T_(%"struct.std::__1::pair.771"* %0, %"struct.std::__1::pair.771"* %62, %"struct.std::__1::pair.771"* %63, %"struct.std::__1::pair.771"* %64, %"struct.std::__1::pair.771"* %65, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  br label %147

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 2
  %69 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 1
  %70 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIdPN5blink12TextTrackCueEEES7_EPNS1_IdNS2_6MemberIS3_EEEEEEjT0_SF_SF_T_(%"struct.std::__1::pair.771"* %0, %"struct.std::__1::pair.771"* %69, %"struct.std::__1::pair.771"* %68, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** dereferenceable(8) %2)
  %71 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %0, i64 3
  %72 = icmp eq %"struct.std::__1::pair.771"* %71, %1
  br i1 %72, label %147, label %73

73:                                               ; preds = %67
  %74 = bitcast <2 x i64>* %6 to i8*
  %75 = bitcast <2 x i64>* %8 to i8*
  %76 = bitcast %"struct.std::__1::pair.773"* %10 to i8*
  %77 = bitcast %"struct.std::__1::pair.773"* %11 to i8*
  %78 = bitcast %"struct.std::__1::pair.773"* %10 to i64*
  %79 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %10, i64 0, i32 1
  %80 = bitcast %"class.blink::TextTrackCue"** %79 to i64*
  %81 = bitcast %"struct.std::__1::pair.773"* %11 to i64*
  %82 = getelementptr inbounds %"struct.std::__1::pair.773", %"struct.std::__1::pair.773"* %11, i64 0, i32 1
  %83 = bitcast %"class.blink::TextTrackCue"** %82 to i64*
  br label %84

84:                                               ; preds = %73, %140
  %85 = phi %"struct.std::__1::pair.771"* [ %71, %73 ], [ %142, %140 ]
  %86 = phi i32 [ 0, %73 ], [ %141, %140 ]
  %87 = phi %"struct.std::__1::pair.771"* [ %68, %73 ], [ %85, %140 ]
  %88 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #8
  %89 = bitcast %"struct.std::__1::pair.771"* %85 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8
  store <2 x i64> %90, <2 x i64>* %6, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #8
  %91 = bitcast %"struct.std::__1::pair.771"* %87 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8
  store <2 x i64> %92, <2 x i64>* %8, align 16
  %93 = call zeroext i1 %88(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %7, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #8
  br i1 %93, label %94, label %140

94:                                               ; preds = %84
  %95 = bitcast %"struct.std::__1::pair.771"* %85 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %85, i64 0, i32 1
  %98 = bitcast %"class.blink::Member.29"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  br label %100

100:                                              ; preds = %118, %94
  %101 = phi %"struct.std::__1::pair.771"* [ %85, %94 ], [ %102, %118 ]
  %102 = phi %"struct.std::__1::pair.771"* [ %87, %94 ], [ %120, %118 ]
  %103 = bitcast %"struct.std::__1::pair.771"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.771"* %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %102, i64 0, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %101, i64 0, i32 1
  %108 = bitcast %"class.blink::Member.29"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.blink::Member.29"* %107 to i64*
  store atomic i64 %109, i64* %110 monotonic, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %100
  %114 = inttoptr i64 %109 to i8*
  %115 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #8
  br label %116

116:                                              ; preds = %100, %113
  %117 = icmp eq %"struct.std::__1::pair.771"* %102, %0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #8
  br i1 %117, label %127, label %118

118:                                              ; preds = %116
  %119 = load i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)*, i1 (%"struct.std::__1::pair.773"*, %"struct.std::__1::pair.773"*)** %2, align 8
  store i64 %96, i64* %78, align 8
  store i64 %99, i64* %80, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %102, i64 -1
  %121 = bitcast %"struct.std::__1::pair.771"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %81, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %102, i64 -1, i32 1, i32 0, i32 0
  %124 = bitcast %"class.blink::TextTrackCue"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %83, align 8
  %126 = call zeroext i1 %119(%"struct.std::__1::pair.773"* nonnull dereferenceable(16) %10, %"struct.std::__1::pair.773"* nonnull dereferenceable(16) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  br i1 %126, label %100, label %128

127:                                              ; preds = %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  br label %128

128:                                              ; preds = %118, %127
  %129 = phi %"struct.std::__1::pair.771"* [ %0, %127 ], [ %102, %118 ]
  %130 = bitcast %"class.blink::Member.29"* %106 to i64*
  %131 = bitcast %"struct.std::__1::pair.771"* %129 to i64*
  store i64 %96, i64* %131, align 8
  store atomic i64 %99, i64* %130 monotonic, align 8
  %132 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %128
  %135 = inttoptr i64 %99 to i8*
  %136 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %135) #8
  br label %137

137:                                              ; preds = %128, %134
  %138 = add i32 %86, 1
  %139 = icmp eq i32 %138, 8
  br i1 %139, label %144, label %140

140:                                              ; preds = %137, %84
  %141 = phi i32 [ %138, %137 ], [ %86, %84 ]
  %142 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %85, i64 1
  %143 = icmp eq %"struct.std::__1::pair.771"* %142, %1
  br i1 %143, label %147, label %84

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"struct.std::__1::pair.771", %"struct.std::__1::pair.771"* %85, i64 1
  %146 = icmp eq %"struct.std::__1::pair.771"* %145, %1
  br label %147

147:                                              ; preds = %140, %144, %67, %48, %45, %16, %3, %3, %61, %56, %52
  %148 = phi i1 [ true, %61 ], [ true, %56 ], [ true, %52 ], [ true, %3 ], [ true, %3 ], [ true, %16 ], [ true, %45 ], [ true, %48 ], [ true, %67 ], [ %146, %144 ], [ true, %140 ]
  ret i1 %148
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.673"*, %"class.blink::TextTrack"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.673"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 %18
  %20 = bitcast %"class.blink::TextTrack"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.16"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.673"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %8, align 8
  %10 = icmp eq %"class.blink::Member.16"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_9TextTrackEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1120"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1120"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.673"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1120", %"class.blink::HeapVectorBacking.1120"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %8, align 8
  %26 = icmp eq %"class.blink::Member.16"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.16"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !25

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.673"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_9TextTrackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.673"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.673"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.673"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_9TextTrackEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1120"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1120"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1120"* %17, null
  %23 = icmp ne %"class.blink::Member.16"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.16"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !15

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.673"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1120", %"class.blink::HeapVectorBacking.1120"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector.673"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector.673"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1120", %"class.blink::HeapVectorBacking.1120"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_9TextTrackEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1120"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.22, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1120"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1120"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !25

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_9TextTrackEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.16"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !25

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.16"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9TextTrackEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_9TextTrackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9TextTrackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TextTrack"*
  %4 = bitcast i8* %1 to void (%"class.blink::TextTrack"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::TextTrack"*, %"class.blink::Visitor"*)**, void (%"class.blink::TextTrack"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::TextTrack"*, %"class.blink::Visitor"*)*, void (%"class.blink::TextTrack"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::TextTrack"*, %"class.blink::Visitor"*)*, void (%"class.blink::TextTrack"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::TextTrack"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member.16"*, %"class.blink::Member.16"*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %332, %3
  %5 = phi %"class.blink::Member.16"* [ %1, %3 ], [ %295, %332 ]
  %6 = phi %"class.blink::Member.16"* [ %0, %3 ], [ %16, %332 ]
  %7 = ptrtoint %"class.blink::Member.16"* %5 to i64
  %8 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %5, i64 -1
  %9 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Member.16"* %8 to i64*
  %11 = bitcast %"class.blink::Member.16"* %8 to i8**
  %12 = ptrtoint %"class.blink::Member.16"* %5 to i64
  br label %13

13:                                               ; preds = %341, %4
  %14 = phi %"class.blink::Member.16"* [ %6, %4 ], [ %342, %341 ]
  br label %15

15:                                               ; preds = %193, %13
  %16 = phi %"class.blink::Member.16"* [ %14, %13 ], [ %178, %193 ]
  %17 = ptrtoint %"class.blink::Member.16"* %16 to i64
  %18 = sub i64 %7, %17
  %19 = ashr exact i64 %18, 3
  switch i64 %19, label %61 [
    i64 0, label %345
    i64 1, label %345
    i64 2, label %20
    i64 3, label %46
    i64 4, label %50
    i64 5, label %55
  ]

20:                                               ; preds = %15
  %21 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %22 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %5, i64 -1
  %23 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 0, i32 0, i32 0
  %26 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %25, align 8
  %27 = tail call zeroext i1 %21(%"class.blink::TextTrack"* %24, %"class.blink::TextTrack"* %26) #8
  br i1 %27, label %28, label %345

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::Member.16"* %16 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::Member.16"* %22 to i64*
  %32 = load i64, i64* %31, align 8
  store atomic i64 %32, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::Member.16"* %16 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #8
  br label %39

39:                                               ; preds = %35, %28
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %345, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::Member.16"* %22 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #8
  br label %345

46:                                               ; preds = %15
  %47 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 1
  %48 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %5, i64 -1
  %49 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.16"* %16, %"class.blink::Member.16"* %47, %"class.blink::Member.16"* %48, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %345

50:                                               ; preds = %15
  %51 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 1
  %52 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 2
  %53 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %5, i64 -1
  %54 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member.16"* %16, %"class.blink::Member.16"* %51, %"class.blink::Member.16"* %52, %"class.blink::Member.16"* %53, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %345

55:                                               ; preds = %15
  %56 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 1
  %57 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 2
  %58 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 3
  %59 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %5, i64 -1
  %60 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member.16"* %16, %"class.blink::Member.16"* %56, %"class.blink::Member.16"* %57, %"class.blink::Member.16"* %58, %"class.blink::Member.16"* %59, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %345

61:                                               ; preds = %15
  %62 = icmp slt i64 %18, 56
  br i1 %62, label %63, label %112

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 2
  %65 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 1
  %66 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.16"* %16, %"class.blink::Member.16"* %65, %"class.blink::Member.16"* %64, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2) #8
  %67 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 3
  %68 = icmp eq %"class.blink::Member.16"* %67, %5
  br i1 %68, label %345, label %69

69:                                               ; preds = %63, %109
  %70 = phi %"class.blink::Member.16"* [ %110, %109 ], [ %67, %63 ]
  %71 = phi %"class.blink::Member.16"* [ %70, %109 ], [ %64, %63 ]
  %72 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %73 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %70, i64 0, i32 0, i32 0
  %74 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %71, i64 0, i32 0, i32 0
  %76 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %75, align 8
  %77 = tail call zeroext i1 %72(%"class.blink::TextTrack"* %74, %"class.blink::TextTrack"* %76) #8
  br i1 %77, label %78, label %109

78:                                               ; preds = %69
  %79 = bitcast %"class.blink::Member.16"* %70 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = inttoptr i64 %80 to %"class.blink::TextTrack"*
  br label %82

82:                                               ; preds = %95, %78
  %83 = phi %"class.blink::Member.16"* [ %70, %78 ], [ %84, %95 ]
  %84 = phi %"class.blink::Member.16"* [ %71, %78 ], [ %97, %95 ]
  %85 = bitcast %"class.blink::Member.16"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.blink::Member.16"* %83 to i64*
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %82
  %91 = inttoptr i64 %86 to i8*
  %92 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #8
  br label %93

93:                                               ; preds = %90, %82
  %94 = icmp eq %"class.blink::Member.16"* %84, %16
  br i1 %94, label %101, label %95

95:                                               ; preds = %93
  %96 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %97 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %84, i64 -1
  %98 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %98, align 8
  %100 = tail call zeroext i1 %96(%"class.blink::TextTrack"* %81, %"class.blink::TextTrack"* %99) #8
  br i1 %100, label %82, label %101

101:                                              ; preds = %93, %95
  %102 = phi %"class.blink::Member.16"* [ %84, %95 ], [ %16, %93 ]
  %103 = bitcast %"class.blink::Member.16"* %102 to i64*
  store atomic i64 %80, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = inttoptr i64 %80 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #8
  br label %109

109:                                              ; preds = %106, %101, %69
  %110 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %70, i64 1
  %111 = icmp eq %"class.blink::Member.16"* %110, %5
  br i1 %111, label %345, label %69

112:                                              ; preds = %61
  %113 = icmp sgt i64 %18, 7992
  %114 = sdiv i64 %19, 2
  %115 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 %114
  br i1 %113, label %116, label %121

116:                                              ; preds = %112
  %117 = sdiv i64 %19, 4
  %118 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 %117
  %119 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %115, i64 %117
  %120 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member.16"* %16, %"class.blink::Member.16"* %118, %"class.blink::Member.16"* %115, %"class.blink::Member.16"* %119, %"class.blink::Member.16"* %8, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %123

121:                                              ; preds = %112
  %122 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.16"* %16, %"class.blink::Member.16"* %115, %"class.blink::Member.16"* %8, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi i32 [ %120, %116 ], [ %122, %121 ]
  %125 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %126 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 0, i32 0, i32 0
  %127 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %115, i64 0, i32 0, i32 0
  %129 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %128, align 8
  %130 = tail call zeroext i1 %125(%"class.blink::TextTrack"* %127, %"class.blink::TextTrack"* %129) #8
  br i1 %130, label %240, label %131

131:                                              ; preds = %123, %214
  %132 = phi %"class.blink::Member.16"* [ %133, %214 ], [ %8, %123 ]
  %133 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %132, i64 -1
  %134 = icmp eq %"class.blink::Member.16"* %16, %133
  br i1 %134, label %135, label %214

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 1
  %137 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %138 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %126, align 8
  %139 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %9, align 8
  %140 = tail call zeroext i1 %137(%"class.blink::TextTrack"* %138, %"class.blink::TextTrack"* %139) #8
  br i1 %140, label %171, label %141

141:                                              ; preds = %135
  %142 = icmp eq %"class.blink::Member.16"* %136, %8
  br i1 %142, label %345, label %143

143:                                              ; preds = %141, %168
  %144 = phi %"class.blink::Member.16"* [ %169, %168 ], [ %136, %141 ]
  %145 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %146 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %126, align 8
  %147 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %144, i64 0, i32 0, i32 0
  %148 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %147, align 8
  %149 = tail call zeroext i1 %145(%"class.blink::TextTrack"* %146, %"class.blink::TextTrack"* %148) #8
  br i1 %149, label %150, label %168

150:                                              ; preds = %143
  %151 = bitcast %"class.blink::Member.16"* %144 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = load i64, i64* %10, align 8
  store atomic i64 %153, i64* %151 monotonic, align 8
  store atomic i64 %152, i64* %10 monotonic, align 8
  %154 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %160, label %156

156:                                              ; preds = %150
  %157 = bitcast %"class.blink::Member.16"* %144 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %158) #8
  br label %160

160:                                              ; preds = %156, %150
  %161 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = load i8*, i8** %11, align 8
  %165 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %164) #8
  br label %166

166:                                              ; preds = %160, %163
  %167 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %144, i64 1
  br label %171

168:                                              ; preds = %143
  %169 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %144, i64 1
  %170 = icmp eq %"class.blink::Member.16"* %169, %8
  br i1 %170, label %345, label %143

171:                                              ; preds = %166, %135
  %172 = phi %"class.blink::Member.16"* [ %136, %135 ], [ %167, %166 ]
  %173 = icmp eq %"class.blink::Member.16"* %172, %8
  br i1 %173, label %345, label %174

174:                                              ; preds = %171, %209
  %175 = phi %"class.blink::Member.16"* [ %184, %209 ], [ %172, %171 ]
  %176 = phi %"class.blink::Member.16"* [ %189, %209 ], [ %8, %171 ]
  br label %177

177:                                              ; preds = %177, %174
  %178 = phi %"class.blink::Member.16"* [ %175, %174 ], [ %184, %177 ]
  %179 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %180 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %126, align 8
  %181 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %178, i64 0, i32 0, i32 0
  %182 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %181, align 8
  %183 = tail call zeroext i1 %179(%"class.blink::TextTrack"* %180, %"class.blink::TextTrack"* %182) #8
  %184 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %178, i64 1
  br i1 %183, label %185, label %177

185:                                              ; preds = %177, %185
  %186 = phi %"class.blink::Member.16"* [ %189, %185 ], [ %176, %177 ]
  %187 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %188 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %126, align 8
  %189 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %186, i64 -1
  %190 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %190, align 8
  %192 = tail call zeroext i1 %187(%"class.blink::TextTrack"* %188, %"class.blink::TextTrack"* %191) #8
  br i1 %192, label %185, label %193

193:                                              ; preds = %185
  %194 = icmp ult %"class.blink::Member.16"* %178, %189
  br i1 %194, label %195, label %15

195:                                              ; preds = %193
  %196 = bitcast %"class.blink::Member.16"* %178 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.blink::Member.16"* %189 to i64*
  %199 = load i64, i64* %198, align 8
  store atomic i64 %199, i64* %196 monotonic, align 8
  store atomic i64 %197, i64* %198 monotonic, align 8
  %200 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %206, label %202

202:                                              ; preds = %195
  %203 = bitcast %"class.blink::Member.16"* %178 to i8**
  %204 = load i8*, i8** %203, align 8
  %205 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %204) #8
  br label %206

206:                                              ; preds = %202, %195
  %207 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206, %210
  br label %174

210:                                              ; preds = %206
  %211 = bitcast %"class.blink::Member.16"* %189 to i8**
  %212 = load i8*, i8** %211, align 8
  %213 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %212) #8
  br label %209

214:                                              ; preds = %131
  %215 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %216 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %133, i64 0, i32 0, i32 0
  %217 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %216, align 8
  %218 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %128, align 8
  %219 = tail call zeroext i1 %215(%"class.blink::TextTrack"* %217, %"class.blink::TextTrack"* %218) #8
  br i1 %219, label %220, label %131

220:                                              ; preds = %214
  %221 = bitcast %"class.blink::Member.16"* %16 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.blink::Member.16"* %133 to i64*
  %224 = load i64, i64* %223, align 8
  store atomic i64 %224, i64* %221 monotonic, align 8
  store atomic i64 %222, i64* %223 monotonic, align 8
  %225 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %231, label %227

227:                                              ; preds = %220
  %228 = bitcast %"class.blink::Member.16"* %16 to i8**
  %229 = load i8*, i8** %228, align 8
  %230 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %229) #8
  br label %231

231:                                              ; preds = %227, %220
  %232 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %238, label %234

234:                                              ; preds = %231
  %235 = bitcast %"class.blink::Member.16"* %133 to i8**
  %236 = load i8*, i8** %235, align 8
  %237 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %236) #8
  br label %238

238:                                              ; preds = %231, %234
  %239 = add i32 %124, 1
  br label %240

240:                                              ; preds = %123, %238
  %241 = phi i32 [ %239, %238 ], [ %124, %123 ]
  %242 = phi %"class.blink::Member.16"* [ %133, %238 ], [ %8, %123 ]
  %243 = ptrtoint %"class.blink::Member.16"* %16 to i64
  %244 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %16, i64 1
  %245 = icmp ult %"class.blink::Member.16"* %244, %242
  br i1 %245, label %246, label %292

246:                                              ; preds = %240, %288
  %247 = phi %"class.blink::Member.16"* [ %291, %288 ], [ %115, %240 ]
  %248 = phi i32 [ %289, %288 ], [ %241, %240 ]
  %249 = phi %"class.blink::Member.16"* [ %259, %288 ], [ %244, %240 ]
  %250 = phi %"class.blink::Member.16"* [ %263, %288 ], [ %242, %240 ]
  %251 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %247, i64 0, i32 0, i32 0
  br label %252

252:                                              ; preds = %252, %246
  %253 = phi %"class.blink::Member.16"* [ %249, %246 ], [ %259, %252 ]
  %254 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %255 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %253, i64 0, i32 0, i32 0
  %256 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %255, align 8
  %257 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %251, align 8
  %258 = tail call zeroext i1 %254(%"class.blink::TextTrack"* %256, %"class.blink::TextTrack"* %257) #8
  %259 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %253, i64 1
  br i1 %258, label %252, label %260

260:                                              ; preds = %252, %260
  %261 = phi %"class.blink::Member.16"* [ %263, %260 ], [ %250, %252 ]
  %262 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %263 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %261, i64 -1
  %264 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %263, i64 0, i32 0, i32 0
  %265 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %264, align 8
  %266 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %251, align 8
  %267 = tail call zeroext i1 %262(%"class.blink::TextTrack"* %265, %"class.blink::TextTrack"* %266) #8
  br i1 %267, label %268, label %260

268:                                              ; preds = %260
  %269 = icmp ugt %"class.blink::Member.16"* %253, %263
  br i1 %269, label %292, label %270

270:                                              ; preds = %268
  %271 = bitcast %"class.blink::Member.16"* %253 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.blink::Member.16"* %263 to i64*
  %274 = load i64, i64* %273, align 8
  store atomic i64 %274, i64* %271 monotonic, align 8
  store atomic i64 %272, i64* %273 monotonic, align 8
  %275 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %281, label %277

277:                                              ; preds = %270
  %278 = bitcast %"class.blink::Member.16"* %253 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %279) #8
  br label %281

281:                                              ; preds = %277, %270
  %282 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %281
  %285 = bitcast %"class.blink::Member.16"* %263 to i8**
  %286 = load i8*, i8** %285, align 8
  %287 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %286) #8
  br label %288

288:                                              ; preds = %281, %284
  %289 = add i32 %248, 1
  %290 = icmp eq %"class.blink::Member.16"* %247, %253
  %291 = select i1 %290, %"class.blink::Member.16"* %263, %"class.blink::Member.16"* %247
  br label %246

292:                                              ; preds = %268, %240
  %293 = phi %"class.blink::Member.16"* [ %115, %240 ], [ %247, %268 ]
  %294 = phi i32 [ %241, %240 ], [ %248, %268 ]
  %295 = phi %"class.blink::Member.16"* [ %244, %240 ], [ %253, %268 ]
  %296 = icmp eq %"class.blink::Member.16"* %295, %293
  br i1 %296, label %324, label %297

297:                                              ; preds = %292
  %298 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %299 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %293, i64 0, i32 0, i32 0
  %300 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %295, i64 0, i32 0, i32 0
  %302 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %301, align 8
  %303 = tail call zeroext i1 %298(%"class.blink::TextTrack"* %300, %"class.blink::TextTrack"* %302) #8
  br i1 %303, label %304, label %324

304:                                              ; preds = %297
  %305 = bitcast %"class.blink::Member.16"* %295 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.blink::Member.16"* %293 to i64*
  %308 = load i64, i64* %307, align 8
  store atomic i64 %308, i64* %305 monotonic, align 8
  store atomic i64 %306, i64* %307 monotonic, align 8
  %309 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %315, label %311

311:                                              ; preds = %304
  %312 = bitcast %"class.blink::Member.16"* %295 to i8**
  %313 = load i8*, i8** %312, align 8
  %314 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %313) #8
  br label %315

315:                                              ; preds = %311, %304
  %316 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %322, label %318

318:                                              ; preds = %315
  %319 = bitcast %"class.blink::Member.16"* %293 to i8**
  %320 = load i8*, i8** %319, align 8
  %321 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %320) #8
  br label %322

322:                                              ; preds = %315, %318
  %323 = add i32 %294, 1
  br label %324

324:                                              ; preds = %292, %322, %297
  %325 = phi i32 [ %323, %322 ], [ %294, %297 ], [ %294, %292 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %334

327:                                              ; preds = %324
  %328 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member.16"* %16, %"class.blink::Member.16"* %295, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  %329 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %295, i64 1
  %330 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member.16"* %329, %"class.blink::Member.16"* %5, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br i1 %330, label %331, label %333

331:                                              ; preds = %327
  br i1 %328, label %345, label %332

332:                                              ; preds = %331, %343
  br label %4

333:                                              ; preds = %327
  br i1 %328, label %341, label %334

334:                                              ; preds = %333, %324
  %335 = ptrtoint %"class.blink::Member.16"* %295 to i64
  %336 = sub i64 %335, %243
  %337 = sub i64 %12, %335
  %338 = icmp slt i64 %336, %337
  br i1 %338, label %339, label %343

339:                                              ; preds = %334
  tail call void @_ZNSt3__16__sortIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member.16"* %16, %"class.blink::Member.16"* %295, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  %340 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %295, i64 1
  br label %341

341:                                              ; preds = %339, %333
  %342 = phi %"class.blink::Member.16"* [ %329, %333 ], [ %340, %339 ]
  br label %13

343:                                              ; preds = %334
  %344 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %295, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member.16"* %344, %"class.blink::Member.16"* %5, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %332

345:                                              ; preds = %331, %171, %15, %15, %141, %168, %109, %63, %42, %39, %20, %46, %50, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.16"*, %"class.blink::Member.16"*, %"class.blink::Member.16"*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %3, align 8
  %6 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %8, align 8
  %10 = tail call zeroext i1 %5(%"class.blink::TextTrack"* %7, %"class.blink::TextTrack"* %9) #8
  %11 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %3, align 8
  %12 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %12, align 8
  %14 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %6, align 8
  %15 = tail call zeroext i1 %11(%"class.blink::TextTrack"* %13, %"class.blink::TextTrack"* %14) #8
  br i1 %10, label %57, label %16

16:                                               ; preds = %4
  br i1 %15, label %17, label %114

17:                                               ; preds = %16
  %18 = bitcast %"class.blink::Member.16"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Member.16"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  store atomic i64 %21, i64* %18 monotonic, align 8
  store atomic i64 %19, i64* %20 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.blink::Member.16"* %1 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %24, %17
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::Member.16"* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #8
  br label %35

35:                                               ; preds = %28, %31
  %36 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %3, align 8
  %37 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %6, align 8
  %38 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %8, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::TextTrack"* %37, %"class.blink::TextTrack"* %38) #8
  br i1 %39, label %40, label %114

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::Member.16"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %18, align 8
  store atomic i64 %43, i64* %41 monotonic, align 8
  store atomic i64 %42, i64* %18 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.16"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %46, %40
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %114, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member.16"* %1 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #8
  br label %114

57:                                               ; preds = %4
  %58 = bitcast %"class.blink::Member.16"* %0 to i64*
  %59 = load i64, i64* %58, align 8
  br i1 %15, label %60, label %76

60:                                               ; preds = %57
  %61 = bitcast %"class.blink::Member.16"* %2 to i64*
  %62 = load i64, i64* %61, align 8
  store atomic i64 %62, i64* %58 monotonic, align 8
  store atomic i64 %59, i64* %61 monotonic, align 8
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.blink::Member.16"* %0 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #8
  br label %69

69:                                               ; preds = %65, %60
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %114, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::Member.16"* %2 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #8
  br label %114

76:                                               ; preds = %57
  %77 = bitcast %"class.blink::Member.16"* %1 to i64*
  %78 = load i64, i64* %77, align 8
  store atomic i64 %78, i64* %58 monotonic, align 8
  store atomic i64 %59, i64* %77 monotonic, align 8
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %76
  %82 = bitcast %"class.blink::Member.16"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #8
  br label %85

85:                                               ; preds = %81, %76
  %86 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.blink::Member.16"* %1 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #8
  br label %92

92:                                               ; preds = %85, %88
  %93 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %3, align 8
  %94 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %12, align 8
  %95 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %6, align 8
  %96 = tail call zeroext i1 %93(%"class.blink::TextTrack"* %94, %"class.blink::TextTrack"* %95) #8
  br i1 %96, label %97, label %114

97:                                               ; preds = %92
  %98 = load i64, i64* %77, align 8
  %99 = bitcast %"class.blink::Member.16"* %2 to i64*
  %100 = load i64, i64* %99, align 8
  store atomic i64 %100, i64* %77 monotonic, align 8
  store atomic i64 %98, i64* %99 monotonic, align 8
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::Member.16"* %1 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #8
  br label %107

107:                                              ; preds = %103, %97
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.blink::Member.16"* %2 to i8**
  %112 = load i8*, i8** %111, align 8
  %113 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #8
  br label %114

114:                                              ; preds = %110, %107, %72, %69, %53, %50, %92, %35, %16
  %115 = phi i32 [ 0, %16 ], [ 1, %35 ], [ 1, %92 ], [ 2, %50 ], [ 2, %53 ], [ 1, %69 ], [ 1, %72 ], [ 2, %107 ], [ 2, %110 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member.16"*, %"class.blink::Member.16"*, %"class.blink::Member.16"*, %"class.blink::Member.16"*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.16"* %0, %"class.blink::Member.16"* %1, %"class.blink::Member.16"* %2, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %4)
  %7 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %4, align 8
  %8 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %3, i64 0, i32 0, i32 0
  %9 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %10, align 8
  %12 = tail call zeroext i1 %7(%"class.blink::TextTrack"* %9, %"class.blink::TextTrack"* %11) #8
  br i1 %12, label %13, label %81

13:                                               ; preds = %5
  %14 = bitcast %"class.blink::Member.16"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::Member.16"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store atomic i64 %17, i64* %14 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::Member.16"* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %24

24:                                               ; preds = %20, %13
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.16"* %3 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #8
  br label %31

31:                                               ; preds = %24, %27
  %32 = add i32 %6, 1
  %33 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %4, align 8
  %34 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %10, align 8
  %35 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %35, align 8
  %37 = tail call zeroext i1 %33(%"class.blink::TextTrack"* %34, %"class.blink::TextTrack"* %36) #8
  br i1 %37, label %38, label %81

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::Member.16"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %14, align 8
  store atomic i64 %41, i64* %39 monotonic, align 8
  store atomic i64 %40, i64* %14 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::Member.16"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #8
  br label %48

48:                                               ; preds = %44, %38
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.blink::Member.16"* %2 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #8
  br label %55

55:                                               ; preds = %48, %51
  %56 = add i32 %6, 2
  %57 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %4, align 8
  %58 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %35, align 8
  %59 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 0, i32 0, i32 0
  %60 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %59, align 8
  %61 = tail call zeroext i1 %57(%"class.blink::TextTrack"* %58, %"class.blink::TextTrack"* %60) #8
  br i1 %61, label %62, label %81

62:                                               ; preds = %55
  %63 = bitcast %"class.blink::Member.16"* %0 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = load i64, i64* %39, align 8
  store atomic i64 %65, i64* %63 monotonic, align 8
  store atomic i64 %64, i64* %39 monotonic, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.blink::Member.16"* %0 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #8
  br label %72

72:                                               ; preds = %68, %62
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.blink::Member.16"* %1 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #8
  br label %79

79:                                               ; preds = %72, %75
  %80 = add i32 %6, 3
  br label %81

81:                                               ; preds = %31, %79, %55, %5
  %82 = phi i32 [ %80, %79 ], [ %56, %55 ], [ %32, %31 ], [ %6, %5 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member.16"*, %"class.blink::Member.16"*, %"class.blink::Member.16"*, %"class.blink::Member.16"*, %"class.blink::Member.16"*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member.16"* %0, %"class.blink::Member.16"* %1, %"class.blink::Member.16"* %2, %"class.blink::Member.16"* %3, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %5, align 8
  %9 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %3, i64 0, i32 0, i32 0
  %12 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %11, align 8
  %13 = tail call zeroext i1 %8(%"class.blink::TextTrack"* %10, %"class.blink::TextTrack"* %12) #8
  br i1 %13, label %14, label %106

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::Member.16"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member.16"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store atomic i64 %18, i64* %15 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::Member.16"* %3 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #8
  br label %25

25:                                               ; preds = %21, %14
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::Member.16"* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %25, %28
  %33 = add i32 %7, 1
  %34 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %5, align 8
  %35 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %11, align 8
  %36 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %2, i64 0, i32 0, i32 0
  %37 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %36, align 8
  %38 = tail call zeroext i1 %34(%"class.blink::TextTrack"* %35, %"class.blink::TextTrack"* %37) #8
  br i1 %38, label %39, label %106

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::Member.16"* %2 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %15, align 8
  store atomic i64 %42, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %15 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::Member.16"* %2 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #8
  br label %49

49:                                               ; preds = %45, %39
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::Member.16"* %3 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #8
  br label %56

56:                                               ; preds = %49, %52
  %57 = add i32 %7, 2
  %58 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %5, align 8
  %59 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %36, align 8
  %60 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1, i64 0, i32 0, i32 0
  %61 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %60, align 8
  %62 = tail call zeroext i1 %58(%"class.blink::TextTrack"* %59, %"class.blink::TextTrack"* %61) #8
  br i1 %62, label %63, label %106

63:                                               ; preds = %56
  %64 = bitcast %"class.blink::Member.16"* %1 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = load i64, i64* %40, align 8
  store atomic i64 %66, i64* %64 monotonic, align 8
  store atomic i64 %65, i64* %40 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.blink::Member.16"* %1 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #8
  br label %73

73:                                               ; preds = %69, %63
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::Member.16"* %2 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #8
  br label %80

80:                                               ; preds = %73, %76
  %81 = add i32 %7, 3
  %82 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %5, align 8
  %83 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %60, align 8
  %84 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 0, i32 0, i32 0
  %85 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %84, align 8
  %86 = tail call zeroext i1 %82(%"class.blink::TextTrack"* %83, %"class.blink::TextTrack"* %85) #8
  br i1 %86, label %87, label %106

87:                                               ; preds = %80
  %88 = bitcast %"class.blink::Member.16"* %0 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = load i64, i64* %64, align 8
  store atomic i64 %90, i64* %88 monotonic, align 8
  store atomic i64 %89, i64* %64 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.blink::Member.16"* %0 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #8
  br label %97

97:                                               ; preds = %93, %87
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.blink::Member.16"* %1 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #8
  br label %104

104:                                              ; preds = %97, %100
  %105 = add i32 %7, 4
  br label %106

106:                                              ; preds = %32, %80, %104, %56, %6
  %107 = phi i32 [ %105, %104 ], [ %81, %80 ], [ %57, %56 ], [ %33, %32 ], [ %7, %6 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member.16"*, %"class.blink::Member.16"*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.blink::Member.16"* %1 to i64
  %5 = ptrtoint %"class.blink::Member.16"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %49 [
    i64 0, label %106
    i64 1, label %106
    i64 2, label %8
    i64 3, label %34
    i64 4, label %38
    i64 5, label %43
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %10 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1, i64 -1
  %11 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %13, align 8
  %15 = tail call zeroext i1 %9(%"class.blink::TextTrack"* %12, %"class.blink::TextTrack"* %14) #8
  br i1 %15, label %16, label %106

16:                                               ; preds = %8
  %17 = bitcast %"class.blink::Member.16"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::Member.16"* %10 to i64*
  %20 = load i64, i64* %19, align 8
  store atomic i64 %20, i64* %17 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Member.16"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #8
  br label %27

27:                                               ; preds = %23, %16
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %106, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::Member.16"* %10 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #8
  br label %106

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 1
  %36 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1, i64 -1
  %37 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.16"* %0, %"class.blink::Member.16"* %35, %"class.blink::Member.16"* %36, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %106

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 1
  %40 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 2
  %41 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1, i64 -1
  %42 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member.16"* %0, %"class.blink::Member.16"* %39, %"class.blink::Member.16"* %40, %"class.blink::Member.16"* %41, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %106

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 1
  %45 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 2
  %46 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 3
  %47 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %1, i64 -1
  %48 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member.16"* %0, %"class.blink::Member.16"* %44, %"class.blink::Member.16"* %45, %"class.blink::Member.16"* %46, %"class.blink::Member.16"* %47, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  br label %106

49:                                               ; preds = %3
  %50 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 2
  %51 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 1
  %52 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink9TextTrackES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.16"* %0, %"class.blink::Member.16"* %51, %"class.blink::Member.16"* %50, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** dereferenceable(8) %2)
  %53 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %0, i64 3
  %54 = icmp eq %"class.blink::Member.16"* %53, %1
  br i1 %54, label %106, label %55

55:                                               ; preds = %49, %99
  %56 = phi %"class.blink::Member.16"* [ %101, %99 ], [ %53, %49 ]
  %57 = phi i32 [ %100, %99 ], [ 0, %49 ]
  %58 = phi %"class.blink::Member.16"* [ %56, %99 ], [ %50, %49 ]
  %59 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %60 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %56, i64 0, i32 0, i32 0
  %61 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %58, i64 0, i32 0, i32 0
  %63 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %62, align 8
  %64 = tail call zeroext i1 %59(%"class.blink::TextTrack"* %61, %"class.blink::TextTrack"* %63) #8
  br i1 %64, label %65, label %99

65:                                               ; preds = %55
  %66 = bitcast %"class.blink::Member.16"* %56 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = inttoptr i64 %67 to %"class.blink::TextTrack"*
  br label %69

69:                                               ; preds = %82, %65
  %70 = phi %"class.blink::Member.16"* [ %56, %65 ], [ %71, %82 ]
  %71 = phi %"class.blink::Member.16"* [ %58, %65 ], [ %84, %82 ]
  %72 = bitcast %"class.blink::Member.16"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.blink::Member.16"* %70 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %69
  %78 = inttoptr i64 %73 to i8*
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #8
  br label %80

80:                                               ; preds = %69, %77
  %81 = icmp eq %"class.blink::Member.16"* %71, %0
  br i1 %81, label %88, label %82

82:                                               ; preds = %80
  %83 = load i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)*, i1 (%"class.blink::TextTrack"*, %"class.blink::TextTrack"*)** %2, align 8
  %84 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %71, i64 -1
  %85 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::TextTrack"*, %"class.blink::TextTrack"** %85, align 8
  %87 = tail call zeroext i1 %83(%"class.blink::TextTrack"* %68, %"class.blink::TextTrack"* %86) #8
  br i1 %87, label %69, label %88

88:                                               ; preds = %80, %82
  %89 = phi %"class.blink::Member.16"* [ %71, %82 ], [ %0, %80 ]
  %90 = bitcast %"class.blink::Member.16"* %89 to i64*
  store atomic i64 %67, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = inttoptr i64 %67 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #8
  br label %96

96:                                               ; preds = %88, %93
  %97 = add i32 %57, 1
  %98 = icmp eq i32 %97, 8
  br i1 %98, label %103, label %99

99:                                               ; preds = %96, %55
  %100 = phi i32 [ %97, %96 ], [ %57, %55 ]
  %101 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %56, i64 1
  %102 = icmp eq %"class.blink::Member.16"* %101, %1
  br i1 %102, label %106, label %55

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %56, i64 1
  %105 = icmp eq %"class.blink::Member.16"* %104, %1
  br label %106

106:                                              ; preds = %99, %103, %49, %30, %27, %8, %3, %3, %43, %38, %34
  %107 = phi i1 [ true, %43 ], [ true, %38 ], [ true, %34 ], [ true, %3 ], [ true, %3 ], [ true, %8 ], [ true, %27 ], [ true, %30 ], [ true, %49 ], [ %105, %103 ], [ true, %99 ]
  ret i1 %107
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLMediaElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLMediaElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLMediaElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLMediaElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLMediaElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLMediaElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLMediaElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLMediaElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLMediaElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLMediaElement"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_11CueTimelineEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CueTimeline"**
  %4 = load %"class.blink::CueTimeline"*, %"class.blink::CueTimeline"** %3, align 8
  %5 = ptrtoint %"class.blink::CueTimeline"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !25

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CueTimeline", %"class.blink::CueTimeline"* %4, i64 -1, i32 7
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11CueTimelineEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLMediaElementEE5TraceEPNS_7VisitorEPKv) #8
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 80
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %1, i64 160
  %19 = bitcast i8* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = inttoptr i64 %20 to i8*
  %24 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %25, i64 6
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %0, i8* nonnull %23, i8* %18, i8* %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CueTimelineEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_11CueTimelineEEEvRKNS_14LivenessBrokerEPKv) #8
  br label %28

28:                                               ; preds = %22, %17, %12
  %29 = getelementptr inbounds i8, i8* %1, i64 184
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, i8* %1, i64 264
  %35 = bitcast i8* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = inttoptr i64 %36 to i8*
  %40 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %41, i64 6
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* %34, i8* %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CueTimelineEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_11CueTimelineEEEvRKNS_14LivenessBrokerEPKv) #8
  br label %44

44:                                               ; preds = %28, %33, %38
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink12_GLOBAL__N_117CreateCueIntervalEPNS_12TextTrackCueE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink12_GLOBAL__N_117CreateCueIntervalEPNS_12TextTrackCueE"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE14CreateIntervalERKdS6_S3_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE14CreateIntervalERKdS6_S3_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink12_GLOBAL__N_117CreateCueIntervalEPNS_12TextTrackCueE: argument 0"}
!11 = distinct !{!11, !"_ZN5blink12_GLOBAL__N_117CreateCueIntervalEPNS_12TextTrackCueE"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE14CreateIntervalERKdS6_S3_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE14CreateIntervalERKdS6_S3_"}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink11CueTimeline22BeginIgnoreUpdateScopeEv: argument 0"}
!18 = distinct !{!18, !"_ZN5blink11CueTimeline22BeginIgnoreUpdateScopeEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE14CreateIntervalERKdS6_S3_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE14CreateIntervalERKdS6_S3_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE11AllOverlapsERKNS_11PODIntervalIdS3_EE: argument 0"}
!24 = distinct !{!24, !"_ZNK3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE11AllOverlapsERKNS_11PODIntervalIdS3_EE"}
!25 = !{!"branch_weights", i32 1, i32 2000}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE14CreateIntervalERKdS6_S3_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE14CreateIntervalERKdS6_S3_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE11AllOverlapsERKNS_11PODIntervalIdS3_EE: argument 0"}
!31 = distinct !{!31, !"_ZNK3WTF15PODIntervalTreeIdPN5blink12TextTrackCueEE11AllOverlapsERKNS_11PODIntervalIdS3_EE"}
!32 = distinct !{!32, !33}
!33 = !{!"llvm.loop.unroll.disable"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN5blink18WrapWeakPersistentINS_11CueTimelineEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!36 = distinct !{!36, !"_ZN5blink18WrapWeakPersistentINS_11CueTimelineEEENS_14WeakPersistentIT_EEPS3_"}
!37 = !{!38, !40, !42}
!38 = distinct !{!38, !39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_11CueTimelineEEJS6_NS4_14WeakPersistentIS7_EEEEEDcOT0_DpOT1_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_11CueTimelineEEJS6_NS4_14WeakPersistentIS7_EEEEEDcOT0_DpOT1_"}
!40 = distinct !{!40, !41, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS2_11CueTimelineEEJS4_NS2_14WeakPersistentIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS2_11CueTimelineEEJS4_NS2_14WeakPersistentIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!42 = distinct !{!42, !43, !"_ZN3WTF4BindIPFvN4base7WeakPtrIN5blink9TimerBaseEEEPNS3_11CueTimelineEEJS5_NS3_14WeakPersistentIS6_EEEFvvEEENS1_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF4BindIPFvN4base7WeakPtrIN5blink9TimerBaseEEEPNS3_11CueTimelineEEJS5_NS3_14WeakPersistentIS6_EEEFvvEEENS1_12OnceCallbackIT1_EEOT_DpOT0_"}
