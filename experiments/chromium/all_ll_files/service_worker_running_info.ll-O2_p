; ModuleID = '../../content/public/browser/service_worker_running_info.cc'
source_filename = "../../content/public/browser/service_worker_running_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::ServiceWorkerRunningInfo" = type { %class.GURL, %class.GURL, i32, %"class.util::TokenType" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

@_ZN7content24ServiceWorkerRunningInfoC1ERK4GURLS3_lRKN4util9TokenTypeIN5blink28ServiceWorkerTokenTypeMarkerEEE = hidden unnamed_addr alias void (%"struct.content::ServiceWorkerRunningInfo"*, %class.GURL*, %class.GURL*, i64, %"class.util::TokenType"*), void (%"struct.content::ServiceWorkerRunningInfo"*, %class.GURL*, %class.GURL*, i64, %"class.util::TokenType"*)* @_ZN7content24ServiceWorkerRunningInfoC2ERK4GURLS3_lRKN4util9TokenTypeIN5blink28ServiceWorkerTokenTypeMarkerEEE
@_ZN7content24ServiceWorkerRunningInfoC1EOS0_ = hidden unnamed_addr alias void (%"struct.content::ServiceWorkerRunningInfo"*, %"struct.content::ServiceWorkerRunningInfo"*), void (%"struct.content::ServiceWorkerRunningInfo"*, %"struct.content::ServiceWorkerRunningInfo"*)* @_ZN7content24ServiceWorkerRunningInfoC2EOS0_
@_ZN7content24ServiceWorkerRunningInfoD1Ev = hidden unnamed_addr alias void (%"struct.content::ServiceWorkerRunningInfo"*), void (%"struct.content::ServiceWorkerRunningInfo"*)* @_ZN7content24ServiceWorkerRunningInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24ServiceWorkerRunningInfoC2ERK4GURLS3_lRKN4util9TokenTypeIN5blink28ServiceWorkerTokenTypeMarkerEEE(%"struct.content::ServiceWorkerRunningInfo"*, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), i64, %"class.util::TokenType"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %1) #4
  %7 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %7, %class.GURL* dereferenceable(120) %2) #4
  %8 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 2
  %9 = trunc i64 %3 to i32
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 3
  %11 = bitcast %"class.util::TokenType"* %10 to i8*
  %12 = bitcast %"class.util::TokenType"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false) #4
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24ServiceWorkerRunningInfoC2EOS0_(%"struct.content::ServiceWorkerRunningInfo"*, %"struct.content::ServiceWorkerRunningInfo"* dereferenceable(264)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #4
  %5 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %6) #4
  %7 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %1, i64 0, i32 3
  %12 = bitcast %"class.util::TokenType"* %10 to i8*
  %13 = bitcast %"class.util::TokenType"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(264) %"struct.content::ServiceWorkerRunningInfo"* @_ZN7content24ServiceWorkerRunningInfoaSEOS0_(%"struct.content::ServiceWorkerRunningInfo"* returned, %"struct.content::ServiceWorkerRunningInfo"* dereferenceable(264)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #4
  %6 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #4
  %9 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %1, i64 0, i32 2
  %11 = bitcast i32* %9 to i8*
  %12 = bitcast i32* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  ret %"struct.content::ServiceWorkerRunningInfo"* %0
}

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24ServiceWorkerRunningInfoD2Ev(%"struct.content::ServiceWorkerRunningInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %2) #4
  %3 = getelementptr inbounds %"struct.content::ServiceWorkerRunningInfo", %"struct.content::ServiceWorkerRunningInfo"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
