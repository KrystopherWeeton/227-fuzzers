; ModuleID = '../../pdf/draw_utils/coordinates.cc'
source_filename = "../../pdf/draw_utils/coordinates.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.chrome_pdf::draw_utils::IndexedPage" = type { i32, %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.chrome_pdf::draw_utils::IndexedPage"*, %"struct.chrome_pdf::draw_utils::IndexedPage"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.chrome_pdf::draw_utils::IndexedPage"* }
%"class.gfx::SizeF" = type { float, float }
%"struct.chrome_pdf::draw_utils::PageInsetSizes" = type { i32, i32, i32, i32 }

@_ZN10chrome_pdf10draw_utils11IndexedPageC1EiRKN3gfx4RectE = hidden unnamed_addr alias void (%"struct.chrome_pdf::draw_utils::IndexedPage"*, i32, %"class.gfx::Rect"*), void (%"struct.chrome_pdf::draw_utils::IndexedPage"*, i32, %"class.gfx::Rect"*)* @_ZN10chrome_pdf10draw_utils11IndexedPageC2EiRKN3gfx4RectE
@_ZN10chrome_pdf10draw_utils11IndexedPageC1ERKS1_ = hidden unnamed_addr alias void (%"struct.chrome_pdf::draw_utils::IndexedPage"*, %"struct.chrome_pdf::draw_utils::IndexedPage"*), void (%"struct.chrome_pdf::draw_utils::IndexedPage"*, %"struct.chrome_pdf::draw_utils::IndexedPage"*)* @_ZN10chrome_pdf10draw_utils11IndexedPageC2ERKS1_
@_ZN10chrome_pdf10draw_utils11IndexedPageD1Ev = hidden unnamed_addr alias void (%"struct.chrome_pdf::draw_utils::IndexedPage"*), void (%"struct.chrome_pdf::draw_utils::IndexedPage"*)* @_ZN10chrome_pdf10draw_utils11IndexedPageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf10draw_utils11IndexedPageC2EiRKN3gfx4RectE(%"struct.chrome_pdf::draw_utils::IndexedPage"* nocapture, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::IndexedPage", %"struct.chrome_pdf::draw_utils::IndexedPage"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::IndexedPage", %"struct.chrome_pdf::draw_utils::IndexedPage"* %0, i64 0, i32 1
  %6 = bitcast %"class.gfx::Rect"* %5 to i8*
  %7 = bitcast %"class.gfx::Rect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf10draw_utils11IndexedPageC2ERKS1_(%"struct.chrome_pdf::draw_utils::IndexedPage"* nocapture, %"struct.chrome_pdf::draw_utils::IndexedPage"* nocapture readonly dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.chrome_pdf::draw_utils::IndexedPage"* %0 to i8*
  %4 = bitcast %"struct.chrome_pdf::draw_utils::IndexedPage"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(20) %"struct.chrome_pdf::draw_utils::IndexedPage"* @_ZN10chrome_pdf10draw_utils11IndexedPageaSERKS1_(%"struct.chrome_pdf::draw_utils::IndexedPage"* returned, %"struct.chrome_pdf::draw_utils::IndexedPage"* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.chrome_pdf::draw_utils::IndexedPage"* %0 to i8*
  %4 = bitcast %"struct.chrome_pdf::draw_utils::IndexedPage"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 20, i1 false)
  ret %"struct.chrome_pdf::draw_utils::IndexedPage"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10chrome_pdf10draw_utils11IndexedPageD2Ev(%"struct.chrome_pdf::draw_utils::IndexedPage"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf10draw_utils31AdjustBottomGapForRightSidePageEiPN3gfx4RectE(i32, %"class.gfx::Rect"* nocapture) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %0, 0
  %7 = icmp sgt i32 %5, 0
  %8 = and i1 %6, %7
  %9 = sub nuw nsw i32 2147483647, %0
  %10 = icmp ult i32 %9, %5
  %11 = and i1 %10, %8
  %12 = select i1 %11, i32 %9, i32 %5
  %13 = icmp sgt i32 %12, 0
  %14 = select i1 %13, i32 %12, i32 0
  %15 = lshr i32 %14, 1
  %16 = icmp ult i32 %9, %15
  %17 = and i1 %6, %16
  %18 = select i1 %17, i32 %9, i32 %15
  %19 = icmp sgt i32 %18, 0
  %20 = select i1 %19, i32 %18, i32 0
  store i32 %20, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf10draw_utils22CenterRectHorizontallyEiPN3gfx4RectE(i32, %"class.gfx::Rect"* nocapture) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sub nsw i32 %0, %4
  %6 = sdiv i32 %5, 2
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  store i32 %6, i32* %7, align 4
  %8 = icmp sgt i32 %5, 1
  %9 = icmp sgt i32 %4, 0
  %10 = and i1 %9, %8
  %11 = sub nuw nsw i32 2147483647, %6
  %12 = icmp ult i32 %11, %4
  %13 = and i1 %10, %12
  %14 = select i1 %13, i32 %11, i32 %4
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %15, i32 %14, i32 0
  store i32 %16, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf10draw_utils18ExpandDocumentSizeERKN3gfx4SizeEPS2_(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sub nsw i32 %4, %6
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  %10 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  tail call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* %1, i32 %9, i32 %11) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"*, i32, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils24GetBottomGapBetweenRectsEiRKN3gfx4RectE(i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, %4
  %8 = icmp sgt i32 %7, %0
  br i1 %8, label %9, label %39

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sub nsw i32 %7, %0
  %15 = icmp sgt i32 %11, 0
  %16 = icmp sgt i32 %13, 0
  %17 = and i1 %15, %16
  %18 = sub nuw nsw i32 2147483647, %11
  %19 = icmp ult i32 %18, %13
  %20 = and i1 %19, %17
  %21 = select i1 %20, i32 %18, i32 %13
  %22 = icmp sgt i32 %0, 0
  %23 = icmp sgt i32 %14, 0
  %24 = and i1 %22, %23
  %25 = sub nuw nsw i32 2147483647, %0
  %26 = icmp ult i32 %25, %14
  %27 = and i1 %26, %24
  %28 = select i1 %27, i32 %25, i32 %14
  %29 = icmp sgt i32 %21, 0
  %30 = select i1 %29, i32 %21, i32 0
  %31 = icmp sgt i32 %28, 0
  %32 = select i1 %31, i32 %28, i32 0
  %33 = zext i32 %0 to i64
  %34 = shl nuw i64 %33, 32
  %35 = zext i32 %11 to i64
  %36 = zext i32 %32 to i64
  %37 = shl nuw nsw i64 %36, 32
  %38 = zext i32 %30 to i64
  br label %39

39:                                               ; preds = %2, %9
  %40 = phi i64 [ %37, %9 ], [ 0, %2 ]
  %41 = phi i64 [ %38, %9 ], [ 0, %2 ]
  %42 = phi i64 [ %34, %9 ], [ 0, %2 ]
  %43 = phi i64 [ %35, %9 ], [ 0, %2 ]
  %44 = or i64 %43, %42
  %45 = insertvalue { i64, i64 } undef, i64 %44, 0
  %46 = or i64 %41, %40
  %47 = insertvalue { i64, i64 } %45, i64 %46, 1
  ret { i64, i64 } %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10chrome_pdf10draw_utils18GetMostVisiblePageERKNSt3__16vectorINS0_11IndexedPageENS1_9allocatorIS3_EEEERKN3gfx4RectE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.gfx::SizeF", align 4
  %4 = alloca %"class.gfx::SizeF", align 4
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.chrome_pdf::draw_utils::IndexedPage"*, %"struct.chrome_pdf::draw_utils::IndexedPage"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.chrome_pdf::draw_utils::IndexedPage"*, %"struct.chrome_pdf::draw_utils::IndexedPage"** %7, align 8
  %9 = icmp eq %"struct.chrome_pdf::draw_utils::IndexedPage"* %6, %8
  br i1 %9, label %60, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::IndexedPage", %"struct.chrome_pdf::draw_utils::IndexedPage"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.gfx::SizeF"* %3 to i8*
  %14 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %3, i64 0, i32 1
  %16 = bitcast %"class.gfx::SizeF"* %4 to i8*
  %17 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 0
  %18 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 1
  br label %19

19:                                               ; preds = %10, %55
  %20 = phi float [ 0.000000e+00, %10 ], [ %57, %55 ]
  %21 = phi i32 [ %12, %10 ], [ %56, %55 ]
  %22 = phi %"struct.chrome_pdf::draw_utils::IndexedPage"* [ %6, %10 ], [ %58, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %23 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::IndexedPage", %"struct.chrome_pdf::draw_utils::IndexedPage"* %22, i64 0, i32 1, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::IndexedPage", %"struct.chrome_pdf::draw_utils::IndexedPage"* %22, i64 0, i32 1, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %24, 0
  %28 = select i1 %27, i32 %24, i32 0
  %29 = sitofp i32 %28 to float
  store float %29, float* %14, align 4
  %30 = icmp sgt i32 %26, 0
  %31 = select i1 %30, i32 %26, i32 0
  %32 = sitofp i32 %31 to float
  store float %32, float* %15, align 4
  %33 = call float @_ZNK3gfx5SizeF7GetAreaEv(%"class.gfx::SizeF"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  %34 = fcmp ugt float %33, 0.000000e+00
  br i1 %34, label %35, label %55

35:                                               ; preds = %19
  %36 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::IndexedPage", %"struct.chrome_pdf::draw_utils::IndexedPage"* %22, i64 0, i32 1
  %37 = call { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16) %1, %"class.gfx::Rect"* dereferenceable(16) %36) #8
  %38 = extractvalue { i64, i64 } %37, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %39 = trunc i64 %38 to i32
  %40 = lshr i64 %38, 32
  %41 = trunc i64 %40 to i32
  %42 = icmp sgt i32 %39, 0
  %43 = select i1 %42, i32 %39, i32 0
  %44 = sitofp i32 %43 to float
  store float %44, float* %17, align 4
  %45 = icmp sgt i32 %41, 0
  %46 = select i1 %45, i32 %41, i32 0
  %47 = sitofp i32 %46 to float
  store float %47, float* %18, align 4
  %48 = call float @_ZNK3gfx5SizeF7GetAreaEv(%"class.gfx::SizeF"* nonnull %4) #8
  %49 = fdiv float %48, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %50 = fcmp ogt float %49, %20
  %51 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::IndexedPage", %"struct.chrome_pdf::draw_utils::IndexedPage"* %22, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = select i1 %50, i32 %52, i32 %21
  %54 = select i1 %50, float %49, float %20
  br label %55

55:                                               ; preds = %19, %35
  %56 = phi i32 [ %53, %35 ], [ %21, %19 ]
  %57 = phi float [ %54, %35 ], [ %20, %19 ]
  %58 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::IndexedPage", %"struct.chrome_pdf::draw_utils::IndexedPage"* %22, i64 1
  %59 = icmp eq %"struct.chrome_pdf::draw_utils::IndexedPage"* %58, %8
  br i1 %59, label %60, label %19

60:                                               ; preds = %55, %2
  %61 = phi i32 [ -1, %2 ], [ %56, %55 ]
  ret i32 %61
}

declare float @_ZNK3gfx5SizeF7GetAreaEv(%"class.gfx::SizeF"*) local_unnamed_addr #4

declare { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils25GetPageInsetsForTwoUpViewEmmRKNS0_14PageInsetSizesEi(i64, i64, %"struct.chrome_pdf::draw_utils::PageInsetSizes"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #5 {
  %5 = bitcast %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %2 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, -4294967296
  %9 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %2, i64 0, i32 2
  %10 = bitcast i32* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = and i64 %0, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %4
  %15 = add i64 %1, -1
  %16 = icmp eq i64 %15, %0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = zext i32 %3 to i64
  %19 = and i64 %11, -4294967296
  %20 = or i64 %19, %18
  br label %21

21:                                               ; preds = %4, %14, %17
  %22 = phi i64 [ %20, %17 ], [ %11, %14 ], [ %11, %4 ]
  %23 = phi i32 [ %7, %17 ], [ %7, %14 ], [ %3, %4 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %8, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %22, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils20GetRectForSingleViewERKN3gfx4SizeES4_(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %4, 0
  %11 = icmp sgt i32 %9, 0
  %12 = and i1 %10, %11
  %13 = sub nuw nsw i32 2147483647, %4
  %14 = icmp ult i32 %13, %9
  %15 = and i1 %14, %12
  %16 = select i1 %15, i32 %13, i32 %9
  %17 = select i1 %7, i32 %6, i32 0
  %18 = icmp sgt i32 %16, 0
  %19 = select i1 %18, i32 %16, i32 0
  %20 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 %21, %17
  %23 = sdiv i32 %22, 2
  %24 = icmp sgt i32 %22, 1
  %25 = and i1 %7, %24
  %26 = sub nuw nsw i32 2147483647, %23
  %27 = icmp ult i32 %26, %17
  %28 = and i1 %25, %27
  %29 = select i1 %28, i32 %26, i32 %17
  %30 = icmp sgt i32 %29, 0
  %31 = select i1 %30, i32 %29, i32 0
  %32 = zext i32 %4 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %23 to i64
  %35 = or i64 %33, %34
  %36 = insertvalue { i64, i64 } undef, i64 %35, 0
  %37 = zext i32 %19 to i64
  %38 = shl nuw nsw i64 %37, 32
  %39 = zext i32 %31 to i64
  %40 = or i64 %38, %39
  %41 = insertvalue { i64, i64 } %36, i64 %40, 1
  ret { i64, i64 } %41
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils13GetScreenRectERKN3gfx4RectERKNS1_5PointEd(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Point"* nocapture readonly dereferenceable(8), double) local_unnamed_addr #6 {
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sitofp i32 %5 to double
  %7 = fmul double %6, %2
  %8 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to double
  %11 = fsub double %7, %10
  %12 = fptosi double %11 to i32
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to double
  %16 = fmul double %15, %2
  %17 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to double
  %20 = fsub double %16, %19
  %21 = fptosi double %20 to i32
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, %5
  %25 = sitofp i32 %24 to double
  %26 = fmul double %25, %2
  %27 = fsub double %26, %10
  %28 = tail call double @llvm.ceil.f64(double %27)
  %29 = fptosi double %28 to i32
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %31, %14
  %33 = sitofp i32 %32 to double
  %34 = fmul double %33, %2
  %35 = fsub double %34, %19
  %36 = tail call double @llvm.ceil.f64(double %35)
  %37 = fptosi double %36 to i32
  %38 = sub nsw i32 %29, %12
  %39 = sub nsw i32 %37, %21
  %40 = icmp sgt i32 %12, 0
  %41 = icmp sgt i32 %38, 0
  %42 = and i1 %40, %41
  %43 = sub nuw nsw i32 2147483647, %12
  %44 = icmp ult i32 %43, %38
  %45 = and i1 %44, %42
  %46 = select i1 %45, i32 %43, i32 %38
  %47 = icmp sgt i32 %21, 0
  %48 = icmp sgt i32 %39, 0
  %49 = and i1 %47, %48
  %50 = sub nuw nsw i32 2147483647, %21
  %51 = icmp ult i32 %50, %39
  %52 = and i1 %51, %49
  %53 = select i1 %52, i32 %50, i32 %39
  %54 = icmp sgt i32 %46, 0
  %55 = select i1 %54, i32 %46, i32 0
  %56 = icmp sgt i32 %53, 0
  %57 = select i1 %56, i32 %53, i32 0
  %58 = zext i32 %21 to i64
  %59 = shl nuw i64 %58, 32
  %60 = zext i32 %12 to i64
  %61 = or i64 %59, %60
  %62 = insertvalue { i64, i64 } undef, i64 %61, 0
  %63 = zext i32 %57 to i64
  %64 = shl nuw nsw i64 %63, 32
  %65 = zext i32 %55 to i64
  %66 = or i64 %64, %65
  %67 = insertvalue { i64, i64 } %62, i64 %66, 1
  ret { i64, i64 } %67
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils18GetSurroundingRectEiiRKNS0_14PageInsetSizesEii(i32, i32, %"struct.chrome_pdf::draw_utils::PageInsetSizes"* nocapture readonly dereferenceable(16), i32, i32) local_unnamed_addr #5 {
  %6 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %2, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %0, %7
  %9 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %2, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %4, %1
  %12 = add i32 %11, %7
  %13 = add i32 %12, %10
  %14 = icmp sgt i32 %8, 0
  %15 = icmp sgt i32 %13, 0
  %16 = and i1 %14, %15
  %17 = sub nuw nsw i32 2147483647, %8
  %18 = icmp ult i32 %17, %13
  %19 = and i1 %18, %16
  %20 = select i1 %19, i32 %17, i32 %13
  %21 = icmp sgt i32 %3, 0
  %22 = select i1 %21, i32 %3, i32 0
  %23 = icmp sgt i32 %20, 0
  %24 = select i1 %23, i32 %20, i32 0
  %25 = zext i32 %8 to i64
  %26 = shl nuw i64 %25, 32
  %27 = insertvalue { i64, i64 } undef, i64 %26, 0
  %28 = zext i32 %24 to i64
  %29 = shl nuw nsw i64 %28, 32
  %30 = zext i32 %22 to i64
  %31 = or i64 %29, %30
  %32 = insertvalue { i64, i64 } %27, i64 %31, 1
  ret { i64, i64 } %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils15GetLeftFillRectERKN3gfx4RectERKNS0_14PageInsetSizesEi(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"struct.chrome_pdf::draw_utils::PageInsetSizes"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %5, %7
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sub nsw i32 %10, %12
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %7, %2
  %19 = add i32 %18, %15
  %20 = add i32 %19, %17
  %21 = icmp sgt i32 %8, 0
  %22 = icmp sgt i32 %20, 0
  %23 = and i1 %21, %22
  %24 = sub nuw nsw i32 2147483647, %8
  %25 = icmp ult i32 %24, %20
  %26 = and i1 %25, %23
  %27 = select i1 %26, i32 %24, i32 %20
  %28 = icmp sgt i32 %13, 0
  %29 = select i1 %28, i32 %13, i32 0
  %30 = icmp sgt i32 %27, 0
  %31 = select i1 %30, i32 %27, i32 0
  %32 = zext i32 %8 to i64
  %33 = shl nuw i64 %32, 32
  %34 = insertvalue { i64, i64 } undef, i64 %33, 0
  %35 = zext i32 %31 to i64
  %36 = shl nuw nsw i64 %35, 32
  %37 = zext i32 %29 to i64
  %38 = or i64 %36, %37
  %39 = insertvalue { i64, i64 } %34, i64 %38, 1
  ret { i64, i64 } %39
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils16GetRightFillRectERKN3gfx4RectERKNS0_14PageInsetSizesEii(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"struct.chrome_pdf::draw_utils::PageInsetSizes"* nocapture readonly dereferenceable(16), i32, i32) local_unnamed_addr #5 {
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, %6
  %10 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %9, %11
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %14, %16
  %18 = sub nsw i32 %2, %12
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %16, %3
  %24 = add i32 %23, %20
  %25 = add i32 %24, %22
  %26 = icmp sgt i32 %12, 0
  %27 = icmp sgt i32 %18, 0
  %28 = and i1 %26, %27
  %29 = sub nuw nsw i32 2147483647, %12
  %30 = icmp ult i32 %29, %18
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %29, i32 %18
  %33 = icmp sgt i32 %17, 0
  %34 = icmp sgt i32 %25, 0
  %35 = and i1 %33, %34
  %36 = sub nuw nsw i32 2147483647, %17
  %37 = icmp ult i32 %36, %25
  %38 = and i1 %37, %35
  %39 = select i1 %38, i32 %36, i32 %25
  %40 = icmp sgt i32 %32, 0
  %41 = select i1 %40, i32 %32, i32 0
  %42 = icmp sgt i32 %39, 0
  %43 = select i1 %42, i32 %39, i32 0
  %44 = zext i32 %17 to i64
  %45 = shl nuw i64 %44, 32
  %46 = zext i32 %12 to i64
  %47 = or i64 %45, %46
  %48 = insertvalue { i64, i64 } undef, i64 %47, 0
  %49 = zext i32 %43 to i64
  %50 = shl nuw nsw i64 %49, 32
  %51 = zext i32 %41 to i64
  %52 = or i64 %50, %51
  %53 = insertvalue { i64, i64 } %48, i64 %52, 1
  ret { i64, i64 } %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils17GetBottomFillRectERKN3gfx4RectERKNS0_14PageInsetSizesEi(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"struct.chrome_pdf::draw_utils::PageInsetSizes"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %5, %7
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, %10
  %14 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %13, %15
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, %7
  %20 = getelementptr inbounds %"struct.chrome_pdf::draw_utils::PageInsetSizes", %"struct.chrome_pdf::draw_utils::PageInsetSizes"* %1, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %19, %21
  %23 = icmp sgt i32 %8, 0
  %24 = icmp sgt i32 %22, 0
  %25 = and i1 %23, %24
  %26 = sub nuw nsw i32 2147483647, %8
  %27 = icmp ult i32 %26, %22
  %28 = and i1 %27, %25
  %29 = select i1 %28, i32 %26, i32 %22
  %30 = icmp sgt i32 %16, 0
  %31 = icmp sgt i32 %2, 0
  %32 = and i1 %31, %30
  %33 = sub nuw nsw i32 2147483647, %16
  %34 = icmp ult i32 %33, %2
  %35 = and i1 %34, %32
  %36 = select i1 %35, i32 %33, i32 %2
  %37 = icmp sgt i32 %29, 0
  %38 = select i1 %37, i32 %29, i32 0
  %39 = icmp sgt i32 %36, 0
  %40 = select i1 %39, i32 %36, i32 0
  %41 = zext i32 %16 to i64
  %42 = shl nuw i64 %41, 32
  %43 = zext i32 %8 to i64
  %44 = or i64 %42, %43
  %45 = insertvalue { i64, i64 } undef, i64 %44, 0
  %46 = zext i32 %40 to i64
  %47 = shl nuw nsw i64 %46, 32
  %48 = zext i32 %38 to i64
  %49 = or i64 %47, %48
  %50 = insertvalue { i64, i64 } %45, i64 %49, 1
  ret { i64, i64 } %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils23GetLeftRectForTwoUpViewERKN3gfx4SizeERKNS1_5PointE(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sub nsw i32 %4, %6
  %8 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %7, 0
  %13 = icmp sgt i32 %6, 0
  %14 = and i1 %13, %12
  %15 = sub nuw nsw i32 2147483647, %7
  %16 = icmp ult i32 %15, %6
  %17 = and i1 %16, %14
  %18 = select i1 %17, i32 %15, i32 %6
  %19 = icmp sgt i32 %9, 0
  %20 = icmp sgt i32 %11, 0
  %21 = and i1 %19, %20
  %22 = sub nuw nsw i32 2147483647, %9
  %23 = icmp ult i32 %22, %11
  %24 = and i1 %23, %21
  %25 = select i1 %24, i32 %22, i32 %11
  %26 = icmp sgt i32 %18, 0
  %27 = select i1 %26, i32 %18, i32 0
  %28 = icmp sgt i32 %25, 0
  %29 = select i1 %28, i32 %25, i32 0
  %30 = zext i32 %9 to i64
  %31 = shl nuw i64 %30, 32
  %32 = zext i32 %7 to i64
  %33 = or i64 %31, %32
  %34 = insertvalue { i64, i64 } undef, i64 %33, 0
  %35 = zext i32 %29 to i64
  %36 = shl nuw nsw i64 %35, 32
  %37 = zext i32 %27 to i64
  %38 = or i64 %36, %37
  %39 = insertvalue { i64, i64 } %34, i64 %38, 1
  ret { i64, i64 } %39
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10chrome_pdf10draw_utils24GetRightRectForTwoUpViewERKN3gfx4SizeERKNS1_5PointE(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 {
  %3 = bitcast %"class.gfx::Point"* %1 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %5, 0
  %9 = icmp sgt i32 %7, 0
  %10 = and i1 %8, %9
  %11 = sub nuw nsw i32 2147483647, %5
  %12 = icmp ult i32 %11, %7
  %13 = and i1 %12, %10
  %14 = select i1 %13, i32 %11, i32 %7
  %15 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %16, 0
  %20 = icmp sgt i32 %18, 0
  %21 = and i1 %19, %20
  %22 = sub nuw nsw i32 2147483647, %16
  %23 = icmp ult i32 %22, %18
  %24 = and i1 %23, %21
  %25 = select i1 %24, i32 %22, i32 %18
  %26 = icmp sgt i32 %14, 0
  %27 = select i1 %26, i32 %14, i32 0
  %28 = icmp sgt i32 %25, 0
  %29 = select i1 %28, i32 %25, i32 0
  %30 = insertvalue { i64, i64 } undef, i64 %4, 0
  %31 = zext i32 %29 to i64
  %32 = shl nuw nsw i64 %31, 32
  %33 = zext i32 %27 to i64
  %34 = or i64 %32, %33
  %35 = insertvalue { i64, i64 } %30, i64 %34, 1
  ret { i64, i64 } %35
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
