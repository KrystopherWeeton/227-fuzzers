; ModuleID = '../../third_party/webrtc/rtc_base/byte_buffer.cc'
source_filename = "../../third_party/webrtc/rtc_base/byte_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.rtc::ByteBufferWriter" = type { %"class.rtc::ByteBufferWriterT" }
%"class.rtc::ByteBufferWriterT" = type { %"class.rtc::BufferT" }
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.rtc::ByteBufferReader" = type { i8*, i64, i64, i64 }
%"class.rtc::BufferT.1" = type { i64, i64, %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZN3rtc17ByteBufferWriterTINS_7BufferTIcLb0EEEE9ConstructEPKcm = comdat any

@_ZN3rtc16ByteBufferWriterC1Ev = hidden unnamed_addr alias void (%"class.rtc::ByteBufferWriter"*), void (%"class.rtc::ByteBufferWriter"*)* @_ZN3rtc16ByteBufferWriterC2Ev
@_ZN3rtc16ByteBufferWriterC1EPKcm = hidden unnamed_addr alias void (%"class.rtc::ByteBufferWriter"*, i8*, i64), void (%"class.rtc::ByteBufferWriter"*, i8*, i64)* @_ZN3rtc16ByteBufferWriterC2EPKcm
@_ZN3rtc16ByteBufferReaderC1EPKcm = hidden unnamed_addr alias void (%"class.rtc::ByteBufferReader"*, i8*, i64), void (%"class.rtc::ByteBufferReader"*, i8*, i64)* @_ZN3rtc16ByteBufferReaderC2EPKcm
@_ZN3rtc16ByteBufferReaderC1EPKc = hidden unnamed_addr alias void (%"class.rtc::ByteBufferReader"*, i8*), void (%"class.rtc::ByteBufferReader"*, i8*)* @_ZN3rtc16ByteBufferReaderC2EPKc
@_ZN3rtc16ByteBufferReaderC1ERKNS_7BufferTIhLb0EEE = hidden unnamed_addr alias void (%"class.rtc::ByteBufferReader"*, %"class.rtc::BufferT.1"*), void (%"class.rtc::ByteBufferReader"*, %"class.rtc::BufferT.1"*)* @_ZN3rtc16ByteBufferReaderC2ERKNS_7BufferTIhLb0EEE
@_ZN3rtc16ByteBufferReaderC1ERKNS_16ByteBufferWriterE = hidden unnamed_addr alias void (%"class.rtc::ByteBufferReader"*, %"class.rtc::ByteBufferWriter"*), void (%"class.rtc::ByteBufferReader"*, %"class.rtc::ByteBufferWriter"*)* @_ZN3rtc16ByteBufferReaderC2ERKNS_16ByteBufferWriterE

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3rtc16ByteBufferWriterC2Ev(%"class.rtc::ByteBufferWriter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = tail call i8* @_Znam(i64 4096) #10
  %5 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %6, i64* %7, align 8
  store i64 4096, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc16ByteBufferWriterC2EPKcm(%"class.rtc::ByteBufferWriter"*, i8*, i64) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %0, i64 0, i32 0
  %5 = bitcast %"class.rtc::ByteBufferWriter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  tail call void @_ZN3rtc17ByteBufferWriterTINS_7BufferTIcLb0EEEE9ConstructEPKcm(%"class.rtc::ByteBufferWriterT"* %4, i8* %1, i64 %2) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3rtc16ByteBufferReaderC2EPKcm(%"class.rtc::ByteBufferReader"* nocapture, i8*, i64) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  store i64 %2, i64* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3rtc16ByteBufferReader9ConstructEPKcm(%"class.rtc::ByteBufferReader"* nocapture, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  store i64 %2, i64* %7, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3rtc16ByteBufferReaderC2EPKc(%"class.rtc::ByteBufferReader"* nocapture, i8*) unnamed_addr #0 align 2 {
  %3 = tail call i64 @strlen(i8* %1) #12
  %4 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3rtc16ByteBufferReaderC2ERKNS_7BufferTIhLb0EEE(%"class.rtc::ByteBufferReader"* nocapture, %"class.rtc::BufferT.1"* nocapture readonly dereferenceable(24)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.rtc::BufferT.1", %"class.rtc::BufferT.1"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rtc::BufferT.1", %"class.rtc::BufferT.1"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.rtc::ByteBufferReader"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  store i64 %7, i64* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3rtc16ByteBufferReaderC2ERKNS_16ByteBufferWriterE(%"class.rtc::ByteBufferReader"* nocapture, %"class.rtc::ByteBufferWriter"* nocapture readonly dereferenceable(24)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rtc::ByteBufferWriter", %"class.rtc::ByteBufferWriter"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.rtc::ByteBufferReader"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  store i64 %7, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader9ReadUInt8EPh(%"class.rtc::ByteBufferReader"* nocapture, i8*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %8
  %14 = load i8, i8* %13, align 1
  store i8 %14, i8* %1, align 1
  %15 = load i64, i64* %7, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %10, %4, %2
  %18 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %4 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader9ReadBytesEPcm(%"class.rtc::ByteBufferReader"* nocapture, i8* nocapture, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %13, i64 %2, i1 false)
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %2
  store i64 %15, i64* %6, align 8
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi i1 [ true, %10 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader10ReadUInt16EPt(%"class.rtc::ByteBufferReader"* nocapture, i16*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i16* %1, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %8
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = add i64 %8, 2
  store i64 %17, i64* %7, align 8
  %18 = tail call i16 @llvm.bswap.i16(i16 %16) #11
  store i16 %18, i16* %1, align 2
  br label %19

19:                                               ; preds = %11, %4, %2
  %20 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %4 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader10ReadUInt24EPj(%"class.rtc::ByteBufferReader"* nocapture, i32*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, 3
  br i1 %10, label %21, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %8
  %15 = bitcast i8* %14 to i24*
  %16 = load i24, i24* %15, align 1
  %17 = zext i24 %16 to i32
  %18 = shl nuw i32 %17, 8
  %19 = add i64 %8, 3
  store i64 %19, i64* %7, align 8
  %20 = tail call i32 @llvm.bswap.i32(i32 %18) #11
  store i32 %20, i32* %1, align 4
  br label %21

21:                                               ; preds = %11, %4, %2
  %22 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %4 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader10ReadUInt32EPj(%"class.rtc::ByteBufferReader"* nocapture, i32*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, 4
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = add i64 %8, 4
  store i64 %17, i64* %7, align 8
  %18 = tail call i32 @llvm.bswap.i32(i32 %16) #11
  store i32 %18, i32* %1, align 4
  br label %19

19:                                               ; preds = %11, %4, %2
  %20 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %4 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader10ReadUInt64EPm(%"class.rtc::ByteBufferReader"* nocapture, i64*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i64* %1, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, 8
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = add i64 %8, 8
  store i64 %17, i64* %7, align 8
  %18 = tail call i64 @llvm.bswap.i64(i64 %16) #11
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %11, %4, %2
  %20 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %4 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader11ReadUVarintEPm(%"class.rtc::ByteBufferReader"* nocapture, i64*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i64* %1, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %7 = load i64, i64* %5, align 8
  %8 = load i64, i64* %6, align 8
  %9 = icmp eq i64 %7, %8
  br i1 %9, label %23, label %12

10:                                               ; preds = %12
  %11 = icmp eq i64 %7, %17
  br i1 %11, label %23, label %25

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %8
  %16 = load i8, i8* %15, align 1
  %17 = add i64 %8, 1
  store i64 %17, i64* %6, align 8
  %18 = and i8 %16, 127
  %19 = zext i8 %18 to i64
  %20 = icmp sgt i8 %16, -1
  br i1 %20, label %21, label %10

21:                                               ; preds = %113, %102, %91, %80, %69, %58, %47, %36, %25, %12
  %22 = phi i64 [ %19, %12 ], [ %32, %25 ], [ %43, %36 ], [ %54, %47 ], [ %65, %58 ], [ %76, %69 ], [ %87, %80 ], [ %98, %91 ], [ %109, %102 ], [ %119, %113 ]
  store i64 %22, i64* %1, align 8
  br label %23

23:                                               ; preds = %113, %4, %10, %34, %45, %56, %67, %78, %89, %100, %111, %21, %2
  %24 = phi i1 [ false, %2 ], [ true, %21 ], [ false, %111 ], [ false, %100 ], [ false, %89 ], [ false, %78 ], [ false, %67 ], [ false, %56 ], [ false, %45 ], [ false, %34 ], [ false, %10 ], [ false, %4 ], [ false, %113 ]
  ret i1 %24

25:                                               ; preds = %10
  %26 = getelementptr inbounds i8, i8* %14, i64 %17
  %27 = load i8, i8* %26, align 1
  %28 = add i64 %8, 2
  store i64 %28, i64* %6, align 8
  %29 = and i8 %27, 127
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 7
  %32 = or i64 %31, %19
  %33 = icmp sgt i8 %27, -1
  br i1 %33, label %21, label %34

34:                                               ; preds = %25
  %35 = icmp eq i64 %7, %28
  br i1 %35, label %23, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds i8, i8* %14, i64 %28
  %38 = load i8, i8* %37, align 1
  %39 = add i64 %8, 3
  store i64 %39, i64* %6, align 8
  %40 = and i8 %38, 127
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 14
  %43 = or i64 %42, %32
  %44 = icmp sgt i8 %38, -1
  br i1 %44, label %21, label %45

45:                                               ; preds = %36
  %46 = icmp eq i64 %7, %39
  br i1 %46, label %23, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8, i8* %14, i64 %39
  %49 = load i8, i8* %48, align 1
  %50 = add i64 %8, 4
  store i64 %50, i64* %6, align 8
  %51 = and i8 %49, 127
  %52 = zext i8 %51 to i64
  %53 = shl nuw nsw i64 %52, 21
  %54 = or i64 %53, %43
  %55 = icmp sgt i8 %49, -1
  br i1 %55, label %21, label %56

56:                                               ; preds = %47
  %57 = icmp eq i64 %7, %50
  br i1 %57, label %23, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds i8, i8* %14, i64 %50
  %60 = load i8, i8* %59, align 1
  %61 = add i64 %8, 5
  store i64 %61, i64* %6, align 8
  %62 = and i8 %60, 127
  %63 = zext i8 %62 to i64
  %64 = shl nuw nsw i64 %63, 28
  %65 = or i64 %64, %54
  %66 = icmp sgt i8 %60, -1
  br i1 %66, label %21, label %67

67:                                               ; preds = %58
  %68 = icmp eq i64 %7, %61
  br i1 %68, label %23, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds i8, i8* %14, i64 %61
  %71 = load i8, i8* %70, align 1
  %72 = add i64 %8, 6
  store i64 %72, i64* %6, align 8
  %73 = and i8 %71, 127
  %74 = zext i8 %73 to i64
  %75 = shl nuw nsw i64 %74, 35
  %76 = or i64 %75, %65
  %77 = icmp sgt i8 %71, -1
  br i1 %77, label %21, label %78

78:                                               ; preds = %69
  %79 = icmp eq i64 %7, %72
  br i1 %79, label %23, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds i8, i8* %14, i64 %72
  %82 = load i8, i8* %81, align 1
  %83 = add i64 %8, 7
  store i64 %83, i64* %6, align 8
  %84 = and i8 %82, 127
  %85 = zext i8 %84 to i64
  %86 = shl nuw nsw i64 %85, 42
  %87 = or i64 %86, %76
  %88 = icmp sgt i8 %82, -1
  br i1 %88, label %21, label %89

89:                                               ; preds = %80
  %90 = icmp eq i64 %7, %83
  br i1 %90, label %23, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds i8, i8* %14, i64 %83
  %93 = load i8, i8* %92, align 1
  %94 = add i64 %8, 8
  store i64 %94, i64* %6, align 8
  %95 = and i8 %93, 127
  %96 = zext i8 %95 to i64
  %97 = shl nuw nsw i64 %96, 49
  %98 = or i64 %97, %87
  %99 = icmp sgt i8 %93, -1
  br i1 %99, label %21, label %100

100:                                              ; preds = %91
  %101 = icmp eq i64 %7, %94
  br i1 %101, label %23, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds i8, i8* %14, i64 %94
  %104 = load i8, i8* %103, align 1
  %105 = add i64 %8, 9
  store i64 %105, i64* %6, align 8
  %106 = and i8 %104, 127
  %107 = zext i8 %106 to i64
  %108 = shl nuw nsw i64 %107, 56
  %109 = or i64 %108, %98
  %110 = icmp sgt i8 %104, -1
  br i1 %110, label %21, label %111

111:                                              ; preds = %102
  %112 = icmp eq i64 %7, %105
  br i1 %112, label %23, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds i8, i8* %14, i64 %105
  %115 = load i8, i8* %114, align 1
  %116 = add i64 %8, 10
  store i64 %116, i64* %6, align 8
  %117 = zext i8 %115 to i64
  %118 = shl i64 %117, 63
  %119 = or i64 %118, %109
  %120 = icmp sgt i8 %115, -1
  br i1 %120, label %21, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEm(%"class.rtc::ByteBufferReader"* nocapture, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #1 align 2 {
  %4 = icmp eq %"class.std::__1::basic_string"* %1, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %19, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %9
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %1, i8* %15, i64 %2) #11
  %17 = load i64, i64* %8, align 8
  %18 = add i64 %17, %2
  store i64 %18, i64* %8, align 8
  br label %19

19:                                               ; preds = %5, %3, %12
  %20 = phi i1 [ true, %12 ], [ false, %3 ], [ false, %5 ]
  ret i1 %20
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16ByteBufferReader7ConsumeEm(%"class.rtc::ByteBufferReader"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = add i64 %6, %1
  store i64 %10, i64* %5, align 8
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i1 [ true, %9 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc17ByteBufferWriterTINS_7BufferTIcLb0EEEE9ConstructEPKcm(%"class.rtc::ByteBufferWriterT"*, i8*, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.rtc::ByteBufferWriterT", %"class.rtc::ByteBufferWriterT"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %2
  %9 = getelementptr inbounds %"class.rtc::ByteBufferWriterT", %"class.rtc::ByteBufferWriterT"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %8
  br i1 %11, label %12, label %30

12:                                               ; preds = %5
  %13 = lshr i64 %10, 1
  %14 = add i64 %13, %10
  %15 = icmp ugt i64 %14, %8
  %16 = select i1 %15, i64 %14, i64 %8
  %17 = tail call i8* @_Znam(i64 %16) #10
  %18 = ptrtoint i8* %17 to i64
  %19 = getelementptr inbounds %"class.rtc::ByteBufferWriterT", %"class.rtc::ByteBufferWriterT"* %0, i64 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %12
  %24 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %18, i64* %24, align 8
  br label %28

25:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* nonnull align 1 %21, i64 %7, i1 false) #11
  %26 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %18, i64* %26, align 8
  tail call void @_ZdaPv(i8* nonnull %21) #10
  %27 = load i64, i64* %6, align 8
  br label %28

28:                                               ; preds = %25, %23
  %29 = phi i64 [ %27, %25 ], [ %7, %23 ]
  store i64 %16, i64* %9, align 8
  br label %30

30:                                               ; preds = %5, %28
  %31 = phi i64 [ %7, %5 ], [ %29, %28 ]
  %32 = getelementptr inbounds %"class.rtc::ByteBufferWriterT", %"class.rtc::ByteBufferWriterT"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* nonnull align 1 %1, i64 %2, i1 false) #11
  store i64 %8, i64* %6, align 8
  br label %53

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.rtc::ByteBufferWriterT", %"class.rtc::ByteBufferWriterT"* %0, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, %2
  br i1 %38, label %39, label %53

39:                                               ; preds = %35
  %40 = tail call i8* @_Znam(i64 %2) #10
  %41 = ptrtoint i8* %40 to i64
  %42 = getelementptr inbounds %"class.rtc::ByteBufferWriterT", %"class.rtc::ByteBufferWriterT"* %0, i64 0, i32 0, i32 2
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  store i64 %41, i64* %47, align 8
  br label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.rtc::ByteBufferWriterT", %"class.rtc::ByteBufferWriterT"* %0, i64 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* nonnull align 1 %44, i64 %50, i1 false) #11
  %51 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  store i64 %41, i64* %51, align 8
  tail call void @_ZdaPv(i8* nonnull %44) #10
  br label %52

52:                                               ; preds = %48, %46
  store i64 %2, i64* %36, align 8
  br label %53

53:                                               ; preds = %52, %35, %30
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #9

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
