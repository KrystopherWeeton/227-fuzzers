; ModuleID = '../../third_party/blink/renderer/core/css/resolver/style_builder_converter.cc'
source_filename = "../../third_party/blink/renderer/core/css/resolver/style_builder_converter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.192" }
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.171", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.115", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.95", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.109", [4 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { float }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.118", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.175" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.268" }
%"struct.std::__1::atomic.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__atomic_base.270" }
%"struct.std::__1::__atomic_base.270" = type { %"struct.std::__1::__cxx_atomic_impl.271" }
%"struct.std::__1::__cxx_atomic_impl.271" = type { %"struct.std::__1::__cxx_atomic_base_impl.272" }
%"struct.std::__1::__cxx_atomic_base_impl.272" = type { i32 }
%"class.blink::ShapeClipPathOperation" = type { %"class.blink::ClipPathOperation.base", %class.scoped_refptr }
%"class.blink::ClipPathOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.0", [4 x i8] }>
%"class.WTF::RefCounted.0" = type { %"class.base::RefCounted.1" }
%"class.base::RefCounted.1" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.3", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef" }
%"class.blink::DataRef" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.6" }
%"class.WTF::RefCounted.6" = type { %"class.base::RefCounted.7" }
%"class.base::RefCounted.7" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.761, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.215, %class.scoped_refptr.215, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.215, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.197" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.182", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.184" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.361", %"class.blink::Member.363", %"class.blink::Member.182", %"class.blink::Member.365", %"class.blink::Member.365", %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::Member.393", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.398", %"class.blink::HeapVector.400" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::Document"* }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.369" }
%"class.blink::HeapHashMap.369" = type { %"class.WTF::HashMap.372" }
%"class.WTF::HashMap.372" = type { %"class.WTF::HashTable.373" }
%"class.WTF::HashTable.373" = type <{ %"struct.WTF::KeyValuePair.375"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.375" = type { %"class.WTF::AtomicString", %"class.blink::Member.376" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.380", i32, %"class.blink::HeapVector.382" }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.382" = type { %"class.WTF::Vector.385" }
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"class.blink::Member.380"*, i32, i32 }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.395" }
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::HeapHashMap.397"* }
%"class.blink::HeapHashMap.397" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.400" = type { %"class.WTF::Vector.403" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::Member.406"*, i32, i32 }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.408", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.410, %"class.WTF::Vector.429", %"class.WTF::Vector.429", %"class.blink::Member", %"class.blink::Member.434", %"class.blink::HeapHashSet", %"class.blink::Member.363", %"class.WTF::HashSet.442", %"class.WTF::TextPosition", %"class.blink::Member.446", %"class.blink::HeapVector.448", %"class.blink::Member.455" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.410 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.411", %"class.WTF::Vector.413" }
%"class.WTF::RefCounted.411" = type { %"class.base::RefCounted.412" }
%"class.base::RefCounted.412" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"class.std::__1::unique_ptr.416"*, i32, i32 }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.419", %"class.WTF::String" }
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.436" }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.183" }
%"class.WTF::HashSet.442" = type { %"class.WTF::HashTable.443" }
%"class.WTF::HashTable.443" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.410, %"class.blink::Member.406", %"class.blink::Member.434" }
%"class.blink::HeapVector.448" = type { %"class.WTF::Vector.451" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::Member.434"*, i32, i32 }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.188 }
%class.scoped_refptr.188 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.189", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.189" = type { %"class.base::RefCounted.190" }
%"class.base::RefCounted.190" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.201", %"class.blink::Member.203", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.201" = type { %"class.WTF::SingleThreadedBitField.202" }
%"class.WTF::SingleThreadedBitField.202" = type { i32 }
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.207 }
%class.scoped_refptr.207 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.208", %"class.WTF::AtomicString", %"class.WTF::Vector.210" }
%"class.WTF::RefCounted.208" = type { %"class.base::RefCounted.209" }
%"class.base::RefCounted.209" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212", [32 x i8] }
%"class.WTF::VectorBufferBase.212" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1028", %"class.WTF::Vector.1028", i8, i32, %"class.blink::Member.1035", %"class.blink::Member.1037", %"class.blink::Member.1039", %"class.blink::Member.1041", %"class.blink::Member.1043", %"class.blink::Member.1045", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1053", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1059", %"class.blink::Member.1061", %"class.blink::Member.406", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1064", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.382", %"class.blink::Member.380", %"class.blink::Member.1089", %"class.blink::Member.380", %"class.blink::Member.380", %"class.blink::Member.380", %"class.blink::UserActionElementSet", %"class.blink::Member.1098", double, double, i64, i64, %"class.blink::HeapHashSet.1100", %"class.blink::HeapHashSet.1107", i16, i8, %"class.blink::Member.1114", %"class.blink::Member.1116", %"class.blink::Member.1427", %"class.blink::Member.1429", %"class.blink::TextLinkColors", %"class.blink::Member.1431", i8, [7 x i8], %"class.blink::HeapHashMap.1433", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.380", %"class.WTF::Vector.1440", %"class.blink::Member.1445", %"class.blink::Member.1447", i8, %"class.blink::Member.380", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1449", %"class.blink::HeapVector.1451", %"class.std::__1::unique_ptr.1459", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1465", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1478", %"class.WTF::Vector.1480", i8, i8, %"class.std::__1::unique_ptr.1485", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.382", %"class.blink::HeapVector.1491", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1499", i8, i32, %"class.blink::Member.1501", %"class.blink::Member.1503", %"class.blink::Member.1505", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1507", %"class.WTF::HashMap.1509", %"class.blink::Member.1514", %"class.blink::Member.1516", %"class.blink::Member.1518", %"class.blink::Member.1520", %"class.blink::Member.363", %"class.blink::Member.363", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1522", i8, i32, %"class.blink::Member.1529", %"class.blink::Member.1531", i32, %"class.blink::Member.1533", %"class.blink::Member.1535", %"class.blink::Member.1537", %"class.std::__1::unique_ptr.1539", i64, %"class.std::__1::unique_ptr.1545", i32, i32, %"class.blink::Member.1556", %"class.blink::Member.1558", %"class.blink::Member.1560", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1562", %"class.WTF::Vector.1564", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1569", %"class.blink::Member.1576", %"class.std::__1::unique_ptr.1578", %"class.blink::Member.1584", i8, i8, %"class.WTF::String", %"class.blink::Member.1586", i8, [7 x i8], %"class.blink::HeapHashMap.1588", %"class.blink::HeapObserverSet.1595", %"class.blink::Member.1603", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1605", i32, i8, i8, %"class.blink::WeakMember.1607", %"class.blink::Member.1608" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1021" }
%"class.blink::HeapHashMap.1021" = type { %"class.WTF::HashMap.1024" }
%"class.WTF::HashMap.1024" = type { %"class.WTF::HashTable.1025" }
%"class.WTF::HashTable.1025" = type <{ %"struct.WTF::KeyValuePair.1027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1027" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1031 }
%class.scoped_refptr.1031 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1032", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1032" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.268" }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1639", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1698", i32, i8, [3 x i8], %"class.blink::HeapVector.1700", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1708", %"class.blink::Member.1710", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1719", %"class.blink::Member.1837", %"class.blink::Member.1839", i8, [7 x i8] }>
%"class.blink::Supplementable.1639" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1640" }
%"class.blink::HeapHashMap.1640" = type { %"class.WTF::HashMap.1643" }
%"class.WTF::HashMap.1643" = type { %"class.WTF::HashTable.1644" }
%"class.WTF::HashTable.1644" = type <{ %"struct.WTF::KeyValuePair.1646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1646" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1647" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.989" }
%"class.blink::HeapHashSet.989" = type { %"class.WTF::HashSet.992" }
%"class.WTF::HashSet.992" = type { %"class.WTF::HashTable.993" }
%"class.WTF::HashTable.993" = type <{ %"class.blink::WeakMember.995"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.995" = type opaque
%"class.blink::Supplementable.1647" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1648" }
%"class.blink::HeapHashMap.1648" = type { %"class.WTF::HashMap.1651" }
%"class.WTF::HashMap.1651" = type { %"class.WTF::HashTable.1652" }
%"class.WTF::HashTable.1652" = type <{ %"struct.WTF::KeyValuePair.1654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1654" = type { i8*, %"class.blink::Member.1902" }
%"class.blink::Member.1902" = type { %"class.blink::MemberBase.1903" }
%"class.blink::MemberBase.1903" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1904" }
%"class.blink::Member.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1655, %"class.std::__1::unique_ptr.1664", %"class.std::__1::unique_ptr.1664", %"class.std::__1::unique_ptr.1688", %"class.std::__1::unique_ptr.1688", %"class.blink::Member.1037", i32, [4 x i8], %"class.WTF::HashSet.1694", i32, i32 }
%class.scoped_refptr.1655 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1656", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1658", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1663 }
%"class.WTF::RefCounted.1656" = type { %"class.base::RefCounted.1657" }
%"class.base::RefCounted.1657" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1658" = type { %"class.absl::optional_internal::optional_data.1659" }
%"class.absl::optional_internal::optional_data.1659" = type { %"class.absl::optional_internal::optional_data_base.1660" }
%"class.absl::optional_internal::optional_data_base.1660" = type { %"class.absl::optional_internal::optional_data_dtor_base.1661" }
%"class.absl::optional_internal::optional_data_dtor_base.1661" = type { i8, %union.anon.1662 }
%union.anon.1662 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1663 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1664" = type { %"class.std::__1::__compressed_pair.1665" }
%"class.std::__1::__compressed_pair.1665" = type { %"struct.std::__1::__compressed_pair_elem.1666" }
%"struct.std::__1::__compressed_pair_elem.1666" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1675", %"class.std::__1::map.1684"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1658" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.248 }
%union.anon.248 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1667", %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1667" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"struct.std::__1::__compressed_pair_elem.1668" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.1675" = type { %"class.std::__1::__tree.1676" }
%"class.std::__1::__tree.1676" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1677", %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1677" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.1684" = type opaque
%"class.std::__1::unique_ptr.1688" = type { %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1694" = type { %"class.WTF::HashTable.1695" }
%"class.WTF::HashTable.1695" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1698" = type { %"class.blink::MemberBase.1699" }
%"class.blink::MemberBase.1699" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1700" = type { %"class.WTF::Vector.1703" }
%"class.WTF::Vector.1703" = type { %"class.WTF::VectorBuffer.1704" }
%"class.WTF::VectorBuffer.1704" = type { %"class.WTF::VectorBufferBase.1705" }
%"class.WTF::VectorBufferBase.1705" = type { %"class.blink::Member.1706"*, i32, i32 }
%"class.blink::Member.1706" = type opaque
%"class.blink::Member.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1712", i32, i32 }
%"class.blink::HeapHashMap.1712" = type { %"class.WTF::HashMap.1715" }
%"class.WTF::HashMap.1715" = type { %"class.WTF::HashTable.1716" }
%"class.WTF::HashTable.1716" = type <{ %"struct.WTF::KeyValuePair.1718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1718" = type opaque
%"class.std::__1::unique_ptr.1719" = type { %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.1721" }
%"struct.std::__1::__compressed_pair_elem.1721" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1722" }
%"class.std::__1::unique_ptr.1722" = type { %"class.std::__1::__compressed_pair.1723" }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.1724" }
%"struct.std::__1::__compressed_pair_elem.1724" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1725" }
%"class.WTF::Vector.1725" = type { %"class.WTF::VectorBuffer.1726" }
%"class.WTF::VectorBuffer.1726" = type { %"class.WTF::VectorBufferBase.1727" }
%"class.WTF::VectorBufferBase.1727" = type { %"class.mojo::StructPtr.1728"*, i32, i32 }
%"class.mojo::StructPtr.1728" = type { %"class.std::__1::unique_ptr.1729" }
%"class.std::__1::unique_ptr.1729" = type { %"class.std::__1::__compressed_pair.1730" }
%"class.std::__1::__compressed_pair.1730" = type { %"struct.std::__1::__compressed_pair_elem.1731" }
%"struct.std::__1::__compressed_pair_elem.1731" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1732", %"class.WTF::HashMap.1739", %"class.WTF::HashMap.1744", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.558", i32, %"class.mojo::StructPtr.1749", %"class.WTF::Vector.558" }
%"class.mojo::StructPtr.1732" = type { %"class.std::__1::unique_ptr.1733" }
%"class.std::__1::unique_ptr.1733" = type { %"class.std::__1::__compressed_pair.1734" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.1735" }
%"struct.std::__1::__compressed_pair_elem.1735" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1739" = type { %"class.WTF::HashTable.1740" }
%"class.WTF::HashTable.1740" = type <{ %"struct.WTF::KeyValuePair.1743"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1743" = type opaque
%"class.WTF::HashMap.1744" = type { %"class.WTF::HashTable.1745" }
%"class.WTF::HashTable.1745" = type <{ %"struct.WTF::KeyValuePair.1748"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1748" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1749" = type { %"class.std::__1::unique_ptr.1750" }
%"class.std::__1::unique_ptr.1750" = type { %"class.std::__1::__compressed_pair.1751" }
%"class.std::__1::__compressed_pair.1751" = type { %"struct.std::__1::__compressed_pair_elem.1752" }
%"struct.std::__1::__compressed_pair_elem.1752" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.558", i8, i8, [6 x i8] }>
%"class.WTF::Vector.558" = type { %"class.WTF::VectorBuffer.559" }
%"class.WTF::VectorBuffer.559" = type { %"class.WTF::VectorBufferBase.560" }
%"class.WTF::VectorBufferBase.560" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1828" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1764", i32 }>
%"class.std::__1::unique_ptr.1764" = type { %"class.std::__1::__compressed_pair.1765" }
%"class.std::__1::__compressed_pair.1765" = type { %"struct.std::__1::__compressed_pair_elem.1766" }
%"struct.std::__1::__compressed_pair_elem.1766" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1767", %"class.absl::optional.912", %"class.absl::optional.1768", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1781", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1803", %"class.std::__1::map.1814", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1823", i8, %class.scoped_refptr.1773, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1824" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1767" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.912" = type { %"class.absl::optional_internal::optional_data.913" }
%"class.absl::optional_internal::optional_data.913" = type { %"class.absl::optional_internal::optional_data_base.914" }
%"class.absl::optional_internal::optional_data_base.914" = type { %"class.absl::optional_internal::optional_data_dtor_base.915" }
%"class.absl::optional_internal::optional_data_dtor_base.915" = type { i8, %union.anon.916 }
%union.anon.916 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1768" = type { %"class.absl::optional_internal::optional_data.1769" }
%"class.absl::optional_internal::optional_data.1769" = type { %"class.absl::optional_internal::optional_data_base.1770" }
%"class.absl::optional_internal::optional_data_base.1770" = type { %"class.absl::optional_internal::optional_data_dtor_base.1771" }
%"class.absl::optional_internal::optional_data_dtor_base.1771" = type { i8, %union.anon.1772 }
%union.anon.1772 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1773, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1774" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1774" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1087 }
%class.scoped_refptr.1087 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.273" }
%"struct.std::__1::atomic.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__atomic_base.275" }
%"struct.std::__1::__atomic_base.275" = type { %"struct.std::__1::__cxx_atomic_impl.276" }
%"struct.std::__1::__cxx_atomic_impl.276" = type { %"struct.std::__1::__cxx_atomic_base_impl.277" }
%"struct.std::__1::__cxx_atomic_base_impl.277" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1779 }
%class.scoped_refptr.1779 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1841", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1773, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.192", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1841" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1780 }
%class.scoped_refptr.1780 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1784", %class.scoped_refptr.1785 }
%"class.base::RepeatingCallback.1784" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1785 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1786", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1786" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1790", %"class.std::__1::unique_ptr.1796", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1802" }
%"class.std::__1::unique_ptr.1790" = type { %"class.std::__1::__compressed_pair.1791" }
%"class.std::__1::__compressed_pair.1791" = type { %"struct.std::__1::__compressed_pair_elem.1792" }
%"struct.std::__1::__compressed_pair_elem.1792" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1796" = type { %"class.std::__1::__compressed_pair.1797" }
%"class.std::__1::__compressed_pair.1797" = type { %"struct.std::__1::__compressed_pair_elem.1798" }
%"struct.std::__1::__compressed_pair_elem.1798" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1802" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1803" = type { %"class.std::__1::__tree.1804" }
%"class.std::__1::__tree.1804" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1805", %"class.std::__1::__compressed_pair.1809" }
%"class.std::__1::__compressed_pair.1805" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"class.std::__1::__compressed_pair.1809" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.1814" = type { %"class.std::__1::__tree.1815" }
%"class.std::__1::__tree.1815" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1816", %"class.std::__1::__compressed_pair.1820" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"class.std::__1::__compressed_pair.1820" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.base::OnceCallback.1823" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1773 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1086" }>
%"class.base::RefCountedThreadSafe.1086" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1824" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1828" = type { %"class.std::__1::__compressed_pair.1829" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1837" = type { %"class.blink::MemberBase.1838" }
%"class.blink::MemberBase.1838" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1047" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.blink::KURL"* }
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1063 }
%class.scoped_refptr.1063 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1064" = type { %"class.WTF::VectorBuffer.1065" }
%"class.WTF::VectorBuffer.1065" = type { %"class.WTF::VectorBufferBase.1066" }
%"class.WTF::VectorBufferBase.1066" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1067 }
%class.scoped_refptr.1067 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1068", i32, i32, %"class.blink::Persistent.1070" }
%"class.WTF::RefCounted.1068" = type { %"class.base::RefCounted.1069" }
%"class.base::RefCounted.1069" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1070" = type { %"class.blink::PersistentBase.1071" }
%"class.blink::PersistentBase.1071" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1074" }
%"class.blink::HeapHashMap.1074" = type { %"class.WTF::HashMap.1077" }
%"class.WTF::HashMap.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"struct.WTF::KeyValuePair.1080"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1080" = type { %"class.blink::WeakMember.1081", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1091" }
%"class.blink::HeapHashMap.1091" = type { %"class.WTF::HashMap.1094" }
%"class.WTF::HashMap.1094" = type { %"class.WTF::HashTable.1095" }
%"class.WTF::HashTable.1095" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type opaque
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1100" = type { %"class.WTF::HashSet.1103" }
%"class.WTF::HashSet.1103" = type { %"class.WTF::HashTable.1104" }
%"class.WTF::HashTable.1104" = type <{ %"class.blink::WeakMember.1106"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1106" = type opaque
%"class.blink::HeapHashSet.1107" = type { %"class.WTF::HashSet.1110" }
%"class.WTF::HashSet.1110" = type { %"class.WTF::HashTable.1111" }
%"class.WTF::HashTable.1111" = type <{ %"class.blink::WeakMember.1113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1113" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.363", i32, i32, i32, %"class.blink::Member.406", %"class.blink::Member.1120", %"class.blink::Member.1147", %"class.blink::HeapHashMap.1149", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1156", %"class.blink::HeapHashSet.1156", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1162", %"class.blink::Member.1174", %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.blink::Member.1210", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1360", %"class.blink::Member.1366", %"class.blink::HeapHashMap.1368", %"class.blink::HeapHashMap.1375", %"class.std::__1::unique_ptr.1382", i32, %"class.blink::HeapVector.1388", %"class.blink::HeapVector.1388", %"class.blink::HeapVector.1132", %"class.blink::HeapHashSet.1396", %"class.blink::HeapHashMap.1403", %"class.blink::Member.1410", %"class.blink::HeapHashMap.1412", %class.scoped_refptr.1419, %class.scoped_refptr.307, %"class.blink::Member.1324", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1420", %"class.blink::Member.380" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.182", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1124", %"class.blink::HeapVector.1132", i8 }>
%"class.blink::HeapVector.1124" = type { %"class.WTF::Vector.1127" }
%"class.WTF::Vector.1127" = type { %"class.WTF::VectorBuffer.1128" }
%"class.WTF::VectorBuffer.1128" = type { %"class.WTF::VectorBufferBase.1129" }
%"class.WTF::VectorBufferBase.1129" = type { %"class.blink::Member.1130"*, i32, i32 }
%"class.blink::Member.1130" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1143", %"class.blink::Member.1145", %"class.blink::Member.1145", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1143" = type <{ %"class.blink::Member.1145"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member", %"class.blink::Member.1145", %"class.blink::Member.1145" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1149" = type { %"class.WTF::HashMap.1152" }
%"class.WTF::HashMap.1152" = type { %"class.WTF::HashTable.1153" }
%"class.WTF::HashTable.1153" = type <{ %"struct.WTF::KeyValuePair.1155"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1155" = type opaque
%"class.blink::HeapHashSet.1156" = type { %"class.WTF::HashSet.1159" }
%"class.WTF::HashSet.1159" = type { %"class.WTF::HashTable.1160" }
%"class.WTF::HashTable.1160" = type <{ %"class.blink::Member.182"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1164", %"class.blink::Member.1166" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.380", %"class.blink::HeapHashMap.702" }
%"class.blink::HeapHashMap.702" = type { %"class.WTF::HashMap.705" }
%"class.WTF::HashMap.705" = type { %"class.WTF::HashTable.706" }
%"class.WTF::HashTable.706" = type <{ %"struct.WTF::KeyValuePair.708"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.708" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1170", %"class.blink::Member.1172" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1623", %"class.blink::Member.1166", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1630] }
%"class.blink::HeapVector.1623" = type { %"class.WTF::Vector.1626" }
%"class.WTF::Vector.1626" = type { %"class.WTF::VectorBuffer.1627" }
%"class.WTF::VectorBuffer.1627" = type { %"class.WTF::VectorBufferBase.1628" }
%"class.WTF::VectorBufferBase.1628" = type { %"class.blink::Member.1172"*, i32, i32 }
%class.sk_sp.1630 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1631, i32, %"class.absl::optional.1632", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.268" }>
%class.sk_sp.1631 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.363", %class.scoped_refptr.215, %"class.blink::SelectorFilter", %"class.blink::Member.1147", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1178" }
%"class.blink::HeapHashMap.1178" = type { %"class.WTF::HashMap.1181" }
%"class.WTF::HashMap.1181" = type { %"class.WTF::HashTable.1182" }
%"class.WTF::HashTable.1182" = type <{ %"struct.WTF::KeyValuePair.1184"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1184" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1185", %"class.std::__1::unique_ptr.1196" }
%"class.blink::HeapVector.1185" = type { %"class.WTF::Vector.1188" }
%"class.WTF::Vector.1188" = type { %"class.WTF::VectorBuffer.1189" }
%"class.WTF::VectorBuffer.1189" = type { %"class.WTF::VectorBufferBase.1190" }
%"class.WTF::VectorBufferBase.1190" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.380", %"class.WTF::Vector.1191" }
%"class.WTF::Vector.1191" = type { %"class.WTF::VectorBuffer.1192" }
%"class.WTF::VectorBuffer.1192" = type { %"class.WTF::VectorBufferBase.920", [16 x i8] }
%"class.WTF::VectorBufferBase.920" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1196" = type { %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1208", i8, [7 x i8] }>
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1232", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1214", %"class.WTF::HashMap.1214", %"class.WTF::HashMap.1214", %"class.WTF::HashMap.1219", %class.scoped_refptr.1224, %class.scoped_refptr.1231, %class.scoped_refptr.1230, %"class.WTF::Vector.429", %"class.WTF::Vector.429", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1214" = type { %"class.WTF::HashTable.1215" }
%"class.WTF::HashTable.1215" = type <{ %"struct.WTF::KeyValuePair.1218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1218" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1941 }
%class.scoped_refptr.1941 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1225", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1227", %"union.blink::InvalidationSet::Backing.1228", %"union.blink::InvalidationSet::Backing.1229", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1225" = type { %"class.base::RefCounted.1226" }
%"class.base::RefCounted.1226" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1227" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1228" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1229" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1219" = type { %"class.WTF::HashTable.1220" }
%"class.WTF::HashTable.1220" = type <{ %"struct.WTF::KeyValuePair.1223"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1223" = type opaque
%class.scoped_refptr.1224 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1230, %class.scoped_refptr.1230 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1225", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1227", %"union.blink::InvalidationSet::Backing.1228", %"union.blink::InvalidationSet::Backing.1229", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1231 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1230 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1236", %"class.blink::HeapHashMap.1236", %"class.blink::HeapHashMap.1236", %"class.blink::HeapHashMap.1236", %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1277", %"class.blink::HeapVector.1285", %"class.blink::HeapVector.1293", %"class.blink::HeapVector.1300", %"class.blink::HeapVector.1308", %"class.blink::HeapVector.1316", %"class.blink::HeapVector.1329", %"class.WTF::Vector.1336", i32, %"class.blink::Member.1342" }
%"class.blink::HeapHashMap.1236" = type { %"class.WTF::HashMap.1239" }
%"class.WTF::HashMap.1239" = type { %"class.WTF::HashTable.1240" }
%"class.WTF::HashTable.1240" = type <{ %"struct.WTF::KeyValuePair.1242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1242" = type { %"class.WTF::AtomicString", %"class.blink::Member.1951" }
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::HeapVector.1243"* }
%"class.blink::HeapVector.1243" = type { %"class.WTF::Vector.1246" }
%"class.WTF::Vector.1246" = type { %"class.WTF::VectorBuffer.1247" }
%"class.WTF::VectorBuffer.1247" = type { %"class.WTF::VectorBufferBase.1248" }
%"class.WTF::VectorBufferBase.1248" = type { %"class.blink::Member.1249"*, i32, i32 }
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1253", i64, [4 x i32] }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.203", %"class.blink::Member.1272" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1277" = type { %"class.WTF::Vector.1280" }
%"class.WTF::Vector.1280" = type { %"class.WTF::VectorBuffer.1281" }
%"class.WTF::VectorBuffer.1281" = type { %"class.WTF::VectorBufferBase.1282" }
%"class.WTF::VectorBufferBase.1282" = type { %"class.blink::Member.1283"*, i32, i32 }
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1947" }
%"class.blink::MemberBase.1947" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.203", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1285" = type { %"class.WTF::Vector.1288" }
%"class.WTF::Vector.1288" = type { %"class.WTF::VectorBuffer.1289" }
%"class.WTF::VectorBuffer.1289" = type { %"class.WTF::VectorBufferBase.1290" }
%"class.WTF::VectorBufferBase.1290" = type { %"class.blink::Member.1291"*, i32, i32 }
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.203" }
%"class.blink::HeapVector.1293" = type { %"class.WTF::Vector.1296" }
%"class.WTF::Vector.1296" = type { %"class.WTF::VectorBuffer.1297" }
%"class.WTF::VectorBuffer.1297" = type { %"class.WTF::VectorBufferBase.1298" }
%"class.WTF::VectorBufferBase.1298" = type { %"class.blink::Member.845"*, i32, i32 }
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.849", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.849" = type { %"class.WTF::Vector.852" }
%"class.WTF::Vector.852" = type { %"class.WTF::VectorBuffer.853" }
%"class.WTF::VectorBuffer.853" = type { %"class.WTF::VectorBufferBase.854" }
%"class.WTF::VectorBufferBase.854" = type { %"class.blink::Member.855"*, i32, i32 }
%"class.blink::Member.855" = type opaque
%"class.blink::HeapVector.1300" = type { %"class.WTF::Vector.1303" }
%"class.WTF::Vector.1303" = type { %"class.WTF::VectorBuffer.1304" }
%"class.WTF::VectorBuffer.1304" = type { %"class.WTF::VectorBufferBase.1305" }
%"class.WTF::VectorBufferBase.1305" = type { %"class.blink::Member.1306"*, i32, i32 }
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1949" }
%"class.blink::MemberBase.1949" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.203" }
%"class.blink::HeapVector.1308" = type { %"class.WTF::Vector.1311" }
%"class.WTF::Vector.1311" = type { %"class.WTF::VectorBuffer.1312" }
%"class.WTF::VectorBuffer.1312" = type { %"class.WTF::VectorBufferBase.1313" }
%"class.WTF::VectorBufferBase.1313" = type { %"class.blink::Member.1314"*, i32, i32 }
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", i32, [4 x i8] }>
%"class.blink::HeapVector.1316" = type { %"class.WTF::Vector.1319" }
%"class.WTF::Vector.1319" = type { %"class.WTF::VectorBuffer.1320" }
%"class.WTF::VectorBuffer.1320" = type { %"class.WTF::VectorBufferBase.1321" }
%"class.WTF::VectorBufferBase.1321" = type { %"class.blink::Member.1322"*, i32, i32 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324", %"class.blink::Member.1324" }
%"class.blink::HeapVector.1329" = type { %"class.WTF::Vector.1332" }
%"class.WTF::Vector.1332" = type { %"class.WTF::VectorBuffer.1333" }
%"class.WTF::VectorBuffer.1333" = type { %"class.WTF::VectorBufferBase.1334" }
%"class.WTF::VectorBufferBase.1334" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1253", i32, i32 }
%"class.WTF::Vector.1336" = type { %"class.WTF::VectorBuffer.1337" }
%"class.WTF::VectorBuffer.1337" = type { %"class.WTF::VectorBufferBase.1338" }
%"class.WTF::VectorBufferBase.1338" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1339, i8, [7 x i8] }>
%class.scoped_refptr.1339 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1346", %"class.blink::HeapHashMap.1346", %"class.blink::HeapHashMap.1346", %"class.blink::HeapHashMap.1346" }
%"class.blink::HeapHashMap.1346" = type { %"class.WTF::HashMap.1349" }
%"class.WTF::HashMap.1349" = type { %"class.WTF::HashTable.1350" }
%"class.WTF::HashTable.1350" = type <{ %"struct.WTF::KeyValuePair.1352"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1352" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1353" }
%"class.blink::HeapHashMap.1353" = type { %"class.WTF::HashMap.1356" }
%"class.WTF::HashMap.1356" = type { %"class.WTF::HashTable.1357" }
%"class.WTF::HashTable.1357" = type <{ %"struct.WTF::KeyValuePair.1359"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1359" = type { %"class.blink::Member.361", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1942", %"class.WTF::Vector.1942" }
%"class.WTF::Vector.1942" = type { %"class.WTF::VectorBuffer.1943" }
%"class.WTF::VectorBuffer.1943" = type { %"class.WTF::VectorBufferBase.1944" }
%"class.WTF::VectorBufferBase.1944" = type { %class.scoped_refptr.1941*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1360" = type { %"class.WTF::HashSet.1363" }
%"class.WTF::HashSet.1363" = type { %"class.WTF::HashTable.1364" }
%"class.WTF::HashTable.1364" = type <{ %"class.blink::Member.380"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1368" = type { %"class.WTF::HashMap.1371" }
%"class.WTF::HashMap.1371" = type { %"class.WTF::HashTable.1372" }
%"class.WTF::HashTable.1372" = type <{ %"struct.WTF::KeyValuePair.1374"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1374" = type opaque
%"class.blink::HeapHashMap.1375" = type { %"class.WTF::HashMap.1378" }
%"class.WTF::HashMap.1378" = type { %"class.WTF::HashTable.1379" }
%"class.WTF::HashTable.1379" = type <{ %"struct.WTF::KeyValuePair.1381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1381" = type opaque
%"class.std::__1::unique_ptr.1382" = type { %"class.std::__1::__compressed_pair.1383" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.1384" }
%"struct.std::__1::__compressed_pair_elem.1384" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1388" = type { %"class.WTF::Vector.1391" }
%"class.WTF::Vector.1391" = type { %"class.WTF::VectorBuffer.1392" }
%"class.WTF::VectorBuffer.1392" = type { %"class.WTF::VectorBufferBase.1393" }
%"class.WTF::VectorBufferBase.1393" = type { %"struct.std::__1::pair.1394"*, i32, i32 }
%"struct.std::__1::pair.1394" = type opaque
%"class.blink::HeapVector.1132" = type { %"class.WTF::Vector.1135" }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %"struct.std::__1::pair.1138"*, i32, i32 }
%"struct.std::__1::pair.1138" = type opaque
%"class.blink::HeapHashSet.1396" = type { %"class.WTF::HashSet.1399" }
%"class.WTF::HashSet.1399" = type { %"class.WTF::HashTable.1400" }
%"class.WTF::HashTable.1400" = type <{ %"class.blink::WeakMember.1402"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1402" = type { %"class.blink::MemberBase.407" }
%"class.blink::HeapHashMap.1403" = type { %"class.WTF::HashMap.1406" }
%"class.WTF::HashMap.1406" = type { %"class.WTF::HashTable.1407" }
%"class.WTF::HashTable.1407" = type <{ %"struct.WTF::KeyValuePair.1409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1409" = type { %"class.WTF::AtomicString", %"class.blink::Member.845" }
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1412" = type { %"class.WTF::HashMap.1415" }
%"class.WTF::HashMap.1415" = type { %"class.WTF::HashTable.1416" }
%"class.WTF::HashTable.1416" = type <{ %"struct.WTF::KeyValuePair.1418"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1418" = type opaque
%class.scoped_refptr.1419 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.307 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.308", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.308" = type { %"class.base::RefCounted.309" }
%"class.base::RefCounted.309" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent.312" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1882 }
%class.scoped_refptr.1882 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1883", %"class.WTF::Vector.558", %"class.WTF::Vector.1885", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1883" = type { %"class.base::RefCounted.1884" }
%"class.base::RefCounted.1884" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1885" = type { %"class.WTF::VectorBuffer.1886" }
%"class.WTF::VectorBuffer.1886" = type { %"class.WTF::VectorBufferBase.1887" }
%"class.WTF::VectorBufferBase.1887" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1888 }
%union.anon.1888 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent.312" = type { %"class.blink::PersistentBase.313" }
%"class.blink::PersistentBase.313" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.316" }
%"class.WTF::HashMap.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"struct.WTF::KeyValuePair.319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.319" = type opaque
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::CSSValue"* }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1420" = type { %"class.WTF::HashSet.1423" }
%"class.WTF::HashSet.1423" = type { %"class.WTF::HashTable.1424" }
%"class.WTF::HashTable.1424" = type <{ %"class.blink::Member.1426"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1426" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1433" = type { %"class.WTF::HashMap.1436" }
%"class.WTF::HashMap.1436" = type { %"class.WTF::HashTable.1437" }
%"class.WTF::HashTable.1437" = type <{ %"struct.WTF::KeyValuePair.1439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1439" = type opaque
%"class.WTF::Vector.1440" = type { %"class.WTF::VectorBuffer.1441" }
%"class.WTF::VectorBuffer.1441" = type { %"class.WTF::VectorBufferBase.1442" }
%"class.WTF::VectorBufferBase.1442" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1451" = type { %"class.WTF::Vector.1454" }
%"class.WTF::Vector.1454" = type { %"class.WTF::VectorBuffer.1455" }
%"class.WTF::VectorBuffer.1455" = type { %"class.WTF::VectorBufferBase.1456" }
%"class.WTF::VectorBufferBase.1456" = type { %"class.blink::Member.1457"*, i32, i32 }
%"class.blink::Member.1457" = type opaque
%"class.std::__1::unique_ptr.1459" = type { %"class.std::__1::__compressed_pair.1460" }
%"class.std::__1::__compressed_pair.1460" = type { %"struct.std::__1::__compressed_pair_elem.1461" }
%"struct.std::__1::__compressed_pair_elem.1461" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1465" = type { %"class.WTF::HashSet.1468" }
%"class.WTF::HashSet.1468" = type { %"class.WTF::HashTable.1469" }
%"class.WTF::HashTable.1469" = type <{ %"class.blink::WeakMember.1471"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1471" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1472", i32, [4 x i8] }>
%"class.WTF::Vector.1472" = type { %"class.WTF::VectorBuffer.1473" }
%"class.WTF::VectorBuffer.1473" = type { %"class.WTF::VectorBufferBase.1474" }
%"class.WTF::VectorBufferBase.1474" = type { %"struct.std::__1::pair.1475"*, i32, i32 }
%"struct.std::__1::pair.1475" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1480" = type { %"class.WTF::VectorBuffer.1481" }
%"class.WTF::VectorBuffer.1481" = type { %"class.WTF::VectorBufferBase.1482" }
%"class.WTF::VectorBufferBase.1482" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1485" = type { %"class.std::__1::__compressed_pair.1486" }
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1491" = type { %"class.WTF::Vector.1494" }
%"class.WTF::Vector.1494" = type { %"class.WTF::VectorBuffer.1495" }
%"class.WTF::VectorBuffer.1495" = type { %"class.WTF::VectorBufferBase.1496" }
%"class.WTF::VectorBufferBase.1496" = type { %"class.blink::Member.1497"*, i32, i32 }
%"class.blink::Member.1497" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.363" }
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ %"struct.WTF::KeyValuePair.1513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1513" = type opaque
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1088", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1085, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.1085 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1088" = type { %"class.blink::MemberBase.364" }
%"class.blink::HeapHashSet.1522" = type { %"class.WTF::HashSet.1525" }
%"class.WTF::HashSet.1525" = type { %"class.WTF::HashTable.1526" }
%"class.WTF::HashTable.1526" = type <{ %"class.blink::Member.1528"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1528" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1539" = type { %"class.std::__1::__compressed_pair.1540" }
%"class.std::__1::__compressed_pair.1540" = type { %"struct.std::__1::__compressed_pair_elem.1541" }
%"struct.std::__1::__compressed_pair_elem.1541" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1545" = type { %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1547" }
%"struct.std::__1::__compressed_pair_elem.1547" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.442", %"class.WTF::HashSet.442", %"class.WTF::HashSet.442", %"class.WTF::HashSet.442", %"class.WTF::HashSet.442", %"class.WTF::HashSet.442", i32, [4 x i8], %"class.WTF::HashMap.1548", %"class.WTF::HashMap.1548", %"class.WTF::HashMap.1548", %"class.WTF::HashMap.1548", %"class.WTF::HashMap.1548", %"class.WTF::HashMap.1548", %"class.WTF::HashMap.1548", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1548" = type { %"class.WTF::HashTable.1549" }
%"class.WTF::HashTable.1549" = type <{ %"struct.WTF::KeyValuePair.1552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1552" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1564" = type { %"class.WTF::VectorBuffer.1565" }
%"class.WTF::VectorBuffer.1565" = type { %"class.WTF::VectorBufferBase.1566" }
%"class.WTF::VectorBufferBase.1566" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1569" = type { %"class.WTF::HashMap.1572" }
%"class.WTF::HashMap.1572" = type { %"class.WTF::HashTable.1573" }
%"class.WTF::HashTable.1573" = type <{ %"struct.WTF::KeyValuePair.1575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1575" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1578" = type { %"class.std::__1::__compressed_pair.1579" }
%"class.std::__1::__compressed_pair.1579" = type { %"struct.std::__1::__compressed_pair_elem.1580" }
%"struct.std::__1::__compressed_pair_elem.1580" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1588" = type { %"class.WTF::HashMap.1591" }
%"class.WTF::HashMap.1591" = type { %"class.WTF::HashTable.1592" }
%"class.WTF::HashTable.1592" = type <{ %"struct.WTF::KeyValuePair.1594"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1594" = type opaque
%"class.blink::HeapObserverSet.1595" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1596" }
%"class.blink::HeapHashSet.1596" = type { %"class.WTF::HashSet.1599" }
%"class.WTF::HashSet.1599" = type { %"class.WTF::HashTable.1600" }
%"class.WTF::HashTable.1600" = type <{ %"class.blink::WeakMember.1602"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1602" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.363", %"class.blink::HeapHashSet.1612", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1619", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1612" = type { %"class.WTF::HashSet.1615" }
%"class.WTF::HashSet.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"class.blink::Member.1618"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1618" = type opaque
%"class.blink::HeapTaskRunnerTimer.1619" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1620", { i64, i64 } }
%"class.blink::WeakMember.1620" = type { %"class.blink::MemberBase.1606" }
%"class.blink::WeakMember.1607" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.761 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.746", %"class.std::__1::unique_ptr.748" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef.216", %"class.blink::DataRef.292", %"class.blink::DataRef.460", %"class.blink::DataRef.464", %"class.blink::DataRef.657", %"class.blink::DataRef.729", %"class.blink::DataRef.733", %"class.blink::DataRef.737", %"class.blink::DataRef.741", [20 x i8] }>
%"class.blink::DataRef.216" = type { %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.218", %"class.blink::DataRef.220", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.218" = type { %"class.base::RefCounted.219" }
%"class.base::RefCounted.219" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.220" = type { %class.scoped_refptr.221 }
%class.scoped_refptr.221 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.222", %"class.blink::Font" }
%"class.WTF::RefCounted.222" = type { %"class.base::RefCounted.223" }
%"class.base::RefCounted.223" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.256 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.225, %class.scoped_refptr.233, %class.scoped_refptr.243, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.255 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1842", [4 x i8] }>
%"class.WTF::RefCounted.1842" = type { %"class.base::RefCounted.1843" }
%"class.base::RefCounted.1843" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.225 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.231", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.226" }
%"class.WTF::Vector.226" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.231" = type { %"class.base::RefCounted.232" }
%"class.base::RefCounted.232" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.233 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.234", %"class.WTF::RefCounted.241", [4 x i8] }>
%"class.blink::FontSettings.234" = type { %"class.WTF::Vector.235" }
%"class.WTF::Vector.235" = type { %"class.WTF::VectorBuffer.236" }
%"class.WTF::VectorBuffer.236" = type { %"class.WTF::VectorBufferBase.237" }
%"class.WTF::VectorBufferBase.237" = type { %"class.blink::FontTagValuePair.238"*, i32, i32 }
%"class.blink::FontTagValuePair.238" = type { i32, float }
%"class.WTF::RefCounted.241" = type { %"class.base::RefCounted.242" }
%"class.base::RefCounted.242" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.243 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.244", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.252, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.244" = type { %"class.base::RefCounted.245" }
%"class.base::RefCounted.245" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.252 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.253", [4 x i8] }>
%"class.WTF::RefCounted.253" = type { %"class.base::RefCounted.254" }
%"class.base::RefCounted.254" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.255 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.256 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.257", %"class.WTF::Vector.259", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.257" = type { %"class.base::RefCounted.258" }
%"class.base::RefCounted.258" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261", [8 x i8] }
%"class.WTF::VectorBufferBase.261" = type { %class.scoped_refptr.262*, i32, i32 }
%class.scoped_refptr.262 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.263", [4 x i8] }>
%"class.WTF::RefCounted.263" = type { %"class.base::RefCounted.264" }
%"class.base::RefCounted.264" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.279", %class.scoped_refptr.286, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.263" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.267 }
%union.anon.267 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.278, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.268" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.273" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.278 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.282, %class.scoped_refptr.282 }
%class.scoped_refptr.282 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.286 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.287", [4 x i8] }>
%"class.WTF::RefCounted.287" = type { %"class.base::RefCounted.288" }
%"class.base::RefCounted.288" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.289" }
%"class.blink::PersistentBase.289" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.290" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.290" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.291 }
%class.scoped_refptr.291 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.292" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.294", [4 x i8], %"class.blink::DataRef.296", %"class.blink::DataRef.330", %"class.WTF::Vector.334", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.338, %class.scoped_refptr.347, %"class.blink::Persistent", %"class.blink::Persistent.355", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.294" = type { %"class.base::RefCounted.295" }
%"class.base::RefCounted.295" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.296" = type { %class.scoped_refptr.297 }
%class.scoped_refptr.297 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.298", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.300, %class.scoped_refptr.307, %"class.blink::Persistent.320", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.298" = type { %"class.base::RefCounted.299" }
%"class.base::RefCounted.299" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.300 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.301", %"class.WTF::Vector.302" }
%"class.base::RefCountedThreadSafe.301" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.302" = type { %"class.WTF::VectorBuffer.303" }
%"class.WTF::VectorBuffer.303" = type { %"class.WTF::VectorBufferBase.304" }
%"class.WTF::VectorBufferBase.304" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.320" = type { %"class.blink::PersistentBase.321" }
%"class.blink::PersistentBase.321" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.324" }
%"class.WTF::Vector.324" = type { %"class.WTF::VectorBuffer.325" }
%"class.WTF::VectorBuffer.325" = type { %"class.WTF::VectorBufferBase.326" }
%"class.WTF::VectorBufferBase.326" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.327", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::StyleImage"* }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.330" = type { %class.scoped_refptr.331 }
%class.scoped_refptr.331 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.332", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.332" = type { %"class.base::RefCounted.333" }
%"class.base::RefCounted.333" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.334" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.212" }
%class.scoped_refptr.338 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.339", %"class.WTF::Vector.341" }
%"class.WTF::RefCounted.339" = type { %"class.base::RefCounted.340" }
%"class.base::RefCounted.340" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343" }
%"class.WTF::VectorBufferBase.343" = type { %"struct.std::__1::pair.344"*, i32, i32 }
%"struct.std::__1::pair.344" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.347 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.348", [4 x i8], %"class.WTF::Vector.350" }
%"class.WTF::RefCounted.348" = type { %"class.base::RefCounted.349" }
%"class.base::RefCounted.349" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.352", [28 x i8] }>
%"class.WTF::VectorBufferBase.352" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.355" = type { %"class.blink::PersistentBase.356" }
%"class.blink::PersistentBase.356" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.359", %"class.blink::Member.458" }
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.460" = type { %class.scoped_refptr.461 }
%class.scoped_refptr.461 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.462", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.462" = type { %"class.base::RefCounted.463" }
%"class.base::RefCounted.463" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.464" = type { %class.scoped_refptr.465 }
%class.scoped_refptr.465 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.466", [4 x i8], %"class.blink::DataRef.468", %"class.blink::DataRef.522", %"class.blink::TransformOperations", %class.scoped_refptr.347, %"class.blink::Persistent.651", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.466" = type { %"class.base::RefCounted.467" }
%"class.base::RefCounted.467" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.468" = type { %class.scoped_refptr.469 }
%class.scoped_refptr.469 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.470", [4 x i8], %"class.blink::DataRef.472", %"class.blink::Persistent.498", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.470" = type { %"class.base::RefCounted.471" }
%"class.base::RefCounted.471" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.472" = type { %class.scoped_refptr.473 }
%class.scoped_refptr.473 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.474", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.492, %class.scoped_refptr, %class.scoped_refptr.493, %class.scoped_refptr.496, %class.scoped_refptr.497, %class.scoped_refptr.2, %"class.blink::Persistent.498", %"class.blink::Persistent.513", %"class.absl::optional.517", %"class.absl::optional.517", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.474" = type { %"class.base::RefCounted.475" }
%"class.base::RefCounted.475" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.476", %"class.std::__1::unique_ptr.481" }
%"class.WTF::Vector.476" = type { %"class.WTF::VectorBuffer.477" }
%"class.WTF::VectorBuffer.477" = type { %"class.WTF::VectorBufferBase.478" }
%"class.WTF::VectorBufferBase.478" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.484", %"class.WTF::Vector.476", i32, i32 }
%"class.WTF::Vector.484" = type { %"class.WTF::VectorBuffer.485" }
%"class.WTF::VectorBuffer.485" = type { %"class.WTF::VectorBufferBase.486" }
%"class.WTF::VectorBufferBase.486" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.492 = type { %"class.blink::ClipPathOperation"* }
%class.scoped_refptr.493 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.494" }>
%"class.WTF::RefCounted.494" = type { %"class.base::RefCounted.495" }
%"class.base::RefCounted.495" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.496 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.497 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.2 = type { %"class.blink::StyleReflection"* }
%"class.blink::Persistent.513" = type { %"class.blink::PersistentBase.514" }
%"class.blink::PersistentBase.514" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr, %"class.blink::Member.327", i32, [4 x i8] }>
%"class.absl::optional.517" = type { %"class.absl::optional_internal::optional_data.518" }
%"class.absl::optional_internal::optional_data.518" = type { %"class.absl::optional_internal::optional_data_base.519" }
%"class.absl::optional_internal::optional_data_base.519" = type { %"class.absl::optional_internal::optional_data_dtor_base.520" }
%"class.absl::optional_internal::optional_data_dtor_base.520" = type { i8, [3 x i8], %union.anon.521 }
%union.anon.521 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.498" = type { %"class.blink::PersistentBase.499" }
%"class.blink::PersistentBase.499" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.502" }
%"class.blink::HeapVector.502" = type { %"class.WTF::Vector.505" }
%"class.WTF::Vector.505" = type { %"class.WTF::VectorBuffer.506" }
%"class.WTF::VectorBuffer.506" = type { %"class.WTF::VectorBufferBase.507" }
%"class.WTF::VectorBufferBase.507" = type { %"class.blink::Member.508"*, i32, i32 }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.522" = type { %class.scoped_refptr.523 }
%class.scoped_refptr.523 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.524", %"class.blink::DataRef.526", %"class.blink::DataRef.530", %"class.blink::DataRef.539", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.568", %"class.std::__1::unique_ptr.579", %"class.std::__1::unique_ptr.617", %"class.std::__1::unique_ptr.628", %"class.std::__1::unique_ptr.639", %"class.WTF::Vector.558", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.524" = type { %"class.base::RefCounted.525" }
%"class.base::RefCounted.525" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.526" = type { %class.scoped_refptr.527 }
%class.scoped_refptr.527 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.528", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.528" = type { %"class.base::RefCounted.529" }
%"class.base::RefCounted.529" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.530" = type { %class.scoped_refptr.531 }
%class.scoped_refptr.531 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.532", [4 x i8], %"class.WTF::Vector.534", i8, [7 x i8] }>
%"class.WTF::RefCounted.532" = type { %"class.base::RefCounted.533" }
%"class.base::RefCounted.533" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.534" = type { %"class.WTF::VectorBuffer.535" }
%"class.WTF::VectorBuffer.535" = type { %"class.WTF::VectorBufferBase.536" }
%"class.WTF::VectorBufferBase.536" = type { i32*, i32, i32 }
%"class.blink::DataRef.539" = type { %class.scoped_refptr.540 }
%class.scoped_refptr.540 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.541", [4 x i8], %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.553", %"class.WTF::HashMap.553", %"class.WTF::HashMap.553", %"class.WTF::HashMap.553", %"class.WTF::HashMap.563", %"class.WTF::Vector.476", %"class.WTF::Vector.476", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.541" = type { %"class.base::RefCounted.542" }
%"class.base::RefCounted.542" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { %"class.WTF::String", %"class.WTF::Vector.548" }
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { i64*, i32, i32 }
%"class.WTF::HashMap.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"struct.WTF::KeyValuePair.557"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.557" = type { i64, %"class.WTF::Vector.558" }
%"class.WTF::HashMap.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"struct.WTF::KeyValuePair.567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.567" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1936", %"class.absl::optional.1936", %"class.absl::optional.1936" }
%"class.absl::optional.1936" = type { %"class.absl::optional_internal::optional_data.1937" }
%"class.absl::optional_internal::optional_data.1937" = type { %"class.absl::optional_internal::optional_data_base.1938" }
%"class.absl::optional_internal::optional_data_base.1938" = type { %"class.absl::optional_internal::optional_data_dtor_base.1939" }
%"class.absl::optional_internal::optional_data_dtor_base.1939" = type { i8, %union.anon.1940 }
%union.anon.1940 = type { i32 }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.334", %"class.WTF::Vector.594", %"class.WTF::Vector.582", %"class.WTF::Vector.599", %"class.WTF::Vector.604", %"class.WTF::Vector.609" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.582", %"class.WTF::Vector.582", %"class.WTF::Vector.587" }
%"class.WTF::Vector.587" = type { %"class.WTF::VectorBuffer.588" }
%"class.WTF::VectorBuffer.588" = type { %"class.WTF::VectorBufferBase.589" }
%"class.WTF::VectorBufferBase.589" = type { %class.scoped_refptr.590*, i32, i32 }
%class.scoped_refptr.590 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.591" }
%"class.base::RefCountedThreadSafe.591" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.582" = type { %"class.WTF::VectorBuffer.583" }
%"class.WTF::VectorBuffer.583" = type { %"class.WTF::VectorBufferBase.584" }
%"class.WTF::VectorBufferBase.584" = type { double*, i32, i32 }
%"class.WTF::Vector.599" = type { %"class.WTF::VectorBuffer.600" }
%"class.WTF::VectorBuffer.600" = type { %"class.WTF::VectorBufferBase.601" }
%"class.WTF::VectorBufferBase.601" = type { i32*, i32, i32 }
%"class.WTF::Vector.604" = type { %"class.WTF::VectorBuffer.605" }
%"class.WTF::VectorBuffer.605" = type { %"class.WTF::VectorBufferBase.606" }
%"class.WTF::VectorBufferBase.606" = type { i32*, i32, i32 }
%"class.WTF::Vector.609" = type { %"class.WTF::VectorBuffer.610" }
%"class.WTF::VectorBuffer.610" = type { %"class.WTF::VectorBufferBase.611" }
%"class.WTF::VectorBufferBase.611" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.620" }
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.631" }
%"class.WTF::Vector.631" = type { %"class.WTF::VectorBuffer.632" }
%"class.WTF::VectorBuffer.632" = type { %"class.WTF::VectorBufferBase.633" }
%"class.WTF::VectorBufferBase.633" = type { %"class.blink::Persistent"*, i32, i32 }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.645" }
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { %class.scoped_refptr.648*, i32, i32 }
%class.scoped_refptr.648 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.494", [4 x i8] }>
%"class.blink::Persistent.651" = type { %"class.blink::PersistentBase.652" }
%"class.blink::PersistentBase.652" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.655" }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.657" = type { %class.scoped_refptr.658 }
%class.scoped_refptr.658 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.659", [4 x i8], %"class.blink::DataRef.661", %"class.blink::DataRef.665", %"class.blink::DataRef.691", %"class.blink::DataRef.709", %"class.blink::DataRef.721", %"class.blink::DataRef.725", %class.scoped_refptr.695, i32, [4 x i8] }>
%"class.WTF::RefCounted.659" = type { %"class.base::RefCounted.660" }
%"class.base::RefCounted.660" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.661" = type { %class.scoped_refptr.662 }
%class.scoped_refptr.662 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.663", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.663" = type { %"class.base::RefCounted.664" }
%"class.base::RefCounted.664" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.665" = type { %class.scoped_refptr.666 }
%class.scoped_refptr.666 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.667", %class.scoped_refptr.669, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.667" = type { %"class.base::RefCounted.668" }
%"class.base::RefCounted.668" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.669 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.681", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.0" }>
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type { %"class.WTF::Vector.673" }
%"class.WTF::Vector.673" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675" }
%"class.WTF::VectorBufferBase.675" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.684, i32, %"struct.std::__1::atomic.273", %"struct.std::__1::atomic.273", i8, i8 }>
%class.sk_sp.684 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.685, %class.SkTDArray.686, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.268" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.685 = type { i8*, i32, i32 }
%class.SkTDArray.686 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.687 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.268", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.687 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.171", [3 x i8] }
%"class.blink::DataRef.691" = type { %class.scoped_refptr.692 }
%class.scoped_refptr.692 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.693", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.693" = type { %"class.base::RefCounted.694" }
%"class.base::RefCounted.694" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.695, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.709" = type { %class.scoped_refptr.710 }
%class.scoped_refptr.710 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.711", [4 x i8], %class.scoped_refptr.713, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.713 = type { %"class.base::RefCountedData.714"* }
%"class.base::RefCountedData.714" = type { %"class.base::RefCountedThreadSafe.715", %"class.WTF::Vector.716" }
%"class.base::RefCountedThreadSafe.715" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.718" }
%"class.WTF::VectorBufferBase.718" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.721" = type { %class.scoped_refptr.722 }
%class.scoped_refptr.722 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.723", %class.scoped_refptr.695, %class.scoped_refptr.695, %class.scoped_refptr.695 }
%"class.WTF::RefCounted.723" = type { %"class.base::RefCounted.724" }
%"class.base::RefCounted.724" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.725" = type { %class.scoped_refptr.726 }
%class.scoped_refptr.726 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.727", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.727" = type { %"class.base::RefCounted.728" }
%"class.base::RefCounted.728" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.695 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.696", %"class.blink::Persistent.698", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.698" = type { %"class.blink::PersistentBase.699" }
%"class.blink::PersistentBase.699" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DataRef.729" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.731", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.733" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.735", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.735" = type { %"class.base::RefCounted.736" }
%"class.base::RefCounted.736" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.737" = type { %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.739", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.739" = type { %"class.base::RefCounted.740" }
%"class.base::RefCounted.740" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.741" = type { %class.scoped_refptr.742 }
%class.scoped_refptr.742 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.743", %class.scoped_refptr.745 }
%"class.WTF::RefCounted.743" = type { %"class.base::RefCounted.744" }
%"class.base::RefCounted.744" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.745 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1019", %"class.blink::StyleVariables", %class.scoped_refptr.745 }
%"class.WTF::RefCounted.1019" = type { %"class.base::RefCounted.1020" }
%"class.base::RefCounted.1020" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.746" = type { %"class.base::RefCounted.747" }
%"class.base::RefCounted.747" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.751" }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.WTF::Vector.754"* }
%"class.WTF::Vector.754" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.215 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.762", %"class.WTF::Vector.918", %"class.blink::HeapHashSet.923", %"class.WTF::Vector.918", %"class.blink::HeapVector.930", %"class.blink::HeapVector.937", %"class.blink::HeapHashMap.944", %"class.WTF::HashSet.951", %"class.WTF::HashSet.951", %"class.blink::HeapHashMap.955", %"class.blink::HeapHashMap.955", %"class.blink::HeapHashMap.955", %"class.blink::HeapHashMap.955" }
%"class.blink::HeapVector.762" = type { %"class.WTF::Vector.765" }
%"class.WTF::Vector.765" = type { %"class.WTF::VectorBuffer.766" }
%"class.WTF::VectorBuffer.766" = type { %"class.WTF::VectorBufferBase.767" }
%"class.WTF::VectorBufferBase.767" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.768", %"struct.blink::Timing", %"class.blink::Member.845", i32, %"class.blink::Member.857", %"class.WTF::Vector.609" }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.791", i8, %"class.absl::optional.772", %"class.absl::optional.840" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.770", %"struct.blink::Timing", %"class.blink::Member.777", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.772", %"class.absl::optional.786", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.781", %"class.absl::optional.781", i8, i8, i8, %"class.absl::optional.772", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.781" = type { %"class.absl::optional_internal::optional_data.782" }
%"class.absl::optional_internal::optional_data.782" = type { %"class.absl::optional_internal::optional_data_base.783" }
%"class.absl::optional_internal::optional_data_base.783" = type { %"class.absl::optional_internal::optional_data_dtor_base.784" }
%"class.absl::optional_internal::optional_data_dtor_base.784" = type { i8, %union.anon.785 }
%union.anon.785 = type { double }
%"class.absl::optional.786" = type { %"class.absl::optional_internal::optional_data.787" }
%"class.absl::optional_internal::optional_data.787" = type { %"class.absl::optional_internal::optional_data_base.788" }
%"class.absl::optional_internal::optional_data_base.788" = type { %"class.absl::optional_internal::optional_data_dtor_base.789" }
%"class.absl::optional_internal::optional_data_dtor_base.789" = type { i8, %union.anon.790 }
%union.anon.790 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.795", %"class.blink::Member.803", %"class.blink::Member.828", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.590, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.795" = type { %"class.WTF::Vector.798" }
%"class.WTF::Vector.798" = type { %"class.WTF::VectorBuffer.799" }
%"class.WTF::VectorBuffer.799" = type { %"class.WTF::VectorBufferBase.800" }
%"class.WTF::VectorBufferBase.800" = type { %"class.blink::Member.801"*, i32, i32 }
%"class.blink::Member.801" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.781", %"class.absl::optional.1916", %class.scoped_refptr.590 }
%"class.absl::optional.1916" = type { %"class.absl::optional_internal::optional_data.1917" }
%"class.absl::optional_internal::optional_data.1917" = type { %"class.absl::optional_internal::optional_data_base.1918" }
%"class.absl::optional_internal::optional_data_base.1918" = type { %"class.absl::optional_internal::optional_data_dtor_base.1919" }
%"class.absl::optional_internal::optional_data_dtor_base.1919" = type { i8, %union.anon.1920 }
%union.anon.1920 = type { i32 }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::HeapHashMap.805"* }
%"class.blink::HeapHashMap.805" = type { %"class.WTF::HashMap.808" }
%"class.WTF::HashMap.808" = type { %"class.WTF::HashTable.809" }
%"class.WTF::HashTable.809" = type <{ %"struct.WTF::KeyValuePair.811"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.811" = type { %"class.blink::PropertyHandle", %"class.blink::Member.813" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.812, %"class.WTF::AtomicString" }
%union.anon.812 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.817" }
%"class.blink::HeapVector.817" = type { %"class.WTF::Vector.820" }
%"class.WTF::Vector.820" = type { %"class.WTF::VectorBuffer.821" }
%"class.WTF::VectorBuffer.821" = type { %"class.WTF::VectorBufferBase.822" }
%"class.WTF::VectorBufferBase.822" = type { %"class.blink::Member.823"*, i32, i32 }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.590, i32, [4 x i8] }>
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.832" }
%"class.blink::HeapVector.832" = type { %"class.WTF::Vector.835" }
%"class.WTF::Vector.835" = type { %"class.WTF::VectorBuffer.836" }
%"class.WTF::VectorBuffer.836" = type { %"class.WTF::VectorBufferBase.837" }
%"class.WTF::VectorBufferBase.837" = type { %"class.blink::Member.838"*, i32, i32 }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1909", %class.scoped_refptr.590, double, double, double, double }
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.772" = type { %"class.absl::optional_internal::optional_data.773" }
%"class.absl::optional_internal::optional_data.773" = type { %"class.absl::optional_internal::optional_data_base.774" }
%"class.absl::optional_internal::optional_data_base.774" = type { %"class.absl::optional_internal::optional_data_dtor_base.775" }
%"class.absl::optional_internal::optional_data_dtor_base.775" = type { i8, %union.anon.776 }
%union.anon.776 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.840" = type { %"class.absl::optional_internal::optional_data.841" }
%"class.absl::optional_internal::optional_data.841" = type { %"class.absl::optional_internal::optional_data_base.842" }
%"class.absl::optional_internal::optional_data_base.842" = type { %"class.absl::optional_internal::optional_data_dtor_base.843" }
%"class.absl::optional_internal::optional_data_dtor_base.843" = type { i8, %union.anon.844 }
%union.anon.844 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.772", i32, [4 x i8], %class.scoped_refptr.590, i16, [6 x i8] }>
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.363", i32, [4 x i8], %"class.blink::HeapHashSet.859", %"class.blink::HeapHashSet.867", %"class.std::__1::unique_ptr.874", %"class.absl::optional.907" }
%"class.blink::HeapHashSet.859" = type { %"class.WTF::HashSet.862" }
%"class.WTF::HashSet.862" = type { %"class.WTF::HashTable.863" }
%"class.WTF::HashTable.863" = type <{ %"class.blink::Member.865"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.781", %"class.absl::optional.772", %"class.absl::optional.772", %"class.absl::optional.840", %"class.absl::optional.772", i8, [3 x i8], i32, %"class.blink::Member.996", %"class.blink::Member.996", %"class.blink::Member.998", %"class.blink::Member.363", %"class.blink::Member.857", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1000", %"class.blink::Member.1000", %"class.blink::Member.1000", %"class.std::__1::unique_ptr.1002", i8, [3 x i8], i32, %"class.blink::Member.1008", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.980" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.968" }
%"class.blink::HeapVector.968" = type { %"class.WTF::Vector.971" }
%"class.WTF::Vector.971" = type { %"class.WTF::VectorBuffer.972" }
%"class.WTF::VectorBuffer.972" = type { %"class.WTF::VectorBufferBase.973", [32 x i8] }
%"class.WTF::VectorBufferBase.973" = type { %"struct.std::__1::pair.974"*, i32, i32 }
%"struct.std::__1::pair.974" = type { %"class.WTF::AtomicString", %"class.blink::Member.975" }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::HeapVector.977"* }
%"class.blink::HeapVector.977" = type opaque
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.WTF::Vector.983"* }
%"class.WTF::Vector.983" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.987" }
%"class.blink::WeakMember.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.781", %"class.absl::optional.781", double, i8, i32 }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1012", %"class.std::__1::unique_ptr.1013", %"class.blink::Member.865" }
%"class.blink::ThreadState::PrefinalizerRegistration.1012" = type { i8 }
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.867" = type { %"class.WTF::HashSet.870" }
%"class.WTF::HashSet.870" = type { %"class.WTF::HashTable.871" }
%"class.WTF::HashTable.871" = type <{ %"class.blink::WeakMember.873"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.873" = type opaque
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.877 }
%class.scoped_refptr.877 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.878", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.878" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.879" }
%"class.std::__1::__hash_table.879" = type <{ %"class.std::__1::unique_ptr.880", %"class.std::__1::__compressed_pair.890", %"class.std::__1::__compressed_pair.895", %"class.std::__1::__compressed_pair.899", [4 x i8] }>
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882", %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"struct.std::__1::__hash_node_base.883"** }
%"struct.std::__1::__hash_node_base.883" = type { %"struct.std::__1::__hash_node_base.883"* }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.std::__1::__bucket_list_deallocator.885" }
%"class.std::__1::__bucket_list_deallocator.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.std::__1::__hash_node_base.883" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.907" = type { %"class.absl::optional_internal::optional_data.908" }
%"class.absl::optional_internal::optional_data.908" = type { %"class.absl::optional_internal::optional_data_base.909" }
%"class.absl::optional_internal::optional_data_base.909" = type { %"class.absl::optional_internal::optional_data_dtor_base.910" }
%"class.absl::optional_internal::optional_data_dtor_base.910" = type { i8, %union.anon.911 }
%union.anon.911 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.912" }
%"class.blink::HeapHashSet.923" = type { %"class.WTF::HashSet.926" }
%"class.WTF::HashSet.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"class.blink::Member.929"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.929" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.918" = type { %"class.WTF::VectorBuffer.919" }
%"class.WTF::VectorBuffer.919" = type { %"class.WTF::VectorBufferBase.920" }
%"class.blink::HeapVector.930" = type { %"class.WTF::Vector.933" }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935" }
%"class.WTF::VectorBufferBase.935" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.865", %"class.blink::Member.768", %"struct.blink::Timing", %"class.blink::Member.845", i32, %"class.blink::Member.857", %"class.WTF::Vector.609" }
%"class.blink::HeapVector.937" = type { %"class.WTF::Vector.940" }
%"class.WTF::Vector.940" = type { %"class.WTF::VectorBuffer.941" }
%"class.WTF::VectorBuffer.941" = type { %"class.WTF::VectorBufferBase.942" }
%"class.WTF::VectorBufferBase.942" = type { %"class.blink::Member.865"*, i32, i32 }
%"class.blink::HeapHashMap.944" = type { %"class.WTF::HashMap.947" }
%"class.WTF::HashMap.947" = type { %"class.WTF::HashTable.948" }
%"class.WTF::HashTable.948" = type <{ %"struct.WTF::KeyValuePair.950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.950" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1932" }
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.215, %class.scoped_refptr.215, %class.scoped_refptr.215, double, %"class.blink::Member.768" }
%"class.WTF::HashSet.951" = type { %"class.WTF::HashTable.952" }
%"class.WTF::HashTable.952" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.955" = type { %"class.WTF::HashMap.958" }
%"class.WTF::HashMap.958" = type { %"class.WTF::HashTable.959" }
%"class.WTF::HashTable.959" = type <{ %"struct.WTF::KeyValuePair.961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.961" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1922" }
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::HeapVector.1924"* }
%"class.blink::HeapVector.1924" = type { %"class.WTF::Vector.1927" }
%"class.WTF::Vector.1927" = type { %"class.WTF::VectorBuffer.1928" }
%"class.WTF::VectorBuffer.1928" = type { %"class.WTF::VectorBufferBase.1929", [8 x i8] }
%"class.WTF::VectorBufferBase.1929" = type { %"class.blink::Member.1909"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.962", %"class.WTF::HashSet.962", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::cssvalue::CSSURIValue" = type { %"class.blink::CSSValue", %"class.WTF::AtomicString", i8, %"class.blink::Member.1164", %"class.WTF::AtomicString" }
%"struct.blink::FontDescription::FamilyDescription" = type { i32, %"class.blink::FontFamily" }
%"class.blink::cssvalue::CSSPendingSystemFontValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::Settings" = type opaque
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857", [32 x i8] }
%"class.WTF::VectorBufferBase.1857" = type { %"class.blink::Member.1324"*, i32, i32 }
%"class.blink::cssvalue::CSSFontFeatureValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type { i32, float }
%"class.blink::cssvalue::CSSFontVariationValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", float, [4 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef.216", %"class.blink::DataRef.292", %"class.blink::DataRef.460", %"class.blink::DataRef.464", %"class.blink::DataRef.657", %"class.blink::DataRef.729", %"class.blink::DataRef.733", %"class.blink::DataRef.737", %"class.blink::DataRef.741", [20 x i8], [4 x i8] }>
%"struct.blink::FontDescription::Size" = type { i8, float }
%"class.blink::CSSMathFunctionValue" = type { %"class.blink::CSSPrimitiveValue", %"class.blink::Member.1877" }
%"class.blink::Member.1877" = type { %"class.blink::MemberBase.1878" }
%"class.blink::MemberBase.1878" = type { %"class.blink::CSSMathExpressionNode"* }
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.blink::CalculationValue" = type <{ %"class.WTF::RefCounted.1874", [4 x i8], %"union.blink::CalculationValue::DataUnion", i8, [7 x i8] }>
%"class.WTF::RefCounted.1874" = type { %"class.base::RefCounted.1875" }
%"class.base::RefCounted.1875" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::CalculationValue::DataUnion" = type { %class.scoped_refptr.1876 }
%class.scoped_refptr.1876 = type { %"class.blink::CalculationExpressionNode"* }
%"class.blink::CalculationExpressionNode" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.1852" }
%"class.blink::HeapVector.1852" = type { %"class.WTF::Vector.1855" }
%class.anon = type { i64*, %"class.WTF::HashMap.543"*, %"class.WTF::HashMap.553"*, %"class.blink::GridTrackList"*, %"class.blink::StyleResolverState"* }
%"class.blink::CSSCustomIdentValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", i32, [4 x i8] }>
%"struct.std::__1::__less.2706" = type { i8 }
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2079", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2087", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2114", %"class.blink::FrameLoader", %"class.blink::Member.2135", %"class.blink::Member.380", %"class.blink::Member.2137", %"class.blink::Member.2139", %"class.blink::Member.2141", %"class.blink::Member.2143", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2145", %class.scoped_refptr.2147, %"class.blink::Member.2148", %"class.blink::Member.2150", %"class.blink::Member.2152", %"class.blink::Member.2154", %"class.blink::Member.2156", %"class.blink::Member.2158", %"class.blink::Member.2160", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2265", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2271", %"class.std::__1::unique_ptr.2272", %"class.absl::optional.2067", i32, [4 x i8], %"class.std::__1::unique_ptr.2278", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2296", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2315", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2329", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2337", %"class.blink::Member.2339", %"class.blink::Member.2341", %"class.blink::Member.2343", %"class.mojo::StructPtr.2346", %"class.blink::Member.2355", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2357", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2040", %"class.blink::Member.2042", %"class.blink::Member.2044", i8, i32, i8, i32, %"class.blink::Member.2046", %"class.blink::Member.2048", %"class.blink::FrameLifecycle", %"class.blink::Member.2038", %"class.blink::Member.2038", %"class.blink::Member.2038", %"class.blink::Member.2038", %"class.blink::Member.2038", %"class.blink::Member.2038", %"class.blink::Member.2050", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2060", i8, %"class.base::UnguessableToken", %"class.absl::optional.2062", %"class.absl::optional.2067", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2038", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2040" = type { %"class.blink::MemberBase.2041" }
%"class.blink::MemberBase.2041" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2042" = type { %"class.blink::MemberBase.2043" }
%"class.blink::MemberBase.2043" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2038" = type { %"class.blink::MemberBase.2039" }
%"class.blink::MemberBase.2039" = type { %"class.blink::Frame"* }
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2038", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2052" }
%"class.std::__1::vector.2052" = type { %"class.std::__1::__vector_base.2053" }
%"class.std::__1::__vector_base.2053" = type { %"struct.std::__1::pair.2054"*, %"struct.std::__1::pair.2054"*, %"class.std::__1::__compressed_pair.2055" }
%"struct.std::__1::pair.2054" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2055" = type { %"struct.std::__1::__compressed_pair_elem.2056" }
%"struct.std::__1::__compressed_pair_elem.2056" = type { %"struct.std::__1::pair.2054"* }
%"class.blink::Member.2060" = type { %"class.blink::MemberBase.2061" }
%"class.blink::MemberBase.2061" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2062" = type { %"class.absl::optional_internal::optional_data.2063" }
%"class.absl::optional_internal::optional_data.2063" = type { %"class.absl::optional_internal::optional_data_base.2064" }
%"class.absl::optional_internal::optional_data_base.2064" = type { %"class.absl::optional_internal::optional_data_dtor_base.2065" }
%"class.absl::optional_internal::optional_data_dtor_base.2065" = type { i8, %union.anon.2066 }
%union.anon.2066 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2072" }
%"class.blink::HeapHashSet.2072" = type { %"class.WTF::HashSet.2075" }
%"class.WTF::HashSet.2075" = type { %"class.WTF::HashTable.2076" }
%"class.WTF::HashTable.2076" = type <{ %"class.blink::WeakMember.2078"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2078" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2079" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2080" }
%"class.blink::HeapHashMap.2080" = type { %"class.WTF::HashMap.2083" }
%"class.WTF::HashMap.2083" = type { %"class.WTF::HashTable.2084" }
%"class.WTF::HashTable.2084" = type <{ %"struct.WTF::KeyValuePair.2086"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2086" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2087" = type { %"class.std::__1::__compressed_pair.2088" }
%"class.std::__1::__compressed_pair.2088" = type { %"struct.std::__1::__compressed_pair_elem.2089" }
%"struct.std::__1::__compressed_pair_elem.2089" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2090", %"class.base::WeakPtrFactory.2095" }
%"class.WTF::HashMap.2090" = type { %"class.WTF::HashTable.2091" }
%"class.WTF::HashTable.2091" = type <{ %"struct.WTF::KeyValuePair.2094"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2094" = type opaque
%"class.base::WeakPtrFactory.2095" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2099" }
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2103", i64, %"class.std::__1::map.2104", i8*, i64, %"class.base::WeakPtrFactory.2113" }
%"class.base::RepeatingCallback.2103" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2104" = type { %"class.std::__1::__tree.2105" }
%"class.std::__1::__tree.2105" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2106", %"class.std::__1::__compressed_pair.2110" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"class.std::__1::__compressed_pair.2110" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.base::WeakPtrFactory.2113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2114" = type { %"class.WTF::HashSet.2117" }
%"class.WTF::HashSet.2117" = type { %"class.WTF::HashTable.2118" }
%"class.WTF::HashTable.2118" = type <{ %"class.blink::WeakMember.2120"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2120" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.2050", %"class.blink::Member.2121", %"class.blink::Member.2123", %"class.std::__1::unique_ptr.2125", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2131" }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2125" = type { %"class.std::__1::__compressed_pair.2126" }
%"class.std::__1::__compressed_pair.2126" = type { %"struct.std::__1::__compressed_pair_elem.2127" }
%"struct.std::__1::__compressed_pair_elem.2127" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.191 }
%"class.WTF::HashSet.2131" = type { %"class.WTF::HashTable.2132" }
%"class.WTF::HashTable.2132" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2364", %"class.blink::Member.2050", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2369", i8, i32, %"class.blink::Color", %"class.absl::optional.2371", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2376", %"class.blink::Member.2378", %"class.blink::Member.2378", %"class.std::__1::unique_ptr.2381", i32, [4 x i8], %"class.WTF::HashSet.2384", %"class.blink::Member.2391", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2393", %"class.blink::HeapHashSet.2400", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2408", i8, %"class.blink::Member.2414", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2426", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2440", i8, %"class.std::__1::unique_ptr.2446", %"class.std::__1::unique_ptr.2563", %"class.WTF::Vector.2569", i32, %class.scoped_refptr.2574, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2575", %"class.blink::Member.2577", %"class.blink::Member.2579", %"class.blink::HeapHashSet.2581", %"class.blink::HeapHashSet.2588", %"class.std::__1::unique_ptr.2595", %"class.std::__1::unique_ptr.2602", %"class.WTF::Vector.1028" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2364" = type { %"class.WTF::HashTable.2365" }
%"class.WTF::HashTable.2365" = type <{ %class.scoped_refptr.2368*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2368 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2369" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2370", { i64, i64 } }
%"class.blink::WeakMember.2370" = type { %"class.blink::MemberBase.2136" }
%"class.absl::optional.2371" = type { %"class.absl::optional_internal::optional_data.2372" }
%"class.absl::optional_internal::optional_data.2372" = type { %"class.absl::optional_internal::optional_data_base.2373" }
%"class.absl::optional_internal::optional_data_base.2373" = type { %"class.absl::optional_internal::optional_data_dtor_base.2374" }
%"class.absl::optional_internal::optional_data_dtor_base.2374" = type { i8, %union.anon.2375 }
%union.anon.2375 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2376" = type { %"class.blink::MemberBase.2377" }
%"class.blink::MemberBase.2377" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2378" = type { %"class.blink::MemberBase.2379" }
%"class.blink::MemberBase.2379" = type { %"class.blink::HeapHashSet.2380"* }
%"class.blink::HeapHashSet.2380" = type opaque
%"class.std::__1::unique_ptr.2381" = type { %"class.std::__1::__compressed_pair.2382" }
%"class.std::__1::__compressed_pair.2382" = type { %"struct.std::__1::__compressed_pair_elem.2383" }
%"struct.std::__1::__compressed_pair_elem.2383" = type { %"class.WTF::HashSet.2384"* }
%"class.WTF::HashSet.2384" = type { %"class.WTF::HashTable.2385" }
%"class.WTF::HashTable.2385" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2391" = type { %"class.blink::MemberBase.2392" }
%"class.blink::MemberBase.2392" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2393" = type { %"class.WTF::HashSet.2396" }
%"class.WTF::HashSet.2396" = type { %"class.WTF::HashTable.2397" }
%"class.WTF::HashTable.2397" = type <{ %"class.blink::Member.2399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2399" = type opaque
%"class.blink::HeapHashSet.2400" = type { %"class.WTF::HashSet.2403" }
%"class.WTF::HashSet.2403" = type { %"class.WTF::HashTable.2404" }
%"class.WTF::HashTable.2404" = type <{ %"class.blink::Member.2406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2406" = type { %"class.blink::MemberBase.2407" }
%"class.blink::MemberBase.2407" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2636", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2647", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.380" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2636" = type { %"class.blink::MemberBase.2637" }
%"class.blink::MemberBase.2637" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2638", %"class.blink::Member.2639", %"class.blink::Member.2641", %"class.blink::Member.2643", %"class.blink::Member.2645", %"class.WTF::Vector.1028", i16, %class.scoped_refptr.1085 }
%"class.blink::ThreadState::PrefinalizerRegistration.2638" = type { i8 }
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2641" = type { %"class.blink::MemberBase.2642" }
%"class.blink::MemberBase.2642" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2643" = type { %"class.blink::MemberBase.2644" }
%"class.blink::MemberBase.2644" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2645" = type { %"class.blink::MemberBase.2646" }
%"class.blink::MemberBase.2646" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2647" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2648", { i64, i64 } }
%"class.blink::WeakMember.2648" = type { %"class.blink::MemberBase.2407" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2408" = type { %"class.std::__1::__compressed_pair.2409" }
%"class.std::__1::__compressed_pair.2409" = type { %"struct.std::__1::__compressed_pair_elem.2410" }
%"struct.std::__1::__compressed_pair_elem.2410" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2414" = type { %"class.blink::MemberBase.2415" }
%"class.blink::MemberBase.2415" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2418", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2418" = type { %"class.WTF::HashTable.2419" }
%"class.WTF::HashTable.2419" = type <{ %"struct.WTF::KeyValuePair.2421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2421" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2422", i32, i32 }
%"class.WTF::Vector.2422" = type { %"class.WTF::VectorBuffer.2423" }
%"class.WTF::VectorBuffer.2423" = type { %"class.WTF::VectorBufferBase.2424" }
%"class.WTF::VectorBufferBase.2424" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2426" = type { %"class.WTF::LinkedHashSet.2429" }
%"class.WTF::LinkedHashSet.2429" = type { %"class.WTF::HashMap.2430", %"class.WTF::VectorBackedLinkedList.2434" }
%"class.WTF::HashMap.2430" = type { %"class.WTF::HashTable.2431" }
%"class.WTF::HashTable.2431" = type <{ %"struct.WTF::KeyValuePair.2433"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2433" = type opaque
%"class.WTF::VectorBackedLinkedList.2434" = type { %"class.WTF::Vector.2435", i32, i32 }
%"class.WTF::Vector.2435" = type { %"class.WTF::VectorBuffer.2436" }
%"class.WTF::VectorBuffer.2436" = type { %"class.WTF::VectorBufferBase.2437" }
%"class.WTF::VectorBufferBase.2437" = type { %"class.WTF::VectorBackedLinkedListNode.2438"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2438" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2440" = type { %"class.std::__1::__compressed_pair.2441" }
%"class.std::__1::__compressed_pair.2441" = type { %"struct.std::__1::__compressed_pair_elem.2442" }
%"struct.std::__1::__compressed_pair_elem.2442" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2446" = type { %"class.std::__1::__compressed_pair.2447" }
%"class.std::__1::__compressed_pair.2447" = type { %"struct.std::__1::__compressed_pair_elem.2448" }
%"struct.std::__1::__compressed_pair_elem.2448" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2449, %class.scoped_refptr.2449, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2540", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2545", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2449 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2450", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2457" }
%"class.WTF::RefCounted.2450" = type { %"class.base::RefCounted.2451" }
%"class.base::RefCounted.2451" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2452", i32, [4 x i8] }>
%"class.WTF::Vector.2452" = type { %"class.WTF::VectorBuffer.2453" }
%"class.WTF::VectorBuffer.2453" = type { %"class.WTF::VectorBufferBase.2454" }
%"class.WTF::VectorBufferBase.2454" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2457" = type { %"class.WTF::VectorBuffer.2458" }
%"class.WTF::VectorBuffer.2458" = type { %"class.WTF::VectorBufferBase.2459" }
%"class.WTF::VectorBufferBase.2459" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2463", %"class.std::__1::unique_ptr.2512", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2460, %class.scoped_refptr.2461, %class.scoped_refptr.2462 }
%class.scoped_refptr.2460 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2476", i8, i8, %class.scoped_refptr.2460, i32, i32 }
%"class.WTF::RefCounted.2476" = type { %"class.base::RefCounted.2477" }
%"class.base::RefCounted.2477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2461 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2631" }
%"class.blink::PaintPropertyNode.2631" = type { %"class.WTF::RefCounted.2632", i8, i8, %class.scoped_refptr.2461, i32, i32 }
%"class.WTF::RefCounted.2632" = type { %"class.base::RefCounted.2633" }
%"class.base::RefCounted.2633" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2462 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2628" }
%"class.blink::PaintPropertyNode.2628" = type { %"class.WTF::RefCounted.2629", i8, i8, %class.scoped_refptr.2462, i32, i32 }
%"class.WTF::RefCounted.2629" = type { %"class.base::RefCounted.2630" }
%"class.base::RefCounted.2630" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2463" = type { %"class.std::__1::__compressed_pair.2464" }
%"class.std::__1::__compressed_pair.2464" = type { %"struct.std::__1::__compressed_pair_elem.2465" }
%"struct.std::__1::__compressed_pair_elem.2465" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2466", %"class.WTF::Vector.2471", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2466" = type { %"class.WTF::VectorBuffer.2467" }
%"class.WTF::VectorBuffer.2467" = type { %"class.WTF::VectorBufferBase.2468" }
%"class.WTF::VectorBufferBase.2468" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2471" = type { %"class.WTF::VectorBuffer.2472" }
%"class.WTF::VectorBuffer.2472" = type { %"class.WTF::VectorBufferBase.2473" }
%"class.WTF::VectorBufferBase.2473" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2491" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2484, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2485", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2478" }
%"class.std::__1::unique_ptr.2478" = type { %"class.std::__1::__compressed_pair.2479" }
%"class.std::__1::__compressed_pair.2479" = type { %"struct.std::__1::__compressed_pair_elem.2480" }
%"struct.std::__1::__compressed_pair_elem.2480" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.2484 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2613", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2613" = type { %"class.WTF::RefCounted.2614", i8, i8, %class.scoped_refptr.2484, i32, i32 }
%"class.WTF::RefCounted.2614" = type { %"class.base::RefCounted.2615" }
%"class.base::RefCounted.2615" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2616" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2616" = type { %"class.absl::optional_internal::optional_data.2617" }
%"class.absl::optional_internal::optional_data.2617" = type { %"class.absl::optional_internal::optional_data_base.2618" }
%"class.absl::optional_internal::optional_data_base.2618" = type { %"class.absl::optional_internal::optional_data_dtor_base.2619" }
%"class.absl::optional_internal::optional_data_dtor_base.2619" = type { i8, %union.anon.2620 }
%union.anon.2620 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2621", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2621" = type { %"class.std::__1::__vector_base.2622" }
%"class.std::__1::__vector_base.2622" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2623" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.2623" = type { %"struct.std::__1::__compressed_pair_elem.2624" }
%"struct.std::__1::__compressed_pair_elem.2624" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2485" = type { %"class.std::__1::__compressed_pair.2486" }
%"class.std::__1::__compressed_pair.2486" = type { %"struct.std::__1::__compressed_pair_elem.2487" }
%"struct.std::__1::__compressed_pair_elem.2487" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2491" = type { %"class.std::__1::__compressed_pair.2492" }
%"class.std::__1::__compressed_pair.2492" = type { %"struct.std::__1::__compressed_pair_elem.2493" }
%"struct.std::__1::__compressed_pair_elem.2493" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2494", %"class.std::__1::unique_ptr.2500", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2494" = type { %"class.std::__1::__compressed_pair.2495" }
%"class.std::__1::__compressed_pair.2495" = type { %"struct.std::__1::__compressed_pair_elem.2496" }
%"struct.std::__1::__compressed_pair_elem.2496" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2500" = type { %"class.std::__1::__compressed_pair.2501" }
%"class.std::__1::__compressed_pair.2501" = type { %"struct.std::__1::__compressed_pair_elem.2502" }
%"struct.std::__1::__compressed_pair_elem.2502" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2512" = type { %"class.std::__1::__compressed_pair.2513" }
%"class.std::__1::__compressed_pair.2513" = type { %"struct.std::__1::__compressed_pair_elem.2514" }
%"struct.std::__1::__compressed_pair_elem.2514" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2515", %"class.absl::optional.2515" }
%"class.absl::optional.2515" = type { %"class.absl::optional_internal::optional_data.2516" }
%"class.absl::optional_internal::optional_data.2516" = type { %"class.absl::optional_internal::optional_data_base.2517" }
%"class.absl::optional_internal::optional_data_base.2517" = type { %"class.absl::optional_internal::optional_data_dtor_base.2518" }
%"class.absl::optional_internal::optional_data_dtor_base.2518" = type { i8, [3 x i8], %union.anon.2519 }
%union.anon.2519 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2457"*, %"class.absl::optional.2525", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2525" = type { %"class.absl::optional_internal::optional_data.2526" }
%"class.absl::optional_internal::optional_data.2526" = type { %"class.absl::optional_internal::optional_data_base.2527" }
%"class.absl::optional_internal::optional_data_base.2527" = type { %"class.absl::optional_internal::optional_data_dtor_base.2528" }
%"class.absl::optional_internal::optional_data_dtor_base.2528" = type { i8, %union.anon.2529 }
%union.anon.2529 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2530", %"class.WTF::Vector.2535" }
%"class.WTF::Vector.2530" = type { %"class.WTF::VectorBuffer.2531" }
%"class.WTF::VectorBuffer.2531" = type { %"class.WTF::VectorBufferBase.2532", [128 x i8] }
%"class.WTF::VectorBufferBase.2532" = type { i32*, i32, i32 }
%"class.WTF::Vector.2535" = type { %"class.WTF::VectorBuffer.2536" }
%"class.WTF::VectorBuffer.2536" = type { %"class.WTF::VectorBufferBase.2537", [128 x i8] }
%"class.WTF::VectorBufferBase.2537" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2540" = type { %"class.WTF::VectorBuffer.2541" }
%"class.WTF::VectorBuffer.2541" = type { %"class.WTF::VectorBufferBase.2542" }
%"class.WTF::VectorBufferBase.2542" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2545" = type { %"class.WTF::HashTable.2546" }
%"class.WTF::HashTable.2546" = type <{ %"struct.WTF::KeyValuePair.2549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2549" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2550", %"class.WTF::Vector.2555" }
%"class.WTF::HashMap.2550" = type { %"class.WTF::HashTable.2551" }
%"class.WTF::HashTable.2551" = type <{ %"struct.WTF::KeyValuePair.2554"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2554" = type opaque
%"class.WTF::Vector.2555" = type { %"class.WTF::VectorBuffer.2556" }
%"class.WTF::VectorBuffer.2556" = type { %"class.WTF::VectorBufferBase.2557" }
%"class.WTF::VectorBufferBase.2557" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2563" = type { %"class.std::__1::__compressed_pair.2564" }
%"class.std::__1::__compressed_pair.2564" = type { %"struct.std::__1::__compressed_pair_elem.2565" }
%"struct.std::__1::__compressed_pair_elem.2565" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2569" = type { %"class.WTF::VectorBuffer.2570" }
%"class.WTF::VectorBuffer.2570" = type { %"class.WTF::VectorBufferBase.2571" }
%"class.WTF::VectorBufferBase.2571" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2574 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2575" = type { %"class.blink::MemberBase.2576" }
%"class.blink::MemberBase.2576" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2577" = type { %"class.blink::MemberBase.2578" }
%"class.blink::MemberBase.2578" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2579" = type { %"class.blink::MemberBase.2580" }
%"class.blink::MemberBase.2580" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2581" = type { %"class.WTF::HashSet.2584" }
%"class.WTF::HashSet.2584" = type { %"class.WTF::HashTable.2585" }
%"class.WTF::HashTable.2585" = type <{ %"class.blink::WeakMember.2587"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2587" = type opaque
%"class.blink::HeapHashSet.2588" = type { %"class.WTF::HashSet.2591" }
%"class.WTF::HashSet.2591" = type { %"class.WTF::HashTable.2592" }
%"class.WTF::HashTable.2592" = type <{ %"class.blink::WeakMember.2594"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2594" = type opaque
%"class.std::__1::unique_ptr.2595" = type { %"class.std::__1::__compressed_pair.2596" }
%"class.std::__1::__compressed_pair.2596" = type { %"struct.std::__1::__compressed_pair_elem.2597" }
%"struct.std::__1::__compressed_pair_elem.2597" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2598" }
%"class.base::time_internal::TimeBase.2598" = type { i64 }
%"class.std::__1::unique_ptr.2602" = type { %"class.std::__1::__compressed_pair.2603" }
%"class.std::__1::__compressed_pair.2603" = type { %"struct.std::__1::__compressed_pair_elem.2604" }
%"struct.std::__1::__compressed_pair_elem.2604" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2605", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2605" = type { %"class.absl::optional_internal::optional_data.2606" }
%"class.absl::optional_internal::optional_data.2606" = type { %"class.absl::optional_internal::optional_data_base.2607" }
%"class.absl::optional_internal::optional_data_base.2607" = type { %"class.absl::optional_internal::optional_data_dtor_base.2608" }
%"class.absl::optional_internal::optional_data_dtor_base.2608" = type { i8, %union.anon.2609 }
%union.anon.2609 = type { %"class.base::Time" }
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2141" = type { %"class.blink::MemberBase.2142" }
%"class.blink::MemberBase.2142" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2143" = type { %"class.blink::MemberBase.2144" }
%"class.blink::MemberBase.2144" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2145" = type { %"class.blink::MemberBase.2146" }
%"class.blink::MemberBase.2146" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.2147 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2152" = type { %"class.blink::MemberBase.2153" }
%"class.blink::MemberBase.2153" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2154" = type { %"class.blink::MemberBase.2155" }
%"class.blink::MemberBase.2155" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2156" = type { %"class.blink::MemberBase.2157" }
%"class.blink::MemberBase.2157" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.2158" = type { %"class.blink::MemberBase.2159" }
%"class.blink::MemberBase.2159" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2162" }
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2259" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2166, %"class.std::__1::unique_ptr.1764", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1773, i32 }>
%class.scoped_refptr.2166 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1773, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2225", %"class.absl::optional.2230", %"class.absl::optional.2183", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2250", i8, [7 x i8], %class.scoped_refptr.1773, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1786" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1773, %"class.std::__1::unique_ptr.2167", %"class.absl::optional.2177", %"struct.std::__1::atomic.171", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2183", %"class.std::__1::unique_ptr.2188", i8, i64, %class.scoped_refptr.2222, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2223", %"class.base::WeakPtrFactory.2224" }
%"class.std::__1::unique_ptr.2167" = type { %"class.std::__1::__compressed_pair.2168" }
%"class.std::__1::__compressed_pair.2168" = type { %"struct.std::__1::__compressed_pair_elem.2169" }
%"struct.std::__1::__compressed_pair_elem.2169" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1773, i8, %"class.mojo::ScopedHandleBase.2170", %class.scoped_refptr.2171, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2172", i8*, %"class.base::WeakPtrFactory.2173" }
%"class.mojo::ScopedHandleBase.2170" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2171 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2172" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2173" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2177" = type { %"class.absl::optional_internal::optional_data.2178" }
%"class.absl::optional_internal::optional_data.2178" = type { %"class.absl::optional_internal::optional_data_base.2179" }
%"class.absl::optional_internal::optional_data_base.2179" = type { %"class.absl::optional_internal::optional_data_dtor_base.2180" }
%"class.absl::optional_internal::optional_data_dtor_base.2180" = type { i8, %union.anon.2181 }
%union.anon.2181 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2182", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2182" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2188" = type { %"class.std::__1::__compressed_pair.2189" }
%"class.std::__1::__compressed_pair.2189" = type { %"struct.std::__1::__compressed_pair_elem.2190" }
%"struct.std::__1::__compressed_pair_elem.2190" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2191", i8, i64, %class.scoped_refptr.2192, %class.scoped_refptr.2217 }
%"class.base::RepeatingCallback.2191" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2192 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2193", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2195", %"class.std::__1::map.2206", i8, [7 x i8] }>
%"class.base::RefCounted.2193" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2194 }
%class.scoped_refptr.2194 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2195" = type { %"class.std::__1::__tree.2196" }
%"class.std::__1::__tree.2196" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2197", %"class.std::__1::__compressed_pair.2201" }
%"class.std::__1::__compressed_pair.2197" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.2206" = type { %"class.std::__1::__tree.2207" }
%"class.std::__1::__tree.2207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2208", %"class.std::__1::__compressed_pair.2212" }
%"class.std::__1::__compressed_pair.2208" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"class.std::__1::__compressed_pair.2212" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%class.scoped_refptr.2217 = type { %"class.base::RefCountedData.2218"* }
%"class.base::RefCountedData.2218" = type opaque
%class.scoped_refptr.2222 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2223" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2224" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2225" = type { %"class.absl::optional_internal::optional_data.2226" }
%"class.absl::optional_internal::optional_data.2226" = type { %"class.absl::optional_internal::optional_data_base.2227" }
%"class.absl::optional_internal::optional_data_base.2227" = type { %"class.absl::optional_internal::optional_data_dtor_base.2228" }
%"class.absl::optional_internal::optional_data_dtor_base.2228" = type { i8, %union.anon.2229 }
%union.anon.2229 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2230" = type { %"class.absl::optional_internal::optional_data.2231" }
%"class.absl::optional_internal::optional_data.2231" = type { %"class.absl::optional_internal::optional_data_base.2232" }
%"class.absl::optional_internal::optional_data_base.2232" = type { %"class.absl::optional_internal::optional_data_dtor_base.2233" }
%"class.absl::optional_internal::optional_data_dtor_base.2233" = type { i8, [7 x i8], %union.anon.2234 }
%union.anon.2234 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2183" = type { %"class.absl::optional_internal::optional_data.2184" }
%"class.absl::optional_internal::optional_data.2184" = type { %"class.absl::optional_internal::optional_data_base.2185" }
%"class.absl::optional_internal::optional_data_base.2185" = type { %"class.absl::optional_internal::optional_data_dtor_base.2186" }
%"class.absl::optional_internal::optional_data_dtor_base.2186" = type { i8, %union.anon.2187 }
%union.anon.2187 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2235 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2235 = type { %"class.std::__1::map.2238" }
%"class.std::__1::map.2238" = type { %"class.std::__1::__tree.2239" }
%"class.std::__1::__tree.2239" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2240", %"class.std::__1::__compressed_pair.2244" }
%"class.std::__1::__compressed_pair.2240" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"class.std::__1::__compressed_pair.2244" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2249"*, i64 }
%"class.std::__1::unique_ptr.2249" = type opaque
%"class.std::__1::map.2250" = type { %"class.std::__1::__tree.2251" }
%"class.std::__1::__tree.2251" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2252", %"class.std::__1::__compressed_pair.2256" }
%"class.std::__1::__compressed_pair.2252" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"class.std::__1::__compressed_pair.2256" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2259" = type { %"class.std::__1::__compressed_pair.2260" }
%"class.std::__1::__compressed_pair.2260" = type { %"struct.std::__1::__compressed_pair_elem.2261" }
%"struct.std::__1::__compressed_pair_elem.2261" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2265" = type { %"class.std::__1::__compressed_pair.2266" }
%"class.std::__1::__compressed_pair.2266" = type { %"struct.std::__1::__compressed_pair_elem.2267" }
%"struct.std::__1::__compressed_pair_elem.2267" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2271" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2272" = type { %"class.std::__1::__compressed_pair.2273" }
%"class.std::__1::__compressed_pair.2273" = type { %"struct.std::__1::__compressed_pair_elem.2274" }
%"struct.std::__1::__compressed_pair_elem.2274" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2067" = type { %"class.absl::optional_internal::optional_data.2068" }
%"class.absl::optional_internal::optional_data.2068" = type { %"class.absl::optional_internal::optional_data_base.2069" }
%"class.absl::optional_internal::optional_data_base.2069" = type { %"class.absl::optional_internal::optional_data_dtor_base.2070" }
%"class.absl::optional_internal::optional_data_dtor_base.2070" = type { i8, %union.anon.2071 }
%union.anon.2071 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2278" = type { %"class.std::__1::__compressed_pair.2279" }
%"class.std::__1::__compressed_pair.2279" = type { %"struct.std::__1::__compressed_pair_elem.2280" }
%"struct.std::__1::__compressed_pair_elem.2280" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2284" }
%"class.blink::Member.2284" = type { %"class.blink::MemberBase.2285" }
%"class.blink::MemberBase.2285" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2288" }
%"class.mojo::AssociatedRemote.2288" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2289" }
%"class.mojo::internal::AssociatedInterfacePtrState.2289" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2290" }
%"class.std::__1::unique_ptr.2290" = type { %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2296" = type { %"class.blink::Member.2297" }
%"class.blink::Member.2297" = type { %"class.blink::MemberBase.2298" }
%"class.blink::MemberBase.2298" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2301" }
%"class.mojo::AssociatedRemote.2301" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2302" }
%"class.mojo::internal::AssociatedInterfacePtrState.2302" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2303" }
%"class.std::__1::unique_ptr.2303" = type { %"class.std::__1::__compressed_pair.2304" }
%"class.std::__1::__compressed_pair.2304" = type { %"struct.std::__1::__compressed_pair_elem.2305" }
%"struct.std::__1::__compressed_pair_elem.2305" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2309" }
%"class.blink::Member.2309" = type { %"class.blink::MemberBase.2310" }
%"class.blink::MemberBase.2310" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2313", %"class.blink::Member.2050", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2313" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2314" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1764" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2314" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2315" = type { %"class.blink::Member.2316" }
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2320", %"class.blink::Member.2050", %"class.mojo::AssociatedReceiver.2321" }
%"class.blink::ThreadState::PrefinalizerRegistration.2320" = type { i8 }
%"class.mojo::AssociatedReceiver.2321" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2322" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2322" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2323" }
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2327", %"class.blink::Member.2050", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2327" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2166, %"class.std::__1::unique_ptr.1764", %"class.base::WeakPtrFactory.2328" }
%"class.base::WeakPtrFactory.2328" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2329" = type { %"class.blink::Member.2330" }
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2334", %"class.blink::Member.2050", %"class.mojo::AssociatedReceiver.2335" }
%"class.blink::ThreadState::PrefinalizerRegistration.2334" = type { i8 }
%"class.mojo::AssociatedReceiver.2335" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2336" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2336" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2337" = type { %"class.blink::MemberBase.2338" }
%"class.blink::MemberBase.2338" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2339" = type { %"class.blink::MemberBase.2340" }
%"class.blink::MemberBase.2340" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2341" = type { %"class.blink::MemberBase.2342" }
%"class.blink::MemberBase.2342" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2343" = type { %"class.blink::MemberBase.2344" }
%"class.blink::MemberBase.2344" = type { %"class.blink::HeapHashMap.2345"* }
%"class.blink::HeapHashMap.2345" = type opaque
%"class.mojo::StructPtr.2346" = type { %"class.std::__1::unique_ptr.2347" }
%"class.std::__1::unique_ptr.2347" = type { %"class.std::__1::__compressed_pair.2348" }
%"class.std::__1::__compressed_pair.2348" = type { %"struct.std::__1::__compressed_pair_elem.2349" }
%"struct.std::__1::__compressed_pair_elem.2349" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2350", %"class.mojo::InlinedStructPtr.2351" }
%"class.mojo::InlinedStructPtr.2350" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2351" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2355" = type { %"class.blink::MemberBase.2356" }
%"class.blink::MemberBase.2356" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2357" = type { %"class.absl::optional_internal::optional_data.2358" }
%"class.absl::optional_internal::optional_data.2358" = type { %"class.absl::optional_internal::optional_data_base.2359" }
%"class.absl::optional_internal::optional_data_base.2359" = type { %"class.absl::optional_internal::optional_data_dtor_base.2360" }
%"class.absl::optional_internal::optional_data_dtor_base.2360" = type { i8, %union.anon.2361 }
%union.anon.2361 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::CSSStringValue" = type { %"class.blink::CSSValue", %"class.WTF::String" }
%"class.WTF::VectorBuffer.351" = type <{ %"class.WTF::VectorBufferBase.352", [28 x i8], [4 x i8] }>
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::cssvalue::CSSAxisValue" = type <{ %"class.blink::CSSValueList", i32, [4 x i8] }>
%"class.blink::cssvalue::CSSColor" = type { %"class.blink::CSSValue", %"class.blink::Color" }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.1892", %"class.WTF::Vector.558", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr.191 }
%"class.WTF::Vector.1892" = type { %"class.WTF::VectorBuffer.1893" }
%"class.WTF::VectorBuffer.1893" = type { %"class.WTF::VectorBufferBase.1894", [32 x i8] }
%"class.WTF::VectorBufferBase.1894" = type { i32*, i32, i32 }
%"class.WTF::Vector.1897" = type { %"class.WTF::VectorBuffer.1898" }
%"class.WTF::VectorBuffer.1898" = type { %"class.WTF::VectorBufferBase.1887", [768 x i8] }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.2704" }
%"class.WTF::StringTypeAdapter.2704" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2705" = type <{ i8*, i32, [4 x i8] }>

$_ZNK5blink22ShapeClipPathOperationeqERKNS_17ClipPathOperationE = comdat any

$_ZN5blink14NinePieceImage12MaskDefaultsEv = comdat any

$_ZN5blink13GridTrackSizeC2ERKNS_10GridLengthENS_17GridTrackSizeTypeE = comdat any

$_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEEC2ESt16initializer_listIS2_E = comdat any

$_ZN5blink21StyleBuilderConverter21ConvertPositionLengthILNS_10CSSValueIDE306ELS2_307EEENS_6LengthERNS_18StyleResolverStateERKNS_8CSSValueE = comdat any

$_ZN5blink21StyleBuilderConverter21ConvertPositionLengthILNS_10CSSValueIDE302ELS2_303EEENS_6LengthERNS_18StyleResolverStateERKNS_8CSSValueE = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEEaSES2_ = comdat any

$_ZN5blink21StyleBuilderConverter16ConvertLineWidthIfEET_RNS_18StyleResolverStateERKNS_8CSSValueE = comdat any

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZN5blink22ShapeClipPathOperationD2Ev = comdat any

$_ZN5blink22ShapeClipPathOperationD0Ev = comdat any

$_ZNK5blink22ShapeClipPathOperation7GetTypeEv = comdat any

$_ZN5blink9LengthBoxaSEOS0_ = comdat any

$_ZN5blink20BorderImageLengthBoxaSEOS0_ = comdat any

$_ZN5blink18NinePieceImageDataC2ERKS0_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10StyleImageELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11SVGResourceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_11SVGResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EERS1_S5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8RehashToEPS6_jSF_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8ReinsertEOS6_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_ = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E6insertINS_17HashMapTranslatorISF_S9_S4_EERmS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E8ReinsertEOS6_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E16LookupForWritingERKm = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_ = comdat any

$_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ShadowDataEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_16CSSFunctionValueEEEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FontTagValuePairIiEEEEmm = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EEjfEENS_18HashTableAddResultISC_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_ = comdat any

$_ZN3WTF6VectorIN5blink16FontTagValuePairIfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FontTagValuePairIfEEEEmm = comdat any

$_ZNSt3__16__sortIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEbT0_S8_T_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13GridTrackSizeEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink13GridTrackSizeENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EENS_12StringAppendIS1_PKcEES5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseImEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10ShapeValueEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_10ShapeValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_10ShapeValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_10ShapeValueEE7GetNameEPKv = comdat any

$_ZNK5blink10ShapeValue5TraceEPNS_7VisitorE = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm = comdat any

$_ZTVN5blink22ShapeClipPathOperationE = comdat any

$_ZZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue = comdat any

$_ZGVZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue = comdat any

$_ZZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue = comdat any

$_ZGVZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10ShapeValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10ShapeValueEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink10ShapeValueE = comdat any

@.str = private unnamed_addr constant [22 x i8] c"values->length() < 2u\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/core/css/resolver/style_builder_converter.cc\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"-start\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"-end\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink22ShapeClipPathOperationE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ShapeClipPathOperation"*)* @_ZN5blink22ShapeClipPathOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::ShapeClipPathOperation"*)* @_ZN5blink22ShapeClipPathOperationD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ShapeClipPathOperation"*, %"class.blink::ClipPathOperation"*)* @_ZNK5blink22ShapeClipPathOperationeqERKNS_17ClipPathOperationE to i8*), i8* bitcast (i32 (%"class.blink::ShapeClipPathOperation"*)* @_ZNK5blink22ShapeClipPathOperation7GetTypeEv to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink26ReferenceClipPathOperationE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue = linkonce_odr hidden local_unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 2
@_ZGVZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue = linkonce_odr hidden local_unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 2
@_ZGVZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue = internal global i64 0, align 8
@_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal global i64 0, align 8
@_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal global i64 0, align 8
@_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_6VectorImLj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [135 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::Vector<unsigned long, 0, WTF::PartitionAllocator> >]\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned long]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [135 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned long, WTF::Vector<WTF::String, 0, WTF::PartitionAllocator> >]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10ShadowDataEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ShadowData]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase44is_css_system_color_compute_to_self_enabled_E = external local_unnamed_addr global i8, align 1
@_ZTVN5blink27TranslateTransformOperationE = external unnamed_addr constant { [15 x i8*] }, align 8
@_ZTVN5blink24RotateTransformOperationE = external unnamed_addr constant { [15 x i8*] }, align 8
@_ZTVN5blink23ScaleTransformOperationE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str.11 = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.15 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.16 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.18 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSValue>, WTF::VectorTraits<blink::Member<const blink::CSSValue> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FontTagValuePairIiEEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FontTagValuePair<int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjfEEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, float>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FontTagValuePairIfEEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FontTagValuePair<float>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13GridTrackSizeEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::GridTrackSize]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.19 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.20 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10ShapeValueEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ShapeValue]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10ShapeValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10ShapeValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_10ShapeValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10ShapeValueEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10ShapeValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink10ShapeValueE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ShapeValue"*, %"class.blink::Visitor"*)* @_ZNK5blink10ShapeValue5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Length]\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserToken]\00", align 1
@switch.table._ZN5blink25StyleBuilderConverterBase17ConvertFontFamilyERKNS_8CSSValueEPNS_11FontBuilderEPKNS_8DocumentE = private unnamed_addr constant [6 x i32] [i32 2, i32 3, i32 5, i32 6, i32 4, i32 1], align 4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22ShapeClipPathOperationeqERKNS_17ClipPathOperationE(%"class.blink::ShapeClipPathOperation"*, %"class.blink::ClipPathOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::ShapeClipPathOperation"* %0 to %"class.blink::ClipPathOperation"*
  %4 = bitcast %"class.blink::ClipPathOperation"* %1 to i32 (%"class.blink::ClipPathOperation"*)***
  %5 = load i32 (%"class.blink::ClipPathOperation"*)**, i32 (%"class.blink::ClipPathOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::ClipPathOperation"*)*, i32 (%"class.blink::ClipPathOperation"*)** %5, i64 3
  %7 = load i32 (%"class.blink::ClipPathOperation"*)*, i32 (%"class.blink::ClipPathOperation"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::ClipPathOperation"* %1) #15
  %9 = bitcast %"class.blink::ShapeClipPathOperation"* %0 to i32 (%"class.blink::ClipPathOperation"*)***
  %10 = load i32 (%"class.blink::ClipPathOperation"*)**, i32 (%"class.blink::ClipPathOperation"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::ClipPathOperation"*)*, i32 (%"class.blink::ClipPathOperation"*)** %10, i64 3
  %12 = load i32 (%"class.blink::ClipPathOperation"*)*, i32 (%"class.blink::ClipPathOperation"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::ClipPathOperation"* %3) #15
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %33

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %1, i64 1
  %17 = bitcast %"class.blink::ClipPathOperation"* %16 to %"class.blink::BasicShape"**
  %18 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ShapeClipPathOperation", %"class.blink::ShapeClipPathOperation"* %0, i64 0, i32 1, i32 0
  %20 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %19, align 8
  %21 = icmp ne %"class.blink::BasicShape"* %20, null
  %22 = icmp ne %"class.blink::BasicShape"* %18, null
  %23 = and i1 %22, %21
  br i1 %23, label %27, label %24

24:                                               ; preds = %15
  %25 = icmp eq %"class.blink::BasicShape"* %20, null
  %26 = xor i1 %22, %25
  br label %33

27:                                               ; preds = %15
  %28 = bitcast %"class.blink::BasicShape"* %20 to i1 (%"class.blink::BasicShape"*, %"class.blink::BasicShape"*)***
  %29 = load i1 (%"class.blink::BasicShape"*, %"class.blink::BasicShape"*)**, i1 (%"class.blink::BasicShape"*, %"class.blink::BasicShape"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::BasicShape"*, %"class.blink::BasicShape"*)*, i1 (%"class.blink::BasicShape"*, %"class.blink::BasicShape"*)** %29, i64 4
  %31 = load i1 (%"class.blink::BasicShape"*, %"class.blink::BasicShape"*)*, i1 (%"class.blink::BasicShape"*, %"class.blink::BasicShape"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::BasicShape"* nonnull %20, %"class.blink::BasicShape"* nonnull dereferenceable(16) %18) #15
  br label %33

33:                                               ; preds = %24, %27, %2
  %34 = phi i1 [ false, %2 ], [ %32, %27 ], [ %26, %24 ]
  ret i1 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleReflection"* @_ZN5blink21StyleBuilderConverter17ConvertBoxReflectERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca %"class.blink::NinePieceImage", align 8
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 2
  %9 = icmp eq %"class.blink::CSSValue"* %1, null
  %10 = or i1 %9, %8
  br i1 %10, label %11, label %94

11:                                               ; preds = %2
  %12 = tail call noalias i8* @malloc(i64 24) #15
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %12, i64 4
  %15 = getelementptr inbounds i8, i8* %12, i64 13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 9, i1 false) #15
  store i8 2, i8* %15, align 1, !alias.scope !2
  %16 = getelementptr inbounds i8, i8* %12, i64 14
  store i8 0, i8* %16, align 2, !alias.scope !2
  %17 = tail call %"class.blink::NinePieceImageData"* @_ZN5blink14NinePieceImage12MaskDefaultsEv() #15
  %18 = getelementptr inbounds i8, i8* %12, i64 16
  %19 = bitcast i8* %18 to %"class.blink::NinePieceImageData"**
  store %"class.blink::NinePieceImageData"* %17, %"class.blink::NinePieceImageData"** %19, align 8
  %20 = ptrtoint i8* %12 to i64
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %22 = bitcast i8* %21 to %"class.blink::CSSIdentifierValue"**
  %23 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  switch i32 %25, label %29 [
    i32 454, label %30
    i32 460, label %26
    i32 306, label %27
    i32 307, label %28
  ]

26:                                               ; preds = %11
  br label %30

27:                                               ; preds = %11
  br label %30

28:                                               ; preds = %11
  br label %30

29:                                               ; preds = %11
  br label %30

30:                                               ; preds = %11, %26, %27, %28, %29
  %31 = phi i32 [ 0, %29 ], [ 3, %28 ], [ 2, %27 ], [ 0, %26 ], [ 1, %11 ]
  %32 = bitcast i8* %14 to i32*
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 5, i32 1
  %34 = bitcast i8* %33 to %"class.blink::CSSPrimitiveValue"**
  %35 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %34, align 8
  %36 = icmp eq %"class.blink::CSSPrimitiveValue"* %35, null
  br i1 %36, label %57, label %37

37:                                               ; preds = %30
  %38 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #15
  %39 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %4, %"class.blink::CSSPrimitiveValue"* nonnull %35, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %39) #15
  %40 = getelementptr inbounds i8, i8* %12, i64 8
  %41 = bitcast i8* %40 to %"class.blink::Length"*
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 8
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #15
  br label %46

46:                                               ; preds = %45, %37
  %47 = load i8, i8* %15, align 1
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %41) #15
  br label %50

50:                                               ; preds = %46, %49
  %51 = bitcast i8* %40 to i64*
  %52 = load i64, i64* %3, align 8
  store i64 %52, i64* %51, align 4
  %53 = load i8, i8* %42, align 1
  %54 = icmp eq i8 %53, 8
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #15
  br label %56

56:                                               ; preds = %50, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #15
  br label %57

57:                                               ; preds = %30, %56
  %58 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 8
  %59 = bitcast %"class.blink::CSSValue"* %58 to %"class.blink::CSSValue"**
  %60 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %59, align 8
  %61 = icmp eq %"class.blink::CSSValue"* %60, null
  br i1 %61, label %94, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::NinePieceImage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #15
  %64 = getelementptr inbounds %"class.blink::NinePieceImage", %"class.blink::NinePieceImage"* %5, i64 0, i32 0, i32 0, i32 0
  %65 = call %"class.blink::NinePieceImageData"* @_ZN5blink14NinePieceImage12MaskDefaultsEv()
  store %"class.blink::NinePieceImageData"* %65, %"class.blink::NinePieceImageData"** %64, align 8
  %66 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %59, align 8
  call void @_ZN5blink13CSSToStyleMap17MapNinePieceImageERNS_18StyleResolverStateENS_13CSSPropertyIDERKNS_8CSSValueERNS_14NinePieceImageE(%"class.blink::StyleResolverState"* dereferenceable(600) %0, i32 397, %"class.blink::CSSValue"* dereferenceable(3) %66, %"class.blink::NinePieceImage"* nonnull dereferenceable(8) %5) #15
  %67 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %64, align 8
  %68 = icmp eq %"class.blink::NinePieceImageData"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #15
  br label %71

71:                                               ; preds = %69, %62
  %72 = ptrtoint %"class.blink::NinePieceImageData"* %67 to i64
  %73 = bitcast i8* %18 to i64*
  %74 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %19, align 8
  store i64 %72, i64* %73, align 8
  %75 = icmp eq %"class.blink::NinePieceImageData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #15
  %78 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %74) #15
  %82 = bitcast %"class.blink::NinePieceImageData"* %74 to i8*
  call void @free(i8* %82) #15
  br label %83

83:                                               ; preds = %71, %76, %81
  %84 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %64, align 8
  %85 = icmp eq %"class.blink::NinePieceImageData"* %84, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %87) #15
  %88 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %84) #15
  %92 = bitcast %"class.blink::NinePieceImageData"* %84 to i8*
  call void @free(i8* %92) #15
  br label %93

93:                                               ; preds = %83, %86, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #15
  br label %94

94:                                               ; preds = %57, %93, %2
  %95 = phi i64 [ 0, %2 ], [ %20, %93 ], [ %20, %57 ]
  %96 = inttoptr i64 %95 to %"class.blink::StyleReflection"*
  ret %"class.blink::StyleReflection"* %96
}

declare void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret, %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NinePieceImageData"* @_ZN5blink14NinePieceImage12MaskDefaultsEv() local_unnamed_addr #2 comdat align 2 {
  %1 = alloca %"class.blink::NinePieceImage", align 8
  %2 = alloca %"class.blink::LengthBox", align 4
  %3 = alloca %"class.blink::BorderImageLengthBox", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = getelementptr inbounds %"class.blink::NinePieceImage", %"class.blink::NinePieceImage"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::NinePieceImageData"* inttoptr (i64 -6148914691236517206 to %"class.blink::NinePieceImageData"*), %"class.blink::NinePieceImageData"** %6, align 8
  call void @_ZN5blink14NinePieceImageC1Ev(%"class.blink::NinePieceImage"* nonnull %1) #15
  %7 = bitcast %"class.blink::LengthBox"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %8, align 4, !alias.scope !5
  %9 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 0, i32 1
  store i8 0, i8* %9, align 4, !alias.scope !5
  %10 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 0, i32 2
  store i8 2, i8* %10, align 1, !alias.scope !5
  %11 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 0, i32 3
  store i8 0, i8* %11, align 2, !alias.scope !5
  %12 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %12, align 4, !alias.scope !8
  %13 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 1, i32 1
  store i8 0, i8* %13, align 4, !alias.scope !8
  %14 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 1, i32 2
  store i8 2, i8* %14, align 1, !alias.scope !8
  %15 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 1, i32 3
  store i8 0, i8* %15, align 2, !alias.scope !8
  %16 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 0, i32* %16, align 4, !alias.scope !11
  %17 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 2, i32 1
  store i8 0, i8* %17, align 4, !alias.scope !11
  %18 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 2, i32 2
  store i8 2, i8* %18, align 1, !alias.scope !11
  %19 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 2, i32 3
  store i8 0, i8* %19, align 2, !alias.scope !11
  %20 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 3, i32 0, i32 0
  store i32 0, i32* %20, align 4, !alias.scope !14
  %21 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 3, i32 1
  store i8 0, i8* %21, align 4, !alias.scope !14
  %22 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 3, i32 2
  store i8 2, i8* %22, align 1, !alias.scope !14
  %23 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 3, i32 3
  store i8 0, i8* %23, align 2, !alias.scope !14
  %24 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  %25 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %42, label %28

28:                                               ; preds = %0
  %29 = call noalias i8* @malloc(i64 248) #15
  %30 = bitcast i8* %29 to %"class.blink::NinePieceImageData"*
  call void @_ZN5blink18NinePieceImageDataC2ERKS0_(%"class.blink::NinePieceImageData"* %30, %"class.blink::NinePieceImageData"* dereferenceable(248) %24) #15
  %31 = ptrtoint i8* %29 to i64
  %32 = bitcast %"class.blink::NinePieceImage"* %1 to i64*
  %33 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  store i64 %31, i64* %32, align 8
  %34 = icmp eq %"class.blink::NinePieceImageData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #15
  %37 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %33) #15
  %41 = bitcast %"class.blink::NinePieceImageData"* %33 to i8*
  call void @free(i8* %41) #15
  br label %42

42:                                               ; preds = %0, %28, %35, %40
  %43 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %43, i64 0, i32 3
  %45 = call dereferenceable(32) %"class.blink::LengthBox"* @_ZN5blink9LengthBoxaSEOS0_(%"class.blink::LengthBox"* %44, %"class.blink::LengthBox"* nonnull dereferenceable(32) %2)
  %46 = load i8, i8* %22, align 1
  %47 = icmp eq i8 %46, 8
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 3
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %49) #15
  br label %50

50:                                               ; preds = %48, %42
  %51 = load i8, i8* %18, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 2
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %53, %50
  %56 = load i8, i8* %14, align 1
  %57 = icmp eq i8 %56, 8
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %59) #15
  br label %60

60:                                               ; preds = %58, %55
  %61 = load i8, i8* %10, align 1
  %62 = icmp eq i8 %61, 8
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %2, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %64) #15
  br label %65

65:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #15
  %66 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  %67 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %84, label %70

70:                                               ; preds = %65
  %71 = call noalias i8* @malloc(i64 248) #15
  %72 = bitcast i8* %71 to %"class.blink::NinePieceImageData"*
  call void @_ZN5blink18NinePieceImageDataC2ERKS0_(%"class.blink::NinePieceImageData"* %72, %"class.blink::NinePieceImageData"* dereferenceable(248) %66) #15
  %73 = ptrtoint i8* %71 to i64
  %74 = bitcast %"class.blink::NinePieceImage"* %1 to i64*
  %75 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  store i64 %73, i64* %74, align 8
  %76 = icmp eq %"class.blink::NinePieceImageData"* %75, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %78) #15
  %79 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %75) #15
  %83 = bitcast %"class.blink::NinePieceImageData"* %75 to i8*
  call void @free(i8* %83) #15
  br label %84

84:                                               ; preds = %65, %70, %77, %82
  %85 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  %86 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %85, i64 0, i32 1
  %87 = load i8, i8* %86, align 4
  %88 = or i8 %87, 1
  store i8 %88, i8* %86, align 4
  %89 = bitcast %"class.blink::BorderImageLengthBox"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %89) #15
  %90 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 7, i1 false) #15, !alias.scope !17
  %91 = bitcast %"class.blink::BorderImageLengthBox"* %3 to i64*
  %92 = load i64, i64* %4, align 8
  store i64 %92, i64* %91, align 8
  %93 = and i64 %92, 280375465082880
  %94 = icmp eq i64 %93, 8796093022208
  br i1 %94, label %95, label %98

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %96) #15
  %97 = load i64, i64* %4, align 8
  br label %98

98:                                               ; preds = %95, %84
  %99 = phi i64 [ %97, %95 ], [ %92, %84 ]
  %100 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 0, i32 1
  store double 0.000000e+00, double* %100, align 8
  %101 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 0, i32 2
  store i32 0, i32* %101, align 8
  %102 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 1
  %103 = bitcast %"class.blink::BorderImageLength"* %102 to i64*
  store i64 %99, i64* %103, align 8
  %104 = and i64 %99, 280375465082880
  %105 = icmp eq i64 %104, 8796093022208
  br i1 %105, label %106, label %109

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %102, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %107) #15
  %108 = load i64, i64* %4, align 8
  br label %109

109:                                              ; preds = %106, %98
  %110 = phi i64 [ %108, %106 ], [ %99, %98 ]
  %111 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 1, i32 1
  store double 0.000000e+00, double* %111, align 8
  %112 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 1, i32 2
  store i32 0, i32* %112, align 8
  %113 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 2
  %114 = bitcast %"class.blink::BorderImageLength"* %113 to i64*
  store i64 %110, i64* %114, align 8
  %115 = and i64 %110, 280375465082880
  %116 = icmp eq i64 %115, 8796093022208
  br i1 %116, label %117, label %120

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %113, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %118) #15
  %119 = load i64, i64* %4, align 8
  br label %120

120:                                              ; preds = %117, %109
  %121 = phi i64 [ %119, %117 ], [ %110, %109 ]
  %122 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 2, i32 1
  store double 0.000000e+00, double* %122, align 8
  %123 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 2, i32 2
  store i32 0, i32* %123, align 8
  %124 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 3
  %125 = bitcast %"class.blink::BorderImageLength"* %124 to i64*
  store i64 %121, i64* %125, align 8
  %126 = and i64 %121, 280375465082880
  %127 = icmp eq i64 %126, 8796093022208
  br i1 %127, label %128, label %130

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %124, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %129) #15
  br label %130

130:                                              ; preds = %120, %128
  %131 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 3, i32 1
  store double 0.000000e+00, double* %131, align 8
  %132 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 3, i32 2
  store i32 0, i32* %132, align 8
  %133 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  %134 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %151, label %137

137:                                              ; preds = %130
  %138 = call noalias i8* @malloc(i64 248) #15
  %139 = bitcast i8* %138 to %"class.blink::NinePieceImageData"*
  call void @_ZN5blink18NinePieceImageDataC2ERKS0_(%"class.blink::NinePieceImageData"* %139, %"class.blink::NinePieceImageData"* dereferenceable(248) %133) #15
  %140 = ptrtoint i8* %138 to i64
  %141 = bitcast %"class.blink::NinePieceImage"* %1 to i64*
  %142 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  store i64 %140, i64* %141, align 8
  %143 = icmp eq %"class.blink::NinePieceImageData"* %142, null
  br i1 %143, label %151, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %142, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %145) #15
  %146 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %144
  call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %142) #15
  %150 = bitcast %"class.blink::NinePieceImageData"* %142 to i8*
  call void @free(i8* %150) #15
  br label %151

151:                                              ; preds = %130, %137, %144, %149
  %152 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  %153 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %152, i64 0, i32 4
  %154 = call dereferenceable(96) %"class.blink::BorderImageLengthBox"* @_ZN5blink20BorderImageLengthBoxaSEOS0_(%"class.blink::BorderImageLengthBox"* %153, %"class.blink::BorderImageLengthBox"* nonnull dereferenceable(96) %3)
  %155 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 3, i32 0, i32 2
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 8
  br i1 %157, label %158, label %160

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %159) #15
  br label %160

160:                                              ; preds = %158, %151
  %161 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 2, i32 0, i32 2
  %162 = load i8, i8* %161, align 1
  %163 = icmp eq i8 %162, 8
  br i1 %163, label %164, label %166

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %165) #15
  br label %166

166:                                              ; preds = %164, %160
  %167 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 1, i32 0, i32 2
  %168 = load i8, i8* %167, align 1
  %169 = icmp eq i8 %168, 8
  br i1 %169, label %170, label %172

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 1, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %171) #15
  br label %172

172:                                              ; preds = %170, %166
  %173 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 0, i32 0, i32 2
  %174 = load i8, i8* %173, align 1
  %175 = icmp eq i8 %174, 8
  br i1 %175, label %176, label %178

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %3, i64 0, i32 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %177) #15
  br label %178

178:                                              ; preds = %172, %176
  %179 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %180 = load i8, i8* %179, align 1
  %181 = icmp eq i8 %180, 8
  br i1 %181, label %182, label %183

182:                                              ; preds = %178
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %183

183:                                              ; preds = %178, %182
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %89) #15
  %184 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %6, align 8
  ret %"class.blink::NinePieceImageData"* %184
}

declare void @_ZN5blink13CSSToStyleMap17MapNinePieceImageERNS_18StyleResolverStateENS_13CSSPropertyIDERKNS_8CSSValueERNS_14NinePieceImageE(%"class.blink::StyleResolverState"* dereferenceable(600), i32, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::NinePieceImage"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleSVGResource"* @_ZN5blink21StyleBuilderConverter23ConvertElementReferenceERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %8, label %75

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::cssvalue::CSSURIValue"*
  %10 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 11
  %11 = tail call %"class.blink::SVGResource"* @_ZN5blink21ElementStyleResources23GetSVGResourceFromValueENS_13CSSPropertyIDERKNS_8cssvalue11CSSURIValueE(%"class.blink::ElementStyleResources"* %10, i32 0, %"class.blink::cssvalue::CSSURIValue"* dereferenceable(40) %9) #15
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 5, i32 1
  %13 = load i8, i8* %12, align 8, !range !20
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 10, i32 2
  %17 = select i1 %14, i8* %16, i8* %15
  %18 = tail call noalias i8* @malloc(i64 32) #15
  %19 = bitcast i8* %18 to %"class.blink::StyleSVGResource"*
  %20 = bitcast i8* %18 to i32*
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = bitcast i8* %21 to %"class.blink::SVGResource"**
  store %"class.blink::SVGResource"* %11, %"class.blink::SVGResource"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %18, i64 16
  %24 = bitcast i8* %23 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %24, align 8
  %25 = ptrtoint %"class.blink::SVGResource"* %11 to i64
  switch i64 %25, label %26 [
    i64 0, label %52
    i64 -1, label %52
  ]

26:                                               ; preds = %8
  %27 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %28 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %27, i64 0, i32 1
  %29 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %28) #15
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %33, !prof !21

31:                                               ; preds = %26
  %32 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %28, i8* %32) #15
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi i8* [ %32, %31 ], [ %29, %26 ]
  %35 = bitcast i8* %34 to %"class.blink::ThreadState"**
  %36 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  %41 = icmp eq %"class.blink::PersistentNode"* %40, null
  br i1 %41, label %42, label %45, !prof !21

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %38, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %43) #15
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi %"class.blink::PersistentNode"* [ %44, %42 ], [ %40, %33 ]
  %47 = bitcast %"class.blink::PersistentNode"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::PersistentRegion"* %38 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %46, i64 0, i32 0
  store i8* %21, i8** %50, align 8
  %51 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %46, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11SVGResourceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %51, align 8
  store %"class.blink::PersistentNode"* %46, %"class.blink::PersistentNode"** %24, align 8
  br label %52

52:                                               ; preds = %8, %8, %45
  %53 = bitcast i8* %17 to %"class.WTF::StringImpl"**
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds i8, i8* %18, i64 24
  %56 = bitcast i8* %55 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %56, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #15
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !21

72:                                               ; preds = %63
  tail call void @llvm.trap() #15
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %73, %58, %52, %2
  %76 = phi %"class.blink::StyleSVGResource"* [ null, %2 ], [ %19, %52 ], [ %19, %58 ], [ %19, %73 ]
  ret %"class.blink::StyleSVGResource"* %76
}

declare %"class.blink::SVGResource"* @_ZN5blink21ElementStyleResources23GetSVGResourceFromValueENS_13CSSPropertyIDERKNS_8cssvalue11CSSURIValueE(%"class.blink::ElementStyleResources"*, i32, %"class.blink::cssvalue::CSSURIValue"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter11ConvertClipERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::LengthBox"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.blink::Length"*
  %12 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %14 = bitcast i8* %13 to %"class.blink::CSSValue"**
  %15 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %15, i64 0, i32 2
  %17 = load i8, i8* %16, align 1, !noalias !22
  %18 = icmp ne i8 %17, 2
  %19 = icmp eq %"class.blink::CSSValue"* %15, null
  %20 = or i1 %19, %18
  br i1 %20, label %27, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %15, i64 1, i32 1
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4, !noalias !22
  %25 = icmp eq i32 %24, 405
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 7, i1 false) #15, !alias.scope !25
  br label %30

27:                                               ; preds = %21, %3
  %28 = bitcast %"class.blink::CSSValue"* %15 to %"class.blink::CSSPrimitiveValue"*
  %29 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %5, %"class.blink::CSSPrimitiveValue"* %28, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %29) #15
  br label %30

30:                                               ; preds = %26, %27
  %31 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 5, i32 1
  %33 = bitcast i8* %32 to %"class.blink::CSSValue"**
  %34 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 2
  %36 = load i8, i8* %35, align 1, !noalias !28
  %37 = icmp ne i8 %36, 2
  %38 = icmp eq %"class.blink::CSSValue"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %46, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 1, i32 1
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4, !noalias !28
  %44 = icmp eq i32 %43, 405
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 7, i1 false) #15, !alias.scope !31
  br label %49

46:                                               ; preds = %40, %30
  %47 = bitcast %"class.blink::CSSValue"* %34 to %"class.blink::CSSPrimitiveValue"*
  %48 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %7, %"class.blink::CSSPrimitiveValue"* %47, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %48) #15
  br label %49

49:                                               ; preds = %45, %46
  %50 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #15
  %51 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 8
  %52 = bitcast %"class.blink::CSSValue"* %51 to %"class.blink::CSSValue"**
  %53 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %53, i64 0, i32 2
  %55 = load i8, i8* %54, align 1, !noalias !34
  %56 = icmp ne i8 %55, 2
  %57 = icmp eq %"class.blink::CSSValue"* %53, null
  %58 = or i1 %57, %56
  br i1 %58, label %65, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %53, i64 1, i32 1
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 4, !noalias !34
  %63 = icmp eq i32 %62, 405
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 7, i1 false) #15, !alias.scope !37
  br label %68

65:                                               ; preds = %59, %49
  %66 = bitcast %"class.blink::CSSValue"* %53 to %"class.blink::CSSPrimitiveValue"*
  %67 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %9, %"class.blink::CSSPrimitiveValue"* %66, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %67) #15
  br label %68

68:                                               ; preds = %64, %65
  %69 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #15
  %70 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 10, i32 2
  %71 = bitcast i8* %70 to %"class.blink::CSSValue"**
  %72 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %72, i64 0, i32 2
  %74 = load i8, i8* %73, align 1, !noalias !40
  %75 = icmp ne i8 %74, 2
  %76 = icmp eq %"class.blink::CSSValue"* %72, null
  %77 = or i1 %76, %75
  br i1 %77, label %84, label %78

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %72, i64 1, i32 1
  %80 = bitcast i8* %79 to i32*
  %81 = load i32, i32* %80, align 4, !noalias !40
  %82 = icmp eq i32 %81, 405
  br i1 %82, label %83, label %84

83:                                               ; preds = %78
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 7, i1 false) #15, !alias.scope !43
  br label %87

84:                                               ; preds = %78, %68
  %85 = bitcast %"class.blink::CSSValue"* %72 to %"class.blink::CSSPrimitiveValue"*
  %86 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %11, %"class.blink::CSSPrimitiveValue"* %85, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %86) #15
  br label %87

87:                                               ; preds = %83, %84
  %88 = bitcast %"class.blink::LengthBox"* %0 to i64*
  %89 = load i64, i64* %10, align 8
  store i64 %89, i64* %88, align 4
  %90 = and i64 %89, 280375465082880
  %91 = icmp eq i64 %90, 8796093022208
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %93) #15
  br label %94

94:                                               ; preds = %92, %87
  %95 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1
  %96 = bitcast %"class.blink::Length"* %95 to i64*
  %97 = load i64, i64* %6, align 8
  store i64 %97, i64* %96, align 4
  %98 = and i64 %97, 280375465082880
  %99 = icmp eq i64 %98, 8796093022208
  br i1 %99, label %100, label %101

100:                                              ; preds = %94
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %95) #15
  br label %101

101:                                              ; preds = %100, %94
  %102 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2
  %103 = bitcast %"class.blink::Length"* %102 to i64*
  %104 = load i64, i64* %4, align 8
  store i64 %104, i64* %103, align 4
  %105 = and i64 %104, 280375465082880
  %106 = icmp eq i64 %105, 8796093022208
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %102) #15
  br label %108

108:                                              ; preds = %107, %101
  %109 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3
  %110 = bitcast %"class.blink::Length"* %109 to i64*
  %111 = load i64, i64* %8, align 8
  store i64 %111, i64* %110, align 4
  %112 = and i64 %111, 280375465082880
  %113 = icmp eq i64 %112, 8796093022208
  br i1 %113, label %114, label %115

114:                                              ; preds = %108
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %109) #15
  br label %115

115:                                              ; preds = %108, %114
  %116 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %11) #15
  br label %120

120:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #15
  %121 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 8
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #15
  br label %125

125:                                              ; preds = %120, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #15
  %126 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %127 = load i8, i8* %126, align 1
  %128 = icmp eq i8 %127, 8
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #15
  br label %130

130:                                              ; preds = %125, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  %131 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %132 = load i8, i8* %131, align 1
  %133 = icmp eq i8 %132, 8
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %135

135:                                              ; preds = %130, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 2
  %7 = icmp eq %"class.blink::CSSValue"* %2, null
  %8 = or i1 %7, %6
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 405
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::Length"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 7, i1 false) #15, !alias.scope !46
  br label %19

16:                                               ; preds = %3, %9
  %17 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %18 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  tail call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSPrimitiveValue"* %17, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %18) #15
  br label %19

19:                                               ; preds = %16, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ClipPathOperation"* @_ZN5blink21StyleBuilderConverter15ConvertClipPathERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %13 [
    i8 40, label %5
    i8 16, label %5
    i8 15, label %5
    i8 14, label %5
    i8 13, label %5
  ]

5:                                                ; preds = %2, %2, %2, %2, %2
  %6 = tail call %"class.blink::BasicShape"* @_ZN5blink18BasicShapeForValueERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600) %0, %"class.blink::CSSValue"* dereferenceable(3) %1) #15
  %7 = ptrtoint %"class.blink::BasicShape"* %6 to i64
  %8 = tail call noalias i8* @malloc(i64 24) #15
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22ShapeClipPathOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  br label %93

13:                                               ; preds = %2
  %14 = icmp ne i8 %4, 8
  %15 = icmp eq %"class.blink::CSSValue"* %1, null
  %16 = or i1 %15, %14
  br i1 %16, label %99, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::cssvalue::CSSURIValue"*
  %19 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 11
  %20 = tail call %"class.blink::SVGResource"* @_ZN5blink21ElementStyleResources23GetSVGResourceFromValueENS_13CSSPropertyIDERKNS_8cssvalue11CSSURIValueE(%"class.blink::ElementStyleResources"* %19, i32 111, %"class.blink::cssvalue::CSSURIValue"* nonnull dereferenceable(40) %18) #15
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 5, i32 1
  %22 = load i8, i8* %21, align 8, !range !20
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 10, i32 2
  %26 = select i1 %23, i8* %25, i8* %24
  %27 = tail call noalias i8* @malloc(i64 40) #15
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 1, i32* %29, align 4
  %30 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink26ReferenceClipPathOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %27, i64 16
  %32 = bitcast i8* %31 to %"class.blink::SVGResource"**
  store %"class.blink::SVGResource"* %20, %"class.blink::SVGResource"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %27, i64 24
  %34 = bitcast i8* %33 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %34, align 8
  %35 = ptrtoint %"class.blink::SVGResource"* %20 to i64
  switch i64 %35, label %36 [
    i64 0, label %62
    i64 -1, label %62
  ]

36:                                               ; preds = %17
  %37 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %38 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %37, i64 0, i32 1
  %39 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %38) #15
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43, !prof !21

41:                                               ; preds = %36
  %42 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %38, i8* %42) #15
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i8* [ %42, %41 ], [ %39, %36 ]
  %45 = bitcast i8* %44 to %"class.blink::ThreadState"**
  %46 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %52, label %55, !prof !21

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %53) #15
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  br label %55

55:                                               ; preds = %52, %43
  %56 = phi %"class.blink::PersistentNode"* [ %54, %52 ], [ %50, %43 ]
  %57 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.blink::PersistentRegion"* %48 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 0
  store i8* %31, i8** %60, align 8
  %61 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11SVGResourceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %61, align 8
  store %"class.blink::PersistentNode"* %56, %"class.blink::PersistentNode"** %34, align 8
  br label %62

62:                                               ; preds = %17, %17, %55
  %63 = getelementptr inbounds i8, i8* %27, i64 32
  %64 = bitcast i8* %26 to %"class.WTF::StringImpl"**
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %90, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 acquire, align 4
  %70 = and i32 %69, 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = load atomic i32, i32* %68 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #15
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !21

85:                                               ; preds = %76
  tail call void @llvm.trap() #15
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %90

88:                                               ; preds = %67
  %89 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %90

90:                                               ; preds = %88, %86, %72, %62
  %91 = phi %"class.WTF::StringImpl"* [ %89, %88 ], [ %65, %72 ], [ %65, %86 ], [ null, %62 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %91 to i64
  br label %93

93:                                               ; preds = %5, %90
  %94 = phi i8* [ %63, %90 ], [ %12, %5 ]
  %95 = phi i64 [ %92, %90 ], [ %7, %5 ]
  %96 = phi i8* [ %27, %90 ], [ %8, %5 ]
  %97 = bitcast i8* %94 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast i8* %96 to %"class.blink::ClipPathOperation"*
  br label %99

99:                                               ; preds = %93, %13
  %100 = phi %"class.blink::ClipPathOperation"* [ null, %13 ], [ %98, %93 ]
  ret %"class.blink::ClipPathOperation"* %100
}

declare %"class.blink::BasicShape"* @_ZN5blink18BasicShapeForValueERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter23ConvertFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE(%"class.blink::FilterOperations"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3), i32) local_unnamed_addr #2 align 2 {
  tail call void @_ZN5blink23FilterOperationResolver22CreateFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE(%"class.blink::FilterOperations"* sret %0, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %2, i32 %3) #15
  ret void
}

declare void @_ZN5blink23FilterOperationResolver22CreateFilterOperationsERNS_18StyleResolverStateERKNS_8CSSValueENS_13CSSPropertyIDE(%"class.blink::FilterOperations"* sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter32ConvertOffscreenFilterOperationsERKNS_8CSSValueERKNS_4FontE(%"class.blink::FilterOperations"* noalias sret, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #2 align 2 {
  tail call void @_ZN5blink23FilterOperationResolver31CreateOffscreenFilterOperationsERKNS_8CSSValueERKNS_4FontE(%"class.blink::FilterOperations"* sret %0, %"class.blink::CSSValue"* dereferenceable(3) %1, %"class.blink::Font"* dereferenceable(88) %2) #15
  ret void
}

declare void @_ZN5blink23FilterOperationResolver31CreateOffscreenFilterOperationsERKNS_8CSSValueERKNS_4FontE(%"class.blink::FilterOperations"* sret, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleBuilderConverterBase17ConvertFontFamilyERKNS_8CSSValueEPNS_11FontBuilderEPKNS_8DocumentE(%"struct.blink::FontDescription::FamilyDescription"* noalias sret, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::FontBuilder"*, %"class.blink::Document"* nocapture readnone) local_unnamed_addr #2 align 2 {
  %5 = bitcast %"struct.blink::FontDescription::FamilyDescription"* %0 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::FontFamily"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #15
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 45
  %12 = icmp eq %"class.blink::CSSValue"* %1, null
  %13 = or i1 %12, %11
  br i1 %13, label %56, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::cssvalue::CSSPendingSystemFontValue"*
  %16 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8cssvalue25CSSPendingSystemFontValue17ResolveFontFamilyEv(%"class.blink::cssvalue::CSSPendingSystemFontValue"* nonnull %15) #15
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #15
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !21

34:                                               ; preds = %25
  tail call void @llvm.trap() #15
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %35, %20, %14
  %38 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %39 = bitcast %"class.blink::FontFamily"* %7 to i64*
  %40 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %250, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %250

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %250

56:                                               ; preds = %4
  %57 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %58 = bitcast i8* %57 to %"class.blink::Member.1324"**
  %59 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %59, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %250, label %66

66:                                               ; preds = %56
  %67 = icmp eq %"class.blink::FontBuilder"* %2, null
  br label %68

68:                                               ; preds = %66, %246
  %69 = phi %"class.blink::Member.1324"* [ %59, %66 ], [ %248, %246 ]
  %70 = phi %"class.blink::FontFamily"* [ null, %66 ], [ %247, %246 ]
  %71 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %69, i64 0, i32 0, i32 0
  %72 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %72, i64 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp ne i8 %74, 29
  %76 = icmp eq %"class.blink::CSSValue"* %72, null
  %77 = or i1 %76, %75
  br i1 %77, label %136, label %78

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %72, i64 2, i32 2
  %80 = bitcast i8* %79 to %"class.WTF::StringImpl"**
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %246, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #15
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !21

97:                                               ; preds = %88
  tail call void @llvm.trap() #15
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83
  %101 = load atomic i32, i32* %84 acquire, align 4
  %102 = and i32 %101, 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %100
  %105 = load atomic i32, i32* %84 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %122

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #15
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !21

117:                                              ; preds = %108
  tail call void @llvm.trap() #15
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %122

120:                                              ; preds = %100
  %121 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %81) #15
  br label %122

122:                                              ; preds = %104, %118, %120
  %123 = phi %"class.WTF::StringImpl"* [ %81, %118 ], [ %81, %104 ], [ %121, %120 ]
  %124 = ptrtoint %"class.WTF::StringImpl"* %123 to i64
  %125 = load atomic i32, i32* %84 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %122
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %122
  %133 = phi i32 [ %131, %130 ], [ %129, %122 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %151

135:                                              ; preds = %132
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #15
  br label %151

136:                                              ; preds = %68
  br i1 %67, label %246, label %137

137:                                              ; preds = %136
  %138 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %72, i64 1, i32 1
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %140, -79
  %142 = icmp ult i32 %141, 6
  br i1 %142, label %143, label %147

143:                                              ; preds = %137
  %144 = sext i32 %141 to i64
  %145 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN5blink25StyleBuilderConverterBase17ConvertFontFamilyERKNS_8CSSValueEPNS_11FontBuilderEPKNS_8DocumentE, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  br label %147

147:                                              ; preds = %137, %143
  %148 = phi i32 [ %146, %143 ], [ 0, %137 ]
  %149 = tail call %"class.WTF::StringImpl"* @_ZNK5blink11FontBuilder21GenericFontFamilyNameENS_15FontDescription17GenericFamilyTypeE(%"class.blink::FontBuilder"* nonnull %2, i32 %148) #15
  %150 = ptrtoint %"class.WTF::StringImpl"* %149 to i64
  br label %151

151:                                              ; preds = %147, %135, %132
  %152 = phi i64 [ %150, %147 ], [ %124, %135 ], [ %124, %132 ]
  %153 = phi i32 [ %148, %147 ], [ 0, %135 ], [ 0, %132 ]
  %154 = inttoptr i64 %152 to %"class.WTF::StringImpl"*
  %155 = icmp eq i64 %152, 0
  br i1 %155, label %246, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %232, label %160

160:                                              ; preds = %156
  %161 = icmp eq %"class.blink::FontFamily"* %70, null
  br i1 %161, label %193, label %162

162:                                              ; preds = %160
  %163 = tail call noalias i8* @malloc(i64 24) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 16, i1 false) #15
  %164 = getelementptr inbounds i8, i8* %163, i64 16
  %165 = bitcast i8* %164 to i32*
  store i32 1, i32* %165, align 4
  %166 = icmp eq i8* %163, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %162
  %168 = bitcast i8* %164 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %168) #15
  br label %169

169:                                              ; preds = %162, %167
  %170 = ptrtoint i8* %163 to i64
  %171 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %70, i64 0, i32 1
  %172 = bitcast %class.scoped_refptr.224* %171 to i64*
  %173 = getelementptr inbounds %class.scoped_refptr.224, %class.scoped_refptr.224* %171, i64 0, i32 0
  %174 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %173, align 8
  store i64 %170, i64* %172, align 8
  %175 = icmp eq %"class.blink::SharedFontFamily"* %174, null
  br i1 %175, label %186, label %176

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %174, i64 0, i32 1, i32 0
  %178 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %177, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %178) #15
  %179 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %177, i64 0, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %177, i64 -4
  %184 = bitcast %"class.base::RefCounted.1843"* %183 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %184) #15
  %185 = bitcast %"class.base::RefCounted.1843"* %183 to i8*
  tail call void @free(i8* %185) #15
  br label %186

186:                                              ; preds = %169, %176, %182
  %187 = bitcast i8* %163 to %"class.blink::FontFamily"*
  br i1 %166, label %193, label %188

188:                                              ; preds = %186
  %189 = bitcast i8* %164 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %189) #15
  %190 = load i32, i32* %165, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %188
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* nonnull %187) #15
  tail call void @free(i8* nonnull %163) #15
  br label %193

193:                                              ; preds = %160, %186, %188, %192
  %194 = phi %"class.blink::FontFamily"* [ %7, %160 ], [ %187, %186 ], [ %187, %188 ], [ %187, %192 ]
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #15
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !21

208:                                              ; preds = %199
  tail call void @llvm.trap() #15
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %193
  %212 = bitcast %"class.blink::FontFamily"* %194 to i64*
  %213 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %194, i64 0, i32 0, i32 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  store i64 %152, i64* %212, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #15
  br label %229

229:                                              ; preds = %211, %225, %228
  %230 = icmp eq i32 %153, 0
  br i1 %230, label %232, label %231

231:                                              ; preds = %229
  store i32 %153, i32* %6, align 8
  br label %232

232:                                              ; preds = %156, %229, %231
  %233 = phi %"class.blink::FontFamily"* [ %194, %231 ], [ %194, %229 ], [ %70, %156 ]
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %232
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %232
  %243 = phi i32 [ %241, %240 ], [ %239, %232 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #15
  br label %246

246:                                              ; preds = %78, %136, %151, %242, %245
  %247 = phi %"class.blink::FontFamily"* [ %233, %242 ], [ %233, %245 ], [ %70, %151 ], [ %70, %136 ], [ %70, %78 ]
  %248 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %69, i64 1
  %249 = icmp eq %"class.blink::Member.1324"* %248, %64
  br i1 %249, label %250, label %68

250:                                              ; preds = %246, %56, %55, %52, %37
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8cssvalue25CSSPendingSystemFontValue17ResolveFontFamilyEv(%"class.blink::cssvalue::CSSPendingSystemFontValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter17ConvertFontFamilyERNS_18StyleResolverStateERKNS_8CSSValueE(%"struct.blink::FontDescription::FamilyDescription"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 1
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %5) #15
  %7 = icmp eq %"class.blink::Settings"* %6, null
  %8 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 9
  %9 = select i1 %7, %"class.blink::FontBuilder"* null, %"class.blink::FontBuilder"* %8
  tail call void @_ZN5blink25StyleBuilderConverterBase17ConvertFontFamilyERKNS_8CSSValueEPNS_11FontBuilderEPKNS_8DocumentE(%"struct.blink::FontDescription::FamilyDescription"* sret %0, %"class.blink::CSSValue"* dereferenceable(3) %2, %"class.blink::FontBuilder"* %9, %"class.blink::Document"* undef)
  ret void
}

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontFeatureSettings"* @_ZN5blink21StyleBuilderConverter26ConvertFontFeatureSettingsERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::FontTagValuePair"*
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 2
  %8 = icmp eq %"class.blink::CSSValue"* %1, null
  %9 = or i1 %8, %7
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 56
  br i1 %14, label %80, label %15

15:                                               ; preds = %2, %10
  %16 = tail call noalias i8* @malloc(i64 24) #15
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #15
  store i32 1, i32* %18, align 4
  %19 = ptrtoint i8* %16 to i64
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %80

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %26 = bitcast i8* %25 to %"class.WTF::Vector.1855"*
  %27 = bitcast i64* %3 to i8*
  %28 = bitcast i64* %3 to i32*
  %29 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %4, i64 0, i32 1
  %30 = getelementptr inbounds i8, i8* %16, i64 12
  %31 = bitcast i8* %30 to i32*
  %32 = getelementptr inbounds i8, i8* %16, i64 8
  %33 = bitcast i8* %32 to i32*
  %34 = bitcast i8* %16 to %"class.blink::FontTagValuePair"**
  %35 = bitcast i8* %16 to %"class.WTF::Vector.226"*
  br label %36

36:                                               ; preds = %77, %24
  %37 = phi i32 [ 0, %24 ], [ %78, %77 ]
  %38 = call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %26, i32 %37) #15
  %39 = bitcast %"class.blink::Member.1324"* %38 to %"class.blink::cssvalue::CSSFontFeatureValue"**
  %40 = load %"class.blink::cssvalue::CSSFontFeatureValue"*, %"class.blink::cssvalue::CSSFontFeatureValue"** %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  %41 = getelementptr inbounds %"class.blink::cssvalue::CSSFontFeatureValue", %"class.blink::cssvalue::CSSFontFeatureValue"* %40, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"class.blink::cssvalue::CSSFontFeatureValue", %"class.blink::cssvalue::CSSFontFeatureValue"* %40, i64 0, i32 2, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #15
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !21

60:                                               ; preds = %51
  call void @llvm.trap() #15
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %36, %46, %61
  %64 = call i32 @_ZN5blink25AtomicStringToFourByteTagEN3WTF12AtomicStringE(%"class.WTF::StringImpl"* %44) #15
  store i32 %64, i32* %28, align 8
  store i32 %42, i32* %29, align 4
  %65 = load i32, i32* %31, align 4
  %66 = load i32, i32* %33, align 8
  %67 = icmp eq i32 %65, %66
  br i1 %67, label %76, label %68, !prof !21

68:                                               ; preds = %63
  %69 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %34, align 8
  %70 = zext i32 %65 to i64
  %71 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %69, i64 %70
  %72 = bitcast %"class.blink::FontTagValuePair"* %71 to i64*
  %73 = load i64, i64* %3, align 8
  store i64 %73, i64* %72, align 4
  %74 = load i32, i32* %31, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %31, align 4
  br label %77

76:                                               ; preds = %63
  call void @_ZN3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.226"* %35, %"class.blink::FontTagValuePair"* nonnull dereferenceable(8) %4) #15
  br label %77

77:                                               ; preds = %68, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  %78 = add nuw nsw i32 %37, 1
  %79 = icmp eq i32 %78, %22
  br i1 %79, label %80, label %36

80:                                               ; preds = %77, %15, %10
  %81 = phi i64 [ 0, %10 ], [ %19, %15 ], [ %19, %77 ]
  %82 = inttoptr i64 %81 to %"class.blink::FontFeatureSettings"*
  ret %"class.blink::FontFeatureSettings"* %82
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontVariationSettings"* @_ZN5blink21StyleBuilderConverter28ConvertFontVariationSettingsERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca i1 (i64, i64)*, align 8
  %4 = alloca %"class.WTF::HashMap.1860", align 8
  %5 = alloca i32, align 4
  %6 = alloca float, align 4
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::FontTagValuePair.238"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 2
  %12 = icmp eq %"class.blink::CSSValue"* %1, null
  %13 = or i1 %12, %11
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 56
  br i1 %18, label %168, label %19

19:                                               ; preds = %2, %14
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::HashMap.1860"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.WTF::HashMap.1860", %"class.WTF::HashMap.1860"* %4, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::HashMap.1860", %"class.WTF::HashMap.1860"* %4, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::HashMap.1860", %"class.WTF::HashMap.1860"* %4, i64 0, i32 0, i32 2
  %27 = bitcast %"class.WTF::HashMap.1860"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 20, i1 false) #15
  %28 = icmp sgt i32 %22, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %31 = bitcast i8* %30 to %"class.WTF::Vector.1855"*
  %32 = bitcast i32* %5 to i8*
  %33 = bitcast float* %6 to i8*
  %34 = bitcast float* %6 to i32*
  %35 = getelementptr inbounds %"class.WTF::HashMap.1860", %"class.WTF::HashMap.1860"* %4, i64 0, i32 0
  br label %75

36:                                               ; preds = %114
  %37 = load i32, i32* %26, align 4
  %38 = load %"struct.WTF::KeyValuePair.1864"*, %"struct.WTF::KeyValuePair.1864"** %24, align 8
  %39 = load i32, i32* %25, align 8
  %40 = icmp eq i32 %37, 0
  br label %41

41:                                               ; preds = %36, %19
  %42 = phi i32 [ %39, %36 ], [ 0, %19 ]
  %43 = phi %"struct.WTF::KeyValuePair.1864"* [ %38, %36 ], [ null, %19 ]
  %44 = phi i1 [ %40, %36 ], [ true, %19 ]
  %45 = call noalias i8* @malloc(i64 24) #15
  %46 = getelementptr inbounds i8, i8* %45, i64 16
  %47 = bitcast i8* %46 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #15
  store i32 1, i32* %47, align 4
  %48 = zext i32 %42 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %43, i64 %48
  br i1 %44, label %121, label %50

50:                                               ; preds = %41
  %51 = icmp eq i32 %42, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %50, %58
  %53 = phi %"struct.WTF::KeyValuePair.1864"* [ %59, %58 ], [ %43, %50 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %53, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, 1
  %57 = icmp ult i32 %56, 2
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %53, i64 1
  %60 = icmp eq %"struct.WTF::KeyValuePair.1864"* %59, %49
  br i1 %60, label %121, label %52

61:                                               ; preds = %52, %50
  %62 = phi %"struct.WTF::KeyValuePair.1864"* [ %43, %50 ], [ %53, %52 ]
  %63 = icmp eq %"struct.WTF::KeyValuePair.1864"* %62, %49
  br i1 %63, label %121, label %64

64:                                               ; preds = %61
  %65 = bitcast i64* %7 to i8*
  %66 = bitcast i64* %7 to i32*
  %67 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %8, i64 0, i32 1
  %68 = bitcast float* %67 to i32*
  %69 = getelementptr inbounds i8, i8* %45, i64 12
  %70 = bitcast i8* %69 to i32*
  %71 = getelementptr inbounds i8, i8* %45, i64 8
  %72 = bitcast i8* %71 to i32*
  %73 = bitcast i8* %45 to %"class.blink::FontTagValuePair.238"**
  %74 = bitcast i8* %45 to %"class.WTF::Vector.235"*
  br label %132

75:                                               ; preds = %114, %29
  %76 = phi i32 [ 0, %29 ], [ %115, %114 ]
  %77 = call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %31, i32 %76) #15
  %78 = bitcast %"class.blink::Member.1324"* %77 to %"class.blink::cssvalue::CSSFontVariationValue"**
  %79 = load %"class.blink::cssvalue::CSSFontVariationValue"*, %"class.blink::cssvalue::CSSFontVariationValue"** %78, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #15
  %80 = getelementptr inbounds %"class.blink::cssvalue::CSSFontVariationValue", %"class.blink::cssvalue::CSSFontVariationValue"* %79, i64 0, i32 2, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #15
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !21

97:                                               ; preds = %88
  call void @llvm.trap() #15
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %75, %83, %98
  %101 = call i32 @_ZN5blink25AtomicStringToFourByteTagEN3WTF12AtomicStringE(%"class.WTF::StringImpl"* %81) #15
  store i32 %101, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #15
  %102 = getelementptr inbounds %"class.blink::cssvalue::CSSFontVariationValue", %"class.blink::cssvalue::CSSFontVariationValue"* %79, i64 0, i32 3
  %103 = bitcast float* %102 to i32*
  %104 = load i32, i32* %103, align 8
  store i32 %104, i32* %34, align 4
  %105 = call { %"struct.WTF::KeyValuePair.1864"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EEjfEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.1861"* nonnull %35, i32* nonnull dereferenceable(4) %5, float* nonnull dereferenceable(4) %6) #15
  %106 = extractvalue { %"struct.WTF::KeyValuePair.1864"*, i8 } %105, 1
  %107 = and i8 %106, 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %100
  %110 = extractvalue { %"struct.WTF::KeyValuePair.1864"*, i8 } %105, 0
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %110, i64 0, i32 1
  %112 = load i32, i32* %34, align 4
  %113 = bitcast float* %111 to i32*
  store i32 %112, i32* %113, align 4
  br label %114

114:                                              ; preds = %100, %109
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #15
  %115 = add nuw nsw i32 %76, 1
  %116 = icmp eq i32 %115, %22
  br i1 %116, label %36, label %75

117:                                              ; preds = %151, %163, %160
  %118 = load %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"** %73, align 8
  %119 = load i32, i32* %70, align 4
  %120 = zext i32 %119 to i64
  br label %121

121:                                              ; preds = %58, %41, %61, %117
  %122 = phi i64 [ %120, %117 ], [ 0, %61 ], [ 0, %41 ], [ 0, %58 ]
  %123 = phi %"class.blink::FontTagValuePair.238"* [ %118, %117 ], [ null, %61 ], [ null, %41 ], [ null, %58 ]
  %124 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %123, i64 %122
  %125 = bitcast i1 (i64, i64)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125)
  store i1 (i64, i64)* @_ZN5blinkL11CompareTagsENS_16FontTagValuePairIfEES1_, i1 (i64, i64)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEvT0_S8_T_(%"class.blink::FontTagValuePair.238"* %123, %"class.blink::FontTagValuePair.238"* %124, i1 (i64, i64)** nonnull dereferenceable(8) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125)
  %126 = load %"struct.WTF::KeyValuePair.1864"*, %"struct.WTF::KeyValuePair.1864"** %24, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.1864"* %126, null
  br i1 %127, label %130, label %128, !prof !49

128:                                              ; preds = %121
  %129 = bitcast %"struct.WTF::KeyValuePair.1864"* %126 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %129) #15
  store %"struct.WTF::KeyValuePair.1864"* null, %"struct.WTF::KeyValuePair.1864"** %24, align 8
  br label %130

130:                                              ; preds = %121, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  %131 = bitcast i8* %45 to %"class.blink::FontVariationSettings"*
  br label %168

132:                                              ; preds = %165, %64
  %133 = phi i32 [ 0, %64 ], [ %167, %165 ]
  %134 = phi i32 [ 0, %64 ], [ %166, %165 ]
  %135 = phi %"struct.WTF::KeyValuePair.1864"* [ %62, %64 ], [ %155, %165 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #15
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %135, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %135, i64 0, i32 1
  %139 = bitcast float* %138 to i32*
  %140 = load i32, i32* %139, align 4
  store i32 %137, i32* %66, align 8
  store i32 %140, i32* %68, align 4
  %141 = icmp eq i32 %134, %133
  br i1 %141, label %150, label %142, !prof !21

142:                                              ; preds = %132
  %143 = load %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"** %73, align 8
  %144 = zext i32 %134 to i64
  %145 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %143, i64 %144
  %146 = bitcast %"class.blink::FontTagValuePair.238"* %145 to i64*
  %147 = load i64, i64* %7, align 8
  store i64 %147, i64* %146, align 4
  %148 = load i32, i32* %70, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %70, align 4
  br label %151

150:                                              ; preds = %132
  call void @_ZN3WTF6VectorIN5blink16FontTagValuePairIfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.235"* %74, %"class.blink::FontTagValuePair.238"* nonnull dereferenceable(8) %8) #15
  br label %151

151:                                              ; preds = %142, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #15
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %135, i64 1
  %153 = icmp eq %"struct.WTF::KeyValuePair.1864"* %152, %49
  br i1 %153, label %117, label %154

154:                                              ; preds = %151, %160
  %155 = phi %"struct.WTF::KeyValuePair.1864"* [ %161, %160 ], [ %152, %151 ]
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %155, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, 1
  %159 = icmp ult i32 %158, 2
  br i1 %159, label %160, label %163

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %155, i64 1
  %162 = icmp eq %"struct.WTF::KeyValuePair.1864"* %161, %49
  br i1 %162, label %117, label %154

163:                                              ; preds = %154
  %164 = icmp eq %"struct.WTF::KeyValuePair.1864"* %155, %49
  br i1 %164, label %117, label %165

165:                                              ; preds = %163
  %166 = load i32, i32* %70, align 4
  %167 = load i32, i32* %72, align 8
  br label %132

168:                                              ; preds = %14, %130
  %169 = phi %"class.blink::FontVariationSettings"* [ %131, %130 ], [ null, %14 ]
  ret %"class.blink::FontVariationSettings"* %169
}

declare i32 @_ZN5blink25AtomicStringToFourByteTagEN3WTF12AtomicStringE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blinkL11CompareTagsENS_16FontTagValuePairIfEES1_(i64, i64) #4 {
  %3 = trunc i64 %0 to i32
  %4 = trunc i64 %1 to i32
  %5 = icmp ult i32 %3, %4
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21MathScriptScaleFactorERNS_18StyleResolverStateE(%"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600)) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %5, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %7, i64 0, i32 2
  %9 = load i16, i16* %8, align 4
  %10 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 2, i32 0
  %11 = bitcast %"class.blink::ComputedStyle"** %10 to %"class.blink::ComputedStyleBase"**
  %12 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %16, i64 0, i32 2
  %18 = load i16, i16* %17, align 4
  %19 = icmp eq i16 %9, %18
  br i1 %19, label %89, label %20

20:                                               ; preds = %1
  %21 = icmp sgt i16 %9, %18
  %22 = select i1 %21, i16 %9, i16 %18
  %23 = sext i16 %22 to i32
  %24 = select i1 %21, i16 %18, i16 %9
  %25 = sext i16 %24 to i32
  %26 = sub nsw i32 %23, %25
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %30, i64 0, i32 1
  %32 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %31) #15
  %33 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %32, i64 0, i32 2
  %34 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %33, align 8
  %35 = icmp eq %"class.blink::SimpleFontData"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %31, i64 0, i32 0
  %38 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %32, %"class.blink::FontDescription"* dereferenceable(80) %37) #15
  store %"class.blink::SimpleFontData"* %38, %"class.blink::SimpleFontData"** %33, align 8
  %39 = icmp eq %"class.blink::SimpleFontData"* %38, null
  br i1 %39, label %79, label %40

40:                                               ; preds = %20, %36
  %41 = phi %"class.blink::SimpleFontData"* [ %38, %36 ], [ %34, %20 ]
  %42 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %41, i64 0, i32 5
  %43 = tail call %"class.blink::HarfBuzzFace"* @_ZNK5blink16FontPlatformData15GetHarfBuzzFaceEv(%"class.blink::FontPlatformData"* %42) #15
  %44 = tail call zeroext i1 @_ZN5blink19OpenTypeMathSupport11HasMathDataEPKNS_12HarfBuzzFaceE(%"class.blink::HarfBuzzFace"* %43) #15
  br i1 %44, label %45, label %79

45:                                               ; preds = %40
  %46 = tail call i64 @_ZN5blink19OpenTypeMathSupport12MathConstantEPKNS_12HarfBuzzFaceENS0_13MathConstantsE(%"class.blink::HarfBuzzFace"* %43, i32 0) #15
  %47 = trunc i64 %46 to i8
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = bitcast i32 %49 to float
  %51 = icmp eq i8 %47, 0
  %52 = select i1 %51, float 0.000000e+00, float %50
  %53 = fcmp une float %52, 0.000000e+00
  %54 = select i1 %53, float %52, float 0x3FE6B851E0000000
  %55 = tail call i64 @_ZN5blink19OpenTypeMathSupport12MathConstantEPKNS_12HarfBuzzFaceENS0_13MathConstantsE(%"class.blink::HarfBuzzFace"* %43, i32 1) #15
  %56 = trunc i64 %55 to i8
  %57 = lshr i64 %55, 32
  %58 = trunc i64 %57 to i32
  %59 = bitcast i32 %58 to float
  %60 = icmp eq i8 %56, 0
  %61 = select i1 %60, float 0.000000e+00, float %59
  %62 = fcmp une float %61, 0.000000e+00
  %63 = select i1 %62, float %61, float 0x3FE0219640000000
  %64 = icmp slt i16 %24, 1
  %65 = icmp sgt i16 %22, 1
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %45
  %68 = add nsw i32 %26, -2
  br label %79

69:                                               ; preds = %45
  %70 = icmp eq i16 %24, 1
  br i1 %70, label %71, label %74

71:                                               ; preds = %69
  %72 = fdiv float %63, %54
  %73 = add nsw i32 %26, -1
  br label %79

74:                                               ; preds = %69
  %75 = icmp eq i16 %22, 1
  %76 = zext i1 %75 to i32
  %77 = sub nsw i32 %26, %76
  %78 = select i1 %75, float %54, float 1.000000e+00
  br label %79

79:                                               ; preds = %74, %40, %71, %67, %36
  %80 = phi i32 [ %26, %36 ], [ %26, %40 ], [ %68, %67 ], [ %73, %71 ], [ %77, %74 ]
  %81 = phi float [ 1.000000e+00, %36 ], [ 1.000000e+00, %40 ], [ %63, %67 ], [ %72, %71 ], [ %78, %74 ]
  %82 = sitofp i32 %80 to double
  %83 = tail call double @pow(double 0x3FE6B851E0000000, double %82) #15
  %84 = fpext float %81 to double
  %85 = fmul double %83, %84
  %86 = fptrunc double %85 to float
  %87 = fdiv float 1.000000e+00, %86
  %88 = select i1 %21, float %87, float %86
  br label %89

89:                                               ; preds = %1, %79
  %90 = phi float [ %88, %79 ], [ 1.000000e+00, %1 ]
  ret float %90
}

declare %"class.blink::HarfBuzzFace"* @_ZNK5blink16FontPlatformData15GetHarfBuzzFaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink19OpenTypeMathSupport11HasMathDataEPKNS_12HarfBuzzFaceE(%"class.blink::HarfBuzzFace"*) local_unnamed_addr #3

declare i64 @_ZN5blink19OpenTypeMathSupport12MathConstantEPKNS_12HarfBuzzFaceENS0_13MathConstantsE(%"class.blink::HarfBuzzFace"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink25StyleBuilderConverterBase15ConvertFontSizeERKNS_8CSSValueERKNS_25CSSToLengthConversionDataENS_15FontDescription4SizeEPKNS_8DocumentE(%"class.blink::CSSValue"* dereferenceable(3), %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i64, %"class.blink::Document"*) local_unnamed_addr #2 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::FontDescription::Size"*
  store i64 %2, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 2
  %10 = icmp eq %"class.blink::CSSValue"* %0, null
  %11 = or i1 %10, %9
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = bitcast i32 %13 to float
  br i1 %11, label %37, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %106 [
    i32 78, label %19
    i32 75, label %19
    i32 74, label %19
    i32 73, label %19
    i32 72, label %19
    i32 71, label %19
    i32 70, label %19
    i32 69, label %19
    i32 68, label %19
    i32 76, label %25
    i32 77, label %31
  ]

19:                                               ; preds = %15, %15, %15, %15, %15, %15, %15, %15, %15
  %20 = icmp eq i32 %18, 78
  %21 = add nuw nsw i32 %18, 13
  %22 = and i32 %21, 15
  %23 = select i1 %20, i32 8, i32 %22
  %24 = zext i32 %23 to i64
  br label %106

25:                                               ; preds = %15
  %26 = call i64 @_ZN5blink15FontDescription11SmallerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* nonnull dereferenceable(8) %6) #15
  %27 = and i64 %26, -256
  %28 = lshr i64 %26, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i32 %29 to float
  br label %106

31:                                               ; preds = %15
  %32 = call i64 @_ZN5blink15FontDescription10LargerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* nonnull dereferenceable(8) %6) #15
  %33 = and i64 %32, -256
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = bitcast i32 %35 to float
  br label %106

37:                                               ; preds = %4
  %38 = icmp ne i8 %8, 45
  %39 = or i1 %10, %38
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPendingSystemFontValue"*
  %42 = tail call float @_ZNK5blink8cssvalue25CSSPendingSystemFontValue15ResolveFontSizeEPKNS_8DocumentE(%"class.blink::cssvalue::CSSPendingSystemFontValue"* nonnull %41, %"class.blink::Document"* %3) #15
  br label %106

43:                                               ; preds = %37
  %44 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSPrimitiveValue"*
  %45 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %44) #15
  br i1 %45, label %46, label %58

46:                                               ; preds = %43
  %47 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %44) #15
  %48 = fcmp ult double %47, 0x47EFFFFFE0000000
  br i1 %48, label %49, label %53

49:                                               ; preds = %46
  %50 = fcmp ole double %47, 0xC7EFFFFFE0000000
  %51 = select i1 %50, double 0xC7EFFFFFE0000000, double %47
  %52 = fptrunc double %51 to float
  br label %53

53:                                               ; preds = %46, %49
  %54 = phi float [ %52, %49 ], [ 0x47EFFFFFE0000000, %46 ]
  %55 = fmul float %54, %14
  %56 = fdiv float %55, 1.000000e+02
  %57 = and i64 %2, 16
  br label %106

58:                                               ; preds = %43
  %59 = and i64 %2, 16
  %60 = icmp ne i64 %59, 0
  %61 = load i8, i8* %7, align 1
  %62 = icmp eq i8 %61, 1
  %63 = or i1 %60, %62
  br i1 %63, label %73, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 0
  %66 = load i8, i8* %65, align 8
  %67 = and i8 %66, 127
  %68 = zext i8 %67 to i32
  switch i32 %68, label %73 [
    i32 32, label %69
    i32 3, label %69
    i32 4, label %69
    i32 16, label %69
    i32 17, label %69
  ]

69:                                               ; preds = %64, %64, %64, %64, %64
  %70 = icmp eq i8 %67, 16
  %71 = zext i1 %70 to i64
  %72 = shl nuw nsw i64 %71, 4
  br label %73

73:                                               ; preds = %58, %64, %69
  %74 = phi i64 [ 16, %58 ], [ %72, %69 ], [ 16, %64 ]
  %75 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"* %44) #15
  br i1 %75, label %76, label %91

76:                                               ; preds = %73
  %77 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %44, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #15
  %78 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %1, i64 0, i32 1
  %79 = tail call float @_ZNK5blink25CSSToLengthConversionData9FontSizes4ZoomEv(%"class.blink::CSSToLengthConversionData::FontSizes"* %78) #15
  %80 = load i8, i8* %7, align 1
  %81 = icmp eq i8 %80, 0
  %82 = fcmp une float %79, 1.000000e+00
  %83 = and i1 %82, %81
  br i1 %83, label %84, label %106

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 0
  %86 = load i8, i8* %85, align 8
  %87 = and i8 %86, 127
  %88 = zext i8 %87 to i32
  switch i32 %88, label %106 [
    i32 17, label %89
    i32 4, label %89
  ]

89:                                               ; preds = %84, %84
  %90 = fdiv float %77, %79
  br label %106

91:                                               ; preds = %73
  %92 = load i8, i8* %7, align 1
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %94, label %106

94:                                               ; preds = %91
  %95 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %96 = tail call %"class.blink::CalculationValue"* @_ZNK5blink20CSSMathFunctionValue11ToCalcValueERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %95, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #15
  %97 = tail call float @_ZNK5blink16CalculationValue8EvaluateEf(%"class.blink::CalculationValue"* %96, float %14) #15
  %98 = icmp eq %"class.blink::CalculationValue"* %96, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %96, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #15
  %101 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %96) #15
  %105 = bitcast %"class.blink::CalculationValue"* %96 to i8*
  tail call void @free(i8* %105) #15
  br label %106

106:                                              ; preds = %104, %99, %94, %91, %89, %84, %76, %15, %53, %40, %19, %25, %31
  %107 = phi i64 [ 0, %53 ], [ 0, %40 ], [ 0, %19 ], [ %33, %31 ], [ %27, %25 ], [ 0, %15 ], [ 0, %76 ], [ 0, %84 ], [ 0, %89 ], [ 0, %91 ], [ 0, %94 ], [ 0, %99 ], [ 0, %104 ]
  %108 = phi float [ %56, %53 ], [ %42, %40 ], [ 0.000000e+00, %19 ], [ %36, %31 ], [ %30, %25 ], [ 0.000000e+00, %15 ], [ %77, %76 ], [ %77, %84 ], [ %90, %89 ], [ 0.000000e+00, %91 ], [ %97, %94 ], [ %97, %99 ], [ %97, %104 ]
  %109 = phi i64 [ %57, %53 ], [ 16, %40 ], [ %24, %19 ], [ %32, %31 ], [ %26, %25 ], [ 4, %15 ], [ %74, %76 ], [ %74, %84 ], [ %74, %89 ], [ %74, %91 ], [ %74, %94 ], [ %74, %99 ], [ %74, %104 ]
  %110 = bitcast float %108 to i32
  %111 = zext i32 %110 to i64
  %112 = shl nuw i64 %111, 32
  %113 = and i64 %107, 4294967040
  %114 = and i64 %109, 255
  %115 = or i64 %114, %113
  %116 = or i64 %115, %112
  ret i64 %116
}

declare i64 @_ZN5blink15FontDescription11SmallerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* dereferenceable(8)) local_unnamed_addr #3

declare i64 @_ZN5blink15FontDescription10LargerSizeERKNS0_4SizeE(%"struct.blink::FontDescription::Size"* dereferenceable(8)) local_unnamed_addr #3

declare float @_ZNK5blink8cssvalue25CSSPendingSystemFontValue15ResolveFontSizeEPKNS_8DocumentE(%"class.blink::cssvalue::CSSPendingSystemFontValue"*, %"class.blink::Document"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21StyleBuilderConverter15ConvertFontSizeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %4 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 4, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = icmp eq %"class.blink::ComputedStyle"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = tail call dereferenceable(80) %"class.blink::FontDescription"* @_ZNK5blink18StyleResolverState21ParentFontDescriptionEv(%"class.blink::StyleResolverState"* %0) #15
  %9 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %8, i64 0, i32 12, i32 0
  %10 = bitcast %"struct.blink::FontDescription::BitFields"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 21
  %13 = and i64 %12, 15
  %14 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %8, i64 0, i32 4
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = lshr i64 %11, 3
  %18 = and i64 %17, 16
  %19 = or i64 %18, %13
  %20 = trunc i64 %19 to i8
  %21 = bitcast i32 %16 to float
  %22 = zext i32 %16 to i64
  %23 = shl nuw i64 %22, 32
  br label %24

24:                                               ; preds = %2, %7
  %25 = phi i64 [ 0, %7 ], [ 2863311360, %2 ]
  %26 = phi i64 [ %23, %7 ], [ 0, %2 ]
  %27 = phi float [ %21, %7 ], [ 0.000000e+00, %2 ]
  %28 = phi i8 [ %20, %7 ], [ -96, %2 ]
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %30 = load i8, i8* %29, align 1
  %31 = icmp ne i8 %30, 2
  %32 = icmp eq %"class.blink::CSSValue"* %1, null
  %33 = or i1 %32, %31
  br i1 %33, label %51, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 384
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = tail call float @_ZN5blink21MathScriptScaleFactorERNS_18StyleResolverStateE(%"class.blink::StyleResolverState"* dereferenceable(600) %0)
  %41 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 2, i32 0
  %42 = bitcast %"class.blink::ComputedStyle"** %41 to %"class.blink::ComputedStyleBase"**
  %43 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %43, i64 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = or i160 %46, 21267647932558653966460912964485513216
  store i160 %47, i160* %45, align 8
  %48 = fmul float %27, %40
  %49 = and i8 %28, 16
  %50 = zext i8 %49 to i64
  br label %63

51:                                               ; preds = %24, %34
  %52 = bitcast %"class.blink::CSSToLengthConversionData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %52) #15
  call void @_ZNK5blink18StyleResolverState22FontSizeConversionDataEv(%"class.blink::CSSToLengthConversionData"* nonnull sret %3, %"class.blink::StyleResolverState"* %0) #15
  %53 = or i64 %26, %25
  %54 = zext i8 %28 to i64
  %55 = or i64 %53, %54
  %56 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 1
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = call i64 @_ZN5blink25StyleBuilderConverterBase15ConvertFontSizeERKNS_8CSSValueERKNS_25CSSToLengthConversionDataENS_15FontDescription4SizeEPKNS_8DocumentE(%"class.blink::CSSValue"* dereferenceable(3) %1, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %3, i64 %55, %"class.blink::Document"* %57)
  %59 = lshr i64 %58, 32
  %60 = trunc i64 %59 to i32
  %61 = bitcast i32 %60 to float
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %52) #15
  %62 = and i64 %58, 4294967040
  br label %63

63:                                               ; preds = %51, %39
  %64 = phi i64 [ %62, %51 ], [ 0, %39 ]
  %65 = phi float [ %61, %51 ], [ %48, %39 ]
  %66 = phi i64 [ %58, %51 ], [ %50, %39 ]
  %67 = bitcast float %65 to i32
  %68 = zext i32 %67 to i64
  %69 = shl nuw i64 %68, 32
  %70 = and i64 %66, 255
  %71 = or i64 %70, %64
  %72 = or i64 %71, %69
  ret i64 %72
}

declare dereferenceable(80) %"class.blink::FontDescription"* @_ZNK5blink18StyleResolverState21ParentFontDescriptionEv(%"class.blink::StyleResolverState"*) local_unnamed_addr #3

declare void @_ZNK5blink18StyleResolverState22FontSizeConversionDataEv(%"class.blink::CSSToLengthConversionData"* sret, %"class.blink::StyleResolverState"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21StyleBuilderConverter21ConvertFontSizeAdjustERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %21, label %13

13:                                               ; preds = %2, %8
  %14 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %15 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %14) #15
  %16 = fcmp ult double %15, 0x47EFFFFFE0000000
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = fcmp ole double %15, 0xC7EFFFFFE0000000
  %19 = select i1 %18, double 0xC7EFFFFFE0000000, double %15
  %20 = fptrunc double %19 to float
  br label %21

21:                                               ; preds = %17, %13, %8
  %22 = phi float [ -1.000000e+00, %8 ], [ %20, %17 ], [ 0x47EFFFFFE0000000, %13 ]
  ret float %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink25StyleBuilderConverterBase18ConvertFontStretchERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp ugt i8 %3, 1
  %5 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSPrimitiveValue"*
  %6 = icmp eq %"class.blink::CSSValue"* %0, null
  %7 = or i1 %6, %4
  br i1 %7, label %52, label %8

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %5) #15
  br i1 %9, label %12, label %10

10:                                               ; preds = %8
  %11 = load i8, i8* %2, align 1
  br label %52

12:                                               ; preds = %8
  %13 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %5) #15
  %14 = fcmp ult double %13, 0x47EFFFFFE0000000
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = fcmp ole double %13, 0xC7EFFFFFE0000000
  %17 = select i1 %16, double 0xC7EFFFFFE0000000, double %13
  %18 = fptrunc double %17 to float
  br label %19

19:                                               ; preds = %12, %15
  %20 = phi float [ %18, %15 ], [ 0x47EFFFFFE0000000, %12 ]
  %21 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue to i8*) acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27, !prof !50

23:                                               ; preds = %19
  %24 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue) #15
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  store i16 -32768, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue) #15
  br label %27

27:                                               ; preds = %19, %23, %26
  %28 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue to i16*), align 2
  %29 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue to i8*) acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %35, !prof !50

31:                                               ; preds = %27
  %32 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue) #15
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  store i16 32767, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue) #15
  br label %35

35:                                               ; preds = %27, %31, %34
  %36 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue to i16*), align 2
  %37 = fpext float %20 to double
  %38 = sitofp i16 %36 to float
  %39 = fmul float %38, 2.500000e-01
  %40 = fcmp ugt float %39, %20
  br i1 %40, label %41, label %150

41:                                               ; preds = %35
  %42 = sitofp i16 %28 to float
  %43 = fmul float %42, 2.500000e-01
  %44 = fcmp ult float %43, %20
  br i1 %44, label %45, label %150

45:                                               ; preds = %41
  %46 = fmul double %37, 4.000000e+00
  %47 = fcmp ult double %46, 3.276700e+04
  br i1 %47, label %48, label %150

48:                                               ; preds = %45
  %49 = fcmp ugt double %46, -3.276800e+04
  br i1 %49, label %50, label %150

50:                                               ; preds = %48
  %51 = fptosi double %46 to i16
  br label %150

52:                                               ; preds = %10, %1
  %53 = phi i8 [ %11, %10 ], [ %3, %1 ]
  %54 = icmp ne i8 %53, 2
  %55 = or i1 %6, %54
  br i1 %55, label %141, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %141 [
    i32 60, label %60
    i32 61, label %69
    i32 62, label %78
    i32 63, label %87
    i32 56, label %96
    i32 64, label %105
    i32 65, label %114
    i32 66, label %123
    i32 67, label %132
  ]

60:                                               ; preds = %56
  %61 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i8*) acquire, align 8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %67, !prof !50

63:                                               ; preds = %60
  %64 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #15
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  store i16 200, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #15
  br label %67

67:                                               ; preds = %60, %63, %66
  %68 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  br label %150

69:                                               ; preds = %56
  %70 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i8*) acquire, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %76, !prof !50

72:                                               ; preds = %69
  %73 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #15
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  store i16 250, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #15
  br label %76

76:                                               ; preds = %69, %72, %75
  %77 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  br label %150

78:                                               ; preds = %56
  %79 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i8*) acquire, align 8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %85, !prof !50

81:                                               ; preds = %78
  %82 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #15
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  store i16 300, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #15
  br label %85

85:                                               ; preds = %78, %81, %84
  %86 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  br label %150

87:                                               ; preds = %56
  %88 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i8*) acquire, align 8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %94, !prof !50

90:                                               ; preds = %87
  %91 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #15
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  store i16 350, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #15
  br label %94

94:                                               ; preds = %87, %90, %93
  %95 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  br label %150

96:                                               ; preds = %56
  %97 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i8*) acquire, align 8
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %103, !prof !50

99:                                               ; preds = %96
  %100 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #15
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  store i16 400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #15
  br label %103

103:                                              ; preds = %96, %99, %102
  %104 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  br label %150

105:                                              ; preds = %56
  %106 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i8*) acquire, align 8
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %112, !prof !50

108:                                              ; preds = %105
  %109 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #15
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %112, label %111

111:                                              ; preds = %108
  store i16 450, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #15
  br label %112

112:                                              ; preds = %105, %108, %111
  %113 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  br label %150

114:                                              ; preds = %56
  %115 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i8*) acquire, align 8
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %121, !prof !50

117:                                              ; preds = %114
  %118 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #15
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %117
  store i16 500, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #15
  br label %121

121:                                              ; preds = %114, %117, %120
  %122 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  br label %150

123:                                              ; preds = %56
  %124 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i8*) acquire, align 8
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %130, !prof !50

126:                                              ; preds = %123
  %127 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #15
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %126
  store i16 600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #15
  br label %130

130:                                              ; preds = %123, %126, %129
  %131 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  br label %150

132:                                              ; preds = %56
  %133 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i8*) acquire, align 8
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %139, !prof !50

135:                                              ; preds = %132
  %136 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #15
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %139, label %138

138:                                              ; preds = %135
  store i16 800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #15
  br label %139

139:                                              ; preds = %132, %135, %138
  %140 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  br label %150

141:                                              ; preds = %52, %56
  %142 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i8*) acquire, align 8
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %148, !prof !50

144:                                              ; preds = %141
  %145 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #15
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  store i16 400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #15
  br label %148

148:                                              ; preds = %141, %144, %147
  %149 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  br label %150

150:                                              ; preds = %67, %76, %85, %94, %103, %112, %121, %130, %139, %50, %48, %45, %41, %35, %148
  %151 = phi i16 [ %149, %148 ], [ -32768, %48 ], [ 32767, %45 ], [ %51, %50 ], [ %28, %41 ], [ %36, %35 ], [ %68, %67 ], [ %77, %76 ], [ %86, %85 ], [ %95, %94 ], [ %104, %103 ], [ %113, %112 ], [ %122, %121 ], [ %131, %130 ], [ %140, %139 ]
  ret i16 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink21StyleBuilderConverter18ConvertFontStretchERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = tail call i16 @_ZN5blink25StyleBuilderConverterBase18ConvertFontStretchERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %1)
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink25StyleBuilderConverterBase16ConvertFontStyleERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 2
  %8 = icmp eq %"class.blink::CSSValue"* %0, null
  %9 = or i1 %8, %7
  br i1 %9, label %41, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %32 [
    i32 22, label %14
    i32 23, label %14
    i32 56, label %23
  ]

14:                                               ; preds = %10, %10
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21, !prof !50

17:                                               ; preds = %14
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %21

21:                                               ; preds = %14, %17, %20
  %22 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  br label %147

23:                                               ; preds = %10
  %24 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30, !prof !50

26:                                               ; preds = %23
  %27 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %30

30:                                               ; preds = %23, %26, %29
  %31 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  br label %147

32:                                               ; preds = %10
  %33 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %39, !prof !50

35:                                               ; preds = %32
  %36 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %39

39:                                               ; preds = %32, %35, %38
  %40 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  br label %147

41:                                               ; preds = %1
  %42 = icmp ne i8 %6, 45
  %43 = or i1 %8, %42
  br i1 %43, label %76, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPendingSystemFontValue"*
  %46 = tail call dereferenceable(2) %"class.blink::FontSelectionValue"* @_ZNK5blink8cssvalue25CSSPendingSystemFontValue16ResolveFontStyleEv(%"class.blink::cssvalue::CSSPendingSystemFontValue"* nonnull %45) #15
  %47 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !50

49:                                               ; preds = %44
  %50 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %53

53:                                               ; preds = %44, %49, %52
  %54 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %55 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %46, i64 0, i32 0
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, %54
  br i1 %57, label %58, label %67

58:                                               ; preds = %53
  %59 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %65, !prof !50

61:                                               ; preds = %58
  %62 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %65

65:                                               ; preds = %58, %61, %64
  %66 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  br label %147

67:                                               ; preds = %53
  %68 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %74, !prof !50

70:                                               ; preds = %67
  %71 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %74

74:                                               ; preds = %67, %70, %73
  %75 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  br label %147

76:                                               ; preds = %41
  %77 = icmp ne i8 %6, 30
  %78 = or i1 %8, %77
  br i1 %78, label %138, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 5, i32 1
  %81 = bitcast i8* %80 to %"class.blink::CSSValueList"**
  %82 = load %"class.blink::CSSValueList"*, %"class.blink::CSSValueList"** %81, align 8
  %83 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #15
  %84 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %84, align 8
  %85 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %82, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87)
  %88 = icmp ult i32 %86, 2
  br i1 %88, label %89, label %90

89:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87)
  store i8* null, i8** %84, align 8
  br label %99

90:                                               ; preds = %79
  %91 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %86) #15
  %92 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %91, i8* %92) #15
  %93 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %94 = load i8*, i8** %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87)
  store i8* %94, i8** %84, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 541, %"class.logging::CheckOpResult"* nonnull %3) #15
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #15
  br label %99

99:                                               ; preds = %89, %90, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #15
  %100 = load i32, i32* %85, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %114, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %82, i64 0, i32 1, i32 0
  %104 = call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %103, i32 0) #15
  %105 = bitcast %"class.blink::Member.1324"* %104 to %"class.blink::CSSPrimitiveValue"**
  %106 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %105, align 8
  %107 = call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* %106) #15
  %108 = fmul double %107, 4.000000e+00
  %109 = fcmp ult double %108, 3.276700e+04
  br i1 %109, label %110, label %147

110:                                              ; preds = %102
  %111 = fcmp ugt double %108, -3.276800e+04
  br i1 %111, label %112, label %147

112:                                              ; preds = %110
  %113 = fptosi double %108 to i16
  br label %147

114:                                              ; preds = %99
  %115 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %116 = bitcast i8* %115 to %"class.blink::CSSIdentifierValue"**
  %117 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %117, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  switch i32 %119, label %138 [
    i32 56, label %120
    i32 22, label %129
    i32 23, label %129
  ]

120:                                              ; preds = %114
  %121 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %127, !prof !50

123:                                              ; preds = %120
  %124 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %127

127:                                              ; preds = %120, %123, %126
  %128 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  br label %147

129:                                              ; preds = %114, %114
  %130 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %136, !prof !50

132:                                              ; preds = %129
  %133 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %136

136:                                              ; preds = %129, %132, %135
  %137 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  br label %147

138:                                              ; preds = %114, %76
  %139 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %145, !prof !50

141:                                              ; preds = %138
  %142 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %145, label %144

144:                                              ; preds = %141
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %145

145:                                              ; preds = %138, %141, %144
  %146 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  br label %147

147:                                              ; preds = %112, %110, %102, %136, %127, %74, %65, %21, %30, %39, %145
  %148 = phi i16 [ %146, %145 ], [ %22, %21 ], [ %31, %30 ], [ %40, %39 ], [ %75, %74 ], [ %66, %65 ], [ -32768, %110 ], [ 32767, %102 ], [ %113, %112 ], [ %137, %136 ], [ %128, %127 ]
  ret i16 %148
}

declare dereferenceable(2) %"class.blink::FontSelectionValue"* @_ZNK5blink8cssvalue25CSSPendingSystemFontValue16ResolveFontStyleEv(%"class.blink::cssvalue::CSSPendingSystemFontValue"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink21StyleBuilderConverter16ConvertFontStyleERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = tail call i16 @_ZN5blink25StyleBuilderConverterBase16ConvertFontStyleERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %1)
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink25StyleBuilderConverterBase17ConvertFontWeightERKNS_8CSSValueENS_18FontSelectionValueE(%"class.blink::CSSValue"* dereferenceable(3), i16) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ugt i8 %4, 1
  %6 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSPrimitiveValue"*
  %7 = icmp eq %"class.blink::CSSValue"* %0, null
  %8 = or i1 %7, %5
  br i1 %8, label %53, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* nonnull %6) #15
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = load i8, i8* %3, align 1
  br label %53

13:                                               ; preds = %9
  %14 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %6) #15
  %15 = fcmp ult double %14, 0x47EFFFFFE0000000
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = fcmp ole double %14, 0xC7EFFFFFE0000000
  %18 = select i1 %17, double 0xC7EFFFFFE0000000, double %14
  %19 = fptrunc double %18 to float
  br label %20

20:                                               ; preds = %13, %16
  %21 = phi float [ %19, %16 ], [ 0x47EFFFFFE0000000, %13 ]
  %22 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue to i8*) acquire, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %28, !prof !50

24:                                               ; preds = %20
  %25 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  store i16 -32768, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue) #15
  br label %28

28:                                               ; preds = %20, %24, %27
  %29 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18FontSelectionValue12MinimumValueEvE14s_minimumValue to i16*), align 2
  %30 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue to i8*) acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %36, !prof !50

32:                                               ; preds = %28
  %33 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  store i16 32767, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue) #15
  br label %36

36:                                               ; preds = %28, %32, %35
  %37 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18FontSelectionValue12MaximumValueEvE14s_maximumValue to i16*), align 2
  %38 = fpext float %21 to double
  %39 = sitofp i16 %37 to float
  %40 = fmul float %39, 2.500000e-01
  %41 = fcmp ugt float %40, %21
  br i1 %41, label %42, label %109

42:                                               ; preds = %36
  %43 = sitofp i16 %29 to float
  %44 = fmul float %43, 2.500000e-01
  %45 = fcmp ult float %44, %21
  br i1 %45, label %46, label %109

46:                                               ; preds = %42
  %47 = fmul double %38, 4.000000e+00
  %48 = fcmp ult double %47, 3.276700e+04
  br i1 %48, label %49, label %109

49:                                               ; preds = %46
  %50 = fcmp ugt double %47, -3.276800e+04
  br i1 %50, label %51, label %109

51:                                               ; preds = %49
  %52 = fptosi double %47 to i16
  br label %109

53:                                               ; preds = %11, %2
  %54 = phi i8 [ %12, %11 ], [ %4, %2 ]
  %55 = icmp ne i8 %54, 45
  %56 = or i1 %7, %55
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPendingSystemFontValue"*
  %59 = tail call dereferenceable(2) %"class.blink::FontSelectionValue"* @_ZNK5blink8cssvalue25CSSPendingSystemFontValue17ResolveFontWeightEv(%"class.blink::cssvalue::CSSPendingSystemFontValue"* nonnull %58) #15
  %60 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %59, i64 0, i32 0
  %61 = load i16, i16* %60, align 2
  br label %109

62:                                               ; preds = %53
  %63 = icmp ne i8 %54, 2
  %64 = or i1 %7, %63
  br i1 %64, label %100, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  switch i32 %68, label %91 [
    i32 56, label %69
    i32 57, label %78
    i32 58, label %87
    i32 59, label %89
  ]

69:                                               ; preds = %65
  %70 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %76, !prof !50

72:                                               ; preds = %69
  %73 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  br label %76

76:                                               ; preds = %69, %72, %75
  %77 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  br label %109

78:                                               ; preds = %65
  %79 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i8*) acquire, align 8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %85, !prof !50

81:                                               ; preds = %78
  %82 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #15
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  store i16 2800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #15
  br label %85

85:                                               ; preds = %78, %81, %84
  %86 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  br label %109

87:                                               ; preds = %65
  %88 = tail call i16 @_ZN5blink15FontDescription12BolderWeightENS_18FontSelectionValueE(i16 %1) #15
  br label %109

89:                                               ; preds = %65
  %90 = tail call i16 @_ZN5blink15FontDescription13LighterWeightENS_18FontSelectionValueE(i16 %1) #15
  br label %109

91:                                               ; preds = %65
  %92 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %98, !prof !50

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  br label %98

98:                                               ; preds = %91, %94, %97
  %99 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  br label %109

100:                                              ; preds = %62
  %101 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %107, !prof !50

103:                                              ; preds = %100
  %104 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %106

106:                                              ; preds = %103
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  br label %107

107:                                              ; preds = %100, %103, %106
  %108 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  br label %109

109:                                              ; preds = %76, %85, %87, %89, %98, %51, %49, %46, %42, %36, %57, %107
  %110 = phi i16 [ %108, %107 ], [ %61, %57 ], [ -32768, %49 ], [ 32767, %46 ], [ %52, %51 ], [ %29, %42 ], [ %37, %36 ], [ %77, %76 ], [ %86, %85 ], [ %88, %87 ], [ %90, %89 ], [ %99, %98 ]
  ret i16 %110
}

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare dereferenceable(2) %"class.blink::FontSelectionValue"* @_ZNK5blink8cssvalue25CSSPendingSystemFontValue17ResolveFontWeightEv(%"class.blink::cssvalue::CSSPendingSystemFontValue"*) local_unnamed_addr #3

declare i16 @_ZN5blink15FontDescription12BolderWeightENS_18FontSelectionValueE(i16) local_unnamed_addr #3

declare i16 @_ZN5blink15FontDescription13LighterWeightENS_18FontSelectionValueE(i16) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink21StyleBuilderConverter17ConvertFontWeightERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %8, i64 0, i32 1, i32 0, i32 10, i32 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = tail call i16 @_ZN5blink25StyleBuilderConverterBase17ConvertFontWeightERKNS_8CSSValueENS_18FontSelectionValueE(%"class.blink::CSSValue"* dereferenceable(3) %1, i16 %10)
  ret i16 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink25StyleBuilderConverterBase22ConvertFontVariantCapsERKNS_8CSSValueE(%"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 45
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -33
  %10 = icmp ult i32 %9, 6
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = add i32 %8, -32
  ret i32 %12

13:                                               ; preds = %5, %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter22ConvertFontVariantCapsERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 45
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -33
  %11 = icmp ult i32 %10, 6
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = add i32 %9, -32
  ret i32 %13

14:                                               ; preds = %6, %2
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter27ConvertFontVariantLigaturesERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ult i8 %4, 52
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %53, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %61, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %15 = bitcast i8* %14 to %"class.WTF::Vector.1855"*
  br label %16

16:                                               ; preds = %13, %48
  %17 = phi i32 [ 0, %13 ], [ %50, %48 ]
  %18 = phi i8 [ 0, %13 ], [ %49, %48 ]
  %19 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %15, i32 %17) #15
  %20 = bitcast %"class.blink::Member.1324"* %19 to %"class.blink::CSSIdentifierValue"**
  %21 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %48 [
    i32 26, label %24
    i32 25, label %27
    i32 28, label %30
    i32 27, label %33
    i32 30, label %36
    i32 29, label %39
    i32 32, label %42
    i32 31, label %45
  ]

24:                                               ; preds = %16
  %25 = and i8 %18, -4
  %26 = or i8 %25, 1
  br label %48

27:                                               ; preds = %16
  %28 = and i8 %18, -4
  %29 = or i8 %28, 2
  br label %48

30:                                               ; preds = %16
  %31 = and i8 %18, -13
  %32 = or i8 %31, 4
  br label %48

33:                                               ; preds = %16
  %34 = and i8 %18, -13
  %35 = or i8 %34, 8
  br label %48

36:                                               ; preds = %16
  %37 = and i8 %18, -49
  %38 = or i8 %37, 16
  br label %48

39:                                               ; preds = %16
  %40 = and i8 %18, -49
  %41 = or i8 %40, 32
  br label %48

42:                                               ; preds = %16
  %43 = and i8 %18, 63
  %44 = or i8 %43, 64
  br label %48

45:                                               ; preds = %16
  %46 = and i8 %18, 63
  %47 = or i8 %46, -128
  br label %48

48:                                               ; preds = %16, %45, %42, %39, %36, %33, %30, %27, %24
  %49 = phi i8 [ %18, %16 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ %38, %36 ], [ %35, %33 ], [ %32, %30 ], [ %29, %27 ], [ %26, %24 ]
  %50 = add nuw i32 %17, 1
  %51 = load i32, i32* %10, align 4
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %16, label %61

53:                                               ; preds = %2
  %54 = icmp eq i8 %4, 45
  br i1 %54, label %61, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 3
  %60 = select i1 %59, i8 85, i8 0
  br label %61

61:                                               ; preds = %48, %8, %55, %53
  %62 = phi i8 [ 0, %53 ], [ %60, %55 ], [ 0, %8 ], [ %49, %48 ]
  %63 = zext i8 %62 to i32
  %64 = or i32 %63, -1431655936
  ret i32 %64
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter25ConvertFontVariantNumericERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 2
  %6 = icmp ne %"class.blink::CSSValue"* %1, null
  %7 = and i1 %6, %5
  %8 = icmp eq i8 %4, 45
  %9 = or i1 %8, %7
  br i1 %9, label %56, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %12 = bitcast i8* %11 to %"class.blink::Member.1324"**
  %13 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %13, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %52, %10
  %21 = phi i8 [ 0, %10 ], [ %53, %52 ]
  %22 = zext i8 %21 to i32
  br label %56

23:                                               ; preds = %10, %52
  %24 = phi %"class.blink::Member.1324"* [ %54, %52 ], [ %13, %10 ]
  %25 = phi i8 [ %53, %52 ], [ 0, %10 ]
  %26 = bitcast %"class.blink::Member.1324"* %24 to %"class.blink::CSSIdentifierValue"**
  %27 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  switch i32 %29, label %52 [
    i32 48, label %30
    i32 49, label %33
    i32 50, label %36
    i32 51, label %39
    i32 52, label %42
    i32 53, label %45
    i32 54, label %48
    i32 55, label %50
  ]

30:                                               ; preds = %23
  %31 = and i8 %25, -4
  %32 = or i8 %31, 1
  br label %52

33:                                               ; preds = %23
  %34 = and i8 %25, -4
  %35 = or i8 %34, 2
  br label %52

36:                                               ; preds = %23
  %37 = and i8 %25, -13
  %38 = or i8 %37, 4
  br label %52

39:                                               ; preds = %23
  %40 = and i8 %25, -13
  %41 = or i8 %40, 8
  br label %52

42:                                               ; preds = %23
  %43 = and i8 %25, -49
  %44 = or i8 %43, 16
  br label %52

45:                                               ; preds = %23
  %46 = and i8 %25, -49
  %47 = or i8 %46, 32
  br label %52

48:                                               ; preds = %23
  %49 = or i8 %25, 64
  br label %52

50:                                               ; preds = %23
  %51 = or i8 %25, -128
  br label %52

52:                                               ; preds = %23, %50, %48, %45, %42, %39, %36, %33, %30
  %53 = phi i8 [ %25, %23 ], [ %51, %50 ], [ %49, %48 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ %38, %36 ], [ %35, %33 ], [ %32, %30 ]
  %54 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %24, i64 1
  %55 = icmp eq %"class.blink::Member.1324"* %54, %18
  br i1 %55, label %20, label %23

56:                                               ; preds = %2, %20
  %57 = phi i32 [ %22, %20 ], [ 0, %2 ]
  ret i32 %57
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter27ConvertFontVariantEastAsianERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 2
  %6 = icmp ne %"class.blink::CSSValue"* %1, null
  %7 = and i1 %6, %5
  %8 = icmp eq i8 %4, 45
  %9 = or i1 %8, %7
  br i1 %9, label %60, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %12 = bitcast i8* %11 to %"class.blink::Member.1324"**
  %13 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %13, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %56, %10
  %21 = phi i8 [ 0, %10 ], [ %57, %56 ]
  %22 = zext i8 %21 to i32
  br label %60

23:                                               ; preds = %10, %56
  %24 = phi %"class.blink::Member.1324"* [ %58, %56 ], [ %13, %10 ]
  %25 = phi i8 [ %57, %56 ], [ 0, %10 ]
  %26 = bitcast %"class.blink::Member.1324"* %24 to %"class.blink::CSSIdentifierValue"**
  %27 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  switch i32 %29, label %56 [
    i32 39, label %30
    i32 40, label %33
    i32 41, label %36
    i32 42, label %39
    i32 43, label %42
    i32 44, label %45
    i32 45, label %48
    i32 46, label %51
    i32 47, label %54
  ]

30:                                               ; preds = %23
  %31 = and i8 %25, -8
  %32 = or i8 %31, 1
  br label %56

33:                                               ; preds = %23
  %34 = and i8 %25, -8
  %35 = or i8 %34, 2
  br label %56

36:                                               ; preds = %23
  %37 = and i8 %25, -8
  %38 = or i8 %37, 3
  br label %56

39:                                               ; preds = %23
  %40 = and i8 %25, -8
  %41 = or i8 %40, 4
  br label %56

42:                                               ; preds = %23
  %43 = and i8 %25, -8
  %44 = or i8 %43, 5
  br label %56

45:                                               ; preds = %23
  %46 = and i8 %25, -8
  %47 = or i8 %46, 6
  br label %56

48:                                               ; preds = %23
  %49 = and i8 %25, -25
  %50 = or i8 %49, 8
  br label %56

51:                                               ; preds = %23
  %52 = and i8 %25, -25
  %53 = or i8 %52, 16
  br label %56

54:                                               ; preds = %23
  %55 = or i8 %25, 32
  br label %56

56:                                               ; preds = %23, %54, %51, %48, %45, %42, %39, %36, %33, %30
  %57 = phi i8 [ %25, %23 ], [ %55, %54 ], [ %53, %51 ], [ %50, %48 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ %38, %36 ], [ %35, %33 ], [ %32, %30 ]
  %58 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %24, i64 1
  %59 = icmp eq %"class.blink::Member.1324"* %58, %18
  br i1 %59, label %20, label %23

60:                                               ; preds = %2, %20
  %61 = phi i32 [ %22, %20 ], [ 0, %2 ]
  ret i32 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter33ConvertSelfOrDefaultAlignmentDataERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 9
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %65, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.blink::CSSIdentifierValue"**
  %11 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %36 [
    i32 745, label %14
    i32 741, label %86
    i32 742, label %85
  ]

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 5, i32 1
  %16 = bitcast i8* %15 to %"class.blink::CSSIdentifierValue"**
  %17 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  switch i32 %19, label %35 [
    i32 745, label %86
    i32 405, label %20
    i32 56, label %21
    i32 505, label %22
    i32 296, label %23
    i32 740, label %24
    i32 739, label %25
    i32 310, label %26
    i32 506, label %27
    i32 507, label %28
    i32 743, label %29
    i32 744, label %30
    i32 515, label %31
    i32 516, label %32
    i32 306, label %33
    i32 307, label %34
  ]

20:                                               ; preds = %14
  br label %86

21:                                               ; preds = %14
  br label %86

22:                                               ; preds = %14
  br label %86

23:                                               ; preds = %14
  br label %86

24:                                               ; preds = %14
  br label %86

25:                                               ; preds = %14
  br label %86

26:                                               ; preds = %14
  br label %86

27:                                               ; preds = %14
  br label %86

28:                                               ; preds = %14
  br label %86

29:                                               ; preds = %14
  br label %86

30:                                               ; preds = %14
  br label %86

31:                                               ; preds = %14
  br label %86

32:                                               ; preds = %14
  br label %86

33:                                               ; preds = %14
  br label %86

34:                                               ; preds = %14
  br label %86

35:                                               ; preds = %14
  br label %86

36:                                               ; preds = %8
  %37 = icmp eq i32 %13, 521
  %38 = select i1 %37, i32 64, i32 32
  %39 = icmp eq i32 %13, 520
  %40 = select i1 %39, i32 32, i32 %38
  %41 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 5, i32 1
  %42 = bitcast i8* %41 to %"class.blink::CSSIdentifierValue"**
  %43 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %61 [
    i32 745, label %62
    i32 405, label %46
    i32 56, label %47
    i32 505, label %48
    i32 296, label %49
    i32 740, label %50
    i32 739, label %51
    i32 310, label %52
    i32 506, label %53
    i32 507, label %54
    i32 743, label %55
    i32 744, label %56
    i32 515, label %57
    i32 516, label %58
    i32 306, label %59
    i32 307, label %60
  ]

46:                                               ; preds = %36
  br label %62

47:                                               ; preds = %36
  br label %62

48:                                               ; preds = %36
  br label %62

49:                                               ; preds = %36
  br label %62

50:                                               ; preds = %36
  br label %62

51:                                               ; preds = %36
  br label %62

52:                                               ; preds = %36
  br label %62

53:                                               ; preds = %36
  br label %62

54:                                               ; preds = %36
  br label %62

55:                                               ; preds = %36
  br label %62

56:                                               ; preds = %36
  br label %62

57:                                               ; preds = %36
  br label %62

58:                                               ; preds = %36
  br label %62

59:                                               ; preds = %36
  br label %62

60:                                               ; preds = %36
  br label %62

61:                                               ; preds = %36
  br label %62

62:                                               ; preds = %36, %46, %47, %48, %49, %50, %51, %52, %53, %54, %55, %56, %57, %58, %59, %60, %61
  %63 = phi i32 [ 1, %61 ], [ 14, %60 ], [ 13, %59 ], [ 12, %58 ], [ 11, %57 ], [ 10, %56 ], [ 9, %55 ], [ 8, %54 ], [ 7, %53 ], [ 6, %52 ], [ 5, %51 ], [ 4, %50 ], [ 4, %49 ], [ 3, %48 ], [ 2, %47 ], [ 1, %46 ], [ 0, %36 ]
  %64 = or i32 %63, %40
  br label %86

65:                                               ; preds = %2
  %66 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  switch i32 %68, label %84 [
    i32 745, label %86
    i32 405, label %69
    i32 56, label %70
    i32 505, label %71
    i32 296, label %72
    i32 740, label %73
    i32 739, label %74
    i32 310, label %75
    i32 506, label %76
    i32 507, label %77
    i32 743, label %78
    i32 744, label %79
    i32 515, label %80
    i32 516, label %81
    i32 306, label %82
    i32 307, label %83
  ]

69:                                               ; preds = %65
  br label %86

70:                                               ; preds = %65
  br label %86

71:                                               ; preds = %65
  br label %86

72:                                               ; preds = %65
  br label %86

73:                                               ; preds = %65
  br label %86

74:                                               ; preds = %65
  br label %86

75:                                               ; preds = %65
  br label %86

76:                                               ; preds = %65
  br label %86

77:                                               ; preds = %65
  br label %86

78:                                               ; preds = %65
  br label %86

79:                                               ; preds = %65
  br label %86

80:                                               ; preds = %65
  br label %86

81:                                               ; preds = %65
  br label %86

82:                                               ; preds = %65
  br label %86

83:                                               ; preds = %65
  br label %86

84:                                               ; preds = %65
  br label %86

85:                                               ; preds = %8
  br label %86

86:                                               ; preds = %84, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %65, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %14, %8, %85, %62
  %87 = phi i32 [ %64, %62 ], [ 4, %8 ], [ 5, %85 ], [ 17, %35 ], [ 30, %34 ], [ 29, %33 ], [ 28, %32 ], [ 27, %31 ], [ 26, %30 ], [ 25, %29 ], [ 24, %28 ], [ 23, %27 ], [ 22, %26 ], [ 21, %25 ], [ 20, %24 ], [ 20, %23 ], [ 19, %22 ], [ 18, %21 ], [ 17, %20 ], [ 16, %14 ], [ 1, %84 ], [ 14, %83 ], [ 13, %82 ], [ 12, %81 ], [ 11, %80 ], [ 10, %79 ], [ 9, %78 ], [ 8, %77 ], [ 7, %76 ], [ 6, %75 ], [ 5, %74 ], [ 4, %73 ], [ 4, %72 ], [ 3, %71 ], [ 2, %70 ], [ 1, %69 ], [ 0, %65 ]
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter27ConvertContentAlignmentDataERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %5) #15
  %9 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %14 [
    i32 517, label %15
    i32 518, label %11
    i32 519, label %12
    i32 505, label %13
  ]

11:                                               ; preds = %7
  br label %15

12:                                               ; preds = %7
  br label %15

13:                                               ; preds = %7
  br label %15

14:                                               ; preds = %7
  br label %15

15:                                               ; preds = %14, %13, %12, %11, %7, %2
  %16 = phi i16 [ 0, %2 ], [ 64, %14 ], [ 64, %13 ], [ 48, %12 ], [ 32, %11 ], [ 16, %7 ]
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %19) #15
  %23 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %35 [
    i32 307, label %34
    i32 296, label %25
    i32 740, label %26
    i32 739, label %27
    i32 310, label %28
    i32 506, label %29
    i32 507, label %30
    i32 515, label %31
    i32 516, label %32
    i32 306, label %33
  ]

25:                                               ; preds = %21
  br label %35

26:                                               ; preds = %21
  br label %35

27:                                               ; preds = %21
  br label %35

28:                                               ; preds = %21
  br label %35

29:                                               ; preds = %21
  br label %35

30:                                               ; preds = %21
  br label %35

31:                                               ; preds = %21
  br label %35

32:                                               ; preds = %21
  br label %35

33:                                               ; preds = %21
  br label %35

34:                                               ; preds = %21
  br label %35

35:                                               ; preds = %21, %25, %26, %27, %28, %29, %30, %31, %32, %33, %34
  %36 = phi i16 [ 9, %34 ], [ 8, %33 ], [ 7, %32 ], [ 6, %31 ], [ 5, %30 ], [ 4, %29 ], [ 3, %28 ], [ 2, %27 ], [ 1, %26 ], [ 1, %25 ], [ 0, %21 ]
  %37 = or i16 %36, %16
  br label %38

38:                                               ; preds = %15, %35
  %39 = phi i16 [ %37, %35 ], [ %16, %15 ]
  %40 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 4
  %41 = bitcast %"class.blink::CSSValue"* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  %45 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %42) #15
  %46 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %45, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 521
  %49 = select i1 %48, i16 256, i16 128
  %50 = icmp eq i32 %47, 520
  %51 = select i1 %50, i16 128, i16 %49
  %52 = and i16 %39, -385
  %53 = or i16 %51, %52
  br label %54

54:                                               ; preds = %38, %44
  %55 = phi i16 [ %53, %44 ], [ %39, %38 ]
  %56 = zext i16 %55 to i32
  ret i32 %56
}

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter19ConvertGridAutoFlowERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %4 = bitcast i8* %3 to %"class.WTF::Vector.1855"*
  %5 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %4, i32 0) #15
  %6 = bitcast %"class.blink::Member.1324"* %5 to %"class.blink::CSSIdentifierValue"**
  %7 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %4, i32 1) #15
  %14 = bitcast %"class.blink::Member.1324"* %13 to %"class.blink::CSSIdentifierValue"**
  %15 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %14, align 8
  br label %16

16:                                               ; preds = %2, %12
  %17 = phi %"class.blink::CSSIdentifierValue"* [ %15, %12 ], [ null, %2 ]
  %18 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %7, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  switch i32 %19, label %41 [
    i32 522, label %20
    i32 524, label %27
    i32 529, label %34
  ]

20:                                               ; preds = %16
  %21 = icmp eq %"class.blink::CSSIdentifierValue"* %17, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %17, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 529
  br i1 %25, label %41, label %26

26:                                               ; preds = %20, %22
  br label %41

27:                                               ; preds = %16
  %28 = icmp eq %"class.blink::CSSIdentifierValue"* %17, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %17, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 529
  br i1 %32, label %41, label %33

33:                                               ; preds = %27, %29
  br label %41

34:                                               ; preds = %16
  %35 = icmp eq %"class.blink::CSSIdentifierValue"* %17, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %17, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 524
  br i1 %39, label %41, label %40

40:                                               ; preds = %34, %36
  br label %41

41:                                               ; preds = %16, %36, %29, %22, %40, %33, %26
  %42 = phi i32 [ 6, %40 ], [ 9, %33 ], [ 5, %26 ], [ 6, %22 ], [ 10, %29 ], [ 10, %36 ], [ 5, %16 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, %"class.WTF::StringImpl"* } @_ZN5blink21StyleBuilderConverter19ConvertGridPositionERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 6
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %59, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.WTF::StringImpl"**
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %211, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #15
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !21

27:                                               ; preds = %18
  tail call void @llvm.trap() #15
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %13, %28
  %31 = load atomic i32, i32* %14 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %46

36:                                               ; preds = %30
  %37 = zext i32 %35 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !21

43:                                               ; preds = %36
  tail call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %46

46:                                               ; preds = %30, %44
  %47 = phi i32 [ %45, %44 ], [ %35, %30 ]
  %48 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %49 = load atomic i32, i32* %14 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %54 = add i32 %47, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %46
  %56 = phi i32 [ %54, %52 ], [ %47, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %211

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #15
  br label %211

59:                                               ; preds = %2
  %60 = icmp ne i8 %4, 2
  %61 = or i1 %6, %60
  br i1 %61, label %62, label %211

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %64 = bitcast i8* %63 to %"class.blink::Member.1324"**
  %65 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %66, align 8
  %68 = icmp eq %"class.blink::CSSValue"* %67, null
  br i1 %68, label %193, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %67, i64 0, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 2
  br i1 %72, label %73, label %91

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %67, i64 1, i32 1
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 704
  br i1 %77, label %78, label %123

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %65, i64 1
  %80 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %211, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %79, i64 0, i32 0, i32 0
  %86 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %85, align 8
  %87 = icmp eq %"class.blink::CSSValue"* %86, null
  br i1 %87, label %211, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %86, i64 0, i32 2
  %90 = load i8, i8* %89, align 1
  br label %91

91:                                               ; preds = %88, %69
  %92 = phi i8 [ %90, %88 ], [ %71, %69 ]
  %93 = phi %"class.blink::CSSValue"* [ %86, %88 ], [ %67, %69 ]
  %94 = phi %"class.blink::Member.1324"* [ %79, %88 ], [ %65, %69 ]
  %95 = phi i1 [ true, %88 ], [ false, %69 ]
  %96 = icmp ugt i8 %92, 1
  %97 = bitcast %"class.blink::CSSValue"* %93 to %"class.blink::CSSPrimitiveValue"*
  %98 = icmp eq %"class.blink::CSSValue"* %93, null
  %99 = or i1 %98, %96
  br i1 %99, label %123, label %100

100:                                              ; preds = %91
  %101 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* nonnull %97) #15
  br i1 %101, label %102, label %123

102:                                              ; preds = %100
  %103 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %97) #15
  %104 = fcmp ult double %103, 0x41DFFFFFFFC00000
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = fcmp ugt double %103, 0xC1E0000000000000
  br i1 %106, label %107, label %109

107:                                              ; preds = %105
  %108 = fptosi double %103 to i32
  br label %109

109:                                              ; preds = %102, %105, %107
  %110 = phi i32 [ %108, %107 ], [ 2147483647, %102 ], [ -2147483648, %105 ]
  %111 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %94, i64 1
  %112 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %64, align 8
  %113 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %112, i64 %116
  %118 = icmp eq %"class.blink::Member.1324"* %111, %117
  br i1 %118, label %130, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %111, i64 0, i32 0, i32 0
  %121 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %120, align 8
  %122 = icmp eq %"class.blink::CSSValue"* %121, null
  br i1 %122, label %130, label %123

123:                                              ; preds = %73, %91, %100, %119
  %124 = phi i1 [ %95, %119 ], [ %95, %100 ], [ %95, %91 ], [ false, %73 ]
  %125 = phi %"class.blink::CSSValue"* [ %121, %119 ], [ %93, %100 ], [ %93, %91 ], [ %67, %73 ]
  %126 = phi i32 [ %110, %119 ], [ 1, %100 ], [ 1, %91 ], [ 1, %73 ]
  %127 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %125, i64 0, i32 2
  %128 = load i8, i8* %127, align 1
  %129 = icmp eq i8 %128, 6
  br i1 %129, label %133, label %130

130:                                              ; preds = %123, %119, %109
  %131 = phi i1 [ %95, %119 ], [ %124, %123 ], [ %95, %109 ]
  %132 = phi i32 [ %110, %119 ], [ %126, %123 ], [ %110, %109 ]
  br i1 %131, label %211, label %193

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %125, i64 2, i32 2
  %135 = bitcast i8* %134 to %"class.WTF::StringImpl"**
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %155, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i33
  %147 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %146, i33 1) #15
  %148 = extractvalue { i33, i1 } %147, 1
  %149 = extractvalue { i33, i1 } %147, 0
  %150 = icmp slt i33 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %152, label %153, !prof !21

152:                                              ; preds = %143
  tail call void @llvm.trap() #15
  unreachable

153:                                              ; preds = %143
  %154 = trunc i33 %149 to i32
  store i32 %154, i32* %144, align 4
  br label %155

155:                                              ; preds = %133, %138, %153
  %156 = ptrtoint %"class.WTF::StringImpl"* %136 to i64
  br i1 %124, label %157, label %175

157:                                              ; preds = %155
  br i1 %137, label %195, label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %195

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i33
  %167 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #15
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !21

172:                                              ; preds = %163
  tail call void @llvm.trap() #15
  unreachable

173:                                              ; preds = %163
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %164, align 4
  br label %195

175:                                              ; preds = %155
  br i1 %137, label %195, label %176

176:                                              ; preds = %175
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i33
  %185 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #15
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !21

190:                                              ; preds = %181
  tail call void @llvm.trap() #15
  unreachable

191:                                              ; preds = %181
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %182, align 4
  br label %195

193:                                              ; preds = %130, %62
  %194 = phi i32 [ 1, %62 ], [ %132, %130 ]
  br label %211

195:                                              ; preds = %191, %176, %175, %173, %158, %157
  %196 = phi i32 [ 2, %173 ], [ 2, %158 ], [ 2, %157 ], [ 1, %175 ], [ 1, %176 ], [ 1, %191 ]
  %197 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #15
  br label %211

211:                                              ; preds = %193, %84, %78, %130, %8, %59, %55, %58, %210, %207, %195
  %212 = phi i32 [ %126, %195 ], [ %126, %207 ], [ %126, %210 ], [ 0, %58 ], [ 0, %55 ], [ 0, %59 ], [ 0, %8 ], [ 1, %84 ], [ 1, %78 ], [ %132, %130 ], [ %194, %193 ]
  %213 = phi i64 [ 0, %195 ], [ %156, %207 ], [ %156, %210 ], [ %48, %58 ], [ %48, %55 ], [ 0, %59 ], [ 0, %8 ], [ 0, %84 ], [ 0, %78 ], [ 0, %130 ], [ 0, %193 ]
  %214 = phi i32 [ %196, %195 ], [ %196, %207 ], [ %196, %210 ], [ 3, %58 ], [ 3, %55 ], [ 0, %59 ], [ 3, %8 ], [ 2, %84 ], [ 2, %78 ], [ 2, %130 ], [ 1, %193 ]
  %215 = zext i32 %212 to i64
  %216 = shl nuw i64 %215, 32
  %217 = zext i32 %214 to i64
  %218 = or i64 %216, %217
  %219 = insertvalue { i64, %"class.WTF::StringImpl"* } undef, i64 %218, 0
  %220 = inttoptr i64 %213 to %"class.WTF::StringImpl"*
  %221 = insertvalue { i64, %"class.WTF::StringImpl"* } %219, %"class.WTF::StringImpl"* %220, 1
  ret { i64, %"class.WTF::StringImpl"* } %221
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter20ConvertGridTrackSizeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridTrackSize"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::GridLength", align 8
  %5 = alloca %"class.blink::GridLength", align 8
  %6 = alloca %"class.blink::GridLength", align 8
  %7 = alloca %"class.blink::GridLength", align 8
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp ult i8 %9, 3
  br i1 %10, label %11, label %47

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::GridLength"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #15
  call fastcc void @_ZN5blink12_GLOBAL__N_123ConvertGridTrackBreadthERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridLength"* nonnull sret %4, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %2)
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::GridLength"* %4 to i64*
  %16 = bitcast %"class.blink::GridLength"* %14 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 4
  %18 = and i64 %17, 280375465082880
  %19 = icmp eq i64 %18, 8796093022208
  br i1 %19, label %20, label %23

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %14, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %21) #15
  %22 = load i64, i64* %15, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i64 [ %22, %20 ], [ %17, %11 ]
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %26 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %4, i64 0, i32 1
  %27 = bitcast double* %25 to i8*
  %28 = bitcast double* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 12, i1 false) #15
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %30 = bitcast %"class.blink::GridLength"* %29 to i64*
  store i64 %24, i64* %30, align 4
  %31 = and i64 %24, 280375465082880
  %32 = icmp eq i64 %31, 8796093022208
  br i1 %32, label %33, label %35

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %29, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %34) #15
  br label %35

35:                                               ; preds = %23, %33
  %36 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %37 = bitcast double* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %28, i64 12, i1 false) #15
  %38 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %39 = bitcast %"class.blink::GridLength"* %38 to i64*
  store i64 2199023255552, i64* %39, align 4
  %40 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  store double 0.000000e+00, double* %40, align 8
  %41 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 2
  store i32 0, i32* %41, align 8
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* %0) #15
  %42 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %4, i64 0, i32 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 8
  br i1 %44, label %45, label %123

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %4, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %46) #15
  br label %123

47:                                               ; preds = %3
  %48 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 18, i32 2
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 540
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::GridLength"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #15
  %54 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %55 = bitcast i8* %54 to %"class.WTF::Vector.1855"*
  %56 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %55, i32 0) #15
  %57 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %57, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_123ConvertGridTrackBreadthERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridLength"* nonnull sret %5, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %58)
  call void @_ZN5blink13GridTrackSizeC2ERKNS_10GridLengthENS_17GridTrackSizeTypeE(%"class.blink::GridTrackSize"* %0, %"class.blink::GridLength"* nonnull dereferenceable(24) %5, i32 2)
  %59 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 0, i32 2
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 8
  br i1 %61, label %62, label %123

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %5, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %63) #15
  br label %123

64:                                               ; preds = %47
  %65 = bitcast %"class.blink::GridLength"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #15
  %66 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 1
  %68 = bitcast %"class.blink::GridLength"* %6 to i64*
  store i64 -6148914691236517206, i64* %68, align 8
  store double 0xFFFFFFFFFFFFFFFF, double* %67, align 8
  %69 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 2
  %70 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %71 = bitcast i8* %70 to %"class.WTF::Vector.1855"*
  %72 = bitcast i32* %69 to i64*
  store i64 -6148914691236517206, i64* %72, align 8
  %73 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %71, i32 0) #15
  %74 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %74, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_123ConvertGridTrackBreadthERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridLength"* nonnull sret %6, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %75)
  %76 = bitcast %"class.blink::GridLength"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #15
  %77 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %7, i64 0, i32 0, i32 2
  %78 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %7, i64 0, i32 1
  %79 = bitcast %"class.blink::GridLength"* %7 to i64*
  store i64 -6148914691236517206, i64* %79, align 8
  store double 0xFFFFFFFFFFFFFFFF, double* %78, align 8
  %80 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %7, i64 0, i32 2
  %81 = bitcast i32* %80 to i64*
  store i64 -6148914691236517206, i64* %81, align 8
  %82 = call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %71, i32 1) #15
  %83 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %83, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_123ConvertGridTrackBreadthERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridLength"* nonnull sret %7, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %84)
  %85 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 1, i32* %85, align 8
  %86 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %87 = bitcast %"class.blink::GridLength"* %6 to i64*
  %88 = bitcast %"class.blink::GridLength"* %86 to i64*
  %89 = load i64, i64* %87, align 8
  store i64 %89, i64* %88, align 4
  %90 = and i64 %89, 280375465082880
  %91 = icmp eq i64 %90, 8796093022208
  br i1 %91, label %92, label %94

92:                                               ; preds = %64
  %93 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %86, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %93) #15
  br label %94

94:                                               ; preds = %92, %64
  %95 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %96 = bitcast double* %95 to i8*
  %97 = bitcast double* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 12, i1 false) #15
  %98 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %99 = bitcast %"class.blink::GridLength"* %7 to i64*
  %100 = bitcast %"class.blink::GridLength"* %98 to i64*
  %101 = load i64, i64* %99, align 8
  store i64 %101, i64* %100, align 4
  %102 = and i64 %101, 280375465082880
  %103 = icmp eq i64 %102, 8796093022208
  br i1 %103, label %104, label %106

104:                                              ; preds = %94
  %105 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %98, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %105) #15
  br label %106

106:                                              ; preds = %94, %104
  %107 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %108 = bitcast double* %107 to i8*
  %109 = bitcast double* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 12, i1 false) #15
  %110 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %111 = bitcast %"class.blink::GridLength"* %110 to i64*
  store i64 2199023255552, i64* %111, align 4
  %112 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  store double 0.000000e+00, double* %112, align 8
  %113 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 2
  store i32 0, i32* %113, align 8
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* %0) #15
  %114 = load i8, i8* %77, align 1
  %115 = icmp eq i8 %114, 8
  br i1 %115, label %116, label %118

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %7, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %117) #15
  br label %118

118:                                              ; preds = %106, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #15
  %119 = load i8, i8* %66, align 1
  %120 = icmp eq i8 %119, 8
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %122) #15
  br label %123

123:                                              ; preds = %121, %118, %62, %52, %45, %35
  %124 = phi i8* [ %12, %35 ], [ %12, %45 ], [ %53, %52 ], [ %53, %62 ], [ %65, %118 ], [ %65, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_123ConvertGridTrackBreadthERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridLength"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) unnamed_addr #2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp ugt i8 %11, 1
  %13 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %14 = icmp eq %"class.blink::CSSValue"* %2, null
  %15 = or i1 %14, %12
  br i1 %15, label %25, label %16

16:                                               ; preds = %3
  %17 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsFlexEv(%"class.blink::CSSPrimitiveValue"* nonnull %13) #15
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = load i8, i8* %10, align 1
  br label %25

20:                                               ; preds = %16
  %21 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %13) #15
  %22 = bitcast %"class.blink::GridLength"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 7, i1 false) #15
  %23 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 1
  store double %21, double* %23, align 8
  %24 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 2
  store i32 1, i32* %24, align 8
  br label %91

25:                                               ; preds = %18, %3
  %26 = phi i8 [ %19, %18 ], [ %11, %3 ]
  %27 = icmp ne i8 %26, 2
  %28 = or i1 %14, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  br label %72

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %65 [
    i32 538, label %35
    i32 539, label %50
  ]

35:                                               ; preds = %31
  %36 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  %37 = bitcast i64* %4 to i32*
  store i32 0, i32* %37, align 8, !alias.scope !51
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 1
  store i8 0, i8* %38, align 4, !alias.scope !51
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  store i8 3, i8* %39, align 1, !alias.scope !51
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  store i8 0, i8* %40, align 2, !alias.scope !51
  %41 = bitcast %"class.blink::GridLength"* %0 to i64*
  %42 = load i64, i64* %4, align 8
  store i64 %42, i64* %41, align 4
  %43 = and i64 %42, 280375465082880
  %44 = icmp eq i64 %43, 8796093022208
  br i1 %44, label %45, label %47

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %46) #15
  br label %47

47:                                               ; preds = %45, %35
  %48 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 1
  store double 0.000000e+00, double* %48, align 8
  %49 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 2
  store i32 0, i32* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %91

50:                                               ; preds = %31
  %51 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  %52 = bitcast i64* %6 to i32*
  store i32 0, i32* %52, align 8, !alias.scope !54
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 1
  store i8 0, i8* %53, align 4, !alias.scope !54
  %54 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  store i8 4, i8* %54, align 1, !alias.scope !54
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  store i8 0, i8* %55, align 2, !alias.scope !54
  %56 = bitcast %"class.blink::GridLength"* %0 to i64*
  %57 = load i64, i64* %6, align 8
  store i64 %57, i64* %56, align 4
  %58 = and i64 %57, 280375465082880
  %59 = icmp eq i64 %58, 8796093022208
  br i1 %59, label %60, label %62

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %61) #15
  br label %62

62:                                               ; preds = %60, %50
  %63 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 1
  store double 0.000000e+00, double* %63, align 8
  %64 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 2
  store i32 0, i32* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  br label %91

65:                                               ; preds = %31
  %66 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #15
  %67 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4, !noalias !57
  %70 = icmp eq i32 %69, 405
  br i1 %70, label %71, label %72

71:                                               ; preds = %65
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 7, i1 false) #15, !alias.scope !60
  br label %75

72:                                               ; preds = %29, %65
  %73 = phi i8* [ %30, %29 ], [ %66, %65 ]
  %74 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %9, %"class.blink::CSSPrimitiveValue"* %13, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %74) #15
  br label %75

75:                                               ; preds = %71, %72
  %76 = phi i8* [ %66, %71 ], [ %73, %72 ]
  %77 = bitcast %"class.blink::GridLength"* %0 to i64*
  %78 = load i64, i64* %8, align 8
  store i64 %78, i64* %77, align 4
  %79 = and i64 %78, 280375465082880
  %80 = icmp eq i64 %79, 8796093022208
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %82) #15
  br label %83

83:                                               ; preds = %75, %81
  %84 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 1
  store double 0.000000e+00, double* %84, align 8
  %85 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %0, i64 0, i32 2
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %90

89:                                               ; preds = %83
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #15
  br label %90

90:                                               ; preds = %83, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #15
  br label %91

91:                                               ; preds = %47, %62, %90, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13GridTrackSizeC2ERKNS_10GridLengthENS_17GridTrackSizeTypeE(%"class.blink::GridTrackSize"*, %"class.blink::GridLength"* dereferenceable(24), i32) unnamed_addr #2 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %11 = icmp eq i32 %2, 2
  br i1 %11, label %12, label %20

12:                                               ; preds = %3
  %13 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 7, i1 false) #15, !alias.scope !63
  %14 = bitcast %"class.blink::GridLength"* %10 to i64*
  %15 = load i64, i64* %4, align 8
  store i64 %15, i64* %14, align 4
  %16 = and i64 %15, 280375465082880
  %17 = icmp eq i64 %16, 8796093022208
  br i1 %17, label %18, label %28

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %10, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %19) #15
  br label %28

20:                                               ; preds = %3
  %21 = bitcast %"class.blink::GridLength"* %1 to i64*
  %22 = bitcast %"class.blink::GridLength"* %10 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  %24 = and i64 %23, 280375465082880
  %25 = icmp eq i64 %24, 8796093022208
  br i1 %25, label %26, label %48

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %10, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %27) #15
  br label %48

28:                                               ; preds = %18, %12
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  store double 0.000000e+00, double* %29, align 8
  %30 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 2
  store i32 0, i32* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %32 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 7, i1 false) #15, !alias.scope !66
  %33 = bitcast %"class.blink::GridLength"* %31 to i64*
  %34 = load i64, i64* %5, align 8
  store i64 %34, i64* %33, align 4
  %35 = and i64 %34, 280375465082880
  %36 = icmp eq i64 %35, 8796093022208
  br i1 %36, label %40, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  store double 0.000000e+00, double* %38, align 8
  %39 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 2
  store i32 0, i32* %39, align 8
  br label %60

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %31, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %41) #15
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 8
  %45 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  store double 0.000000e+00, double* %45, align 8
  %46 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 2
  store i32 0, i32* %46, align 8
  br i1 %44, label %47, label %60

47:                                               ; preds = %40
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #15
  br label %60

48:                                               ; preds = %20, %26
  %49 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %50 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %1, i64 0, i32 1
  %51 = bitcast double* %49 to i8*
  %52 = bitcast double* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 12, i1 false) #15
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %54 = bitcast %"class.blink::GridLength"* %53 to i64*
  %55 = load i64, i64* %21, align 4
  store i64 %55, i64* %54, align 4
  %56 = and i64 %55, 280375465082880
  %57 = icmp eq i64 %56, 8796093022208
  br i1 %57, label %58, label %74

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %53, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %59) #15
  br label %74

60:                                               ; preds = %37, %47, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  %61 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %62 = bitcast %"class.blink::GridLength"* %1 to i64*
  %63 = bitcast %"class.blink::GridLength"* %61 to i64*
  %64 = load i64, i64* %62, align 4
  store i64 %64, i64* %63, align 4
  %65 = and i64 %64, 280375465082880
  %66 = icmp eq i64 %65, 8796093022208
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %61, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %68) #15
  br label %69

69:                                               ; preds = %60, %67
  %70 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  %71 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %1, i64 0, i32 1
  %72 = bitcast double* %70 to i8*
  %73 = bitcast double* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 12, i1 false) #15
  br label %92

74:                                               ; preds = %48, %58
  %75 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %76 = bitcast double* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %52, i64 12, i1 false) #15
  %77 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %78 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  %79 = bitcast i64* %7 to i32*
  store i32 0, i32* %79, align 8, !alias.scope !69
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 1
  store i8 0, i8* %80, align 4, !alias.scope !69
  %81 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  store i8 2, i8* %81, align 1, !alias.scope !69
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 3
  store i8 0, i8* %82, align 2, !alias.scope !69
  %83 = bitcast %"class.blink::GridLength"* %77 to i64*
  %84 = load i64, i64* %7, align 8
  store i64 %84, i64* %83, align 4
  %85 = and i64 %84, 280375465082880
  %86 = icmp eq i64 %85, 8796093022208
  br i1 %86, label %87, label %89

87:                                               ; preds = %74
  %88 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %77, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %88) #15
  br label %89

89:                                               ; preds = %87, %74
  %90 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  store double 0.000000e+00, double* %90, align 8
  %91 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 2
  store i32 0, i32* %91, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  br label %92

92:                                               ; preds = %69, %89
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter24ConvertGridTrackSizeListERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridTrackList"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.WTF::Vector.476", align 8
  %5 = alloca %"class.blink::GridTrackSize", align 8
  %6 = bitcast %"class.WTF::Vector.476"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %4, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #15
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %11 = bitcast i8* %10 to %"class.blink::Member.1324"**
  %12 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 6, i32 2
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %12, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.blink::GridTrackSize"* %5 to i8*
  %21 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2
  %23 = bitcast %"class.blink::GridLength"* %22 to i64*
  %24 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 1
  %25 = bitcast double* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3
  %27 = bitcast %"class.blink::GridLength"* %26 to i64*
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 1
  %29 = bitcast double* %28 to i8*
  %30 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4
  %31 = bitcast %"class.blink::GridLength"* %30 to i64*
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 1
  %33 = bitcast double* %32 to i8*
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 5
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 0, i32 2
  %36 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 0
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 0, i32 2
  %38 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 0
  %39 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 0, i32 2
  %40 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 0
  br label %79

41:                                               ; preds = %138, %3
  call void @_ZN5blink13GridTrackListC1ERN3WTF6VectorINS_13GridTrackSizeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::GridTrackList"* %0, %"class.WTF::Vector.476"* nonnull dereferenceable(16) %4) #15
  %42 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %7, align 8
  %43 = icmp eq %"class.blink::GridTrackSize"* %42, null
  br i1 %43, label %78, label %44, !prof !49

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::GridTrackSize"* %42 to i8*
  %46 = load i32, i32* %9, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %76, label %48, !prof !21

48:                                               ; preds = %44
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %42, i64 %49
  br label %51

51:                                               ; preds = %70, %48
  %52 = phi %"class.blink::GridTrackSize"* [ %71, %70 ], [ %42, %48 ]
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %52, i64 0, i32 4, i32 0, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 8
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %52, i64 0, i32 4, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %57) #15
  br label %58

58:                                               ; preds = %56, %51
  %59 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %52, i64 0, i32 3, i32 0, i32 2
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 8
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %52, i64 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %63) #15
  br label %64

64:                                               ; preds = %62, %58
  %65 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %52, i64 0, i32 2, i32 0, i32 2
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 8
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %52, i64 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %69) #15
  br label %70

70:                                               ; preds = %68, %64
  %71 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %52, i64 1
  %72 = icmp eq %"class.blink::GridTrackSize"* %71, %50
  br i1 %72, label %73, label %51

73:                                               ; preds = %70
  store i32 0, i32* %9, align 4
  %74 = bitcast %"class.WTF::Vector.476"* %4 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %44
  %77 = phi i8* [ %75, %73 ], [ %45, %44 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %7, align 8
  br label %78

78:                                               ; preds = %41, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void

79:                                               ; preds = %19, %138
  %80 = phi %"class.blink::Member.1324"* [ %12, %19 ], [ %139, %138 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %20) #15
  %81 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %81, align 8
  call void @_ZN5blink21StyleBuilderConverter20ConvertGridTrackSizeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridTrackSize"* nonnull sret %5, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %82)
  %83 = load i32, i32* %9, align 4
  %84 = load i32, i32* %8, align 8
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %125, label %86, !prof !21

86:                                               ; preds = %79
  %87 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %7, align 8
  %88 = zext i32 %83 to i64
  %89 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %87, i64 %88, i32 0
  %90 = load i32, i32* %21, align 8
  store i32 %90, i32* %89, align 8
  %91 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %87, i64 %88, i32 2
  %92 = bitcast %"class.blink::GridLength"* %91 to i64*
  %93 = load i64, i64* %23, align 8
  store i64 %93, i64* %92, align 4
  %94 = and i64 %93, 280375465082880
  %95 = icmp eq i64 %94, 8796093022208
  br i1 %95, label %96, label %98

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %91, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %97) #15
  br label %98

98:                                               ; preds = %96, %86
  %99 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %87, i64 %88, i32 2, i32 1
  %100 = bitcast double* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %25, i64 12, i1 false) #15
  %101 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %87, i64 %88, i32 3
  %102 = bitcast %"class.blink::GridLength"* %101 to i64*
  %103 = load i64, i64* %27, align 8
  store i64 %103, i64* %102, align 4
  %104 = and i64 %103, 280375465082880
  %105 = icmp eq i64 %104, 8796093022208
  br i1 %105, label %106, label %108

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %101, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %107) #15
  br label %108

108:                                              ; preds = %106, %98
  %109 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %87, i64 %88, i32 3, i32 1
  %110 = bitcast double* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %29, i64 12, i1 false) #15
  %111 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %87, i64 %88, i32 4
  %112 = bitcast %"class.blink::GridLength"* %111 to i64*
  %113 = load i64, i64* %31, align 8
  store i64 %113, i64* %112, align 4
  %114 = and i64 %113, 280375465082880
  %115 = icmp eq i64 %114, 8796093022208
  br i1 %115, label %116, label %118

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %111, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %117) #15
  br label %118

118:                                              ; preds = %116, %108
  %119 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %87, i64 %88, i32 4, i32 1
  %120 = bitcast double* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %33, i64 12, i1 false) #15
  %121 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %87, i64 %88, i32 5
  %122 = load i16, i16* %34, align 8
  store i16 %122, i16* %121, align 8
  %123 = load i32, i32* %9, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %9, align 4
  br label %126

125:                                              ; preds = %79
  call void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.476"* nonnull %4, %"class.blink::GridTrackSize"* nonnull dereferenceable(88) %5) #15
  br label %126

126:                                              ; preds = %118, %125
  %127 = load i8, i8* %35, align 1
  %128 = icmp eq i8 %127, 8
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %130

130:                                              ; preds = %129, %126
  %131 = load i8, i8* %37, align 1
  %132 = icmp eq i8 %131, 8
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #15
  br label %134

134:                                              ; preds = %133, %130
  %135 = load i8, i8* %39, align 1
  %136 = icmp eq i8 %135, 8
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %40) #15
  br label %138

138:                                              ; preds = %134, %137
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %20) #15
  %139 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %80, i64 1
  %140 = icmp eq %"class.blink::Member.1324"* %139, %17
  br i1 %140, label %41, label %79
}

declare void @_ZN5blink13GridTrackListC1ERN3WTF6VectorINS_13GridTrackSizeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::GridTrackList"*, %"class.WTF::Vector.476"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter20ConvertGridTrackListERKNS_8CSSValueERNS_13GridTrackListERN3WTF7HashMapINS6_6StringENS6_6VectorImLj0ENS6_18PartitionAllocatorEEENS6_10StringHashENS6_10HashTraitsIS8_EENSD_ISB_EESA_EERNS7_ImNS9_IS8_Lj0ESA_EENS6_7IntHashImEENS6_29UnsignedWithZeroKeyHashTraitsImEENSD_ISI_EESA_EERNS9_INS_13GridTrackSizeELj0ESA_EESH_SP_RmRNS_14AutoRepeatTypeERNS_18StyleResolverStateE(%"class.blink::CSSValue"* readonly dereferenceable(3), %"class.blink::GridTrackList"* dereferenceable(24), %"class.WTF::HashMap.543"* dereferenceable(24), %"class.WTF::HashMap.553"* dereferenceable(24), %"class.WTF::Vector.476"* nocapture dereferenceable(16), %"class.WTF::HashMap.543"* dereferenceable(24), %"class.WTF::HashMap.553"* dereferenceable(24), i64* nocapture dereferenceable(8), i32* nocapture dereferenceable(4), %"class.blink::StyleResolverState"* dereferenceable(600)) local_unnamed_addr #2 align 2 {
  %11 = alloca i64, align 8
  %12 = alloca %class.anon, align 8
  %13 = alloca %"class.WTF::Vector.476", align 8
  %14 = alloca %"class.blink::GridTrackSize", align 8
  %15 = alloca %"class.WTF::Vector.476", align 8
  %16 = alloca %"class.blink::GridTrackSize", align 8
  %17 = alloca %"class.WTF::Vector.476", align 8
  %18 = alloca [1 x %"class.blink::GridTrackSize"], align 8
  %19 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp ne i8 %20, 2
  %22 = icmp eq %"class.blink::CSSValue"* %0, null
  %23 = or i1 %22, %21
  br i1 %23, label %24, label %469

24:                                               ; preds = %10
  %25 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store i64 0, i64* %11, align 8
  %26 = bitcast %class.anon* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #15
  %27 = getelementptr inbounds %class.anon, %class.anon* %12, i64 0, i32 0
  %28 = getelementptr inbounds %class.anon, %class.anon* %12, i64 0, i32 1
  %29 = getelementptr inbounds %class.anon, %class.anon* %12, i64 0, i32 2
  %30 = getelementptr inbounds %class.anon, %class.anon* %12, i64 0, i32 3
  %31 = getelementptr inbounds %class.anon, %class.anon* %12, i64 0, i32 4
  store i64* %11, i64** %27, align 8
  store %"class.WTF::HashMap.543"* %2, %"class.WTF::HashMap.543"** %28, align 8
  store %"class.WTF::HashMap.553"* %3, %"class.WTF::HashMap.553"** %29, align 8
  store %"class.blink::GridTrackList"* %1, %"class.blink::GridTrackList"** %30, align 8
  store %"class.blink::StyleResolverState"* %9, %"class.blink::StyleResolverState"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %33 = bitcast i8* %32 to %"class.blink::Member.1324"**
  %34 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %34, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %110, label %41

41:                                               ; preds = %24
  %42 = bitcast %"class.WTF::Vector.476"* %15 to i8*
  %43 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %15, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %15, i64 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %15, i64 0, i32 0, i32 0, i32 2
  %46 = bitcast %"class.blink::GridTrackSize"* %16 to i8*
  %47 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 2
  %49 = bitcast %"class.blink::GridLength"* %48 to i64*
  %50 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 2, i32 1
  %51 = bitcast double* %50 to i8*
  %52 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 3
  %53 = bitcast %"class.blink::GridLength"* %52 to i64*
  %54 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 3, i32 1
  %55 = bitcast double* %54 to i8*
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 4
  %57 = bitcast %"class.blink::GridLength"* %56 to i64*
  %58 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 4, i32 1
  %59 = bitcast double* %58 to i8*
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 5
  %61 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 4, i32 0, i32 2
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 4, i32 0
  %63 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 3, i32 0, i32 2
  %64 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 3, i32 0
  %65 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 2, i32 0, i32 2
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %16, i64 0, i32 2, i32 0
  %67 = bitcast %"class.WTF::Vector.476"* %15 to i8**
  %68 = bitcast %"class.WTF::Vector.476"* %13 to i8*
  %69 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %13, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %13, i64 0, i32 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %13, i64 0, i32 0, i32 0, i32 2
  %72 = bitcast %"class.blink::GridTrackSize"* %14 to i8*
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 0
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 2
  %75 = bitcast %"class.blink::GridLength"* %74 to i64*
  %76 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 2, i32 1
  %77 = bitcast double* %76 to i8*
  %78 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 3
  %79 = bitcast %"class.blink::GridLength"* %78 to i64*
  %80 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 3, i32 1
  %81 = bitcast double* %80 to i8*
  %82 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 4
  %83 = bitcast %"class.blink::GridLength"* %82 to i64*
  %84 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 4, i32 1
  %85 = bitcast double* %84 to i8*
  %86 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 5
  %87 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 4, i32 0, i32 2
  %88 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 4, i32 0
  %89 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 3, i32 0, i32 2
  %90 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 3, i32 0
  %91 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 2, i32 0, i32 2
  %92 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %14, i64 0, i32 2, i32 0
  %93 = bitcast %"class.WTF::Vector.476"* %13 to i64*
  %94 = bitcast %"class.WTF::Vector.476"* %4 to i64*
  %95 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %4, i64 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %4, i64 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.WTF::Vector.476"* %13 to i8**
  %98 = bitcast %"class.WTF::Vector.476"* %17 to i8*
  %99 = bitcast [1 x %"class.blink::GridTrackSize"]* %18 to i8*
  %100 = getelementptr inbounds [1 x %"class.blink::GridTrackSize"], [1 x %"class.blink::GridTrackSize"]* %18, i64 0, i64 0
  %101 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %17, i64 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %17, i64 0, i32 0, i32 0, i32 2
  %103 = bitcast %"class.WTF::Vector.476"* %17 to i8**
  %104 = getelementptr inbounds [1 x %"class.blink::GridTrackSize"], [1 x %"class.blink::GridTrackSize"]* %18, i64 0, i64 0, i32 4, i32 0, i32 2
  %105 = getelementptr inbounds [1 x %"class.blink::GridTrackSize"], [1 x %"class.blink::GridTrackSize"]* %18, i64 0, i64 0, i32 4, i32 0
  %106 = getelementptr inbounds [1 x %"class.blink::GridTrackSize"], [1 x %"class.blink::GridTrackSize"]* %18, i64 0, i64 0, i32 3, i32 0, i32 2
  %107 = getelementptr inbounds [1 x %"class.blink::GridTrackSize"], [1 x %"class.blink::GridTrackSize"]* %18, i64 0, i64 0, i32 3, i32 0
  %108 = getelementptr inbounds [1 x %"class.blink::GridTrackSize"], [1 x %"class.blink::GridTrackSize"]* %18, i64 0, i64 0, i32 2, i32 0, i32 2
  %109 = getelementptr inbounds [1 x %"class.blink::GridTrackSize"], [1 x %"class.blink::GridTrackSize"]* %18, i64 0, i64 0, i32 2, i32 0
  br label %111

110:                                              ; preds = %466, %24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  br label %469

111:                                              ; preds = %41, %466
  %112 = phi %"class.blink::Member.1324"* [ %34, %41 ], [ %467, %466 ]
  %113 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %113, align 8
  %115 = icmp eq %"class.blink::CSSValue"* %114, null
  br i1 %115, label %406, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 0, i32 2
  %118 = load i8, i8* %117, align 1
  switch i8 %118, label %406 [
    i8 56, label %119
    i8 57, label %258
  ]

119:                                              ; preds = %116
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 16, i1 false) #15
  %120 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 18, i32 2
  %121 = bitcast i8* %120 to i32*
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 831
  %124 = select i1 %123, i32 1, i32 2
  store i32 %124, i32* %8, align 4
  %125 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 2, i32 2
  %126 = bitcast i8* %125 to %"class.blink::Member.1324"**
  %127 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 6, i32 2
  %129 = bitcast i8* %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %127, i64 %131
  %133 = icmp eq i32 %130, 0
  br i1 %133, label %134, label %139

134:                                              ; preds = %206, %119
  %135 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !20
  %136 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %137 = or i8 %136, %135
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %214, label %210

139:                                              ; preds = %119, %206
  %140 = phi %"class.blink::Member.1324"* [ %208, %206 ], [ %127, %119 ]
  %141 = phi i64 [ %207, %206 ], [ 0, %119 ]
  %142 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %140, i64 0, i32 0, i32 0
  %143 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %143, i64 0, i32 2
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 55
  br i1 %146, label %147, label %148

147:                                              ; preds = %139
  call fastcc void @_ZN5blinkL24ConvertGridLineNamesListERKNS_8CSSValueEmRN3WTF7HashMapINS3_6StringENS3_6VectorImLj0ENS3_18PartitionAllocatorEEENS3_10StringHashENS3_10HashTraitsIS5_EENSA_IS8_EES7_EERNS4_ImNS6_IS5_Lj0ES7_EENS3_7IntHashImEENS3_29UnsignedWithZeroKeyHashTraitsImEENSA_ISF_EES7_EE(%"class.blink::CSSValue"* dereferenceable(3) %143, i64 %141, %"class.WTF::HashMap.543"* dereferenceable(24) %5, %"class.WTF::HashMap.553"* dereferenceable(24) %6)
  br label %206

148:                                              ; preds = %139
  %149 = add i64 %141, 1
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %72) #15
  call void @_ZN5blink21StyleBuilderConverter20ConvertGridTrackSizeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridTrackSize"* nonnull sret %14, %"class.blink::StyleResolverState"* dereferenceable(600) %9, %"class.blink::CSSValue"* dereferenceable(3) %143)
  %150 = load i32, i32* %71, align 4
  %151 = load i32, i32* %70, align 8
  %152 = icmp eq i32 %150, %151
  br i1 %152, label %192, label %153, !prof !21

153:                                              ; preds = %148
  %154 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %69, align 8
  %155 = zext i32 %150 to i64
  %156 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %154, i64 %155, i32 0
  %157 = load i32, i32* %73, align 8
  store i32 %157, i32* %156, align 8
  %158 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %154, i64 %155, i32 2
  %159 = bitcast %"class.blink::GridLength"* %158 to i64*
  %160 = load i64, i64* %75, align 8
  store i64 %160, i64* %159, align 4
  %161 = and i64 %160, 280375465082880
  %162 = icmp eq i64 %161, 8796093022208
  br i1 %162, label %163, label %165

163:                                              ; preds = %153
  %164 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %158, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %164) #15
  br label %165

165:                                              ; preds = %163, %153
  %166 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %154, i64 %155, i32 2, i32 1
  %167 = bitcast double* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %77, i64 12, i1 false) #15
  %168 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %154, i64 %155, i32 3
  %169 = bitcast %"class.blink::GridLength"* %168 to i64*
  %170 = load i64, i64* %79, align 8
  store i64 %170, i64* %169, align 4
  %171 = and i64 %170, 280375465082880
  %172 = icmp eq i64 %171, 8796093022208
  br i1 %172, label %173, label %175

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %168, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %174) #15
  br label %175

175:                                              ; preds = %173, %165
  %176 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %154, i64 %155, i32 3, i32 1
  %177 = bitcast double* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %81, i64 12, i1 false) #15
  %178 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %154, i64 %155, i32 4
  %179 = bitcast %"class.blink::GridLength"* %178 to i64*
  %180 = load i64, i64* %83, align 8
  store i64 %180, i64* %179, align 4
  %181 = and i64 %180, 280375465082880
  %182 = icmp eq i64 %181, 8796093022208
  br i1 %182, label %183, label %185

183:                                              ; preds = %175
  %184 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %178, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %184) #15
  br label %185

185:                                              ; preds = %183, %175
  %186 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %154, i64 %155, i32 4, i32 1
  %187 = bitcast double* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %85, i64 12, i1 false) #15
  %188 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %154, i64 %155, i32 5
  %189 = load i16, i16* %86, align 8
  store i16 %189, i16* %188, align 8
  %190 = load i32, i32* %71, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %71, align 4
  br label %193

192:                                              ; preds = %148
  call void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.476"* nonnull %13, %"class.blink::GridTrackSize"* nonnull dereferenceable(88) %14) #15
  br label %193

193:                                              ; preds = %185, %192
  %194 = load i8, i8* %87, align 1
  %195 = icmp eq i8 %194, 8
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %88) #15
  br label %197

197:                                              ; preds = %196, %193
  %198 = load i8, i8* %89, align 1
  %199 = icmp eq i8 %198, 8
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #15
  br label %201

201:                                              ; preds = %200, %197
  %202 = load i8, i8* %91, align 1
  %203 = icmp eq i8 %202, 8
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %92) #15
  br label %205

205:                                              ; preds = %201, %204
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %72) #15
  br label %206

206:                                              ; preds = %205, %147
  %207 = phi i64 [ %141, %147 ], [ %149, %205 ]
  %208 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %140, i64 1
  %209 = icmp eq %"class.blink::Member.1324"* %208, %132
  br i1 %209, label %134, label %139

210:                                              ; preds = %134
  %211 = call dereferenceable(40) %"class.blink::NGGridTrackList"* @_ZN5blink13GridTrackList11NGTrackListEv(%"class.blink::GridTrackList"* %1) #15
  %212 = load i32, i32* %8, align 4
  %213 = call zeroext i1 @_ZN5blink15NGGridTrackList15AddAutoRepeaterERKN3WTF6VectorINS_13GridTrackSizeELj0ENS1_18PartitionAllocatorEEENS_19NGGridTrackRepeater10RepeatTypeE(%"class.blink::NGGridTrackList"* %211, %"class.WTF::Vector.476"* nonnull dereferenceable(16) %13, i32 %212) #15
  br label %214

214:                                              ; preds = %134, %210
  %215 = load i64, i64* %93, align 8
  %216 = load i64, i64* %94, align 8
  store atomic i64 %216, i64* %93 monotonic, align 8
  store atomic i64 %215, i64* %94 monotonic, align 8
  %217 = load i32, i32* %95, align 4
  %218 = load i32, i32* %70, align 8
  store i32 %218, i32* %95, align 4
  store i32 %217, i32* %70, align 8
  %219 = load i32, i32* %96, align 4
  %220 = load i32, i32* %71, align 4
  store i32 %220, i32* %96, align 4
  store i32 %219, i32* %71, align 4
  %221 = load i64, i64* %11, align 8
  %222 = add i64 %221, 1
  store i64 %222, i64* %11, align 8
  store i64 %221, i64* %7, align 8
  %223 = inttoptr i64 %216 to %"class.blink::GridTrackSize"*
  %224 = icmp eq i64 %216, 0
  br i1 %224, label %257, label %225, !prof !49

225:                                              ; preds = %214
  %226 = inttoptr i64 %216 to i8*
  %227 = icmp eq i32 %219, 0
  br i1 %227, label %255, label %228, !prof !21

228:                                              ; preds = %225
  %229 = zext i32 %219 to i64
  %230 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %223, i64 %229
  br label %231

231:                                              ; preds = %250, %228
  %232 = phi %"class.blink::GridTrackSize"* [ %251, %250 ], [ %223, %228 ]
  %233 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %232, i64 0, i32 4, i32 0, i32 2
  %234 = load i8, i8* %233, align 1
  %235 = icmp eq i8 %234, 8
  br i1 %235, label %236, label %238

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %232, i64 0, i32 4, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %237) #15
  br label %238

238:                                              ; preds = %236, %231
  %239 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %232, i64 0, i32 3, i32 0, i32 2
  %240 = load i8, i8* %239, align 1
  %241 = icmp eq i8 %240, 8
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %232, i64 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %243) #15
  br label %244

244:                                              ; preds = %242, %238
  %245 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %232, i64 0, i32 2, i32 0, i32 2
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq i8 %246, 8
  br i1 %247, label %248, label %250

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %232, i64 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %249) #15
  br label %250

250:                                              ; preds = %248, %244
  %251 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %232, i64 1
  %252 = icmp eq %"class.blink::GridTrackSize"* %251, %230
  br i1 %252, label %253, label %231

253:                                              ; preds = %250
  store i32 0, i32* %71, align 4
  %254 = load i8*, i8** %97, align 8
  br label %255

255:                                              ; preds = %253, %225
  %256 = phi i8* [ %254, %253 ], [ %226, %225 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %256) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %69, align 8
  br label %257

257:                                              ; preds = %214, %255
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #15
  br label %466

258:                                              ; preds = %116
  %259 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 18, i32 2
  %260 = bitcast i8* %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %268, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 2, i32 2
  %265 = bitcast i8* %264 to %"class.blink::Member.1324"**
  %266 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 6, i32 2
  %267 = bitcast i8* %266 to i32*
  br label %273

268:                                              ; preds = %280, %258
  %269 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !20
  %270 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %271 = or i8 %270, %269
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %466, label %289

273:                                              ; preds = %280, %263
  %274 = phi i64 [ 0, %263 ], [ %281, %280 ]
  %275 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %265, align 8
  %276 = load i32, i32* %267, align 4
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %275, i64 %277
  %279 = icmp eq i32 %276, 0
  br i1 %279, label %280, label %283

280:                                              ; preds = %283, %273
  %281 = add nuw i64 %274, 1
  %282 = icmp eq i64 %281, %261
  br i1 %282, label %268, label %273

283:                                              ; preds = %273, %283
  %284 = phi %"class.blink::Member.1324"* [ %287, %283 ], [ %275, %273 ]
  %285 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %284, i64 0, i32 0, i32 0
  %286 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %285, align 8
  call fastcc void @"_ZZN5blink21StyleBuilderConverter20ConvertGridTrackListERKNS_8CSSValueERNS_13GridTrackListERN3WTF7HashMapINS6_6StringENS6_6VectorImLj0ENS6_18PartitionAllocatorEEENS6_10StringHashENS6_10HashTraitsIS8_EENSD_ISB_EESA_EERNS7_ImNS9_IS8_Lj0ESA_EENS6_7IntHashImEENS6_29UnsignedWithZeroKeyHashTraitsImEENSD_ISI_EESA_EERNS9_INS_13GridTrackSizeELj0ESA_EESH_SP_RmRNS_14AutoRepeatTypeERNS_18StyleResolverStateEENK3$_0clES3_"(%class.anon* nonnull %12, %"class.blink::CSSValue"* dereferenceable(3) %286)
  %287 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %284, i64 1
  %288 = icmp eq %"class.blink::Member.1324"* %287, %278
  br i1 %288, label %280, label %283

289:                                              ; preds = %268
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 16, i1 false) #15
  %290 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 2, i32 2
  %291 = bitcast i8* %290 to %"class.blink::Member.1324"**
  %292 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 6, i32 2
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %292, i64 %296
  %298 = icmp eq i32 %295, 0
  br i1 %298, label %299, label %339

299:                                              ; preds = %403, %289
  %300 = call dereferenceable(40) %"class.blink::NGGridTrackList"* @_ZN5blink13GridTrackList11NGTrackListEv(%"class.blink::GridTrackList"* %1) #15
  %301 = trunc i64 %261 to i32
  %302 = call zeroext i1 @_ZN5blink15NGGridTrackList11AddRepeaterERKN3WTF6VectorINS_13GridTrackSizeELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::NGGridTrackList"* %300, %"class.WTF::Vector.476"* nonnull dereferenceable(16) %15, i32 %301) #15
  %303 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %304 = icmp eq %"class.blink::GridTrackSize"* %303, null
  br i1 %304, label %338, label %305, !prof !49

305:                                              ; preds = %299
  %306 = bitcast %"class.blink::GridTrackSize"* %303 to i8*
  %307 = load i32, i32* %45, align 4
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %336, label %309, !prof !21

309:                                              ; preds = %305
  %310 = zext i32 %307 to i64
  %311 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %303, i64 %310
  br label %312

312:                                              ; preds = %331, %309
  %313 = phi %"class.blink::GridTrackSize"* [ %332, %331 ], [ %303, %309 ]
  %314 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %313, i64 0, i32 4, i32 0, i32 2
  %315 = load i8, i8* %314, align 1
  %316 = icmp eq i8 %315, 8
  br i1 %316, label %317, label %319

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %313, i64 0, i32 4, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %318) #15
  br label %319

319:                                              ; preds = %317, %312
  %320 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %313, i64 0, i32 3, i32 0, i32 2
  %321 = load i8, i8* %320, align 1
  %322 = icmp eq i8 %321, 8
  br i1 %322, label %323, label %325

323:                                              ; preds = %319
  %324 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %313, i64 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %324) #15
  br label %325

325:                                              ; preds = %323, %319
  %326 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %313, i64 0, i32 2, i32 0, i32 2
  %327 = load i8, i8* %326, align 1
  %328 = icmp eq i8 %327, 8
  br i1 %328, label %329, label %331

329:                                              ; preds = %325
  %330 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %313, i64 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %330) #15
  br label %331

331:                                              ; preds = %329, %325
  %332 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %313, i64 1
  %333 = icmp eq %"class.blink::GridTrackSize"* %332, %311
  br i1 %333, label %334, label %312

334:                                              ; preds = %331
  store i32 0, i32* %45, align 4
  %335 = load i8*, i8** %67, align 8
  br label %336

336:                                              ; preds = %334, %305
  %337 = phi i8* [ %335, %334 ], [ %306, %305 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %337) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %338

338:                                              ; preds = %299, %336
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #15
  br label %466

339:                                              ; preds = %289, %403
  %340 = phi %"class.blink::Member.1324"* [ %404, %403 ], [ %292, %289 ]
  %341 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %340, i64 0, i32 0, i32 0
  %342 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %341, align 8
  %343 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %342, i64 0, i32 2
  %344 = load i8, i8* %343, align 1
  %345 = icmp eq i8 %344, 55
  br i1 %345, label %403, label %346

346:                                              ; preds = %339
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %46) #15
  call void @_ZN5blink21StyleBuilderConverter20ConvertGridTrackSizeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridTrackSize"* nonnull sret %16, %"class.blink::StyleResolverState"* dereferenceable(600) %9, %"class.blink::CSSValue"* dereferenceable(3) %342)
  %347 = load i32, i32* %45, align 4
  %348 = load i32, i32* %44, align 8
  %349 = icmp eq i32 %347, %348
  br i1 %349, label %389, label %350, !prof !21

350:                                              ; preds = %346
  %351 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %352 = zext i32 %347 to i64
  %353 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %351, i64 %352, i32 0
  %354 = load i32, i32* %47, align 8
  store i32 %354, i32* %353, align 8
  %355 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %351, i64 %352, i32 2
  %356 = bitcast %"class.blink::GridLength"* %355 to i64*
  %357 = load i64, i64* %49, align 8
  store i64 %357, i64* %356, align 4
  %358 = and i64 %357, 280375465082880
  %359 = icmp eq i64 %358, 8796093022208
  br i1 %359, label %360, label %362

360:                                              ; preds = %350
  %361 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %355, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %361) #15
  br label %362

362:                                              ; preds = %360, %350
  %363 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %351, i64 %352, i32 2, i32 1
  %364 = bitcast double* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %364, i8* align 8 %51, i64 12, i1 false) #15
  %365 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %351, i64 %352, i32 3
  %366 = bitcast %"class.blink::GridLength"* %365 to i64*
  %367 = load i64, i64* %53, align 8
  store i64 %367, i64* %366, align 4
  %368 = and i64 %367, 280375465082880
  %369 = icmp eq i64 %368, 8796093022208
  br i1 %369, label %370, label %372

370:                                              ; preds = %362
  %371 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %365, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %371) #15
  br label %372

372:                                              ; preds = %370, %362
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %351, i64 %352, i32 3, i32 1
  %374 = bitcast double* %373 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %374, i8* align 8 %55, i64 12, i1 false) #15
  %375 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %351, i64 %352, i32 4
  %376 = bitcast %"class.blink::GridLength"* %375 to i64*
  %377 = load i64, i64* %57, align 8
  store i64 %377, i64* %376, align 4
  %378 = and i64 %377, 280375465082880
  %379 = icmp eq i64 %378, 8796093022208
  br i1 %379, label %380, label %382

380:                                              ; preds = %372
  %381 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %375, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %381) #15
  br label %382

382:                                              ; preds = %380, %372
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %351, i64 %352, i32 4, i32 1
  %384 = bitcast double* %383 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %384, i8* align 8 %59, i64 12, i1 false) #15
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %351, i64 %352, i32 5
  %386 = load i16, i16* %60, align 8
  store i16 %386, i16* %385, align 8
  %387 = load i32, i32* %45, align 4
  %388 = add i32 %387, 1
  store i32 %388, i32* %45, align 4
  br label %390

389:                                              ; preds = %346
  call void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.476"* nonnull %15, %"class.blink::GridTrackSize"* nonnull dereferenceable(88) %16) #15
  br label %390

390:                                              ; preds = %382, %389
  %391 = load i8, i8* %61, align 1
  %392 = icmp eq i8 %391, 8
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %62) #15
  br label %394

394:                                              ; preds = %393, %390
  %395 = load i8, i8* %63, align 1
  %396 = icmp eq i8 %395, 8
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %64) #15
  br label %398

398:                                              ; preds = %397, %394
  %399 = load i8, i8* %65, align 1
  %400 = icmp eq i8 %399, 8
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %402

402:                                              ; preds = %398, %401
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %46) #15
  br label %403

403:                                              ; preds = %402, %339
  %404 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %340, i64 1
  %405 = icmp eq %"class.blink::Member.1324"* %404, %297
  br i1 %405, label %299, label %339

406:                                              ; preds = %116, %111
  call fastcc void @"_ZZN5blink21StyleBuilderConverter20ConvertGridTrackListERKNS_8CSSValueERNS_13GridTrackListERN3WTF7HashMapINS6_6StringENS6_6VectorImLj0ENS6_18PartitionAllocatorEEENS6_10StringHashENS6_10HashTraitsIS8_EENSD_ISB_EESA_EERNS7_ImNS9_IS8_Lj0ESA_EENS6_7IntHashImEENS6_29UnsignedWithZeroKeyHashTraitsImEENSD_ISI_EESA_EERNS9_INS_13GridTrackSizeELj0ESA_EESH_SP_RmRNS_14AutoRepeatTypeERNS_18StyleResolverStateEENK3$_0clES3_"(%class.anon* nonnull %12, %"class.blink::CSSValue"* dereferenceable(3) %114)
  %407 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !20
  %408 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %409 = or i8 %408, %407
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %466, label %411

411:                                              ; preds = %406
  %412 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %114, i64 0, i32 2
  %413 = load i8, i8* %412, align 1
  %414 = icmp eq i8 %413, 55
  br i1 %414, label %466, label %415

415:                                              ; preds = %411
  %416 = call dereferenceable(40) %"class.blink::NGGridTrackList"* @_ZN5blink13GridTrackList11NGTrackListEv(%"class.blink::GridTrackList"* %1) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #15
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %99) #15
  call void @_ZN5blink21StyleBuilderConverter20ConvertGridTrackSizeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridTrackSize"* nonnull sret %100, %"class.blink::StyleResolverState"* dereferenceable(600) %9, %"class.blink::CSSValue"* dereferenceable(3) %114)
  call void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEEC2ESt16initializer_listIS2_E(%"class.WTF::Vector.476"* nonnull %17, %"class.blink::GridTrackSize"* nonnull %100, i64 1)
  %417 = call zeroext i1 @_ZN5blink15NGGridTrackList11AddRepeaterERKN3WTF6VectorINS_13GridTrackSizeELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::NGGridTrackList"* %416, %"class.WTF::Vector.476"* nonnull dereferenceable(16) %17, i32 1) #15
  %418 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %101, align 8
  %419 = icmp eq %"class.blink::GridTrackSize"* %418, null
  br i1 %419, label %453, label %420, !prof !49

420:                                              ; preds = %415
  %421 = bitcast %"class.blink::GridTrackSize"* %418 to i8*
  %422 = load i32, i32* %102, align 4
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %451, label %424, !prof !21

424:                                              ; preds = %420
  %425 = zext i32 %422 to i64
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %418, i64 %425
  br label %427

427:                                              ; preds = %446, %424
  %428 = phi %"class.blink::GridTrackSize"* [ %447, %446 ], [ %418, %424 ]
  %429 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %428, i64 0, i32 4, i32 0, i32 2
  %430 = load i8, i8* %429, align 1
  %431 = icmp eq i8 %430, 8
  br i1 %431, label %432, label %434

432:                                              ; preds = %427
  %433 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %428, i64 0, i32 4, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %433) #15
  br label %434

434:                                              ; preds = %432, %427
  %435 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %428, i64 0, i32 3, i32 0, i32 2
  %436 = load i8, i8* %435, align 1
  %437 = icmp eq i8 %436, 8
  br i1 %437, label %438, label %440

438:                                              ; preds = %434
  %439 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %428, i64 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %439) #15
  br label %440

440:                                              ; preds = %438, %434
  %441 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %428, i64 0, i32 2, i32 0, i32 2
  %442 = load i8, i8* %441, align 1
  %443 = icmp eq i8 %442, 8
  br i1 %443, label %444, label %446

444:                                              ; preds = %440
  %445 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %428, i64 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %445) #15
  br label %446

446:                                              ; preds = %444, %440
  %447 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %428, i64 1
  %448 = icmp eq %"class.blink::GridTrackSize"* %447, %426
  br i1 %448, label %449, label %427

449:                                              ; preds = %446
  store i32 0, i32* %102, align 4
  %450 = load i8*, i8** %103, align 8
  br label %451

451:                                              ; preds = %449, %420
  %452 = phi i8* [ %450, %449 ], [ %421, %420 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %452) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %101, align 8
  br label %453

453:                                              ; preds = %415, %451
  %454 = load i8, i8* %104, align 1
  %455 = icmp eq i8 %454, 8
  br i1 %455, label %456, label %457

456:                                              ; preds = %453
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #15
  br label %457

457:                                              ; preds = %456, %453
  %458 = load i8, i8* %106, align 1
  %459 = icmp eq i8 %458, 8
  br i1 %459, label %460, label %461

460:                                              ; preds = %457
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %107) #15
  br label %461

461:                                              ; preds = %460, %457
  %462 = load i8, i8* %108, align 1
  %463 = icmp eq i8 %462, 8
  br i1 %463, label %464, label %465

464:                                              ; preds = %461
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #15
  br label %465

465:                                              ; preds = %461, %464
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %99) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #15
  br label %466

466:                                              ; preds = %406, %268, %411, %465, %338, %257
  %467 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %112, i64 1
  %468 = icmp eq %"class.blink::Member.1324"* %467, %39
  br i1 %468, label %110, label %111

469:                                              ; preds = %10, %110
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL24ConvertGridLineNamesListERKNS_8CSSValueEmRN3WTF7HashMapINS3_6StringENS3_6VectorImLj0ENS3_18PartitionAllocatorEEENS3_10StringHashENS3_10HashTraitsIS5_EENSA_IS8_EES7_EERNS4_ImNS6_IS5_Lj0ES7_EENS3_7IntHashImEENS3_29UnsignedWithZeroKeyHashTraitsImEENSA_ISF_EES7_EE(%"class.blink::CSSValue"* nocapture readonly dereferenceable(3), i64, %"class.WTF::HashMap.543"* dereferenceable(24), %"class.WTF::HashMap.553"* dereferenceable(24)) unnamed_addr #2 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::Vector.548", align 8
  %8 = alloca %"class.WTF::Vector.558", align 8
  store i64 %1, i64* %5, align 8
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.blink::Member.1324"**
  %11 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %11, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.WTF::String"* %6 to i8*
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::Vector.548"* %7 to i8*
  %22 = getelementptr inbounds %"class.WTF::HashMap.543", %"class.WTF::HashMap.543"* %2, i64 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %7, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %7, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.WTF::Vector.558"* %8 to i8*
  %26 = getelementptr inbounds %"class.WTF::HashMap.553", %"class.WTF::HashMap.553"* %3, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %8, i64 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.WTF::Vector.558"* %8 to i8**
  br label %31

30:                                               ; preds = %199, %4
  ret void

31:                                               ; preds = %18, %199
  %32 = phi %"class.blink::Member.1324"* [ %11, %18 ], [ %200, %199 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %20, align 8
  %33 = bitcast %"class.blink::Member.1324"* %32 to %"class.blink::CSSCustomIdentValue"**
  %34 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %34, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %71, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #15
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !21

52:                                               ; preds = %43
  call void @llvm.trap() #15
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %38, %53
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %20, align 8
  %56 = load atomic i32, i32* %39 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %72

61:                                               ; preds = %55
  %62 = zext i32 %60 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #15
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !21

68:                                               ; preds = %61
  call void @llvm.trap() #15
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %59, align 4
  br label %72

71:                                               ; preds = %31
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  br label %84

72:                                               ; preds = %55, %69
  %73 = phi i32 [ %70, %69 ], [ %60, %55 ]
  %74 = load atomic i32, i32* %39 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %79 = add i32 %73, -1
  store i32 %79, i32* %78, align 4
  br label %80

80:                                               ; preds = %77, %72
  %81 = phi i32 [ %79, %77 ], [ %73, %72 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #15
  br label %84

84:                                               ; preds = %71, %80, %83
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #15
  %85 = call { %"struct.WTF::KeyValuePair.547"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EERS1_S5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_(%"class.WTF::HashTable.544"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::Vector.548"* nonnull dereferenceable(16) %7) #15
  %86 = extractvalue { %"struct.WTF::KeyValuePair.547"*, i8 } %85, 0
  %87 = load i64*, i64** %23, align 8
  %88 = icmp eq i64* %87, null
  %89 = bitcast i64* %87 to i8*
  br i1 %88, label %95, label %90, !prof !49

90:                                               ; preds = %84
  %91 = load i32, i32* %24, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93, !prof !21

93:                                               ; preds = %90
  store i32 0, i32* %24, align 4
  br label %94

94:                                               ; preds = %93, %90
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %89) #15
  store i64* null, i64** %23, align 8
  br label %95

95:                                               ; preds = %84, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %86, i64 0, i32 1
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %86, i64 0, i32 1, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %86, i64 0, i32 1, i32 0, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %110, label %102, !prof !21

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %96, i64 0, i32 0, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = zext i32 %98 to i64
  %106 = getelementptr inbounds i64, i64* %104, i64 %105
  %107 = load i64, i64* %5, align 8
  store i64 %107, i64* %106, align 8
  %108 = load i32, i32* %97, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %97, align 4
  br label %111

110:                                              ; preds = %95
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.548"* %96, i64* nonnull dereferenceable(8) %5) #15
  br label %111

111:                                              ; preds = %102, %110
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #15
  %112 = call { %"struct.WTF::KeyValuePair.557"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E6insertINS_17HashMapTranslatorISF_S9_S4_EERmS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.554"* %26, i64* nonnull dereferenceable(8) %5, %"class.WTF::Vector.558"* nonnull dereferenceable(16) %8) #15
  %113 = extractvalue { %"struct.WTF::KeyValuePair.557"*, i8 } %112, 0
  %114 = load %"class.WTF::String"*, %"class.WTF::String"** %27, align 8
  %115 = icmp eq %"class.WTF::String"* %114, null
  br i1 %115, label %148, label %116, !prof !49

116:                                              ; preds = %111
  %117 = bitcast %"class.WTF::String"* %114 to i8*
  %118 = load i32, i32* %28, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %146, label %120, !prof !21

120:                                              ; preds = %116
  %121 = zext i32 %118 to i64
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 %121
  br label %123

123:                                              ; preds = %141, %120
  %124 = phi %"class.WTF::String"* [ %142, %141 ], [ %114, %120 ]
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #15
  br label %141

141:                                              ; preds = %140, %137, %123
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 1
  %143 = icmp eq %"class.WTF::String"* %142, %122
  br i1 %143, label %144, label %123

144:                                              ; preds = %141
  store i32 0, i32* %28, align 4
  %145 = load i8*, i8** %29, align 8
  br label %146

146:                                              ; preds = %144, %116
  %147 = phi i8* [ %145, %144 ], [ %117, %116 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %147) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %27, align 8
  br label %148

148:                                              ; preds = %111, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #15
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %113, i64 0, i32 1
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %113, i64 0, i32 1, i32 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %113, i64 0, i32 1, i32 0, i32 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %151, %153
  br i1 %154, label %182, label %155, !prof !21

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %149, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::String"*, %"class.WTF::String"** %156, align 8
  %158 = zext i32 %151 to i64
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 %158, i32 0, i32 0
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %160, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %161, label %179, label %162

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %179

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i33
  %171 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #15
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %177, !prof !21

176:                                              ; preds = %167
  call void @llvm.trap() #15
  unreachable

177:                                              ; preds = %167
  %178 = trunc i33 %173 to i32
  store i32 %178, i32* %168, align 4
  br label %179

179:                                              ; preds = %177, %162, %155
  %180 = load i32, i32* %150, align 4
  %181 = add i32 %180, 1
  store i32 %181, i32* %150, align 4
  br label %183

182:                                              ; preds = %148
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.558"* %149, %"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  br label %183

183:                                              ; preds = %179, %182
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #15
  br label %199

199:                                              ; preds = %183, %195, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %200 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %32, i64 1
  %201 = icmp eq %"class.blink::Member.1324"* %200, %16
  br i1 %201, label %30, label %31
}

declare dereferenceable(40) %"class.blink::NGGridTrackList"* @_ZN5blink13GridTrackList11NGTrackListEv(%"class.blink::GridTrackList"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink15NGGridTrackList15AddAutoRepeaterERKN3WTF6VectorINS_13GridTrackSizeELj0ENS1_18PartitionAllocatorEEENS_19NGGridTrackRepeater10RepeatTypeE(%"class.blink::NGGridTrackList"*, %"class.WTF::Vector.476"* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN5blink21StyleBuilderConverter20ConvertGridTrackListERKNS_8CSSValueERNS_13GridTrackListERN3WTF7HashMapINS6_6StringENS6_6VectorImLj0ENS6_18PartitionAllocatorEEENS6_10StringHashENS6_10HashTraitsIS8_EENSD_ISB_EESA_EERNS7_ImNS9_IS8_Lj0ESA_EENS6_7IntHashImEENS6_29UnsignedWithZeroKeyHashTraitsImEENSD_ISI_EESA_EERNS9_INS_13GridTrackSizeELj0ESA_EESH_SP_RmRNS_14AutoRepeatTypeERNS_18StyleResolverStateEENK3$_0clES3_"(%class.anon* nocapture readonly, %"class.blink::CSSValue"* dereferenceable(3)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::GridTrackSize", align 8
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 55
  %7 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  br i1 %6, label %10, label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %12 = load %"class.WTF::HashMap.543"*, %"class.WTF::HashMap.543"** %11, align 8
  %13 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %14 = load %"class.WTF::HashMap.553"*, %"class.WTF::HashMap.553"** %13, align 8
  tail call fastcc void @_ZN5blinkL24ConvertGridLineNamesListERKNS_8CSSValueEmRN3WTF7HashMapINS3_6StringENS3_6VectorImLj0ENS3_18PartitionAllocatorEEENS3_10StringHashENS3_10HashTraitsIS5_EENSA_IS8_EES7_EERNS4_ImNS6_IS5_Lj0ES7_EENS3_7IntHashImEENS3_29UnsignedWithZeroKeyHashTraitsImEENSA_ISF_EES7_EE(%"class.blink::CSSValue"* dereferenceable(3) %1, i64 %9, %"class.WTF::HashMap.543"* dereferenceable(24) %12, %"class.WTF::HashMap.553"* dereferenceable(24) %14)
  br label %102

15:                                               ; preds = %2
  %16 = add i64 %9, 1
  store i64 %16, i64* %8, align 8
  %17 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %18 = load %"class.blink::GridTrackList"*, %"class.blink::GridTrackList"** %17, align 8
  %19 = tail call dereferenceable(16) %"class.WTF::Vector.476"* @_ZN5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %18) #15
  %20 = bitcast %"class.blink::GridTrackSize"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %20) #15
  %21 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %22 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %21, align 8
  call void @_ZN5blink21StyleBuilderConverter20ConvertGridTrackSizeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::GridTrackSize"* nonnull sret %3, %"class.blink::StyleResolverState"* dereferenceable(600) %22, %"class.blink::CSSValue"* dereferenceable(3) %1)
  %23 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %19, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %19, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %82, label %28, !prof !21

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %19, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %29, align 8
  %31 = zext i32 %24 to i64
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %30, i64 %31, i32 0
  %33 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %30, i64 %31, i32 2
  %36 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 2
  %37 = bitcast %"class.blink::GridLength"* %36 to i64*
  %38 = bitcast %"class.blink::GridLength"* %35 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 4
  %40 = and i64 %39, 280375465082880
  %41 = icmp eq i64 %40, 8796093022208
  br i1 %41, label %42, label %44

42:                                               ; preds = %28
  %43 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %35, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %43) #15
  br label %44

44:                                               ; preds = %42, %28
  %45 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %30, i64 %31, i32 2, i32 1
  %46 = bitcast double* %45 to i8*
  %47 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 2, i32 1
  %48 = bitcast double* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 12, i1 false) #15
  %49 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %30, i64 %31, i32 3
  %50 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 3
  %51 = bitcast %"class.blink::GridLength"* %50 to i64*
  %52 = bitcast %"class.blink::GridLength"* %49 to i64*
  %53 = load i64, i64* %51, align 8
  store i64 %53, i64* %52, align 4
  %54 = and i64 %53, 280375465082880
  %55 = icmp eq i64 %54, 8796093022208
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %49, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %57) #15
  br label %58

58:                                               ; preds = %56, %44
  %59 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %30, i64 %31, i32 3, i32 1
  %60 = bitcast double* %59 to i8*
  %61 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 3, i32 1
  %62 = bitcast double* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %62, i64 12, i1 false) #15
  %63 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %30, i64 %31, i32 4
  %64 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 4
  %65 = bitcast %"class.blink::GridLength"* %64 to i64*
  %66 = bitcast %"class.blink::GridLength"* %63 to i64*
  %67 = load i64, i64* %65, align 8
  store i64 %67, i64* %66, align 4
  %68 = and i64 %67, 280375465082880
  %69 = icmp eq i64 %68, 8796093022208
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %63, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %71) #15
  br label %72

72:                                               ; preds = %70, %58
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %30, i64 %31, i32 4, i32 1
  %74 = bitcast double* %73 to i8*
  %75 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 4, i32 1
  %76 = bitcast double* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %76, i64 12, i1 false) #15
  %77 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %30, i64 %31, i32 5
  %78 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 5
  %79 = load i16, i16* %78, align 8
  store i16 %79, i16* %77, align 8
  %80 = load i32, i32* %23, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %23, align 4
  br label %83

82:                                               ; preds = %15
  call void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.476"* %19, %"class.blink::GridTrackSize"* nonnull dereferenceable(88) %3) #15
  br label %83

83:                                               ; preds = %72, %82
  %84 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 4, i32 0, i32 2
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, 8
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 4, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %88) #15
  br label %89

89:                                               ; preds = %87, %83
  %90 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 3, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #15
  br label %95

95:                                               ; preds = %93, %89
  %96 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 2, i32 0, i32 2
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 8
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %3, i64 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %100) #15
  br label %101

101:                                              ; preds = %95, %99
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %20) #15
  br label %102

102:                                              ; preds = %101, %10
  ret void
}

declare zeroext i1 @_ZN5blink15NGGridTrackList11AddRepeaterERKN3WTF6VectorINS_13GridTrackSizeELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::NGGridTrackList"*, %"class.WTF::Vector.476"* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEEC2ESt16initializer_listIS2_E(%"class.WTF::Vector.476"*, %"class.blink::GridTrackSize"*, i64) unnamed_addr #2 comdat align 2 {
  %4 = icmp ult i64 %2, 4294967296
  br i1 %4, label %6, label %5, !prof !49

5:                                                ; preds = %3
  tail call void @llvm.trap() #15
  unreachable

6:                                                ; preds = %3
  %7 = trunc i64 %2 to i32
  %8 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = and i64 %2, 4294967295
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13GridTrackSizeEEEmm(i64 %12) #15
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13GridTrackSizeEEEPKcv, i64 0, i64 0)) #15
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.476"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = udiv i64 %13, 88
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = bitcast i8* %14 to %"class.blink::GridTrackSize"*
  br label %20

20:                                               ; preds = %6, %11
  %21 = phi %"class.blink::GridTrackSize"* [ null, %6 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %7, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 %2
  %24 = icmp eq i64 %2, 0
  br i1 %24, label %79, label %25

25:                                               ; preds = %20, %68
  %26 = phi %"class.blink::GridTrackSize"* [ %76, %68 ], [ %21, %20 ]
  %27 = phi %"class.blink::GridTrackSize"* [ %77, %68 ], [ %1, %20 ]
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %28, align 8
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 0, i32 2
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 0, i32 2
  %33 = bitcast %"class.blink::GridLength"* %32 to i64*
  %34 = bitcast %"class.blink::GridLength"* %31 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 4
  %36 = and i64 %35, 280375465082880
  %37 = icmp eq i64 %36, 8796093022208
  br i1 %37, label %38, label %40

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %31, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %39) #15
  br label %40

40:                                               ; preds = %38, %25
  %41 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 0, i32 2, i32 1
  %42 = bitcast double* %41 to i8*
  %43 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 0, i32 2, i32 1
  %44 = bitcast double* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %44, i64 12, i1 false) #15
  %45 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 0, i32 3
  %46 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 0, i32 3
  %47 = bitcast %"class.blink::GridLength"* %46 to i64*
  %48 = bitcast %"class.blink::GridLength"* %45 to i64*
  %49 = load i64, i64* %47, align 4
  store i64 %49, i64* %48, align 4
  %50 = and i64 %49, 280375465082880
  %51 = icmp eq i64 %50, 8796093022208
  br i1 %51, label %52, label %54

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %45, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %53) #15
  br label %54

54:                                               ; preds = %52, %40
  %55 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 0, i32 3, i32 1
  %56 = bitcast double* %55 to i8*
  %57 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 0, i32 3, i32 1
  %58 = bitcast double* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 12, i1 false) #15
  %59 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 0, i32 4
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 0, i32 4
  %61 = bitcast %"class.blink::GridLength"* %60 to i64*
  %62 = bitcast %"class.blink::GridLength"* %59 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 4
  %64 = and i64 %63, 280375465082880
  %65 = icmp eq i64 %64, 8796093022208
  br i1 %65, label %66, label %68

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %59, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %67) #15
  br label %68

68:                                               ; preds = %66, %54
  %69 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 0, i32 4, i32 1
  %70 = bitcast double* %69 to i8*
  %71 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 0, i32 4, i32 1
  %72 = bitcast double* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %72, i64 12, i1 false) #15
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 0, i32 5
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 0, i32 5
  %75 = load i16, i16* %74, align 8
  store i16 %75, i16* %73, align 8
  %76 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %26, i64 1
  %77 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %27, i64 1
  %78 = icmp eq %"class.blink::GridTrackSize"* %77, %23
  br i1 %78, label %79, label %25

79:                                               ; preds = %68, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter40CreateImplicitNamedGridLinesFromGridAreaERKN3WTF7HashMapINS1_6StringENS_8GridAreaENS1_10StringHashENS1_10HashTraitsIS3_EENS6_IS4_EENS1_18PartitionAllocatorEEERNS2_IS3_NS1_6VectorImLj0ES9_EES5_S7_NS6_ISE_EES9_EENS_24GridTrackSizingDirectionE(%"class.WTF::HashMap.563"* nocapture readonly dereferenceable(24), %"class.WTF::HashMap.543"* dereferenceable(24), i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.std::__1::__less.2706", align 1
  %5 = alloca %"struct.std::__1::__less.2706", align 1
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::Vector.548", align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::Vector.548", align 8
  %11 = alloca i64, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.563", %"class.WTF::HashMap.563"* %0, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashMap.563", %"class.WTF::HashMap.563"* %0, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.567"*, %"struct.WTF::KeyValuePair.567"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::HashMap.563", %"class.WTF::HashMap.563"* %0, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.567", %"struct.WTF::KeyValuePair.567"* %16, i64 %19
  br i1 %14, label %52, label %21

21:                                               ; preds = %3
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %21, %27
  %24 = phi %"struct.WTF::KeyValuePair.567"* [ %28, %27 ], [ %16, %21 ]
  %25 = bitcast %"struct.WTF::KeyValuePair.567"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  switch i64 %26, label %30 [
    i64 -1, label %27
    i64 0, label %27
  ]

27:                                               ; preds = %23, %23
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.567", %"struct.WTF::KeyValuePair.567"* %24, i64 1
  %29 = icmp eq %"struct.WTF::KeyValuePair.567"* %28, %20
  br i1 %29, label %52, label %23

30:                                               ; preds = %23, %21
  %31 = phi %"struct.WTF::KeyValuePair.567"* [ %16, %21 ], [ %24, %23 ]
  %32 = icmp eq %"struct.WTF::KeyValuePair.567"* %31, %20
  br i1 %32, label %52, label %33

33:                                               ; preds = %30
  %34 = icmp eq i32 %2, 1
  %35 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  %38 = bitcast %"class.WTF::Vector.548"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::HashMap.543", %"class.WTF::HashMap.543"* %1, i64 0, i32 0
  %40 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %7, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %7, i64 0, i32 0, i32 0, i32 2
  %42 = bitcast i64* %8 to i8*
  %43 = getelementptr inbounds %"struct.std::__1::__less.2706", %"struct.std::__1::__less.2706"* %4, i64 0, i32 0
  %44 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  %45 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  %47 = bitcast %"class.WTF::Vector.548"* %10 to i8*
  %48 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %10, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %10, i64 0, i32 0, i32 0, i32 2
  %50 = bitcast i64* %11 to i8*
  %51 = getelementptr inbounds %"struct.std::__1::__less.2706", %"struct.std::__1::__less.2706"* %5, i64 0, i32 0
  br label %53

52:                                               ; preds = %27, %249, %264, %261, %3, %30
  ret void

53:                                               ; preds = %33, %264
  %54 = phi %"struct.WTF::KeyValuePair.567"* [ %31, %33 ], [ %258, %264 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.567", %"struct.WTF::KeyValuePair.567"* %54, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.567", %"struct.WTF::KeyValuePair.567"* %54, i64 0, i32 1, i32 0
  %57 = select i1 %34, %"struct.blink::GridSpan"* %55, %"struct.blink::GridSpan"* %56
  %58 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %57, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #15
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.567", %"struct.WTF::KeyValuePair.567"* %54, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %109, label %65

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %82

72:                                               ; preds = %65
  %73 = zext i32 %71 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #15
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !21

79:                                               ; preds = %72
  call void @llvm.trap() #15
  unreachable

80:                                               ; preds = %72
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %70, align 4
  br label %82

82:                                               ; preds = %65, %80
  %83 = phi i32 [ %81, %80 ], [ %71, %65 ]
  %84 = load atomic i32, i32* %66 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  br i1 %86, label %88, label %98

88:                                               ; preds = %82
  %89 = zext i32 %83 to i33
  %90 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #15
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !21

95:                                               ; preds = %88
  call void @llvm.trap() #15
  unreachable

96:                                               ; preds = %88
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %87, align 4
  br label %98

98:                                               ; preds = %96, %82
  %99 = phi i32 [ %97, %96 ], [ %83, %82 ]
  %100 = load atomic i32, i32* %66 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = add i32 %99, -1
  store i32 %104, i32* %87, align 4
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi i32 [ %104, %103 ], [ %99, %98 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #15
  br label %109

109:                                              ; preds = %53, %105, %108
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %36, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #15
  %110 = call { %"struct.WTF::KeyValuePair.547"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EENS_12StringAppendIS1_PKcEES5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_(%"class.WTF::HashTable.544"* %39, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %6, %"class.WTF::Vector.548"* nonnull dereferenceable(16) %7) #15
  %111 = extractvalue { %"struct.WTF::KeyValuePair.547"*, i8 } %110, 0
  %112 = load i64*, i64** %40, align 8
  %113 = icmp eq i64* %112, null
  %114 = bitcast i64* %112 to i8*
  br i1 %113, label %120, label %115, !prof !49

115:                                              ; preds = %109
  %116 = load i32, i32* %41, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %119, label %118, !prof !21

118:                                              ; preds = %115
  store i32 0, i32* %41, align 4
  br label %119

119:                                              ; preds = %118, %115
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %114) #15
  store i64* null, i64** %40, align 8
  br label %120

120:                                              ; preds = %109, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #15
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #15
  br label %136

136:                                              ; preds = %120, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #15
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %111, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #15
  %138 = sext i32 %59 to i64
  store i64 %138, i64* %8, align 8
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %111, i64 0, i32 1, i32 0, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %151, label %144, !prof !21

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %137, i64 0, i32 0, i32 0, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = zext i32 %140 to i64
  %148 = getelementptr inbounds i64, i64* %146, i64 %147
  store i64 %138, i64* %148, align 8
  %149 = load i32, i32* %139, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %139, align 4
  br label %153

151:                                              ; preds = %136
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseImEEvOT_(%"class.WTF::Vector.548"* %137, i64* nonnull dereferenceable(8) %8) #15
  %152 = load i32, i32* %139, align 4
  br label %153

153:                                              ; preds = %144, %151
  %154 = phi i32 [ %150, %144 ], [ %152, %151 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #15
  %155 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %137, i64 0, i32 0, i32 0, i32 0
  %156 = load i64*, i64** %155, align 8
  %157 = zext i32 %154 to i64
  %158 = getelementptr inbounds i64, i64* %156, i64 %157
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #15
  call void @_ZNSt3__16__sortIRNS_6__lessImmEEPmEEvT0_S5_T_(i64* %156, i64* %158, %"struct.std::__1::__less.2706"* nonnull dereferenceable(1) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %205, label %161

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %178

168:                                              ; preds = %161
  %169 = zext i32 %167 to i33
  %170 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %169, i33 1) #15
  %171 = extractvalue { i33, i1 } %170, 1
  %172 = extractvalue { i33, i1 } %170, 0
  %173 = icmp slt i33 %172, 0
  %174 = or i1 %171, %173
  br i1 %174, label %175, label %176, !prof !21

175:                                              ; preds = %168
  call void @llvm.trap() #15
  unreachable

176:                                              ; preds = %168
  %177 = trunc i33 %172 to i32
  store i32 %177, i32* %166, align 4
  br label %178

178:                                              ; preds = %161, %176
  %179 = phi i32 [ %177, %176 ], [ %167, %161 ]
  %180 = load atomic i32, i32* %162 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  br i1 %182, label %184, label %194

184:                                              ; preds = %178
  %185 = zext i32 %179 to i33
  %186 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %185, i33 1) #15
  %187 = extractvalue { i33, i1 } %186, 1
  %188 = extractvalue { i33, i1 } %186, 0
  %189 = icmp slt i33 %188, 0
  %190 = or i1 %187, %189
  br i1 %190, label %191, label %192, !prof !21

191:                                              ; preds = %184
  call void @llvm.trap() #15
  unreachable

192:                                              ; preds = %184
  %193 = trunc i33 %188 to i32
  store i32 %193, i32* %183, align 4
  br label %194

194:                                              ; preds = %192, %178
  %195 = phi i32 [ %193, %192 ], [ %179, %178 ]
  %196 = load atomic i32, i32* %162 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %194
  %200 = add i32 %195, -1
  store i32 %200, i32* %183, align 4
  br label %201

201:                                              ; preds = %199, %194
  %202 = phi i32 [ %200, %199 ], [ %195, %194 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #15
  br label %205

205:                                              ; preds = %153, %201, %204
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %45, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #15
  %206 = call { %"struct.WTF::KeyValuePair.547"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EENS_12StringAppendIS1_PKcEES5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_(%"class.WTF::HashTable.544"* %39, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %9, %"class.WTF::Vector.548"* nonnull dereferenceable(16) %10) #15
  %207 = extractvalue { %"struct.WTF::KeyValuePair.547"*, i8 } %206, 0
  %208 = load i64*, i64** %48, align 8
  %209 = icmp eq i64* %208, null
  %210 = bitcast i64* %208 to i8*
  br i1 %209, label %216, label %211, !prof !49

211:                                              ; preds = %205
  %212 = load i32, i32* %49, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %215, label %214, !prof !21

214:                                              ; preds = %211
  store i32 0, i32* %49, align 4
  br label %215

215:                                              ; preds = %214, %211
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %210) #15
  store i64* null, i64** %48, align 8
  br label %216

216:                                              ; preds = %205, %215
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #15
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #15
  br label %232

232:                                              ; preds = %216, %228, %231
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %207, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #15
  %234 = sext i32 %61 to i64
  store i64 %234, i64* %11, align 8
  %235 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %207, i64 0, i32 1, i32 0, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %238 = load i32, i32* %237, align 8
  %239 = icmp eq i32 %236, %238
  br i1 %239, label %247, label %240, !prof !21

240:                                              ; preds = %232
  %241 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %233, i64 0, i32 0, i32 0, i32 0
  %242 = load i64*, i64** %241, align 8
  %243 = zext i32 %236 to i64
  %244 = getelementptr inbounds i64, i64* %242, i64 %243
  store i64 %234, i64* %244, align 8
  %245 = load i32, i32* %235, align 4
  %246 = add i32 %245, 1
  store i32 %246, i32* %235, align 4
  br label %249

247:                                              ; preds = %232
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseImEEvOT_(%"class.WTF::Vector.548"* %233, i64* nonnull dereferenceable(8) %11) #15
  %248 = load i32, i32* %235, align 4
  br label %249

249:                                              ; preds = %240, %247
  %250 = phi i32 [ %246, %240 ], [ %248, %247 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #15
  %251 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %233, i64 0, i32 0, i32 0, i32 0
  %252 = load i64*, i64** %251, align 8
  %253 = zext i32 %250 to i64
  %254 = getelementptr inbounds i64, i64* %252, i64 %253
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %51) #15
  call void @_ZNSt3__16__sortIRNS_6__lessImmEEPmEEvT0_S5_T_(i64* %252, i64* %254, %"struct.std::__1::__less.2706"* nonnull dereferenceable(1) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %51) #15
  %255 = getelementptr inbounds %"struct.WTF::KeyValuePair.567", %"struct.WTF::KeyValuePair.567"* %54, i64 1
  %256 = icmp eq %"struct.WTF::KeyValuePair.567"* %255, %20
  br i1 %256, label %52, label %257

257:                                              ; preds = %249, %261
  %258 = phi %"struct.WTF::KeyValuePair.567"* [ %262, %261 ], [ %255, %249 ]
  %259 = bitcast %"struct.WTF::KeyValuePair.567"* %258 to i64*
  %260 = load i64, i64* %259, align 8
  switch i64 %260, label %264 [
    i64 -1, label %261
    i64 0, label %261
  ]

261:                                              ; preds = %257, %257
  %262 = getelementptr inbounds %"struct.WTF::KeyValuePair.567", %"struct.WTF::KeyValuePair.567"* %258, i64 1
  %263 = icmp eq %"struct.WTF::KeyValuePair.567"* %262, %20
  br i1 %263, label %52, label %257

264:                                              ; preds = %257
  %265 = icmp eq %"struct.WTF::KeyValuePair.567"* %258, %20
  br i1 %265, label %52, label %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter18ConvertBorderWidthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %15 [
    i32 500, label %12
    i32 71, label %13
    i32 499, label %14
  ]

12:                                               ; preds = %8
  br label %15

13:                                               ; preds = %8
  br label %15

14:                                               ; preds = %8
  br label %15

15:                                               ; preds = %8, %14, %13, %12
  %16 = phi double [ 0.000000e+00, %8 ], [ 5.000000e+00, %14 ], [ 3.000000e+00, %13 ], [ 1.000000e+00, %12 ]
  %17 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %18 = tail call double @_ZNK5blink25CSSToLengthConversionData20ZoomedComputedPixelsEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSToLengthConversionData"* %17, double %16, i32 5) #15
  br label %24

19:                                               ; preds = %2
  %20 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %21 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %22 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %20, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %21) #15
  %23 = fpext float %22 to double
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi double [ %18, %15 ], [ %23, %19 ]
  %26 = fcmp ogt double %25, 0.000000e+00
  %27 = fcmp olt double %25, 1.000000e+00
  %28 = and i1 %26, %27
  br i1 %28, label %38, label %29

29:                                               ; preds = %24
  %30 = fmul double %25, 6.400000e+01
  %31 = fcmp ult double %30, 0xC1E0000000000000
  %32 = fcmp ugt double %30, 0x41DFFFFFFFC00000
  %33 = fcmp ogt double %30, 0xC1E0000000000000
  %34 = select i1 %33, double %30, double 0xC1E0000000000000
  %35 = fptosi double %34 to i32
  %36 = select i1 %31, i32 0, i32 2147483647
  %37 = select i1 %32, i32 %36, i32 %35
  br label %38

38:                                               ; preds = %24, %29
  %39 = phi i32 [ %37, %29 ], [ 64, %24 ]
  ret i32 %39
}

declare double @_ZNK5blink25CSSToLengthConversionData20ZoomedComputedPixelsEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSToLengthConversionData"*, double, i32) local_unnamed_addr #3

declare float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter17ConvertLayoutUnitERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %4 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %5 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %3, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %4) #15
  %6 = fmul float %5, 6.400000e+01
  %7 = tail call float @llvm.floor.f32(float %6) #15
  %8 = fcmp ult float %7, 0xC1E0000000000000
  %9 = fcmp ugt float %7, 0x41DFFFFFE0000000
  %10 = fcmp ogt float %7, 0xC1E0000000000000
  %11 = select i1 %10, float %7, float 0xC1E0000000000000
  %12 = fptosi float %11 to i32
  %13 = select i1 %8, i32 0, i32 2147483647
  %14 = select i1 %9, i32 %13, i32 %12
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter16ConvertGapLengthERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.absl::optional.517"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 2
  %9 = icmp eq %"class.blink::CSSValue"* %2, null
  %10 = or i1 %9, %8
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 56
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.absl::optional.517", %"class.absl::optional.517"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 4
  br label %35

18:                                               ; preds = %3, %11
  %19 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %21 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %5, %"class.blink::CSSPrimitiveValue"* %20, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %21) #15
  %22 = getelementptr inbounds %"class.absl::optional.517", %"class.absl::optional.517"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.absl::optional.517", %"class.absl::optional.517"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %24 = bitcast %"class.blink::Length"* %23 to i64*
  %25 = load i64, i64* %4, align 8
  store i64 %25, i64* %24, align 4
  %26 = and i64 %25, 280375465082880
  %27 = icmp eq i64 %26, 8796093022208
  br i1 %27, label %28, label %29

28:                                               ; preds = %18
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %23) #15
  br label %29

29:                                               ; preds = %18, %28
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 8
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %34

34:                                               ; preds = %29, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  br label %35

35:                                               ; preds = %34, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter13ConvertLengthERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %5 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  tail call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSPrimitiveValue"* %4, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter21ConvertUnzoomedLengthERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::UnzoomedLength"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %9 = bitcast %"class.blink::CSSToLengthConversionData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #15
  call void @_ZNK5blink18StyleResolverState28UnzoomedLengthConversionDataEv(%"class.blink::CSSToLengthConversionData"* nonnull sret %6, %"class.blink::StyleResolverState"* %1) #15
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %5, %"class.blink::CSSPrimitiveValue"* %8, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %6) #15
  %10 = bitcast %"class.blink::UnzoomedLength"* %0 to i64*
  %11 = load i64, i64* %4, align 8
  store i64 %11, i64* %10, align 4
  %12 = and i64 %11, 280375465082880
  %13 = icmp eq i64 %12, 8796093022208
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::UnzoomedLength", %"class.blink::UnzoomedLength"* %0, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %15) #15
  br label %16

16:                                               ; preds = %3, %14
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %21

21:                                               ; preds = %16, %20
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

declare void @_ZNK5blink18StyleResolverState28UnzoomedLengthConversionDataEv(%"class.blink::CSSToLengthConversionData"* sret, %"class.blink::StyleResolverState"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21StyleBuilderConverter11ConvertZoomERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %8, label %39

8:                                                ; preds = %2
  %9 = icmp ugt i8 %4, 1
  %10 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %11 = or i1 %6, %9
  br i1 %11, label %39, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %10) #15
  br i1 %13, label %14, label %26

14:                                               ; preds = %12
  %15 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %10) #15
  %16 = fcmp ult double %15, 0x47EFFFFFE0000000
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = fcmp ole double %15, 0xC7EFFFFFE0000000
  %19 = select i1 %18, double 0xC7EFFFFFE0000000, double %15
  %20 = fptrunc double %19 to float
  br label %21

21:                                               ; preds = %14, %17
  %22 = phi float [ %20, %17 ], [ 0x47EFFFFFE0000000, %14 ]
  %23 = fcmp une float %22, 0.000000e+00
  %24 = fdiv float %22, 1.000000e+02
  %25 = select i1 %23, float %24, float 1.000000e+00
  br label %39

26:                                               ; preds = %12
  %27 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* nonnull %10) #15
  br i1 %27, label %28, label %39

28:                                               ; preds = %26
  %29 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %10) #15
  %30 = fcmp ult double %29, 0x47EFFFFFE0000000
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = fcmp ole double %29, 0xC7EFFFFFE0000000
  %33 = select i1 %32, double 0xC7EFFFFFE0000000, double %29
  %34 = fptrunc double %33 to float
  br label %35

35:                                               ; preds = %28, %31
  %36 = phi float [ %34, %31 ], [ 0x47EFFFFFE0000000, %28 ]
  %37 = fcmp une float %36, 0.000000e+00
  %38 = select i1 %37, float %36, float 1.000000e+00
  br label %39

39:                                               ; preds = %2, %21, %35, %26, %8
  %40 = phi float [ 1.000000e+00, %8 ], [ 1.000000e+00, %26 ], [ %25, %21 ], [ %38, %35 ], [ 1.000000e+00, %2 ]
  ret float %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter19ConvertLengthSizingERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 2
  %7 = icmp eq %"class.blink::CSSValue"* %2, null
  %8 = or i1 %7, %6
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %11 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  tail call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSPrimitiveValue"* %10, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %11) #15
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %38 [
    i32 538, label %16
    i32 534, label %16
    i32 539, label %21
    i32 535, label %21
    i32 536, label %26
    i32 537, label %31
    i32 540, label %31
    i32 405, label %36
  ]

16:                                               ; preds = %12, %12
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %17, align 4, !alias.scope !72
  %18 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %18, align 4, !alias.scope !72
  %19 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 3, i8* %19, align 1, !alias.scope !72
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %20, align 2, !alias.scope !72
  br label %40

21:                                               ; preds = %12, %12
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %22, align 4, !alias.scope !75
  %23 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %23, align 4, !alias.scope !75
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 4, i8* %24, align 1, !alias.scope !75
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %25, align 2, !alias.scope !75
  br label %40

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %27, align 4, !alias.scope !78
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %28, align 4, !alias.scope !78
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 6, i8* %29, align 1, !alias.scope !78
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %30, align 2, !alias.scope !78
  br label %40

31:                                               ; preds = %12, %12
  %32 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %32, align 4, !alias.scope !81
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %33, align 4, !alias.scope !81
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 7, i8* %34, align 1, !alias.scope !81
  %35 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %35, align 2, !alias.scope !81
  br label %40

36:                                               ; preds = %12
  %37 = bitcast %"class.blink::Length"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 7, i1 false) #15, !alias.scope !84
  br label %40

38:                                               ; preds = %12
  %39 = bitcast %"class.blink::Length"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 7, i1 false) #15
  br label %40

40:                                               ; preds = %38, %36, %31, %26, %21, %16, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter22ConvertLengthMaxSizingERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 2
  %7 = icmp eq %"class.blink::CSSValue"* %2, null
  %8 = or i1 %7, %6
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %14, label %19

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 4, !alias.scope !87
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %16, align 4, !alias.scope !87
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 12, i8* %17, align 1, !alias.scope !87
  %18 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %18, align 2, !alias.scope !87
  br label %20

19:                                               ; preds = %3, %9
  tail call void @_ZN5blink21StyleBuilderConverter19ConvertLengthSizingERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* sret %0, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %2)
  br label %20

20:                                               ; preds = %19, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21StyleBuilderConverter24ConvertLengthOrTabSpacesERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %4 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* %3) #15
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %3) #15
  %7 = fcmp ult double %6, 0x47EFFFFFE0000000
  br i1 %7, label %8, label %15

8:                                                ; preds = %5
  %9 = fcmp ole double %6, 0xC7EFFFFFE0000000
  %10 = select i1 %9, double 0xC7EFFFFFE0000000, double %6
  %11 = fptrunc double %10 to float
  br label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %14 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %3, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %13) #15
  br label %15

15:                                               ; preds = %8, %5, %12
  %16 = phi i64 [ 0, %12 ], [ 4294967296, %5 ], [ 4294967296, %8 ]
  %17 = phi float [ %14, %12 ], [ 0x47EFFFFFE0000000, %5 ], [ %11, %8 ]
  %18 = bitcast float %17 to i32
  %19 = zext i32 %18 to i64
  %20 = or i64 %16, %19
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter17ConvertLineHeightERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp ugt i8 %9, 1
  %11 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %12 = icmp eq %"class.blink::CSSValue"* %2, null
  %13 = or i1 %12, %10
  br i1 %13, label %149, label %14

14:                                               ; preds = %3
  %15 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"* nonnull %11) #15
  br i1 %15, label %16, label %41

16:                                               ; preds = %14
  %17 = bitcast %"class.blink::CSSToLengthConversionData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %19 = bitcast %"class.blink::ComputedStyle"** %18 to %"class.blink::ComputedStyleBase"**
  %20 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %19, align 8, !noalias !90
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %21, align 8, !noalias !90
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %23, align 8, !noalias !90
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %24, i64 0, i32 6
  %26 = load float, float* %25, align 8, !noalias !90
  %27 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 1
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8, !noalias !90
  %29 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %28) #15, !noalias !90
  %30 = icmp eq %"class.blink::LocalFrame"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %16
  %32 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %29, i64 0, i32 21
  %33 = load float, float* %32, align 4
  %34 = fmul float %26, %33
  br label %35

35:                                               ; preds = %16, %31
  %36 = phi float [ %34, %31 ], [ %26, %16 ]
  %37 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3, i32 0
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8, !noalias !93
  %39 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3, i32 1
  %40 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3, i32 2
  call void @_ZN5blink25CSSToLengthConversionDataC1EPKNS_13ComputedStyleERKNS0_9FontSizesERKNS0_12ViewportSizeEf(%"class.blink::CSSToLengthConversionData"* nonnull %4, %"class.blink::ComputedStyle"* %38, %"class.blink::CSSToLengthConversionData::FontSizes"* dereferenceable(24) %39, %"class.blink::CSSToLengthConversionData::ViewportSize"* dereferenceable(16) %40, float %36) #15
  call void @_ZNK5blink17CSSPrimitiveValue13ComputeLengthINS_6LengthEEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSPrimitiveValue"* nonnull %11, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #15
  br label %154

41:                                               ; preds = %14
  %42 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %11) #15
  br i1 %42, label %43, label %75

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %47, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %49, i64 0, i32 1, i32 0, i32 5
  %51 = load float, float* %50, align 4
  %52 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %11) #15
  %53 = fcmp ult double %52, 0x41DFFFFFFFC00000
  br i1 %53, label %54, label %59

54:                                               ; preds = %43
  %55 = fcmp ugt double %52, 0xC1E0000000000000
  br i1 %55, label %56, label %59

56:                                               ; preds = %54
  %57 = fptosi double %52 to i32
  %58 = sitofp i32 %57 to float
  br label %59

59:                                               ; preds = %43, %54, %56
  %60 = phi float [ %58, %56 ], [ 0x41E0000000000000, %43 ], [ 0xC1E0000000000000, %54 ]
  %61 = fmul float %51, %60
  %62 = fpext float %61 to double
  %63 = fdiv double %62, 1.000000e+02
  %64 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %64, align 4, !alias.scope !96
  %65 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 2, i8* %65, align 1, !alias.scope !96
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %66, align 2, !alias.scope !96
  %67 = fcmp ult double %63, 0x47EFFFFFE0000000
  br i1 %67, label %68, label %72

68:                                               ; preds = %59
  %69 = fcmp ole double %63, 0xC7EFFFFFE0000000
  %70 = select i1 %69, double 0xC7EFFFFFE0000000, double %63
  %71 = fptrunc double %70 to float
  br label %72

72:                                               ; preds = %59, %68
  %73 = phi float [ %71, %68 ], [ 0x47EFFFFFE0000000, %59 ]
  %74 = bitcast %"class.blink::Length"* %0 to float*
  store float %73, float* %74, align 4, !alias.scope !96
  br label %154

75:                                               ; preds = %41
  %76 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* nonnull %11) #15
  br i1 %76, label %77, label %91

77:                                               ; preds = %75
  %78 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %11) #15
  %79 = fmul double %78, 1.000000e+02
  %80 = fcmp ult double %79, 0x47EFFFFFE0000000
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = fcmp ole double %79, 0xC7EFFFFFE0000000
  %83 = select i1 %82, double 0xC7EFFFFFE0000000, double %79
  %84 = fptrunc double %83 to float
  br label %85

85:                                               ; preds = %77, %81
  %86 = phi float [ %84, %81 ], [ 0x47EFFFFFE0000000, %77 ]
  %87 = bitcast %"class.blink::Length"* %0 to float*
  store float %86, float* %87, align 4, !alias.scope !99
  %88 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %88, align 4, !alias.scope !99
  %89 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %89, align 1, !alias.scope !99
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %90, align 2, !alias.scope !99
  br label %154

91:                                               ; preds = %75
  %92 = load i8, i8* %8, align 1
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %94, label %149

94:                                               ; preds = %91
  %95 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #15
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %97 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSMathFunctionValue"*
  %98 = bitcast %"class.blink::CSSToLengthConversionData"* %7 to i8*
  store i64 -6148914691236517206, i64* %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %98) #15
  %99 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %100 = bitcast %"class.blink::ComputedStyle"** %99 to %"class.blink::ComputedStyleBase"**
  %101 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %100, align 8, !noalias !102
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %101, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %102, align 8, !noalias !102
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %103, i64 0, i32 2, i32 0, i32 0
  %105 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %104, align 8, !noalias !102
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %105, i64 0, i32 6
  %107 = load float, float* %106, align 8, !noalias !102
  %108 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 1
  %109 = load %"class.blink::Document"*, %"class.blink::Document"** %108, align 8, !noalias !102
  %110 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %109) #15, !noalias !102
  %111 = icmp eq %"class.blink::LocalFrame"* %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %94
  %113 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %110, i64 0, i32 21
  %114 = load float, float* %113, align 4
  %115 = fmul float %107, %114
  br label %116

116:                                              ; preds = %94, %112
  %117 = phi float [ %115, %112 ], [ %107, %94 ]
  %118 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3, i32 0
  %119 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %118, align 8, !noalias !105
  %120 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3, i32 1
  %121 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3, i32 2
  call void @_ZN5blink25CSSToLengthConversionDataC1EPKNS_13ComputedStyleERKNS0_9FontSizesERKNS0_12ViewportSizeEf(%"class.blink::CSSToLengthConversionData"* nonnull %7, %"class.blink::ComputedStyle"* %119, %"class.blink::CSSToLengthConversionData::FontSizes"* dereferenceable(24) %120, %"class.blink::CSSToLengthConversionData::ViewportSize"* dereferenceable(16) %121, float %117) #15
  %122 = call %"class.blink::CalculationValue"* @_ZNK5blink20CSSMathFunctionValue11ToCalcValueERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"* %97, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %7) #15
  call void @_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"* nonnull %6, %"class.blink::CalculationValue"* %122) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %98) #15
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %99, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %125, i64 0, i32 1, i32 0, i32 0
  %127 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %127, i64 0, i32 1, i32 0, i32 5
  %129 = load float, float* %128, align 4
  %130 = fmul float %129, 6.400000e+01
  %131 = fcmp ult float %130, 0xC1E0000000000000
  %132 = fcmp ugt float %130, 0x41DFFFFFE0000000
  %133 = fcmp ogt float %130, 0xC1E0000000000000
  %134 = select i1 %133, float %130, float 0xC1E0000000000000
  %135 = fptosi float %134 to i32
  %136 = select i1 %131, i32 0, i32 2147483647
  %137 = select i1 %132, i32 %136, i32 %135
  %138 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %6, i32 %137) #15
  %139 = bitcast %"class.blink::Length"* %0 to float*
  %140 = sitofp i32 %138 to float
  %141 = fmul float %140, 1.562500e-02
  store float %141, float* %139, align 4, !alias.scope !108
  %142 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %142, align 4, !alias.scope !108
  %143 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 2, i8* %143, align 1, !alias.scope !108
  %144 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %144, align 2, !alias.scope !108
  %145 = load i8, i8* %96, align 1
  %146 = icmp eq i8 %145, 8
  br i1 %146, label %147, label %148

147:                                              ; preds = %116
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #15
  br label %148

148:                                              ; preds = %116, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #15
  br label %154

149:                                              ; preds = %3, %91
  %150 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %150, align 4, !alias.scope !111
  %151 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %151, align 1, !alias.scope !111
  %152 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %152, align 2, !alias.scope !111
  %153 = bitcast %"class.blink::Length"* %0 to float*
  store float -1.000000e+02, float* %153, align 4, !alias.scope !111
  br label %154

154:                                              ; preds = %148, %85, %72, %35, %149
  ret void
}

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare void @_ZNK5blink17CSSPrimitiveValue13ComputeLengthINS_6LengthEEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret, %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #3

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare %"class.blink::CalculationValue"* @_ZNK5blink20CSSMathFunctionValue11ToCalcValueERKNS_25CSSToLengthConversionDataE(%"class.blink::CSSMathFunctionValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #3

declare void @_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"*, %"class.blink::CalculationValue"*) unnamed_addr #3

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21StyleBuilderConverter25ConvertNumberOrPercentageERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %4 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* %3) #15
  %5 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %3) #15
  %6 = fcmp ult double %5, 0x47EFFFFFE0000000
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = fcmp ole double %5, 0xC7EFFFFFE0000000
  %9 = select i1 %8, double 0xC7EFFFFFE0000000, double %5
  %10 = fptrunc double %9 to float
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi float [ %10, %7 ], [ 0x47EFFFFFE0000000, %2 ]
  %13 = fdiv float %12, 1.000000e+02
  %14 = select i1 %4, float %12, float %13
  ret float %14
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21StyleBuilderConverter12ConvertAlphaERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %4 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* %3) #15
  %5 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %3) #15
  %6 = fcmp ult double %5, 0x47EFFFFFE0000000
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = fcmp ole double %5, 0xC7EFFFFFE0000000
  %9 = select i1 %8, double 0xC7EFFFFFE0000000, double %5
  %10 = fptrunc double %9 to float
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi float [ %10, %7 ], [ 0x47EFFFFFE0000000, %2 ]
  %13 = fdiv float %12, 1.000000e+02
  %14 = select i1 %4, float %12, float %13
  %15 = fcmp ult float %14, 1.000000e+00
  %16 = fcmp ole float %14, 0.000000e+00
  %17 = select i1 %16, float 0.000000e+00, float %14
  %18 = select i1 %15, float %17, float 1.000000e+00
  ret float %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21StyleBuilderConverter19ConvertOffsetRotateERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %4 = bitcast i8* %3 to %"class.blink::Member.1324"**
  %5 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %5, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %48, label %12

12:                                               ; preds = %2, %43
  %13 = phi %"class.blink::Member.1324"* [ %46, %43 ], [ %5, %2 ]
  %14 = phi float [ %45, %43 ], [ 0.000000e+00, %2 ]
  %15 = phi i32 [ %44, %43 ], [ 1, %2 ]
  %16 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %13, i64 0, i32 0, i32 0
  %17 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %16, align 8
  %18 = icmp eq %"class.blink::CSSValue"* %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %17, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 2
  br i1 %22, label %23, label %33

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %17, i64 1, i32 1
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %33 [
    i32 405, label %43
    i32 510, label %27
  ]

27:                                               ; preds = %23
  %28 = fadd float %14, 1.800000e+02
  %29 = fcmp ult float %28, 0x47EFFFFFE0000000
  %30 = fcmp ole float %28, 0xC7EFFFFFE0000000
  %31 = select i1 %30, float 0xC7EFFFFFE0000000, float %28
  %32 = select i1 %29, float %31, float 0x47EFFFFFE0000000
  br label %43

33:                                               ; preds = %23, %19, %12
  %34 = bitcast %"class.blink::CSSValue"* %17 to %"class.blink::CSSPrimitiveValue"*
  %35 = fpext float %14 to double
  %36 = tail call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* %34) #15
  %37 = fadd double %36, %35
  %38 = fcmp ult double %37, 0x47EFFFFFE0000000
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = fcmp ole double %37, 0xC7EFFFFFE0000000
  %41 = select i1 %40, double 0xC7EFFFFFE0000000, double %37
  %42 = fptrunc double %41 to float
  br label %43

43:                                               ; preds = %39, %33, %27, %23
  %44 = phi i32 [ 0, %27 ], [ 0, %23 ], [ %15, %33 ], [ %15, %39 ]
  %45 = phi float [ %32, %27 ], [ %14, %23 ], [ 0x47EFFFFFE0000000, %33 ], [ %42, %39 ]
  %46 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %13, i64 1
  %47 = icmp eq %"class.blink::Member.1324"* %46, %10
  br i1 %47, label %48, label %12

48:                                               ; preds = %43, %2
  %49 = phi i32 [ 1, %2 ], [ %44, %43 ]
  %50 = phi float [ 0.000000e+00, %2 ], [ %45, %43 ]
  %51 = bitcast float %50 to i32
  %52 = zext i32 %49 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %51 to i64
  %55 = or i64 %53, %54
  ret i64 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21StyleBuilderConverter19ConvertOffsetRotateERKNS_8CSSValueE(%"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %3 = bitcast i8* %2 to %"class.blink::Member.1324"**
  %4 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %4, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %50, %1
  %12 = phi i32 [ 1, %1 ], [ %51, %50 ]
  %13 = phi float [ 0.000000e+00, %1 ], [ %52, %50 ]
  %14 = bitcast float %13 to i32
  %15 = zext i32 %12 to i64
  %16 = shl nuw i64 %15, 32
  %17 = zext i32 %14 to i64
  %18 = or i64 %16, %17
  ret i64 %18

19:                                               ; preds = %1, %50
  %20 = phi %"class.blink::Member.1324"* [ %53, %50 ], [ %4, %1 ]
  %21 = phi float [ %52, %50 ], [ 0.000000e+00, %1 ]
  %22 = phi i32 [ %51, %50 ], [ 1, %1 ]
  %23 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %20, i64 0, i32 0, i32 0
  %24 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %23, align 8
  %25 = icmp eq %"class.blink::CSSValue"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %24, i64 0, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %30, label %40

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %24, i64 1, i32 1
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  switch i32 %33, label %40 [
    i32 405, label %50
    i32 510, label %34
  ]

34:                                               ; preds = %30
  %35 = fadd float %21, 1.800000e+02
  %36 = fcmp ult float %35, 0x47EFFFFFE0000000
  %37 = fcmp ole float %35, 0xC7EFFFFFE0000000
  %38 = select i1 %37, float 0xC7EFFFFFE0000000, float %35
  %39 = select i1 %36, float %38, float 0x47EFFFFFE0000000
  br label %50

40:                                               ; preds = %30, %19, %26
  %41 = bitcast %"class.blink::CSSValue"* %24 to %"class.blink::CSSPrimitiveValue"*
  %42 = fpext float %21 to double
  %43 = tail call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* %41) #15
  %44 = fadd double %43, %42
  %45 = fcmp ult double %44, 0x47EFFFFFE0000000
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = fcmp ole double %44, 0xC7EFFFFFE0000000
  %48 = select i1 %47, double 0xC7EFFFFFE0000000, double %44
  %49 = fptrunc double %48 to float
  br label %50

50:                                               ; preds = %30, %46, %40, %34
  %51 = phi i32 [ 0, %34 ], [ 0, %30 ], [ %22, %40 ], [ %22, %46 ]
  %52 = phi float [ %39, %34 ], [ %21, %30 ], [ 0x47EFFFFFE0000000, %40 ], [ %49, %46 ]
  %53 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %20, i64 1
  %54 = icmp eq %"class.blink::Member.1324"* %53, %9
  br i1 %54, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter15ConvertPositionERNS_18StyleResolverStateERKNS_8CSSValueE(%"struct.blink::LengthPoint"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.blink::CSSValue"**
  %11 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %10, align 8
  call void @_ZN5blink21StyleBuilderConverter21ConvertPositionLengthILNS_10CSSValueIDE306ELS2_307EEENS_6LengthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* nonnull sret %5, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %11)
  %12 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 5, i32 1
  %14 = bitcast i8* %13 to %"class.blink::CSSValue"**
  %15 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %14, align 8
  call void @_ZN5blink21StyleBuilderConverter21ConvertPositionLengthILNS_10CSSValueIDE302ELS2_303EEENS_6LengthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* nonnull sret %7, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %15)
  %16 = bitcast %"struct.blink::LengthPoint"* %0 to i64*
  %17 = load i64, i64* %4, align 8
  store i64 %17, i64* %16, align 4
  %18 = and i64 %17, 280375465082880
  %19 = icmp eq i64 %18, 8796093022208
  br i1 %19, label %20, label %22

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %21) #15
  br label %22

22:                                               ; preds = %20, %3
  %23 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 1
  %24 = bitcast %"class.blink::Length"* %23 to i64*
  %25 = load i64, i64* %6, align 8
  store i64 %25, i64* %24, align 4
  %26 = and i64 %25, 280375465082880
  %27 = icmp eq i64 %26, 8796093022208
  br i1 %27, label %28, label %29

28:                                               ; preds = %22
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %23) #15
  br label %29

29:                                               ; preds = %22, %28
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 8
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #15
  br label %34

34:                                               ; preds = %29, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  %35 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 8
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %39

39:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21StyleBuilderConverter21ConvertPositionLengthILNS_10CSSValueIDE306ELS2_307EEENS_6LengthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 9
  %9 = icmp eq %"class.blink::CSSValue"* %2, null
  %10 = or i1 %9, %8
  br i1 %10, label %36, label %11

11:                                               ; preds = %3
  %12 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 5, i32 1
  %15 = bitcast i8* %14 to %"class.blink::CSSPrimitiveValue"**
  store i64 -6148914691236517206, i64* %4, align 8
  %16 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %5, %"class.blink::CSSPrimitiveValue"* %16, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %17) #15
  %18 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %19 = bitcast i8* %18 to %"class.blink::CSSIdentifierValue"**
  %20 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 306
  br i1 %23, label %24, label %30

24:                                               ; preds = %11
  %25 = bitcast %"class.blink::Length"* %0 to i64*
  %26 = load i64, i64* %4, align 8
  store i64 %26, i64* %25, align 4
  %27 = and i64 %26, 280375465082880
  %28 = icmp eq i64 %27, 8796093022208
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #15
  br label %31

30:                                               ; preds = %11
  call void @_ZNK5blink6Length29SubtractFromOneHundredPercentEv(%"class.blink::Length"* sret %0, %"class.blink::Length"* nonnull %5) #15
  br label %31

31:                                               ; preds = %29, %24, %30
  %32 = load i8, i8* %13, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %35

35:                                               ; preds = %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %61

36:                                               ; preds = %3
  %37 = icmp ne i8 %7, 2
  %38 = or i1 %9, %37
  br i1 %38, label %58, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  switch i32 %42, label %58 [
    i32 306, label %43
    i32 307, label %48
    i32 310, label %53
  ]

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %44, align 4, !alias.scope !116
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %45, align 4, !alias.scope !116
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %46, align 1, !alias.scope !116
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %47, align 2, !alias.scope !116
  br label %61

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 100, i32* %49, align 4, !alias.scope !119
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %50, align 4, !alias.scope !119
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %51, align 1, !alias.scope !119
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %52, align 2, !alias.scope !119
  br label %61

53:                                               ; preds = %39
  %54 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 50, i32* %54, align 4, !alias.scope !122
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %55, align 4, !alias.scope !122
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %56, align 1, !alias.scope !122
  %57 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %57, align 2, !alias.scope !122
  br label %61

58:                                               ; preds = %36, %39
  %59 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %60 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  tail call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSPrimitiveValue"* %59, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %60) #15
  br label %61

61:                                               ; preds = %43, %48, %53, %35, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21StyleBuilderConverter21ConvertPositionLengthILNS_10CSSValueIDE302ELS2_303EEENS_6LengthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 9
  %9 = icmp eq %"class.blink::CSSValue"* %2, null
  %10 = or i1 %9, %8
  br i1 %10, label %36, label %11

11:                                               ; preds = %3
  %12 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 5, i32 1
  %15 = bitcast i8* %14 to %"class.blink::CSSPrimitiveValue"**
  store i64 -6148914691236517206, i64* %4, align 8
  %16 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %5, %"class.blink::CSSPrimitiveValue"* %16, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %17) #15
  %18 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %19 = bitcast i8* %18 to %"class.blink::CSSIdentifierValue"**
  %20 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 302
  br i1 %23, label %24, label %30

24:                                               ; preds = %11
  %25 = bitcast %"class.blink::Length"* %0 to i64*
  %26 = load i64, i64* %4, align 8
  store i64 %26, i64* %25, align 4
  %27 = and i64 %26, 280375465082880
  %28 = icmp eq i64 %27, 8796093022208
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #15
  br label %31

30:                                               ; preds = %11
  call void @_ZNK5blink6Length29SubtractFromOneHundredPercentEv(%"class.blink::Length"* sret %0, %"class.blink::Length"* nonnull %5) #15
  br label %31

31:                                               ; preds = %29, %24, %30
  %32 = load i8, i8* %13, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %35

35:                                               ; preds = %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %61

36:                                               ; preds = %3
  %37 = icmp ne i8 %7, 2
  %38 = or i1 %9, %37
  br i1 %38, label %58, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  switch i32 %42, label %58 [
    i32 302, label %43
    i32 303, label %48
    i32 310, label %53
  ]

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %44, align 4, !alias.scope !125
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %45, align 4, !alias.scope !125
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %46, align 1, !alias.scope !125
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %47, align 2, !alias.scope !125
  br label %61

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 100, i32* %49, align 4, !alias.scope !128
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %50, align 4, !alias.scope !128
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %51, align 1, !alias.scope !128
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %52, align 2, !alias.scope !128
  br label %61

53:                                               ; preds = %39
  %54 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 50, i32* %54, align 4, !alias.scope !131
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %55, align 4, !alias.scope !131
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %56, align 1, !alias.scope !131
  %57 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %57, align 2, !alias.scope !131
  br label %61

58:                                               ; preds = %36, %39
  %59 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %60 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  tail call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSPrimitiveValue"* %59, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %60) #15
  br label %61

61:                                               ; preds = %43, %48, %53, %35, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter21ConvertPositionOrAutoERNS_18StyleResolverStateERKNS_8CSSValueE(%"struct.blink::LengthPoint"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 9
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN5blink21StyleBuilderConverter15ConvertPositionERNS_18StyleResolverStateERKNS_8CSSValueE(%"struct.blink::LengthPoint"* sret %0, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %2)
  br label %27

10:                                               ; preds = %3
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 7, i1 false) #15, !alias.scope !134
  %12 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 7, i1 false) #15, !alias.scope !137
  %13 = bitcast %"struct.blink::LengthPoint"* %0 to i64*
  %14 = load i64, i64* %4, align 8
  store i64 %14, i64* %13, align 4
  %15 = and i64 %14, 280375465082880
  %16 = icmp eq i64 %15, 8796093022208
  br i1 %16, label %17, label %19

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %"struct.blink::LengthPoint", %"struct.blink::LengthPoint"* %0, i64 0, i32 1
  %21 = bitcast %"class.blink::Length"* %20 to i64*
  %22 = load i64, i64* %5, align 8
  store i64 %22, i64* %21, align 4
  %23 = and i64 %22, 280375465082880
  %24 = icmp eq i64 %23, 8796093022208
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %20) #15
  br label %26

26:                                               ; preds = %19, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  br label %27

27:                                               ; preds = %26, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21StyleBuilderConverter18ConvertPerspectiveERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %19, label %13

13:                                               ; preds = %2, %8
  %14 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %15 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %16 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %14, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %15) #15
  %17 = fcmp olt float %16, 0.000000e+00
  %18 = select i1 %17, float 0.000000e+00, float %16
  br label %19

19:                                               ; preds = %8, %13
  %20 = phi float [ %18, %13 ], [ 0.000000e+00, %8 ]
  ret float %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter17ConvertPaintOrderERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ult i8 %4, 52
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.WTF::Vector.1855"*
  %11 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %10, i32 0) #15
  %12 = bitcast %"class.blink::Member.1324"* %11 to %"class.blink::CSSIdentifierValue"**
  %13 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %34 [
    i32 621, label %16
    i32 622, label %22
    i32 710, label %28
  ]

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 1
  %21 = select i1 %20, i32 2, i32 1
  br label %34

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %25, 1
  %27 = select i1 %26, i32 4, i32 3
  br label %34

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, 1
  %33 = select i1 %32, i32 6, i32 5
  br label %34

34:                                               ; preds = %8, %16, %22, %28, %2
  %35 = phi i32 [ 0, %2 ], [ 0, %8 ], [ %21, %16 ], [ %27, %22 ], [ %33, %28 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter19ConvertQuirkyLengthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %6 = bitcast %"class.blink::Length"* %0 to i64*
  store i64 -6148914691236517206, i64* %6, align 4
  %7 = load i8, i8* %5, align 1, !noalias !140
  %8 = icmp ne i8 %7, 2
  %9 = icmp eq %"class.blink::CSSValue"* %2, null
  %10 = or i1 %9, %8
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4, !noalias !140
  %15 = icmp eq i32 %14, 405
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::Length"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 7, i1 false) #15, !alias.scope !143
  br label %30

18:                                               ; preds = %3, %11
  %19 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %20 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  tail call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSPrimitiveValue"* %19, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %20) #15
  %21 = load i8, i8* %5, align 1
  %22 = icmp ne i8 %21, 0
  %23 = or i1 %9, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 127
  %28 = icmp eq i8 %27, 32
  %29 = zext i1 %28 to i8
  br label %30

30:                                               ; preds = %16, %18, %24
  %31 = phi i8 [ 0, %18 ], [ %29, %24 ], [ 0, %16 ]
  store i8 %31, i8* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::QuotesData"* @_ZN5blink21StyleBuilderConverter13ConvertQuotesERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ult i8 %4, 52
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %137, label %8

8:                                                ; preds = %2
  %9 = tail call noalias i8* @malloc(i64 24) #15
  %10 = bitcast i8* %9 to %"class.blink::QuotesData"*
  %11 = bitcast i8* %9 to i64*
  store i64 1, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #15
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %147, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %19 = bitcast i8* %18 to %"class.WTF::Vector.1855"*
  br label %20

20:                                               ; preds = %17, %133
  %21 = phi i32 [ 0, %17 ], [ %134, %133 ]
  %22 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %19, i32 %21) #15
  %23 = bitcast %"class.blink::Member.1324"* %22 to %"class.blink::CSSStringValue"**
  %24 = load %"class.blink::CSSStringValue"*, %"class.blink::CSSStringValue"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CSSStringValue", %"class.blink::CSSStringValue"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #15
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !21

42:                                               ; preds = %33
  tail call void @llvm.trap() #15
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %20, %28, %43
  %46 = or i32 %21, 1
  %47 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %19, i32 %46) #15
  %48 = bitcast %"class.blink::Member.1324"* %47 to %"class.blink::CSSStringValue"**
  %49 = load %"class.blink::CSSStringValue"*, %"class.blink::CSSStringValue"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::CSSStringValue", %"class.blink::CSSStringValue"* %49, i64 0, i32 1, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #15
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !21

67:                                               ; preds = %58
  tail call void @llvm.trap() #15
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %45, %53, %68
  br i1 %27, label %88, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #15
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !21

85:                                               ; preds = %76
  tail call void @llvm.trap() #15
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %86, %71, %70
  br i1 %52, label %106, label %89

89:                                               ; preds = %88
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %107

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #15
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !21

103:                                              ; preds = %94
  tail call void @llvm.trap() #15
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %107

106:                                              ; preds = %88
  tail call void @_ZN5blink10QuotesData7AddPairENSt3__14pairIN3WTF6StringES4_EE(%"class.blink::QuotesData"* %10, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* null) #15
  br label %119

107:                                              ; preds = %89, %104
  tail call void @_ZN5blink10QuotesData7AddPairENSt3__14pairIN3WTF6StringES4_EE(%"class.blink::QuotesData"* %10, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* nonnull %51) #15
  %108 = load atomic i32, i32* %90 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %107
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %107
  %116 = phi i32 [ %114, %113 ], [ %112, %107 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #15
  br label %119

119:                                              ; preds = %106, %115, %118
  br i1 %27, label %133, label %120

120:                                              ; preds = %119
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #15
  br label %133

133:                                              ; preds = %119, %129, %132
  %134 = add i32 %21, 2
  %135 = load i32, i32* %14, align 4
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %20, label %147

137:                                              ; preds = %2
  %138 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 3
  br i1 %141, label %142, label %147

142:                                              ; preds = %137
  %143 = tail call noalias i8* @malloc(i64 24) #15
  %144 = bitcast i8* %143 to %"class.blink::QuotesData"*
  %145 = bitcast i8* %143 to i64*
  store i64 1, i64* %145, align 8
  %146 = getelementptr inbounds i8, i8* %143, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 16, i1 false) #15
  br label %147

147:                                              ; preds = %133, %8, %137, %142
  %148 = phi %"class.blink::QuotesData"* [ %144, %142 ], [ null, %137 ], [ %10, %8 ], [ %10, %133 ]
  ret %"class.blink::QuotesData"* %148
}

declare void @_ZN5blink10QuotesData7AddPairENSt3__14pairIN3WTF6StringES4_EE(%"class.blink::QuotesData"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter13ConvertRadiusERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::LengthSize"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %11 = bitcast i8* %10 to %"class.blink::CSSPrimitiveValue"**
  store i64 -6148914691236517206, i64* %4, align 8
  %12 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %5, %"class.blink::CSSPrimitiveValue"* %12, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %13) #15
  %14 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 5, i32 1
  %17 = bitcast i8* %16 to %"class.blink::CSSPrimitiveValue"**
  store i64 -6148914691236517206, i64* %6, align 8
  %18 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %17, align 8
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %7, %"class.blink::CSSPrimitiveValue"* %18, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %13) #15
  %19 = bitcast %"class.blink::LengthSize"* %0 to i64*
  %20 = load i64, i64* %4, align 8
  store i64 %20, i64* %19, align 4
  %21 = and i64 %20, 280375465082880
  %22 = icmp eq i64 %21, 8796093022208
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %23, %3
  %26 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1
  %27 = bitcast %"class.blink::Length"* %26 to i64*
  %28 = load i64, i64* %6, align 8
  store i64 %28, i64* %27, align 4
  %29 = and i64 %28, 280375465082880
  %30 = icmp eq i64 %29, 8796093022208
  br i1 %30, label %31, label %32

31:                                               ; preds = %25
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %26) #15
  br label %32

32:                                               ; preds = %25, %31
  %33 = load i8, i8* %15, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #15
  br label %36

36:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %37 = load i8, i8* %9, align 1
  %38 = icmp eq i8 %37, 8
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %40

40:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter13ConvertShadowERKNS_25CSSToLengthConversionDataEPNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::ShadowData"* noalias nocapture sret, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), %"class.blink::StyleResolverState"* readonly, %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 2, i32 2
  %6 = bitcast i8* %5 to %"class.blink::CSSPrimitiveValue"**
  %7 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %6, align 8
  %8 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %7, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #15
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 5, i32 1
  %10 = bitcast i8* %9 to %"class.blink::CSSPrimitiveValue"**
  %11 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %10, align 8
  %12 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %11, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #15
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 8
  %14 = bitcast %"class.blink::CSSValue"* %13 to %"class.blink::CSSPrimitiveValue"**
  %15 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %14, align 8
  %16 = icmp eq %"class.blink::CSSPrimitiveValue"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  %18 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* nonnull %15, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #15
  br label %19

19:                                               ; preds = %4, %17
  %20 = phi float [ %18, %17 ], [ 0.000000e+00, %4 ]
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 10, i32 2
  %22 = bitcast i8* %21 to %"class.blink::CSSPrimitiveValue"**
  %23 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %22, align 8
  %24 = icmp eq %"class.blink::CSSPrimitiveValue"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* nonnull %23, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %1) #15
  br label %27

27:                                               ; preds = %19, %25
  %28 = phi float [ %26, %25 ], [ 0.000000e+00, %19 ]
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 13, i32 1
  %30 = bitcast i8* %29 to %"class.blink::CSSIdentifierValue"**
  %31 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %30, align 8
  %32 = icmp eq %"class.blink::CSSIdentifierValue"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 5
  %37 = zext i1 %36 to i32
  br label %38

38:                                               ; preds = %27, %33
  %39 = phi i32 [ 0, %27 ], [ %37, %33 ]
  %40 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 16
  %41 = bitcast %"class.blink::CSSValue"* %40 to %"class.blink::CSSValue"**
  %42 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %41, align 8
  %43 = icmp eq %"class.blink::CSSValue"* %42, null
  br i1 %43, label %60, label %44

44:                                               ; preds = %38
  %45 = icmp eq %"class.blink::StyleResolverState"* %2, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %44
  %47 = tail call i64 @_ZN5blink21StyleBuilderConverter17ConvertStyleColorERNS_18StyleResolverStateERKNS_8CSSValueEb(%"class.blink::StyleResolverState"* nonnull dereferenceable(600) %2, %"class.blink::CSSValue"* nonnull dereferenceable(3) %42, i1 zeroext false)
  %48 = trunc i64 %47 to i32
  %49 = and i64 %47, -4294967296
  br label %60

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %42, i64 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 3
  %54 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %42, i64 1, i32 1
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 4
  br i1 %53, label %60, label %57

57:                                               ; preds = %50
  switch i32 %56, label %58 [
    i32 0, label %60
    i32 149, label %60
    i32 106, label %60
    i32 107, label %60
    i32 146, label %60
    i32 147, label %60
  ]

58:                                               ; preds = %57
  %59 = tail call i32 @_ZN5blink10StyleColor16ColorFromKeywordENS_10CSSValueIDENS_5mojom11ColorSchemeE(i32 %56, i32 0) #15
  br label %60

60:                                               ; preds = %50, %38, %57, %57, %57, %57, %57, %57, %58, %46
  %61 = phi i64 [ %49, %46 ], [ 631360192512, %38 ], [ 0, %58 ], [ 0, %57 ], [ 0, %57 ], [ 0, %57 ], [ 0, %57 ], [ 0, %57 ], [ 0, %57 ], [ 0, %50 ]
  %62 = phi i32 [ %48, %46 ], [ 0, %38 ], [ %59, %58 ], [ -16777216, %57 ], [ -16777216, %57 ], [ -16777216, %57 ], [ -16777216, %57 ], [ -16777216, %57 ], [ -16777216, %57 ], [ %56, %50 ]
  %63 = zext i32 %62 to i64
  %64 = or i64 %61, %63
  %65 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 0, i32 0
  store float %8, float* %65, align 4
  %66 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 0, i32 1
  store float %12, float* %66, align 4
  %67 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 1
  store float %20, float* %67, align 4
  %68 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 2
  store float %28, float* %68, align 4
  %69 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 3
  %70 = bitcast %"class.blink::StyleColor"* %69 to i64*
  store i64 %64, i64* %70, align 4
  %71 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %0, i64 0, i32 4
  store i32 %39, i32* %71, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21StyleBuilderConverter17ConvertStyleColorERNS_18StyleResolverStateERKNS_8CSSValueEb(%"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 2
  %7 = icmp eq %"class.blink::CSSValue"* %1, null
  %8 = or i1 %7, %6
  br i1 %8, label %55, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 147
  br i1 %13, label %68, label %14

14:                                               ; preds = %9
  %15 = tail call zeroext i1 @_ZN5blink10StyleColor13IsSystemColorENS_10CSSValueIDE(i32 %12) #15
  br i1 %15, label %16, label %55

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 2, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 4, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = xor i160 %26, %21
  %28 = and i160 %27, 20769187434139310514121985316880384
  %29 = icmp eq i160 %28, 0
  %30 = lshr i160 %21, 114
  %31 = trunc i160 %30 to i32
  br i1 %29, label %46, label %32

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 1
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %34, i64 0, i32 2
  %36 = bitcast %"class.blink::UseCounter"* %35 to void (%"class.blink::UseCounter"*, i32)***
  %37 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %37, i64 3
  %39 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %38, align 8
  tail call void %39(%"class.blink::UseCounter"* %35, i32 3364) #15
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = lshr i160 %43, 114
  %45 = trunc i160 %44 to i32
  br label %46

46:                                               ; preds = %16, %32
  %47 = phi i32 [ %31, %16 ], [ %45, %32 ]
  %48 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 1
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 62
  %51 = and i32 %47, 1
  %52 = tail call i32 @_ZNK5blink14TextLinkColors17ColorFromCSSValueERKNS_8CSSValueENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::TextLinkColors"* %50, %"class.blink::CSSValue"* nonnull dereferenceable(3) %1, i32 0, i32 %51, i1 zeroext %2) #15
  %53 = zext i32 %12 to i64
  %54 = shl nuw i64 %53, 32
  br label %68

55:                                               ; preds = %14, %3
  %56 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 1
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %57, i64 0, i32 62
  %59 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 2, i32 0
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 9
  %62 = bitcast [20 x i8]* %61 to i160*
  %63 = load i160, i160* %62, align 8
  %64 = lshr i160 %63, 114
  %65 = trunc i160 %64 to i32
  %66 = and i32 %65, 1
  %67 = tail call i32 @_ZNK5blink14TextLinkColors17ColorFromCSSValueERKNS_8CSSValueENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::TextLinkColors"* %58, %"class.blink::CSSValue"* dereferenceable(3) %1, i32 0, i32 %66, i1 zeroext %2) #15
  br label %68

68:                                               ; preds = %9, %46, %55
  %69 = phi i32 [ %67, %55 ], [ %52, %46 ], [ 0, %9 ]
  %70 = phi i64 [ 0, %55 ], [ %54, %46 ], [ 631360192512, %9 ]
  %71 = zext i32 %69 to i64
  %72 = or i64 %70, %71
  ret i64 %72
}

declare i32 @_ZN5blink10StyleColor16ColorFromKeywordENS_10CSSValueIDENS_5mojom11ColorSchemeE(i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShadowList"* @_ZN5blink21StyleBuilderConverter17ConvertShadowListERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::Vector.350", align 8
  %4 = alloca %"class.blink::ShadowData", align 4
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 2
  %8 = icmp eq %"class.blink::CSSValue"* %1, null
  %9 = or i1 %8, %7
  br i1 %9, label %10, label %73

10:                                               ; preds = %2
  %11 = bitcast %"class.WTF::Vector.350"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %3, i64 0, i32 0, i32 1, i64 0
  %14 = bitcast %"class.WTF::Vector.350"* %3 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %18 = bitcast i8* %17 to %"class.blink::Member.1324"**
  %19 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %19, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %10
  %27 = bitcast %"class.blink::ShadowData"* %4 to i8*
  %28 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %29 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %3, i64 0, i32 0, i32 0, i32 0
  br label %55

30:                                               ; preds = %70, %10
  %31 = call noalias i8* @malloc(i64 56) #15
  %32 = bitcast i8* %31 to %"class.blink::ShadowList"*
  %33 = bitcast i8* %31 to i32*
  store i32 1, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %31, i64 8
  %35 = bitcast i8* %34 to %"class.WTF::Vector.350"*
  %36 = getelementptr inbounds i8, i8* %31, i64 24
  %37 = bitcast i8* %34 to i8**
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds i8, i8* %31, i64 16
  %39 = bitcast i8* %38 to i32*
  store i32 1, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %31, i64 20
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4
  %42 = bitcast i8* %34 to %"class.WTF::VectorBuffer.351"*
  %43 = bitcast %"class.WTF::Vector.350"* %3 to %"class.WTF::VectorBuffer.351"*
  call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.351"* %42, %"class.WTF::VectorBuffer.351"* nonnull dereferenceable(48) %43, i64 0, i64 0) #15
  %44 = load i32, i32* %41, align 4
  call void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.350"* %35, i32 %44) #15
  %45 = load i32, i32* %16, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !21

47:                                               ; preds = %30
  store i32 0, i32* %16, align 4
  br label %48

48:                                               ; preds = %47, %30
  %49 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %3, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %49, align 8
  %51 = bitcast i8* %13 to %"class.blink::ShadowData"*
  %52 = icmp eq %"class.blink::ShadowData"* %50, %51
  br i1 %52, label %54, label %53, !prof !49

53:                                               ; preds = %48
  call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.351"* nonnull %43, %"class.blink::ShadowData"* %50) #15
  br label %54

54:                                               ; preds = %48, %53
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #15
  br label %73

55:                                               ; preds = %26, %70
  %56 = phi %"class.blink::Member.1324"* [ %19, %26 ], [ %71, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %27) #15
  %57 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %57, align 8
  call void @_ZN5blink21StyleBuilderConverter13ConvertShadowERKNS_25CSSToLengthConversionDataEPNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::ShadowData"* nonnull sret %4, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %28, %"class.blink::StyleResolverState"* %0, %"class.blink::CSSValue"* dereferenceable(3) %58)
  %59 = load i32, i32* %16, align 4
  %60 = load i32, i32* %15, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %69, label %62, !prof !21

62:                                               ; preds = %55
  %63 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %29, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %63, i64 %64
  %66 = bitcast %"class.blink::ShadowData"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* nonnull align 4 %27, i64 28, i1 false) #15
  %67 = load i32, i32* %16, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %16, align 4
  br label %70

69:                                               ; preds = %55
  call void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.350"* nonnull %3, %"class.blink::ShadowData"* nonnull dereferenceable(28) %4) #15
  br label %70

70:                                               ; preds = %62, %69
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %27) #15
  %71 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %56, i64 1
  %72 = icmp eq %"class.blink::Member.1324"* %71, %24
  br i1 %72, label %30, label %55

73:                                               ; preds = %2, %54
  %74 = phi %"class.blink::ShadowList"* [ %32, %54 ], [ null, %2 ]
  ret %"class.blink::ShadowList"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeValue"* @_ZN5blink21StyleBuilderConverter17ConvertShapeValueERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %8, label %102

8:                                                ; preds = %2
  switch i8 %4, label %9 [
    i8 54, label %17
    i8 23, label %17
    i8 22, label %17
    i8 21, label %17
    i8 20, label %17
    i8 19, label %17
    i8 17, label %17
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %16 = bitcast i8* %15 to %"class.WTF::Vector.1855"*
  br label %41

17:                                               ; preds = %8, %8, %8, %8, %8, %8, %8
  %18 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 11
  %19 = tail call %"class.blink::StyleImage"* @_ZN5blink21ElementStyleResources13GetStyleImageENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::ElementStyleResources"* %18, i32 324, %"class.blink::CSSValue"* dereferenceable(3) %1) #15
  %20 = ptrtoint %"class.blink::StyleImage"* %19 to i64
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10ShapeValueEEEPhm(i64 40) #15
  %22 = bitcast i8* %21 to %"class.blink::ShapeValue"*
  %23 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink10ShapeValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 2, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 16
  %27 = bitcast i8* %26 to %"class.blink::BasicShape"**
  store %"class.blink::BasicShape"* null, %"class.blink::BasicShape"** %27, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 24
  %29 = bitcast i8* %28 to i64*
  store i64 %20, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %21, i64 32
  %31 = bitcast i8* %30 to i32*
  store i32 4, i32* %31, align 8
  br label %95

32:                                               ; preds = %78, %9
  %33 = phi i64 [ 0, %9 ], [ %79, %78 ]
  %34 = phi i32 [ 0, %9 ], [ %80, %78 ]
  %35 = icmp eq i64 %33, 0
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10ShapeValueEEEPhm(i64 40) #15
  %37 = bitcast i8* %36 to %"class.blink::ShapeValue"*
  %38 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink10ShapeValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = bitcast i8* %39 to i32*
  br i1 %35, label %91, label %84

41:                                               ; preds = %14, %78
  %42 = phi i32 [ 0, %14 ], [ %81, %78 ]
  %43 = phi i32 [ 0, %14 ], [ %80, %78 ]
  %44 = phi i64 [ 0, %14 ], [ %79, %78 ]
  %45 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %16, i32 %42) #15
  %46 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %47, i64 0, i32 2
  %49 = load i8, i8* %48, align 1
  %50 = add i8 %49, -13
  %51 = icmp ult i8 %50, 4
  br i1 %51, label %52, label %70

52:                                               ; preds = %41
  %53 = tail call %"class.blink::BasicShape"* @_ZN5blink18BasicShapeForValueERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600) %0, %"class.blink::CSSValue"* dereferenceable(3) %47) #15
  %54 = ptrtoint %"class.blink::BasicShape"* %53 to i64
  %55 = icmp eq i64 %44, 0
  br i1 %55, label %78, label %56

56:                                               ; preds = %52
  %57 = inttoptr i64 %44 to %"class.blink::BasicShape"*
  %58 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %57, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %58, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %59) #15
  %60 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %58, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %78

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %58, i64 -2
  %65 = bitcast %"class.base::RefCounted.1"* %64 to %"class.blink::BasicShape"*
  %66 = bitcast %"class.base::RefCounted.1"* %64 to void (%"class.blink::BasicShape"*)***
  %67 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %67, i64 1
  %69 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %68, align 8
  tail call void %69(%"class.blink::BasicShape"* nonnull %65) #15
  br label %78

70:                                               ; preds = %41
  %71 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %47, i64 1, i32 1
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 4
  switch i32 %73, label %77 [
    i32 584, label %78
    i32 579, label %74
    i32 583, label %75
    i32 581, label %76
  ]

74:                                               ; preds = %70
  br label %78

75:                                               ; preds = %70
  br label %78

76:                                               ; preds = %70
  br label %78

77:                                               ; preds = %70
  br label %78

78:                                               ; preds = %77, %76, %75, %74, %70, %63, %56, %52
  %79 = phi i64 [ %54, %52 ], [ %54, %56 ], [ %54, %63 ], [ %44, %70 ], [ %44, %74 ], [ %44, %75 ], [ %44, %76 ], [ %44, %77 ]
  %80 = phi i32 [ %43, %52 ], [ %43, %56 ], [ %43, %63 ], [ 1, %70 ], [ 2, %74 ], [ 3, %75 ], [ 4, %76 ], [ 4, %77 ]
  %81 = add nuw i32 %42, 1
  %82 = load i32, i32* %11, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %41, label %32

84:                                               ; preds = %32
  store i32 0, i32* %40, align 8
  %85 = getelementptr inbounds i8, i8* %36, i64 16
  %86 = bitcast i8* %85 to i64*
  store i64 %33, i64* %86, align 8
  %87 = getelementptr inbounds i8, i8* %36, i64 24
  %88 = bitcast i8* %87 to %"class.blink::StyleImage"**
  store %"class.blink::StyleImage"* null, %"class.blink::StyleImage"** %88, align 8
  %89 = getelementptr inbounds i8, i8* %36, i64 32
  %90 = bitcast i8* %89 to i32*
  store i32 %34, i32* %90, align 8
  br label %95

91:                                               ; preds = %32
  store i32 1, i32* %40, align 8
  %92 = getelementptr inbounds i8, i8* %36, i64 16
  %93 = getelementptr inbounds i8, i8* %36, i64 32
  %94 = bitcast i8* %93 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #15
  store i32 %34, i32* %94, align 8
  br label %95

95:                                               ; preds = %17, %84, %91
  %96 = phi i8* [ %21, %17 ], [ %36, %84 ], [ %36, %91 ]
  %97 = phi %"class.blink::ShapeValue"* [ %22, %17 ], [ %37, %84 ], [ %37, %91 ]
  %98 = getelementptr inbounds i8, i8* %96, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  br label %102

102:                                              ; preds = %95, %2
  %103 = phi %"class.blink::ShapeValue"* [ null, %2 ], [ %97, %95 ]
  ret %"class.blink::ShapeValue"* %103
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21StyleBuilderConverter14ConvertSpacingERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 56
  br i1 %12, label %17, label %13

13:                                               ; preds = %2, %8
  %14 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %15 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %16 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %14, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %15) #15
  br label %17

17:                                               ; preds = %8, %13
  %18 = phi float [ %16, %13 ], [ 0.000000e+00, %8 ]
  ret float %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::RefCountedData.714"* @_ZN5blink21StyleBuilderConverter22ConvertStrokeDasharrayERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp ult i8 %6, 52
  %8 = icmp eq %"class.blink::CSSValue"* %1, null
  %9 = or i1 %8, %7
  br i1 %9, label %10, label %17

10:                                               ; preds = %2
  %11 = tail call %"class.base::RefCountedData.714"* @_ZN5blink14EmptyDashArrayEv() #15
  %12 = ptrtoint %"class.base::RefCountedData.714"* %11 to i64
  %13 = icmp eq %"class.base::RefCountedData.714"* %11, null
  br i1 %13, label %67, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::RefCountedData.714", %"class.base::RefCountedData.714"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %67

17:                                               ; preds = %2
  %18 = tail call i8* @_Znwm(i64 24) #16
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #15
  %21 = atomicrmw add i32* %19, i32 1 monotonic
  %22 = ptrtoint i8* %18 to i64
  %23 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %67, label %27

27:                                               ; preds = %17
  %28 = bitcast i64* %3 to i8*
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %30 = bitcast i8* %29 to %"class.WTF::Vector.1855"*
  %31 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %32 = getelementptr inbounds i8, i8* %18, i64 20
  %33 = bitcast i8* %32 to i32*
  %34 = getelementptr inbounds i8, i8* %18, i64 16
  %35 = bitcast i8* %34 to i32*
  %36 = bitcast i8* %20 to %"class.blink::Length"**
  %37 = bitcast i8* %20 to %"class.WTF::Vector.716"*
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  br label %39

39:                                               ; preds = %64, %27
  %40 = phi i32 [ 0, %27 ], [ %65, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %41 = call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %30, i32 %40) #15
  %42 = bitcast %"class.blink::Member.1324"* %41 to %"class.blink::CSSPrimitiveValue"**
  %43 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %42, align 8
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %4, %"class.blink::CSSPrimitiveValue"* %43, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %31) #15
  %44 = load i32, i32* %33, align 4
  %45 = load i32, i32* %35, align 8
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %59, label %47, !prof !21

47:                                               ; preds = %39
  %48 = load %"class.blink::Length"*, %"class.blink::Length"** %36, align 8
  %49 = zext i32 %44 to i64
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 %49
  %51 = bitcast %"class.blink::Length"* %50 to i64*
  %52 = load i64, i64* %3, align 8
  store i64 %52, i64* %51, align 4
  %53 = and i64 %52, 280375465082880
  %54 = icmp eq i64 %53, 8796093022208
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %50) #15
  br label %56

56:                                               ; preds = %55, %47
  %57 = load i32, i32* %33, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %33, align 4
  br label %60

59:                                               ; preds = %39
  call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.716"* %37, %"class.blink::Length"* nonnull dereferenceable(8) %4) #15
  br label %60

60:                                               ; preds = %56, %59
  %61 = load i8, i8* %38, align 1
  %62 = icmp eq i8 %61, 8
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #15
  br label %64

64:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  %65 = add nuw i32 %40, 1
  %66 = icmp eq i32 %65, %25
  br i1 %66, label %67, label %39

67:                                               ; preds = %64, %17, %14, %10
  %68 = phi i64 [ %12, %10 ], [ %12, %14 ], [ %22, %17 ], [ %22, %64 ]
  %69 = inttoptr i64 %68 to %"class.base::RefCountedData.714"*
  ret %"class.base::RefCountedData.714"* %69
}

declare %"class.base::RefCountedData.714"* @_ZN5blink14EmptyDashArrayEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter34CountSystemColorComputeToSelfUsageERKNS_18StyleResolverStateE(%"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 4, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = xor i160 %11, %6
  %13 = and i160 %12, 20769187434139310514121985316880384
  %14 = icmp eq i160 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 1
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 2
  %19 = bitcast %"class.blink::UseCounter"* %18 to void (%"class.blink::UseCounter"*, i32)***
  %20 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %20, i64 3
  %22 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, align 8
  tail call void %22(%"class.blink::UseCounter"* %18, i32 3364) #15
  br label %23

23:                                               ; preds = %1, %15
  ret void
}

declare zeroext i1 @_ZN5blink10StyleColor13IsSystemColorENS_10CSSValueIDE(i32) local_unnamed_addr #3

declare i32 @_ZNK5blink14TextLinkColors17ColorFromCSSValueERKNS_8CSSValueENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::TextLinkColors"*, %"class.blink::CSSValue"* dereferenceable(3), i32, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21StyleBuilderConverter21ConvertStyleAutoColorERNS_18StyleResolverStateERKNS_8CSSValueEb(%"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 2
  %7 = icmp eq %"class.blink::CSSValue"* %1, null
  %8 = or i1 %7, %6
  br i1 %8, label %41, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %14 [
    i32 147, label %55
    i32 405, label %13
  ]

13:                                               ; preds = %9
  br label %55

14:                                               ; preds = %9
  %15 = tail call zeroext i1 @_ZN5blink10StyleColor13IsSystemColorENS_10CSSValueIDE(i32 %12) #15
  br i1 %15, label %16, label %41

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 2, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 4, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = xor i160 %26, %21
  %28 = and i160 %27, 20769187434139310514121985316880384
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 1
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 2
  %34 = bitcast %"class.blink::UseCounter"* %33 to void (%"class.blink::UseCounter"*, i32)***
  %35 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %35, i64 3
  %37 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %36, align 8
  tail call void %37(%"class.blink::UseCounter"* %33, i32 3364) #15
  br label %38

38:                                               ; preds = %16, %30
  %39 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase44is_css_system_color_compute_to_self_enabled_E, align 1, !range !20
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %55

41:                                               ; preds = %38, %14, %3
  %42 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 1
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 62
  %45 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 2, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8
  %50 = lshr i160 %49, 114
  %51 = trunc i160 %50 to i32
  %52 = and i32 %51, 1
  %53 = tail call i32 @_ZNK5blink14TextLinkColors17ColorFromCSSValueERKNS_8CSSValueENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::TextLinkColors"* %44, %"class.blink::CSSValue"* dereferenceable(3) %1, i32 0, i32 %52, i1 zeroext %2) #15
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %38, %9, %13, %41
  %56 = phi i64 [ %54, %41 ], [ 0, %13 ], [ 0, %9 ], [ 0, %38 ]
  %57 = phi i32 [ 0, %41 ], [ 405, %13 ], [ %12, %9 ], [ %12, %38 ]
  %58 = zext i32 %57 to i64
  %59 = shl nuw i64 %58, 32
  %60 = or i64 %59, %56
  ret i64 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter15ConvertSVGPaintERNS_18StyleResolverStateERKNS_8CSSValueEb(%"struct.blink::SVGPaint"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.blink::SVGPaint", %"struct.blink::SVGPaint"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::SVGPaint", %"struct.blink::SVGPaint"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.blink::SVGPaint", %"struct.blink::SVGPaint"* %0, i64 0, i32 2
  %8 = bitcast %"struct.blink::SVGPaint"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  tail call void @_ZN5blink8SVGPaintC1Ev(%"struct.blink::SVGPaint"* %0) #15
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp ult i8 %10, 52
  %12 = icmp eq %"class.blink::CSSValue"* %2, null
  %13 = or i1 %12, %11
  br i1 %13, label %27, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %16 = bitcast i8* %15 to %"class.WTF::Vector.1855"*
  %17 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %16, i32 0) #15
  %18 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %18, align 8
  %20 = tail call %"class.blink::StyleSVGResource"* @_ZN5blink21StyleBuilderConverter23ConvertElementReferenceERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %19)
  %21 = tail call dereferenceable(8) %class.scoped_refptr.695* @_ZN13scoped_refptrIN5blink16StyleSVGResourceEEaSES2_(%class.scoped_refptr.695* %5, %"class.blink::StyleSVGResource"* %20) #15
  %22 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %16, i32 1) #15
  %23 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %24, i64 0, i32 2
  %26 = load i8, i8* %25, align 1
  br label %27

27:                                               ; preds = %4, %14
  %28 = phi i8 [ %26, %14 ], [ %10, %4 ]
  %29 = phi %"class.blink::CSSValue"* [ %24, %14 ], [ %2, %4 ]
  %30 = icmp eq i8 %28, 8
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  store i32 4, i32* %7, align 8
  %32 = tail call %"class.blink::StyleSVGResource"* @_ZN5blink21StyleBuilderConverter23ConvertElementReferenceERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %29)
  %33 = tail call dereferenceable(8) %class.scoped_refptr.695* @_ZN13scoped_refptrIN5blink16StyleSVGResourceEEaSES2_(%class.scoped_refptr.695* %5, %"class.blink::StyleSVGResource"* %32) #15
  br label %56

34:                                               ; preds = %27
  %35 = icmp ne %"class.blink::CSSValue"* %29, null
  %36 = icmp eq i8 %28, 2
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %47

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %29, i64 1, i32 1
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 3
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %6, align 8
  %45 = icmp eq %"class.blink::StyleSVGResource"* %44, null
  %46 = select i1 %45, i32 1, i32 2
  br label %54

47:                                               ; preds = %34, %38
  %48 = tail call i64 @_ZN5blink21StyleBuilderConverter17ConvertStyleColorERNS_18StyleResolverStateERKNS_8CSSValueEb(%"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %29, i1 zeroext false)
  %49 = getelementptr inbounds %"struct.blink::SVGPaint", %"struct.blink::SVGPaint"* %0, i64 0, i32 1
  %50 = bitcast %"class.blink::StyleColor"* %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %6, align 8
  %52 = icmp eq %"class.blink::StyleSVGResource"* %51, null
  %53 = select i1 %52, i32 0, i32 3
  br label %54

54:                                               ; preds = %47, %43
  %55 = phi i32 [ %53, %47 ], [ %46, %43 ]
  store i32 %55, i32* %7, align 8
  br label %56

56:                                               ; preds = %31, %54
  ret void
}

declare void @_ZN5blink8SVGPaintC1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.695* @_ZN13scoped_refptrIN5blink16StyleSVGResourceEEaSES2_(%class.scoped_refptr.695*, %"class.blink::StyleSVGResource"*) local_unnamed_addr #2 comdat align 2 {
  %3 = ptrtoint %"class.blink::StyleSVGResource"* %1 to i64
  %4 = bitcast %class.scoped_refptr.695* %0 to i64*
  %5 = getelementptr inbounds %class.scoped_refptr.695, %class.scoped_refptr.695* %0, i64 0, i32 0
  %6 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %5, align 8
  store i64 %3, i64* %4, align 8
  %7 = icmp eq %"class.blink::StyleSVGResource"* %6, null
  br i1 %7, label %55, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #15
  %10 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %55

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #15
  br label %30

30:                                               ; preds = %29, %26, %13
  %31 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %6, i64 0, i32 1, i32 0, i32 1, i32 0
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  %33 = icmp eq %"class.blink::PersistentNode"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %30
  %35 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %36 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %35, i64 0, i32 1
  %37 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %36) #15
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %41, !prof !21

39:                                               ; preds = %34
  %40 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %36, i8* %40) #15
  br label %41

41:                                               ; preds = %39, %34
  %42 = phi i8* [ %40, %39 ], [ %37, %34 ]
  %43 = bitcast i8* %42 to %"class.blink::ThreadState"**
  %44 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %45, align 8
  %47 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %46, i64 0, i32 0, i32 0
  %49 = bitcast %"class.blink::PersistentRegion"* %46 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::PersistentNode"* %47 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %47, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %52, align 8
  store %"class.blink::PersistentNode"* %47, %"class.blink::PersistentNode"** %48, align 8
  br label %53

53:                                               ; preds = %30, %41
  %54 = bitcast %"class.blink::StyleSVGResource"* %6 to i8*
  tail call void @free(i8* %54) #15
  br label %55

55:                                               ; preds = %2, %8, %53
  ret %class.scoped_refptr.695* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter30ConvertTextDecorationThicknessERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::TextDecorationThickness"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::Length", align 4
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 2
  %8 = icmp eq %"class.blink::CSSValue"* %2, null
  %9 = or i1 %8, %7
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::Length"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  br label %25

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 543
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  tail call void @_ZN5blink23TextDecorationThicknessC1ENS_10CSSValueIDE(%"class.blink::TextDecorationThickness"* %0, i32 543) #15
  br label %36

18:                                               ; preds = %12
  %19 = bitcast %"class.blink::Length"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !146
  %23 = icmp eq i32 %22, 405
  br i1 %23, label %24, label %25

24:                                               ; preds = %18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 0, i64 7, i1 false) #15, !alias.scope !149
  br label %29

25:                                               ; preds = %10, %18
  %26 = phi i8* [ %11, %10 ], [ %19, %18 ]
  %27 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %28 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %4, %"class.blink::CSSPrimitiveValue"* %27, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %28) #15
  br label %29

29:                                               ; preds = %24, %25
  %30 = phi i8* [ %19, %24 ], [ %26, %25 ]
  call void @_ZN5blink23TextDecorationThicknessC1ERKNS_6LengthE(%"class.blink::TextDecorationThickness"* %0, %"class.blink::Length"* nonnull dereferenceable(8) %4) #15
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #15
  br label %35

35:                                               ; preds = %29, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  br label %36

36:                                               ; preds = %35, %17
  ret void
}

declare void @_ZN5blink23TextDecorationThicknessC1ENS_10CSSValueIDE(%"class.blink::TextDecorationThickness"*, i32) unnamed_addr #3

declare void @_ZN5blink23TextDecorationThicknessC1ERKNS_6LengthE(%"class.blink::TextDecorationThickness"*, %"class.blink::Length"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter31ConvertTextTextEmphasisPositionERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %4 = bitcast i8* %3 to %"class.WTF::Vector.1855"*
  %5 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %4, i32 0) #15
  %6 = bitcast %"class.blink::Member.1324"* %5 to %"class.blink::CSSIdentifierValue"**
  %7 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %4, i32 1) #15
  %11 = bitcast %"class.blink::Member.1324"* %10 to %"class.blink::CSSIdentifierValue"**
  %12 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %9, 647
  %16 = icmp eq i32 %14, 307
  %17 = and i1 %15, %16
  br i1 %17, label %27, label %18

18:                                               ; preds = %2
  %19 = icmp eq i32 %14, 306
  %20 = and i1 %15, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = icmp eq i32 %9, 648
  %23 = and i1 %22, %16
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = and i1 %22, %19
  %26 = select i1 %25, i32 3, i32 0
  br label %27

27:                                               ; preds = %24, %21, %18, %2
  %28 = phi i32 [ 0, %2 ], [ 1, %18 ], [ 2, %21 ], [ %26, %24 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21StyleBuilderConverter22ConvertTextStrokeWidthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = tail call float @_ZN5blink21StyleBuilderConverter16ConvertLineWidthIfEET_RNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600) %0, %"class.blink::CSSValue"* nonnull dereferenceable(3) %1)
  %15 = fdiv float %14, 4.800000e+01
  %16 = fpext float %15 to double
  %17 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %16, i32 3) #15
  %18 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %17, i64 0, i32 0
  br label %21

19:                                               ; preds = %8, %2
  %20 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  br label %21

21:                                               ; preds = %19, %13
  %22 = phi %"class.blink::CSSPrimitiveValue"* [ %20, %19 ], [ %18, %13 ]
  %23 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %24 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %22, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %23) #15
  ret float %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZN5blink21StyleBuilderConverter16ConvertLineWidthIfEET_RNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %15 [
    i32 500, label %12
    i32 71, label %13
    i32 499, label %14
  ]

12:                                               ; preds = %8
  br label %15

13:                                               ; preds = %8
  br label %15

14:                                               ; preds = %8
  br label %15

15:                                               ; preds = %8, %14, %13, %12
  %16 = phi double [ 0.000000e+00, %8 ], [ 5.000000e+00, %14 ], [ 3.000000e+00, %13 ], [ 1.000000e+00, %12 ]
  %17 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %18 = tail call double @_ZNK5blink25CSSToLengthConversionData20ZoomedComputedPixelsEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSToLengthConversionData"* %17, double %16, i32 5) #15
  br label %23

19:                                               ; preds = %2
  %20 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %21 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %22 = tail call double @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIdEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %20, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %21) #15
  br label %23

23:                                               ; preds = %19, %15
  %24 = phi double [ %18, %15 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 2, i32 0
  %26 = bitcast %"class.blink::ComputedStyle"** %25 to %"class.blink::ComputedStyleBase"**
  %27 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %31, i64 0, i32 6
  %33 = load float, float* %32, align 8
  %34 = fpext float %33 to double
  %35 = fmul double %24, %34
  %36 = fcmp ogt double %35, 0.000000e+00
  %37 = fcmp olt double %35, 1.000000e+00
  %38 = and i1 %36, %37
  br i1 %38, label %58, label %39

39:                                               ; preds = %23
  %40 = tail call double @llvm.ceil.f64(double %24) #15
  %41 = fsub double %40, %24
  %42 = fcmp ole double %41, 1.000000e-02
  %43 = fcmp ogt double %24, 0.000000e+00
  %44 = and i1 %43, %42
  br i1 %44, label %51, label %45

45:                                               ; preds = %39
  %46 = fcmp oge double %41, 0x3FEFAE147AE147AE
  %47 = fcmp olt double %24, 0.000000e+00
  %48 = and i1 %47, %46
  %49 = tail call double @llvm.floor.f64(double %24) #15
  %50 = select i1 %48, double %49, double %24
  br label %51

51:                                               ; preds = %39, %45
  %52 = phi double [ %40, %39 ], [ %50, %45 ]
  %53 = fptrunc double %52 to float
  %54 = fcmp ult float %53, 0x47EFFFFFE0000000
  %55 = fcmp ole float %53, 0xC7EFFFFFE0000000
  %56 = select i1 %55, float 0xC7EFFFFFE0000000, float %53
  %57 = select i1 %54, float %56, float 0x47EFFFFFE0000000
  br label %58

58:                                               ; preds = %23, %51
  %59 = phi float [ %57, %51 ], [ 1.000000e+00, %23 ]
  ret float %59
}

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink21StyleBuilderConverter21ConvertTextSizeAdjustERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %12 [
    i32 3, label %24
    i32 405, label %23
  ]

12:                                               ; preds = %8, %2
  %13 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %14 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %13) #15
  %15 = fcmp ult double %14, 0x47EFFFFFE0000000
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = fcmp ole double %14, 0xC7EFFFFFE0000000
  %18 = select i1 %17, double 0xC7EFFFFFE0000000, double %14
  %19 = fptrunc double %18 to float
  br label %20

20:                                               ; preds = %12, %16
  %21 = phi float [ %19, %16 ], [ 0x47EFFFFFE0000000, %12 ]
  %22 = fdiv float %21, 1.000000e+02
  br label %24

23:                                               ; preds = %8
  br label %24

24:                                               ; preds = %8, %23, %20
  %25 = phi float [ %22, %20 ], [ 1.000000e+00, %8 ], [ -1.000000e+00, %23 ]
  ret float %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter28ConvertTextUnderlinePositionERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ult i8 %4, 52
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %47, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.blink::Member.1324"**
  %11 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %73, label %16

16:                                               ; preds = %8
  %17 = zext i32 %14 to i64
  %18 = shl nuw nsw i64 %17, 3
  %19 = add nsw i64 %18, -8
  %20 = lshr exact i64 %19, 3
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %55, label %24

24:                                               ; preds = %16
  %25 = sub nuw nsw i64 %21, %22
  br label %26

26:                                               ; preds = %79, %24
  %27 = phi %"class.blink::Member.1324"* [ %11, %24 ], [ %82, %79 ]
  %28 = phi i32 [ 0, %24 ], [ %81, %79 ]
  %29 = phi i64 [ %25, %24 ], [ %83, %79 ]
  %30 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %31, i64 1, i32 1
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %39 [
    i32 307, label %38
    i32 543, label %35
    i32 648, label %36
    i32 306, label %37
  ]

35:                                               ; preds = %26
  br label %39

36:                                               ; preds = %26
  br label %39

37:                                               ; preds = %26
  br label %39

38:                                               ; preds = %26
  br label %39

39:                                               ; preds = %26, %35, %36, %37, %38
  %40 = phi i32 [ 8, %38 ], [ 4, %37 ], [ 2, %36 ], [ 1, %35 ], [ 0, %26 ]
  %41 = or i32 %40, %28
  %42 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %27, i64 1, i32 0, i32 0
  %43 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 1, i32 1
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %79 [
    i32 307, label %78
    i32 543, label %77
    i32 648, label %76
    i32 306, label %75
  ]

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 4
  switch i32 %50, label %73 [
    i32 307, label %54
    i32 543, label %51
    i32 648, label %52
    i32 306, label %53
  ]

51:                                               ; preds = %47
  br label %73

52:                                               ; preds = %47
  br label %73

53:                                               ; preds = %47
  br label %73

54:                                               ; preds = %47
  br label %73

55:                                               ; preds = %79, %16
  %56 = phi i32 [ undef, %16 ], [ %81, %79 ]
  %57 = phi %"class.blink::Member.1324"* [ %11, %16 ], [ %82, %79 ]
  %58 = phi i32 [ 0, %16 ], [ %81, %79 ]
  %59 = icmp eq i64 %22, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %57, i64 0, i32 0, i32 0
  %62 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %62, i64 1, i32 1
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %70 [
    i32 307, label %69
    i32 543, label %68
    i32 648, label %67
    i32 306, label %66
  ]

66:                                               ; preds = %60
  br label %70

67:                                               ; preds = %60
  br label %70

68:                                               ; preds = %60
  br label %70

69:                                               ; preds = %60
  br label %70

70:                                               ; preds = %60, %66, %67, %68, %69
  %71 = phi i32 [ 8, %69 ], [ 4, %66 ], [ 2, %67 ], [ 1, %68 ], [ 0, %60 ]
  %72 = or i32 %71, %58
  br label %73

73:                                               ; preds = %70, %55, %8, %54, %53, %52, %51, %47
  %74 = phi i32 [ 8, %54 ], [ 4, %53 ], [ 2, %52 ], [ 1, %51 ], [ 0, %47 ], [ 0, %8 ], [ %56, %55 ], [ %72, %70 ]
  ret i32 %74

75:                                               ; preds = %39
  br label %79

76:                                               ; preds = %39
  br label %79

77:                                               ; preds = %39
  br label %79

78:                                               ; preds = %39
  br label %79

79:                                               ; preds = %78, %77, %76, %75, %39
  %80 = phi i32 [ 8, %78 ], [ 4, %75 ], [ 2, %76 ], [ 1, %77 ], [ 0, %39 ]
  %81 = or i32 %80, %41
  %82 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %27, i64 2
  %83 = add i64 %29, -2
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %55, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter26ConvertTextUnderlineOffsetERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !noalias !152
  %6 = icmp ne i8 %5, 2
  %7 = icmp eq %"class.blink::CSSValue"* %2, null
  %8 = or i1 %7, %6
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4, !noalias !152
  %13 = icmp eq i32 %12, 405
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::Length"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 7, i1 false) #15, !alias.scope !155
  br label %19

16:                                               ; preds = %9, %3
  %17 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSPrimitiveValue"*
  %18 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  tail call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* sret %0, %"class.blink::CSSPrimitiveValue"* %17, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %18) #15
  br label %19

19:                                               ; preds = %14, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter26ConvertTransformOperationsERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::TransformOperations"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  tail call void @_ZN5blink16TransformBuilder25CreateTransformOperationsERKNS_8CSSValueERKNS_25CSSToLengthConversionDataE(%"class.blink::TransformOperations"* sret %0, %"class.blink::CSSValue"* dereferenceable(3) %2, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %4) #15
  ret void
}

declare void @_ZN5blink16TransformBuilder25CreateTransformOperationsERKNS_8CSSValueERKNS_25CSSToLengthConversionDataE(%"class.blink::TransformOperations"* sret, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter22ConvertTransformOriginERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::TransformOrigin"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 6, i32 2
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %12, label %20

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %14 = bitcast i8* %13 to %"class.WTF::Vector.1855"*
  %15 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %14, i32 2) #15
  %16 = bitcast %"class.blink::Member.1324"* %15 to %"class.blink::CSSPrimitiveValue"**
  %17 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  %19 = tail call float @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIfEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %17, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %18) #15
  br label %20

20:                                               ; preds = %3, %12
  %21 = phi float [ %19, %12 ], [ 0.000000e+00, %3 ]
  %22 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %24 = bitcast i8* %23 to %"class.WTF::Vector.1855"*
  %25 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %24, i32 0) #15
  %26 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %26, align 8
  call void @_ZN5blink21StyleBuilderConverter21ConvertPositionLengthILNS_10CSSValueIDE306ELS2_307EEENS_6LengthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* nonnull sret %5, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %27)
  %28 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %29 = call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %24, i32 1) #15
  %30 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %30, align 8
  call void @_ZN5blink21StyleBuilderConverter21ConvertPositionLengthILNS_10CSSValueIDE302ELS2_303EEENS_6LengthERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Length"* nonnull sret %7, %"class.blink::StyleResolverState"* dereferenceable(600) %1, %"class.blink::CSSValue"* dereferenceable(3) %31)
  %32 = bitcast %"class.blink::TransformOrigin"* %0 to i64*
  %33 = load i64, i64* %4, align 8
  store i64 %33, i64* %32, align 4
  %34 = and i64 %33, 280375465082880
  %35 = icmp eq i64 %34, 8796093022208
  br i1 %35, label %36, label %38

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.blink::TransformOrigin", %"class.blink::TransformOrigin"* %0, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %37) #15
  br label %38

38:                                               ; preds = %36, %20
  %39 = getelementptr inbounds %"class.blink::TransformOrigin", %"class.blink::TransformOrigin"* %0, i64 0, i32 1
  %40 = bitcast %"class.blink::Length"* %39 to i64*
  %41 = load i64, i64* %6, align 8
  store i64 %41, i64* %40, align 4
  %42 = and i64 %41, 280375465082880
  %43 = icmp eq i64 %42, 8796093022208
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %39) #15
  br label %45

45:                                               ; preds = %38, %44
  %46 = getelementptr inbounds %"class.blink::TransformOrigin", %"class.blink::TransformOrigin"* %0, i64 0, i32 2
  store float %21, float* %46, align 4
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 8
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #15
  br label %51

51:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 8
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %56

56:                                               ; preds = %51, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZN5blink21StyleBuilderConverter15ConvertSnapTypeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 9
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %28, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.blink::CSSIdentifierValue"**
  %11 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %18 [
    i32 811, label %19
    i32 812, label %14
    i32 379, label %15
    i32 378, label %16
    i32 463, label %17
  ]

14:                                               ; preds = %8
  br label %19

15:                                               ; preds = %8
  br label %19

16:                                               ; preds = %8
  br label %19

17:                                               ; preds = %8
  br label %19

18:                                               ; preds = %8
  br label %19

19:                                               ; preds = %18, %17, %16, %15, %14, %8
  %20 = phi i64 [ 0, %18 ], [ 0, %17 ], [ 17179869184, %16 ], [ 12884901888, %15 ], [ 8589934592, %14 ], [ 4294967296, %8 ]
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 5, i32 1
  %22 = bitcast i8* %21 to %"class.blink::CSSIdentifierValue"**
  %23 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 825
  %27 = zext i1 %26 to i32
  br label %38

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  switch i32 %31, label %36 [
    i32 3, label %38
    i32 811, label %37
    i32 812, label %32
    i32 379, label %33
    i32 378, label %34
    i32 463, label %35
  ]

32:                                               ; preds = %28
  br label %38

33:                                               ; preds = %28
  br label %38

34:                                               ; preds = %28
  br label %38

35:                                               ; preds = %28
  br label %38

36:                                               ; preds = %28
  br label %38

37:                                               ; preds = %28
  br label %38

38:                                               ; preds = %28, %37, %36, %35, %34, %33, %32, %19
  %39 = phi i32 [ %27, %19 ], [ 0, %28 ], [ 0, %32 ], [ 0, %33 ], [ 0, %34 ], [ 0, %35 ], [ 0, %36 ], [ 0, %37 ]
  %40 = phi i64 [ 0, %19 ], [ 1, %28 ], [ 0, %32 ], [ 0, %33 ], [ 0, %34 ], [ 0, %35 ], [ 0, %36 ], [ 0, %37 ]
  %41 = phi i64 [ %20, %19 ], [ 0, %28 ], [ 8589934592, %32 ], [ 12884901888, %33 ], [ 17179869184, %34 ], [ 0, %35 ], [ 0, %36 ], [ 4294967296, %37 ]
  %42 = and i64 %41, -4294967296
  %43 = or i64 %42, %40
  %44 = insertvalue { i64, i32 } undef, i64 %43, 0
  %45 = insertvalue { i64, i32 } %44, i32 %39, 1
  ret { i64, i32 } %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink21StyleBuilderConverter16ConvertSnapAlignERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 9
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.blink::CSSIdentifierValue"**
  %11 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %17 [
    i32 310, label %16
    i32 506, label %14
    i32 507, label %15
  ]

14:                                               ; preds = %8
  br label %17

15:                                               ; preds = %8
  br label %17

16:                                               ; preds = %8
  br label %17

17:                                               ; preds = %8, %14, %15, %16
  %18 = phi i32 [ 3, %16 ], [ 2, %15 ], [ 1, %14 ], [ 0, %8 ]
  %19 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 5, i32 1
  %20 = bitcast i8* %19 to %"class.blink::CSSIdentifierValue"**
  %21 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %34 [
    i32 310, label %26
    i32 506, label %24
    i32 507, label %25
  ]

24:                                               ; preds = %17
  br label %34

25:                                               ; preds = %17
  br label %34

26:                                               ; preds = %17
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  switch i32 %30, label %34 [
    i32 310, label %33
    i32 506, label %31
    i32 507, label %32
  ]

31:                                               ; preds = %27
  br label %34

32:                                               ; preds = %27
  br label %34

33:                                               ; preds = %27
  br label %34

34:                                               ; preds = %33, %32, %31, %27, %26, %25, %24, %17
  %35 = phi i32 [ %18, %17 ], [ %18, %24 ], [ %18, %25 ], [ %18, %26 ], [ 3, %33 ], [ 2, %32 ], [ 1, %31 ], [ 0, %27 ]
  %36 = phi i64 [ 0, %17 ], [ 4294967296, %24 ], [ 8589934592, %25 ], [ 12884901888, %26 ], [ 12884901888, %33 ], [ 8589934592, %32 ], [ 4294967296, %31 ], [ 0, %27 ]
  %37 = zext i32 %35 to i64
  %38 = or i64 %36, %37
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TranslateTransformOperation"* @_ZN5blink21StyleBuilderConverter16ConvertTranslateERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 2
  %12 = icmp eq %"class.blink::CSSValue"* %1, null
  %13 = or i1 %12, %11
  br i1 %13, label %14, label %90

14:                                               ; preds = %2
  %15 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %18 = bitcast i8* %17 to %"class.WTF::Vector.1855"*
  store i64 -6148914691236517206, i64* %3, align 8
  %19 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %18, i32 0) #15
  %20 = bitcast %"class.blink::Member.1324"* %19 to %"class.blink::CSSPrimitiveValue"**
  %21 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %4, %"class.blink::CSSPrimitiveValue"* %21, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %22) #15
  %23 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  store i64 -6196950888238546944, i64* %5, align 8
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %27, 1
  br i1 %28, label %29, label %55

29:                                               ; preds = %14
  %30 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %31 = call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %18, i32 1) #15
  %32 = bitcast %"class.blink::Member.1324"* %31 to %"class.blink::CSSPrimitiveValue"**
  %33 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %32, align 8
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %8, %"class.blink::CSSPrimitiveValue"* %33, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %22) #15
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %38

37:                                               ; preds = %29
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #15
  br label %38

38:                                               ; preds = %37, %29
  %39 = load i8, i8* %24, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #15
  br label %42

42:                                               ; preds = %38, %41
  %43 = load i64, i64* %7, align 8
  store i64 %43, i64* %5, align 8
  %44 = load i8, i8* %34, align 1
  %45 = icmp eq i8 %44, 8
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #15
  br label %47

47:                                               ; preds = %46, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  %48 = load i32, i32* %26, align 4
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  %51 = call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %18, i32 2) #15
  %52 = bitcast %"class.blink::Member.1324"* %51 to %"class.blink::CSSPrimitiveValue"**
  %53 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %52, align 8
  %54 = call double @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIdEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"* %53, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %22) #15
  br label %55

55:                                               ; preds = %14, %50, %47
  %56 = phi double [ %54, %50 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %14 ]
  %57 = call noalias i8* @malloc(i64 48) #15
  %58 = bitcast i8* %57 to %"class.blink::TranslateTransformOperation"*
  %59 = getelementptr inbounds i8, i8* %57, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 1, i32* %60, align 4
  %61 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink27TranslateTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds i8, i8* %57, i64 12
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %3, align 8
  store i64 %64, i64* %63, align 4
  %65 = and i64 %64, 280375465082880
  %66 = icmp eq i64 %65, 8796093022208
  br i1 %66, label %67, label %69

67:                                               ; preds = %55
  %68 = bitcast i8* %62 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %68) #15
  br label %69

69:                                               ; preds = %67, %55
  %70 = getelementptr inbounds i8, i8* %57, i64 20
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %5, align 8
  store i64 %72, i64* %71, align 4
  %73 = and i64 %72, 280375465082880
  %74 = icmp eq i64 %73, 8796093022208
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast i8* %70 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %76) #15
  br label %77

77:                                               ; preds = %69, %75
  %78 = getelementptr inbounds i8, i8* %57, i64 32
  %79 = bitcast i8* %78 to double*
  store double %56, double* %79, align 8
  %80 = getelementptr inbounds i8, i8* %57, i64 40
  %81 = bitcast i8* %80 to i32*
  store i32 14, i32* %81, align 8
  %82 = load i8, i8* %24, align 1
  %83 = icmp eq i8 %82, 8
  br i1 %83, label %84, label %85

84:                                               ; preds = %77
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #15
  br label %85

85:                                               ; preds = %77, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  %86 = load i8, i8* %16, align 1
  %87 = icmp eq i8 %86, 8
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #15
  br label %89

89:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  br label %90

90:                                               ; preds = %2, %89
  %91 = phi %"class.blink::TranslateTransformOperation"* [ %58, %89 ], [ null, %2 ]
  ret %"class.blink::TranslateTransformOperation"* %91
}

declare double @_ZNK5blink17CSSPrimitiveValue13ComputeLengthIdEET_RKNS_25CSSToLengthConversionDataE(%"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter15ConvertRotationERKNS_8CSSValueE(%"struct.blink::Rotation"* noalias nocapture sret, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %15 = bitcast i8* %14 to %"class.WTF::Vector.1855"*
  %16 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %15, i32 0) #15
  %17 = bitcast %"class.blink::Member.1324"* %16 to %"class.blink::cssvalue::CSSAxisValue"**
  %18 = load %"class.blink::cssvalue::CSSAxisValue"*, %"class.blink::cssvalue::CSSAxisValue"** %17, align 8
  %19 = tail call double @_ZNK5blink8cssvalue12CSSAxisValue1XEv(%"class.blink::cssvalue::CSSAxisValue"* %18) #15
  %20 = tail call double @_ZNK5blink8cssvalue12CSSAxisValue1YEv(%"class.blink::cssvalue::CSSAxisValue"* %18) #15
  %21 = tail call double @_ZNK5blink8cssvalue12CSSAxisValue1ZEv(%"class.blink::cssvalue::CSSAxisValue"* %18) #15
  %22 = fptrunc double %19 to float
  %23 = fptrunc double %20 to float
  %24 = fptrunc double %21 to float
  %25 = bitcast float %22 to i32
  %26 = bitcast float %23 to i32
  %27 = bitcast float %24 to i32
  %28 = load i32, i32* %10, align 4
  br label %29

29:                                               ; preds = %8, %13
  %30 = phi i32 [ %28, %13 ], [ %11, %8 ]
  %31 = phi i32 [ %25, %13 ], [ 0, %8 ]
  %32 = phi i32 [ %26, %13 ], [ 0, %8 ]
  %33 = phi i32 [ %27, %13 ], [ 1065353216, %8 ]
  %34 = add i32 %30, -1
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %36 = bitcast i8* %35 to %"class.WTF::Vector.1855"*
  %37 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %36, i32 %34) #15
  %38 = bitcast %"class.blink::Member.1324"* %37 to %"class.blink::CSSPrimitiveValue"**
  %39 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %38, align 8
  %40 = tail call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* %39) #15
  br label %41

41:                                               ; preds = %2, %29
  %42 = phi i32 [ %31, %29 ], [ 0, %2 ]
  %43 = phi i32 [ %32, %29 ], [ 0, %2 ]
  %44 = phi i32 [ %33, %29 ], [ 1065353216, %2 ]
  %45 = phi double [ %40, %29 ], [ 0.000000e+00, %2 ]
  %46 = bitcast %"struct.blink::Rotation"* %0 to i32*
  store i32 %42, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.blink::Rotation", %"struct.blink::Rotation"* %0, i64 0, i32 0, i32 1
  %48 = bitcast float* %47 to i32*
  store i32 %43, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.blink::Rotation", %"struct.blink::Rotation"* %0, i64 0, i32 0, i32 2
  %50 = bitcast float* %49 to i32*
  store i32 %44, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.blink::Rotation", %"struct.blink::Rotation"* %0, i64 0, i32 1
  store double %45, double* %51, align 8
  ret void
}

declare double @_ZNK5blink8cssvalue12CSSAxisValue1XEv(%"class.blink::cssvalue::CSSAxisValue"*) local_unnamed_addr #3

declare double @_ZNK5blink8cssvalue12CSSAxisValue1YEv(%"class.blink::cssvalue::CSSAxisValue"*) local_unnamed_addr #3

declare double @_ZNK5blink8cssvalue12CSSAxisValue1ZEv(%"class.blink::cssvalue::CSSAxisValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RotateTransformOperation"* @_ZN5blink21StyleBuilderConverter13ConvertRotateERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.blink::Rotation", align 8
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 2
  %7 = icmp eq %"class.blink::CSSValue"* %1, null
  %8 = or i1 %7, %6
  br i1 %8, label %9, label %37

9:                                                ; preds = %2
  %10 = bitcast %"struct.blink::Rotation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  call void @_ZN5blink21StyleBuilderConverter15ConvertRotationERKNS_8CSSValueE(%"struct.blink::Rotation"* nonnull sret %3, %"class.blink::CSSValue"* dereferenceable(3) %1)
  %11 = tail call noalias i8* @malloc(i64 48) #15
  %12 = bitcast i8* %11 to %"class.blink::RotateTransformOperation"*
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink24RotateTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 16
  %17 = bitcast %"struct.blink::Rotation"* %3 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = bitcast i8* %16 to i32*
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %11, i64 20
  %21 = getelementptr inbounds %"struct.blink::Rotation", %"struct.blink::Rotation"* %3, i64 0, i32 0, i32 1
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast i8* %20 to i32*
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %11, i64 24
  %26 = getelementptr inbounds %"struct.blink::Rotation", %"struct.blink::Rotation"* %3, i64 0, i32 0, i32 2
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = bitcast i8* %25 to i32*
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %11, i64 32
  %31 = getelementptr inbounds %"struct.blink::Rotation", %"struct.blink::Rotation"* %3, i64 0, i32 1
  %32 = bitcast double* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %11, i64 40
  %36 = bitcast i8* %35 to i32*
  store i32 17, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  br label %37

37:                                               ; preds = %2, %9
  %38 = phi %"class.blink::RotateTransformOperation"* [ %12, %9 ], [ null, %2 ]
  ret %"class.blink::RotateTransformOperation"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScaleTransformOperation"* @_ZN5blink21StyleBuilderConverter12ConvertScaleERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %8, label %47

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.WTF::Vector.1855"*
  %11 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %10, i32 0) #15
  %12 = bitcast %"class.blink::Member.1324"* %11 to %"class.blink::CSSPrimitiveValue"**
  %13 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %12, align 8
  %14 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %13) #15
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, 1
  br i1 %18, label %19, label %31

19:                                               ; preds = %8
  %20 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %10, i32 1) #15
  %21 = bitcast %"class.blink::Member.1324"* %20 to %"class.blink::CSSPrimitiveValue"**
  %22 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %21, align 8
  %23 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %22) #15
  %24 = load i32, i32* %16, align 4
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %10, i32 2) #15
  %28 = bitcast %"class.blink::Member.1324"* %27 to %"class.blink::CSSPrimitiveValue"**
  %29 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %28, align 8
  %30 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %29) #15
  br label %31

31:                                               ; preds = %8, %26, %19
  %32 = phi double [ %23, %26 ], [ %23, %19 ], [ %14, %8 ]
  %33 = phi double [ %30, %26 ], [ 1.000000e+00, %19 ], [ 1.000000e+00, %8 ]
  %34 = tail call noalias i8* @malloc(i64 48) #15
  %35 = bitcast i8* %34 to %"class.blink::ScaleTransformOperation"*
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to i32*
  store i32 1, i32* %37, align 4
  %38 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink23ScaleTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %34, i64 16
  %40 = bitcast i8* %39 to double*
  store double %14, double* %40, align 8
  %41 = getelementptr inbounds i8, i8* %34, i64 24
  %42 = bitcast i8* %41 to double*
  store double %32, double* %42, align 8
  %43 = getelementptr inbounds i8, i8* %34, i64 32
  %44 = bitcast i8* %43 to double*
  store double %33, double* %44, align 8
  %45 = getelementptr inbounds i8, i8* %34, i64 40
  %46 = bitcast i8* %45 to i32*
  store i32 12, i32* %46, align 8
  br label %47

47:                                               ; preds = %2, %31
  %48 = phi %"class.blink::ScaleTransformOperation"* [ %35, %31 ], [ null, %2 ]
  ret %"class.blink::ScaleTransformOperation"* %48
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter23ConvertImageOrientationERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 3
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ 1, %2 ], [ %13, %8 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StylePath"* @_ZN5blink21StyleBuilderConverter17ConvertPathOrNoneERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 40
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.blink::StylePath"**
  %11 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %10, align 8
  %12 = icmp eq %"class.blink::StylePath"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #15
  br label %15

15:                                               ; preds = %2, %13, %8
  %16 = phi %"class.blink::StylePath"* [ null, %8 ], [ %11, %13 ], [ null, %2 ]
  ret %"class.blink::StylePath"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::BasicShape"* @_ZN5blink21StyleBuilderConverter17ConvertOffsetPathERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 41
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.blink::BasicShape"* @_ZN5blink18BasicShapeForValueERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* dereferenceable(600) %0, %"class.blink::CSSValue"* dereferenceable(3) %1) #15
  %8 = ptrtoint %"class.blink::BasicShape"* %7 to i64
  br label %21

9:                                                ; preds = %2
  %10 = icmp ne i8 %4, 40
  %11 = icmp eq %"class.blink::CSSValue"* %1, null
  %12 = or i1 %11, %10
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %15 = bitcast i8* %14 to %"class.blink::StylePath"**
  %16 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %15, align 8
  %17 = icmp eq %"class.blink::StylePath"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #15
  %20 = ptrtoint %"class.blink::StylePath"* %16 to i64
  br label %21

21:                                               ; preds = %9, %13, %18, %6
  %22 = phi i64 [ %8, %6 ], [ 0, %13 ], [ %20, %18 ], [ 0, %9 ]
  %23 = inttoptr i64 %22 to %"class.blink::BasicShape"*
  ret %"class.blink::BasicShape"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blink21StyleBuilderConverter37ConvertRegisteredPropertyInitialValueERKNS_8DocumentERKNS_8CSSValueE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %4 = bitcast %"class.blink::CSSToLengthConversionData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %3, i64 0, i32 1, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #15
  store float 1.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %3, i64 0, i32 2
  %7 = bitcast %"class.blink::CSSToLengthConversionData::ViewportSize"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  %8 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %3, i64 0, i32 3
  store float 1.000000e+00, float* %8, align 8
  %9 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %0) #15
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 4
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 95, i32 0
  %12 = call fastcc dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blinkL30ComputeRegisteredPropertyValueERKNS_8DocumentEPKNS_18StyleResolverStateERKNS_25CSSToLengthConversionDataERKNS_8CSSValueERKN3WTF6StringERKNSC_12TextEncodingE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::StyleResolverState"* null, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %3, %"class.blink::CSSValue"* dereferenceable(3) %1, %"class.WTF::String"* dereferenceable(8) %10, %"class.WTF::TextEncoding"* dereferenceable(8) %11)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #15
  ret %"class.blink::CSSValue"* %12
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blinkL30ComputeRegisteredPropertyValueERKNS_8DocumentEPKNS_18StyleResolverStateERKNS_25CSSToLengthConversionDataERKNS_8CSSValueERKN3WTF6StringERKNSC_12TextEncodingE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::StyleResolverState"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), %"class.blink::CSSValue"* dereferenceable(3), %"class.WTF::String"* dereferenceable(8), %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #2 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp ne i8 %12, 53
  %14 = icmp eq %"class.blink::CSSValue"* %3, null
  %15 = or i1 %14, %13
  br i1 %15, label %73, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 18, i32 2
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_16CSSFunctionValueEEEPvm(i64 64) #15
  %21 = bitcast i8* %20 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC2ENS_8CSSValue9ClassTypeENS1_18ValueListSeparatorE(%"class.blink::CSSValueList"* %21, i32 53, i32 1) #15
  %22 = getelementptr inbounds i8, i8* %20, i64 56
  %23 = bitcast i8* %22 to i32*
  store i32 %19, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 2, i32 2
  %29 = bitcast i8* %28 to %"class.blink::Member.1324"**
  %30 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 6, i32 2
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %30, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %71, label %37

37:                                               ; preds = %16
  %38 = getelementptr inbounds i8, i8* %20, i64 8
  %39 = getelementptr inbounds i8, i8* %20, i64 20
  %40 = bitcast i8* %39 to i32*
  %41 = getelementptr inbounds i8, i8* %20, i64 16
  %42 = bitcast i8* %41 to i32*
  %43 = bitcast i8* %38 to %"class.blink::Member.1324"**
  %44 = bitcast i8* %38 to %"class.WTF::Vector.1855"*
  br label %45

45:                                               ; preds = %37, %68
  %46 = phi %"class.blink::Member.1324"* [ %30, %37 ], [ %69, %68 ]
  %47 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %47, align 8
  %49 = tail call fastcc dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blinkL30ComputeRegisteredPropertyValueERKNS_8DocumentEPKNS_18StyleResolverStateERKNS_25CSSToLengthConversionDataERKNS_8CSSValueERKN3WTF6StringERKNSC_12TextEncodingE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::StyleResolverState"* %1, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %2, %"class.blink::CSSValue"* dereferenceable(3) %48, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::TextEncoding"* dereferenceable(8) %5)
  %50 = load i32, i32* %40, align 4
  %51 = load i32, i32* %42, align 8
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %67, label %53, !prof !21

53:                                               ; preds = %45
  %54 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %43, align 8
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %54, i64 %55
  %57 = ptrtoint %"class.blink::CSSValue"* %49 to i64
  %58 = bitcast %"class.blink::Member.1324"* %56 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %49, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #15
  br label %64

64:                                               ; preds = %61, %53
  %65 = load i32, i32* %40, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %40, align 4
  br label %68

67:                                               ; preds = %45
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.1855"* %44, %"class.blink::CSSValue"* dereferenceable(3) %49) #15
  br label %68

68:                                               ; preds = %64, %67
  %69 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %46, i64 1
  %70 = icmp eq %"class.blink::Member.1324"* %69, %35
  br i1 %70, label %71, label %45

71:                                               ; preds = %68, %16
  %72 = bitcast i8* %20 to %"class.blink::CSSValue"*
  br label %236

73:                                               ; preds = %6
  %74 = icmp ult i8 %12, 52
  %75 = or i1 %14, %74
  br i1 %75, label %132, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 0, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = and i8 %78, 3
  %80 = zext i8 %79 to i32
  %81 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #15
  %82 = bitcast i8* %81 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %82, i32 %80) #15
  %83 = getelementptr inbounds i8, i8* %81, i64 -4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = or i16 %85, 1
  store atomic i16 %86, i16* %84 release, align 2
  %87 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 2, i32 2
  %88 = bitcast i8* %87 to %"class.blink::Member.1324"**
  %89 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 6, i32 2
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %89, i64 %93
  %95 = icmp eq i32 %92, 0
  br i1 %95, label %130, label %96

96:                                               ; preds = %76
  %97 = getelementptr inbounds i8, i8* %81, i64 8
  %98 = getelementptr inbounds i8, i8* %81, i64 20
  %99 = bitcast i8* %98 to i32*
  %100 = getelementptr inbounds i8, i8* %81, i64 16
  %101 = bitcast i8* %100 to i32*
  %102 = bitcast i8* %97 to %"class.blink::Member.1324"**
  %103 = bitcast i8* %97 to %"class.WTF::Vector.1855"*
  br label %104

104:                                              ; preds = %96, %127
  %105 = phi %"class.blink::Member.1324"* [ %89, %96 ], [ %128, %127 ]
  %106 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %106, align 8
  %108 = tail call fastcc dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blinkL30ComputeRegisteredPropertyValueERKNS_8DocumentEPKNS_18StyleResolverStateERKNS_25CSSToLengthConversionDataERKNS_8CSSValueERKN3WTF6StringERKNSC_12TextEncodingE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::StyleResolverState"* %1, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %2, %"class.blink::CSSValue"* dereferenceable(3) %107, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::TextEncoding"* dereferenceable(8) %5)
  %109 = load i32, i32* %99, align 4
  %110 = load i32, i32* %101, align 8
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %126, label %112, !prof !21

112:                                              ; preds = %104
  %113 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %102, align 8
  %114 = zext i32 %109 to i64
  %115 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %113, i64 %114
  %116 = ptrtoint %"class.blink::CSSValue"* %108 to i64
  %117 = bitcast %"class.blink::Member.1324"* %115 to i64*
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %108, i64 0, i32 0
  %122 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %121) #15
  br label %123

123:                                              ; preds = %120, %112
  %124 = load i32, i32* %99, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %99, align 4
  br label %127

126:                                              ; preds = %104
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.1855"* %103, %"class.blink::CSSValue"* dereferenceable(3) %108) #15
  br label %127

127:                                              ; preds = %123, %126
  %128 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %105, i64 1
  %129 = icmp eq %"class.blink::Member.1324"* %128, %94
  br i1 %129, label %130, label %104

130:                                              ; preds = %127, %76
  %131 = bitcast i8* %81 to %"class.blink::CSSValue"*
  br label %236

132:                                              ; preds = %73
  %133 = icmp ugt i8 %12, 1
  %134 = bitcast %"class.blink::CSSValue"* %3 to %"class.blink::CSSPrimitiveValue"*
  %135 = or i1 %14, %133
  br i1 %135, label %197, label %136

136:                                              ; preds = %132
  %137 = icmp eq i8 %12, 1
  br i1 %137, label %142, label %138

138:                                              ; preds = %136
  %139 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue4IsPxEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  br i1 %139, label %236, label %140

140:                                              ; preds = %138
  %141 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  br i1 %141, label %236, label %142

142:                                              ; preds = %140, %136
  %143 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  br i1 %143, label %148, label %144

144:                                              ; preds = %142
  %145 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue32IsCalculatedPercentageWithLengthEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  br i1 %147, label %148, label %162

148:                                              ; preds = %146, %144, %142
  %149 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #15
  %150 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %151 = bitcast %"class.blink::CSSToLengthConversionData"* %9 to i8*
  store i64 -6148914691236517206, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %151) #15
  %152 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %2, i64 0, i32 0
  %153 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %152, align 8, !noalias !158
  %154 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %2, i64 0, i32 1
  %155 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %2, i64 0, i32 2
  call void @_ZN5blink25CSSToLengthConversionDataC1EPKNS_13ComputedStyleERKNS0_9FontSizesERKNS0_12ViewportSizeEf(%"class.blink::CSSToLengthConversionData"* nonnull %9, %"class.blink::ComputedStyle"* %153, %"class.blink::CSSToLengthConversionData::FontSizes"* dereferenceable(24) %154, %"class.blink::CSSToLengthConversionData::ViewportSize"* dereferenceable(16) %155, float 1.000000e+00) #15
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %8, %"class.blink::CSSPrimitiveValue"* nonnull %134, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %151) #15
  %156 = call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17CSSPrimitiveValue16CreateFromLengthERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %8, float 1.000000e+00) #15
  %157 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %156, i64 0, i32 0
  %158 = load i8, i8* %150, align 1
  %159 = icmp eq i8 %158, 8
  br i1 %159, label %160, label %161

160:                                              ; preds = %148
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #15
  br label %161

161:                                              ; preds = %148, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #15
  br label %236

162:                                              ; preds = %146
  %163 = load i8, i8* %11, align 1
  %164 = icmp eq i8 %163, 1
  br i1 %164, label %165, label %177

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 2, i32 2
  %167 = bitcast i8* %166 to %"class.blink::CSSMathExpressionNode"**
  %168 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %168, i64 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %177

172:                                              ; preds = %165
  %173 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %134) #15
  %174 = tail call double @llvm.round.f64(double %173)
  %175 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %174, i32 31) #15
  %176 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %175, i64 0, i32 0, i32 0
  br label %236

177:                                              ; preds = %165, %162
  %178 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue7IsAngleEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  br i1 %178, label %179, label %183

179:                                              ; preds = %177
  %180 = tail call double @_ZNK5blink17CSSPrimitiveValue14ComputeDegreesEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  %181 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %180, i32 19) #15
  %182 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %181, i64 0, i32 0, i32 0
  br label %236

183:                                              ; preds = %177
  %184 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsTimeEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  br i1 %184, label %185, label %189

185:                                              ; preds = %183
  %186 = tail call double @_ZNK5blink17CSSPrimitiveValue14ComputeSecondsEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  %187 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %186, i32 24) #15
  %188 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %187, i64 0, i32 0, i32 0
  br label %236

189:                                              ; preds = %183
  %190 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsResolutionEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  br i1 %190, label %193, label %191

191:                                              ; preds = %189
  %192 = load i8, i8* %11, align 1
  br label %197

193:                                              ; preds = %189
  %194 = tail call double @_ZNK5blink17CSSPrimitiveValue19ComputeDotsPerPixelEv(%"class.blink::CSSPrimitiveValue"* nonnull %134) #15
  %195 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %194, i32 27) #15
  %196 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %195, i64 0, i32 0, i32 0
  br label %236

197:                                              ; preds = %191, %132
  %198 = phi i8 [ %192, %191 ], [ %12, %132 ]
  %199 = icmp ne i8 %198, 2
  %200 = or i1 %14, %199
  br i1 %200, label %227, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 1, i32 1
  %203 = bitcast i8* %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 147
  br i1 %205, label %236, label %206

206:                                              ; preds = %201
  %207 = tail call zeroext i1 @_ZN5blink10StyleColor14IsColorKeywordENS_10CSSValueIDE(i32 %204) #15
  br i1 %207, label %210, label %208

208:                                              ; preds = %206
  %209 = load i8, i8* %11, align 1
  br label %227

210:                                              ; preds = %206
  %211 = icmp eq %"class.blink::StyleResolverState"* %1, null
  br i1 %211, label %221, label %212

212:                                              ; preds = %210
  %213 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 2, i32 0
  %214 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %214, i64 0, i32 0, i32 9
  %216 = bitcast [20 x i8]* %215 to i160*
  %217 = load i160, i160* %216, align 8
  %218 = lshr i160 %217, 114
  %219 = trunc i160 %218 to i32
  %220 = and i32 %219, 1
  br label %221

221:                                              ; preds = %210, %212
  %222 = phi i32 [ %220, %212 ], [ 0, %210 ]
  %223 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 62
  %224 = tail call i32 @_ZNK5blink14TextLinkColors17ColorFromCSSValueERKNS_8CSSValueENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::TextLinkColors"* %223, %"class.blink::CSSValue"* nonnull dereferenceable(3) %3, i32 0, i32 %222, i1 zeroext false) #15
  %225 = tail call %"class.blink::cssvalue::CSSColor"* @_ZN5blink8cssvalue8CSSColor6CreateEj(i32 %224) #15
  %226 = getelementptr inbounds %"class.blink::cssvalue::CSSColor", %"class.blink::cssvalue::CSSColor"* %225, i64 0, i32 0
  br label %236

227:                                              ; preds = %208, %197
  %228 = phi i8 [ %209, %208 ], [ %198, %197 ]
  %229 = icmp ne i8 %228, 8
  %230 = or i1 %14, %229
  br i1 %230, label %236, label %231

231:                                              ; preds = %227
  %232 = bitcast %"class.blink::CSSValue"* %3 to %"class.blink::cssvalue::CSSURIValue"*
  %233 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %233) #15
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %10, %"class.WTF::String"* dereferenceable(8) %4) #15
  %234 = call %"class.blink::cssvalue::CSSURIValue"* @_ZNK5blink8cssvalue11CSSURIValue24ValueWithURLMadeAbsoluteERKNS_4KURLERKN3WTF12TextEncodingE(%"class.blink::cssvalue::CSSURIValue"* nonnull %232, %"class.blink::KURL"* nonnull dereferenceable(112) %10, %"class.WTF::TextEncoding"* dereferenceable(8) %5) #15
  %235 = getelementptr inbounds %"class.blink::cssvalue::CSSURIValue", %"class.blink::cssvalue::CSSURIValue"* %234, i64 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %233) #15
  br label %236

236:                                              ; preds = %71, %130, %221, %201, %161, %179, %185, %193, %172, %140, %138, %227, %231
  %237 = phi %"class.blink::CSSValue"* [ %235, %231 ], [ %3, %227 ], [ %131, %130 ], [ %72, %71 ], [ %3, %201 ], [ %226, %221 ], [ %3, %138 ], [ %3, %140 ], [ %176, %172 ], [ %196, %193 ], [ %188, %185 ], [ %182, %179 ], [ %157, %161 ]
  ret %"class.blink::CSSValue"* %237
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blink21StyleBuilderConverter30ConvertRegisteredPropertyValueERKNS_18StyleResolverStateERKNS_8CSSValueERKN3WTF6StringERKNS7_12TextEncodingE(%"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3), %"class.WTF::String"* dereferenceable(8), %"class.WTF::TextEncoding"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 1
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %0, i64 0, i32 3
  %8 = tail call fastcc dereferenceable(3) %"class.blink::CSSValue"* @_ZN5blinkL30ComputeRegisteredPropertyValueERKNS_8DocumentEPKNS_18StyleResolverStateERKNS_25CSSToLengthConversionDataERKNS_8CSSValueERKN3WTF6StringERKNSC_12TextEncodingE(%"class.blink::Document"* dereferenceable(2848) %6, %"class.blink::StyleResolverState"* %0, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %7, %"class.blink::CSSValue"* dereferenceable(3) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::TextEncoding"* dereferenceable(8) %3)
  ret %"class.blink::CSSValue"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::CSSVariableData"* @_ZN5blink21StyleBuilderConverter37ConvertRegisteredPropertyVariableDataERKNS_8CSSValueEb(%"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CSSTokenizer", align 8
  %5 = alloca %"class.WTF::Vector.1885", align 8
  %6 = alloca %"class.WTF::Vector.1897", align 8
  %7 = alloca %"class.WTF::Vector.558", align 8
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %0) #15
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %9, align 8
  %11 = bitcast %"class.blink::CSSTokenizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 0) #15
  %12 = bitcast %"class.WTF::Vector.1885"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.WTF::Vector.1885", %"class.WTF::Vector.1885"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector.1885", %"class.WTF::Vector.1885"* %5, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.1885", %"class.WTF::Vector.1885"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #15
  %16 = bitcast %"class.WTF::Vector.1897"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %16) #15
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.1897"* nonnull sret %6, %"class.blink::CSSTokenizer"* nonnull %4) #15
  %17 = getelementptr inbounds %"class.WTF::Vector.1897", %"class.WTF::Vector.1897"* %6, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector.1897", %"class.WTF::Vector.1897"* %6, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1885"* nonnull %5, %"class.blink::CSSParserToken"* %18, i32 %20) #15
  %21 = load i32, i32* %19, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !21

23:                                               ; preds = %2
  store i32 0, i32* %19, align 4
  br label %24

24:                                               ; preds = %23, %2
  %25 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %17, align 8
  %26 = getelementptr inbounds %"class.WTF::Vector.1897", %"class.WTF::Vector.1897"* %6, i64 0, i32 0, i32 1, i64 0
  %27 = bitcast i8* %26 to %"class.blink::CSSParserToken"*
  %28 = icmp eq %"class.blink::CSSParserToken"* %25, %27
  br i1 %28, label %31, label %29, !prof !49

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::Vector.1897", %"class.WTF::Vector.1897"* %6, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1898"* nonnull %30, %"class.blink::CSSParserToken"* %25) #15
  br label %31

31:                                               ; preds = %24, %29
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %16) #15
  %32 = bitcast %"class.WTF::Vector.558"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #15
  %33 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %7, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %7, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #15
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.558"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %36 = bitcast %"class.WTF::Vector.1885"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i32, i32* %14, align 8
  %39 = load i32, i32* %15, align 4
  %40 = bitcast %"class.WTF::Vector.558"* %7 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i32, i32* %34, align 8
  %43 = load i32, i32* %35, align 4
  store atomic i64 0, i64* %36 monotonic, align 8
  store i32 0, i32* %14, align 8
  store i32 0, i32* %15, align 4
  store atomic i64 0, i64* %40 monotonic, align 8
  store i32 0, i32* %34, align 8
  store i32 0, i32* %35, align 4
  %44 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %45 = call noalias i8* @malloc(i64 72) #15
  %46 = bitcast i8* %45 to %"class.blink::CSSVariableData"*
  %47 = zext i1 %1 to i8
  %48 = bitcast i8* %45 to i32*
  store i32 1, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = getelementptr inbounds i8, i8* %45, i64 16
  %51 = bitcast i8* %50 to i32*
  %52 = getelementptr inbounds i8, i8* %45, i64 20
  %53 = bitcast i8* %52 to i32*
  %54 = bitcast i8* %49 to i64*
  store atomic i64 %41, i64* %54 monotonic, align 8
  store i32 %42, i32* %51, align 4
  store i32 %43, i32* %53, align 4
  %55 = getelementptr inbounds i8, i8* %45, i64 24
  %56 = getelementptr inbounds i8, i8* %45, i64 32
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds i8, i8* %45, i64 36
  %59 = bitcast i8* %58 to i32*
  %60 = bitcast i8* %55 to i64*
  store atomic i64 %37, i64* %60 monotonic, align 8
  store i32 %38, i32* %57, align 4
  store i32 %39, i32* %59, align 4
  %61 = getelementptr inbounds i8, i8* %45, i64 40
  %62 = bitcast i8* %61 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %63 = getelementptr inbounds i8, i8* %45, i64 48
  store i8 %47, i8* %63, align 8
  %64 = getelementptr inbounds i8, i8* %45, i64 49
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds i8, i8* %45, i64 50
  store i8 0, i8* %65, align 2
  %66 = getelementptr inbounds i8, i8* %45, i64 51
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = getelementptr inbounds i8, i8* %45, i64 56
  %70 = bitcast i8* %69 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %70, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %31
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %87

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #15
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %90, !prof !21

86:                                               ; preds = %77
  call void @llvm.trap() #15
  unreachable

87:                                               ; preds = %31, %72
  %88 = getelementptr inbounds i8, i8* %45, i64 64
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  br label %129

90:                                               ; preds = %77
  %91 = trunc i33 %83 to i32
  store i32 %91, i32* %78, align 4
  %92 = load %"class.WTF::String"*, %"class.WTF::String"** %33, align 8
  %93 = getelementptr inbounds i8, i8* %45, i64 64
  %94 = bitcast i8* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = icmp eq %"class.WTF::String"* %92, null
  br i1 %95, label %129, label %96, !prof !49

96:                                               ; preds = %90
  %97 = bitcast %"class.WTF::String"* %92 to i8*
  %98 = load i32, i32* %35, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %127, label %100, !prof !21

100:                                              ; preds = %96
  %101 = zext i32 %98 to i64
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 %101
  br label %103

103:                                              ; preds = %121, %100
  %104 = phi %"class.WTF::String"* [ %122, %121 ], [ %92, %100 ]
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #15
  br label %121

121:                                              ; preds = %120, %117, %103
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 1
  %123 = icmp eq %"class.WTF::String"* %122, %102
  br i1 %123, label %124, label %103

124:                                              ; preds = %121
  store i32 0, i32* %35, align 4
  %125 = bitcast %"class.WTF::Vector.558"* %7 to i8**
  %126 = load i8*, i8** %125, align 8
  br label %127

127:                                              ; preds = %124, %96
  %128 = phi i8* [ %126, %124 ], [ %97, %96 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %128) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %33, align 8
  br label %129

129:                                              ; preds = %87, %90, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #15
  %130 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %131 = icmp eq %"class.blink::CSSParserToken"* %130, null
  %132 = bitcast %"class.blink::CSSParserToken"* %130 to i8*
  br i1 %131, label %138, label %133, !prof !49

133:                                              ; preds = %129
  %134 = load i32, i32* %15, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %137, label %136, !prof !21

136:                                              ; preds = %133
  store i32 0, i32* %15, align 4
  br label %137

137:                                              ; preds = %136, %133
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %132) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %13, align 8
  br label %138

138:                                              ; preds = %129, %137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %11) #15
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #15
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret %"class.blink::CSSVariableData"* %46
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #3

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #3

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.1897"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !49

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !21

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #15
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.558"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !21

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.1892", %"class.WTF::Vector.1892"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !49

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.1892", %"class.WTF::Vector.1892"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1893"* %53, i32* %48) #15
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #15
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleBuilderConverter20ConvertIntrinsicSizeERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::LengthSize"* noalias sret, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 2
  %13 = icmp eq %"class.blink::CSSValue"* %2, null
  %14 = or i1 %13, %12
  br i1 %14, label %37, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 405
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 7, i1 false) #15, !alias.scope !161
  %22 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 7, i1 false) #15, !alias.scope !164
  %23 = bitcast %"class.blink::LengthSize"* %0 to i64*
  %24 = load i64, i64* %4, align 8
  store i64 %24, i64* %23, align 4
  %25 = and i64 %24, 280375465082880
  %26 = icmp eq i64 %25, 8796093022208
  br i1 %26, label %27, label %29

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %28) #15
  br label %29

29:                                               ; preds = %27, %20
  %30 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::Length"* %30 to i64*
  %32 = load i64, i64* %5, align 8
  store i64 %32, i64* %31, align 4
  %33 = and i64 %32, 280375465082880
  %34 = icmp eq i64 %33, 8796093022208
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %36

36:                                               ; preds = %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  br label %70

37:                                               ; preds = %3, %15
  %38 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #15
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %40 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %41 = bitcast i8* %40 to %"class.blink::CSSPrimitiveValue"**
  store i64 -6148914691236517206, i64* %6, align 8
  %42 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %7, %"class.blink::CSSPrimitiveValue"* %42, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %43) #15
  %44 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #15
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %46 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 5, i32 1
  %47 = bitcast i8* %46 to %"class.blink::CSSPrimitiveValue"**
  store i64 -6148914691236517206, i64* %8, align 8
  %48 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %47, align 8
  call void @_ZNK5blink17CSSPrimitiveValue15ConvertToLengthERKNS_25CSSToLengthConversionDataE(%"class.blink::Length"* nonnull sret %9, %"class.blink::CSSPrimitiveValue"* %48, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %43) #15
  %49 = bitcast %"class.blink::LengthSize"* %0 to i64*
  %50 = load i64, i64* %6, align 8
  store i64 %50, i64* %49, align 4
  %51 = and i64 %50, 280375465082880
  %52 = icmp eq i64 %51, 8796093022208
  br i1 %52, label %53, label %55

53:                                               ; preds = %37
  %54 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %53, %37
  %56 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1
  %57 = bitcast %"class.blink::Length"* %56 to i64*
  %58 = load i64, i64* %8, align 8
  store i64 %58, i64* %57, align 4
  %59 = and i64 %58, 280375465082880
  %60 = icmp eq i64 %59, 8796093022208
  br i1 %60, label %61, label %62

61:                                               ; preds = %55
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %56) #15
  br label %62

62:                                               ; preds = %55, %61
  %63 = load i8, i8* %45, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #15
  br label %66

66:                                               ; preds = %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #15
  %67 = load i8, i8* %39, align 1
  %68 = icmp eq i8 %67, 8
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #15
  br label %70

70:                                               ; preds = %69, %66, %36
  %71 = phi i8* [ %21, %36 ], [ %38, %66 ], [ %38, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, float } @_ZN5blink21StyleBuilderConverter18ConvertAspectRatioERKNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #8 align 2 {
  %3 = alloca %"class.blink::StyleAspectRatio", align 8
  %4 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 2
  %7 = icmp eq %"class.blink::CSSValue"* %1, null
  %8 = or i1 %7, %6
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 405
  br i1 %13, label %85, label %14

14:                                               ; preds = %2, %9
  %15 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %21 = bitcast i8* %20 to %"class.WTF::Vector.1855"*
  %22 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %21, i32 0) #15
  %23 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %24, i64 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp ne i8 %26, 2
  %28 = icmp eq %"class.blink::CSSValue"* %24, null
  %29 = or i1 %28, %27
  br i1 %29, label %30, label %32

30:                                               ; preds = %19
  %31 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %21, i32 1) #15
  br label %32

32:                                               ; preds = %14, %30, %19
  %33 = phi i8 [ 1, %19 ], [ 1, %30 ], [ 2, %14 ]
  %34 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %35 = bitcast i8* %34 to %"class.WTF::Vector.1855"*
  %36 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %35, i32 0) #15
  %37 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp ult i8 %40, 52
  %42 = bitcast %"class.blink::CSSValue"* %38 to %"class.blink::CSSValueList"*
  %43 = icmp eq %"class.blink::CSSValue"* %38, null
  %44 = or i1 %43, %41
  br i1 %44, label %45, label %54

45:                                               ; preds = %32
  %46 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %35, i32 1) #15
  %47 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %48, i64 0, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = icmp ugt i8 %50, 51
  %52 = bitcast %"class.blink::CSSValue"* %48 to %"class.blink::CSSValueList"*
  %53 = select i1 %51, %"class.blink::CSSValueList"* %52, %"class.blink::CSSValueList"* null
  br label %54

54:                                               ; preds = %45, %32
  %55 = phi %"class.blink::CSSValueList"* [ %42, %32 ], [ %53, %45 ]
  %56 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %55, i64 0, i32 1, i32 0
  %57 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %56, i32 0) #15
  %58 = bitcast %"class.blink::Member.1324"* %57 to %"class.blink::CSSPrimitiveValue"**
  %59 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %58, align 8
  %60 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %59) #15
  %61 = fcmp ult double %60, 0x47EFFFFFE0000000
  br i1 %61, label %62, label %66

62:                                               ; preds = %54
  %63 = fcmp ole double %60, 0xC7EFFFFFE0000000
  %64 = select i1 %63, double 0xC7EFFFFFE0000000, double %60
  %65 = fptrunc double %64 to float
  br label %66

66:                                               ; preds = %62, %54
  %67 = phi float [ %65, %62 ], [ 0x47EFFFFFE0000000, %54 ]
  %68 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 2
  br i1 %70, label %71, label %81

71:                                               ; preds = %66
  %72 = tail call dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"* %56, i32 1) #15
  %73 = bitcast %"class.blink::Member.1324"* %72 to %"class.blink::CSSPrimitiveValue"**
  %74 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %73, align 8
  %75 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %74) #15
  %76 = fcmp ult double %75, 0x47EFFFFFE0000000
  br i1 %76, label %77, label %81

77:                                               ; preds = %71
  %78 = fcmp ole double %75, 0xC7EFFFFFE0000000
  %79 = select i1 %78, double 0xC7EFFFFFE0000000, double %75
  %80 = fptrunc double %79 to float
  br label %81

81:                                               ; preds = %66, %71, %77
  %82 = phi float [ 1.000000e+00, %66 ], [ %80, %77 ], [ 0x47EFFFFFE0000000, %71 ]
  %83 = insertelement <2 x float> undef, float %67, i32 0
  %84 = insertelement <2 x float> %83, float %82, i32 1
  br label %85

85:                                               ; preds = %9, %81
  %86 = phi i8 [ %33, %81 ], [ 0, %9 ]
  %87 = phi <2 x float> [ %84, %81 ], [ zeroinitializer, %9 ]
  %88 = phi float [ %82, %81 ], [ 0.000000e+00, %9 ]
  %89 = getelementptr inbounds %"class.blink::StyleAspectRatio", %"class.blink::StyleAspectRatio"* %3, i64 0, i32 0
  store i8 %86, i8* %89, align 8
  %90 = getelementptr inbounds %"class.blink::StyleAspectRatio", %"class.blink::StyleAspectRatio"* %3, i64 0, i32 1
  %91 = bitcast %"class.blink::FloatSize"* %90 to <2 x float>*
  store <2 x float> %87, <2 x float>* %91, align 4
  %92 = bitcast %"class.blink::StyleAspectRatio"* %3 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = insertvalue { i64, float } undef, i64 %93, 0
  %95 = insertvalue { i64, float } %94, float %88, 1
  ret { i64, float } %95
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink21StyleBuilderConverter29ConvertInternalAlignSelfBlockERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 310
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink21StyleBuilderConverter30ConvertInternalEmptyLineHeightERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 855
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink21StyleBuilderConverter11ConvertPageERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 6
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.WTF::StringImpl"**
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #15
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !21

27:                                               ; preds = %18
  tail call void @llvm.trap() #15
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %28, %13, %8, %2
  %31 = phi %"class.WTF::StringImpl"* [ null, %2 ], [ null, %8 ], [ %11, %13 ], [ %11, %28 ]
  ret %"class.WTF::StringImpl"* %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter19ConvertRubyPositionERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 2
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %13 [
    i32 647, label %15
    i32 648, label %12
  ]

12:                                               ; preds = %8
  br label %15

13:                                               ; preds = %8
  %14 = add nsw i32 %11, -645
  br label %15

15:                                               ; preds = %12, %13, %8, %2
  %16 = phi i32 [ 1, %2 ], [ 1, %8 ], [ %14, %13 ], [ 0, %12 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21StyleBuilderConverter22ConvertScrollbarGutterERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ult i8 %4, 52
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %47, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.blink::Member.1324"**
  %11 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %73, label %16

16:                                               ; preds = %8
  %17 = zext i32 %14 to i64
  %18 = shl nuw nsw i64 %17, 3
  %19 = add nsw i64 %18, -8
  %20 = lshr exact i64 %19, 3
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %55, label %24

24:                                               ; preds = %16
  %25 = sub nuw nsw i64 %21, %22
  br label %26

26:                                               ; preds = %79, %24
  %27 = phi %"class.blink::Member.1324"* [ %11, %24 ], [ %82, %79 ]
  %28 = phi i32 [ 0, %24 ], [ %81, %79 ]
  %29 = phi i64 [ %25, %24 ], [ %83, %79 ]
  %30 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %31, i64 1, i32 1
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %39 [
    i32 865, label %38
    i32 864, label %35
    i32 456, label %36
    i32 463, label %37
  ]

35:                                               ; preds = %26
  br label %39

36:                                               ; preds = %26
  br label %39

37:                                               ; preds = %26
  br label %39

38:                                               ; preds = %26
  br label %39

39:                                               ; preds = %26, %35, %36, %37, %38
  %40 = phi i32 [ 8, %38 ], [ 4, %37 ], [ 2, %36 ], [ 1, %35 ], [ 0, %26 ]
  %41 = or i32 %40, %28
  %42 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %27, i64 1, i32 0, i32 0
  %43 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 1, i32 1
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %79 [
    i32 865, label %78
    i32 864, label %77
    i32 456, label %76
    i32 463, label %75
  ]

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 4
  switch i32 %50, label %73 [
    i32 865, label %54
    i32 864, label %51
    i32 456, label %52
    i32 463, label %53
  ]

51:                                               ; preds = %47
  br label %73

52:                                               ; preds = %47
  br label %73

53:                                               ; preds = %47
  br label %73

54:                                               ; preds = %47
  br label %73

55:                                               ; preds = %79, %16
  %56 = phi i32 [ undef, %16 ], [ %81, %79 ]
  %57 = phi %"class.blink::Member.1324"* [ %11, %16 ], [ %82, %79 ]
  %58 = phi i32 [ 0, %16 ], [ %81, %79 ]
  %59 = icmp eq i64 %22, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %57, i64 0, i32 0, i32 0
  %62 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %62, i64 1, i32 1
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %70 [
    i32 865, label %69
    i32 864, label %68
    i32 456, label %67
    i32 463, label %66
  ]

66:                                               ; preds = %60
  br label %70

67:                                               ; preds = %60
  br label %70

68:                                               ; preds = %60
  br label %70

69:                                               ; preds = %60
  br label %70

70:                                               ; preds = %60, %66, %67, %68, %69
  %71 = phi i32 [ 8, %69 ], [ 4, %66 ], [ 2, %67 ], [ 1, %68 ], [ 0, %60 ]
  %72 = or i32 %71, %58
  br label %73

73:                                               ; preds = %70, %55, %8, %54, %53, %52, %51, %47
  %74 = phi i32 [ 8, %54 ], [ 4, %53 ], [ 2, %52 ], [ 1, %51 ], [ 0, %47 ], [ 0, %8 ], [ %56, %55 ], [ %72, %70 ]
  ret i32 %74

75:                                               ; preds = %39
  br label %79

76:                                               ; preds = %39
  br label %79

77:                                               ; preds = %39
  br label %79

78:                                               ; preds = %39
  br label %79

79:                                               ; preds = %78, %77, %76, %75, %39
  %80 = phi i32 [ 8, %78 ], [ 4, %75 ], [ 2, %76 ], [ 1, %77 ], [ 0, %39 ]
  %81 = or i32 %80, %41
  %82 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %27, i64 2
  %83 = add i64 %29, -2
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %55, label %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ShapeClipPathOperationD2Ev(%"class.blink::ShapeClipPathOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeClipPathOperation", %"class.blink::ShapeClipPathOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22ShapeClipPathOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ShapeClipPathOperation", %"class.blink::ShapeClipPathOperation"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %3, align 8
  %5 = icmp eq %"class.blink::BasicShape"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  %9 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.1"* %13 to %"class.blink::BasicShape"*
  %15 = bitcast %"class.base::RefCounted.1"* %13 to void (%"class.blink::BasicShape"*)***
  %16 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %16, i64 1
  %18 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %17, align 8
  tail call void %18(%"class.blink::BasicShape"* nonnull %14) #15
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ShapeClipPathOperationD0Ev(%"class.blink::ShapeClipPathOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeClipPathOperation", %"class.blink::ShapeClipPathOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22ShapeClipPathOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ShapeClipPathOperation", %"class.blink::ShapeClipPathOperation"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %3, align 8
  %5 = icmp eq %"class.blink::BasicShape"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  %9 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.1"* %13 to %"class.blink::BasicShape"*
  %15 = bitcast %"class.base::RefCounted.1"* %13 to void (%"class.blink::BasicShape"*)***
  %16 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %16, i64 1
  %18 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %17, align 8
  tail call void %18(%"class.blink::BasicShape"* nonnull %14) #15
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = bitcast %"class.blink::ShapeClipPathOperation"* %0 to i8*
  tail call void @free(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22ShapeClipPathOperation7GetTypeEv(%"class.blink::ShapeClipPathOperation"*) unnamed_addr #2 comdat align 2 {
  ret i32 1
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare void @_ZN5blink14NinePieceImageC1Ev(%"class.blink::NinePieceImage"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::LengthBox"* @_ZN5blink9LengthBoxaSEOS0_(%"class.blink::LengthBox"*, %"class.blink::LengthBox"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %8) #15
  br label %9

9:                                                ; preds = %7, %2
  %10 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 8
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %3) #15
  br label %14

14:                                               ; preds = %9, %13
  %15 = bitcast %"class.blink::LengthBox"* %1 to i64*
  %16 = bitcast %"class.blink::LengthBox"* %0 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 4
  %18 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %24

23:                                               ; preds = %14
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %19) #15
  br label %24

24:                                               ; preds = %23, %14
  %25 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %29

29:                                               ; preds = %24, %28
  %30 = bitcast %"class.blink::Length"* %19 to i64*
  %31 = bitcast %"class.blink::Length"* %18 to i64*
  %32 = load i64, i64* %30, align 4
  store i64 %32, i64* %31, align 4
  %33 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2
  %35 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2, i32 2
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 8
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %34) #15
  br label %39

39:                                               ; preds = %38, %29
  %40 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %33) #15
  br label %44

44:                                               ; preds = %39, %43
  %45 = bitcast %"class.blink::Length"* %34 to i64*
  %46 = bitcast %"class.blink::Length"* %33 to i64*
  %47 = load i64, i64* %45, align 4
  store i64 %47, i64* %46, align 4
  %48 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3
  %49 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3
  %50 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %54

53:                                               ; preds = %44
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %49) #15
  br label %54

54:                                               ; preds = %53, %44
  %55 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 8
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %59

59:                                               ; preds = %54, %58
  %60 = bitcast %"class.blink::Length"* %49 to i64*
  %61 = bitcast %"class.blink::Length"* %48 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 4
  ret %"class.blink::LengthBox"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.blink::BorderImageLengthBox"* @_ZN5blink20BorderImageLengthBoxaSEOS0_(%"class.blink::BorderImageLengthBox"*, %"class.blink::BorderImageLengthBox"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %8) #15
  br label %9

9:                                                ; preds = %7, %2
  %10 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 8
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %3) #15
  br label %14

14:                                               ; preds = %9, %13
  %15 = bitcast %"class.blink::BorderImageLengthBox"* %1 to i64*
  %16 = bitcast %"class.blink::BorderImageLengthBox"* %0 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 4
  %18 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 0, i32 1
  %20 = bitcast double* %18 to i8*
  %21 = bitcast double* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 12, i1 false) #15
  %22 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 1
  %24 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %22, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 1, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %14
  %29 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %23, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %29) #15
  br label %30

30:                                               ; preds = %28, %14
  %31 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %35

35:                                               ; preds = %30, %34
  %36 = bitcast %"class.blink::BorderImageLength"* %23 to i64*
  %37 = bitcast %"class.blink::BorderImageLength"* %22 to i64*
  %38 = load i64, i64* %36, align 4
  store i64 %38, i64* %37, align 4
  %39 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 1, i32 1
  %41 = bitcast double* %39 to i8*
  %42 = bitcast double* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 12, i1 false) #15
  %43 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %43, i64 0, i32 0
  %46 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 2, i32 0, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %51

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %44, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %50) #15
  br label %51

51:                                               ; preds = %49, %35
  %52 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 0, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 8
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %45) #15
  br label %56

56:                                               ; preds = %51, %55
  %57 = bitcast %"class.blink::BorderImageLength"* %44 to i64*
  %58 = bitcast %"class.blink::BorderImageLength"* %43 to i64*
  %59 = load i64, i64* %57, align 4
  store i64 %59, i64* %58, align 4
  %60 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 1
  %61 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 2, i32 1
  %62 = bitcast double* %60 to i8*
  %63 = bitcast double* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 12, i1 false) #15
  %64 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3
  %65 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 3
  %66 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %64, i64 0, i32 0
  %67 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 3, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %65, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %71) #15
  br label %72

72:                                               ; preds = %70, %56
  %73 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 8
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %77

77:                                               ; preds = %72, %76
  %78 = bitcast %"class.blink::BorderImageLength"* %65 to i64*
  %79 = bitcast %"class.blink::BorderImageLength"* %64 to i64*
  %80 = load i64, i64* %78, align 4
  store i64 %80, i64* %79, align 4
  %81 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 1
  %82 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %1, i64 0, i32 3, i32 1
  %83 = bitcast double* %81 to i8*
  %84 = bitcast double* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 12, i1 false) #15
  ret %"class.blink::BorderImageLengthBox"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataC2ERKS0_(%"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"* dereferenceable(248)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  store i8 %6, i8* %4, align 4
  %7 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %7, i64 0, i32 0
  %10 = bitcast %"class.blink::Persistent"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::Persistent"* %7 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %13, align 8
  switch i64 %11, label %14 [
    i64 0, label %40
    i64 -1, label %40
  ]

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #15
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !21

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #15
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %30, label %33, !prof !21

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %31) #15
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  br label %33

33:                                               ; preds = %30, %21
  %34 = phi %"class.blink::PersistentNode"* [ %32, %30 ], [ %28, %21 ]
  %35 = bitcast %"class.blink::PersistentNode"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.blink::PersistentNode"* %34 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %9, %"class.blink::PersistentBase"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %34, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10StyleImageELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %39, align 8
  store %"class.blink::PersistentNode"* %34, %"class.blink::PersistentNode"** %13, align 8
  br label %40

40:                                               ; preds = %2, %2, %33
  %41 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 3
  %43 = bitcast %"class.blink::LengthBox"* %42 to i64*
  %44 = bitcast %"class.blink::LengthBox"* %41 to i64*
  %45 = load i64, i64* %43, align 4
  store i64 %45, i64* %44, align 4
  %46 = and i64 %45, 280375465082880
  %47 = icmp eq i64 %46, 8796093022208
  br i1 %47, label %48, label %50

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %41, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %49) #15
  br label %50

50:                                               ; preds = %48, %40
  %51 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  %52 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 3, i32 1
  %53 = bitcast %"class.blink::Length"* %52 to i64*
  %54 = bitcast %"class.blink::Length"* %51 to i64*
  %55 = load i64, i64* %53, align 4
  store i64 %55, i64* %54, align 4
  %56 = and i64 %55, 280375465082880
  %57 = icmp eq i64 %56, 8796093022208
  br i1 %57, label %58, label %59

58:                                               ; preds = %50
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %51) #15
  br label %59

59:                                               ; preds = %58, %50
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  %61 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 3, i32 2
  %62 = bitcast %"class.blink::Length"* %61 to i64*
  %63 = bitcast %"class.blink::Length"* %60 to i64*
  %64 = load i64, i64* %62, align 4
  store i64 %64, i64* %63, align 4
  %65 = and i64 %64, 280375465082880
  %66 = icmp eq i64 %65, 8796093022208
  br i1 %66, label %67, label %68

67:                                               ; preds = %59
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %68

68:                                               ; preds = %67, %59
  %69 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  %70 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 3, i32 3
  %71 = bitcast %"class.blink::Length"* %70 to i64*
  %72 = bitcast %"class.blink::Length"* %69 to i64*
  %73 = load i64, i64* %71, align 4
  store i64 %73, i64* %72, align 4
  %74 = and i64 %73, 280375465082880
  %75 = icmp eq i64 %74, 8796093022208
  br i1 %75, label %76, label %77

76:                                               ; preds = %68
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %69) #15
  br label %77

77:                                               ; preds = %68, %76
  %78 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4
  %79 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 4
  %80 = bitcast %"class.blink::BorderImageLengthBox"* %79 to i64*
  %81 = bitcast %"class.blink::BorderImageLengthBox"* %78 to i64*
  %82 = load i64, i64* %80, align 4
  store i64 %82, i64* %81, align 4
  %83 = and i64 %82, 280375465082880
  %84 = icmp eq i64 %83, 8796093022208
  br i1 %84, label %85, label %87

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %78, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %86) #15
  br label %87

87:                                               ; preds = %85, %77
  %88 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 1
  %89 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 4, i32 0, i32 1
  %90 = bitcast double* %88 to i8*
  %91 = bitcast double* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 12, i1 false) #15
  %92 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1
  %93 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 4, i32 1
  %94 = bitcast %"class.blink::BorderImageLength"* %93 to i64*
  %95 = bitcast %"class.blink::BorderImageLength"* %92 to i64*
  %96 = load i64, i64* %94, align 4
  store i64 %96, i64* %95, align 4
  %97 = and i64 %96, 280375465082880
  %98 = icmp eq i64 %97, 8796093022208
  br i1 %98, label %99, label %101

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %92, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %100) #15
  br label %101

101:                                              ; preds = %99, %87
  %102 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 1
  %103 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 4, i32 1, i32 1
  %104 = bitcast double* %102 to i8*
  %105 = bitcast double* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 12, i1 false) #15
  %106 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2
  %107 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 4, i32 2
  %108 = bitcast %"class.blink::BorderImageLength"* %107 to i64*
  %109 = bitcast %"class.blink::BorderImageLength"* %106 to i64*
  %110 = load i64, i64* %108, align 4
  store i64 %110, i64* %109, align 4
  %111 = and i64 %110, 280375465082880
  %112 = icmp eq i64 %111, 8796093022208
  br i1 %112, label %113, label %115

113:                                              ; preds = %101
  %114 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %106, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %114) #15
  br label %115

115:                                              ; preds = %113, %101
  %116 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 1
  %117 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 4, i32 2, i32 1
  %118 = bitcast double* %116 to i8*
  %119 = bitcast double* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 12, i1 false) #15
  %120 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3
  %121 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 4, i32 3
  %122 = bitcast %"class.blink::BorderImageLength"* %121 to i64*
  %123 = bitcast %"class.blink::BorderImageLength"* %120 to i64*
  %124 = load i64, i64* %122, align 4
  store i64 %124, i64* %123, align 4
  %125 = and i64 %124, 280375465082880
  %126 = icmp eq i64 %125, 8796093022208
  br i1 %126, label %127, label %129

127:                                              ; preds = %115
  %128 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %120, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %128) #15
  br label %129

129:                                              ; preds = %115, %127
  %130 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 1
  %131 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 4, i32 3, i32 1
  %132 = bitcast double* %130 to i8*
  %133 = bitcast double* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 12, i1 false) #15
  %134 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5
  %135 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 5
  %136 = bitcast %"class.blink::BorderImageLengthBox"* %135 to i64*
  %137 = bitcast %"class.blink::BorderImageLengthBox"* %134 to i64*
  %138 = load i64, i64* %136, align 4
  store i64 %138, i64* %137, align 4
  %139 = and i64 %138, 280375465082880
  %140 = icmp eq i64 %139, 8796093022208
  br i1 %140, label %141, label %143

141:                                              ; preds = %129
  %142 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %134, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %142) #15
  br label %143

143:                                              ; preds = %141, %129
  %144 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 1
  %145 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 5, i32 0, i32 1
  %146 = bitcast double* %144 to i8*
  %147 = bitcast double* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 12, i1 false) #15
  %148 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1
  %149 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 5, i32 1
  %150 = bitcast %"class.blink::BorderImageLength"* %149 to i64*
  %151 = bitcast %"class.blink::BorderImageLength"* %148 to i64*
  %152 = load i64, i64* %150, align 4
  store i64 %152, i64* %151, align 4
  %153 = and i64 %152, 280375465082880
  %154 = icmp eq i64 %153, 8796093022208
  br i1 %154, label %155, label %157

155:                                              ; preds = %143
  %156 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %148, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %156) #15
  br label %157

157:                                              ; preds = %155, %143
  %158 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 1
  %159 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 5, i32 1, i32 1
  %160 = bitcast double* %158 to i8*
  %161 = bitcast double* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 12, i1 false) #15
  %162 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2
  %163 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 5, i32 2
  %164 = bitcast %"class.blink::BorderImageLength"* %163 to i64*
  %165 = bitcast %"class.blink::BorderImageLength"* %162 to i64*
  %166 = load i64, i64* %164, align 4
  store i64 %166, i64* %165, align 4
  %167 = and i64 %166, 280375465082880
  %168 = icmp eq i64 %167, 8796093022208
  br i1 %168, label %169, label %171

169:                                              ; preds = %157
  %170 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %162, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %170) #15
  br label %171

171:                                              ; preds = %169, %157
  %172 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 1
  %173 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 5, i32 2, i32 1
  %174 = bitcast double* %172 to i8*
  %175 = bitcast double* %173 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 12, i1 false) #15
  %176 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3
  %177 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 5, i32 3
  %178 = bitcast %"class.blink::BorderImageLength"* %177 to i64*
  %179 = bitcast %"class.blink::BorderImageLength"* %176 to i64*
  %180 = load i64, i64* %178, align 4
  store i64 %180, i64* %179, align 4
  %181 = and i64 %180, 280375465082880
  %182 = icmp eq i64 %181, 8796093022208
  br i1 %182, label %183, label %185

183:                                              ; preds = %171
  %184 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %176, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %184) #15
  br label %185

185:                                              ; preds = %171, %183
  %186 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 1
  %187 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %1, i64 0, i32 5, i32 3, i32 1
  %188 = bitcast double* %186 to i8*
  %189 = bitcast double* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 12, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10StyleImageELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::StyleImage"**
  %5 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #15
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #15
  %7 = icmp eq %"class.blink::StyleImage"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::StyleImage"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #15
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #15
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleImage"*
  %4 = bitcast i8* %1 to void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)**, void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)*, void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)** %5, i64 17
  %7 = load void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)*, void (%"class.blink::StyleImage"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StyleImage"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #15
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !21

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #15
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11SVGResourceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SVGResource"**
  %5 = load %"class.blink::SVGResource"*, %"class.blink::SVGResource"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #15
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #15
  %7 = icmp eq %"class.blink::SVGResource"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SVGResource"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11SVGResourceEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #15
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11SVGResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGResource"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGResource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGResource"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGResource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGResource"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGResource"*, %"class.blink::Visitor"*)** %5, i64 4
  %7 = load void (%"class.blink::SVGResource"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGResource"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGResource"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink11FontBuilder21GenericFontFamilyNameENS_15FontDescription17GenericFamilyTypeE(%"class.blink::FontBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #15
  %15 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.1843"* %19 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %20) #15
  %21 = bitcast %"class.base::RefCounted.1843"* %19 to i8*
  tail call void @free(i8* %21) #15
  br label %22

22:                                               ; preds = %10, %18
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #15
  %27 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.1843"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #15
  %33 = bitcast %"class.base::RefCounted.1843"* %31 to i8*
  tail call void @free(i8* %33) #15
  br label %34

34:                                               ; preds = %22, %24, %30
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #15
  %40 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.1843", %"class.base::RefCounted.1843"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.1843"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #15
  %46 = bitcast %"class.base::RefCounted.1843"* %44 to i8*
  tail call void @free(i8* %46) #15
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1324"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1855"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %24, i64 %25
  ret %"class.blink::Member.1324"* %26
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #3

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #3

declare float @_ZNK5blink16CalculationValue8EvaluateEf(%"class.blink::CalculationValue"*, float) local_unnamed_addr #3

declare float @_ZNK5blink25CSSToLengthConversionData9FontSizes4ZoomEv(%"class.blink::CSSToLengthConversionData::FontSizes"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"*) unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #12

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsFlexEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, -2
  store i16 %8, i16* %6, align 8
  br label %19

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %14 = zext i1 %12 to i16
  %15 = load i16, i16* %13, align 8
  %16 = and i16 %15, -2
  %17 = or i16 %16, %14
  store i16 %17, i16* %13, align 8
  switch i8 %11, label %18 [
    i8 2, label %19
    i8 1, label %19
    i8 8, label %19
  ]

18:                                               ; preds = %9
  br label %19

19:                                               ; preds = %18, %9, %9, %9, %5
  %20 = phi i16 [ %8, %5 ], [ %17, %9 ], [ %17, %9 ], [ %17, %9 ], [ %17, %18 ]
  %21 = phi i16* [ %6, %5 ], [ %13, %9 ], [ %13, %9 ], [ %13, %9 ], [ %13, %18 ]
  %22 = phi i16 [ 0, %5 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ], [ 0, %18 ]
  %23 = and i16 %20, -21
  %24 = icmp eq i32 %3, 1
  %25 = zext i1 %24 to i16
  %26 = shl nuw nsw i16 %25, 4
  %27 = or i16 %23, %26
  %28 = or i16 %27, %22
  store i16 %28, i16* %21, align 8
  br i1 %4, label %31, label %29

29:                                               ; preds = %19
  %30 = and i16 %28, -257
  store i16 %30, i16* %21, align 8
  br label %42

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 4
  %35 = zext i1 %34 to i16
  %36 = shl nuw nsw i16 %35, 8
  %37 = and i16 %28, -257
  %38 = or i16 %36, %37
  store i16 %38, i16* %21, align 8
  %39 = icmp eq i8 %33, 3
  %40 = zext i1 %39 to i16
  %41 = shl nuw nsw i16 %40, 10
  br label %42

42:                                               ; preds = %29, %31
  %43 = phi i16 [ %30, %29 ], [ %38, %31 ]
  %44 = phi i16 [ 0, %29 ], [ %41, %31 ]
  %45 = and i16 %43, -1025
  %46 = or i16 %45, %44
  store i16 %46, i16* %21, align 8
  %47 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = and i16 %46, -3
  store i16 %51, i16* %21, align 8
  br label %61

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 0, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  %56 = zext i1 %55 to i16
  %57 = shl nuw nsw i16 %56, 1
  %58 = and i16 %46, -3
  %59 = or i16 %57, %58
  store i16 %59, i16* %21, align 8
  switch i8 %54, label %60 [
    i8 2, label %61
    i8 1, label %61
    i8 8, label %61
  ]

60:                                               ; preds = %52
  br label %61

61:                                               ; preds = %60, %52, %52, %52, %50
  %62 = phi i16 [ %51, %50 ], [ %59, %52 ], [ %59, %52 ], [ %59, %52 ], [ %59, %60 ]
  %63 = phi i16 [ 0, %50 ], [ 8, %52 ], [ 8, %52 ], [ 8, %52 ], [ 0, %60 ]
  %64 = and i16 %62, -41
  %65 = icmp eq i32 %48, 1
  %66 = zext i1 %65 to i16
  %67 = shl nuw nsw i16 %66, 5
  %68 = or i16 %63, %67
  %69 = or i16 %68, %64
  store i16 %69, i16* %21, align 8
  br i1 %49, label %72, label %70

70:                                               ; preds = %61
  %71 = and i16 %69, -513
  store i16 %71, i16* %21, align 8
  br label %83

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 4
  %76 = zext i1 %75 to i16
  %77 = shl nuw nsw i16 %76, 9
  %78 = and i16 %69, -513
  %79 = or i16 %77, %78
  store i16 %79, i16* %21, align 8
  %80 = icmp eq i8 %74, 3
  %81 = zext i1 %80 to i16
  %82 = shl nuw nsw i16 %81, 11
  br label %83

83:                                               ; preds = %70, %72
  %84 = phi i16 [ %71, %70 ], [ %79, %72 ]
  %85 = phi i16 [ 0, %70 ], [ %82, %72 ]
  %86 = and i16 %84, -2049
  %87 = or i16 %86, %85
  store i16 %87, i16* %21, align 8
  %88 = and i16 %84, 1281
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 2
  %94 = zext i1 %93 to i16
  %95 = shl nuw nsw i16 %94, 6
  br label %96

96:                                               ; preds = %83, %90
  %97 = phi i16 [ 64, %83 ], [ %95, %90 ]
  %98 = and i16 %87, -65
  %99 = or i16 %97, %98
  store i16 %99, i16* %21, align 8
  %100 = and i16 %99, 2560
  %101 = and i16 %84, 2
  %102 = or i16 %100, %101
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 2
  %108 = zext i1 %107 to i16
  %109 = shl nuw nsw i16 %108, 7
  br label %110

110:                                              ; preds = %96, %104
  %111 = phi i16 [ 128, %96 ], [ %109, %104 ]
  %112 = and i16 %99, -129
  %113 = or i16 %111, %112
  store i16 %113, i16* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.547"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EERS1_S5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_(%"class.WTF::HashTable.544"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.548"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.547"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_(%"class.WTF::HashTable.544"* %0, %"struct.WTF::KeyValuePair.547"* null)
  %9 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.547"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #15
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.547"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.547"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.547"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #15
  br i1 %57, label %147, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.547"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.547"* %59, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %59, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %59, i64 0, i32 1, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %59, i64 0, i32 1, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.548"* %71 to i64*
  %75 = bitcast %"struct.WTF::KeyValuePair.547"* %59 to i64*
  store i64 0, i64* %75, align 8
  store atomic i64 0, i64* %74 monotonic, align 8
  store i32 0, i32* %72, align 4
  store i32 0, i32* %73, align 4
  %76 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 2147483647
  %79 = and i32 %78, 2147483647
  %80 = and i32 %77, -2147483648
  %81 = or i32 %79, %80
  store i32 %81, i32* %76, align 8
  br label %82

82:                                               ; preds = %24, %68, %70
  %83 = phi %"struct.WTF::KeyValuePair.547"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #15
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !21

100:                                              ; preds = %91
  tail call void @llvm.trap() #15
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %103

103:                                              ; preds = %101, %86, %82
  %104 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %105 = bitcast %"struct.WTF::KeyValuePair.547"* %83 to i64*
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %83, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  store i64 %104, i64* %105, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #15
  br label %122

122:                                              ; preds = %103, %118, %121
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %83, i64 0, i32 1
  %124 = bitcast %"class.WTF::Vector.548"* %2 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::Vector.548"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  store atomic i64 %127, i64* %124 monotonic, align 8
  store atomic i64 %125, i64* %126 monotonic, align 8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %83, i64 0, i32 1, i32 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %2, i64 0, i32 0, i32 0, i32 1
  %130 = load i32, i32* %128, align 4
  %131 = load i32, i32* %129, align 4
  store i32 %131, i32* %128, align 4
  store i32 %130, i32* %129, align 4
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %83, i64 0, i32 1, i32 0, i32 0, i32 2
  %133 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %2, i64 0, i32 0, i32 0, i32 2
  %134 = load i32, i32* %132, align 4
  %135 = load i32, i32* %133, align 4
  store i32 %135, i32* %132, align 4
  store i32 %134, i32* %133, align 4
  %136 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %122
  %146 = tail call %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_(%"class.WTF::HashTable.544"* %0, %"struct.WTF::KeyValuePair.547"* %83)
  br label %147

147:                                              ; preds = %54, %122, %145
  %148 = phi i8 [ 1, %122 ], [ 1, %145 ], [ 0, %54 ]
  %149 = phi %"struct.WTF::KeyValuePair.547"* [ %83, %122 ], [ %146, %145 ], [ %47, %54 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair.547"*, i8 } undef, %"struct.WTF::KeyValuePair.547"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair.547"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair.547"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_(%"class.WTF::HashTable.544"*, %"struct.WTF::KeyValuePair.547"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_6VectorImLj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.547"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %60, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %44, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %44, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %44, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.548"* %47 to i64*
  %51 = bitcast %"struct.WTF::KeyValuePair.547"* %46 to i64*
  store i64 0, i64* %51, align 8
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %49, align 4
  %52 = or i64 %44, 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %52, i32 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %52, i32 1, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %52, i32 1, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.548"* %54 to i64*
  %58 = bitcast %"struct.WTF::KeyValuePair.547"* %53 to i64*
  store i64 0, i64* %58, align 8
  store atomic i64 0, i64* %57 monotonic, align 8
  store i32 0, i32* %55, align 4
  store i32 0, i32* %56, align 4
  %59 = add nuw nsw i64 %44, 2
  %60 = add i64 %45, -2
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %38
  %63 = phi i64 [ 0, %38 ], [ %59, %43 ]
  %64 = icmp eq i64 %39, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %63
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %63, i32 1
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %63, i32 1, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %36, i64 %63, i32 1, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::Vector.548"* %67 to i64*
  %71 = bitcast %"struct.WTF::KeyValuePair.547"* %66 to i64*
  store i64 0, i64* %71, align 8
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %68, align 4
  store i32 0, i32* %69, align 4
  br label %72

72:                                               ; preds = %65, %62, %31
  %73 = call %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8RehashToEPS6_jSF_(%"class.WTF::HashTable.544"* %0, %"struct.WTF::KeyValuePair.547"* %36, i32 %32, %"struct.WTF::KeyValuePair.547"* %1) #15
  ret %"struct.WTF::KeyValuePair.547"* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8RehashToEPS6_jSF_(%"class.WTF::HashTable.544"*, %"struct.WTF::KeyValuePair.547"*, i32, %"struct.WTF::KeyValuePair.547"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.544", align 8
  %6 = bitcast %"class.WTF::HashTable.544"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.544"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.547"* %1, %"struct.WTF::KeyValuePair.547"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.547"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.544"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.544"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.547"* %22 to i64
  br label %86

24:                                               ; preds = %104
  %25 = bitcast %"class.WTF::HashTable.544"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.544"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %105, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.547"* [ null, %16 ], [ %108, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %106, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.547"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %82, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %80, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %77, %39
  %42 = phi i64 [ 0, %39 ], [ %78, %77 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.547"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %77, label %47

47:                                               ; preds = %41
  %48 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %50, null
  %52 = bitcast i64* %50 to i8*
  br i1 %51, label %61, label %53, !prof !49

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %35, i64 %42, i32 1, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57, !prof !21

57:                                               ; preds = %53
  store i32 0, i32* %54, align 4
  br label %58

58:                                               ; preds = %57, %53
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #15
  store i64* null, i64** %49, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %43, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  br label %61

61:                                               ; preds = %58, %47
  %62 = phi %"class.WTF::StringImpl"* [ %60, %58 ], [ %48, %47 ]
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #15
  br label %77

77:                                               ; preds = %76, %73, %61, %41
  %78 = add nuw nsw i64 %42, 1
  %79 = icmp eq i64 %78, %40
  br i1 %79, label %80, label %41

80:                                               ; preds = %77, %37
  %81 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %81) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %82

82:                                               ; preds = %28, %80
  %83 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, -2147483648
  store i32 %85, i32* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.547"* %33

86:                                               ; preds = %21, %104
  %87 = phi i64 [ %105, %104 ], [ %23, %21 ]
  %88 = phi i32 [ %106, %104 ], [ %13, %21 ]
  %89 = phi %"struct.WTF::KeyValuePair.547"* [ %107, %104 ], [ %22, %21 ]
  %90 = phi %"struct.WTF::KeyValuePair.547"* [ %108, %104 ], [ null, %21 ]
  %91 = phi i32 [ %109, %104 ], [ 0, %21 ]
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %89, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.547"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  switch i64 %95, label %96 [
    i64 -1, label %104
    i64 0, label %104
  ]

96:                                               ; preds = %86
  %97 = call %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8ReinsertEOS6_(%"class.WTF::HashTable.544"* nonnull %5, %"struct.WTF::KeyValuePair.547"* dereferenceable(24) %93)
  %98 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %15, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %98, i64 %92
  %100 = icmp eq %"struct.WTF::KeyValuePair.547"* %99, %3
  %101 = select i1 %100, %"struct.WTF::KeyValuePair.547"* %97, %"struct.WTF::KeyValuePair.547"* %90
  %102 = load i32, i32* %12, align 8
  %103 = ptrtoint %"struct.WTF::KeyValuePair.547"* %98 to i64
  br label %104

104:                                              ; preds = %86, %86, %96
  %105 = phi i64 [ %87, %86 ], [ %103, %96 ], [ %87, %86 ]
  %106 = phi i32 [ %88, %86 ], [ %102, %96 ], [ %88, %86 ]
  %107 = phi %"struct.WTF::KeyValuePair.547"* [ %89, %86 ], [ %98, %96 ], [ %89, %86 ]
  %108 = phi %"struct.WTF::KeyValuePair.547"* [ %90, %86 ], [ %101, %96 ], [ %90, %86 ]
  %109 = add i32 %91, 1
  %110 = icmp eq i32 %109, %106
  br i1 %110, label %24, label %86
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8ReinsertEOS6_(%"class.WTF::HashTable.544"*, %"struct.WTF::KeyValuePair.547"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.547"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E16LookupForWritingERKS1_(%"class.WTF::HashTable.544"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.547"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  %9 = bitcast i64* %7 to i8*
  br i1 %8, label %16, label %10, !prof !49

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !21

14:                                               ; preds = %10
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %14, %10
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #15
  store i64* null, i64** %6, align 8
  br label %16

16:                                               ; preds = %15, %2
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %5, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %33

33:                                               ; preds = %16, %29, %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"struct.WTF::KeyValuePair.547"* %1 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.WTF::KeyValuePair.547"* %5 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %5, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %1, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %42 = bitcast %"class.WTF::Vector.548"* %39 to i64*
  %43 = bitcast %"class.WTF::Vector.548"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #15
  %44 = load i64, i64* %42, align 8
  %45 = bitcast %"class.WTF::Vector.548"* %38 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store atomic i64 %44, i64* %45 monotonic, align 8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = load i32, i32* %40, align 4
  %48 = load i32, i32* %46, align 4
  store i32 %48, i32* %40, align 4
  store i32 %47, i32* %46, align 4
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %41, align 4
  %51 = load i32, i32* %49, align 4
  store i32 %51, i32* %41, align 4
  store i32 %50, i32* %49, align 4
  ret %"struct.WTF::KeyValuePair.547"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.547"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E16LookupForWritingERKS1_(%"class.WTF::HashTable.544"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #15
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.547"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.547"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.547"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.547"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.547"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.547"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.547"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.547"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #15
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.547"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.547"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.547"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.547"*, i8 } undef, %"struct.WTF::KeyValuePair.547"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.547"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.547"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.548"*, i64* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPm(%"class.WTF::Vector.548"* %0, i32 %5, i64* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i64, i64* %8, i64 %10
  %12 = load i64, i64* %6, align 8
  store i64 %12, i64* %11, align 8
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPm(%"class.WTF::Vector.548"*, i32, i64*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp ugt i64* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i64, i64* %5, i64 %10
  %12 = icmp ugt i64* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !49

24:                                               ; preds = %13
  %25 = icmp eq i64* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.548"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load i64*, i64** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i64* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i64* %37 to i8*
  br i1 %40, label %42, label %49, !prof !49

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.548"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.548"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint i64* %2 to i64
  %55 = ptrtoint i64* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !49

68:                                               ; preds = %53
  %69 = icmp eq i64* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %70) #15
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #15
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.548"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load i64*, i64** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne i64* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast i64* %77 to i8*
  br i1 %80, label %82, label %88, !prof !49

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #15
  %86 = bitcast %"class.WTF::Vector.548"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #15
  %90 = bitcast %"class.WTF::Vector.548"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to i64*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi i64* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds i64, i64* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi i64* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret i64* %99
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.557"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E6insertINS_17HashMapTranslatorISF_S9_S4_EERmS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.554"*, i64* dereferenceable(8), %"class.WTF::Vector.558"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.557"*, %"struct.WTF::KeyValuePair.557"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.557"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.557"* @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E6ExpandEPS6_(%"class.WTF::HashTable.554"* %0, %"struct.WTF::KeyValuePair.557"* null)
  %9 = load %"struct.WTF::KeyValuePair.557"*, %"struct.WTF::KeyValuePair.557"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.557"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, -1
  br i1 %41, label %89, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.557"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.557"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %117, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -2
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.557"* %58, %"struct.WTF::KeyValuePair.557"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, -1
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.557"* %65, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %65, i64 0, i32 0
  store i64 -1, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %65, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %65, i64 0, i32 1, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %65, i64 0, i32 1, i32 0, i32 0, i32 2
  %81 = bitcast %"class.WTF::Vector.558"* %78 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  store i32 0, i32* %79, align 4
  store i32 0, i32* %80, align 4
  %82 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  %88 = load i64, i64* %1, align 8
  br label %89

89:                                               ; preds = %10, %74, %76
  %90 = phi i64 [ %88, %76 ], [ %16, %74 ], [ %16, %10 ]
  %91 = phi %"struct.WTF::KeyValuePair.557"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %91, i64 0, i32 0
  store i64 %90, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %91, i64 0, i32 1
  %94 = bitcast %"class.WTF::Vector.558"* %2 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::Vector.558"* %93 to i64*
  %97 = load i64, i64* %96, align 8
  store atomic i64 %97, i64* %94 monotonic, align 8
  store atomic i64 %95, i64* %96 monotonic, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %91, i64 0, i32 1, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %2, i64 0, i32 0, i32 0, i32 1
  %100 = load i32, i32* %98, align 4
  %101 = load i32, i32* %99, align 4
  store i32 %101, i32* %98, align 4
  store i32 %100, i32* %99, align 4
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %91, i64 0, i32 1, i32 0, i32 0, i32 2
  %103 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %2, i64 0, i32 0, i32 0, i32 2
  %104 = load i32, i32* %102, align 4
  %105 = load i32, i32* %103, align 4
  store i32 %105, i32* %102, align 4
  store i32 %104, i32* %103, align 4
  %106 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, %108
  %112 = shl i32 %111, 1
  %113 = load i32, i32* %12, align 8
  %114 = icmp ult i32 %112, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %89
  %116 = tail call %"struct.WTF::KeyValuePair.557"* @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E6ExpandEPS6_(%"class.WTF::HashTable.554"* %0, %"struct.WTF::KeyValuePair.557"* %91)
  br label %117

117:                                              ; preds = %56, %89, %115
  %118 = phi i8 [ 1, %89 ], [ 1, %115 ], [ 0, %56 ]
  %119 = phi %"struct.WTF::KeyValuePair.557"* [ %91, %89 ], [ %116, %115 ], [ %58, %56 ]
  %120 = insertvalue { %"struct.WTF::KeyValuePair.557"*, i8 } undef, %"struct.WTF::KeyValuePair.557"* %119, 0
  %121 = insertvalue { %"struct.WTF::KeyValuePair.557"*, i8 } %120, i8 %118, 1
  ret { %"struct.WTF::KeyValuePair.557"*, i8 } %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.557"* @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E6ExpandEPS6_(%"class.WTF::HashTable.554"*, %"struct.WTF::KeyValuePair.557"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.557"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %60, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %57, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %58, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %44, i32 0
  store i64 -1, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %44, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %44, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %44, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.558"* %47 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %49, align 4
  %51 = or i64 %44, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %51, i32 0
  store i64 -1, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %51, i32 1
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %51, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %51, i32 1, i32 0, i32 0, i32 2
  %56 = bitcast %"class.WTF::Vector.558"* %53 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  store i32 0, i32* %54, align 4
  store i32 0, i32* %55, align 4
  %57 = add nuw nsw i64 %44, 2
  %58 = add i64 %45, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %43

60:                                               ; preds = %43, %38
  %61 = phi i64 [ 0, %38 ], [ %57, %43 ]
  %62 = icmp eq i64 %39, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %61, i32 0
  store i64 -1, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %61, i32 1
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %61, i32 1, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %36, i64 %61, i32 1, i32 0, i32 0, i32 2
  %68 = bitcast %"class.WTF::Vector.558"* %65 to i64*
  store atomic i64 0, i64* %68 monotonic, align 8
  store i32 0, i32* %66, align 4
  store i32 0, i32* %67, align 4
  br label %69

69:                                               ; preds = %63, %60, %31
  %70 = call %"struct.WTF::KeyValuePair.557"* @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E8RehashToEPS6_jSH_(%"class.WTF::HashTable.554"* %0, %"struct.WTF::KeyValuePair.557"* %36, i32 %32, %"struct.WTF::KeyValuePair.557"* %1) #15
  ret %"struct.WTF::KeyValuePair.557"* %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.557"* @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E8RehashToEPS6_jSH_(%"class.WTF::HashTable.554"*, %"struct.WTF::KeyValuePair.557"*, i32, %"struct.WTF::KeyValuePair.557"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.554", align 8
  %6 = bitcast %"class.WTF::HashTable.554"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.554"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.557"* %1, %"struct.WTF::KeyValuePair.557"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.557"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.554"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.554"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.557"*, %"struct.WTF::KeyValuePair.557"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.557"* %22 to i64
  br label %42

24:                                               ; preds = %61
  %25 = bitcast %"class.WTF::HashTable.554"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.554"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %62, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.557"* [ null, %16 ], [ %65, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %63, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.557"*
  call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.557"* nonnull %37, i32 %34) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.557"* %33

42:                                               ; preds = %21, %61
  %43 = phi i64 [ %62, %61 ], [ %23, %21 ]
  %44 = phi i32 [ %63, %61 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.557"* [ %64, %61 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.557"* [ %65, %61 ], [ null, %21 ]
  %47 = phi i32 [ %66, %61 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp ugt i64 %51, -3
  br i1 %52, label %61, label %53

53:                                               ; preds = %42
  %54 = call %"struct.WTF::KeyValuePair.557"* @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E8ReinsertEOS6_(%"class.WTF::HashTable.554"* nonnull %5, %"struct.WTF::KeyValuePair.557"* dereferenceable(24) %49)
  %55 = load %"struct.WTF::KeyValuePair.557"*, %"struct.WTF::KeyValuePair.557"** %15, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %55, i64 %48
  %57 = icmp eq %"struct.WTF::KeyValuePair.557"* %56, %3
  %58 = select i1 %57, %"struct.WTF::KeyValuePair.557"* %54, %"struct.WTF::KeyValuePair.557"* %46
  %59 = load i32, i32* %12, align 8
  %60 = ptrtoint %"struct.WTF::KeyValuePair.557"* %55 to i64
  br label %61

61:                                               ; preds = %42, %53
  %62 = phi i64 [ %43, %42 ], [ %60, %53 ]
  %63 = phi i32 [ %44, %42 ], [ %59, %53 ]
  %64 = phi %"struct.WTF::KeyValuePair.557"* [ %45, %42 ], [ %55, %53 ]
  %65 = phi %"struct.WTF::KeyValuePair.557"* [ %46, %42 ], [ %58, %53 ]
  %66 = add i32 %47, 1
  %67 = icmp eq i32 %66, %63
  br i1 %67, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.557"* @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E8ReinsertEOS6_(%"class.WTF::HashTable.554"*, %"struct.WTF::KeyValuePair.557"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.557"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E16LookupForWritingERKm(%"class.WTF::HashTable.554"* %0, i64* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.557"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %5, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = icmp eq %"class.WTF::String"* %8, null
  br i1 %9, label %44, label %10, !prof !49

10:                                               ; preds = %2
  %11 = bitcast %"class.WTF::String"* %8 to i8*
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %42, label %15, !prof !21

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %16
  br label %18

18:                                               ; preds = %36, %15
  %19 = phi %"class.WTF::String"* [ %37, %36 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %36

36:                                               ; preds = %35, %32, %18
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 1
  %38 = icmp eq %"class.WTF::String"* %37, %17
  br i1 %38, label %39, label %18

39:                                               ; preds = %36
  store i32 0, i32* %12, align 4
  %40 = bitcast %"class.WTF::Vector.558"* %6 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %10
  %43 = phi i8* [ %41, %39 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %7, align 8
  br label %44

44:                                               ; preds = %2, %42
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %5, i64 0, i32 0
  %46 = load i64, i64* %3, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %1, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.558"* %47 to i64*
  %51 = bitcast %"class.WTF::Vector.558"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #15
  %52 = load i64, i64* %50, align 8
  %53 = bitcast %"class.WTF::Vector.558"* %6 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %55 = load i32, i32* %48, align 4
  %56 = load i32, i32* %54, align 4
  store i32 %56, i32* %48, align 4
  store i32 %55, i32* %54, align 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %49, align 4
  %59 = load i32, i32* %57, align 4
  store i32 %59, i32* %49, align 4
  store i32 %58, i32* %57, align 4
  ret %"struct.WTF::KeyValuePair.557"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.557"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E16LookupForWritingERKm(%"class.WTF::HashTable.554"*, i64* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.557"*, %"struct.WTF::KeyValuePair.557"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.554", %"class.WTF::HashTable.554"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.557"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, -1
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.557"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.557"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.557"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.557"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.557"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -2
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.557"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, -1
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.557"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.557"*, i8 } undef, %"struct.WTF::KeyValuePair.557"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.557"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.557"*, i8 } %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.557"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.557"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !49

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.557", %"struct.WTF::KeyValuePair.557"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !21

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.558"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

declare dereferenceable(16) %"class.WTF::Vector.476"* @_ZN5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #11

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZN5blink25CSSToLengthConversionDataC1EPKNS_13ComputedStyleERKNS0_9FontSizesERKNS0_12ViewportSizeEf(%"class.blink::CSSToLengthConversionData"*, %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes"* dereferenceable(24), %"class.blink::CSSToLengthConversionData::ViewportSize"* dereferenceable(16), float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.351"*, %"class.WTF::VectorBuffer.351"* dereferenceable(48), i64, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to %"class.blink::ShadowData"*
  %12 = icmp eq %"class.blink::ShadowData"* %9, %11
  %13 = ptrtoint %"class.blink::ShadowData"* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to %"class.blink::ShadowData"*
  %19 = icmp eq %"class.blink::ShadowData"* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint %"class.blink::ShadowData"* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.351"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.351"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %251

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"class.blink::ShadowData"*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i8* [ %17, %14 ], [ %38, %32 ]
  %44 = phi %"class.blink::ShadowData"* [ %18, %14 ], [ %39, %32 ]
  %45 = phi %"class.blink::ShadowData"* [ %16, %14 ], [ %41, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %48 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %49 = phi %"class.blink::ShadowData"* [ null, %14 ], [ %9, %32 ]
  %50 = phi i8* [ null, %14 ], [ %38, %32 ]
  %51 = phi %"class.blink::ShadowData"* [ null, %14 ], [ %39, %32 ]
  %52 = bitcast %"class.blink::ShadowData"* %49 to i8*
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 1, i64 0
  %54 = icmp eq %"class.blink::ShadowData"* %45, %44
  br i1 %54, label %55, label %58

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  br label %58

58:                                               ; preds = %42, %55
  %59 = phi i32 [ %7, %55 ], [ 0, %42 ]
  %60 = phi i32 [ %5, %55 ], [ 0, %42 ]
  %61 = phi i32 [ %57, %55 ], [ 0, %42 ]
  %62 = phi i8* [ %43, %55 ], [ null, %42 ]
  %63 = phi %"class.blink::ShadowData"* [ %44, %55 ], [ null, %42 ]
  %64 = phi i8* [ %10, %55 ], [ null, %42 ]
  %65 = phi %"class.blink::ShadowData"* [ %11, %55 ], [ null, %42 ]
  %66 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %0, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 0, i32 1
  %68 = load i32, i32* %66, align 4
  %69 = load i32, i32* %67, align 4
  store i32 %69, i32* %66, align 4
  store i32 %68, i32* %67, align 4
  %70 = icmp eq %"class.blink::ShadowData"* %49, null
  %71 = icmp ne %"class.blink::ShadowData"* %63, null
  %72 = or i1 %70, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %58
  %74 = bitcast %"class.WTF::VectorBuffer.351"* %1 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.351"* %0 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %53 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %92

78:                                               ; preds = %58
  %79 = and i1 %70, %71
  br i1 %79, label %80, label %92

80:                                               ; preds = %78
  %81 = bitcast %"class.WTF::VectorBuffer.351"* %0 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.WTF::VectorBuffer.351"* %1 to i64*
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = ptrtoint i8* %10 to i64
  store atomic i64 %84, i64* %81 monotonic, align 8
  %85 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %0, i64 0, i32 0, i32 2
  %86 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 0, i32 2
  %87 = load i32, i32* %85, align 4
  %88 = load i32, i32* %86, align 4
  store i32 %88, i32* %85, align 4
  store i32 %87, i32* %86, align 4
  %89 = icmp ne i32 %60, %59
  %90 = icmp ne i32 %61, 0
  %91 = and i1 %71, %90
  br i1 %91, label %110, label %251

92:                                               ; preds = %78, %73
  %93 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %0, i64 0, i32 0, i32 2
  %94 = getelementptr inbounds %"class.WTF::VectorBuffer.351", %"class.WTF::VectorBuffer.351"* %1, i64 0, i32 0, i32 2
  %95 = load i32, i32* %93, align 4
  %96 = load i32, i32* %94, align 4
  store i32 %96, i32* %93, align 4
  store i32 %95, i32* %94, align 4
  %97 = icmp ne %"class.blink::ShadowData"* %49, null
  %98 = icmp ne i32 %60, %59
  %99 = icmp ne i32 %48, 0
  %100 = and i1 %97, %99
  %101 = icmp ne i32 %61, 0
  %102 = and i1 %71, %101
  br i1 %100, label %103, label %109

103:                                              ; preds = %92
  %104 = icmp eq i32 %47, %46
  %105 = icmp ne i32 %47, 0
  %106 = or i1 %104, %105
  %107 = icmp eq i32 %46, 0
  %108 = or i1 %107, %106
  br i1 %102, label %110, label %238

109:                                              ; preds = %92
  br i1 %102, label %110, label %251

110:                                              ; preds = %80, %103, %109
  %111 = phi i1 [ %108, %103 ], [ false, %109 ], [ false, %80 ]
  %112 = phi i1 [ %97, %103 ], [ %97, %109 ], [ false, %80 ]
  %113 = phi i1 [ %98, %103 ], [ %98, %109 ], [ %89, %80 ]
  %114 = icmp eq i32 %60, 0
  %115 = and i1 %114, %113
  %116 = icmp ne i32 %59, 0
  %117 = and i1 %116, %115
  %118 = xor i1 %111, true
  %119 = or i1 %117, %118
  %120 = xor i1 %117, true
  br i1 %119, label %238, label %121

121:                                              ; preds = %110
  %122 = load i8, i8* %52, align 1
  %123 = load i8, i8* %62, align 1
  store i8 %123, i8* %52, align 1
  store i8 %122, i8* %62, align 1
  %124 = getelementptr inbounds i8, i8* %52, i64 1
  %125 = getelementptr inbounds i8, i8* %62, i64 1
  %126 = load i8, i8* %124, align 1
  %127 = load i8, i8* %125, align 1
  store i8 %127, i8* %124, align 1
  store i8 %126, i8* %125, align 1
  %128 = getelementptr inbounds i8, i8* %52, i64 2
  %129 = getelementptr inbounds i8, i8* %62, i64 2
  %130 = load i8, i8* %128, align 1
  %131 = load i8, i8* %129, align 1
  store i8 %131, i8* %128, align 1
  store i8 %130, i8* %129, align 1
  %132 = getelementptr inbounds i8, i8* %52, i64 3
  %133 = getelementptr inbounds i8, i8* %62, i64 3
  %134 = load i8, i8* %132, align 1
  %135 = load i8, i8* %133, align 1
  store i8 %135, i8* %132, align 1
  store i8 %134, i8* %133, align 1
  %136 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %49, i64 0, i32 0, i32 1
  %137 = bitcast float* %136 to i8*
  %138 = getelementptr inbounds i8, i8* %62, i64 4
  %139 = load i8, i8* %137, align 1
  %140 = load i8, i8* %138, align 1
  store i8 %140, i8* %137, align 1
  store i8 %139, i8* %138, align 1
  %141 = getelementptr inbounds i8, i8* %137, i64 1
  %142 = getelementptr inbounds i8, i8* %62, i64 5
  %143 = load i8, i8* %141, align 1
  %144 = load i8, i8* %142, align 1
  store i8 %144, i8* %141, align 1
  store i8 %143, i8* %142, align 1
  %145 = getelementptr inbounds i8, i8* %137, i64 2
  %146 = getelementptr inbounds i8, i8* %62, i64 6
  %147 = load i8, i8* %145, align 1
  %148 = load i8, i8* %146, align 1
  store i8 %148, i8* %145, align 1
  store i8 %147, i8* %146, align 1
  %149 = getelementptr inbounds i8, i8* %137, i64 3
  %150 = getelementptr inbounds i8, i8* %62, i64 7
  %151 = load i8, i8* %149, align 1
  %152 = load i8, i8* %150, align 1
  store i8 %152, i8* %149, align 1
  store i8 %151, i8* %150, align 1
  %153 = getelementptr inbounds float, float* %136, i64 1
  %154 = bitcast float* %153 to i8*
  %155 = getelementptr inbounds i8, i8* %62, i64 8
  %156 = load i8, i8* %154, align 1
  %157 = load i8, i8* %155, align 1
  store i8 %157, i8* %154, align 1
  store i8 %156, i8* %155, align 1
  %158 = getelementptr inbounds i8, i8* %154, i64 1
  %159 = getelementptr inbounds i8, i8* %62, i64 9
  %160 = load i8, i8* %158, align 1
  %161 = load i8, i8* %159, align 1
  store i8 %161, i8* %158, align 1
  store i8 %160, i8* %159, align 1
  %162 = getelementptr inbounds i8, i8* %154, i64 2
  %163 = getelementptr inbounds i8, i8* %62, i64 10
  %164 = load i8, i8* %162, align 1
  %165 = load i8, i8* %163, align 1
  store i8 %165, i8* %162, align 1
  store i8 %164, i8* %163, align 1
  %166 = getelementptr inbounds i8, i8* %154, i64 3
  %167 = getelementptr inbounds i8, i8* %62, i64 11
  %168 = load i8, i8* %166, align 1
  %169 = load i8, i8* %167, align 1
  store i8 %169, i8* %166, align 1
  store i8 %168, i8* %167, align 1
  %170 = getelementptr inbounds float, float* %136, i64 2
  %171 = bitcast float* %170 to i8*
  %172 = getelementptr inbounds i8, i8* %62, i64 12
  %173 = load i8, i8* %171, align 1
  %174 = load i8, i8* %172, align 1
  store i8 %174, i8* %171, align 1
  store i8 %173, i8* %172, align 1
  %175 = getelementptr inbounds i8, i8* %171, i64 1
  %176 = getelementptr inbounds i8, i8* %62, i64 13
  %177 = load i8, i8* %175, align 1
  %178 = load i8, i8* %176, align 1
  store i8 %178, i8* %175, align 1
  store i8 %177, i8* %176, align 1
  %179 = getelementptr inbounds i8, i8* %171, i64 2
  %180 = getelementptr inbounds i8, i8* %62, i64 14
  %181 = load i8, i8* %179, align 1
  %182 = load i8, i8* %180, align 1
  store i8 %182, i8* %179, align 1
  store i8 %181, i8* %180, align 1
  %183 = getelementptr inbounds i8, i8* %171, i64 3
  %184 = getelementptr inbounds i8, i8* %62, i64 15
  %185 = load i8, i8* %183, align 1
  %186 = load i8, i8* %184, align 1
  store i8 %186, i8* %183, align 1
  store i8 %185, i8* %184, align 1
  %187 = getelementptr inbounds float, float* %136, i64 3
  %188 = bitcast float* %187 to i8*
  %189 = getelementptr inbounds i8, i8* %62, i64 16
  %190 = load i8, i8* %188, align 1
  %191 = load i8, i8* %189, align 1
  store i8 %191, i8* %188, align 1
  store i8 %190, i8* %189, align 1
  %192 = getelementptr inbounds i8, i8* %188, i64 1
  %193 = getelementptr inbounds i8, i8* %62, i64 17
  %194 = load i8, i8* %192, align 1
  %195 = load i8, i8* %193, align 1
  store i8 %195, i8* %192, align 1
  store i8 %194, i8* %193, align 1
  %196 = getelementptr inbounds i8, i8* %188, i64 2
  %197 = getelementptr inbounds i8, i8* %62, i64 18
  %198 = load i8, i8* %196, align 1
  %199 = load i8, i8* %197, align 1
  store i8 %199, i8* %196, align 1
  store i8 %198, i8* %197, align 1
  %200 = getelementptr inbounds i8, i8* %188, i64 3
  %201 = getelementptr inbounds i8, i8* %62, i64 19
  %202 = load i8, i8* %200, align 1
  %203 = load i8, i8* %201, align 1
  store i8 %203, i8* %200, align 1
  store i8 %202, i8* %201, align 1
  %204 = getelementptr inbounds float, float* %136, i64 4
  %205 = bitcast float* %204 to i8*
  %206 = getelementptr inbounds i8, i8* %62, i64 20
  %207 = load i8, i8* %205, align 1
  %208 = load i8, i8* %206, align 1
  store i8 %208, i8* %205, align 1
  store i8 %207, i8* %206, align 1
  %209 = getelementptr inbounds i8, i8* %205, i64 1
  %210 = getelementptr inbounds i8, i8* %62, i64 21
  %211 = load i8, i8* %209, align 1
  %212 = load i8, i8* %210, align 1
  store i8 %212, i8* %209, align 1
  store i8 %211, i8* %210, align 1
  %213 = getelementptr inbounds i8, i8* %205, i64 2
  %214 = getelementptr inbounds i8, i8* %62, i64 22
  %215 = load i8, i8* %213, align 1
  %216 = load i8, i8* %214, align 1
  store i8 %216, i8* %213, align 1
  store i8 %215, i8* %214, align 1
  %217 = getelementptr inbounds i8, i8* %205, i64 3
  %218 = getelementptr inbounds i8, i8* %62, i64 23
  %219 = load i8, i8* %217, align 1
  %220 = load i8, i8* %218, align 1
  store i8 %220, i8* %217, align 1
  store i8 %219, i8* %218, align 1
  %221 = getelementptr inbounds float, float* %136, i64 5
  %222 = bitcast float* %221 to i8*
  %223 = getelementptr inbounds i8, i8* %62, i64 24
  %224 = load i8, i8* %222, align 1
  %225 = load i8, i8* %223, align 1
  store i8 %225, i8* %222, align 1
  store i8 %224, i8* %223, align 1
  %226 = getelementptr inbounds i8, i8* %222, i64 1
  %227 = getelementptr inbounds i8, i8* %62, i64 25
  %228 = load i8, i8* %226, align 1
  %229 = load i8, i8* %227, align 1
  store i8 %229, i8* %226, align 1
  store i8 %228, i8* %227, align 1
  %230 = getelementptr inbounds i8, i8* %222, i64 2
  %231 = getelementptr inbounds i8, i8* %62, i64 26
  %232 = load i8, i8* %230, align 1
  %233 = load i8, i8* %231, align 1
  store i8 %233, i8* %230, align 1
  store i8 %232, i8* %231, align 1
  %234 = getelementptr inbounds i8, i8* %222, i64 3
  %235 = getelementptr inbounds i8, i8* %62, i64 27
  %236 = load i8, i8* %234, align 1
  %237 = load i8, i8* %235, align 1
  store i8 %237, i8* %234, align 1
  store i8 %236, i8* %235, align 1
  br label %251

238:                                              ; preds = %103, %110
  %239 = phi i1 [ %111, %110 ], [ %108, %103 ]
  %240 = phi i1 [ %112, %110 ], [ %97, %103 ]
  %241 = phi i1 [ %120, %110 ], [ false, %103 ]
  br i1 %239, label %242, label %246

242:                                              ; preds = %238
  %243 = icmp ne %"class.blink::ShadowData"* %51, null
  %244 = and i1 %240, %243
  br i1 %244, label %245, label %251, !prof !49

245:                                              ; preds = %242
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* nonnull align 4 %52, i64 28, i1 false) #15
  br label %251

246:                                              ; preds = %238
  %247 = icmp ne %"class.blink::ShadowData"* %65, null
  %248 = and i1 %71, %247
  %249 = and i1 %241, %248
  br i1 %249, label %250, label %251, !prof !167

250:                                              ; preds = %246
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %64, i8* nonnull align 4 %62, i64 28, i1 false) #15
  br label %251

251:                                              ; preds = %109, %80, %121, %250, %245, %242, %246, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.350"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 %1, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %12, align 8
  %14 = bitcast %"class.WTF::Vector.350"* %0 to %"class.WTF::VectorBuffer.351"*
  switch i32 %1, label %15 [
    i32 0, label %30
    i32 1, label %29
  ]

15:                                               ; preds = %11
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ShadowDataEEEmm(i64 %16) #15
  %18 = load i32, i32* %3, align 8
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ShadowDataEEEmm(i64 %21) #15
  br label %23

23:                                               ; preds = %20, %15
  %24 = phi i64 [ %22, %20 ], [ 28, %15 ]
  %25 = icmp eq i64 %24, %17
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = udiv i64 %17, 28
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %3, align 8
  br label %37

29:                                               ; preds = %11, %23
  tail call void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.350"* %0, i32 %1)
  br label %37

30:                                               ; preds = %11
  %31 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = ptrtoint i8* %31 to i64
  %33 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  store i32 1, i32* %3, align 8
  %34 = bitcast i8* %31 to %"class.blink::ShadowData"*
  %35 = icmp eq %"class.blink::ShadowData"* %13, %34
  br i1 %35, label %37, label %36, !prof !49

36:                                               ; preds = %30
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.351"* %14, %"class.blink::ShadowData"* %13) #15
  br label %37

37:                                               ; preds = %36, %30, %26, %29, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.350"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %5, align 8
  %7 = icmp eq %"class.blink::ShadowData"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::ShadowData"*
  %10 = icmp eq %"class.blink::ShadowData"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.WTF::Vector.350"* %0 to %"class.WTF::VectorBuffer.351"*
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !21

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::ShadowData"* %6 to i8*
  %27 = mul nuw nsw i64 %25, 28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #15
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.351"* %19, %"class.blink::ShadowData"* nonnull %6) #15
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ShadowDataEEEmm(i64 %30) #15
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10ShadowDataEEEPKcv, i64 0, i64 0)) #15
  %33 = udiv i64 %31, 28
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::ShadowData"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !49

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::ShadowData"* %36 to i8*
  %45 = mul nuw nsw i64 %43, 28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #15
  %46 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::ShadowData"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::ShadowData"*
  %51 = icmp eq %"class.blink::ShadowData"* %48, %50
  br i1 %51, label %54, label %52, !prof !49

52:                                               ; preds = %47
  %53 = bitcast %"class.WTF::Vector.350"* %0 to %"class.WTF::VectorBuffer.351"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.351"* %53, %"class.blink::ShadowData"* %48) #15
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ShadowDataEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 76620946
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 76620946) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 28
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.351"*, %"class.blink::ShadowData"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare %"class.blink::StyleImage"* @_ZN5blink21ElementStyleResources13GetStyleImageENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::ElementStyleResources"*, i32, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue4IsPxEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue32IsCalculatedPercentageWithLengthEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17CSSPrimitiveValue16CreateFromLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #11

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue7IsAngleEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue6IsTimeEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare double @_ZNK5blink17CSSPrimitiveValue14ComputeSecondsEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsResolutionEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare double @_ZNK5blink17CSSPrimitiveValue19ComputeDotsPerPixelEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink10StyleColor14IsColorKeywordENS_10CSSValueIDE(i32) local_unnamed_addr #3

declare %"class.blink::cssvalue::CSSColor"* @_ZN5blink8cssvalue8CSSColor6CreateEj(i32) local_unnamed_addr #3

declare %"class.blink::cssvalue::CSSURIValue"* @_ZNK5blink8cssvalue11CSSURIValue24ValueWithURLMadeAbsoluteERKNS_4KURLERKN3WTF12TextEncodingE(%"class.blink::cssvalue::CSSURIValue"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextEncoding"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_16CSSFunctionValueEEEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.192"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.192"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !21

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.192"*) local_unnamed_addr #3

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #3

declare void @_ZN5blink12CSSValueListC2ENS_8CSSValue9ClassTypeENS1_18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.1855"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1855"* %0, i32 %5) #15
  %6 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member.1324"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #15
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1855"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1855"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1855"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !49

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1324"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.1855"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #15
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.1855"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.1324"*
  %33 = icmp eq %"class.blink::Member.1324"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #15
  %39 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %8, align 8
  %40 = icmp eq %"class.blink::Member.1324"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member.1324"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.1324"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #15
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #15
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !21

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #15
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !20
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #15
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #15
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1855"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1855"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %5, align 8
  %7 = icmp eq %"class.blink::Member.1324"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.1324"*
  %10 = icmp eq %"class.blink::Member.1324"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1855"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.1855"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.1324"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !21

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #15
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.1324"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.1324"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #15
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #15
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1856"* %20, %"class.blink::Member.1324"* %6) #15
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #15
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #15
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.1324"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !49

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.1324"*
  %58 = icmp ne %"class.blink::Member.1324"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.1324"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #15
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.1324"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.1324"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.1324"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #15
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.1855"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #15
  %87 = load %"class.blink::Member.1324"*, %"class.blink::Member.1324"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.1324"*
  %90 = icmp eq %"class.blink::Member.1324"* %87, %89
  br i1 %90, label %93, label %91, !prof !49

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1856"* %92, %"class.blink::Member.1324"* %87) #15
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.1855"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.1855", %"class.WTF::Vector.1855"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #15
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.16, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.18, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.192"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.192"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1324"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !21

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1324"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1856"*, %"class.blink::Member.1324"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"class.blink::Member.1324"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.192"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.192"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1898"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1893"*, i32*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16FontTagValuePairIiEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.226"*, %"class.blink::FontTagValuePair"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %6, align 8
  %8 = icmp ugt %"class.blink::FontTagValuePair"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %7, i64 %10
  %12 = icmp ugt %"class.blink::FontTagValuePair"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !49

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::FontTagValuePair"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FontTagValuePairIiEEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FontTagValuePairIiEEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::FontTagValuePair"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::FontTagValuePair"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::FontTagValuePair"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !49

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.226"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::FontTagValuePair"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::FontTagValuePair"* %1 to i64
  %56 = ptrtoint %"class.blink::FontTagValuePair"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.226", %"class.WTF::Vector.226"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !49

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::FontTagValuePair"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FontTagValuePairIiEEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FontTagValuePairIiEEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::FontTagValuePair"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::FontTagValuePair"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !49

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.226"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.226"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::FontTagValuePair"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::FontTagValuePair"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::FontTagValuePair"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::FontTagValuePair"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %100, i64 %103
  %105 = bitcast %"class.blink::FontTagValuePair"* %101 to i64*
  %106 = bitcast %"class.blink::FontTagValuePair"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FontTagValuePairIiEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1864"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EEjfEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.1861"*, i32* dereferenceable(4), float* dereferenceable(4)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1864"*, %"struct.WTF::KeyValuePair.1864"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1864"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1864"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1861"* %0, %"struct.WTF::KeyValuePair.1864"* null)
  %9 = load %"struct.WTF::KeyValuePair.1864"*, %"struct.WTF::KeyValuePair.1864"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1864"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.1864"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.1864"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %98, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.1864"* %52, %"struct.WTF::KeyValuePair.1864"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.1864"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1864"* %59 to i64*
  store i64 9187343239835811840, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.1864"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %81, i64 0, i32 1
  %84 = bitcast float* %2 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = bitcast float* %83 to i32*
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, %89
  %93 = shl i32 %92, 1
  %94 = load i32, i32* %12, align 8
  %95 = icmp ult i32 %93, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %79
  %97 = tail call %"struct.WTF::KeyValuePair.1864"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1861"* %0, %"struct.WTF::KeyValuePair.1864"* %81)
  br label %98

98:                                               ; preds = %50, %79, %96
  %99 = phi i8 [ 1, %79 ], [ 1, %96 ], [ 0, %50 ]
  %100 = phi %"struct.WTF::KeyValuePair.1864"* [ %81, %79 ], [ %97, %96 ], [ %52, %50 ]
  %101 = insertvalue { %"struct.WTF::KeyValuePair.1864"*, i8 } undef, %"struct.WTF::KeyValuePair.1864"* %100, 0
  %102 = insertvalue { %"struct.WTF::KeyValuePair.1864"*, i8 } %101, i8 %99, 1
  ret { %"struct.WTF::KeyValuePair.1864"*, i8 } %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1864"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1861"*, %"struct.WTF::KeyValuePair.1864"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjfEEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1864"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %117, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 4
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967292
  %42 = add nsw i64 %41, -4
  %43 = lshr exact i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 28
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %50
  %53 = bitcast %"struct.WTF::KeyValuePair.1864"* %52 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %52, i64 2
  %55 = bitcast %"struct.WTF::KeyValuePair.1864"* %54 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %55, align 4
  %56 = or i64 %50, 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair.1864"* %57 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %57, i64 2
  %60 = bitcast %"struct.WTF::KeyValuePair.1864"* %59 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %60, align 4
  %61 = or i64 %50, 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.1864"* %62 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %62, i64 2
  %65 = bitcast %"struct.WTF::KeyValuePair.1864"* %64 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %65, align 4
  %66 = or i64 %50, 12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair.1864"* %67 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %67, i64 2
  %70 = bitcast %"struct.WTF::KeyValuePair.1864"* %69 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %70, align 4
  %71 = or i64 %50, 16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair.1864"* %72 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %72, i64 2
  %75 = bitcast %"struct.WTF::KeyValuePair.1864"* %74 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %75, align 4
  %76 = or i64 %50, 20
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair.1864"* %77 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %77, i64 2
  %80 = bitcast %"struct.WTF::KeyValuePair.1864"* %79 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %80, align 4
  %81 = or i64 %50, 24
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %81
  %83 = bitcast %"struct.WTF::KeyValuePair.1864"* %82 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %83, align 4
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %82, i64 2
  %85 = bitcast %"struct.WTF::KeyValuePair.1864"* %84 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %85, align 4
  %86 = or i64 %50, 28
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %86
  %88 = bitcast %"struct.WTF::KeyValuePair.1864"* %87 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %88, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %87, i64 2
  %90 = bitcast %"struct.WTF::KeyValuePair.1864"* %89 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %90, align 4
  %91 = add i64 %50, 32
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !168

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %98
  %101 = bitcast %"struct.WTF::KeyValuePair.1864"* %100 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %101, align 4
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %100, i64 2
  %103 = bitcast %"struct.WTF::KeyValuePair.1864"* %102 to <2 x i64>*
  store <2 x i64> <i64 9187343239835811840, i64 9187343239835811840>, <2 x i64>* %103, align 4
  %104 = add i64 %98, 4
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !170

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %117, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %115, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %36, i64 %112
  %114 = bitcast %"struct.WTF::KeyValuePair.1864"* %113 to i64*
  store i64 9187343239835811840, i64* %114, align 4
  %115 = add nuw nsw i64 %112, 1
  %116 = icmp eq i64 %115, %33
  br i1 %116, label %117, label %111, !llvm.loop !172

117:                                              ; preds = %111, %107, %31
  %118 = call %"struct.WTF::KeyValuePair.1864"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_(%"class.WTF::HashTable.1861"* %0, %"struct.WTF::KeyValuePair.1864"* %36, i32 %32, %"struct.WTF::KeyValuePair.1864"* %1) #15
  ret %"struct.WTF::KeyValuePair.1864"* %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1864"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjfEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENS7_IfEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_(%"class.WTF::HashTable.1861"*, %"struct.WTF::KeyValuePair.1864"*, i32, %"struct.WTF::KeyValuePair.1864"*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.1864"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.1861"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.1864"*, %"struct.WTF::KeyValuePair.1864"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1864"* %16 to i64
  br label %31

18:                                               ; preds = %118
  %19 = bitcast %"class.WTF::HashTable.1861"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %119, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.1864"* [ null, %10 ], [ %122, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #15
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.1861", %"class.WTF::HashTable.1861"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.1864"* %23

31:                                               ; preds = %13, %118
  %32 = phi i64 [ %17, %13 ], [ %119, %118 ]
  %33 = phi i32 [ %7, %13 ], [ %120, %118 ]
  %34 = phi %"struct.WTF::KeyValuePair.1864"* [ %16, %13 ], [ %121, %118 ]
  %35 = phi %"struct.WTF::KeyValuePair.1864"* [ null, %13 ], [ %122, %118 ]
  %36 = phi i32 [ 0, %13 ], [ %123, %118 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %118, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair.1864"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair.1864"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair.1864"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair.1864"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.1864"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair.1864"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -1
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair.1864"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair.1864"*
  %109 = bitcast %"struct.WTF::KeyValuePair.1864"* %38 to i64*
  %110 = inttoptr i64 %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = load %"struct.WTF::KeyValuePair.1864"*, %"struct.WTF::KeyValuePair.1864"** %9, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.1864", %"struct.WTF::KeyValuePair.1864"* %112, i64 %37
  %114 = icmp eq %"struct.WTF::KeyValuePair.1864"* %113, %3
  %115 = select i1 %114, %"struct.WTF::KeyValuePair.1864"* %108, %"struct.WTF::KeyValuePair.1864"* %35
  %116 = load i32, i32* %6, align 8
  %117 = ptrtoint %"struct.WTF::KeyValuePair.1864"* %112 to i64
  br label %118

118:                                              ; preds = %31, %106
  %119 = phi i64 [ %32, %31 ], [ %117, %106 ]
  %120 = phi i32 [ %33, %31 ], [ %116, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair.1864"* [ %34, %31 ], [ %112, %106 ]
  %122 = phi %"struct.WTF::KeyValuePair.1864"* [ %35, %31 ], [ %115, %106 ]
  %123 = add i32 %36, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %18, label %31
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16FontTagValuePairIfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.235"*, %"class.blink::FontTagValuePair.238"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.235", %"class.WTF::Vector.235"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.235", %"class.WTF::Vector.235"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"** %6, align 8
  %8 = icmp ugt %"class.blink::FontTagValuePair.238"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %7, i64 %10
  %12 = icmp ugt %"class.blink::FontTagValuePair.238"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.235", %"class.WTF::Vector.235"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !49

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::FontTagValuePair.238"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FontTagValuePairIfEEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FontTagValuePairIfEEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.235"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::FontTagValuePair.238"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::FontTagValuePair.238"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::FontTagValuePair.238"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !49

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.235"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.235"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::FontTagValuePair.238"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::FontTagValuePair.238"* %1 to i64
  %56 = ptrtoint %"class.blink::FontTagValuePair.238"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.235", %"class.WTF::Vector.235"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !49

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::FontTagValuePair.238"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FontTagValuePairIfEEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FontTagValuePairIfEEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.235"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::FontTagValuePair.238"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::FontTagValuePair.238"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !49

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.235"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.235"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::FontTagValuePair.238"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::FontTagValuePair.238"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::FontTagValuePair.238"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::FontTagValuePair.238"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %100, i64 %103
  %105 = bitcast %"class.blink::FontTagValuePair.238"* %101 to i64*
  %106 = bitcast %"class.blink::FontTagValuePair.238"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FontTagValuePairIfEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEvT0_S8_T_(%"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"*, i1 (i64, i64)** dereferenceable(8)) local_unnamed_addr #2 comdat {
  br label %4

4:                                                ; preds = %324, %3
  %5 = phi %"class.blink::FontTagValuePair.238"* [ %1, %3 ], [ %294, %324 ]
  %6 = phi %"class.blink::FontTagValuePair.238"* [ %0, %3 ], [ %17, %324 ]
  %7 = ptrtoint %"class.blink::FontTagValuePair.238"* %5 to i64
  %8 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %5, i64 -1
  %9 = bitcast %"class.blink::FontTagValuePair.238"* %8 to i64*
  %10 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %5, i64 -1, i32 1
  %12 = bitcast float* %11 to i32*
  %13 = ptrtoint %"class.blink::FontTagValuePair.238"* %5 to i64
  br label %14

14:                                               ; preds = %333, %4
  %15 = phi %"class.blink::FontTagValuePair.238"* [ %6, %4 ], [ %334, %333 ]
  br label %16

16:                                               ; preds = %215, %14
  %17 = phi %"class.blink::FontTagValuePair.238"* [ %15, %14 ], [ %198, %215 ]
  %18 = ptrtoint %"class.blink::FontTagValuePair.238"* %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %93 [
    i64 0, label %337
    i64 1, label %337
    i64 2, label %21
    i64 3, label %39
    i64 4, label %43
    i64 5, label %87
  ]

21:                                               ; preds = %16
  %22 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %23 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %5, i64 -1
  %24 = bitcast %"class.blink::FontTagValuePair.238"* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = bitcast %"class.blink::FontTagValuePair.238"* %17 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = tail call zeroext i1 %22(i64 %25, i64 %27) #15
  br i1 %28, label %29, label %337

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 0, i32 1
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = load i64, i64* %24, align 4
  store i64 %35, i64* %26, align 4
  %36 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %23, i64 0, i32 0
  store i32 %31, i32* %36, align 4
  %37 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %5, i64 -1, i32 1
  %38 = bitcast float* %37 to i32*
  store i32 %34, i32* %38, align 4
  br label %337

39:                                               ; preds = %16
  %40 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 1
  %41 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %5, i64 -1
  %42 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %17, %"class.blink::FontTagValuePair.238"* %40, %"class.blink::FontTagValuePair.238"* %41, i1 (i64, i64)** dereferenceable(8) %2)
  br label %337

43:                                               ; preds = %16
  %44 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 1
  %45 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 2
  %46 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %5, i64 -1
  %47 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %17, %"class.blink::FontTagValuePair.238"* %44, %"class.blink::FontTagValuePair.238"* %45, i1 (i64, i64)** dereferenceable(8) %2) #15
  %48 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %49 = bitcast %"class.blink::FontTagValuePair.238"* %46 to i64*
  %50 = load i64, i64* %49, align 4
  %51 = bitcast %"class.blink::FontTagValuePair.238"* %45 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = tail call zeroext i1 %48(i64 %50, i64 %52) #15
  br i1 %53, label %54, label %337

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %45, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 2, i32 1
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = load i64, i64* %49, align 4
  store i64 %60, i64* %51, align 4
  %61 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %46, i64 0, i32 0
  store i32 %56, i32* %61, align 4
  %62 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %5, i64 -1, i32 1
  %63 = bitcast float* %62 to i32*
  store i32 %59, i32* %63, align 4
  %64 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %65 = load i64, i64* %51, align 4
  %66 = bitcast %"class.blink::FontTagValuePair.238"* %44 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = tail call zeroext i1 %64(i64 %65, i64 %67) #15
  br i1 %68, label %69, label %337

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %44, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 1, i32 1
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = load i64, i64* %51, align 4
  store i64 %75, i64* %66, align 4
  store i32 %71, i32* %55, align 4
  store i32 %74, i32* %58, align 4
  %76 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %77 = bitcast %"class.blink::FontTagValuePair.238"* %17 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = tail call zeroext i1 %76(i64 %75, i64 %78) #15
  br i1 %79, label %80, label %337

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 0, i32 1
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = load i64, i64* %66, align 4
  store i64 %86, i64* %77, align 4
  store i32 %82, i32* %70, align 4
  store i32 %85, i32* %73, align 4
  br label %337

87:                                               ; preds = %16
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 1
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 2
  %90 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 3
  %91 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %5, i64 -1
  %92 = tail call i32 @_ZNSt3__17__sort5IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %17, %"class.blink::FontTagValuePair.238"* %88, %"class.blink::FontTagValuePair.238"* %89, %"class.blink::FontTagValuePair.238"* %90, %"class.blink::FontTagValuePair.238"* %91, i1 (i64, i64)** dereferenceable(8) %2)
  br label %337

93:                                               ; preds = %16
  %94 = icmp slt i64 %19, 248
  br i1 %94, label %95, label %141

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 2
  %97 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 1
  %98 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %17, %"class.blink::FontTagValuePair.238"* %97, %"class.blink::FontTagValuePair.238"* %96, i1 (i64, i64)** dereferenceable(8) %2) #15
  %99 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 3
  %100 = icmp eq %"class.blink::FontTagValuePair.238"* %99, %5
  br i1 %100, label %337, label %101

101:                                              ; preds = %95, %138
  %102 = phi %"class.blink::FontTagValuePair.238"* [ %103, %138 ], [ %96, %95 ]
  %103 = phi %"class.blink::FontTagValuePair.238"* [ %139, %138 ], [ %99, %95 ]
  %104 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %105 = bitcast %"class.blink::FontTagValuePair.238"* %103 to i64*
  %106 = load i64, i64* %105, align 4
  %107 = bitcast %"class.blink::FontTagValuePair.238"* %102 to i64*
  %108 = load i64, i64* %107, align 4
  %109 = tail call zeroext i1 %104(i64 %106, i64 %108) #15
  br i1 %109, label %110, label %138

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %103, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %103, i64 0, i32 1
  %114 = bitcast float* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = shl nuw i64 %116, 32
  %118 = zext i32 %112 to i64
  %119 = or i64 %117, %118
  br label %120

120:                                              ; preds = %127, %110
  %121 = phi %"class.blink::FontTagValuePair.238"* [ %102, %110 ], [ %129, %127 ]
  %122 = phi %"class.blink::FontTagValuePair.238"* [ %103, %110 ], [ %121, %127 ]
  %123 = bitcast %"class.blink::FontTagValuePair.238"* %121 to i64*
  %124 = bitcast %"class.blink::FontTagValuePair.238"* %122 to i64*
  %125 = load i64, i64* %123, align 4
  store i64 %125, i64* %124, align 4
  %126 = icmp eq %"class.blink::FontTagValuePair.238"* %121, %17
  br i1 %126, label %133, label %127

127:                                              ; preds = %120
  %128 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %129 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %121, i64 -1
  %130 = bitcast %"class.blink::FontTagValuePair.238"* %129 to i64*
  %131 = load i64, i64* %130, align 4
  %132 = tail call zeroext i1 %128(i64 %119, i64 %131) #15
  br i1 %132, label %120, label %133

133:                                              ; preds = %127, %120
  %134 = phi %"class.blink::FontTagValuePair.238"* [ %17, %120 ], [ %121, %127 ]
  %135 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %134, i64 0, i32 0
  store i32 %112, i32* %135, align 4
  %136 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %134, i64 0, i32 1
  %137 = bitcast float* %136 to i32*
  store i32 %115, i32* %137, align 4
  br label %138

138:                                              ; preds = %133, %101
  %139 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %103, i64 1
  %140 = icmp eq %"class.blink::FontTagValuePair.238"* %139, %5
  br i1 %140, label %337, label %101

141:                                              ; preds = %93
  %142 = icmp sgt i64 %19, 7992
  %143 = sdiv i64 %20, 2
  %144 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 %143
  br i1 %142, label %145, label %150

145:                                              ; preds = %141
  %146 = sdiv i64 %20, 4
  %147 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 %146
  %148 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %144, i64 %146
  %149 = tail call i32 @_ZNSt3__17__sort5IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %17, %"class.blink::FontTagValuePair.238"* %147, %"class.blink::FontTagValuePair.238"* %144, %"class.blink::FontTagValuePair.238"* %148, %"class.blink::FontTagValuePair.238"* %8, i1 (i64, i64)** dereferenceable(8) %2)
  br label %152

150:                                              ; preds = %141
  %151 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %17, %"class.blink::FontTagValuePair.238"* %144, %"class.blink::FontTagValuePair.238"* %8, i1 (i64, i64)** dereferenceable(8) %2)
  br label %152

152:                                              ; preds = %150, %145
  %153 = phi i32 [ %149, %145 ], [ %151, %150 ]
  %154 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %155 = bitcast %"class.blink::FontTagValuePair.238"* %17 to i64*
  %156 = load i64, i64* %155, align 4
  %157 = bitcast %"class.blink::FontTagValuePair.238"* %144 to i64*
  %158 = load i64, i64* %157, align 4
  %159 = tail call zeroext i1 %154(i64 %156, i64 %158) #15
  br i1 %159, label %247, label %160

160:                                              ; preds = %152, %228
  %161 = phi %"class.blink::FontTagValuePair.238"* [ %162, %228 ], [ %8, %152 ]
  %162 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %161, i64 -1
  %163 = icmp eq %"class.blink::FontTagValuePair.238"* %17, %162
  br i1 %163, label %164, label %228

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 1
  %166 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %167 = load i64, i64* %155, align 4
  %168 = load i64, i64* %9, align 4
  %169 = tail call zeroext i1 %166(i64 %167, i64 %168) #15
  br i1 %169, label %191, label %170

170:                                              ; preds = %164
  %171 = icmp eq %"class.blink::FontTagValuePair.238"* %165, %8
  br i1 %171, label %337, label %172

172:                                              ; preds = %170, %188
  %173 = phi %"class.blink::FontTagValuePair.238"* [ %189, %188 ], [ %165, %170 ]
  %174 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %175 = load i64, i64* %155, align 4
  %176 = bitcast %"class.blink::FontTagValuePair.238"* %173 to i64*
  %177 = load i64, i64* %176, align 4
  %178 = tail call zeroext i1 %174(i64 %175, i64 %177) #15
  br i1 %178, label %179, label %188

179:                                              ; preds = %172
  %180 = bitcast %"class.blink::FontTagValuePair.238"* %173 to i64*
  %181 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %173, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %173, i64 0, i32 1
  %184 = bitcast float* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = load i64, i64* %9, align 4
  store i64 %186, i64* %180, align 4
  store i32 %182, i32* %10, align 4
  store i32 %185, i32* %12, align 4
  %187 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %173, i64 1
  br label %191

188:                                              ; preds = %172
  %189 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %173, i64 1
  %190 = icmp eq %"class.blink::FontTagValuePair.238"* %189, %8
  br i1 %190, label %337, label %172

191:                                              ; preds = %179, %164
  %192 = phi %"class.blink::FontTagValuePair.238"* [ %165, %164 ], [ %187, %179 ]
  %193 = icmp eq %"class.blink::FontTagValuePair.238"* %192, %8
  br i1 %193, label %337, label %194

194:                                              ; preds = %191, %217
  %195 = phi %"class.blink::FontTagValuePair.238"* [ %211, %217 ], [ %8, %191 ]
  %196 = phi %"class.blink::FontTagValuePair.238"* [ %204, %217 ], [ %192, %191 ]
  br label %197

197:                                              ; preds = %197, %194
  %198 = phi %"class.blink::FontTagValuePair.238"* [ %196, %194 ], [ %204, %197 ]
  %199 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %200 = load i64, i64* %155, align 4
  %201 = bitcast %"class.blink::FontTagValuePair.238"* %198 to i64*
  %202 = load i64, i64* %201, align 4
  %203 = tail call zeroext i1 %199(i64 %200, i64 %202) #15
  %204 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %198, i64 1
  br i1 %203, label %205, label %197

205:                                              ; preds = %197
  %206 = bitcast %"class.blink::FontTagValuePair.238"* %198 to i64*
  br label %207

207:                                              ; preds = %205, %207
  %208 = phi %"class.blink::FontTagValuePair.238"* [ %211, %207 ], [ %195, %205 ]
  %209 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %210 = load i64, i64* %155, align 4
  %211 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %208, i64 -1
  %212 = bitcast %"class.blink::FontTagValuePair.238"* %211 to i64*
  %213 = load i64, i64* %212, align 4
  %214 = tail call zeroext i1 %209(i64 %210, i64 %213) #15
  br i1 %214, label %207, label %215

215:                                              ; preds = %207
  %216 = icmp ult %"class.blink::FontTagValuePair.238"* %198, %211
  br i1 %216, label %217, label %16

217:                                              ; preds = %215
  %218 = bitcast %"class.blink::FontTagValuePair.238"* %211 to i64*
  %219 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %198, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %198, i64 0, i32 1
  %222 = bitcast float* %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = load i64, i64* %218, align 4
  store i64 %224, i64* %206, align 4
  %225 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %211, i64 0, i32 0
  store i32 %220, i32* %225, align 4
  %226 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %208, i64 -1, i32 1
  %227 = bitcast float* %226 to i32*
  store i32 %223, i32* %227, align 4
  br label %194

228:                                              ; preds = %160
  %229 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %230 = bitcast %"class.blink::FontTagValuePair.238"* %162 to i64*
  %231 = load i64, i64* %230, align 4
  %232 = load i64, i64* %157, align 4
  %233 = tail call zeroext i1 %229(i64 %231, i64 %232) #15
  br i1 %233, label %234, label %160

234:                                              ; preds = %228
  %235 = bitcast %"class.blink::FontTagValuePair.238"* %17 to i64*
  %236 = bitcast %"class.blink::FontTagValuePair.238"* %162 to i64*
  %237 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 0, i32 1
  %240 = bitcast float* %239 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = load i64, i64* %236, align 4
  store i64 %242, i64* %235, align 4
  %243 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %162, i64 0, i32 0
  store i32 %238, i32* %243, align 4
  %244 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %161, i64 -1, i32 1
  %245 = bitcast float* %244 to i32*
  store i32 %241, i32* %245, align 4
  %246 = add i32 %153, 1
  br label %247

247:                                              ; preds = %152, %234
  %248 = phi %"class.blink::FontTagValuePair.238"* [ %162, %234 ], [ %8, %152 ]
  %249 = phi i32 [ %246, %234 ], [ %153, %152 ]
  %250 = ptrtoint %"class.blink::FontTagValuePair.238"* %17 to i64
  %251 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %17, i64 1
  %252 = icmp ult %"class.blink::FontTagValuePair.238"* %251, %248
  br i1 %252, label %253, label %293

253:                                              ; preds = %247, %279
  %254 = phi %"class.blink::FontTagValuePair.238"* [ %272, %279 ], [ %248, %247 ]
  %255 = phi %"class.blink::FontTagValuePair.238"* [ %266, %279 ], [ %251, %247 ]
  %256 = phi i32 [ %290, %279 ], [ %249, %247 ]
  %257 = phi %"class.blink::FontTagValuePair.238"* [ %292, %279 ], [ %144, %247 ]
  %258 = bitcast %"class.blink::FontTagValuePair.238"* %257 to i64*
  br label %259

259:                                              ; preds = %259, %253
  %260 = phi %"class.blink::FontTagValuePair.238"* [ %255, %253 ], [ %266, %259 ]
  %261 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %262 = bitcast %"class.blink::FontTagValuePair.238"* %260 to i64*
  %263 = load i64, i64* %262, align 4
  %264 = load i64, i64* %258, align 4
  %265 = tail call zeroext i1 %261(i64 %263, i64 %264) #15
  %266 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %260, i64 1
  br i1 %265, label %259, label %267

267:                                              ; preds = %259
  %268 = bitcast %"class.blink::FontTagValuePair.238"* %260 to i64*
  br label %269

269:                                              ; preds = %267, %269
  %270 = phi %"class.blink::FontTagValuePair.238"* [ %272, %269 ], [ %254, %267 ]
  %271 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %272 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %270, i64 -1
  %273 = bitcast %"class.blink::FontTagValuePair.238"* %272 to i64*
  %274 = load i64, i64* %273, align 4
  %275 = load i64, i64* %258, align 4
  %276 = tail call zeroext i1 %271(i64 %274, i64 %275) #15
  br i1 %276, label %277, label %269

277:                                              ; preds = %269
  %278 = icmp ugt %"class.blink::FontTagValuePair.238"* %260, %272
  br i1 %278, label %293, label %279

279:                                              ; preds = %277
  %280 = bitcast %"class.blink::FontTagValuePair.238"* %272 to i64*
  %281 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %260, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %260, i64 0, i32 1
  %284 = bitcast float* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = load i64, i64* %280, align 4
  store i64 %286, i64* %268, align 4
  %287 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %272, i64 0, i32 0
  store i32 %282, i32* %287, align 4
  %288 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %270, i64 -1, i32 1
  %289 = bitcast float* %288 to i32*
  store i32 %285, i32* %289, align 4
  %290 = add i32 %256, 1
  %291 = icmp eq %"class.blink::FontTagValuePair.238"* %257, %260
  %292 = select i1 %291, %"class.blink::FontTagValuePair.238"* %272, %"class.blink::FontTagValuePair.238"* %257
  br label %253

293:                                              ; preds = %277, %247
  %294 = phi %"class.blink::FontTagValuePair.238"* [ %251, %247 ], [ %260, %277 ]
  %295 = phi i32 [ %249, %247 ], [ %256, %277 ]
  %296 = phi %"class.blink::FontTagValuePair.238"* [ %144, %247 ], [ %257, %277 ]
  %297 = icmp eq %"class.blink::FontTagValuePair.238"* %294, %296
  br i1 %297, label %316, label %298

298:                                              ; preds = %293
  %299 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %300 = bitcast %"class.blink::FontTagValuePair.238"* %296 to i64*
  %301 = load i64, i64* %300, align 4
  %302 = bitcast %"class.blink::FontTagValuePair.238"* %294 to i64*
  %303 = load i64, i64* %302, align 4
  %304 = tail call zeroext i1 %299(i64 %301, i64 %303) #15
  br i1 %304, label %305, label %316

305:                                              ; preds = %298
  %306 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %294, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %294, i64 0, i32 1
  %309 = bitcast float* %308 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = load i64, i64* %300, align 4
  store i64 %311, i64* %302, align 4
  %312 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %296, i64 0, i32 0
  store i32 %307, i32* %312, align 4
  %313 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %296, i64 0, i32 1
  %314 = bitcast float* %313 to i32*
  store i32 %310, i32* %314, align 4
  %315 = add i32 %295, 1
  br label %316

316:                                              ; preds = %293, %305, %298
  %317 = phi i32 [ %315, %305 ], [ %295, %298 ], [ %295, %293 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %326

319:                                              ; preds = %316
  %320 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEbT0_S8_T_(%"class.blink::FontTagValuePair.238"* %17, %"class.blink::FontTagValuePair.238"* %294, i1 (i64, i64)** dereferenceable(8) %2)
  %321 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %294, i64 1
  %322 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEbT0_S8_T_(%"class.blink::FontTagValuePair.238"* %321, %"class.blink::FontTagValuePair.238"* %5, i1 (i64, i64)** dereferenceable(8) %2)
  br i1 %322, label %323, label %325

323:                                              ; preds = %319
  br i1 %320, label %337, label %324

324:                                              ; preds = %323, %335
  br label %4

325:                                              ; preds = %319
  br i1 %320, label %333, label %326

326:                                              ; preds = %325, %316
  %327 = ptrtoint %"class.blink::FontTagValuePair.238"* %294 to i64
  %328 = sub i64 %327, %250
  %329 = sub i64 %13, %327
  %330 = icmp slt i64 %328, %329
  br i1 %330, label %331, label %335

331:                                              ; preds = %326
  tail call void @_ZNSt3__16__sortIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEvT0_S8_T_(%"class.blink::FontTagValuePair.238"* %17, %"class.blink::FontTagValuePair.238"* %294, i1 (i64, i64)** dereferenceable(8) %2)
  %332 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %294, i64 1
  br label %333

333:                                              ; preds = %331, %325
  %334 = phi %"class.blink::FontTagValuePair.238"* [ %321, %325 ], [ %332, %331 ]
  br label %14

335:                                              ; preds = %326
  %336 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %294, i64 1
  tail call void @_ZNSt3__16__sortIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEvT0_S8_T_(%"class.blink::FontTagValuePair.238"* %336, %"class.blink::FontTagValuePair.238"* %5, i1 (i64, i64)** dereferenceable(8) %2)
  br label %324

337:                                              ; preds = %323, %191, %16, %16, %170, %188, %138, %95, %80, %69, %54, %43, %21, %29, %39, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"*, i1 (i64, i64)** dereferenceable(8)) local_unnamed_addr #2 comdat {
  %5 = load i1 (i64, i64)*, i1 (i64, i64)** %3, align 8
  %6 = bitcast %"class.blink::FontTagValuePair.238"* %1 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = bitcast %"class.blink::FontTagValuePair.238"* %0 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = tail call zeroext i1 %5(i64 %7, i64 %9) #15
  %11 = load i1 (i64, i64)*, i1 (i64, i64)** %3, align 8
  %12 = bitcast %"class.blink::FontTagValuePair.238"* %2 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = load i64, i64* %6, align 4
  %15 = tail call zeroext i1 %11(i64 %13, i64 %14) #15
  br i1 %10, label %38, label %16

16:                                               ; preds = %4
  br i1 %15, label %17, label %65

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 0, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = load i64, i64* %12, align 4
  store i64 %23, i64* %6, align 4
  %24 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 0
  store i32 %19, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 1
  %26 = bitcast float* %25 to i32*
  store i32 %22, i32* %26, align 4
  %27 = load i1 (i64, i64)*, i1 (i64, i64)** %3, align 8
  %28 = load i64, i64* %6, align 4
  %29 = load i64, i64* %8, align 4
  %30 = tail call zeroext i1 %27(i64 %28, i64 %29) #15
  br i1 %30, label %31, label %65

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 1
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = load i64, i64* %6, align 4
  store i64 %37, i64* %8, align 4
  store i32 %33, i32* %18, align 4
  store i32 %36, i32* %21, align 4
  br label %65

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 1
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  br i1 %15, label %44, label %49

44:                                               ; preds = %38
  %45 = load i64, i64* %12, align 4
  store i64 %45, i64* %8, align 4
  %46 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 0
  store i32 %40, i32* %46, align 4
  %47 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 1
  %48 = bitcast float* %47 to i32*
  store i32 %43, i32* %48, align 4
  br label %65

49:                                               ; preds = %38
  %50 = load i64, i64* %6, align 4
  store i64 %50, i64* %8, align 4
  %51 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 0, i32 0
  store i32 %40, i32* %51, align 4
  %52 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 0, i32 1
  %53 = bitcast float* %52 to i32*
  store i32 %43, i32* %53, align 4
  %54 = load i1 (i64, i64)*, i1 (i64, i64)** %3, align 8
  %55 = load i64, i64* %12, align 4
  %56 = load i64, i64* %6, align 4
  %57 = tail call zeroext i1 %54(i64 %55, i64 %56) #15
  br i1 %57, label %58, label %65

58:                                               ; preds = %49
  %59 = load i32, i32* %51, align 4
  %60 = load i32, i32* %53, align 4
  %61 = load i64, i64* %12, align 4
  store i64 %61, i64* %6, align 4
  %62 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 0
  store i32 %59, i32* %62, align 4
  %63 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 1
  %64 = bitcast float* %63 to i32*
  store i32 %60, i32* %64, align 4
  br label %65

65:                                               ; preds = %49, %58, %17, %31, %16, %44
  %66 = phi i32 [ 1, %44 ], [ 0, %16 ], [ 2, %31 ], [ 1, %17 ], [ 2, %58 ], [ 1, %49 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"*, i1 (i64, i64)** dereferenceable(8)) local_unnamed_addr #2 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %0, %"class.blink::FontTagValuePair.238"* %1, %"class.blink::FontTagValuePair.238"* %2, i1 (i64, i64)** dereferenceable(8) %5) #15
  %8 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %9 = bitcast %"class.blink::FontTagValuePair.238"* %3 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = bitcast %"class.blink::FontTagValuePair.238"* %2 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = tail call zeroext i1 %8(i64 %10, i64 %12) #15
  br i1 %13, label %14, label %51

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = load i64, i64* %9, align 4
  store i64 %20, i64* %11, align 4
  %21 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %3, i64 0, i32 0
  store i32 %16, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %3, i64 0, i32 1
  %23 = bitcast float* %22 to i32*
  store i32 %19, i32* %23, align 4
  %24 = add i32 %7, 1
  %25 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %26 = load i64, i64* %11, align 4
  %27 = bitcast %"class.blink::FontTagValuePair.238"* %1 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = tail call zeroext i1 %25(i64 %26, i64 %28) #15
  br i1 %29, label %30, label %51

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 0, i32 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = load i64, i64* %11, align 4
  store i64 %36, i64* %27, align 4
  store i32 %32, i32* %15, align 4
  store i32 %35, i32* %18, align 4
  %37 = add i32 %7, 2
  %38 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %39 = load i64, i64* %27, align 4
  %40 = bitcast %"class.blink::FontTagValuePair.238"* %0 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = tail call zeroext i1 %38(i64 %39, i64 %41) #15
  br i1 %42, label %43, label %51

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 1
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = load i64, i64* %27, align 4
  store i64 %49, i64* %40, align 4
  store i32 %45, i32* %31, align 4
  store i32 %48, i32* %34, align 4
  %50 = add i32 %7, 3
  br label %51

51:                                               ; preds = %6, %14, %30, %43
  %52 = phi i32 [ %50, %43 ], [ %37, %30 ], [ %24, %14 ], [ %7, %6 ]
  %53 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %54 = bitcast %"class.blink::FontTagValuePair.238"* %4 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = load i64, i64* %9, align 4
  %57 = tail call zeroext i1 %53(i64 %55, i64 %56) #15
  br i1 %57, label %58, label %107

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %3, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %3, i64 0, i32 1
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = load i64, i64* %54, align 4
  store i64 %64, i64* %9, align 4
  %65 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %4, i64 0, i32 0
  store i32 %60, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %4, i64 0, i32 1
  %67 = bitcast float* %66 to i32*
  store i32 %63, i32* %67, align 4
  %68 = add i32 %52, 1
  %69 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %70 = load i64, i64* %9, align 4
  %71 = load i64, i64* %11, align 4
  %72 = tail call zeroext i1 %69(i64 %70, i64 %71) #15
  br i1 %72, label %73, label %107

73:                                               ; preds = %58
  %74 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %2, i64 0, i32 1
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = load i64, i64* %9, align 4
  store i64 %79, i64* %11, align 4
  store i32 %75, i32* %59, align 4
  store i32 %78, i32* %62, align 4
  %80 = add i32 %52, 2
  %81 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %82 = load i64, i64* %11, align 4
  %83 = bitcast %"class.blink::FontTagValuePair.238"* %1 to i64*
  %84 = load i64, i64* %83, align 4
  %85 = tail call zeroext i1 %81(i64 %82, i64 %84) #15
  br i1 %85, label %86, label %107

86:                                               ; preds = %73
  %87 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 0, i32 1
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = load i64, i64* %11, align 4
  store i64 %92, i64* %83, align 4
  store i32 %88, i32* %74, align 4
  store i32 %91, i32* %77, align 4
  %93 = add i32 %52, 3
  %94 = load i1 (i64, i64)*, i1 (i64, i64)** %5, align 8
  %95 = load i64, i64* %83, align 4
  %96 = bitcast %"class.blink::FontTagValuePair.238"* %0 to i64*
  %97 = load i64, i64* %96, align 4
  %98 = tail call zeroext i1 %94(i64 %95, i64 %97) #15
  br i1 %98, label %99, label %107

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 1
  %103 = bitcast float* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = load i64, i64* %83, align 4
  store i64 %105, i64* %96, align 4
  store i32 %101, i32* %87, align 4
  store i32 %104, i32* %90, align 4
  %106 = add i32 %52, 4
  br label %107

107:                                              ; preds = %58, %86, %99, %73, %51
  %108 = phi i32 [ %106, %99 ], [ %93, %86 ], [ %80, %73 ], [ %68, %58 ], [ %52, %51 ]
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEbT0_S8_T_(%"class.blink::FontTagValuePair.238"*, %"class.blink::FontTagValuePair.238"*, i1 (i64, i64)** dereferenceable(8)) local_unnamed_addr #2 comdat {
  %4 = ptrtoint %"class.blink::FontTagValuePair.238"* %1 to i64
  %5 = ptrtoint %"class.blink::FontTagValuePair.238"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %80 [
    i64 0, label %133
    i64 1, label %133
    i64 2, label %8
    i64 3, label %26
    i64 4, label %30
    i64 5, label %74
  ]

8:                                                ; preds = %3
  %9 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %10 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 -1
  %11 = bitcast %"class.blink::FontTagValuePair.238"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = bitcast %"class.blink::FontTagValuePair.238"* %0 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = tail call zeroext i1 %9(i64 %12, i64 %14) #15
  br i1 %15, label %16, label %133

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 1
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = load i64, i64* %11, align 4
  store i64 %22, i64* %13, align 4
  %23 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %10, i64 0, i32 0
  store i32 %18, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 -1, i32 1
  %25 = bitcast float* %24 to i32*
  store i32 %21, i32* %25, align 4
  br label %133

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 1
  %28 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 -1
  %29 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %0, %"class.blink::FontTagValuePair.238"* %27, %"class.blink::FontTagValuePair.238"* %28, i1 (i64, i64)** dereferenceable(8) %2)
  br label %133

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 1
  %32 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 2
  %33 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 -1
  %34 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %0, %"class.blink::FontTagValuePair.238"* %31, %"class.blink::FontTagValuePair.238"* %32, i1 (i64, i64)** dereferenceable(8) %2) #15
  %35 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %36 = bitcast %"class.blink::FontTagValuePair.238"* %33 to i64*
  %37 = load i64, i64* %36, align 4
  %38 = bitcast %"class.blink::FontTagValuePair.238"* %32 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = tail call zeroext i1 %35(i64 %37, i64 %39) #15
  br i1 %40, label %41, label %133

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %32, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 2, i32 1
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = load i64, i64* %36, align 4
  store i64 %47, i64* %38, align 4
  %48 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %33, i64 0, i32 0
  store i32 %43, i32* %48, align 4
  %49 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 -1, i32 1
  %50 = bitcast float* %49 to i32*
  store i32 %46, i32* %50, align 4
  %51 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %52 = load i64, i64* %38, align 4
  %53 = bitcast %"class.blink::FontTagValuePair.238"* %31 to i64*
  %54 = load i64, i64* %53, align 4
  %55 = tail call zeroext i1 %51(i64 %52, i64 %54) #15
  br i1 %55, label %56, label %133

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %31, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 1, i32 1
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = load i64, i64* %38, align 4
  store i64 %62, i64* %53, align 4
  store i32 %58, i32* %42, align 4
  store i32 %61, i32* %45, align 4
  %63 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %64 = bitcast %"class.blink::FontTagValuePair.238"* %0 to i64*
  %65 = load i64, i64* %64, align 4
  %66 = tail call zeroext i1 %63(i64 %62, i64 %65) #15
  br i1 %66, label %67, label %133

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 0, i32 1
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = load i64, i64* %53, align 4
  store i64 %73, i64* %64, align 4
  store i32 %69, i32* %57, align 4
  store i32 %72, i32* %60, align 4
  br label %133

74:                                               ; preds = %3
  %75 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 1
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 2
  %77 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 3
  %78 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %1, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort5IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %0, %"class.blink::FontTagValuePair.238"* %75, %"class.blink::FontTagValuePair.238"* %76, %"class.blink::FontTagValuePair.238"* %77, %"class.blink::FontTagValuePair.238"* %78, i1 (i64, i64)** dereferenceable(8) %2)
  br label %133

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 2
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 1
  %83 = tail call i32 @_ZNSt3__17__sort3IRPFbN5blink16FontTagValuePairIfEES3_EPS3_EEjT0_S8_S8_T_(%"class.blink::FontTagValuePair.238"* %0, %"class.blink::FontTagValuePair.238"* %82, %"class.blink::FontTagValuePair.238"* %81, i1 (i64, i64)** dereferenceable(8) %2)
  %84 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %0, i64 3
  %85 = icmp eq %"class.blink::FontTagValuePair.238"* %84, %1
  br i1 %85, label %133, label %86

86:                                               ; preds = %80, %126
  %87 = phi %"class.blink::FontTagValuePair.238"* [ %89, %126 ], [ %81, %80 ]
  %88 = phi i32 [ %127, %126 ], [ 0, %80 ]
  %89 = phi %"class.blink::FontTagValuePair.238"* [ %128, %126 ], [ %84, %80 ]
  %90 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %91 = bitcast %"class.blink::FontTagValuePair.238"* %89 to i64*
  %92 = load i64, i64* %91, align 4
  %93 = bitcast %"class.blink::FontTagValuePair.238"* %87 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = tail call zeroext i1 %90(i64 %92, i64 %94) #15
  br i1 %95, label %96, label %126

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %89, i64 0, i32 1
  %100 = bitcast float* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = shl nuw i64 %102, 32
  %104 = zext i32 %98 to i64
  %105 = or i64 %103, %104
  br label %106

106:                                              ; preds = %113, %96
  %107 = phi %"class.blink::FontTagValuePair.238"* [ %89, %96 ], [ %108, %113 ]
  %108 = phi %"class.blink::FontTagValuePair.238"* [ %87, %96 ], [ %115, %113 ]
  %109 = bitcast %"class.blink::FontTagValuePair.238"* %108 to i64*
  %110 = bitcast %"class.blink::FontTagValuePair.238"* %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = icmp eq %"class.blink::FontTagValuePair.238"* %108, %0
  br i1 %112, label %119, label %113

113:                                              ; preds = %106
  %114 = load i1 (i64, i64)*, i1 (i64, i64)** %2, align 8
  %115 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %108, i64 -1
  %116 = bitcast %"class.blink::FontTagValuePair.238"* %115 to i64*
  %117 = load i64, i64* %116, align 4
  %118 = tail call zeroext i1 %114(i64 %105, i64 %117) #15
  br i1 %118, label %106, label %119

119:                                              ; preds = %106, %113
  %120 = phi %"class.blink::FontTagValuePair.238"* [ %0, %106 ], [ %108, %113 ]
  %121 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %120, i64 0, i32 0
  store i32 %98, i32* %121, align 4
  %122 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %120, i64 0, i32 1
  %123 = bitcast float* %122 to i32*
  store i32 %101, i32* %123, align 4
  %124 = add i32 %88, 1
  %125 = icmp eq i32 %124, 8
  br i1 %125, label %130, label %126

126:                                              ; preds = %119, %86
  %127 = phi i32 [ %124, %119 ], [ %88, %86 ]
  %128 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %89, i64 1
  %129 = icmp eq %"class.blink::FontTagValuePair.238"* %128, %1
  br i1 %129, label %133, label %86

130:                                              ; preds = %119
  %131 = getelementptr inbounds %"class.blink::FontTagValuePair.238", %"class.blink::FontTagValuePair.238"* %89, i64 1
  %132 = icmp eq %"class.blink::FontTagValuePair.238"* %131, %1
  br label %133

133:                                              ; preds = %126, %130, %80, %67, %56, %41, %30, %8, %16, %3, %3, %74, %26
  %134 = phi i1 [ true, %74 ], [ true, %26 ], [ true, %3 ], [ true, %3 ], [ true, %16 ], [ true, %8 ], [ true, %30 ], [ true, %41 ], [ true, %56 ], [ true, %67 ], [ true, %80 ], [ %132, %130 ], [ true, %126 ]
  ret i1 %134
}

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.558"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !49

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.558"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !49

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.558"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.558"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.558", %"class.WTF::Vector.558"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !49

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.558"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !49

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.558"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.558"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #15
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !21

122:                                              ; preds = %113
  tail call void @llvm.trap() #15
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.476"*, %"class.blink::GridTrackSize"* dereferenceable(88)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp ugt %"class.blink::GridTrackSize"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %10
  %12 = icmp ugt %"class.blink::GridTrackSize"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !49

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13GridTrackSizeEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13GridTrackSizeEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.476"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 88
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::GridTrackSize"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.476"* %0, i32 %22) #15
  %36 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::GridTrackSize"* %1 to i64
  %39 = ptrtoint %"class.blink::GridTrackSize"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 88
  %42 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !49

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13GridTrackSizeEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13GridTrackSizeEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.476"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 88
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::GridTrackSize"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.476"* %0, i32 %50) #15
  %64 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::GridTrackSize"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::GridTrackSize"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::GridTrackSize"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %69, i64 %72, i32 0
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %70, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %69, i64 %72, i32 2
  %77 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %70, i64 0, i32 2
  %78 = bitcast %"class.blink::GridLength"* %77 to i64*
  %79 = bitcast %"class.blink::GridLength"* %76 to i64*
  %80 = load i64, i64* %78, align 4
  store i64 %80, i64* %79, align 4
  %81 = and i64 %80, 280375465082880
  %82 = icmp eq i64 %81, 8796093022208
  br i1 %82, label %83, label %85

83:                                               ; preds = %68
  %84 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %76, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %84) #15
  br label %85

85:                                               ; preds = %83, %68
  %86 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %69, i64 %72, i32 2, i32 1
  %87 = bitcast double* %86 to i8*
  %88 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %70, i64 0, i32 2, i32 1
  %89 = bitcast double* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %89, i64 12, i1 false) #15
  %90 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %69, i64 %72, i32 3
  %91 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %70, i64 0, i32 3
  %92 = bitcast %"class.blink::GridLength"* %91 to i64*
  %93 = bitcast %"class.blink::GridLength"* %90 to i64*
  %94 = load i64, i64* %92, align 4
  store i64 %94, i64* %93, align 4
  %95 = and i64 %94, 280375465082880
  %96 = icmp eq i64 %95, 8796093022208
  br i1 %96, label %97, label %99

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %90, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %98) #15
  br label %99

99:                                               ; preds = %97, %85
  %100 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %69, i64 %72, i32 3, i32 1
  %101 = bitcast double* %100 to i8*
  %102 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %70, i64 0, i32 3, i32 1
  %103 = bitcast double* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %103, i64 12, i1 false) #15
  %104 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %69, i64 %72, i32 4
  %105 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %70, i64 0, i32 4
  %106 = bitcast %"class.blink::GridLength"* %105 to i64*
  %107 = bitcast %"class.blink::GridLength"* %104 to i64*
  %108 = load i64, i64* %106, align 4
  store i64 %108, i64* %107, align 4
  %109 = and i64 %108, 280375465082880
  %110 = icmp eq i64 %109, 8796093022208
  br i1 %110, label %111, label %113

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %104, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %112) #15
  br label %113

113:                                              ; preds = %99, %111
  %114 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %69, i64 %72, i32 4, i32 1
  %115 = bitcast double* %114 to i8*
  %116 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %70, i64 0, i32 4, i32 1
  %117 = bitcast double* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %117, i64 12, i1 false) #15
  %118 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %69, i64 %72, i32 5
  %119 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %70, i64 0, i32 5
  %120 = load i16, i16* %119, align 8
  store i16 %120, i16* %118, align 8
  %121 = load i32, i32* %3, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13GridTrackSizeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.476"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.476"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink13GridTrackSizeENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::GridTrackSize"* %6, %"class.blink::GridTrackSize"* %10, %"class.blink::GridTrackSize"* null, i1 zeroext true) #15
  %13 = bitcast %"class.blink::GridTrackSize"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #15
  br label %32

14:                                               ; preds = %2
  %15 = zext i32 %1 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13GridTrackSizeEEEmm(i64 %15) #15
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13GridTrackSizeEEEPKcv, i64 0, i64 0)) #15
  %18 = udiv i64 %16, 88
  %19 = bitcast i8* %17 to %"class.blink::GridTrackSize"*
  %20 = ptrtoint i8* %17 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %22, i64 %25
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink13GridTrackSizeENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::GridTrackSize"* %22, %"class.blink::GridTrackSize"* %26, %"class.blink::GridTrackSize"* %19, i1 zeroext false) #15
  %27 = bitcast %"class.WTF::Vector.476"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #15
  %29 = bitcast %"class.WTF::Vector.476"* %0 to i64*
  store atomic i64 %20, i64* %29 monotonic, align 8
  %30 = trunc i64 %18 to i32
  %31 = getelementptr inbounds %"class.WTF::Vector.476", %"class.WTF::Vector.476"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13GridTrackSizeEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 24379392
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 24379392) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 88
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink13GridTrackSizeENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"*, i1 zeroext) local_unnamed_addr #2 comdat align 2 {
  %5 = icmp eq %"class.blink::GridTrackSize"* %0, %1
  br i1 %5, label %78, label %6

6:                                                ; preds = %4, %74
  %7 = phi %"class.blink::GridTrackSize"* [ %76, %74 ], [ %0, %4 ]
  %8 = phi %"class.blink::GridTrackSize"* [ %75, %74 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 2
  %14 = bitcast %"class.blink::GridLength"* %13 to i64*
  %15 = bitcast %"class.blink::GridLength"* %12 to i64*
  %16 = load i64, i64* %14, align 4
  store i64 %16, i64* %15, align 4
  %17 = and i64 %16, 280375465082880
  %18 = icmp eq i64 %17, 8796093022208
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %12, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %20) #15
  br label %21

21:                                               ; preds = %19, %6
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 0, i32 2, i32 1
  %23 = bitcast double* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 2, i32 1
  %25 = bitcast double* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %25, i64 12, i1 false) #15
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 0, i32 3
  %27 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 3
  %28 = bitcast %"class.blink::GridLength"* %27 to i64*
  %29 = bitcast %"class.blink::GridLength"* %26 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 4
  %31 = and i64 %30, 280375465082880
  %32 = icmp eq i64 %31, 8796093022208
  br i1 %32, label %33, label %35

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %26, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %34) #15
  br label %35

35:                                               ; preds = %33, %21
  %36 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 0, i32 3, i32 1
  %37 = bitcast double* %36 to i8*
  %38 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 3, i32 1
  %39 = bitcast double* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %39, i64 12, i1 false) #15
  %40 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 0, i32 4
  %41 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 4
  %42 = bitcast %"class.blink::GridLength"* %41 to i64*
  %43 = bitcast %"class.blink::GridLength"* %40 to i64*
  %44 = load i64, i64* %42, align 4
  store i64 %44, i64* %43, align 4
  %45 = and i64 %44, 280375465082880
  %46 = icmp eq i64 %45, 8796093022208
  br i1 %46, label %47, label %49

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %40, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %35, %47
  %50 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 0, i32 4, i32 1
  %51 = bitcast double* %50 to i8*
  %52 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 4, i32 1
  %53 = bitcast double* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %53, i64 12, i1 false) #15
  %54 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 0, i32 5
  %55 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 5
  %56 = load i16, i16* %55, align 8
  store i16 %56, i16* %54, align 8
  %57 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 4, i32 0, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 8
  br i1 %59, label %60, label %62

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %61) #15
  br label %62

62:                                               ; preds = %60, %49
  %63 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 3, i32 0, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 8
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %67) #15
  br label %68

68:                                               ; preds = %66, %62
  %69 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 2, i32 0, i32 2
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 8
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %73) #15
  br label %74

74:                                               ; preds = %68, %72
  %75 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %8, i64 1
  %76 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 1
  %77 = icmp eq %"class.blink::GridTrackSize"* %76, %1
  br i1 %77, label %78, label %6

78:                                               ; preds = %74, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.547"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EENS_12StringAppendIS1_PKcEES5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_(%"class.WTF::HashTable.544"*, %"class.WTF::StringAppend"* dereferenceable(16), %"class.WTF::Vector.548"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.547"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_(%"class.WTF::HashTable.544"* %0, %"struct.WTF::KeyValuePair.547"* null)
  %9 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.547"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* %1) #15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = lshr i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %10
  %22 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %16) #15
  br label %23

23:                                               ; preds = %21, %10
  %24 = phi i32 [ %22, %21 ], [ %19, %10 ]
  %25 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %23
  %27 = load atomic i32, i32* %17 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %26
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %26
  %35 = phi i32 [ %33, %32 ], [ %31, %26 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #15
  br label %38

38:                                               ; preds = %23, %34, %37
  %39 = and i32 %24, %14
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %11, i64 %40
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %99, label %45

45:                                               ; preds = %38
  %46 = xor i32 %24, -1
  %47 = lshr i32 %24, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %45, %87
  %60 = phi %"struct.WTF::KeyValuePair.547"* [ %41, %45 ], [ %93, %87 ]
  %61 = phi %"struct.WTF::KeyValuePair.547"* [ null, %45 ], [ %88, %87 ]
  %62 = phi i64 [ %40, %45 ], [ %92, %87 ]
  %63 = phi i64 [ 0, %45 ], [ %90, %87 ]
  %64 = bitcast %"struct.WTF::KeyValuePair.547"* %60 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, inttoptr (i64 -1 to i8*)
  br i1 %66, label %87, label %67

67:                                               ; preds = %59
  %68 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* %1) #15
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %60, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"* %68) #15
  %72 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #15
  br label %86

86:                                               ; preds = %67, %82, %85
  br i1 %71, label %160, label %87

87:                                               ; preds = %59, %86
  %88 = phi %"struct.WTF::KeyValuePair.547"* [ %61, %86 ], [ %60, %59 ]
  %89 = icmp eq i64 %63, 0
  %90 = select i1 %89, i64 %58, i64 %63
  %91 = add i64 %90, %62
  %92 = and i64 %91, %15
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %11, i64 %92
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %97, label %59

97:                                               ; preds = %87
  %98 = icmp eq %"struct.WTF::KeyValuePair.547"* %88, null
  br i1 %98, label %99, label %102

99:                                               ; preds = %38, %97
  %100 = phi %"struct.WTF::KeyValuePair.547"* [ %93, %97 ], [ %41, %38 ]
  %101 = bitcast %"struct.WTF::KeyValuePair.547"* %100 to i64*
  br label %114

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %88, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %88, i64 0, i32 1, i32 0, i32 0, i32 1
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %88, i64 0, i32 1, i32 0, i32 0, i32 2
  %106 = bitcast %"class.WTF::Vector.548"* %103 to i64*
  %107 = bitcast %"struct.WTF::KeyValuePair.547"* %88 to i64*
  store i64 0, i64* %107, align 8
  store atomic i64 0, i64* %106 monotonic, align 8
  store i32 0, i32* %104, align 4
  store i32 0, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, 2147483647
  %111 = and i32 %110, 2147483647
  %112 = and i32 %109, -2147483648
  %113 = or i32 %111, %112
  store i32 %113, i32* %108, align 8
  br label %114

114:                                              ; preds = %99, %102
  %115 = phi i64* [ %101, %99 ], [ %107, %102 ]
  %116 = phi %"struct.WTF::KeyValuePair.547"* [ %100, %99 ], [ %88, %102 ]
  %117 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* %1) #15
  %118 = ptrtoint %"class.WTF::StringImpl"* %117 to i64
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %116, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  store i64 %118, i64* %115, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #15
  br label %135

135:                                              ; preds = %114, %131, %134
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %116, i64 0, i32 1
  %137 = bitcast %"class.WTF::Vector.548"* %2 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.WTF::Vector.548"* %136 to i64*
  %140 = load i64, i64* %139, align 8
  store atomic i64 %140, i64* %137 monotonic, align 8
  store atomic i64 %138, i64* %139 monotonic, align 8
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %142 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %2, i64 0, i32 0, i32 0, i32 1
  %143 = load i32, i32* %141, align 4
  %144 = load i32, i32* %142, align 4
  store i32 %144, i32* %141, align 4
  store i32 %143, i32* %142, align 4
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %116, i64 0, i32 1, i32 0, i32 0, i32 2
  %146 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %2, i64 0, i32 0, i32 0, i32 2
  %147 = load i32, i32* %145, align 4
  %148 = load i32, i32* %146, align 4
  store i32 %148, i32* %145, align 4
  store i32 %147, i32* %146, align 4
  %149 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = add i32 %150, 1
  store i32 %151, i32* %149, align 4
  %152 = getelementptr inbounds %"class.WTF::HashTable.544", %"class.WTF::HashTable.544"* %0, i64 0, i32 3
  %153 = load i32, i32* %152, align 8
  %154 = add i32 %153, %151
  %155 = shl i32 %154, 1
  %156 = load i32, i32* %12, align 8
  %157 = icmp ult i32 %155, %156
  br i1 %157, label %160, label %158

158:                                              ; preds = %135
  %159 = tail call %"struct.WTF::KeyValuePair.547"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_(%"class.WTF::HashTable.544"* %0, %"struct.WTF::KeyValuePair.547"* %116)
  br label %160

160:                                              ; preds = %86, %135, %158
  %161 = phi i8 [ 1, %135 ], [ 1, %158 ], [ 0, %86 ]
  %162 = phi %"struct.WTF::KeyValuePair.547"* [ %116, %135 ], [ %159, %158 ], [ %60, %86 ]
  %163 = insertvalue { %"struct.WTF::KeyValuePair.547"*, i8 } undef, %"struct.WTF::KeyValuePair.547"* %162, 0
  %164 = insertvalue { %"struct.WTF::KeyValuePair.547"*, i8 } %163, i8 %161, 1
  ret { %"struct.WTF::KeyValuePair.547"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2705", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2705", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2705", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.2705"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #15
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2705"* nonnull %6, i8* %16) #15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #15
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #15
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #15
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.2705"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #15
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2705"* nonnull %5, i8* %45) #15
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2704"* nonnull %46, i8* %25) #15
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2705"* nonnull %5, i8* %49) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #15
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #15
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !21

65:                                               ; preds = %58
  call void @llvm.trap() #15
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #15
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #15
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #15
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.2705"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #15
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2705"* nonnull %3, i8* %105) #15
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2704"* nonnull %106, i16* %85) #15
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2705"* nonnull %3, i16* %109) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #15
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #15
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !21

125:                                              ; preds = %118
  call void @llvm.trap() #15
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #15
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #15
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2705", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2705"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2705", %"class.WTF::StringTypeAdapter.2705"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2705"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2705"* nonnull %4, i8* %21) #15
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %46, i8* %47) #15
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2705"*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2704"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2705"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2704"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2705"*, i16*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseImEEvOT_(%"class.WTF::Vector.548"*, i64* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPm(%"class.WTF::Vector.548"* %0, i32 %5, i64* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.548", %"class.WTF::Vector.548"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i64, i64* %8, i64 %10
  %12 = load i64, i64* %6, align 8
  store i64 %12, i64* %11, align 8
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

declare void @_ZNSt3__16__sortIRNS_6__lessImmEEPmEEvT0_S5_T_(i64*, i64*, %"struct.std::__1::__less.2706"* dereferenceable(1)) local_unnamed_addr #3

declare void @_ZNK5blink6Length29SubtractFromOneHundredPercentEv(%"class.blink::Length"* sret, %"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.350"*, %"class.blink::ShadowData"* dereferenceable(28)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %6, align 8
  %8 = icmp ugt %"class.blink::ShadowData"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %7, i64 %10
  %12 = icmp ugt %"class.blink::ShadowData"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.350"* %0, i32 %5) #15
  %14 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::ShadowData"* %1 to i64
  %17 = ptrtoint %"class.blink::ShadowData"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 28
  tail call void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.350"* %0, i32 %5) #15
  %20 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::ShadowData"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::ShadowData"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %23, i64 %26
  %28 = bitcast %"class.blink::ShadowData"* %27 to i8*
  %29 = bitcast %"class.blink::ShadowData"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 28, i1 false) #15
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.350"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !49

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %31, align 8
  %33 = icmp eq %"class.blink::ShadowData"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10ShadowDataEEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10ShadowDataEEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 28
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.350", %"class.WTF::Vector.350"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.350"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.350"* %0, i32 %27) #15
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10ShapeValueEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10ShapeValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10ShapeValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.192"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10ShapeValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.192"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10ShapeValueEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10ShapeValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_10ShapeValueEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink10ShapeValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 16
  %4 = bitcast i8* %3 to %"class.blink::BasicShape"**
  %5 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %4, align 8
  %6 = icmp eq %"class.blink::BasicShape"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %5, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %8, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #15
  %10 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %8, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %8, i64 -2
  %15 = bitcast %"class.base::RefCounted.1"* %14 to %"class.blink::BasicShape"*
  %16 = bitcast %"class.base::RefCounted.1"* %14 to void (%"class.blink::BasicShape"*)***
  %17 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %17, i64 1
  %19 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %18, align 8
  tail call void %19(%"class.blink::BasicShape"* nonnull %15) #15
  br label %20

20:                                               ; preds = %1, %7, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10ShapeValueEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10ShapeValue5TraceEPNS_7VisitorE(%"class.blink::ShapeValue"*, %"class.blink::Visitor"*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ShapeValue", %"class.blink::ShapeValue"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member.327"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10StyleImageEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.716"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  %8 = icmp ugt %"class.blink::Length"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Length"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !49

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Length"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.716"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::Length"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.716"* %0, i32 %22) #15
  %36 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::Length"* %1 to i64
  %39 = ptrtoint %"class.blink::Length"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !49

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::Length"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.716"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::Length"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.716"* %0, i32 %50) #15
  %64 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::Length"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::Length"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::Length"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 %72
  %74 = bitcast %"class.blink::Length"* %70 to i64*
  %75 = bitcast %"class.blink::Length"* %73 to i64*
  %76 = load i64, i64* %74, align 4
  store i64 %76, i64* %75, align 4
  %77 = and i64 %76, 280375465082880
  %78 = icmp eq i64 %77, 8796093022208
  br i1 %78, label %79, label %80

79:                                               ; preds = %68
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %73) #15
  br label %80

80:                                               ; preds = %68, %79
  %81 = load i32, i32* %3, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.716"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %34

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Length"*, %"class.blink::Length"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.716"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %4, %28
  %15 = phi %"class.blink::Length"* [ %30, %28 ], [ %6, %4 ]
  %16 = phi %"class.blink::Length"* [ %29, %28 ], [ null, %4 ]
  %17 = bitcast %"class.blink::Length"* %15 to i64*
  %18 = bitcast %"class.blink::Length"* %16 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = and i64 %19, 280375465082880
  %21 = icmp eq i64 %20, 8796093022208
  br i1 %21, label %22, label %23

22:                                               ; preds = %14
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %16) #15
  br label %23

23:                                               ; preds = %22, %14
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %15) #15
  br label %28

28:                                               ; preds = %27, %23
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 1
  %31 = icmp eq %"class.blink::Length"* %30, %10
  br i1 %31, label %32, label %14

32:                                               ; preds = %28, %4
  %33 = bitcast %"class.blink::Length"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %33) #15
  br label %77

34:                                               ; preds = %2
  %35 = zext i32 %1 to i64
  %36 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %35) #15
  %37 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #15
  %38 = lshr i64 %36, 3
  %39 = ptrtoint i8* %37 to i64
  %40 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Length"*, %"class.blink::Length"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 %44
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %34
  %48 = bitcast %"class.blink::Length"* %41 to i8*
  br label %72

49:                                               ; preds = %34
  %50 = bitcast i8* %37 to %"class.blink::Length"*
  br label %51

51:                                               ; preds = %49, %65
  %52 = phi %"class.blink::Length"* [ %67, %65 ], [ %41, %49 ]
  %53 = phi %"class.blink::Length"* [ %66, %65 ], [ %50, %49 ]
  %54 = bitcast %"class.blink::Length"* %52 to i64*
  %55 = bitcast %"class.blink::Length"* %53 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 4
  %57 = and i64 %56, 280375465082880
  %58 = icmp eq i64 %57, 8796093022208
  br i1 %58, label %59, label %60

59:                                               ; preds = %51
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %53) #15
  br label %60

60:                                               ; preds = %59, %51
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 0, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %52) #15
  br label %65

65:                                               ; preds = %64, %60
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %53, i64 1
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 1
  %68 = icmp eq %"class.blink::Length"* %67, %45
  br i1 %68, label %69, label %51

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::Vector.716"* %0 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %47, %69
  %73 = phi i8* [ %71, %69 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #15
  %74 = bitcast %"class.WTF::Vector.716"* %0 to i64*
  store atomic i64 %39, i64* %74 monotonic, align 8
  %75 = trunc i64 %38 to i32
  %76 = getelementptr inbounds %"class.WTF::Vector.716", %"class.WTF::Vector.716"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %75, i32* %76, align 8
  br label %77

77:                                               ; preds = %72, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #11

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1885"*, %"class.blink::CSSParserToken"*, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1885", %"class.WTF::Vector.1885"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1885", %"class.WTF::Vector.1885"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %101

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.1885", %"class.WTF::Vector.1885"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %16 = icmp ugt %"class.blink::CSSParserToken"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %15, i64 %18
  %20 = icmp ugt %"class.blink::CSSParserToken"* %19, %1
  br i1 %20, label %58, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %101, !prof !49

30:                                               ; preds = %21
  %31 = icmp eq %"class.blink::CSSParserToken"* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %32) #15
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #15
  br i1 %31, label %35, label %40

35:                                               ; preds = %30
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.WTF::Vector.1885"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = udiv i64 %33, 24
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %101

40:                                               ; preds = %30
  %41 = udiv i64 %33, 24
  %42 = ptrtoint i8* %34 to i64
  %43 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %44 = icmp ne i8* %34, null
  %45 = icmp ne %"class.blink::CSSParserToken"* %43, null
  %46 = and i1 %44, %45
  %47 = bitcast %"class.blink::CSSParserToken"* %43 to i8*
  br i1 %46, label %48, label %54, !prof !49

48:                                               ; preds = %40
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = mul nuw nsw i64 %50, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %47, i64 %51, i1 false) #15
  %52 = bitcast %"class.WTF::Vector.1885"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %53, %48 ], [ %47, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #15
  %56 = bitcast %"class.WTF::Vector.1885"* %0 to i64*
  store atomic i64 %42, i64* %56 monotonic, align 8
  %57 = trunc i64 %41 to i32
  store i32 %57, i32* %10, align 8
  br label %101

58:                                               ; preds = %17
  %59 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %60 = ptrtoint %"class.blink::CSSParserToken"* %15 to i64
  %61 = sub i64 %59, %60
  %62 = sdiv exact i64 %61, 24
  %63 = lshr i32 %11, 2
  %64 = add nuw i32 %11, 1
  %65 = add i32 %64, %63
  %66 = icmp ugt i32 %65, 4
  %67 = select i1 %66, i32 %65, i32 4
  %68 = icmp ugt i32 %67, %9
  %69 = select i1 %68, i32 %67, i32 %9
  %70 = icmp ult i32 %11, %69
  br i1 %70, label %71, label %98, !prof !49

71:                                               ; preds = %58
  %72 = icmp eq %"class.blink::CSSParserToken"* %15, null
  %73 = zext i32 %69 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %73) #15
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #15
  %76 = ptrtoint i8* %75 to i64
  br i1 %72, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector.1885"* %0 to i64*
  store atomic i64 %76, i64* %78 monotonic, align 8
  br label %94

79:                                               ; preds = %71
  %80 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne %"class.blink::CSSParserToken"* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast %"class.blink::CSSParserToken"* %80 to i8*
  br i1 %83, label %85, label %91, !prof !49

85:                                               ; preds = %79
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = mul nuw nsw i64 %87, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* nonnull align 8 %84, i64 %88, i1 false) #15
  %89 = bitcast %"class.WTF::Vector.1885"* %0 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %79
  %92 = phi i8* [ %90, %85 ], [ %84, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #15
  %93 = bitcast %"class.WTF::Vector.1885"* %0 to i64*
  store atomic i64 %76, i64* %93 monotonic, align 8
  br label %94

94:                                               ; preds = %91, %77
  %95 = udiv i64 %74, 24
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %10, align 8
  %97 = bitcast i8* %75 to %"class.blink::CSSParserToken"*
  br label %98

98:                                               ; preds = %94, %58
  %99 = phi %"class.blink::CSSParserToken"* [ %15, %58 ], [ %97, %94 ]
  %100 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %99, i64 %62
  br label %101

101:                                              ; preds = %98, %21, %35, %54, %3
  %102 = phi %"class.blink::CSSParserToken"* [ %1, %3 ], [ %100, %98 ], [ %1, %21 ], [ %1, %35 ], [ %1, %54 ]
  %103 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #15
  %104 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %104, align 8
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = icmp ult i32 %9, %105
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* null, i8** %104, align 8
  br label %118

109:                                              ; preds = %101
  %110 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  %111 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %105) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %110, i8* %111) #15
  %112 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* %113, i8** %104, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #15
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #15
  br label %118

118:                                              ; preds = %108, %109, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #15
  %119 = getelementptr inbounds %"class.WTF::Vector.1885", %"class.WTF::Vector.1885"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %119, align 8
  %121 = load i32, i32* %7, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %120, i64 %122
  %124 = icmp ne %"class.blink::CSSParserToken"* %123, null
  %125 = icmp ne %"class.blink::CSSParserToken"* %102, null
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %132, !prof !49

127:                                              ; preds = %118
  %128 = zext i32 %2 to i64
  %129 = bitcast %"class.blink::CSSParserToken"* %123 to i8*
  %130 = bitcast %"class.blink::CSSParserToken"* %102 to i8*
  %131 = mul nuw nsw i64 %128, 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* nonnull align 8 %130, i64 %131, i1 false) #15
  br label %132

132:                                              ; preds = %118, %127
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink6Length5FixedIiEES0_T_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink6Length5FixedIiEES0_T_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink6Length5FixedIiEES0_T_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!13 = distinct !{!13, !"_ZN5blink6Length5FixedIiEES0_T_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!16 = distinct !{!16, !"_ZN5blink6Length5FixedIiEES0_T_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink6Length4AutoEv: argument 0"}
!19 = distinct !{!19, !"_ZN5blink6Length4AutoEv"}
!20 = !{i8 0, i8 2}
!21 = !{!"branch_weights", i32 1, i32 2000}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE: argument 0"}
!24 = distinct !{!24, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE"}
!25 = !{!26, !23}
!26 = distinct !{!26, !27, !"_ZN5blink6Length4AutoEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink6Length4AutoEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE: argument 0"}
!30 = distinct !{!30, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZN5blink6Length4AutoEv: argument 0"}
!33 = distinct !{!33, !"_ZN5blink6Length4AutoEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE: argument 0"}
!36 = distinct !{!36, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE"}
!37 = !{!38, !35}
!38 = distinct !{!38, !39, !"_ZN5blink6Length4AutoEv: argument 0"}
!39 = distinct !{!39, !"_ZN5blink6Length4AutoEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE: argument 0"}
!42 = distinct !{!42, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_ZN5blink6Length4AutoEv: argument 0"}
!45 = distinct !{!45, !"_ZN5blink6Length4AutoEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN5blink6Length4AutoEv: argument 0"}
!48 = distinct !{!48, !"_ZN5blink6Length4AutoEv"}
!49 = !{!"branch_weights", i32 2000, i32 1}
!50 = !{!"branch_weights", i32 1, i32 1048575}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN5blink6Length10MinContentEv: argument 0"}
!53 = distinct !{!53, !"_ZN5blink6Length10MinContentEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN5blink6Length10MaxContentEv: argument 0"}
!56 = distinct !{!56, !"_ZN5blink6Length10MaxContentEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE: argument 0"}
!59 = distinct !{!59, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE"}
!60 = !{!61, !58}
!61 = distinct !{!61, !62, !"_ZN5blink6Length4AutoEv: argument 0"}
!62 = distinct !{!62, !"_ZN5blink6Length4AutoEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN5blink6Length4AutoEv: argument 0"}
!65 = distinct !{!65, !"_ZN5blink6Length4AutoEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN5blink6Length4AutoEv: argument 0"}
!68 = distinct !{!68, !"_ZN5blink6Length4AutoEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN5blink6Length5FixedEv: argument 0"}
!71 = distinct !{!71, !"_ZN5blink6Length5FixedEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN5blink6Length10MinContentEv: argument 0"}
!74 = distinct !{!74, !"_ZN5blink6Length10MinContentEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN5blink6Length10MaxContentEv: argument 0"}
!77 = distinct !{!77, !"_ZN5blink6Length10MaxContentEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN5blink6Length13FillAvailableEv: argument 0"}
!80 = distinct !{!80, !"_ZN5blink6Length13FillAvailableEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN5blink6Length10FitContentEv: argument 0"}
!83 = distinct !{!83, !"_ZN5blink6Length10FitContentEv"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN5blink6Length4AutoEv: argument 0"}
!86 = distinct !{!86, !"_ZN5blink6Length4AutoEv"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN5blink6Length4NoneEv: argument 0"}
!89 = distinct !{!89, !"_ZN5blink6Length4NoneEv"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN5blinkL32LineHeightToLengthConversionDataERNS_18StyleResolverStateE: argument 0"}
!92 = distinct !{!92, !"_ZN5blinkL32LineHeightToLengthConversionDataERNS_18StyleResolverStateE"}
!93 = !{!94, !91}
!94 = distinct !{!94, !95, !"_ZNK5blink25CSSToLengthConversionData20CopyWithAdjustedZoomEf: argument 0"}
!95 = distinct !{!95, !"_ZNK5blink25CSSToLengthConversionData20CopyWithAdjustedZoomEf"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN5blink6Length5FixedIdEES0_T_: argument 0"}
!98 = distinct !{!98, !"_ZN5blink6Length5FixedIdEES0_T_"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN5blink6Length7PercentIfEES0_T_: argument 0"}
!101 = distinct !{!101, !"_ZN5blink6Length7PercentIfEES0_T_"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZN5blinkL32LineHeightToLengthConversionDataERNS_18StyleResolverStateE: argument 0"}
!104 = distinct !{!104, !"_ZN5blinkL32LineHeightToLengthConversionDataERNS_18StyleResolverStateE"}
!105 = !{!106, !103}
!106 = distinct !{!106, !107, !"_ZNK5blink25CSSToLengthConversionData20CopyWithAdjustedZoomEf: argument 0"}
!107 = distinct !{!107, !"_ZNK5blink25CSSToLengthConversionData20CopyWithAdjustedZoomEf"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!110 = distinct !{!110, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!111 = !{!112, !114}
!112 = distinct !{!112, !113, !"_ZN5blink6Length7PercentIdEES0_T_: argument 0"}
!113 = distinct !{!113, !"_ZN5blink6Length7PercentIdEES0_T_"}
!114 = distinct !{!114, !115, !"_ZN5blink26ComputedStyleInitialValues17InitialLineHeightEv: argument 0"}
!115 = distinct !{!115, !"_ZN5blink26ComputedStyleInitialValues17InitialLineHeightEv"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!118 = distinct !{!118, !"_ZN5blink6Length7PercentIiEES0_T_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!121 = distinct !{!121, !"_ZN5blink6Length7PercentIiEES0_T_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!124 = distinct !{!124, !"_ZN5blink6Length7PercentIiEES0_T_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!127 = distinct !{!127, !"_ZN5blink6Length7PercentIiEES0_T_"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!130 = distinct !{!130, !"_ZN5blink6Length7PercentIiEES0_T_"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!133 = distinct !{!133, !"_ZN5blink6Length7PercentIiEES0_T_"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZN5blink6Length4AutoEv: argument 0"}
!136 = distinct !{!136, !"_ZN5blink6Length4AutoEv"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZN5blink6Length4AutoEv: argument 0"}
!139 = distinct !{!139, !"_ZN5blink6Length4AutoEv"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE: argument 0"}
!142 = distinct !{!142, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE"}
!143 = !{!144, !141}
!144 = distinct !{!144, !145, !"_ZN5blink6Length4AutoEv: argument 0"}
!145 = distinct !{!145, !"_ZN5blink6Length4AutoEv"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE: argument 0"}
!148 = distinct !{!148, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE"}
!149 = !{!150, !147}
!150 = distinct !{!150, !151, !"_ZN5blink6Length4AutoEv: argument 0"}
!151 = distinct !{!151, !"_ZN5blink6Length4AutoEv"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE: argument 0"}
!154 = distinct !{!154, !"_ZN5blink21StyleBuilderConverter19ConvertLengthOrAutoERKNS_18StyleResolverStateERKNS_8CSSValueE"}
!155 = !{!156, !153}
!156 = distinct !{!156, !157, !"_ZN5blink6Length4AutoEv: argument 0"}
!157 = distinct !{!157, !"_ZN5blink6Length4AutoEv"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZNK5blink25CSSToLengthConversionData20CopyWithAdjustedZoomEf: argument 0"}
!160 = distinct !{!160, !"_ZNK5blink25CSSToLengthConversionData20CopyWithAdjustedZoomEf"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZN5blink6Length4AutoEv: argument 0"}
!163 = distinct !{!163, !"_ZN5blink6Length4AutoEv"}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZN5blink6Length4AutoEv: argument 0"}
!166 = distinct !{!166, !"_ZN5blink6Length4AutoEv"}
!167 = !{!"branch_weights", i32 2000, i32 2002}
!168 = distinct !{!168, !169}
!169 = !{!"llvm.loop.isvectorized", i32 1}
!170 = distinct !{!170, !171}
!171 = !{!"llvm.loop.unroll.disable"}
!172 = distinct !{!172, !173, !169}
!173 = !{!"llvm.loop.unroll.runtime.disable"}
