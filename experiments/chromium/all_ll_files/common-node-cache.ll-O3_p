; ModuleID = '../../v8/src/compiler/common-node-cache.cc'
source_filename = "../../v8/src/compiler/common-node-cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.24", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.24", %"class.v8::internal::compiler::NodeCache.24", %"class.v8::internal::compiler::NodeCache.24", %"class.v8::internal::compiler::NodeCache.24", %"class.v8::internal::compiler::NodeCache.24", %"class.v8::internal::compiler::NodeCache.51", %"class.v8::internal::compiler::NodeCache.78" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.9" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.v8::internal::ZoneAllocator.18" }
%"class.v8::internal::ZoneAllocator.18" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.v8::internal::compiler::NodeCache.24" = type { %"class.v8::internal::ZoneUnorderedMap.25" }
%"class.v8::internal::ZoneUnorderedMap.25" = type { %"class.std::__1::unordered_map.26" }
%"class.std::__1::unordered_map.26" = type { %"class.std::__1::__hash_table.27" }
%"class.std::__1::__hash_table.27" = type <{ %"class.std::__1::unique_ptr.28", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::__hash_node_base.31"** }
%"struct.std::__1::__hash_node_base.31" = type { %"struct.std::__1::__hash_node_base.31"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator.33" }
%"class.std::__1::__bucket_list_deallocator.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.v8::internal::ZoneAllocator.36" }
%"class.v8::internal::ZoneAllocator.36" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base.31" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.v8::internal::ZoneAllocator.40" }
%"class.v8::internal::ZoneAllocator.40" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::compiler::NodeCache.51" = type { %"class.v8::internal::ZoneUnorderedMap.52" }
%"class.v8::internal::ZoneUnorderedMap.52" = type { %"class.std::__1::unordered_map.53" }
%"class.std::__1::unordered_map.53" = type { %"class.std::__1::__hash_table.54" }
%"class.std::__1::__hash_table.54" = type <{ %"class.std::__1::unique_ptr.55", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.72", [4 x i8] }>
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.58"** }
%"struct.std::__1::__hash_node_base.58" = type { %"struct.std::__1::__hash_node_base.58"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__bucket_list_deallocator.60" }
%"class.std::__1::__bucket_list_deallocator.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.v8::internal::ZoneAllocator.63" }
%"class.v8::internal::ZoneAllocator.63" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65", %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.58" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.v8::internal::ZoneAllocator.67" }
%"class.v8::internal::ZoneAllocator.67" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::compiler::NodeCache.78" = type { %"class.v8::internal::ZoneUnorderedMap.79" }
%"class.v8::internal::ZoneUnorderedMap.79" = type { %"class.std::__1::unordered_map.80" }
%"class.std::__1::unordered_map.80" = type { %"class.std::__1::__hash_table.81" }
%"class.std::__1::__hash_table.81" = type <{ %"class.std::__1::unique_ptr.82", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84", %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::__hash_node_base.85"** }
%"struct.std::__1::__hash_node_base.85" = type { %"struct.std::__1::__hash_node_base.85"* }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__bucket_list_deallocator.87" }
%"class.std::__1::__bucket_list_deallocator.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.v8::internal::ZoneAllocator.90" }
%"class.v8::internal::ZoneAllocator.90" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base.85" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.v8::internal::ZoneAllocator.94" }
%"class.v8::internal::ZoneAllocator.94" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i64* }
%"class.std::__1::tuple.109" = type { i8 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106", %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.v8::internal::ZoneAllocator.108" }
%"class.v8::internal::ZoneAllocator.108" = type { %"class.v8::internal::Zone"* }
%"struct.std::__1::__hash_node.130" = type { %"struct.std::__1::__hash_node_base.58", i64, %"struct.std::__1::__hash_value_type.129" }
%"struct.std::__1::__hash_value_type.129" = type { %"struct.std::__1::pair.126" }
%"struct.std::__1::pair.126" = type { %"struct.std::__1::pair.127", %"class.v8::internal::compiler::Node"* }
%"struct.std::__1::pair.127" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__hash_node.137" = type { %"struct.std::__1::__hash_node_base.85", i64, %"struct.std::__1::__hash_value_type.136" }
%"struct.std::__1::__hash_value_type.136" = type { %"struct.std::__1::pair.133" }
%"struct.std::__1::pair.133" = type { %"struct.std::__1::pair.134", %"class.v8::internal::compiler::Node"* }
%"struct.std::__1::pair.134" = type <{ i64, i8, [7 x i8] }>
%"struct.std::__1::__hash_node.120" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type.119" }
%"struct.std::__1::__hash_value_type.119" = type { %"struct.std::__1::pair.118" }
%"struct.std::__1::pair.118" = type { i32, %"class.v8::internal::compiler::Node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.31", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.110" }
%"struct.std::__1::pair.110" = type { i64, %"class.v8::internal::compiler::Node"* }

$_ZN2v88internal8compiler9NodeCacheIiNS_4base4hashIiEENSt3__18equal_toIiEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE = comdat any

$_ZN2v88internal8compiler9NodeCacheIlNS_4base4hashIlEENSt3__18equal_toIlEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm = comdat any

@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"** @_ZN2v88internal8compiler15CommonNodeCache20FindExternalConstantENS0_17ExternalReferenceE(%"class.v8::internal::compiler::CommonNodeCache"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.109", align 1
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  store i64 %1, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i64* %5, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple.109", %"class.std::__1::tuple.109"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #5
  %11 = call { %"struct.std::__1::__hash_node_base.31"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.27"* %7, i64* nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.109"* nonnull dereferenceable(1) %4) #5
  %12 = extractvalue { %"struct.std::__1::__hash_node_base.31"*, i8 } %11, 0
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %12, i64 3
  %14 = bitcast %"struct.std::__1::__hash_node_base.31"* %13 to %"class.v8::internal::compiler::Node"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  ret %"class.v8::internal::compiler::Node"** %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"** @_ZN2v88internal8compiler15CommonNodeCache16FindHeapConstantENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::CommonNodeCache"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.109", align 1
  %5 = alloca i64, align 8
  %6 = ptrtoint i64* %1 to i64
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  store i64 %6, i64* %5, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i64* %5, i64** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::tuple.109", %"class.std::__1::tuple.109"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #5
  %12 = call { %"struct.std::__1::__hash_node_base.31"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.27"* %8, i64* nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.109"* nonnull dereferenceable(1) %4) #5
  %13 = extractvalue { %"struct.std::__1::__hash_node_base.31"*, i8 } %12, 0
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %13, i64 3
  %15 = bitcast %"struct.std::__1::__hash_node_base.31"* %14 to %"class.v8::internal::compiler::Node"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  ret %"class.v8::internal::compiler::Node"** %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15CommonNodeCache14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::CommonNodeCache"*, %"class.v8::internal::ZoneVector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler9NodeCacheIiNS_4base4hashIiEENSt3__18equal_toIiEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache"* %3, %"class.v8::internal::ZoneVector"* %1)
  %4 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal8compiler9NodeCacheIlNS_4base4hashIlEENSt3__18equal_toIlEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache.24"* %4, %"class.v8::internal::ZoneVector"* %1)
  %5 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal8compiler9NodeCacheIiNS_4base4hashIiEENSt3__18equal_toIiEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache"* %5, %"class.v8::internal::ZoneVector"* %1)
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 3
  tail call void @_ZN2v88internal8compiler9NodeCacheIiNS_4base4hashIiEENSt3__18equal_toIiEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache"* %6, %"class.v8::internal::ZoneVector"* %1)
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 4
  tail call void @_ZN2v88internal8compiler9NodeCacheIlNS_4base4hashIlEENSt3__18equal_toIlEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache.24"* %7, %"class.v8::internal::ZoneVector"* %1)
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 5
  tail call void @_ZN2v88internal8compiler9NodeCacheIlNS_4base4hashIlEENSt3__18equal_toIlEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache.24"* %8, %"class.v8::internal::ZoneVector"* %1)
  %9 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 6
  tail call void @_ZN2v88internal8compiler9NodeCacheIlNS_4base4hashIlEENSt3__18equal_toIlEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache.24"* %9, %"class.v8::internal::ZoneVector"* %1)
  %10 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 7
  tail call void @_ZN2v88internal8compiler9NodeCacheIlNS_4base4hashIlEENSt3__18equal_toIlEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache.24"* %10, %"class.v8::internal::ZoneVector"* %1)
  %11 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 8
  tail call void @_ZN2v88internal8compiler9NodeCacheIlNS_4base4hashIlEENSt3__18equal_toIlEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache.24"* %11, %"class.v8::internal::ZoneVector"* %1)
  %12 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = bitcast %"struct.std::__1::__hash_node_base.58"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %268, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %20 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %21 = bitcast %"class.v8::internal::compiler::Node"*** %18 to i64*
  %22 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %16, %264
  %25 = phi i64 [ %266, %264 ], [ %14, %16 ]
  %26 = inttoptr i64 %25 to %"struct.std::__1::__hash_node.130"*
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node.130", %"struct.std::__1::__hash_node.130"* %26, i64 0, i32 2, i32 0, i32 1
  %28 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  %29 = icmp eq %"class.v8::internal::compiler::Node"* %28, null
  %30 = ptrtoint %"class.v8::internal::compiler::Node"* %28 to i64
  br i1 %29, label %264, label %31

31:                                               ; preds = %24
  %32 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, align 8
  %33 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %18, align 8
  %34 = icmp eq %"class.v8::internal::compiler::Node"** %32, %33
  %35 = ptrtoint %"class.v8::internal::compiler::Node"** %33 to i64
  br i1 %34, label %40, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.v8::internal::compiler::Node"** %32 to i64*
  store i64 %30, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, i64 1
  %39 = ptrtoint %"class.v8::internal::compiler::Node"** %38 to i64
  store i64 %39, i64* %19, align 8
  br label %264

40:                                               ; preds = %31
  %41 = ptrtoint %"class.v8::internal::compiler::Node"** %32 to i64
  %42 = load i64, i64* %20, align 8
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 268435455
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = bitcast %"class.v8::internal::ZoneVector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #6
  unreachable

49:                                               ; preds = %40
  %50 = sub i64 %35, %42
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, 134217727
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = ashr exact i64 %50, 2
  %55 = icmp ult i64 %54, %45
  %56 = select i1 %55, i64 %45, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %53, %49
  %59 = phi i64 [ %56, %53 ], [ 268435455, %49 ]
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %22, align 8
  %61 = shl i64 %59, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"**
  %75 = bitcast %"class.v8::internal::compiler::Node"** %27 to i64*
  %76 = load i64, i64* %75, align 8
  br label %77

77:                                               ; preds = %53, %72
  %78 = phi i64 [ %76, %72 ], [ %30, %53 ]
  %79 = phi i64 [ %59, %72 ], [ 0, %53 ]
  %80 = phi %"class.v8::internal::compiler::Node"** [ %74, %72 ], [ null, %53 ]
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %80, i64 %44
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %80, i64 %79
  %83 = ptrtoint %"class.v8::internal::compiler::Node"** %82 to i64
  %84 = bitcast %"class.v8::internal::compiler::Node"** %81 to i64*
  store i64 %78, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 1
  %86 = ptrtoint %"class.v8::internal::compiler::Node"** %85 to i64
  %87 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %88 = ptrtoint %"class.v8::internal::compiler::Node"** %87 to i64
  %89 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, align 8
  %90 = icmp eq %"class.v8::internal::compiler::Node"** %89, %87
  br i1 %90, label %261, label %91

91:                                               ; preds = %77
  %92 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %93 = ptrtoint %"class.v8::internal::compiler::Node"** %92 to i64
  %94 = sub i64 %93, %88
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = icmp ult i64 %96, 4
  br i1 %97, label %191, label %98

98:                                               ; preds = %91
  %99 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %80, i64 -1
  %100 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %101 = ptrtoint %"class.v8::internal::compiler::Node"** %100 to i64
  %102 = sub i64 %101, %88
  %103 = lshr i64 %102, 3
  %104 = sub nsw i64 %44, %103
  %105 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, i64 %104
  %106 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %107 = sub nsw i64 0, %103
  %108 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, i64 %107
  %109 = icmp ult %"class.v8::internal::compiler::Node"** %105, %89
  %110 = icmp ult %"class.v8::internal::compiler::Node"** %108, %81
  %111 = and i1 %109, %110
  br i1 %111, label %191, label %112

112:                                              ; preds = %98
  %113 = and i64 %96, 4611686018427387900
  %114 = sub nsw i64 0, %113
  %115 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 %114
  %116 = sub nsw i64 0, %113
  %117 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 %116
  %118 = add nsw i64 %113, -4
  %119 = lshr exact i64 %118, 2
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %118, 0
  br i1 %122, label %167, label %123

123:                                              ; preds = %112
  %124 = sub nuw nsw i64 %120, %121
  %125 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %126 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %127 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %128 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  br label %129

129:                                              ; preds = %129, %123
  %130 = phi i64 [ 0, %123 ], [ %164, %129 ]
  %131 = phi i64 [ %124, %123 ], [ %165, %129 ]
  %132 = sub i64 0, %130
  %133 = sub i64 0, %130
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, i64 %132
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 %133
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::Node"** %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8, !alias.scope !3
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 -2
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !3
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, i64 -1
  %144 = bitcast %"class.v8::internal::compiler::Node"** %143 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %144, align 8, !alias.scope !6, !noalias !3
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, i64 -2
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -1
  %147 = bitcast %"class.v8::internal::compiler::Node"** %146 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %147, align 8, !alias.scope !6, !noalias !3
  %148 = sub nuw nsw i64 -4, %130
  %149 = sub nuw nsw i64 -4, %130
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 %148
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 %149
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, i64 -1
  %153 = bitcast %"class.v8::internal::compiler::Node"** %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !3
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, i64 -2
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::Node"** %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8, !alias.scope !3
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  %160 = bitcast %"class.v8::internal::compiler::Node"** %159 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %160, align 8, !alias.scope !6, !noalias !3
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -2
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 -1
  %163 = bitcast %"class.v8::internal::compiler::Node"** %162 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %163, align 8, !alias.scope !6, !noalias !3
  %164 = add i64 %130, 8
  %165 = add i64 %131, -2
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %129, !llvm.loop !8

167:                                              ; preds = %129, %112
  %168 = phi i64 [ 0, %112 ], [ %164, %129 ]
  %169 = icmp eq i64 %121, 0
  br i1 %169, label %189, label %170

170:                                              ; preds = %167
  %171 = sub i64 0, %168
  %172 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %173 = sub i64 0, %168
  %174 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, i64 %171
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 %173
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, i64 -1
  %178 = bitcast %"class.v8::internal::compiler::Node"** %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8, !alias.scope !3
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, i64 -2
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %182 = bitcast %"class.v8::internal::compiler::Node"** %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !3
  %184 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %175, i64 -1
  %185 = bitcast %"class.v8::internal::compiler::Node"** %184 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %185, align 8, !alias.scope !6, !noalias !3
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %175, i64 -2
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %186, i64 -1
  %188 = bitcast %"class.v8::internal::compiler::Node"** %187 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %188, align 8, !alias.scope !6, !noalias !3
  br label %189

189:                                              ; preds = %167, %170
  %190 = icmp eq i64 %96, %113
  br i1 %190, label %261, label %191

191:                                              ; preds = %189, %98, %91
  %192 = phi %"class.v8::internal::compiler::Node"** [ %81, %98 ], [ %81, %91 ], [ %115, %189 ]
  %193 = phi %"class.v8::internal::compiler::Node"** [ %89, %98 ], [ %89, %91 ], [ %117, %189 ]
  %194 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %193, i64 -1
  %195 = ptrtoint %"class.v8::internal::compiler::Node"** %194 to i64
  %196 = sub i64 %195, %88
  %197 = lshr i64 %196, 3
  %198 = add nuw nsw i64 %197, 1
  %199 = and i64 %198, 7
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %212, label %201

201:                                              ; preds = %191, %201
  %202 = phi %"class.v8::internal::compiler::Node"** [ %205, %201 ], [ %192, %191 ]
  %203 = phi %"class.v8::internal::compiler::Node"** [ %206, %201 ], [ %193, %191 ]
  %204 = phi i64 [ %210, %201 ], [ %199, %191 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %202, i64 -1
  %206 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %203, i64 -1
  %207 = bitcast %"class.v8::internal::compiler::Node"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"class.v8::internal::compiler::Node"** %205 to i64*
  store i64 %208, i64* %209, align 8
  %210 = add i64 %204, -1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %201, !llvm.loop !10

212:                                              ; preds = %201, %191
  %213 = phi %"class.v8::internal::compiler::Node"** [ undef, %191 ], [ %205, %201 ]
  %214 = phi %"class.v8::internal::compiler::Node"** [ %192, %191 ], [ %205, %201 ]
  %215 = phi %"class.v8::internal::compiler::Node"** [ %193, %191 ], [ %206, %201 ]
  %216 = icmp ult i64 %196, 56
  br i1 %216, label %261, label %217

217:                                              ; preds = %212, %217
  %218 = phi %"class.v8::internal::compiler::Node"** [ %255, %217 ], [ %214, %212 ]
  %219 = phi %"class.v8::internal::compiler::Node"** [ %256, %217 ], [ %215, %212 ]
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -1
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -1
  %222 = bitcast %"class.v8::internal::compiler::Node"** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -2
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -2
  %227 = bitcast %"class.v8::internal::compiler::Node"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.v8::internal::compiler::Node"** %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -3
  %231 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -3
  %232 = bitcast %"class.v8::internal::compiler::Node"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.v8::internal::compiler::Node"** %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -4
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -4
  %237 = bitcast %"class.v8::internal::compiler::Node"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"class.v8::internal::compiler::Node"** %235 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -5
  %241 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -5
  %242 = bitcast %"class.v8::internal::compiler::Node"** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.v8::internal::compiler::Node"** %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -6
  %246 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -6
  %247 = bitcast %"class.v8::internal::compiler::Node"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.v8::internal::compiler::Node"** %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -7
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -7
  %252 = bitcast %"class.v8::internal::compiler::Node"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.v8::internal::compiler::Node"** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 -8
  %256 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -8
  %257 = bitcast %"class.v8::internal::compiler::Node"** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.v8::internal::compiler::Node"** %255 to i64*
  store i64 %258, i64* %259, align 8
  %260 = icmp eq %"class.v8::internal::compiler::Node"** %256, %87
  br i1 %260, label %261, label %217, !llvm.loop !12

261:                                              ; preds = %212, %217, %189, %77
  %262 = phi %"class.v8::internal::compiler::Node"** [ %81, %77 ], [ %115, %189 ], [ %213, %212 ], [ %255, %217 ]
  %263 = ptrtoint %"class.v8::internal::compiler::Node"** %262 to i64
  store i64 %263, i64* %20, align 8
  store i64 %86, i64* %19, align 8
  store i64 %83, i64* %21, align 8
  br label %264

264:                                              ; preds = %261, %36, %24
  %265 = inttoptr i64 %25 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %24

268:                                              ; preds = %264, %2
  %269 = getelementptr inbounds %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::CommonNodeCache"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %270 = bitcast %"struct.std::__1::__hash_node_base.85"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %525, label %273

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %275 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %276 = bitcast %"class.v8::internal::compiler::Node"*** %274 to i64*
  %277 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %278 = bitcast %"class.v8::internal::compiler::Node"*** %275 to i64*
  %279 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %280 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  br label %281

281:                                              ; preds = %273, %521
  %282 = phi i64 [ %523, %521 ], [ %271, %273 ]
  %283 = inttoptr i64 %282 to %"struct.std::__1::__hash_node.137"*
  %284 = getelementptr inbounds %"struct.std::__1::__hash_node.137", %"struct.std::__1::__hash_node.137"* %283, i64 0, i32 2, i32 0, i32 1
  %285 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %284, align 8
  %286 = icmp eq %"class.v8::internal::compiler::Node"* %285, null
  %287 = ptrtoint %"class.v8::internal::compiler::Node"* %285 to i64
  br i1 %286, label %521, label %288

288:                                              ; preds = %281
  %289 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %274, align 8
  %290 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %275, align 8
  %291 = icmp eq %"class.v8::internal::compiler::Node"** %289, %290
  %292 = ptrtoint %"class.v8::internal::compiler::Node"** %290 to i64
  br i1 %291, label %297, label %293

293:                                              ; preds = %288
  %294 = bitcast %"class.v8::internal::compiler::Node"** %289 to i64*
  store i64 %287, i64* %294, align 8
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %289, i64 1
  %296 = ptrtoint %"class.v8::internal::compiler::Node"** %295 to i64
  store i64 %296, i64* %276, align 8
  br label %521

297:                                              ; preds = %288
  %298 = ptrtoint %"class.v8::internal::compiler::Node"** %289 to i64
  %299 = load i64, i64* %277, align 8
  %300 = sub i64 %298, %299
  %301 = ashr exact i64 %300, 3
  %302 = add nsw i64 %301, 1
  %303 = icmp ugt i64 %302, 268435455
  br i1 %303, label %304, label %306

304:                                              ; preds = %297
  %305 = bitcast %"class.v8::internal::ZoneVector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %305) #6
  unreachable

306:                                              ; preds = %297
  %307 = sub i64 %292, %299
  %308 = ashr exact i64 %307, 3
  %309 = icmp ult i64 %308, 134217727
  br i1 %309, label %310, label %315

310:                                              ; preds = %306
  %311 = ashr exact i64 %307, 2
  %312 = icmp ult i64 %311, %302
  %313 = select i1 %312, i64 %302, i64 %311
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %334, label %315

315:                                              ; preds = %310, %306
  %316 = phi i64 [ %313, %310 ], [ 268435455, %306 ]
  %317 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %279, align 8
  %318 = shl i64 %316, 3
  %319 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %317, i64 0, i32 2
  %320 = load i64, i64* %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %317, i64 0, i32 3
  %322 = load i64, i64* %321, align 8
  %323 = sub i64 %322, %320
  %324 = icmp ugt i64 %318, %323
  br i1 %324, label %325, label %327, !prof !2

325:                                              ; preds = %315
  %326 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %317, i64 %318) #5
  br label %329

327:                                              ; preds = %315
  %328 = add i64 %320, %318
  store i64 %328, i64* %319, align 8
  br label %329

329:                                              ; preds = %327, %325
  %330 = phi i64 [ %326, %325 ], [ %320, %327 ]
  %331 = inttoptr i64 %330 to %"class.v8::internal::compiler::Node"**
  %332 = bitcast %"class.v8::internal::compiler::Node"** %284 to i64*
  %333 = load i64, i64* %332, align 8
  br label %334

334:                                              ; preds = %310, %329
  %335 = phi i64 [ %333, %329 ], [ %287, %310 ]
  %336 = phi i64 [ %316, %329 ], [ 0, %310 ]
  %337 = phi %"class.v8::internal::compiler::Node"** [ %331, %329 ], [ null, %310 ]
  %338 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %337, i64 %301
  %339 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %337, i64 %336
  %340 = ptrtoint %"class.v8::internal::compiler::Node"** %339 to i64
  %341 = bitcast %"class.v8::internal::compiler::Node"** %338 to i64*
  store i64 %335, i64* %341, align 8
  %342 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %338, i64 1
  %343 = ptrtoint %"class.v8::internal::compiler::Node"** %342 to i64
  %344 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %280, align 8
  %345 = ptrtoint %"class.v8::internal::compiler::Node"** %344 to i64
  %346 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %274, align 8
  %347 = icmp eq %"class.v8::internal::compiler::Node"** %346, %344
  br i1 %347, label %518, label %348

348:                                              ; preds = %334
  %349 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -1
  %350 = ptrtoint %"class.v8::internal::compiler::Node"** %349 to i64
  %351 = sub i64 %350, %345
  %352 = lshr i64 %351, 3
  %353 = add nuw nsw i64 %352, 1
  %354 = icmp ult i64 %353, 4
  br i1 %354, label %448, label %355

355:                                              ; preds = %348
  %356 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %337, i64 -1
  %357 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -1
  %358 = ptrtoint %"class.v8::internal::compiler::Node"** %357 to i64
  %359 = sub i64 %358, %345
  %360 = lshr i64 %359, 3
  %361 = sub nsw i64 %301, %360
  %362 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %356, i64 %361
  %363 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -1
  %364 = sub nsw i64 0, %360
  %365 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 %364
  %366 = icmp ult %"class.v8::internal::compiler::Node"** %362, %346
  %367 = icmp ult %"class.v8::internal::compiler::Node"** %365, %338
  %368 = and i1 %366, %367
  br i1 %368, label %448, label %369

369:                                              ; preds = %355
  %370 = and i64 %353, 4611686018427387900
  %371 = sub nsw i64 0, %370
  %372 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %338, i64 %371
  %373 = sub nsw i64 0, %370
  %374 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 %373
  %375 = add nsw i64 %370, -4
  %376 = lshr exact i64 %375, 2
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 1
  %379 = icmp eq i64 %375, 0
  br i1 %379, label %424, label %380

380:                                              ; preds = %369
  %381 = sub nuw nsw i64 %377, %378
  %382 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %338, i64 -1
  %383 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -1
  %384 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %338, i64 -1
  %385 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -1
  br label %386

386:                                              ; preds = %386, %380
  %387 = phi i64 [ 0, %380 ], [ %421, %386 ]
  %388 = phi i64 [ %381, %380 ], [ %422, %386 ]
  %389 = sub i64 0, %387
  %390 = sub i64 0, %387
  %391 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %382, i64 %389
  %392 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %383, i64 %390
  %393 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %392, i64 -1
  %394 = bitcast %"class.v8::internal::compiler::Node"** %393 to <2 x i64>*
  %395 = load <2 x i64>, <2 x i64>* %394, align 8, !alias.scope !13
  %396 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %392, i64 -2
  %397 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %396, i64 -1
  %398 = bitcast %"class.v8::internal::compiler::Node"** %397 to <2 x i64>*
  %399 = load <2 x i64>, <2 x i64>* %398, align 8, !alias.scope !13
  %400 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %391, i64 -1
  %401 = bitcast %"class.v8::internal::compiler::Node"** %400 to <2 x i64>*
  store <2 x i64> %395, <2 x i64>* %401, align 8, !alias.scope !16, !noalias !13
  %402 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %391, i64 -2
  %403 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %402, i64 -1
  %404 = bitcast %"class.v8::internal::compiler::Node"** %403 to <2 x i64>*
  store <2 x i64> %399, <2 x i64>* %404, align 8, !alias.scope !16, !noalias !13
  %405 = sub nuw nsw i64 -4, %387
  %406 = sub nuw nsw i64 -4, %387
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %384, i64 %405
  %408 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 %406
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %408, i64 -1
  %410 = bitcast %"class.v8::internal::compiler::Node"** %409 to <2 x i64>*
  %411 = load <2 x i64>, <2 x i64>* %410, align 8, !alias.scope !13
  %412 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %408, i64 -2
  %413 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %412, i64 -1
  %414 = bitcast %"class.v8::internal::compiler::Node"** %413 to <2 x i64>*
  %415 = load <2 x i64>, <2 x i64>* %414, align 8, !alias.scope !13
  %416 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %407, i64 -1
  %417 = bitcast %"class.v8::internal::compiler::Node"** %416 to <2 x i64>*
  store <2 x i64> %411, <2 x i64>* %417, align 8, !alias.scope !16, !noalias !13
  %418 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %407, i64 -2
  %419 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %418, i64 -1
  %420 = bitcast %"class.v8::internal::compiler::Node"** %419 to <2 x i64>*
  store <2 x i64> %415, <2 x i64>* %420, align 8, !alias.scope !16, !noalias !13
  %421 = add i64 %387, 8
  %422 = add i64 %388, -2
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %424, label %386, !llvm.loop !18

424:                                              ; preds = %386, %369
  %425 = phi i64 [ 0, %369 ], [ %421, %386 ]
  %426 = icmp eq i64 %378, 0
  br i1 %426, label %446, label %427

427:                                              ; preds = %424
  %428 = sub i64 0, %425
  %429 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %338, i64 -1
  %430 = sub i64 0, %425
  %431 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -1
  %432 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %429, i64 %428
  %433 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 %430
  %434 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %433, i64 -1
  %435 = bitcast %"class.v8::internal::compiler::Node"** %434 to <2 x i64>*
  %436 = load <2 x i64>, <2 x i64>* %435, align 8, !alias.scope !13
  %437 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %433, i64 -2
  %438 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 -1
  %439 = bitcast %"class.v8::internal::compiler::Node"** %438 to <2 x i64>*
  %440 = load <2 x i64>, <2 x i64>* %439, align 8, !alias.scope !13
  %441 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %432, i64 -1
  %442 = bitcast %"class.v8::internal::compiler::Node"** %441 to <2 x i64>*
  store <2 x i64> %436, <2 x i64>* %442, align 8, !alias.scope !16, !noalias !13
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %432, i64 -2
  %444 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %443, i64 -1
  %445 = bitcast %"class.v8::internal::compiler::Node"** %444 to <2 x i64>*
  store <2 x i64> %440, <2 x i64>* %445, align 8, !alias.scope !16, !noalias !13
  br label %446

446:                                              ; preds = %424, %427
  %447 = icmp eq i64 %353, %370
  br i1 %447, label %518, label %448

448:                                              ; preds = %446, %355, %348
  %449 = phi %"class.v8::internal::compiler::Node"** [ %338, %355 ], [ %338, %348 ], [ %372, %446 ]
  %450 = phi %"class.v8::internal::compiler::Node"** [ %346, %355 ], [ %346, %348 ], [ %374, %446 ]
  %451 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %450, i64 -1
  %452 = ptrtoint %"class.v8::internal::compiler::Node"** %451 to i64
  %453 = sub i64 %452, %345
  %454 = lshr i64 %453, 3
  %455 = add nuw nsw i64 %454, 1
  %456 = and i64 %455, 7
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %469, label %458

458:                                              ; preds = %448, %458
  %459 = phi %"class.v8::internal::compiler::Node"** [ %462, %458 ], [ %449, %448 ]
  %460 = phi %"class.v8::internal::compiler::Node"** [ %463, %458 ], [ %450, %448 ]
  %461 = phi i64 [ %467, %458 ], [ %456, %448 ]
  %462 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %463 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 -1
  %464 = bitcast %"class.v8::internal::compiler::Node"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.v8::internal::compiler::Node"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = add i64 %461, -1
  %468 = icmp eq i64 %467, 0
  br i1 %468, label %469, label %458, !llvm.loop !19

469:                                              ; preds = %458, %448
  %470 = phi %"class.v8::internal::compiler::Node"** [ undef, %448 ], [ %462, %458 ]
  %471 = phi %"class.v8::internal::compiler::Node"** [ %449, %448 ], [ %462, %458 ]
  %472 = phi %"class.v8::internal::compiler::Node"** [ %450, %448 ], [ %463, %458 ]
  %473 = icmp ult i64 %453, 56
  br i1 %473, label %518, label %474

474:                                              ; preds = %469, %474
  %475 = phi %"class.v8::internal::compiler::Node"** [ %512, %474 ], [ %471, %469 ]
  %476 = phi %"class.v8::internal::compiler::Node"** [ %513, %474 ], [ %472, %469 ]
  %477 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -1
  %478 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -1
  %479 = bitcast %"class.v8::internal::compiler::Node"** %478 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = bitcast %"class.v8::internal::compiler::Node"** %477 to i64*
  store i64 %480, i64* %481, align 8
  %482 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -2
  %483 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -2
  %484 = bitcast %"class.v8::internal::compiler::Node"** %483 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = bitcast %"class.v8::internal::compiler::Node"** %482 to i64*
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -3
  %488 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -3
  %489 = bitcast %"class.v8::internal::compiler::Node"** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = bitcast %"class.v8::internal::compiler::Node"** %487 to i64*
  store i64 %490, i64* %491, align 8
  %492 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -4
  %493 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -4
  %494 = bitcast %"class.v8::internal::compiler::Node"** %493 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = bitcast %"class.v8::internal::compiler::Node"** %492 to i64*
  store i64 %495, i64* %496, align 8
  %497 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -5
  %498 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -5
  %499 = bitcast %"class.v8::internal::compiler::Node"** %498 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = bitcast %"class.v8::internal::compiler::Node"** %497 to i64*
  store i64 %500, i64* %501, align 8
  %502 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -6
  %503 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -6
  %504 = bitcast %"class.v8::internal::compiler::Node"** %503 to i64*
  %505 = load i64, i64* %504, align 8
  %506 = bitcast %"class.v8::internal::compiler::Node"** %502 to i64*
  store i64 %505, i64* %506, align 8
  %507 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -7
  %508 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -7
  %509 = bitcast %"class.v8::internal::compiler::Node"** %508 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = bitcast %"class.v8::internal::compiler::Node"** %507 to i64*
  store i64 %510, i64* %511, align 8
  %512 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %475, i64 -8
  %513 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -8
  %514 = bitcast %"class.v8::internal::compiler::Node"** %513 to i64*
  %515 = load i64, i64* %514, align 8
  %516 = bitcast %"class.v8::internal::compiler::Node"** %512 to i64*
  store i64 %515, i64* %516, align 8
  %517 = icmp eq %"class.v8::internal::compiler::Node"** %513, %344
  br i1 %517, label %518, label %474, !llvm.loop !20

518:                                              ; preds = %469, %474, %446, %334
  %519 = phi %"class.v8::internal::compiler::Node"** [ %338, %334 ], [ %372, %446 ], [ %470, %469 ], [ %512, %474 ]
  %520 = ptrtoint %"class.v8::internal::compiler::Node"** %519 to i64
  store i64 %520, i64* %277, align 8
  store i64 %343, i64* %276, align 8
  store i64 %340, i64* %278, align 8
  br label %521

521:                                              ; preds = %518, %293, %281
  %522 = inttoptr i64 %282 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %525, label %281

525:                                              ; preds = %521, %268
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler9NodeCacheIiNS_4base4hashIiEENSt3__18equal_toIiEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache"*, %"class.v8::internal::ZoneVector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::__hash_node_base"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %8 to i64*
  %11 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %12 = bitcast %"class.v8::internal::compiler::Node"*** %9 to i64*
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  br label %16

15:                                               ; preds = %256, %2
  ret void

16:                                               ; preds = %7, %256
  %17 = phi i64 [ %5, %7 ], [ %258, %256 ]
  %18 = inttoptr i64 %17 to %"struct.std::__1::__hash_node.120"*
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node.120", %"struct.std::__1::__hash_node.120"* %18, i64 0, i32 2, i32 0, i32 1
  %20 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::Node"* %20, null
  %22 = ptrtoint %"class.v8::internal::compiler::Node"* %20 to i64
  br i1 %21, label %256, label %23

23:                                               ; preds = %16
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %8, align 8
  %25 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %9, align 8
  %26 = icmp eq %"class.v8::internal::compiler::Node"** %24, %25
  %27 = ptrtoint %"class.v8::internal::compiler::Node"** %25 to i64
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.v8::internal::compiler::Node"** %24 to i64*
  store i64 %22, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 1
  %31 = ptrtoint %"class.v8::internal::compiler::Node"** %30 to i64
  store i64 %31, i64* %10, align 8
  br label %256

32:                                               ; preds = %23
  %33 = ptrtoint %"class.v8::internal::compiler::Node"** %24 to i64
  %34 = load i64, i64* %11, align 8
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 3
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 268435455
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.v8::internal::ZoneVector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #6
  unreachable

41:                                               ; preds = %32
  %42 = sub i64 %27, %34
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, 134217727
  br i1 %44, label %45, label %50

45:                                               ; preds = %41
  %46 = ashr exact i64 %42, 2
  %47 = icmp ult i64 %46, %37
  %48 = select i1 %47, i64 %37, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %69, label %50

50:                                               ; preds = %45, %41
  %51 = phi i64 [ %48, %45 ], [ 268435455, %41 ]
  %52 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %53 = shl i64 %51, 3
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %52, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %52, i64 0, i32 3
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %57, %55
  %59 = icmp ugt i64 %53, %58
  br i1 %59, label %60, label %62, !prof !2

60:                                               ; preds = %50
  %61 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %52, i64 %53) #5
  br label %64

62:                                               ; preds = %50
  %63 = add i64 %55, %53
  store i64 %63, i64* %54, align 8
  br label %64

64:                                               ; preds = %62, %60
  %65 = phi i64 [ %61, %60 ], [ %55, %62 ]
  %66 = inttoptr i64 %65 to %"class.v8::internal::compiler::Node"**
  %67 = bitcast %"class.v8::internal::compiler::Node"** %19 to i64*
  %68 = load i64, i64* %67, align 8
  br label %69

69:                                               ; preds = %45, %64
  %70 = phi i64 [ %68, %64 ], [ %22, %45 ]
  %71 = phi i64 [ %51, %64 ], [ 0, %45 ]
  %72 = phi %"class.v8::internal::compiler::Node"** [ %66, %64 ], [ null, %45 ]
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 %36
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 %71
  %75 = ptrtoint %"class.v8::internal::compiler::Node"** %74 to i64
  %76 = bitcast %"class.v8::internal::compiler::Node"** %73 to i64*
  store i64 %70, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 1
  %78 = ptrtoint %"class.v8::internal::compiler::Node"** %77 to i64
  %79 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %14, align 8
  %80 = ptrtoint %"class.v8::internal::compiler::Node"** %79 to i64
  %81 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %8, align 8
  %82 = icmp eq %"class.v8::internal::compiler::Node"** %81, %79
  br i1 %82, label %253, label %83

83:                                               ; preds = %69
  %84 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %85 = ptrtoint %"class.v8::internal::compiler::Node"** %84 to i64
  %86 = sub i64 %85, %80
  %87 = lshr i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = icmp ult i64 %88, 4
  br i1 %89, label %183, label %90

90:                                               ; preds = %83
  %91 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 -1
  %92 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %93 = ptrtoint %"class.v8::internal::compiler::Node"** %92 to i64
  %94 = sub i64 %93, %80
  %95 = lshr i64 %94, 3
  %96 = sub nsw i64 %36, %95
  %97 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 %96
  %98 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %99 = sub nsw i64 0, %95
  %100 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, i64 %99
  %101 = icmp ult %"class.v8::internal::compiler::Node"** %97, %81
  %102 = icmp ult %"class.v8::internal::compiler::Node"** %100, %73
  %103 = and i1 %101, %102
  br i1 %103, label %183, label %104

104:                                              ; preds = %90
  %105 = and i64 %88, 4611686018427387900
  %106 = sub nsw i64 0, %105
  %107 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 %106
  %108 = sub nsw i64 0, %105
  %109 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 %108
  %110 = add nsw i64 %105, -4
  %111 = lshr exact i64 %110, 2
  %112 = add nuw nsw i64 %111, 1
  %113 = and i64 %112, 1
  %114 = icmp eq i64 %110, 0
  br i1 %114, label %159, label %115

115:                                              ; preds = %104
  %116 = sub nuw nsw i64 %112, %113
  %117 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 -1
  %118 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 -1
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  br label %121

121:                                              ; preds = %121, %115
  %122 = phi i64 [ 0, %115 ], [ %156, %121 ]
  %123 = phi i64 [ %116, %115 ], [ %157, %121 ]
  %124 = sub i64 0, %122
  %125 = sub i64 0, %122
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %117, i64 %124
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -1
  %129 = bitcast %"class.v8::internal::compiler::Node"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !21
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %131, i64 -1
  %133 = bitcast %"class.v8::internal::compiler::Node"** %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !21
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -1
  %136 = bitcast %"class.v8::internal::compiler::Node"** %135 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %136, align 8, !alias.scope !24, !noalias !21
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -2
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, i64 -1
  %139 = bitcast %"class.v8::internal::compiler::Node"** %138 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %139, align 8, !alias.scope !24, !noalias !21
  %140 = sub nuw nsw i64 -4, %122
  %141 = sub nuw nsw i64 -4, %122
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 %140
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 %141
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -1
  %145 = bitcast %"class.v8::internal::compiler::Node"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !21
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -2
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, i64 -1
  %149 = bitcast %"class.v8::internal::compiler::Node"** %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !21
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, i64 -1
  %152 = bitcast %"class.v8::internal::compiler::Node"** %151 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %152, align 8, !alias.scope !24, !noalias !21
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, i64 -2
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %155, align 8, !alias.scope !24, !noalias !21
  %156 = add i64 %122, 8
  %157 = add i64 %123, -2
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %121, !llvm.loop !26

159:                                              ; preds = %121, %104
  %160 = phi i64 [ 0, %104 ], [ %156, %121 ]
  %161 = icmp eq i64 %113, 0
  br i1 %161, label %181, label %162

162:                                              ; preds = %159
  %163 = sub i64 0, %160
  %164 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 -1
  %165 = sub i64 0, %160
  %166 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 %163
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %166, i64 %165
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::Node"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !21
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -2
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, i64 -1
  %174 = bitcast %"class.v8::internal::compiler::Node"** %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !21
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %177, align 8, !alias.scope !24, !noalias !21
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 -2
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::Node"** %179 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %180, align 8, !alias.scope !24, !noalias !21
  br label %181

181:                                              ; preds = %159, %162
  %182 = icmp eq i64 %88, %105
  br i1 %182, label %253, label %183

183:                                              ; preds = %181, %90, %83
  %184 = phi %"class.v8::internal::compiler::Node"** [ %73, %90 ], [ %73, %83 ], [ %107, %181 ]
  %185 = phi %"class.v8::internal::compiler::Node"** [ %81, %90 ], [ %81, %83 ], [ %109, %181 ]
  %186 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %185, i64 -1
  %187 = ptrtoint %"class.v8::internal::compiler::Node"** %186 to i64
  %188 = sub i64 %187, %80
  %189 = lshr i64 %188, 3
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 7
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %204, label %193

193:                                              ; preds = %183, %193
  %194 = phi %"class.v8::internal::compiler::Node"** [ %197, %193 ], [ %184, %183 ]
  %195 = phi %"class.v8::internal::compiler::Node"** [ %198, %193 ], [ %185, %183 ]
  %196 = phi i64 [ %202, %193 ], [ %191, %183 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %194, i64 -1
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = add i64 %196, -1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %193, !llvm.loop !27

204:                                              ; preds = %193, %183
  %205 = phi %"class.v8::internal::compiler::Node"** [ undef, %183 ], [ %197, %193 ]
  %206 = phi %"class.v8::internal::compiler::Node"** [ %184, %183 ], [ %197, %193 ]
  %207 = phi %"class.v8::internal::compiler::Node"** [ %185, %183 ], [ %198, %193 ]
  %208 = icmp ult i64 %188, 56
  br i1 %208, label %253, label %209

209:                                              ; preds = %204, %209
  %210 = phi %"class.v8::internal::compiler::Node"** [ %247, %209 ], [ %206, %204 ]
  %211 = phi %"class.v8::internal::compiler::Node"** [ %248, %209 ], [ %207, %204 ]
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -1
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -1
  %214 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::Node"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -2
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -2
  %219 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::Node"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -3
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -3
  %224 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::Node"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -4
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -4
  %229 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::Node"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -5
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -5
  %234 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::Node"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -6
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -6
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::Node"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -7
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -7
  %244 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.v8::internal::compiler::Node"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -8
  %249 = bitcast %"class.v8::internal::compiler::Node"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.v8::internal::compiler::Node"** %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = icmp eq %"class.v8::internal::compiler::Node"** %248, %79
  br i1 %252, label %253, label %209, !llvm.loop !28

253:                                              ; preds = %204, %209, %181, %69
  %254 = phi %"class.v8::internal::compiler::Node"** [ %73, %69 ], [ %107, %181 ], [ %205, %204 ], [ %247, %209 ]
  %255 = ptrtoint %"class.v8::internal::compiler::Node"** %254 to i64
  store i64 %255, i64* %11, align 8
  store i64 %78, i64* %10, align 8
  store i64 %75, i64* %12, align 8
  br label %256

256:                                              ; preds = %253, %28, %16
  %257 = inttoptr i64 %17 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler9NodeCacheIlNS_4base4hashIlEENSt3__18equal_toIlEEE14GetCachedNodesEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::NodeCache.24"*, %"class.v8::internal::ZoneVector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::NodeCache.24", %"class.v8::internal::compiler::NodeCache.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::__hash_node_base.31"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %8 to i64*
  %11 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %12 = bitcast %"class.v8::internal::compiler::Node"*** %9 to i64*
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  br label %16

15:                                               ; preds = %256, %2
  ret void

16:                                               ; preds = %7, %256
  %17 = phi i64 [ %5, %7 ], [ %258, %256 ]
  %18 = inttoptr i64 %17 to %"struct.std::__1::__hash_node"*
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %18, i64 0, i32 2, i32 0, i32 1
  %20 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::Node"* %20, null
  %22 = ptrtoint %"class.v8::internal::compiler::Node"* %20 to i64
  br i1 %21, label %256, label %23

23:                                               ; preds = %16
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %8, align 8
  %25 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %9, align 8
  %26 = icmp eq %"class.v8::internal::compiler::Node"** %24, %25
  %27 = ptrtoint %"class.v8::internal::compiler::Node"** %25 to i64
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.v8::internal::compiler::Node"** %24 to i64*
  store i64 %22, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 1
  %31 = ptrtoint %"class.v8::internal::compiler::Node"** %30 to i64
  store i64 %31, i64* %10, align 8
  br label %256

32:                                               ; preds = %23
  %33 = ptrtoint %"class.v8::internal::compiler::Node"** %24 to i64
  %34 = load i64, i64* %11, align 8
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 3
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 268435455
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.v8::internal::ZoneVector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #6
  unreachable

41:                                               ; preds = %32
  %42 = sub i64 %27, %34
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, 134217727
  br i1 %44, label %45, label %50

45:                                               ; preds = %41
  %46 = ashr exact i64 %42, 2
  %47 = icmp ult i64 %46, %37
  %48 = select i1 %47, i64 %37, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %69, label %50

50:                                               ; preds = %45, %41
  %51 = phi i64 [ %48, %45 ], [ 268435455, %41 ]
  %52 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %53 = shl i64 %51, 3
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %52, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %52, i64 0, i32 3
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %57, %55
  %59 = icmp ugt i64 %53, %58
  br i1 %59, label %60, label %62, !prof !2

60:                                               ; preds = %50
  %61 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %52, i64 %53) #5
  br label %64

62:                                               ; preds = %50
  %63 = add i64 %55, %53
  store i64 %63, i64* %54, align 8
  br label %64

64:                                               ; preds = %62, %60
  %65 = phi i64 [ %61, %60 ], [ %55, %62 ]
  %66 = inttoptr i64 %65 to %"class.v8::internal::compiler::Node"**
  %67 = bitcast %"class.v8::internal::compiler::Node"** %19 to i64*
  %68 = load i64, i64* %67, align 8
  br label %69

69:                                               ; preds = %45, %64
  %70 = phi i64 [ %68, %64 ], [ %22, %45 ]
  %71 = phi i64 [ %51, %64 ], [ 0, %45 ]
  %72 = phi %"class.v8::internal::compiler::Node"** [ %66, %64 ], [ null, %45 ]
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 %36
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 %71
  %75 = ptrtoint %"class.v8::internal::compiler::Node"** %74 to i64
  %76 = bitcast %"class.v8::internal::compiler::Node"** %73 to i64*
  store i64 %70, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 1
  %78 = ptrtoint %"class.v8::internal::compiler::Node"** %77 to i64
  %79 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %14, align 8
  %80 = ptrtoint %"class.v8::internal::compiler::Node"** %79 to i64
  %81 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %8, align 8
  %82 = icmp eq %"class.v8::internal::compiler::Node"** %81, %79
  br i1 %82, label %253, label %83

83:                                               ; preds = %69
  %84 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %85 = ptrtoint %"class.v8::internal::compiler::Node"** %84 to i64
  %86 = sub i64 %85, %80
  %87 = lshr i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = icmp ult i64 %88, 4
  br i1 %89, label %183, label %90

90:                                               ; preds = %83
  %91 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 -1
  %92 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %93 = ptrtoint %"class.v8::internal::compiler::Node"** %92 to i64
  %94 = sub i64 %93, %80
  %95 = lshr i64 %94, 3
  %96 = sub nsw i64 %36, %95
  %97 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 %96
  %98 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %99 = sub nsw i64 0, %95
  %100 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, i64 %99
  %101 = icmp ult %"class.v8::internal::compiler::Node"** %97, %81
  %102 = icmp ult %"class.v8::internal::compiler::Node"** %100, %73
  %103 = and i1 %101, %102
  br i1 %103, label %183, label %104

104:                                              ; preds = %90
  %105 = and i64 %88, 4611686018427387900
  %106 = sub nsw i64 0, %105
  %107 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 %106
  %108 = sub nsw i64 0, %105
  %109 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 %108
  %110 = add nsw i64 %105, -4
  %111 = lshr exact i64 %110, 2
  %112 = add nuw nsw i64 %111, 1
  %113 = and i64 %112, 1
  %114 = icmp eq i64 %110, 0
  br i1 %114, label %159, label %115

115:                                              ; preds = %104
  %116 = sub nuw nsw i64 %112, %113
  %117 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 -1
  %118 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 -1
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  br label %121

121:                                              ; preds = %121, %115
  %122 = phi i64 [ 0, %115 ], [ %156, %121 ]
  %123 = phi i64 [ %116, %115 ], [ %157, %121 ]
  %124 = sub i64 0, %122
  %125 = sub i64 0, %122
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %117, i64 %124
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -1
  %129 = bitcast %"class.v8::internal::compiler::Node"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !29
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %131, i64 -1
  %133 = bitcast %"class.v8::internal::compiler::Node"** %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !29
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -1
  %136 = bitcast %"class.v8::internal::compiler::Node"** %135 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %136, align 8, !alias.scope !32, !noalias !29
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -2
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, i64 -1
  %139 = bitcast %"class.v8::internal::compiler::Node"** %138 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %139, align 8, !alias.scope !32, !noalias !29
  %140 = sub nuw nsw i64 -4, %122
  %141 = sub nuw nsw i64 -4, %122
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 %140
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 %141
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -1
  %145 = bitcast %"class.v8::internal::compiler::Node"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !29
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -2
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, i64 -1
  %149 = bitcast %"class.v8::internal::compiler::Node"** %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !29
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, i64 -1
  %152 = bitcast %"class.v8::internal::compiler::Node"** %151 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %152, align 8, !alias.scope !32, !noalias !29
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, i64 -2
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %155, align 8, !alias.scope !32, !noalias !29
  %156 = add i64 %122, 8
  %157 = add i64 %123, -2
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %121, !llvm.loop !34

159:                                              ; preds = %121, %104
  %160 = phi i64 [ 0, %104 ], [ %156, %121 ]
  %161 = icmp eq i64 %113, 0
  br i1 %161, label %181, label %162

162:                                              ; preds = %159
  %163 = sub i64 0, %160
  %164 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 -1
  %165 = sub i64 0, %160
  %166 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 -1
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 %163
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %166, i64 %165
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::Node"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !29
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -2
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, i64 -1
  %174 = bitcast %"class.v8::internal::compiler::Node"** %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !29
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %177, align 8, !alias.scope !32, !noalias !29
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 -2
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::Node"** %179 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %180, align 8, !alias.scope !32, !noalias !29
  br label %181

181:                                              ; preds = %159, %162
  %182 = icmp eq i64 %88, %105
  br i1 %182, label %253, label %183

183:                                              ; preds = %181, %90, %83
  %184 = phi %"class.v8::internal::compiler::Node"** [ %73, %90 ], [ %73, %83 ], [ %107, %181 ]
  %185 = phi %"class.v8::internal::compiler::Node"** [ %81, %90 ], [ %81, %83 ], [ %109, %181 ]
  %186 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %185, i64 -1
  %187 = ptrtoint %"class.v8::internal::compiler::Node"** %186 to i64
  %188 = sub i64 %187, %80
  %189 = lshr i64 %188, 3
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 7
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %204, label %193

193:                                              ; preds = %183, %193
  %194 = phi %"class.v8::internal::compiler::Node"** [ %197, %193 ], [ %184, %183 ]
  %195 = phi %"class.v8::internal::compiler::Node"** [ %198, %193 ], [ %185, %183 ]
  %196 = phi i64 [ %202, %193 ], [ %191, %183 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %194, i64 -1
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = add i64 %196, -1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %193, !llvm.loop !35

204:                                              ; preds = %193, %183
  %205 = phi %"class.v8::internal::compiler::Node"** [ undef, %183 ], [ %197, %193 ]
  %206 = phi %"class.v8::internal::compiler::Node"** [ %184, %183 ], [ %197, %193 ]
  %207 = phi %"class.v8::internal::compiler::Node"** [ %185, %183 ], [ %198, %193 ]
  %208 = icmp ult i64 %188, 56
  br i1 %208, label %253, label %209

209:                                              ; preds = %204, %209
  %210 = phi %"class.v8::internal::compiler::Node"** [ %247, %209 ], [ %206, %204 ]
  %211 = phi %"class.v8::internal::compiler::Node"** [ %248, %209 ], [ %207, %204 ]
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -1
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -1
  %214 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::Node"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -2
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -2
  %219 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::Node"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -3
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -3
  %224 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::Node"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -4
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -4
  %229 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::Node"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -5
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -5
  %234 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::Node"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -6
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -6
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::Node"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -7
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -7
  %244 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.v8::internal::compiler::Node"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 -8
  %249 = bitcast %"class.v8::internal::compiler::Node"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.v8::internal::compiler::Node"** %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = icmp eq %"class.v8::internal::compiler::Node"** %248, %79
  br i1 %252, label %253, label %209, !llvm.loop !36

253:                                              ; preds = %204, %209, %181, %69
  %254 = phi %"class.v8::internal::compiler::Node"** [ %73, %69 ], [ %107, %181 ], [ %205, %204 ], [ %247, %209 ]
  %255 = ptrtoint %"class.v8::internal::compiler::Node"** %254 to i64
  store i64 %255, i64* %11, align 8
  store i64 %78, i64* %10, align 8
  store i64 %75, i64* %12, align 8
  br label %256

256:                                              ; preds = %253, %28, %16
  %257 = inttoptr i64 %17 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.31"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE25__emplace_unique_key_argsIlJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.27"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.109"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %6) #5
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %71, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #5, !range !37
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ult i64 %7, %9
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.31"* %26, null
  br i1 %27, label %71, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  %30 = load i64, i64* %1, align 8
  br i1 %13, label %31, label %53

31:                                               ; preds = %28, %48
  %32 = phi %"struct.std::__1::__hash_node_base.31"* [ %34, %48 ], [ %26, %28 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.31"* %34, null
  br i1 %35, label %71, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.31"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %7
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = icmp ult i64 %39, %9
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %39, %9
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %44, %43 ], [ %39, %41 ]
  %47 = icmp eq i64 %46, %22
  br i1 %47, label %48, label %71

48:                                               ; preds = %45, %36
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %34, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.31"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %30
  br i1 %52, label %174, label %31

53:                                               ; preds = %28, %66
  %54 = phi %"struct.std::__1::__hash_node_base.31"* [ %56, %66 ], [ %26, %28 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.31"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %56, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.31"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %7
  %63 = and i64 %61, %29
  %64 = icmp eq i64 %63, %22
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %71

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %56, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.31"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, %30
  br i1 %70, label %174, label %53

71:                                               ; preds = %58, %53, %45, %31, %21, %5
  %72 = phi i64 [ %22, %21 ], [ undef, %5 ], [ %22, %31 ], [ %22, %45 ], [ %22, %53 ], [ %22, %58 ]
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %74 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %73, align 8, !noalias !38
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %74, i64 0, i32 2
  %76 = load i64, i64* %75, align 8, !noalias !38
  %77 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %74, i64 0, i32 3
  %78 = load i64, i64* %77, align 8, !noalias !38
  %79 = sub i64 %78, %76
  %80 = icmp ult i64 %79, 32
  br i1 %80, label %81, label %83, !prof !2

81:                                               ; preds = %71
  %82 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %74, i64 32) #5, !noalias !38
  br label %85

83:                                               ; preds = %71
  %84 = add i64 %76, 32
  store i64 %84, i64* %75, align 8, !noalias !38
  br label %85

85:                                               ; preds = %81, %83
  %86 = phi i64 [ %82, %81 ], [ %76, %83 ]
  %87 = inttoptr i64 %86 to %"struct.std::__1::__hash_node"*
  %88 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8, !noalias !38
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %87, i64 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %89, align 8, !noalias !38
  store i64 %91, i64* %90, align 8, !noalias !38
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %87, i64 0, i32 2, i32 0, i32 1
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %92, align 8, !noalias !38
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %87, i64 0, i32 1
  store i64 %7, i64* %93, align 8, !noalias !38
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %87, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.31"* null, %"struct.std::__1::__hash_node_base.31"** %94, align 8, !noalias !38
  %95 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 2, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 1
  %98 = uitofp i64 %97 to float
  %99 = uitofp i64 %9 to float
  %100 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 3, i32 0, i32 0
  %101 = load float, float* %100, align 4
  %102 = fmul float %101, %99
  %103 = fcmp olt float %102, %98
  %104 = or i1 %10, %103
  br i1 %104, label %105, label %128

105:                                              ; preds = %85
  %106 = shl i64 %9, 1
  %107 = icmp ult i64 %9, 3
  %108 = tail call i64 @llvm.ctpop.i64(i64 %9) #5, !range !37
  %109 = icmp ugt i64 %108, 1
  %110 = or i1 %107, %109
  %111 = zext i1 %110 to i64
  %112 = or i64 %106, %111
  %113 = fdiv float %98, %101
  %114 = tail call float @llvm.ceil.f32(float %113) #5
  %115 = fptoui float %114 to i64
  %116 = icmp ult i64 %112, %115
  %117 = select i1 %116, i64 %115, i64 %112
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.27"* %0, i64 %117)
  %118 = load i64, i64* %8, align 8
  %119 = tail call i64 @llvm.ctpop.i64(i64 %118) #5, !range !37
  %120 = icmp ugt i64 %119, 1
  br i1 %120, label %124, label %121

121:                                              ; preds = %105
  %122 = add i64 %118, -1
  %123 = and i64 %122, %7
  br label %128

124:                                              ; preds = %105
  %125 = icmp ult i64 %7, %118
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = urem i64 %7, %118
  br label %128

128:                                              ; preds = %126, %124, %121, %85
  %129 = phi i64 [ %9, %85 ], [ %118, %121 ], [ %118, %124 ], [ %118, %126 ]
  %130 = phi i64 [ %72, %85 ], [ %123, %121 ], [ %7, %124 ], [ %127, %126 ]
  %131 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %131, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %132, i64 %130
  %134 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %133, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base.31"* %134, null
  br i1 %135, label %136, label %164

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 1, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %137, i64 0, i32 0
  %139 = bitcast %"struct.std::__1::__hash_node_base.31"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = inttoptr i64 %86 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %87, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.31"* %142, %"struct.std::__1::__hash_node_base.31"** %138, align 8
  %143 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %131, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %143, i64 %130
  store %"struct.std::__1::__hash_node_base.31"* %137, %"struct.std::__1::__hash_node_base.31"** %144, align 8
  %145 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %94, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.31"* %145, null
  br i1 %146, label %170, label %147

147:                                              ; preds = %136
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %145, i64 1
  %149 = bitcast %"struct.std::__1::__hash_node_base.31"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = tail call i64 @llvm.ctpop.i64(i64 %129) #5, !range !37
  %152 = icmp ugt i64 %151, 1
  br i1 %152, label %156, label %153

153:                                              ; preds = %147
  %154 = add i64 %129, -1
  %155 = and i64 %150, %154
  br label %160

156:                                              ; preds = %147
  %157 = icmp ult i64 %150, %129
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = urem i64 %150, %129
  br label %160

160:                                              ; preds = %153, %156, %158
  %161 = phi i64 [ %155, %153 ], [ %159, %158 ], [ %150, %156 ]
  %162 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %131, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %162, i64 %161
  store %"struct.std::__1::__hash_node_base.31"* %142, %"struct.std::__1::__hash_node_base.31"** %163, align 8
  br label %170

164:                                              ; preds = %128
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %134, i64 0, i32 0
  %166 = bitcast %"struct.std::__1::__hash_node_base.31"* %134 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = inttoptr i64 %86 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %87, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.31"* %169, %"struct.std::__1::__hash_node_base.31"** %165, align 8
  br label %170

170:                                              ; preds = %136, %160, %164
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %87, i64 0, i32 0
  %172 = load i64, i64* %95, align 8
  %173 = add i64 %172, 1
  store i64 %173, i64* %95, align 8
  br label %174

174:                                              ; preds = %66, %48, %170
  %175 = phi i8 [ 1, %170 ], [ 0, %48 ], [ 0, %66 ]
  %176 = phi %"struct.std::__1::__hash_node_base.31"* [ %171, %170 ], [ %34, %48 ], [ %56, %66 ]
  %177 = insertvalue { %"struct.std::__1::__hash_node_base.31"*, i8 } undef, %"struct.std::__1::__hash_node_base.31"* %176, 0
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.31"*, i8 } %177, i8 %175, 1
  ret { %"struct.std::__1::__hash_node_base.31"*, i8 } %178
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.27"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !37
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #5
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.27"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #5, !range !37
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #5
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #5, !range !37
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #5
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.27"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.27"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %186, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #5
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.31"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.31"** %20, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.31"* null, %"struct.std::__1::__hash_node_base.31"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.31"* null, %"struct.std::__1::__hash_node_base.31"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !41

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.27", %"class.std::__1::__hash_table.27"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.31"* %45, null
  br i1 %46, label %188, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.31"* null, %"struct.std::__1::__hash_node_base.31"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.31"* null, %"struct.std::__1::__hash_node_base.31"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.31"* null, %"struct.std::__1::__hash_node_base.31"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.31"* null, %"struct.std::__1::__hash_node_base.31"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.31"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #5, !range !37
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.31"* %43, %"struct.std::__1::__hash_node_base.31"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.31"* %82, null
  br i1 %83, label %188, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %138

86:                                               ; preds = %84, %129
  %87 = phi %"struct.std::__1::__hash_node_base.31"* [ %133, %129 ], [ %82, %84 ]
  %88 = phi i64 [ %131, %129 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.31"* [ %130, %129 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.31"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %129, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.31"* %102, null
  br i1 %103, label %128, label %135

104:                                              ; preds = %135, %109
  %105 = phi %"struct.std::__1::__hash_node_base.31"* [ %107, %109 ], [ %87, %135 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.31"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.31"* %110 to i64*
  %112 = load i64, i64* %137, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %109, %104
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.31"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.31"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.31"* %89 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %119, i64 %97
  %121 = bitcast %"struct.std::__1::__hash_node_base.31"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %124, i64 %97
  %126 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.31"* %87, %"struct.std::__1::__hash_node_base.31"** %127, align 8
  br label %129

128:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.31"* %89, %"struct.std::__1::__hash_node_base.31"** %101, align 8
  br label %129

129:                                              ; preds = %128, %115, %96
  %130 = phi %"struct.std::__1::__hash_node_base.31"* [ %87, %128 ], [ %89, %115 ], [ %87, %96 ]
  %131 = phi i64 [ %97, %128 ], [ %88, %115 ], [ %88, %96 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %130, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.31"* %133, null
  br i1 %134, label %188, label %86

135:                                              ; preds = %99
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %87, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base.31"* %136 to i64*
  br label %104

138:                                              ; preds = %84, %180
  %139 = phi %"struct.std::__1::__hash_node_base.31"* [ %184, %180 ], [ %82, %84 ]
  %140 = phi i64 [ %182, %180 ], [ %78, %84 ]
  %141 = phi %"struct.std::__1::__hash_node_base.31"* [ %181, %180 ], [ %45, %84 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %139, i64 1
  %143 = bitcast %"struct.std::__1::__hash_node_base.31"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %85
  %146 = icmp eq i64 %145, %140
  br i1 %146, label %180, label %147

147:                                              ; preds = %138
  %148 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %148, i64 %145
  %150 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.31"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %139, i64 2
  %154 = bitcast %"struct.std::__1::__hash_node_base.31"* %153 to i64*
  br label %156

155:                                              ; preds = %147
  store %"struct.std::__1::__hash_node_base.31"* %141, %"struct.std::__1::__hash_node_base.31"** %149, align 8
  br label %180

156:                                              ; preds = %152, %161
  %157 = phi %"struct.std::__1::__hash_node_base.31"* [ %159, %161 ], [ %139, %152 ]
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %157, i64 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base.31"* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %159, i64 2
  %163 = bitcast %"struct.std::__1::__hash_node_base.31"* %162 to i64*
  %164 = load i64, i64* %154, align 8
  %165 = load i64, i64* %163, align 8
  %166 = icmp eq i64 %164, %165
  br i1 %166, label %156, label %167

167:                                              ; preds = %156, %161
  %168 = ptrtoint %"struct.std::__1::__hash_node_base.31"* %159 to i64
  %169 = bitcast %"struct.std::__1::__hash_node_base.31"* %157 to i64*
  %170 = bitcast %"struct.std::__1::__hash_node_base.31"* %141 to i64*
  store i64 %168, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %171, i64 %145
  %173 = bitcast %"struct.std::__1::__hash_node_base.31"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %169, align 8
  %176 = load %"struct.std::__1::__hash_node_base.31"**, %"struct.std::__1::__hash_node_base.31"*** %21, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %176, i64 %145
  %178 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.31"* %139, %"struct.std::__1::__hash_node_base.31"** %179, align 8
  br label %180

180:                                              ; preds = %138, %167, %155
  %181 = phi %"struct.std::__1::__hash_node_base.31"* [ %139, %155 ], [ %141, %167 ], [ %139, %138 ]
  %182 = phi i64 [ %145, %155 ], [ %140, %167 ], [ %140, %138 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.31", %"struct.std::__1::__hash_node_base.31"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.31"*, %"struct.std::__1::__hash_node_base.31"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.31"* %184, null
  br i1 %185, label %188, label %138

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::__hash_table.27"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false)
  br label %188

188:                                              ; preds = %180, %129, %77, %42, %186
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
!37 = !{i64 0, i64 65}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKlEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIlPN2v88internal8compiler4NodeEEENS_22__unordered_map_hasherIlS7_NS2_4base4hashIlEENS_8equal_toIlEELb1EEENS_21__unordered_map_equalIlS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKlEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!41 = distinct !{!41, !11}
