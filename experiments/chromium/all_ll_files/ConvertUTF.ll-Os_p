; ModuleID = '../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/ConvertUTF.cpp'
source_filename = "../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/ConvertUTF.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@_ZN4llvmL13firstByteMarkE = internal unnamed_addr constant [7 x i8] c"\00\00\C0\E0\F0\F8\FC", align 1
@_ZN4llvmL20trailingBytesForUTF8E = internal unnamed_addr constant [256 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\04\04\04\04\05\05\05\05", align 16
@_ZN4llvmL15offsetsFromUTF8E = internal unnamed_addr constant [6 x i32] [i32 0, i32 12416, i32 925824, i32 63447168, i32 -100130688, i32 -2113396608], align 16

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm19ConvertUTF32toUTF16EPPKjS1_PPtS3_NS_15ConversionFlagsE(i32** nocapture, i32* readnone, i16** nocapture, i16* readnone, i32) local_unnamed_addr #0 {
  %6 = load i32*, i32** %0, align 8
  %7 = load i16*, i16** %2, align 8
  %8 = icmp ult i32* %6, %1
  br i1 %8, label %9, label %50

9:                                                ; preds = %5
  %10 = icmp eq i32 %4, 0
  br label %11

11:                                               ; preds = %9, %46
  %12 = phi i16* [ %7, %9 ], [ %48, %46 ]
  %13 = phi i32* [ %6, %9 ], [ %17, %46 ]
  %14 = phi i32 [ 0, %9 ], [ %47, %46 ]
  %15 = icmp ult i16* %12, %3
  br i1 %15, label %16, label %50

16:                                               ; preds = %11
  %17 = getelementptr inbounds i32, i32* %13, i64 1
  %18 = load i32, i32* %13, align 4
  %19 = icmp ult i32 %18, 65536
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = and i32 %18, -2048
  %22 = icmp eq i32 %21, 55296
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  br i1 %10, label %50, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds i16, i16* %12, i64 1
  store i16 -3, i16* %12, align 2
  br label %46

26:                                               ; preds = %20
  %27 = trunc i32 %18 to i16
  %28 = getelementptr inbounds i16, i16* %12, i64 1
  store i16 %27, i16* %12, align 2
  br label %46

29:                                               ; preds = %16
  %30 = icmp ugt i32 %18, 1114111
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  br i1 %10, label %46, label %32

32:                                               ; preds = %31
  %33 = getelementptr inbounds i16, i16* %12, i64 1
  store i16 -3, i16* %12, align 2
  br label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds i16, i16* %12, i64 1
  %36 = icmp ult i16* %35, %3
  br i1 %36, label %37, label %50

37:                                               ; preds = %34
  %38 = add nsw i32 %18, -65536
  %39 = lshr i32 %38, 10
  %40 = trunc i32 %39 to i16
  %41 = add nuw nsw i16 %40, -10240
  store i16 %41, i16* %12, align 2
  %42 = trunc i32 %38 to i16
  %43 = and i16 %42, 1023
  %44 = or i16 %43, -9216
  %45 = getelementptr inbounds i16, i16* %12, i64 2
  store i16 %44, i16* %35, align 2
  br label %46

46:                                               ; preds = %26, %24, %32, %37, %31
  %47 = phi i32 [ %14, %24 ], [ %14, %26 ], [ %14, %32 ], [ %14, %37 ], [ 3, %31 ]
  %48 = phi i16* [ %25, %24 ], [ %28, %26 ], [ %33, %32 ], [ %45, %37 ], [ %12, %31 ]
  %49 = icmp ult i32* %17, %1
  br i1 %49, label %11, label %50

50:                                               ; preds = %46, %11, %23, %34, %5
  %51 = phi i32* [ %6, %5 ], [ %13, %34 ], [ %13, %23 ], [ %13, %11 ], [ %17, %46 ]
  %52 = phi i16* [ %7, %5 ], [ %12, %34 ], [ %12, %23 ], [ %12, %11 ], [ %48, %46 ]
  %53 = phi i32 [ 0, %5 ], [ 2, %34 ], [ 3, %23 ], [ 2, %11 ], [ %47, %46 ]
  store i32* %51, i32** %0, align 8
  store i16* %52, i16** %2, align 8
  ret i32 %53
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm19ConvertUTF16toUTF32EPPKtS1_PPjS3_NS_15ConversionFlagsE(i16** nocapture, i16* readnone, i32** nocapture, i32* readnone, i32) local_unnamed_addr #0 {
  %6 = load i16*, i16** %0, align 8
  %7 = load i32*, i32** %2, align 8
  %8 = icmp ult i16* %6, %1
  br i1 %8, label %9, label %42

9:                                                ; preds = %5
  %10 = icmp eq i32 %4, 0
  br label %11

11:                                               ; preds = %9, %39
  %12 = phi i32* [ %7, %9 ], [ %40, %39 ]
  %13 = phi i16* [ %6, %9 ], [ %36, %39 ]
  %14 = getelementptr inbounds i16, i16* %13, i64 1
  %15 = load i16, i16* %13, align 2
  %16 = zext i16 %15 to i32
  %17 = and i16 %15, -1024
  %18 = icmp eq i16 %17, -10240
  br i1 %18, label %19, label %32

19:                                               ; preds = %11
  %20 = icmp ult i16* %14, %1
  br i1 %20, label %21, label %42

21:                                               ; preds = %19
  %22 = load i16, i16* %14, align 2
  %23 = and i16 %22, -1024
  %24 = icmp eq i16 %23, -9216
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = zext i16 %22 to i32
  %27 = shl nuw nsw i32 %16, 10
  %28 = add nsw i32 %27, -56613888
  %29 = add nsw i32 %28, %26
  %30 = getelementptr inbounds i16, i16* %13, i64 2
  br label %35

31:                                               ; preds = %21
  br i1 %10, label %42, label %35

32:                                               ; preds = %11
  %33 = icmp eq i16 %17, -9216
  %34 = and i1 %10, %33
  br i1 %34, label %42, label %35

35:                                               ; preds = %32, %31, %25
  %36 = phi i16* [ %30, %25 ], [ %14, %31 ], [ %14, %32 ]
  %37 = phi i32 [ %29, %25 ], [ %16, %31 ], [ %16, %32 ]
  %38 = icmp ult i32* %12, %3
  br i1 %38, label %39, label %42

39:                                               ; preds = %35
  %40 = getelementptr inbounds i32, i32* %12, i64 1
  store i32 %37, i32* %12, align 4
  %41 = icmp ult i16* %36, %1
  br i1 %41, label %11, label %42

42:                                               ; preds = %39, %31, %19, %32, %35, %5
  %43 = phi i16* [ %6, %5 ], [ %13, %35 ], [ %13, %32 ], [ %13, %19 ], [ %13, %31 ], [ %36, %39 ]
  %44 = phi i32* [ %7, %5 ], [ %12, %35 ], [ %12, %32 ], [ %12, %19 ], [ %12, %31 ], [ %40, %39 ]
  %45 = phi i32 [ 0, %5 ], [ 2, %35 ], [ 3, %32 ], [ 1, %19 ], [ 3, %31 ], [ 0, %39 ]
  store i16* %43, i16** %0, align 8
  store i32* %44, i32** %2, align 8
  ret i32 %45
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm18ConvertUTF16toUTF8EPPKtS1_PPhS3_NS_15ConversionFlagsE(i16** nocapture, i16* readnone, i8** nocapture, i8* readnone, i32) local_unnamed_addr #0 {
  %6 = load i16*, i16** %0, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = icmp ult i16* %6, %1
  br i1 %8, label %9, label %89

9:                                                ; preds = %5
  %10 = icmp eq i32 %4, 0
  br label %11

11:                                               ; preds = %9, %85
  %12 = phi i16* [ %6, %9 ], [ %37, %85 ]
  %13 = phi i8* [ %7, %9 ], [ %87, %85 ]
  %14 = getelementptr inbounds i16, i16* %12, i64 1
  %15 = load i16, i16* %12, align 2
  %16 = zext i16 %15 to i32
  %17 = and i16 %15, -1024
  %18 = icmp eq i16 %17, -10240
  br i1 %18, label %19, label %32

19:                                               ; preds = %11
  %20 = icmp ult i16* %14, %1
  br i1 %20, label %21, label %89

21:                                               ; preds = %19
  %22 = load i16, i16* %14, align 2
  %23 = and i16 %22, -1024
  %24 = icmp eq i16 %23, -9216
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = zext i16 %22 to i32
  %27 = shl nuw nsw i32 %16, 10
  %28 = add nsw i32 %27, -56613888
  %29 = add nsw i32 %28, %26
  %30 = getelementptr inbounds i16, i16* %12, i64 2
  br label %35

31:                                               ; preds = %21
  br i1 %10, label %89, label %35

32:                                               ; preds = %11
  %33 = icmp eq i16 %17, -9216
  %34 = and i1 %10, %33
  br i1 %34, label %89, label %35

35:                                               ; preds = %31, %25, %32
  %36 = phi i32 [ %16, %32 ], [ %29, %25 ], [ %16, %31 ]
  %37 = phi i16* [ %14, %32 ], [ %30, %25 ], [ %14, %31 ]
  %38 = icmp ult i32 %36, 128
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = icmp ult i32 %36, 2048
  br i1 %40, label %47, label %41

41:                                               ; preds = %39
  %42 = icmp ult i32 %36, 65536
  br i1 %42, label %47, label %43

43:                                               ; preds = %41
  %44 = icmp ult i32 %36, 1114112
  %45 = select i1 %44, i32 %36, i32 65533
  %46 = select i1 %44, i16 4, i16 3
  br label %47

47:                                               ; preds = %43, %41, %39, %35
  %48 = phi i32 [ %36, %35 ], [ %36, %39 ], [ %36, %41 ], [ %45, %43 ]
  %49 = phi i16 [ 1, %35 ], [ 2, %39 ], [ 3, %41 ], [ %46, %43 ]
  %50 = zext i16 %49 to i64
  %51 = getelementptr inbounds i8, i8* %13, i64 %50
  %52 = icmp ugt i8* %51, %3
  br i1 %52, label %89, label %53

53:                                               ; preds = %47
  %54 = zext i16 %49 to i32
  switch i32 %54, label %85 [
    i32 4, label %55
    i32 3, label %61
    i32 2, label %69
    i32 1, label %77
  ]

55:                                               ; preds = %53
  %56 = trunc i32 %48 to i8
  %57 = and i8 %56, 63
  %58 = or i8 %57, -128
  %59 = getelementptr inbounds i8, i8* %51, i64 -1
  store i8 %58, i8* %59, align 1
  %60 = lshr i32 %48, 6
  br label %61

61:                                               ; preds = %53, %55
  %62 = phi i8* [ %51, %53 ], [ %59, %55 ]
  %63 = phi i32 [ %48, %53 ], [ %60, %55 ]
  %64 = trunc i32 %63 to i8
  %65 = and i8 %64, 63
  %66 = or i8 %65, -128
  %67 = getelementptr inbounds i8, i8* %62, i64 -1
  store i8 %66, i8* %67, align 1
  %68 = lshr i32 %63, 6
  br label %69

69:                                               ; preds = %53, %61
  %70 = phi i8* [ %51, %53 ], [ %67, %61 ]
  %71 = phi i32 [ %48, %53 ], [ %68, %61 ]
  %72 = trunc i32 %71 to i8
  %73 = and i8 %72, 63
  %74 = or i8 %73, -128
  %75 = getelementptr inbounds i8, i8* %70, i64 -1
  store i8 %74, i8* %75, align 1
  %76 = lshr i32 %71, 6
  br label %77

77:                                               ; preds = %53, %69
  %78 = phi i8* [ %51, %53 ], [ %75, %69 ]
  %79 = phi i32 [ %48, %53 ], [ %76, %69 ]
  %80 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZN4llvmL13firstByteMarkE, i64 0, i64 %50
  %81 = load i8, i8* %80, align 1
  %82 = trunc i32 %79 to i8
  %83 = or i8 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 -1
  store i8 %83, i8* %84, align 1
  br label %85

85:                                               ; preds = %53, %77
  %86 = phi i8* [ %51, %53 ], [ %84, %77 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 %50
  %88 = icmp ult i16* %37, %1
  br i1 %88, label %11, label %89

89:                                               ; preds = %85, %19, %32, %47, %31, %5
  %90 = phi i8* [ %7, %5 ], [ %13, %31 ], [ %13, %47 ], [ %13, %32 ], [ %13, %19 ], [ %87, %85 ]
  %91 = phi i16* [ %6, %5 ], [ %12, %31 ], [ %12, %47 ], [ %12, %32 ], [ %12, %19 ], [ %37, %85 ]
  %92 = phi i32 [ 0, %5 ], [ 3, %31 ], [ 2, %47 ], [ 3, %32 ], [ 1, %19 ], [ 0, %85 ]
  store i16* %91, i16** %0, align 8
  store i8* %90, i8** %2, align 8
  ret i32 %92
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm18ConvertUTF32toUTF8EPPKjS1_PPhS3_NS_15ConversionFlagsE(i32** nocapture, i32* readnone, i8** nocapture, i8* readnone, i32) local_unnamed_addr #0 {
  %6 = load i32*, i32** %0, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = icmp ult i32* %6, %1
  br i1 %8, label %9, label %74

9:                                                ; preds = %5
  %10 = icmp eq i32 %4, 0
  br label %11

11:                                               ; preds = %9, %70
  %12 = phi i32 [ 0, %9 ], [ %34, %70 ]
  %13 = phi i32* [ %6, %9 ], [ %15, %70 ]
  %14 = phi i8* [ %7, %9 ], [ %72, %70 ]
  %15 = getelementptr inbounds i32, i32* %13, i64 1
  %16 = load i32, i32* %13, align 4
  %17 = and i32 %16, -2048
  %18 = icmp eq i32 %17, 55296
  %19 = and i1 %10, %18
  br i1 %19, label %74, label %20

20:                                               ; preds = %11
  %21 = icmp ult i32 %16, 128
  br i1 %21, label %31, label %22

22:                                               ; preds = %20
  %23 = icmp ult i32 %16, 2048
  br i1 %23, label %31, label %24

24:                                               ; preds = %22
  %25 = icmp ult i32 %16, 65536
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = icmp ult i32 %16, 1114112
  %28 = select i1 %27, i32 %16, i32 65533
  %29 = select i1 %27, i16 4, i16 3
  %30 = select i1 %27, i32 %12, i32 3
  br label %31

31:                                               ; preds = %26, %24, %22, %20
  %32 = phi i32 [ %16, %20 ], [ %16, %22 ], [ %16, %24 ], [ %28, %26 ]
  %33 = phi i16 [ 1, %20 ], [ 2, %22 ], [ 3, %24 ], [ %29, %26 ]
  %34 = phi i32 [ %12, %20 ], [ %12, %22 ], [ %12, %24 ], [ %30, %26 ]
  %35 = zext i16 %33 to i64
  %36 = getelementptr inbounds i8, i8* %14, i64 %35
  %37 = icmp ugt i8* %36, %3
  br i1 %37, label %74, label %38

38:                                               ; preds = %31
  %39 = zext i16 %33 to i32
  switch i32 %39, label %70 [
    i32 4, label %40
    i32 3, label %46
    i32 2, label %54
    i32 1, label %62
  ]

40:                                               ; preds = %38
  %41 = trunc i32 %32 to i8
  %42 = and i8 %41, 63
  %43 = or i8 %42, -128
  %44 = getelementptr inbounds i8, i8* %36, i64 -1
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %32, 6
  br label %46

46:                                               ; preds = %38, %40
  %47 = phi i8* [ %36, %38 ], [ %44, %40 ]
  %48 = phi i32 [ %32, %38 ], [ %45, %40 ]
  %49 = trunc i32 %48 to i8
  %50 = and i8 %49, 63
  %51 = or i8 %50, -128
  %52 = getelementptr inbounds i8, i8* %47, i64 -1
  store i8 %51, i8* %52, align 1
  %53 = lshr i32 %48, 6
  br label %54

54:                                               ; preds = %38, %46
  %55 = phi i8* [ %36, %38 ], [ %52, %46 ]
  %56 = phi i32 [ %32, %38 ], [ %53, %46 ]
  %57 = trunc i32 %56 to i8
  %58 = and i8 %57, 63
  %59 = or i8 %58, -128
  %60 = getelementptr inbounds i8, i8* %55, i64 -1
  store i8 %59, i8* %60, align 1
  %61 = lshr i32 %56, 6
  br label %62

62:                                               ; preds = %38, %54
  %63 = phi i8* [ %36, %38 ], [ %60, %54 ]
  %64 = phi i32 [ %32, %38 ], [ %61, %54 ]
  %65 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZN4llvmL13firstByteMarkE, i64 0, i64 %35
  %66 = load i8, i8* %65, align 1
  %67 = trunc i32 %64 to i8
  %68 = or i8 %66, %67
  %69 = getelementptr inbounds i8, i8* %63, i64 -1
  store i8 %68, i8* %69, align 1
  br label %70

70:                                               ; preds = %38, %62
  %71 = phi i8* [ %36, %38 ], [ %69, %62 ]
  %72 = getelementptr inbounds i8, i8* %71, i64 %35
  %73 = icmp ult i32* %15, %1
  br i1 %73, label %11, label %74

74:                                               ; preds = %70, %11, %31, %5
  %75 = phi i8* [ %7, %5 ], [ %14, %31 ], [ %14, %11 ], [ %72, %70 ]
  %76 = phi i32* [ %6, %5 ], [ %13, %31 ], [ %13, %11 ], [ %15, %70 ]
  %77 = phi i32 [ 0, %5 ], [ 2, %31 ], [ 3, %11 ], [ %34, %70 ]
  store i32* %76, i32** %0, align 8
  store i8* %75, i8** %2, align 8
  ret i32 %77
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i8 @_ZN4llvm19isLegalUTF8SequenceEPKhS1_(i8*, i8*) local_unnamed_addr #1 {
  %3 = load i8, i8* %0, align 1
  %4 = zext i8 %3 to i64
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4llvmL20trailingBytesForUTF8E, i64 0, i64 %4
  %6 = load i8, i8* %5, align 1
  %7 = sext i8 %6 to i32
  %8 = add nsw i32 %7, 1
  %9 = sext i32 %8 to i64
  %10 = ptrtoint i8* %1 to i64
  %11 = ptrtoint i8* %0 to i64
  %12 = sub i64 %10, %11
  %13 = icmp slt i64 %12, %9
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = tail call fastcc zeroext i8 @_ZN4llvmL11isLegalUTF8EPKhi(i8* %0, i32 %8) #3
  br label %16

16:                                               ; preds = %2, %14
  %17 = phi i8 [ %15, %14 ], [ 0, %2 ]
  ret i8 %17
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define internal fastcc zeroext i8 @_ZN4llvmL11isLegalUTF8EPKhi(i8* nocapture readonly, i32) unnamed_addr #1 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds i8, i8* %0, i64 %3
  switch i32 %1, label %46 [
    i32 4, label %7
    i32 3, label %13
    i32 2, label %20
    i32 1, label %5
  ]

5:                                                ; preds = %2
  %6 = load i8, i8* %0, align 1
  br label %37

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %4, i64 -1
  %9 = load i8, i8* %8, align 1
  %10 = icmp sgt i8 %9, -1
  %11 = icmp ugt i8 %9, -65
  %12 = or i1 %10, %11
  br i1 %12, label %46, label %13

13:                                               ; preds = %7, %2
  %14 = phi i8* [ %4, %2 ], [ %8, %7 ]
  %15 = getelementptr inbounds i8, i8* %14, i64 -1
  %16 = load i8, i8* %15, align 1
  %17 = icmp sgt i8 %16, -1
  %18 = icmp ugt i8 %16, -65
  %19 = or i1 %17, %18
  br i1 %19, label %46, label %20

20:                                               ; preds = %13, %2
  %21 = phi i8* [ %4, %2 ], [ %15, %13 ]
  %22 = getelementptr inbounds i8, i8* %21, i64 -1
  %23 = load i8, i8* %22, align 1
  %24 = icmp sgt i8 %23, -1
  %25 = icmp ugt i8 %23, -65
  %26 = or i1 %24, %25
  br i1 %26, label %46, label %27

27:                                               ; preds = %20
  %28 = load i8, i8* %0, align 1
  switch i8 %28, label %37 [
    i8 -32, label %29
    i8 -19, label %31
    i8 -16, label %33
    i8 -12, label %35
  ]

29:                                               ; preds = %27
  %30 = icmp ult i8 %23, -96
  br i1 %30, label %46, label %42

31:                                               ; preds = %27
  %32 = icmp ugt i8 %23, -97
  br i1 %32, label %46, label %42

33:                                               ; preds = %27
  %34 = icmp ult i8 %23, -112
  br i1 %34, label %46, label %42

35:                                               ; preds = %27
  %36 = icmp ugt i8 %23, -113
  br i1 %36, label %46, label %42

37:                                               ; preds = %5, %27
  %38 = phi i8 [ %6, %5 ], [ %28, %27 ]
  %39 = icmp slt i8 %38, 0
  %40 = icmp ult i8 %38, -62
  %41 = and i1 %39, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %35, %33, %31, %29, %37
  %43 = phi i8 [ %38, %37 ], [ -12, %35 ], [ -16, %33 ], [ -19, %31 ], [ -32, %29 ]
  %44 = icmp ult i8 %43, -11
  %45 = zext i1 %44 to i8
  br label %46

46:                                               ; preds = %42, %37, %35, %33, %31, %29, %20, %13, %7, %2
  %47 = phi i8 [ 0, %2 ], [ 0, %7 ], [ 0, %13 ], [ 0, %20 ], [ 0, %29 ], [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 0, %37 ], [ %45, %42 ]
  ret i8 %47
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN4llvm18getNumBytesForUTF8Eh(i8 zeroext) local_unnamed_addr #2 {
  %2 = zext i8 %0 to i64
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4llvmL20trailingBytesForUTF8E, i64 0, i64 %2
  %4 = load i8, i8* %3, align 1
  %5 = sext i8 %4 to i32
  %6 = add nsw i32 %5, 1
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i8 @_ZN4llvm17isLegalUTF8StringEPPKhS1_(i8** nocapture, i8*) local_unnamed_addr #0 {
  %3 = load i8*, i8** %0, align 8
  %4 = icmp eq i8* %3, %1
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = ptrtoint i8* %1 to i64
  br label %7

7:                                                ; preds = %5, %22
  %8 = phi i8* [ %3, %5 ], [ %23, %22 ]
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4llvmL20trailingBytesForUTF8E, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = add nsw i32 %13, 1
  %15 = sext i32 %14 to i64
  %16 = ptrtoint i8* %8 to i64
  %17 = sub i64 %6, %16
  %18 = icmp slt i64 %17, %15
  br i1 %18, label %25, label %19

19:                                               ; preds = %7
  %20 = tail call fastcc zeroext i8 @_ZN4llvmL11isLegalUTF8EPKhi(i8* %8, i32 %14) #3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %8, i64 %15
  store i8* %23, i8** %0, align 8
  %24 = icmp eq i8* %23, %1
  br i1 %24, label %25, label %7

25:                                               ; preds = %7, %19, %22, %2
  %26 = phi i8 [ 1, %2 ], [ 1, %22 ], [ 0, %19 ], [ 0, %7 ]
  ret i8 %26
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm18ConvertUTF8toUTF16EPPKhS1_PPtS3_NS_15ConversionFlagsE(i8** nocapture, i8*, i16** nocapture, i16* readnone, i32) local_unnamed_addr #0 {
  %6 = load i8*, i8** %0, align 8
  %7 = load i16*, i16** %2, align 8
  %8 = icmp ult i8* %6, %1
  br i1 %8, label %9, label %132

9:                                                ; preds = %5
  %10 = ptrtoint i8* %1 to i64
  %11 = icmp eq i32 %4, 0
  br label %12

12:                                               ; preds = %9, %129
  %13 = phi i16* [ %7, %9 ], [ %130, %129 ]
  %14 = phi i8* [ %6, %9 ], [ %79, %129 ]
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i64
  %17 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4llvmL20trailingBytesForUTF8E, i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i16
  %20 = zext i16 %19 to i64
  %21 = ptrtoint i8* %14 to i64
  %22 = sub i64 %10, %21
  %23 = icmp sgt i64 %22, %20
  br i1 %23, label %24, label %132

24:                                               ; preds = %12
  %25 = zext i16 %19 to i32
  %26 = add nuw nsw i32 %25, 1
  %27 = tail call fastcc zeroext i8 @_ZN4llvmL11isLegalUTF8EPKhi(i8* %14, i32 %26) #3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %132, label %29

29:                                               ; preds = %24
  switch i16 %19, label %78 [
    i16 5, label %30
    i16 4, label %35
    i16 3, label %44
    i16 2, label %53
    i16 1, label %62
    i16 0, label %71
  ]

30:                                               ; preds = %29
  %31 = getelementptr inbounds i8, i8* %14, i64 1
  %32 = zext i8 %15 to i32
  %33 = shl nuw nsw i32 %32, 6
  %34 = load i8, i8* %31, align 1
  br label %35

35:                                               ; preds = %29, %30
  %36 = phi i8 [ %15, %29 ], [ %34, %30 ]
  %37 = phi i8* [ %14, %29 ], [ %31, %30 ]
  %38 = phi i32 [ 0, %29 ], [ %33, %30 ]
  %39 = getelementptr inbounds i8, i8* %37, i64 1
  %40 = zext i8 %36 to i32
  %41 = add nuw nsw i32 %38, %40
  %42 = shl nsw i32 %41, 6
  %43 = load i8, i8* %39, align 1
  br label %44

44:                                               ; preds = %29, %35
  %45 = phi i8 [ %15, %29 ], [ %43, %35 ]
  %46 = phi i8* [ %14, %29 ], [ %39, %35 ]
  %47 = phi i32 [ 0, %29 ], [ %42, %35 ]
  %48 = getelementptr inbounds i8, i8* %46, i64 1
  %49 = zext i8 %45 to i32
  %50 = add nuw nsw i32 %47, %49
  %51 = shl i32 %50, 6
  %52 = load i8, i8* %48, align 1
  br label %53

53:                                               ; preds = %29, %44
  %54 = phi i8 [ %15, %29 ], [ %52, %44 ]
  %55 = phi i8* [ %14, %29 ], [ %48, %44 ]
  %56 = phi i32 [ 0, %29 ], [ %51, %44 ]
  %57 = getelementptr inbounds i8, i8* %55, i64 1
  %58 = zext i8 %54 to i32
  %59 = add nuw nsw i32 %56, %58
  %60 = shl i32 %59, 6
  %61 = load i8, i8* %57, align 1
  br label %62

62:                                               ; preds = %29, %53
  %63 = phi i8 [ %15, %29 ], [ %61, %53 ]
  %64 = phi i8* [ %14, %29 ], [ %57, %53 ]
  %65 = phi i32 [ 0, %29 ], [ %60, %53 ]
  %66 = getelementptr inbounds i8, i8* %64, i64 1
  %67 = zext i8 %63 to i32
  %68 = add i32 %65, %67
  %69 = shl i32 %68, 6
  %70 = load i8, i8* %66, align 1
  br label %71

71:                                               ; preds = %29, %62
  %72 = phi i8 [ %15, %29 ], [ %70, %62 ]
  %73 = phi i8* [ %14, %29 ], [ %66, %62 ]
  %74 = phi i32 [ 0, %29 ], [ %69, %62 ]
  %75 = getelementptr inbounds i8, i8* %73, i64 1
  %76 = zext i8 %72 to i32
  %77 = add i32 %74, %76
  br label %78

78:                                               ; preds = %71, %29
  %79 = phi i8* [ %14, %29 ], [ %75, %71 ]
  %80 = phi i32 [ 0, %29 ], [ %77, %71 ]
  %81 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZN4llvmL15offsetsFromUTF8E, i64 0, i64 %20
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 %80, %82
  %84 = icmp ult i16* %13, %3
  br i1 %84, label %89, label %85

85:                                               ; preds = %78
  %86 = zext i32 %26 to i64
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds i8, i8* %79, i64 %87
  br label %132

89:                                               ; preds = %78
  %90 = icmp ult i32 %83, 65536
  br i1 %90, label %91, label %104

91:                                               ; preds = %89
  %92 = and i32 %83, -2048
  %93 = icmp eq i32 %92, 55296
  br i1 %93, label %94, label %101

94:                                               ; preds = %91
  br i1 %11, label %95, label %99

95:                                               ; preds = %94
  %96 = zext i32 %26 to i64
  %97 = sub nsw i64 0, %96
  %98 = getelementptr inbounds i8, i8* %79, i64 %97
  br label %132

99:                                               ; preds = %94
  %100 = getelementptr inbounds i16, i16* %13, i64 1
  store i16 -3, i16* %13, align 2
  br label %129

101:                                              ; preds = %91
  %102 = trunc i32 %83 to i16
  %103 = getelementptr inbounds i16, i16* %13, i64 1
  store i16 %102, i16* %13, align 2
  br label %129

104:                                              ; preds = %89
  %105 = icmp ugt i32 %83, 1114111
  br i1 %105, label %106, label %113

106:                                              ; preds = %104
  br i1 %11, label %107, label %111

107:                                              ; preds = %106
  %108 = zext i32 %26 to i64
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds i8, i8* %79, i64 %109
  br label %132

111:                                              ; preds = %106
  %112 = getelementptr inbounds i16, i16* %13, i64 1
  store i16 -3, i16* %13, align 2
  br label %129

113:                                              ; preds = %104
  %114 = getelementptr inbounds i16, i16* %13, i64 1
  %115 = icmp ult i16* %114, %3
  br i1 %115, label %120, label %116

116:                                              ; preds = %113
  %117 = zext i32 %26 to i64
  %118 = sub nsw i64 0, %117
  %119 = getelementptr inbounds i8, i8* %79, i64 %118
  br label %132

120:                                              ; preds = %113
  %121 = add nsw i32 %83, -65536
  %122 = lshr i32 %121, 10
  %123 = trunc i32 %122 to i16
  %124 = add nuw nsw i16 %123, -10240
  store i16 %124, i16* %13, align 2
  %125 = trunc i32 %121 to i16
  %126 = and i16 %125, 1023
  %127 = or i16 %126, -9216
  %128 = getelementptr inbounds i16, i16* %13, i64 2
  store i16 %127, i16* %114, align 2
  br label %129

129:                                              ; preds = %101, %99, %120, %111
  %130 = phi i16* [ %100, %99 ], [ %103, %101 ], [ %112, %111 ], [ %128, %120 ]
  %131 = icmp ult i8* %79, %1
  br i1 %131, label %12, label %132

132:                                              ; preds = %129, %12, %24, %5, %116, %107, %95, %85
  %133 = phi i16* [ %13, %116 ], [ %13, %107 ], [ %13, %95 ], [ %13, %85 ], [ %7, %5 ], [ %130, %129 ], [ %13, %12 ], [ %13, %24 ]
  %134 = phi i32 [ 2, %116 ], [ 3, %107 ], [ 3, %95 ], [ 2, %85 ], [ 0, %5 ], [ 0, %129 ], [ 1, %12 ], [ 3, %24 ]
  %135 = phi i8* [ %119, %116 ], [ %110, %107 ], [ %98, %95 ], [ %88, %85 ], [ %6, %5 ], [ %79, %129 ], [ %14, %12 ], [ %14, %24 ]
  store i8* %135, i8** %0, align 8
  store i16* %133, i16** %2, align 8
  ret i32 %134
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm25ConvertUTF8toUTF32PartialEPPKhS1_PPjS3_NS_15ConversionFlagsE(i8** nocapture, i8*, i32** nocapture, i32* readnone, i32) local_unnamed_addr #0 {
  %6 = tail call fastcc i32 @_ZN4llvmL22ConvertUTF8toUTF32ImplEPPKhS1_PPjS3_NS_15ConversionFlagsEh(i8** %0, i8* %1, i32** %2, i32* %3, i32 %4, i8 zeroext 1) #3
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i32 @_ZN4llvmL22ConvertUTF8toUTF32ImplEPPKhS1_PPjS3_NS_15ConversionFlagsEh(i8** nocapture, i8*, i32** nocapture, i32* readnone, i32, i8 zeroext) unnamed_addr #0 {
  %7 = load i8*, i8** %0, align 8
  %8 = load i32*, i32** %2, align 8
  %9 = icmp ult i8* %7, %1
  br i1 %9, label %10, label %117

10:                                               ; preds = %6
  %11 = ptrtoint i8* %1 to i64
  %12 = icmp eq i32 %4, 0
  %13 = icmp ne i8 %5, 0
  %14 = or i1 %12, %13
  %15 = xor i1 %12, true
  br label %16

16:                                               ; preds = %10, %111
  %17 = phi i32* [ %8, %10 ], [ %115, %111 ]
  %18 = phi i8* [ %7, %10 ], [ %114, %111 ]
  %19 = phi i32 [ 0, %10 ], [ %113, %111 ]
  %20 = load i8, i8* %18, align 1
  %21 = zext i8 %20 to i64
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4llvmL20trailingBytesForUTF8E, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i16
  %25 = zext i16 %24 to i64
  %26 = ptrtoint i8* %18 to i64
  %27 = sub i64 %11, %26
  %28 = icmp sgt i64 %27, %25
  br i1 %28, label %34, label %29

29:                                               ; preds = %16
  br i1 %14, label %117, label %30

30:                                               ; preds = %29
  %31 = tail call fastcc i32 @_ZN4llvmL41findMaximalSubpartOfIllFormedUTF8SequenceEPKhS1_(i8* %18, i8* %1) #3
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %18, i64 %32
  br label %111

34:                                               ; preds = %16
  %35 = icmp ult i32* %17, %3
  br i1 %35, label %36, label %117

36:                                               ; preds = %34
  %37 = zext i16 %24 to i32
  %38 = add nuw nsw i32 %37, 1
  %39 = tail call fastcc zeroext i8 @_ZN4llvmL11isLegalUTF8EPKhi(i8* %18, i32 %38) #3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  br i1 %12, label %117, label %42

42:                                               ; preds = %41
  %43 = tail call fastcc i32 @_ZN4llvmL41findMaximalSubpartOfIllFormedUTF8SequenceEPKhS1_(i8* %18, i8* %1) #3
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %18, i64 %44
  br label %111

46:                                               ; preds = %36
  switch i16 %24, label %95 [
    i16 5, label %47
    i16 4, label %52
    i16 3, label %61
    i16 2, label %70
    i16 1, label %79
    i16 0, label %88
  ]

47:                                               ; preds = %46
  %48 = getelementptr inbounds i8, i8* %18, i64 1
  %49 = zext i8 %20 to i32
  %50 = shl nuw nsw i32 %49, 6
  %51 = load i8, i8* %48, align 1
  br label %52

52:                                               ; preds = %46, %47
  %53 = phi i8 [ %20, %46 ], [ %51, %47 ]
  %54 = phi i8* [ %18, %46 ], [ %48, %47 ]
  %55 = phi i32 [ 0, %46 ], [ %50, %47 ]
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = zext i8 %53 to i32
  %58 = add nuw nsw i32 %55, %57
  %59 = shl nsw i32 %58, 6
  %60 = load i8, i8* %56, align 1
  br label %61

61:                                               ; preds = %46, %52
  %62 = phi i8 [ %20, %46 ], [ %60, %52 ]
  %63 = phi i8* [ %18, %46 ], [ %56, %52 ]
  %64 = phi i32 [ 0, %46 ], [ %59, %52 ]
  %65 = getelementptr inbounds i8, i8* %63, i64 1
  %66 = zext i8 %62 to i32
  %67 = add nuw nsw i32 %64, %66
  %68 = shl i32 %67, 6
  %69 = load i8, i8* %65, align 1
  br label %70

70:                                               ; preds = %46, %61
  %71 = phi i8 [ %20, %46 ], [ %69, %61 ]
  %72 = phi i8* [ %18, %46 ], [ %65, %61 ]
  %73 = phi i32 [ 0, %46 ], [ %68, %61 ]
  %74 = getelementptr inbounds i8, i8* %72, i64 1
  %75 = zext i8 %71 to i32
  %76 = add nuw nsw i32 %73, %75
  %77 = shl i32 %76, 6
  %78 = load i8, i8* %74, align 1
  br label %79

79:                                               ; preds = %46, %70
  %80 = phi i8 [ %20, %46 ], [ %78, %70 ]
  %81 = phi i8* [ %18, %46 ], [ %74, %70 ]
  %82 = phi i32 [ 0, %46 ], [ %77, %70 ]
  %83 = getelementptr inbounds i8, i8* %81, i64 1
  %84 = zext i8 %80 to i32
  %85 = add i32 %82, %84
  %86 = shl i32 %85, 6
  %87 = load i8, i8* %83, align 1
  br label %88

88:                                               ; preds = %46, %79
  %89 = phi i8 [ %20, %46 ], [ %87, %79 ]
  %90 = phi i8* [ %18, %46 ], [ %83, %79 ]
  %91 = phi i32 [ 0, %46 ], [ %86, %79 ]
  %92 = getelementptr inbounds i8, i8* %90, i64 1
  %93 = zext i8 %89 to i32
  %94 = add i32 %91, %93
  br label %95

95:                                               ; preds = %88, %46
  %96 = phi i8* [ %18, %46 ], [ %92, %88 ]
  %97 = phi i32 [ 0, %46 ], [ %94, %88 ]
  %98 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZN4llvmL15offsetsFromUTF8E, i64 0, i64 %25
  %99 = load i32, i32* %98, align 4
  %100 = sub i32 %97, %99
  %101 = icmp ult i32 %100, 1114112
  br i1 %101, label %102, label %111

102:                                              ; preds = %95
  %103 = and i32 %100, -2048
  %104 = icmp ne i32 %103, 55296
  %105 = or i1 %104, %15
  %106 = select i1 %104, i32 %100, i32 65533
  br i1 %105, label %111, label %107

107:                                              ; preds = %102
  %108 = zext i32 %38 to i64
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds i8, i8* %96, i64 %109
  br label %117

111:                                              ; preds = %102, %95, %42, %30
  %112 = phi i32 [ 65533, %42 ], [ 65533, %30 ], [ %106, %102 ], [ 65533, %95 ]
  %113 = phi i32 [ 3, %42 ], [ 3, %30 ], [ %19, %102 ], [ 3, %95 ]
  %114 = phi i8* [ %45, %42 ], [ %33, %30 ], [ %96, %102 ], [ %96, %95 ]
  store i32 %112, i32* %17, align 4
  %115 = getelementptr inbounds i32, i32* %17, i64 1
  %116 = icmp ult i8* %114, %1
  br i1 %116, label %16, label %117

117:                                              ; preds = %111, %29, %34, %41, %6, %107
  %118 = phi i32* [ %17, %107 ], [ %8, %6 ], [ %115, %111 ], [ %17, %29 ], [ %17, %34 ], [ %17, %41 ]
  %119 = phi i32 [ 3, %107 ], [ 0, %6 ], [ %113, %111 ], [ 1, %29 ], [ 2, %34 ], [ 3, %41 ]
  %120 = phi i8* [ %110, %107 ], [ %7, %6 ], [ %114, %111 ], [ %18, %29 ], [ %18, %34 ], [ %18, %41 ]
  store i8* %120, i8** %0, align 8
  store i32* %118, i32** %2, align 8
  ret i32 %119
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm18ConvertUTF8toUTF32EPPKhS1_PPjS3_NS_15ConversionFlagsE(i8** nocapture, i8*, i32** nocapture, i32* readnone, i32) local_unnamed_addr #0 {
  %6 = tail call fastcc i32 @_ZN4llvmL22ConvertUTF8toUTF32ImplEPPKhS1_PPjS3_NS_15ConversionFlagsEh(i8** %0, i8* %1, i32** %2, i32* %3, i32 %4, i8 zeroext 0) #3
  ret i32 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define internal fastcc i32 @_ZN4llvmL41findMaximalSubpartOfIllFormedUTF8SequenceEPKhS1_(i8* readonly, i8* readnone) unnamed_addr #1 {
  %3 = icmp eq i8* %0, %1
  br i1 %3, label %84, label %4

4:                                                ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = getelementptr inbounds i8, i8* %0, i64 1
  %7 = add i8 %5, 62
  %8 = icmp ult i8 %7, 30
  %9 = icmp eq i8* %6, %1
  %10 = or i1 %9, %8
  br i1 %10, label %84, label %11

11:                                               ; preds = %4
  %12 = load i8, i8* %6, align 1
  %13 = getelementptr inbounds i8, i8* %0, i64 2
  %14 = icmp eq i8 %5, -32
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = and i8 %12, -32
  %17 = icmp eq i8 %16, -96
  %18 = select i1 %17, i32 2, i32 1
  br label %84

19:                                               ; preds = %11
  %20 = add i8 %5, 31
  %21 = icmp ult i8 %20, 12
  br i1 %21, label %22, label %27

22:                                               ; preds = %19
  %23 = icmp slt i8 %12, 0
  %24 = icmp ult i8 %12, -64
  %25 = and i1 %23, %24
  %26 = select i1 %25, i32 2, i32 1
  br label %84

27:                                               ; preds = %19
  %28 = icmp eq i8 %5, -19
  br i1 %28, label %29, label %34

29:                                               ; preds = %27
  %30 = icmp slt i8 %12, 0
  %31 = icmp ult i8 %12, -96
  %32 = and i1 %30, %31
  %33 = select i1 %32, i32 2, i32 1
  br label %84

34:                                               ; preds = %27
  %35 = and i8 %5, -2
  %36 = icmp eq i8 %35, -18
  br i1 %36, label %37, label %42

37:                                               ; preds = %34
  %38 = icmp slt i8 %12, 0
  %39 = icmp ult i8 %12, -64
  %40 = and i1 %38, %39
  %41 = select i1 %40, i32 2, i32 1
  br label %84

42:                                               ; preds = %34
  %43 = icmp eq i8 %5, -16
  br i1 %43, label %44, label %55

44:                                               ; preds = %42
  %45 = add i8 %12, 112
  %46 = icmp ult i8 %45, 48
  br i1 %46, label %47, label %84

47:                                               ; preds = %44
  %48 = icmp eq i8* %13, %1
  br i1 %48, label %84, label %49

49:                                               ; preds = %47
  %50 = load i8, i8* %13, align 1
  %51 = icmp slt i8 %50, 0
  %52 = icmp ult i8 %50, -64
  %53 = and i1 %51, %52
  %54 = select i1 %53, i32 3, i32 2
  br label %84

55:                                               ; preds = %42
  %56 = add i8 %5, 15
  %57 = icmp ult i8 %56, 3
  br i1 %57, label %58, label %70

58:                                               ; preds = %55
  %59 = icmp slt i8 %12, 0
  %60 = icmp ult i8 %12, -64
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %84

62:                                               ; preds = %58
  %63 = icmp eq i8* %13, %1
  br i1 %63, label %84, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %13, align 1
  %66 = icmp slt i8 %65, 0
  %67 = icmp ult i8 %65, -64
  %68 = and i1 %66, %67
  %69 = select i1 %68, i32 3, i32 2
  br label %84

70:                                               ; preds = %55
  %71 = icmp eq i8 %5, -12
  br i1 %71, label %72, label %84

72:                                               ; preds = %70
  %73 = icmp slt i8 %12, 0
  %74 = icmp ult i8 %12, -112
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %84

76:                                               ; preds = %72
  %77 = icmp eq i8* %13, %1
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  %79 = load i8, i8* %13, align 1
  %80 = icmp slt i8 %79, 0
  %81 = icmp ult i8 %79, -64
  %82 = and i1 %80, %81
  %83 = select i1 %82, i32 3, i32 2
  br label %84

84:                                               ; preds = %70, %72, %76, %58, %62, %44, %47, %4, %2, %78, %64, %49, %37, %29, %22, %15
  %85 = phi i32 [ %18, %15 ], [ %26, %22 ], [ %33, %29 ], [ %41, %37 ], [ %54, %49 ], [ %69, %64 ], [ %83, %78 ], [ 0, %2 ], [ 1, %4 ], [ 2, %47 ], [ 1, %44 ], [ 2, %62 ], [ 1, %58 ], [ 2, %76 ], [ 1, %72 ], [ 1, %70 ]
  ret i32 %85
}

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
