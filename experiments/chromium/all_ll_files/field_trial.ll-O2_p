; ModuleID = '../../content/child/field_trial.cc'
source_filename = "../../content/child/field_trial.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.std::__1::pair.69"*, %"struct.std::__1::pair.69"*, %"class.std::__1::__compressed_pair.70" }
%"struct.std::__1::pair.69" = type <{ %"class.std::__1::reference_wrapper", i32, [4 x i8] }>
%"class.std::__1::reference_wrapper" = type { %"struct.base::Feature"* }
%"struct.base::Feature" = type { i8*, i32 }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::pair.69"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.base::FieldTrialList" = type <{ %"class.base::Lock", %"class.std::__1::map.14", %"class.std::__1::unique_ptr", %"class.std::__1::vector.26", %"struct.std::__1::atomic", [4 x i8], %"class.std::__1::unique_ptr.34", %"class.base::ReadOnlySharedMemoryRegion", i8, [7 x i8] }>
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::FieldTrial::EntropyProvider"* }
%"class.base::FieldTrial::EntropyProvider" = type { i32 (...)** }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.base::FieldTrialList::Observer"**, %"class.base::FieldTrialList::Observer"**, %"class.std::__1::__compressed_pair.28" }
%"class.base::FieldTrialList::Observer" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.base::FieldTrialList::Observer"** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::PersistentMemoryAllocator"* }
%"class.base::PersistentMemoryAllocator" = type { i32 (...)**, i8*, i32, i32, i32, i64, i8, %"struct.std::__1::atomic.37", %"class.base::HistogramBase"*, %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%"class.base::HistogramBase" = type opaque
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::FeatureList" = type <{ %"class.base::flat_map", %"class.base::Lock", %"class.std::__1::map.54", %"class.base::FieldTrialList"*, i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.47" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.49" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::pair"* }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.12" }

@_ZN8switches17kFieldTrialHandleE = external constant [0 x i8], align 1
@_ZN8switches15kEnableFeaturesE = external constant [0 x i8], align 1
@_ZN8switches16kDisableFeaturesE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content34InitializeFieldTrialAndFeatureListEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::vector.67", align 8
  %2 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #5
  %3 = tail call i8* @_Znwm(i64 184) #6
  %4 = bitcast i8* %3 to %"class.base::FieldTrialList"*
  tail call void @_ZN4base14FieldTrialListC1ENSt3__110unique_ptrIKNS_10FieldTrial15EntropyProviderENS1_14default_deleteIS5_EEEE(%"class.base::FieldTrialList"* nonnull %4, %"class.base::FieldTrial::EntropyProvider"* null) #5
  tail call void @_ZN4base14FieldTrialList27CreateTrialsFromCommandLineERKNS_11CommandLineEPKci(%"class.base::CommandLine"* dereferenceable(56) %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kFieldTrialHandleE, i64 0, i64 0), i32 3) #5
  %5 = tail call i8* @_Znwm(i64 104) #6
  %6 = bitcast i8* %5 to %"class.base::FeatureList"*
  tail call void @_ZN4base11FeatureListC1Ev(%"class.base::FeatureList"* nonnull %6) #5
  tail call void @_ZN4base14FieldTrialList29CreateFeaturesFromCommandLineERKNS_11CommandLineEPKcS5_PNS_11FeatureListE(%"class.base::CommandLine"* dereferenceable(56) %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kEnableFeaturesE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches16kDisableFeaturesE, i64 0, i64 0), %"class.base::FeatureList"* nonnull %6) #5
  %7 = bitcast %"class.std::__1::vector.67"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #5
  call void @_ZN7content34GetSwitchDependentFeatureOverridesERKN4base11CommandLineE(%"class.std::__1::vector.67"* nonnull sret %1, %"class.base::CommandLine"* dereferenceable(56) %2) #5
  call void @_ZN4base11FeatureList29RegisterExtraFeatureOverridesERKNSt3__16vectorINS1_4pairIKNS1_17reference_wrapperIKNS_7FeatureEEENS0_13OverrideStateEEENS1_9allocatorISA_EEEE(%"class.base::FeatureList"* nonnull %6, %"class.std::__1::vector.67"* nonnull dereferenceable(24) %1) #5
  %8 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %1, i64 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.69"*, %"struct.std::__1::pair.69"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.69"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %0
  %12 = ptrtoint %"struct.std::__1::pair.69"* %9 to i64
  %13 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %1, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair.69"** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast %"struct.std::__1::pair.69"* %9 to i8*
  call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #5
  call void @_ZN4base11FeatureList11SetInstanceENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::FeatureList"* nonnull %6) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN4base14FieldTrialListC1ENSt3__110unique_ptrIKNS_10FieldTrial15EntropyProviderENS1_14default_deleteIS5_EEEE(%"class.base::FieldTrialList"*, %"class.base::FieldTrial::EntropyProvider"*) unnamed_addr #2

declare void @_ZN4base14FieldTrialList27CreateTrialsFromCommandLineERKNS_11CommandLineEPKci(%"class.base::CommandLine"* dereferenceable(56), i8*, i32) local_unnamed_addr #2

declare void @_ZN4base11FeatureListC1Ev(%"class.base::FeatureList"*) unnamed_addr #2

declare void @_ZN4base14FieldTrialList29CreateFeaturesFromCommandLineERKNS_11CommandLineEPKcS5_PNS_11FeatureListE(%"class.base::CommandLine"* dereferenceable(56), i8*, i8*, %"class.base::FeatureList"*) local_unnamed_addr #2

declare void @_ZN4base11FeatureList29RegisterExtraFeatureOverridesERKNSt3__16vectorINS1_4pairIKNS1_17reference_wrapperIKNS_7FeatureEEENS0_13OverrideStateEEENS1_9allocatorISA_EEEE(%"class.base::FeatureList"*, %"class.std::__1::vector.67"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN7content34GetSwitchDependentFeatureOverridesERKN4base11CommandLineE(%"class.std::__1::vector.67"* sret, %"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11FeatureList11SetInstanceENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::FeatureList"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
