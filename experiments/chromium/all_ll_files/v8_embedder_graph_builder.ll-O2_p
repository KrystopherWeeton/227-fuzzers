; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/v8_embedder_graph_builder.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/v8_embedder_graph_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.172", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.107", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type { %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event", i64, i64, i64, i64, i8, i8, %"class.base::TimeDelta", %"class.WTF::Vector" }
%"struct.blink::ThreadHeapStatsCollector::Event" = type <{ i64, i64, i64, i64, i8, [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32, i32, [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ThreadHeapStatsObserver"**, i32, i32 }
%"class.blink::ThreadHeapStatsObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist.38"* }
%"class.blink::Worklist.38" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.101", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i64 }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { float }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.110", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.119" }
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type { i32 (...)** }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type { %"class.v8::EmbedderHeapTracer", %"class.blink::ThreadHeapStatsObserver", %"class.blink::ThreadState"*, i8, i64 }
%"class.v8::EmbedderHeapTracer" = type { i32 (...)**, %"class.v8::Isolate"* }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.38"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.152" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Deque.215" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem, std::__1::default_delete<blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem, std::__1::default_delete<blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"class.std::__1::unique_ptr.220"*, i32, i32 }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* }
%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem" = type { i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::(anonymous namespace)::NodeBuilder" = type { %"class.v8::EmbedderGraph"*, %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8*, %"class.blink::(anonymous namespace)::EmbedderNode"* }
%"class.blink::(anonymous namespace)::EmbedderNode" = type { %"class.v8::EmbedderGraph::Node", i8*, %"class.v8::EmbedderGraph::Node"*, i8, %"class.WTF::Vector.178" }
%"class.v8::EmbedderGraph::Node" = type { i32 (...)** }
%"class.WTF::Vector.178" = type { %"class.WTF::VectorBuffer.179" }
%"class.WTF::VectorBuffer.179" = type { %"class.WTF::VectorBufferBase.180" }
%"class.WTF::VectorBufferBase.180" = type { %"class.std::__1::unique_ptr.181"*, i32, i32 }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i8* }
%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder" = type { %"class.blink::Visitor", %"class.v8::PersistentHandleVisitor", %"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor", %"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, %"class.blink::(anonymous namespace)::NodeBuilder"*, i8*, i8*, %"class.WTF::HashMap.189", %"class.WTF::Deque.204", %"class.WTF::Deque.215" }
%"class.v8::PersistentHandleVisitor" = type { i32 (...)** }
%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor" = type { i32 (...)** }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.193"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.193" = type { i8*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* }
%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State" = type <{ %"class.blink::(anonymous namespace)::EmbedderNode"*, i8*, i8*, %"class.WTF::HashMap.194", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.194" = type { %"class.WTF::HashTable.195" }
%"class.WTF::HashTable.195" = type <{ %"struct.WTF::KeyValuePair.198"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.198" = type { %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.std::__1::basic_string" }
%"class.WTF::Deque.204" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase, std::__1::default_delete<blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase, std::__1::default_delete<blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"class.std::__1::unique_ptr.209"*, i32, i32 }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* }
%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase" = type { i32 (...)**, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.434", %"class.WTF::HashMap.434", %"class.WTF::HashMap.439", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.456", %"class.std::__1::unique_ptr.461", %"class.blink::Persistent.467", %"class.blink::Persistent.471", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.416", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.422", %"class.std::__1::unique_ptr.428", i32, i32 }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.434" = type { %"class.WTF::HashTable.435" }
%"class.WTF::HashTable.435" = type <{ %"struct.WTF::KeyValuePair.438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.438" = type opaque
%"class.WTF::HashMap.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"struct.WTF::KeyValuePair.443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.443" = type opaque
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.467" = type { %"class.blink::PersistentBase.468" }
%"class.blink::PersistentBase.468" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.471" = type { %"class.blink::PersistentBase.472" }
%"class.blink::PersistentBase.472" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.405", i64 }
%"class.blink::HeapVector.405" = type { %"class.WTF::Vector.408" }
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"struct.std::__1::pair.411"*, i32, i32 }
%"struct.std::__1::pair.411" = type { %"class.blink::UntracedMember", %"class.blink::Member.413" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.412" }
%"class.blink::MemberBase.412" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TickClock" = type opaque
%"class.WTF::ConditionalDestructor.216" = type { i8 }
%"class.WTF::ConditionalDestructor.205" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.v8::Persistent" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::TracedGlobal" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem" = type { %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase", i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem" = type { %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.270" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.270" = type { %"class.v8::TracedReference.271" }
%"class.v8::TracedReference.271" = type { %"class.v8::BasicTracedReference.272" }
%"class.v8::BasicTracedReference.272" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.273", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.275" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.279", %"class.blink::Member.281", %"class.blink::Member.273", %"class.blink::Member.283", %"class.blink::Member.283", %"class.blink::Member.311", %"class.blink::Member.313", %"class.blink::Member.315", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.320", %"class.blink::HeapVector.322" }
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.289" }
%"class.WTF::HashMap.289" = type { %"class.WTF::HashTable.290" }
%"class.WTF::HashTable.290" = type <{ %"struct.WTF::KeyValuePair.292"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.292" = type { %"class.WTF::AtomicString", %"class.blink::Member.299" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.294" }
%"struct.std::__1::atomic.294" = type { %"struct.std::__1::__atomic_base.295" }
%"struct.std::__1::__atomic_base.295" = type { %"struct.std::__1::__atomic_base.296" }
%"struct.std::__1::__atomic_base.296" = type { %"struct.std::__1::__cxx_atomic_impl.297" }
%"struct.std::__1::__cxx_atomic_impl.297" = type { %"struct.std::__1::__cxx_atomic_base_impl.298" }
%"struct.std::__1::__cxx_atomic_base_impl.298" = type { i32 }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.303", i32, %"class.blink::HeapVector" }
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.307" }
%"class.WTF::Vector.307" = type { %"class.WTF::VectorBuffer.308" }
%"class.WTF::VectorBuffer.308" = type { %"class.WTF::VectorBufferBase.309" }
%"class.WTF::VectorBufferBase.309" = type { %"class.blink::Member.303"*, i32, i32 }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.317" }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::HeapHashMap.319"* }
%"class.blink::HeapHashMap.319" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.322" = type { %"class.WTF::Vector.325" }
%"class.WTF::Vector.325" = type { %"class.WTF::VectorBuffer.326" }
%"class.WTF::VectorBuffer.326" = type { %"class.WTF::VectorBufferBase.327" }
%"class.WTF::VectorBufferBase.327" = type { %"class.blink::Member.328"*, i32, i32 }
%"class.blink::Member.328" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.372", i32, i8, [3 x i8], %"class.blink::HeapVector.374", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.393", %"class.blink::Member.399", %"class.blink::Member.401", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.330" }
%"class.blink::HeapHashMap.330" = type { %"class.WTF::HashMap.333" }
%"class.WTF::HashMap.333" = type { %"class.WTF::HashTable.334" }
%"class.WTF::HashTable.334" = type <{ %"struct.WTF::KeyValuePair.336"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.336" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.341" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.341" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.342" }
%"class.blink::HeapHashMap.342" = type { %"class.WTF::HashMap.345" }
%"class.WTF::HashMap.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"struct.WTF::KeyValuePair.348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.348" = type { i8*, %"class.blink::Member.349" }
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.351" }
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.353, %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.360", %"class.blink::Member.366", i32, [4 x i8], %"class.WTF::HashSet.368", i32, i32 }
%class.scoped_refptr.353 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.368" = type { %"class.WTF::HashTable.369" }
%"class.WTF::HashTable.369" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.374" = type { %"class.WTF::Vector.377" }
%"class.WTF::Vector.377" = type { %"class.WTF::VectorBuffer.378" }
%"class.WTF::VectorBuffer.378" = type { %"class.WTF::VectorBufferBase.379" }
%"class.WTF::VectorBufferBase.379" = type { %"class.blink::Member.380"*, i32, i32 }
%"class.blink::Member.380" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.386", i32, i32 }
%"class.blink::HeapHashMap.386" = type { %"class.WTF::HashMap.389" }
%"class.WTF::HashMap.389" = type { %"class.WTF::HashTable.390" }
%"class.WTF::HashTable.390" = type <{ %"struct.WTF::KeyValuePair.392"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.392" = type opaque
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::(anonymous namespace)::EmbedderRootNode" = type { %"class.blink::(anonymous namespace)::EmbedderNode" }

$_ZN5blink7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ = comdat any

$_ZNK5blink7Visitor12IsConcurrentEv = comdat any

$_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm = comdat any

$_ZN5blink7Visitor9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E = comdat any

$_ZN5blink7Visitor19RegisterMovableSlotEPKPKv = comdat any

$_ZZN7logging15CheckOpValueStrIPN2v87IsolateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZZN7logging15CheckOpValueStrIcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIA_cNS2_14default_deleteIS4_EEEEEEmm = comdat any

$_ZN2v813EmbedderGraph4Node10IsRootNodeEv = comdat any

$_ZN2v813EmbedderGraph4Node14IsEmbedderNodeEv = comdat any

$_ZN2v813EmbedderGraph4Node10NamePrefixEv = comdat any

$_ZN2v813EmbedderGraph4Node15GetNativeObjectEv = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink16PersistentRegion25ShouldTracePersistentNodeEPNS_7VisitorEPNS_14PersistentNodeE = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderE = internal unnamed_addr constant { [17 x i8*], [5 x i8*], [6 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD0Ev to i8*), i8* bitcast (void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*)* @_ZNK5blink7Visitor12IsConcurrentEv to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)* @_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5VisitEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)* @_ZN5blink7Visitor9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, %"class.blink::TraceWrapperV8Reference"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitEphemeronEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder18VisitWeakContainerEPKvPKS3_NS_15TraceDescriptorES6_PFvRKNS_14LivenessBrokerES3_ES3_ to i8*), i8* bitcast (void (%"class.blink::Visitor"*, i8**)* @_ZN5blink7Visitor19RegisterMovableSlotEPKPKv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, %"class.v8::Persistent"*, i16)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder21VisitPersistentHandleEPN2v810PersistentINS2_5ValueENS2_27NonCopyablePersistentTraitsIS4_EEEEt to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, %"class.v8::TracedReference"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder20VisitTracedReferenceERKN2v815TracedReferenceINS2_5ValueEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, %"class.v8::TracedGlobal"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder23VisitTracedGlobalHandleERKN2v812TracedGlobalINS2_5ValueEEE to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)* @_ZThn16_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)* @_ZThn16_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, %"class.v8::Persistent"*, i16)* @_ZThn16_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilder21VisitPersistentHandleEPN2v810PersistentINS2_5ValueENS2_27NonCopyablePersistentTraitsIS4_EEEEt to i8*)], [6 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)* @_ZThn24_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)* @_ZThn24_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, %"class.v8::TracedGlobal"*)* @_ZThn24_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilder23VisitTracedGlobalHandleERKN2v812TracedGlobalINS2_5ValueEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, %"class.v8::TracedReference"*)* @_ZThn24_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilder20VisitTracedReferenceERKN2v815TracedReferenceINS2_5ValueEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [79 x i8] c"../../third_party/blink/renderer/bindings/core/v8/v8_embedder_graph_builder.cc\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"isolate\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"graph\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"isolate == ThreadState::Current()->GetIsolate()\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [28 x i8] c"states_.Contains(traceable)\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateEEEEEPKcv = private unnamed_addr constant [142 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const void *, blink::(anonymous namespace)::V8EmbedderGraphBuilder::State *>]\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"part of key -> value pair in ephemeron table\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"WTF::KeyValuePair\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"std::string::npos != kvp_pos\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c" (<\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"'<' == backing_name_str[current_pos - 1]\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c">)\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEEEEPKcv = private unnamed_addr constant [216 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::(anonymous namespace)::V8EmbedderGraphBuilder::State *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >]\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<char [], std::__1::default_delete<char []> >]\00", align 1
@_ZTVN5blink12_GLOBAL__N_112EmbedderNodeE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNodeD0Ev to i8*), i8* bitcast (i8* (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNode4NameEv to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNode11SizeInBytesEv to i8*), i8* bitcast (%"class.v8::EmbedderGraph::Node"* (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNode11WrapperNodeEv to i8*), i8* bitcast (i1 (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node10IsRootNodeEv to i8*), i8* bitcast (i1 (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node14IsEmbedderNodeEv to i8*), i8* bitcast (i8* (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node10NamePrefixEv to i8*), i8* bitcast (i8* (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node15GetNativeObjectEv to i8*), i8* bitcast (i8 (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNode15GetDetachednessEv to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvPN5blink12_GLOBAL__N_112EmbedderNodeEEEEEPKcv = private unnamed_addr constant [125 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const void *, blink::(anonymous namespace)::EmbedderNode *>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEEEEPKcv = private unnamed_addr constant [239 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase, std::__1::default_delete<blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase> >]\00", align 1
@_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitationItemE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitationItemD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitationItem7ProcessEPS1_ to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder18VisitationDoneItemE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder18VisitationDoneItemD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder18VisitationDoneItem7ProcessEPS1_ to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS1_14default_deleteIS6_EEEEEEPKcv = private unnamed_addr constant [233 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem, std::__1::default_delete<blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem> >]\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"Blink does not use v8::TracedGlobal.\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"Blink roots\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"Blink cross-thread roots\00", align 1
@_ZTVN5blink12_GLOBAL__N_116EmbedderRootNodeE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::EmbedderRootNode"*)* @_ZN5blink12_GLOBAL__N_116EmbedderRootNodeD0Ev to i8*), i8* bitcast (i8* (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNode4NameEv to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNode11SizeInBytesEv to i8*), i8* bitcast (%"class.v8::EmbedderGraph::Node"* (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNode11WrapperNodeEv to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::EmbedderRootNode"*)* @_ZN5blink12_GLOBAL__N_116EmbedderRootNode10IsRootNodeEv to i8*), i8* bitcast (i1 (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node14IsEmbedderNodeEv to i8*), i8* bitcast (i8* (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node10NamePrefixEv to i8*), i8* bitcast (i8* (%"class.v8::EmbedderGraph::Node"*)* @_ZN2v813EmbedderGraph4Node15GetNativeObjectEv to i8*), i8* bitcast (i8 (%"class.blink::(anonymous namespace)::EmbedderNode"*)* @_ZN5blink12_GLOBAL__N_112EmbedderNode15GetDetachednessEv to i8*)] }, align 8
@.str.22 = private unnamed_addr constant [24 x i8] c"!states_.Contains(node)\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"Pending activities\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.25 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20EmbedderGraphBuilder26BuildEmbedderGraphCallbackEPN2v87IsolateEPNS1_13EmbedderGraphEPv(%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.WTF::Deque.215", align 8
  %8 = alloca %"class.std::__1::unique_ptr.220", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.v8::Isolate"*, align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckOpResult", align 8
  %14 = alloca %"class.v8::Isolate"*, align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.blink::(anonymous namespace)::NodeBuilder", align 8
  %17 = alloca %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", align 8
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #17
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %3
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #17
  br label %24

24:                                               ; preds = %3, %22
  %25 = phi i8* [ %23, %22 ], [ %20, %3 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  tail call void @_ZN5blink11ThreadState13CompleteSweepEv(%"class.blink::ThreadState"* %27) #17
  %28 = bitcast %"class.blink::(anonymous namespace)::NodeBuilder"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %16, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %16, i64 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.blink::(anonymous namespace)::NodeBuilder"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  store %"class.v8::EmbedderGraph"* %1, %"class.v8::EmbedderGraph"** %29, align 8
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %16, i64 0, i32 1
  %33 = bitcast %"class.WTF::HashMap"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false) #17
  %34 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %34) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 144, i1 false)
  %35 = bitcast %"class.v8::Isolate"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  store %"class.v8::Isolate"* %0, %"class.v8::Isolate"** %10, align 8
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #17
  %39 = icmp eq i8* %38, null
  %40 = ptrtoint %"class.v8::Isolate"* %0 to i64
  br i1 %39, label %41, label %43, !prof !2

41:                                               ; preds = %24
  %42 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %42) #17
  br label %43

43:                                               ; preds = %41, %24
  %44 = phi i8* [ %42, %41 ], [ %38, %24 ]
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 0, i32 1
  %49 = bitcast %"class.blink::ThreadState"** %48 to i64*
  store i64 %46, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*], [6 x i8*] }, { [17 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %51 = bitcast i32 (...)*** %50 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*], [6 x i8*] }, { [17 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*], [6 x i8*] }, { [17 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %51, align 8
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 3
  %53 = bitcast %"class.v8::Isolate"** %52 to i64*
  store i64 %40, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 4
  store %"class.v8::EmbedderGraph"* %1, %"class.v8::EmbedderGraph"** %54, align 8
  %55 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 5
  store %"class.blink::(anonymous namespace)::NodeBuilder"* %16, %"class.blink::(anonymous namespace)::NodeBuilder"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 9
  %58 = icmp eq %"class.v8::Isolate"* %0, null
  %59 = bitcast i8** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 36, i1 false) #17
  %60 = bitcast %"class.WTF::Deque.204"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 48, i1 false) #17
  br i1 %58, label %61, label %64

61:                                               ; preds = %43
  %62 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 435, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)) #17
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #17
  br label %64

64:                                               ; preds = %61, %43
  %65 = icmp eq %"class.v8::EmbedderGraph"* %1, null
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 436, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #17
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #17
  br label %69

69:                                               ; preds = %66, %64
  %70 = bitcast %"class.logging::CheckOpResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #17
  %71 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %13, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %71, align 8
  %72 = bitcast %"class.v8::Isolate"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #17
  %73 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %74 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %73, i64 0, i32 1
  %75 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %74) #17
  %76 = icmp eq i8* %75, null
  br i1 %76, label %77, label %79, !prof !2

77:                                               ; preds = %69
  %78 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %74, i8* %78) #17
  br label %79

79:                                               ; preds = %77, %69
  %80 = phi i8* [ %78, %77 ], [ %75, %69 ]
  %81 = bitcast i8* %80 to %"class.blink::ThreadState"**
  %82 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %82, i64 0, i32 20
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %83, align 8
  store %"class.v8::Isolate"* %84, %"class.v8::Isolate"** %14, align 8
  %85 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #17
  %86 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %87 = icmp eq %"class.v8::Isolate"* %86, %84
  br i1 %87, label %88, label %89

88:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #17
  store i8* null, i8** %71, align 8
  br label %98

89:                                               ; preds = %79
  %90 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %35, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN2v87IsolateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  %91 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %72, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN2v87IsolateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %9, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i8* %90, i8* %91) #17
  %92 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #17
  store i8* %93, i8** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #17
  %94 = icmp eq i8* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 437, %"class.logging::CheckOpResult"* nonnull %13) #17
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #17
  br label %98

98:                                               ; preds = %95, %88
  %99 = phi i8* [ %72, %88 ], [ %96, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #17
  br label %100

100:                                              ; preds = %98, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %101 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %102 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 1
  call void @_ZN2v87Isolate24VisitHandlesWithClassIdsEPNS_23PersistentHandleVisitorE(%"class.v8::Isolate"* %101, %"class.v8::PersistentHandleVisitor"* %102) #17
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #17
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !2

107:                                              ; preds = %100
  %108 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #17
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i8* [ %108, %107 ], [ %105, %100 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 22, i32 0, i32 0, i32 0
  %114 = load %"class.blink::UnifiedHeapController"*, %"class.blink::UnifiedHeapController"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::UnifiedHeapController", %"class.blink::UnifiedHeapController"* %114, i64 0, i32 0
  %116 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 2
  call void @_ZN2v818EmbedderHeapTracer26IterateTracedGlobalHandlesEPNS0_25TracedGlobalHandleVisitorE(%"class.v8::EmbedderHeapTracer"* %115, %"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"* %116) #17
  %117 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %54, align 8
  %118 = call i8* @_Znwm(i64 48) #18
  %119 = bitcast i8* %118 to i32 (...)***
  %120 = getelementptr inbounds i8, i8* %118, i64 8
  %121 = bitcast i8* %120 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), i8** %121, align 8
  %122 = getelementptr inbounds i8, i8* %118, i64 16
  %123 = bitcast i8* %122 to %"class.v8::EmbedderGraph::Node"**
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %123, align 8
  %124 = getelementptr inbounds i8, i8* %118, i64 24
  store i8 0, i8* %124, align 8
  %125 = getelementptr inbounds i8, i8* %118, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12_GLOBAL__N_116EmbedderRootNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %126 = bitcast i8* %118 to %"class.v8::EmbedderGraph::Node"*
  %127 = bitcast %"class.v8::EmbedderGraph"* %117 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)***
  %128 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*** %127, align 8
  %129 = getelementptr inbounds %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)** %128, i64 1
  %130 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)** %129, align 8
  %131 = call %"class.v8::EmbedderGraph::Node"* %130(%"class.v8::EmbedderGraph"* %117, %"class.v8::EmbedderGraph::Node"* nonnull %126) #17
  %132 = bitcast %"class.v8::EmbedderGraph::Node"* %131 to %"class.blink::(anonymous namespace)::EmbedderNode"*
  call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder15EnsureRootStateEPNS0_12EmbedderNodeE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nonnull %17, %"class.blink::(anonymous namespace)::EmbedderNode"* %132) #17
  %133 = bitcast i8** %56 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i8** %56 to %"class.v8::EmbedderGraph::Node"**
  store %"class.v8::EmbedderGraph::Node"* %131, %"class.v8::EmbedderGraph::Node"** %135, align 8
  %136 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %137 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %136, i64 0, i32 1
  %138 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %137) #17
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %142, !prof !2

140:                                              ; preds = %109
  %141 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %137, i8* %141) #17
  br label %142

142:                                              ; preds = %140, %109
  %143 = phi i8* [ %141, %140 ], [ %138, %109 ]
  %144 = bitcast i8* %143 to %"class.blink::ThreadState"**
  %145 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 0
  %149 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %147, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase14TraceNodesImplEPNS_7VisitorEPFbS2_PNS_14PersistentNodeEE(%"class.blink::PersistentRegionBase"* %149, %"class.blink::Visitor"* nonnull %148, i1 (%"class.blink::Visitor"*, %"class.blink::PersistentNode"*)* nonnull @_ZN5blink16PersistentRegion25ShouldTracePersistentNodeEPNS_7VisitorEPNS_14PersistentNodeE) #17
  store i64 %134, i64* %133, align 8
  %150 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %54, align 8
  %151 = call i8* @_Znwm(i64 48) #18
  %152 = bitcast i8* %151 to i32 (...)***
  %153 = getelementptr inbounds i8, i8* %151, i64 8
  %154 = bitcast i8* %153 to i8**
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0), i8** %154, align 8
  %155 = getelementptr inbounds i8, i8* %151, i64 16
  %156 = bitcast i8* %155 to %"class.v8::EmbedderGraph::Node"**
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %156, align 8
  %157 = getelementptr inbounds i8, i8* %151, i64 24
  store i8 0, i8* %157, align 8
  %158 = getelementptr inbounds i8, i8* %151, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12_GLOBAL__N_116EmbedderRootNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %152, align 8
  %159 = bitcast i8* %151 to %"class.v8::EmbedderGraph::Node"*
  %160 = bitcast %"class.v8::EmbedderGraph"* %150 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)***
  %161 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*** %160, align 8
  %162 = getelementptr inbounds %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)** %161, i64 1
  %163 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)** %162, align 8
  %164 = call %"class.v8::EmbedderGraph::Node"* %163(%"class.v8::EmbedderGraph"* %150, %"class.v8::EmbedderGraph::Node"* nonnull %159) #17
  %165 = bitcast %"class.v8::EmbedderGraph::Node"* %164 to %"class.blink::(anonymous namespace)::EmbedderNode"*
  call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder15EnsureRootStateEPNS0_12EmbedderNodeE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nonnull %17, %"class.blink::(anonymous namespace)::EmbedderNode"* %165) #17
  %166 = load i64, i64* %133, align 8
  store %"class.v8::EmbedderGraph::Node"* %164, %"class.v8::EmbedderGraph::Node"** %135, align 8
  %167 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #17
  %168 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %167, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %168) #17
  %169 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #17
  %170 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %169, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase14TraceNodesImplEPNS_7VisitorEPFbS2_PNS_14PersistentNodeEE(%"class.blink::PersistentRegionBase"* %170, %"class.blink::Visitor"* nonnull %148, i1 (%"class.blink::Visitor"*, %"class.blink::PersistentNode"*)* nonnull @_ZN5blink27CrossThreadPersistentRegion25ShouldTracePersistentNodeEPNS_7VisitorEPNS_14PersistentNodeE) #17
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %168) #17
  store i64 %166, i64* %133, align 8
  %171 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %54, align 8
  %172 = call i8* @_Znwm(i64 48) #18
  %173 = bitcast i8* %172 to i32 (...)***
  %174 = getelementptr inbounds i8, i8* %172, i64 8
  %175 = bitcast i8* %174 to i8**
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), i8** %175, align 8
  %176 = getelementptr inbounds i8, i8* %172, i64 16
  %177 = bitcast i8* %176 to %"class.v8::EmbedderGraph::Node"**
  store %"class.v8::EmbedderGraph::Node"* null, %"class.v8::EmbedderGraph::Node"** %177, align 8
  %178 = getelementptr inbounds i8, i8* %172, i64 24
  store i8 0, i8* %178, align 8
  %179 = getelementptr inbounds i8, i8* %172, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12_GLOBAL__N_116EmbedderRootNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %180 = bitcast i8* %172 to %"class.v8::EmbedderGraph::Node"*
  %181 = bitcast %"class.v8::EmbedderGraph"* %171 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)***
  %182 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*** %181, align 8
  %183 = getelementptr inbounds %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)** %182, i64 1
  %184 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)** %183, align 8
  %185 = call %"class.v8::EmbedderGraph::Node"* %184(%"class.v8::EmbedderGraph"* %171, %"class.v8::EmbedderGraph::Node"* nonnull %180) #17
  %186 = bitcast %"class.v8::EmbedderGraph::Node"* %185 to %"class.blink::(anonymous namespace)::EmbedderNode"*
  call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder15EnsureRootStateEPNS0_12EmbedderNodeE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nonnull %17, %"class.blink::(anonymous namespace)::EmbedderNode"* %186) #17
  %187 = load i64, i64* %133, align 8
  store %"class.v8::EmbedderGraph::Node"* %185, %"class.v8::EmbedderGraph::Node"** %135, align 8
  %188 = load i64, i64* %53, align 8
  %189 = add i64 %188, 8
  %190 = inttoptr i64 %189 to %"class.blink::V8PerIsolateData"**
  %191 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %191, i64 0, i32 14, i32 0, i32 0
  %193 = load %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::ActiveScriptWrappableManager"** %192, align 8
  %194 = icmp eq %"class.blink::ActiveScriptWrappableManager"* %193, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %142
  call void @_ZN5blink28ActiveScriptWrappableManager29IterateActiveScriptWrappablesEPNS_7VisitorE(%"class.blink::ActiveScriptWrappableManager"* nonnull %193, %"class.blink::Visitor"* nonnull %148) #17
  br label %196

196:                                              ; preds = %195, %142
  store i64 %187, i64* %133, align 8
  %197 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 9, i32 1
  %198 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 9, i32 2
  %199 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %200 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %201 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %202 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %203 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %204 = bitcast %"class.logging::CheckError"* %6 to i8*
  %205 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %206 = bitcast %"class.WTF::Deque.215"* %7 to i8*
  %207 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %208 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %209 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %7, i64 0, i32 1
  %210 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %7, i64 0, i32 2
  %211 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 10
  %212 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 10, i32 1
  %213 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 10, i32 2
  %214 = bitcast %"class.std::__1::unique_ptr.220"* %8 to i8*
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %8, i64 0, i32 0, i32 0, i32 0
  %216 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %211, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = bitcast %"class.std::__1::unique_ptr.220"* %8 to i64*
  %218 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %219 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 8, i32 0, i32 0
  %220 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 8, i32 0, i32 1
  %221 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 7
  %222 = bitcast i8** %221 to i64*
  %223 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %17, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %224 = bitcast %"class.WTF::Deque.215"* %7 to i64*
  %225 = bitcast %"class.WTF::Deque.215"* %7 to %"class.WTF::ConditionalDestructor.216"*
  %226 = load i32, i32* %197, align 8
  %227 = load i32, i32* %198, align 4
  %228 = bitcast %"class.WTF::Deque.215"* %211 to i64*
  br label %229

229:                                              ; preds = %421, %196
  %230 = phi i32 [ %433, %421 ], [ %227, %196 ]
  %231 = phi i32 [ %432, %421 ], [ %226, %196 ]
  %232 = icmp eq i32 %231, %230
  br i1 %232, label %291, label %233

233:                                              ; preds = %229, %287
  %234 = phi i32 [ %289, %287 ], [ %230, %229 ]
  %235 = icmp eq i32 %234, 0
  %236 = load i32, i32* %199, align 8
  %237 = select i1 %235, i32 %236, i32 %234
  %238 = add i32 %237, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %201, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #17
  %239 = icmp eq i32 %238, %234
  br i1 %239, label %241, label %240

240:                                              ; preds = %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #17
  store i8* null, i8** %201, align 8
  br label %248

241:                                              ; preds = %233
  %242 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %234) #17
  %243 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %234) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %242, i8* %243) #17
  %244 = load i8*, i8** %203, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #17
  store i8* %244, i8** %201, align 8
  %245 = icmp eq i8* %244, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %241
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.25, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %5) #17
  %247 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #17
  br label %248

248:                                              ; preds = %246, %241, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #17
  %249 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %205, align 8
  %250 = zext i32 %238 to i64
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %249, i64 %250, i32 0, i32 0, i32 0
  %252 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %251, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %251, align 8
  %253 = load i32, i32* %198, align 4
  %254 = icmp eq i32 %253, 0
  %255 = load i32, i32* %199, align 8
  %256 = select i1 %254, i32 %255, i32 %253
  %257 = add i32 %256, -1
  store i32 %257, i32* %198, align 4
  %258 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %205, align 8
  %259 = zext i32 %257 to i64
  %260 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %258, i64 %259
  %261 = zext i32 %256 to i64
  %262 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %258, i64 %261
  br label %263

263:                                              ; preds = %273, %248
  %264 = phi %"class.std::__1::unique_ptr.209"* [ %274, %273 ], [ %260, %248 ]
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %264, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %265, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %265, align 8
  %267 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %266, null
  br i1 %267, label %273, label %268

268:                                              ; preds = %263
  %269 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %266 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)***
  %270 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*** %269, align 8
  %271 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %270, i64 1
  %272 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %271, align 8
  call void %272(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nonnull %266) #17
  br label %273

273:                                              ; preds = %268, %263
  %274 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %264, i64 1
  %275 = icmp eq %"class.std::__1::unique_ptr.209"* %274, %262
  br i1 %275, label %276, label %263

276:                                              ; preds = %273
  %277 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %252 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)***
  %278 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)** %278, i64 2
  %280 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*)** %279, align 8
  call void %280(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %252, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nonnull %17) #17
  %281 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %252, null
  br i1 %281, label %287, label %282

282:                                              ; preds = %276
  %283 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %252 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)***
  %284 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %284, i64 1
  %286 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %285, align 8
  call void %286(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nonnull %252) #17
  br label %287

287:                                              ; preds = %282, %276
  %288 = load i32, i32* %197, align 8
  %289 = load i32, i32* %198, align 4
  %290 = icmp eq i32 %288, %289
  br i1 %290, label %291, label %233

291:                                              ; preds = %287, %229
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 0, i64 24, i1 false) #17
  %292 = load i32, i32* %212, align 8
  %293 = load i32, i32* %213, align 4
  %294 = icmp eq i32 %292, %293
  br i1 %294, label %421, label %295

295:                                              ; preds = %291, %412
  %296 = phi i32 [ %413, %412 ], [ %292, %291 ]
  %297 = phi i8 [ %408, %412 ], [ 0, %291 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #17
  %298 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %216, align 8
  %299 = zext i32 %296 to i64
  %300 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %298, i64 %299
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %300, i64 0, i32 0, i32 0, i32 0
  %302 = bitcast %"class.std::__1::unique_ptr.220"* %300 to i64*
  %303 = load i64, i64* %302, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %301, align 8
  store i64 %303, i64* %217, align 8
  %304 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %216, align 8
  %305 = load i32, i32* %212, align 8
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %304, i64 %306
  %308 = add i32 %305, 1
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %304, i64 %309
  br label %311

311:                                              ; preds = %318, %295
  %312 = phi %"class.std::__1::unique_ptr.220"* [ %319, %318 ], [ %307, %295 ]
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %312, i64 0, i32 0, i32 0, i32 0
  %314 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %313, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %313, align 8
  %315 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %314, null
  br i1 %315, label %318, label %316

316:                                              ; preds = %311
  %317 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %314 to i8*
  call void @_ZdlPv(i8* %317) #18
  br label %318

318:                                              ; preds = %316, %311
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %312, i64 1
  %320 = icmp eq %"class.std::__1::unique_ptr.220"* %319, %310
  br i1 %320, label %321, label %311

321:                                              ; preds = %318
  %322 = inttoptr i64 %303 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"*
  %323 = load i32, i32* %212, align 8
  %324 = load i32, i32* %218, align 8
  %325 = add i32 %324, -1
  %326 = icmp eq i32 %323, %325
  %327 = add i32 %323, 1
  %328 = select i1 %326, i32 0, i32 %327
  store i32 %328, i32* %212, align 8
  %329 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %322, i64 0, i32 1
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %406, label %332

332:                                              ; preds = %321
  %333 = ptrtoint i8* %330 to i64
  %334 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %219, align 8
  %335 = icmp eq %"struct.WTF::KeyValuePair.193"* %334, null
  br i1 %335, label %404, label %336

336:                                              ; preds = %332
  %337 = load i32, i32* %220, align 8
  %338 = add i32 %337, -1
  %339 = zext i32 %338 to i64
  %340 = shl i64 %333, 32
  %341 = xor i64 %340, -1
  %342 = add i64 %341, %333
  %343 = lshr i64 %342, 22
  %344 = xor i64 %343, %342
  %345 = shl i64 %344, 13
  %346 = xor i64 %345, -1
  %347 = add i64 %344, %346
  %348 = lshr i64 %347, 8
  %349 = xor i64 %348, %347
  %350 = mul i64 %349, 9
  %351 = lshr i64 %350, 15
  %352 = xor i64 %351, %350
  %353 = shl i64 %352, 27
  %354 = xor i64 %353, -1
  %355 = add i64 %352, %354
  %356 = lshr i64 %355, 31
  %357 = xor i64 %356, %355
  %358 = trunc i64 %357 to i32
  %359 = and i32 %338, %358
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %334, i64 %360
  %362 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %361, i64 0, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, %330
  br i1 %364, label %393, label %365

365:                                              ; preds = %336
  %366 = xor i32 %358, -1
  %367 = lshr i32 %358, 23
  %368 = add i32 %367, %366
  %369 = shl i32 %368, 12
  %370 = xor i32 %369, %368
  %371 = lshr i32 %370, 7
  %372 = xor i32 %371, %370
  %373 = shl i32 %372, 2
  %374 = xor i32 %373, %372
  %375 = lshr i32 %374, 20
  %376 = xor i32 %375, %374
  %377 = or i32 %376, 1
  %378 = zext i32 %377 to i64
  br label %379

379:                                              ; preds = %384, %365
  %380 = phi i8* [ %363, %365 ], [ %391, %384 ]
  %381 = phi i64 [ %360, %365 ], [ %388, %384 ]
  %382 = phi i64 [ 0, %365 ], [ %386, %384 ]
  %383 = icmp eq i8* %380, null
  br i1 %383, label %404, label %384

384:                                              ; preds = %379
  %385 = icmp eq i64 %382, 0
  %386 = select i1 %385, i64 %378, i64 %382
  %387 = add i64 %386, %381
  %388 = and i64 %387, %339
  %389 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %334, i64 %388
  %390 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %389, i64 0, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = icmp eq i8* %391, %330
  br i1 %392, label %393, label %379

393:                                              ; preds = %384, %336
  %394 = phi %"struct.WTF::KeyValuePair.193"* [ %361, %336 ], [ %389, %384 ]
  %395 = icmp eq %"struct.WTF::KeyValuePair.193"* %394, null
  br i1 %395, label %404, label %396

396:                                              ; preds = %393
  %397 = load i64, i64* %133, align 8
  store i8* %330, i8** %56, align 8
  %398 = inttoptr i64 %303 to i64*
  %399 = load i64, i64* %398, align 8
  store i64 %399, i64* %222, align 8
  %400 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %322, i64 0, i32 3
  %401 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %400, align 8
  %402 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %322, i64 0, i32 2
  %403 = load i8*, i8** %402, align 8
  call void %401(%"class.blink::Visitor"* nonnull %148, i8* %403) #17
  store i8* null, i8** %221, align 8
  store i64 %397, i64* %133, align 8
  br label %406

404:                                              ; preds = %379, %393, %332
  call fastcc void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE9push_backIS9_EEvOT_(%"class.WTF::Deque.215"* nonnull %7, %"class.std::__1::unique_ptr.220"* nonnull dereferenceable(8) %8) #17
  %405 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %215, align 8
  br label %406

406:                                              ; preds = %404, %396, %321
  %407 = phi %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* [ %322, %321 ], [ %322, %396 ], [ %405, %404 ]
  %408 = phi i8 [ 1, %321 ], [ 1, %396 ], [ %297, %404 ]
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %215, align 8
  %409 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %407, null
  br i1 %409, label %412, label %410

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %407 to i8*
  call void @_ZdlPv(i8* %411) #18
  br label %412

412:                                              ; preds = %410, %406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #17
  %413 = load i32, i32* %212, align 8
  %414 = load i32, i32* %213, align 4
  %415 = icmp eq i32 %413, %414
  br i1 %415, label %416, label %295

416:                                              ; preds = %412
  %417 = load i32, i32* %209, align 8
  %418 = load i32, i32* %210, align 4
  %419 = load i32, i32* %207, align 8
  %420 = load i64, i64* %224, align 8
  br label %421

421:                                              ; preds = %416, %291
  %422 = phi i32 [ %292, %291 ], [ %413, %416 ]
  %423 = phi i64 [ 0, %291 ], [ %420, %416 ]
  %424 = phi i32 [ 0, %291 ], [ %419, %416 ]
  %425 = phi i32 [ 0, %291 ], [ %418, %416 ]
  %426 = phi i32 [ 0, %291 ], [ %417, %416 ]
  %427 = phi i8 [ 0, %291 ], [ %408, %416 ]
  %428 = icmp ugt i32 %426, %425
  %429 = select i1 %428, i32 %424, i32 %425
  %430 = load i64, i64* %228, align 8
  store atomic i64 %430, i64* %224 monotonic, align 8
  store atomic i64 %423, i64* %228 monotonic, align 8
  %431 = load i32, i32* %218, align 8
  store i32 %424, i32* %218, align 8
  store i32 %431, i32* %207, align 8
  store i32 %429, i32* %223, align 4
  store i32 %422, i32* %208, align 4
  store i32 %426, i32* %212, align 8
  store i32 %422, i32* %209, align 8
  store i32 %425, i32* %213, align 4
  store i32 %422, i32* %210, align 4
  call fastcc void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS2_14default_deleteIS7_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.216"* nonnull %225) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #17
  %432 = load i32, i32* %197, align 8
  %433 = load i32, i32* %198, align 4
  %434 = icmp ne i32 %432, %433
  %435 = and i8 %427, 1
  %436 = icmp ne i8 %435, 0
  %437 = or i1 %436, %434
  br i1 %437, label %229, label %438

438:                                              ; preds = %421
  call void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD2Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %34) #17
  %439 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %30, align 8
  %440 = icmp eq %"struct.WTF::KeyValuePair"* %439, null
  br i1 %440, label %443, label %441, !prof !3

441:                                              ; preds = %438
  %442 = bitcast %"struct.WTF::KeyValuePair"* %439 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %442) #17
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %30, align 8
  br label %443

443:                                              ; preds = %438, %441
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #17
  ret void
}

declare void @_ZN5blink11ThreadState13CompleteSweepEv(%"class.blink::ThreadState"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD2Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*], [6 x i8*] }, { [17 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*], [6 x i8*] }, { [17 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [5 x i8*], [6 x i8*] }, { [17 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %9, i64 %12
  br i1 %7, label %26, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.193"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.193"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.193"* %21, %13
  br i1 %22, label %26, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.193"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.193"* %24, %13
  br i1 %25, label %26, label %36

26:                                               ; preds = %20, %72, %82, %79, %1, %23
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 10
  %28 = bitcast %"class.WTF::Deque.215"* %27 to %"class.WTF::ConditionalDestructor.216"*
  tail call fastcc void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS2_14default_deleteIS7_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.216"* %28) #17
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 9
  %30 = bitcast %"class.WTF::Deque.204"* %29 to %"class.WTF::ConditionalDestructor.205"*
  tail call fastcc void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS2_14default_deleteIS7_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.205"* %30) #17
  %31 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %8, align 8
  %32 = icmp eq %"struct.WTF::KeyValuePair.193"* %31, null
  br i1 %32, label %35, label %33, !prof !3

33:                                               ; preds = %26
  %34 = bitcast %"struct.WTF::KeyValuePair.193"* %31 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #17
  store %"struct.WTF::KeyValuePair.193"* null, %"struct.WTF::KeyValuePair.193"** %8, align 8
  br label %35

35:                                               ; preds = %26, %33
  ret void

36:                                               ; preds = %23, %82
  %37 = phi %"struct.WTF::KeyValuePair.193"* [ %76, %82 ], [ %24, %23 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %37, i64 0, i32 1
  %39 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %38, align 8
  %40 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %39, null
  br i1 %40, label %72, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %39, i64 0, i32 3, i32 0, i32 0
  %43 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %42, align 8
  %44 = icmp eq %"struct.WTF::KeyValuePair.198"* %43, null
  br i1 %44, label %70, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %39, i64 0, i32 3, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %68, label %49

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %65, %49
  %52 = phi i64 [ 0, %49 ], [ %66, %65 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %43, i64 %52, i32 0
  %54 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %53, align 8
  %55 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %54, inttoptr (i64 -1 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*)
  br i1 %55, label %65, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %43, i64 %52, i32 1
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #18
  br label %65

65:                                               ; preds = %62, %56, %51
  %66 = add nuw nsw i64 %52, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %51

68:                                               ; preds = %65, %45
  %69 = bitcast %"struct.WTF::KeyValuePair.198"* %43 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #17
  br label %70

70:                                               ; preds = %41, %68
  %71 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %39 to i8*
  tail call void @free(i8* %71) #17
  br label %72

72:                                               ; preds = %70, %36
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %37, i64 1
  %74 = icmp eq %"struct.WTF::KeyValuePair.193"* %73, %13
  br i1 %74, label %26, label %75

75:                                               ; preds = %72, %79
  %76 = phi %"struct.WTF::KeyValuePair.193"* [ %80, %79 ], [ %73, %72 ]
  %77 = bitcast %"struct.WTF::KeyValuePair.193"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  switch i64 %78, label %82 [
    i64 -1, label %79
    i64 0, label %79
  ]

79:                                               ; preds = %75, %75
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %76, i64 1
  %81 = icmp eq %"struct.WTF::KeyValuePair.193"* %80, %13
  br i1 %81, label %26, label %75

82:                                               ; preds = %75
  %83 = icmp eq %"struct.WTF::KeyValuePair.193"* %76, %13
  br i1 %83, label %26, label %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD0Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD2Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0) #17
  %2 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0 to i8*
  tail call void @free(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_(%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Visitor12IsConcurrentEv(%"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm(%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5VisitEPKvNS_15TraceDescriptorE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, i8* nocapture readnone, i8*, void (%"class.blink::Visitor"*, i8*)* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.std::__1::basic_stringstream", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.logging::CheckOpResult", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.logging::CheckOpResult", align 8
  %16 = alloca %"class.logging::CheckError", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca i8*, align 8
  %19 = alloca %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, align 8
  %20 = alloca %"class.std::__1::unique_ptr.209", align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = lshr i16 %23, 2
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %25, i64 0, i32 0
  %27 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %26, align 8
  %28 = zext i16 %24 to i64
  %29 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %27, i64 %28
  %30 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %29, align 8
  %31 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %30, i64 0, i32 2
  %32 = load { i8*, i8 } (i8*)*, { i8*, i8 } (i8*)** %31, align 8
  %33 = tail call { i8*, i8 } %32(i8* %2) #17
  %34 = extractvalue { i8*, i8 } %33, 0
  %35 = extractvalue { i8*, i8 } %33, 1
  %36 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 6
  %37 = load i8*, i8** %36, align 8
  %38 = tail call fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder15GetStateNotNullEPKv(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i8* %37)
  %39 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  store i8* %2, i8** %18, align 8
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8
  %41 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %40, i64 0, i32 0, i32 0
  %42 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %41, align 8
  %43 = icmp eq %"struct.WTF::KeyValuePair.193"* %42, null
  %44 = ptrtoint i8* %2 to i64
  br i1 %43, label %106, label %45

45:                                               ; preds = %4
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, -1
  %49 = zext i32 %48 to i64
  %50 = shl i64 %44, 32
  %51 = xor i64 %50, -1
  %52 = add i64 %44, %51
  %53 = lshr i64 %52, 22
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 13
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 8
  %59 = xor i64 %58, %57
  %60 = mul i64 %59, 9
  %61 = lshr i64 %60, 15
  %62 = xor i64 %61, %60
  %63 = shl i64 %62, 27
  %64 = xor i64 %63, -1
  %65 = add i64 %62, %64
  %66 = lshr i64 %65, 31
  %67 = xor i64 %66, %65
  %68 = trunc i64 %67 to i32
  %69 = and i32 %48, %68
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %42, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %71, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, %2
  br i1 %74, label %103, label %75

75:                                               ; preds = %45
  %76 = xor i32 %68, -1
  %77 = lshr i32 %68, 23
  %78 = add i32 %77, %76
  %79 = shl i32 %78, 12
  %80 = xor i32 %79, %78
  %81 = lshr i32 %80, 7
  %82 = xor i32 %81, %80
  %83 = shl i32 %82, 2
  %84 = xor i32 %83, %82
  %85 = lshr i32 %84, 20
  %86 = xor i32 %85, %84
  %87 = or i32 %86, 1
  %88 = zext i32 %87 to i64
  br label %89

89:                                               ; preds = %94, %75
  %90 = phi i8* [ %73, %75 ], [ %101, %94 ]
  %91 = phi i64 [ %70, %75 ], [ %98, %94 ]
  %92 = phi i64 [ 0, %75 ], [ %96, %94 ]
  %93 = icmp eq i8* %90, null
  br i1 %93, label %106, label %94

94:                                               ; preds = %89
  %95 = icmp eq i64 %92, 0
  %96 = select i1 %95, i64 %88, i64 %92
  %97 = add i64 %96, %91
  %98 = and i64 %97, %49
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %42, i64 %98
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %99, i64 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = icmp eq i8* %101, %2
  br i1 %102, label %103, label %89

103:                                              ; preds = %94, %45
  %104 = phi %"struct.WTF::KeyValuePair.193"* [ %71, %45 ], [ %99, %94 ]
  %105 = icmp eq %"struct.WTF::KeyValuePair.193"* %104, null
  br i1 %105, label %106, label %118

106:                                              ; preds = %89, %103, %4
  %107 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #17
  %108 = tail call noalias i8* @malloc(i64 56) #17
  %109 = bitcast i8* %108 to %"class.blink::(anonymous namespace)::EmbedderNode"**
  store %"class.blink::(anonymous namespace)::EmbedderNode"* null, %"class.blink::(anonymous namespace)::EmbedderNode"** %109, align 8
  %110 = getelementptr inbounds i8, i8* %108, i64 8
  %111 = bitcast i8* %110 to i8**
  store i8* %2, i8** %111, align 8
  %112 = getelementptr inbounds i8, i8* %108, i64 16
  %113 = bitcast i8* %112 to i8**
  store i8* %34, i8** %113, align 8
  %114 = getelementptr inbounds i8, i8* %108, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 20, i1 false) #17
  %115 = getelementptr inbounds i8, i8* %108, i64 48
  store i8 0, i8* %115, align 8
  %116 = getelementptr inbounds i8, i8* %108, i64 49
  store i8 0, i8* %116, align 1
  %117 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %19 to i8**
  store i8* %108, i8** %117, align 8
  call fastcc void @_ZN3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE6insertIRS2_S7_EENS_18HashTableAddResultINS_9HashTableIS2_NS_12KeyValuePairIS2_S7_EENS_24KeyValuePairKeyExtractorES9_NS_18HashMapValueTraitsISB_SC_EESB_SD_EESK_EEOT_OT0_(%"class.WTF::HashMap.189"* %40, i8** nonnull dereferenceable(8) %18, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** nonnull dereferenceable(8) %19) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #17
  br label %118

118:                                              ; preds = %103, %106
  %119 = call fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZNK3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS2_(%"class.WTF::HashMap.189"* %40, i8** nonnull dereferenceable(8) %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %120 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 7
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %378, label %123

123:                                              ; preds = %118
  %124 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124)
  %125 = getelementptr inbounds i8, i8* %121, i64 -4
  %126 = bitcast i8* %125 to i16*
  %127 = load i16, i16* %126, align 2
  %128 = lshr i16 %127, 2
  %129 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %130 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %129, i64 0, i32 0
  %131 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %130, align 8
  %132 = zext i16 %128 to i64
  %133 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %131, i64 %132
  %134 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %133, align 8
  %135 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %134, i64 0, i32 2
  %136 = load { i8*, i8 } (i8*)*, { i8*, i8 } (i8*)** %135, align 8
  %137 = tail call { i8*, i8 } %136(i8* nonnull %121) #17
  %138 = extractvalue { i8*, i8 } %137, 1
  %139 = bitcast %"class.std::__1::basic_stringstream"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %139) #17
  %140 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 0, i32 1
  %141 = bitcast i64* %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 272, i1 false) #17
  %142 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 2, i32 0, i32 0
  %143 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 1
  %146 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %145, i64 0, i32 0
  %147 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %148 = bitcast %"class.std::__1::basic_stringstream"* %11 to i64*
  store i64 %147, i64* %148, align 8
  %149 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %150 = bitcast %"class.std::__1::basic_stringstream"* %11 to i8**
  %151 = inttoptr i64 %147 to i8*
  %152 = getelementptr i8, i8* %151, i64 -24
  %153 = bitcast i8* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds i8, i8* %139, i64 %154
  %156 = bitcast i8* %155 to i64*
  store i64 %149, i64* %156, align 8
  store i64 0, i64* %140, align 8
  %157 = load i8*, i8** %150, align 8
  %158 = getelementptr i8, i8* %157, i64 -24
  %159 = bitcast i8* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds i8, i8* %139, i64 %160
  %162 = bitcast i8* %161 to %"class.std::__1::ios_base"*
  %163 = bitcast %"class.std::__1::basic_stringbuf"* %145 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %162, i8* %163) #17
  %164 = getelementptr inbounds i8, i8* %161, i64 136
  %165 = bitcast i8* %164 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %165, align 8
  %166 = getelementptr inbounds i8, i8* %161, i64 144
  %167 = bitcast i8* %166 to i32*
  store i32 -1, i32* %167, align 8
  %168 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 1
  %169 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %170 = bitcast %"class.std::__1::basic_ostream.base"* %168 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %172 = inttoptr i64 %169 to i8*
  %173 = getelementptr i8, i8* %172, i64 -24
  %174 = bitcast i8* %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.std::__1::basic_ostream.base"* %168 to i8*
  %177 = getelementptr inbounds i8, i8* %176, i64 %175
  %178 = bitcast i8* %177 to i64*
  store i64 %171, i64* %178, align 8
  %179 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %179, i64* %148, align 8
  %180 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %181 = inttoptr i64 %179 to i8*
  %182 = getelementptr i8, i8* %181, i64 -24
  %183 = bitcast i8* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds i8, i8* %139, i64 %184
  %186 = bitcast i8* %185 to i64*
  store i64 %180, i64* %186, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %143, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %142, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %144, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %146) #17
  %187 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %145, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 1, i32 1
  %189 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 1, i32 3
  %190 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 32, i1 false) #17
  store i32 24, i32* %189, align 8
  %191 = bitcast %"class.std::__1::basic_ostream.base"* %168 to %"class.std::__1::basic_ostream"*
  %192 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %191, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0), i64 44) #17
  %193 = and i8 %138, 1
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %347

195:                                              ; preds = %123
  %196 = extractvalue { i8*, i8 } %137, 0
  %197 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #17
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 24, i1 false) #17
  %201 = call i64 @strlen(i8* %196) #17
  %202 = icmp ugt i64 %201, -17
  br i1 %202, label %203, label %205

203:                                              ; preds = %195
  %204 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %204) #19
  unreachable

205:                                              ; preds = %195
  %206 = icmp ult i64 %201, 23
  br i1 %206, label %213, label %207

207:                                              ; preds = %205
  %208 = add nuw i64 %201, 16
  %209 = and i64 %208, -16
  %210 = call i8* @_Znwm(i64 %209) #18
  store i8* %210, i8** %198, align 8
  %211 = or i64 %209, -9223372036854775808
  store i64 %211, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  %212 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %218

213:                                              ; preds = %205
  %214 = trunc i64 %201 to i8
  %215 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  store i8 %214, i8* %216, align 1
  %217 = icmp eq i64 %201, 0
  br i1 %217, label %221, label %218

218:                                              ; preds = %213, %207
  %219 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %215, %213 ], [ %212, %207 ]
  %220 = phi i8* [ %197, %213 ], [ %210, %207 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %220, i8* align 1 %196, i64 %201, i1 false) #17
  br label %221

221:                                              ; preds = %218, %213
  %222 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %215, %213 ], [ %219, %218 ]
  %223 = phi i8* [ %197, %213 ], [ %220, %218 ]
  %224 = getelementptr inbounds i8, i8* %223, i64 %201
  store i8 0, i8* %224, align 1
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %222, i64 0, i32 1, i32 0
  %226 = load i8, i8* %225, align 1
  %227 = icmp slt i8 %226, 0
  %228 = load i8*, i8** %198, align 8
  %229 = select i1 %227, i8* %228, i8* %197
  %230 = load i64, i64* %199, align 8
  %231 = zext i8 %226 to i64
  %232 = select i1 %227, i64 %230, i64 %231
  %233 = getelementptr inbounds i8, i8* %229, i64 %232
  %234 = ptrtoint i8* %233 to i64
  %235 = ptrtoint i8* %229 to i64
  %236 = icmp slt i64 %232, 17
  br i1 %236, label %255, label %237

237:                                              ; preds = %221, %250
  %238 = phi i64 [ %253, %250 ], [ %232, %221 ]
  %239 = phi i8* [ %251, %250 ], [ %229, %221 ]
  %240 = add nsw i64 %238, -16
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %255, label %242

242:                                              ; preds = %237
  %243 = call i8* @memchr(i8* %239, i32 87, i64 %240) #17
  %244 = icmp eq i8* %243, null
  br i1 %244, label %255, label %245

245:                                              ; preds = %242
  %246 = call i32 @bcmp(i8* nonnull %243, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i64 17) #17
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %245
  %249 = ptrtoint i8* %243 to i64
  br label %255

250:                                              ; preds = %245
  %251 = getelementptr inbounds i8, i8* %243, i64 1
  %252 = ptrtoint i8* %251 to i64
  %253 = sub i64 %234, %252
  %254 = icmp slt i64 %253, 17
  br i1 %254, label %255, label %237

255:                                              ; preds = %250, %242, %237, %248, %221
  %256 = phi i64 [ %234, %221 ], [ %249, %248 ], [ %234, %237 ], [ %234, %242 ], [ %234, %250 ]
  %257 = phi i8* [ %233, %221 ], [ %243, %248 ], [ %233, %237 ], [ %233, %242 ], [ %233, %250 ]
  %258 = icmp eq i8* %257, %233
  %259 = sub i64 %256, %235
  %260 = select i1 %258, i64 -1, i64 %259
  %261 = bitcast %"class.logging::CheckOpResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #17
  %262 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %13, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %262, align 8
  %263 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #17
  %264 = icmp eq i64 %260, -1
  br i1 %264, label %266, label %265

265:                                              ; preds = %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #17
  store i8* null, i8** %262, align 8
  br label %275

266:                                              ; preds = %255
  %267 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 -1) #17
  %268 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 -1) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i8* %267, i8* %268) #17
  %269 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #17
  store i8* %270, i8** %262, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %266
  %273 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 546, %"class.logging::CheckOpResult"* nonnull %13) #17
  %274 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #17
  br label %275

275:                                              ; preds = %272, %266, %265
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #17
  %276 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %191, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i64 3) #17
  %277 = add i64 %260, 18
  %278 = bitcast %"class.logging::CheckOpResult"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #17
  %279 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %15, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %279, align 8
  %280 = add i64 %260, 17
  %281 = load i8, i8* %225, align 1
  %282 = icmp slt i8 %281, 0
  %283 = load i8*, i8** %198, align 8
  %284 = select i1 %282, i8* %283, i8* %197
  %285 = getelementptr inbounds i8, i8* %284, i64 %280
  %286 = load i8, i8* %285, align 1
  %287 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #17
  store i8 60, i8* %8, align 1
  store i8 %286, i8* %9, align 1
  %288 = icmp eq i8 %286, 60
  br i1 %288, label %289, label %291

289:                                              ; preds = %275
  %290 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* null, i8** %290, align 8
  br label %296

291:                                              ; preds = %275
  %292 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %8, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_) #17
  %293 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %9, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i8* %292, i8* %293) #17
  %294 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %295 = load i8*, i8** %294, align 8
  br label %296

296:                                              ; preds = %291, %289
  %297 = phi i8* [ %295, %291 ], [ null, %289 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #17
  store i8* %297, i8** %279, align 8
  %298 = icmp eq i8* %297, null
  br i1 %298, label %302, label %299

299:                                              ; preds = %296
  %300 = bitcast %"class.logging::CheckError"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %16, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 550, %"class.logging::CheckOpResult"* nonnull %15) #17
  %301 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %16) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #17
  br label %302

302:                                              ; preds = %299, %296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #17
  %303 = load i8, i8* %225, align 1
  %304 = icmp slt i8 %303, 0
  %305 = load i8*, i8** %198, align 8
  %306 = select i1 %304, i8* %305, i8* %197
  %307 = getelementptr inbounds i8, i8* %306, i64 %277
  %308 = load i8, i8* %307, align 1
  %309 = icmp eq i8 %308, 62
  br i1 %309, label %340, label %310

310:                                              ; preds = %302, %321
  %311 = phi i8* [ %333, %321 ], [ %305, %302 ]
  %312 = phi i1 [ %332, %321 ], [ %304, %302 ]
  %313 = phi i64 [ %328, %321 ], [ 0, %302 ]
  %314 = phi i64 [ %330, %321 ], [ %277, %302 ]
  br i1 %312, label %315, label %318

315:                                              ; preds = %310
  %316 = getelementptr inbounds i8, i8* %311, i64 %314
  %317 = load i8, i8* %316, align 1
  br label %321

318:                                              ; preds = %310
  %319 = getelementptr inbounds i8, i8* %197, i64 %314
  %320 = load i8, i8* %319, align 1
  br label %321

321:                                              ; preds = %318, %315
  %322 = phi i8 [ %320, %318 ], [ %317, %315 ]
  %323 = icmp eq i8 %322, 60
  %324 = zext i1 %323 to i64
  %325 = add i64 %313, %324
  %326 = icmp eq i8 %322, 62
  %327 = zext i1 %326 to i64
  %328 = sub i64 %325, %327
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #17
  store i8 %322, i8* %6, align 1
  %329 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %191, i8* nonnull %6, i64 1) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #17
  %330 = add i64 %314, 1
  %331 = load i8, i8* %225, align 1
  %332 = icmp slt i8 %331, 0
  %333 = load i8*, i8** %198, align 8
  %334 = select i1 %332, i8* %333, i8* %197
  %335 = getelementptr inbounds i8, i8* %334, i64 %330
  %336 = load i8, i8* %335, align 1
  %337 = icmp ne i8 %336, 62
  %338 = icmp ne i64 %328, 0
  %339 = or i1 %338, %337
  br i1 %339, label %310, label %340

340:                                              ; preds = %321, %302
  %341 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %191, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2) #17
  %342 = load i8, i8* %225, align 1
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %346

344:                                              ; preds = %340
  %345 = load i8*, i8** %198, align 8
  call void @_ZdlPv(i8* %345) #18
  br label %346

346:                                              ; preds = %344, %340
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #17
  br label %347

347:                                              ; preds = %346, %123
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %17, %"class.std::__1::basic_stringbuf"* %145) #17
  %348 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348) #17
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %5, align 8
  %349 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %38, i64 0, i32 3
  call fastcc void @_ZN3WTF7HashMapIPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS_7PtrHashIS4_EENS_10HashTraitsIS5_EENSF_ISC_EENS_18PartitionAllocatorEE6insertIRS5_SC_EENS_18HashTableAddResultINS_9HashTableIS5_NS_12KeyValuePairIS5_SC_EENS_24KeyValuePairKeyExtractorESE_NS_18HashMapValueTraitsISG_SH_EESG_SI_EESP_EEOT_OT0_(%"class.WTF::HashMap.194"* %349, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** nonnull dereferenceable(8) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348) #17
  %350 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %351 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %350, i64 0, i32 1, i32 0
  %352 = load i8, i8* %351, align 1
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %357

354:                                              ; preds = %347
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i8*, i8** %355, align 8
  call void @_ZdlPv(i8* %356) #18
  br label %357

357:                                              ; preds = %354, %347
  %358 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %358, i64* %148, align 8
  %359 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %360 = inttoptr i64 %358 to i8*
  %361 = getelementptr i8, i8* %360, i64 -24
  %362 = bitcast i8* %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = getelementptr inbounds i8, i8* %139, i64 %363
  %365 = bitcast i8* %364 to i64*
  store i64 %359, i64* %365, align 8
  %366 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %366, i64* %170, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %367 = bitcast %"class.std::__1::basic_string"* %188 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %368 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %367, i64 0, i32 1, i32 0
  %369 = load i8, i8* %368, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %357
  %372 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load i8*, i8** %372, align 8
  call void @_ZdlPv(i8* %373) #18
  br label %374

374:                                              ; preds = %357, %371
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %146) #17
  %375 = bitcast %"class.std::__1::basic_stringstream"* %11 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %375, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %376 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 2
  %377 = bitcast %"class.std::__1::basic_ios.base"* %376 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %377) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %139) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124)
  br label %378

378:                                              ; preds = %118, %374
  %379 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, i64 0, i32 5
  %380 = load i8, i8* %379, align 1, !range !4
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %387, label %382

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %38, i64 0, i32 0
  %384 = load %"class.blink::(anonymous namespace)::EmbedderNode"*, %"class.blink::(anonymous namespace)::EmbedderNode"** %383, align 8
  %385 = icmp eq %"class.blink::(anonymous namespace)::EmbedderNode"* %384, null
  br i1 %385, label %437, label %386

386:                                              ; preds = %382
  call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder7AddEdgeEPNS1_5StateES3_(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %38, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119)
  br label %437

387:                                              ; preds = %378
  %388 = and i8 %35, 1
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %390, label %402

390:                                              ; preds = %387
  %391 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, i64 0, i32 0
  %392 = load %"class.blink::(anonymous namespace)::EmbedderNode"*, %"class.blink::(anonymous namespace)::EmbedderNode"** %391, align 8
  %393 = icmp eq %"class.blink::(anonymous namespace)::EmbedderNode"* %392, null
  br i1 %393, label %394, label %402

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 5
  %396 = load %"class.blink::(anonymous namespace)::NodeBuilder"*, %"class.blink::(anonymous namespace)::NodeBuilder"** %395, align 8
  %397 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, i64 0, i32 1
  %398 = load i8*, i8** %397, align 8
  %399 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, i64 0, i32 2
  %400 = load i8*, i8** %399, align 8
  %401 = call fastcc %"class.blink::(anonymous namespace)::EmbedderNode"* @_ZN5blink12_GLOBAL__N_111NodeBuilder9GraphNodeEPKvPKcPN2v813EmbedderGraph4NodeENS8_12DetachednessE(%"class.blink::(anonymous namespace)::NodeBuilder"* %396, i8* %398, i8* %400, %"class.v8::EmbedderGraph::Node"* null, i8 zeroext 0) #17
  store %"class.blink::(anonymous namespace)::EmbedderNode"* %401, %"class.blink::(anonymous namespace)::EmbedderNode"** %391, align 8
  br label %402

402:                                              ; preds = %394, %390, %387
  %403 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, i64 0, i32 4
  %404 = load i8, i8* %403, align 8, !range !4
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %432

406:                                              ; preds = %402
  %407 = bitcast %"struct.blink::GCInfo"* %30 to i64*
  %408 = load i64, i64* %407, align 8
  store i8 1, i8* %403, align 8
  %409 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 9
  %410 = bitcast %"class.std::__1::unique_ptr.209"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %410) #17
  %411 = call noalias i8* @malloc(i64 40) #17
  %412 = bitcast i8* %411 to i32 (...)***
  %413 = getelementptr inbounds i8, i8* %411, i64 8
  %414 = bitcast i8* %413 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"**
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %38, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %414, align 8
  %415 = getelementptr inbounds i8, i8* %411, i64 16
  %416 = bitcast i8* %415 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"**
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %416, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitationItemE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %412, align 8
  %417 = getelementptr inbounds i8, i8* %411, i64 24
  %418 = bitcast i8* %417 to i8**
  store i8* %2, i8** %418, align 8
  %419 = getelementptr inbounds i8, i8* %411, i64 32
  %420 = bitcast i8* %419 to i64*
  store i64 %408, i64* %420, align 8
  %421 = ptrtoint i8* %411 to i64
  %422 = bitcast %"class.std::__1::unique_ptr.209"* %20 to i64*
  store i64 %421, i64* %422, align 8
  call fastcc void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE9push_backIS9_EEvOT_(%"class.WTF::Deque.204"* %409, %"class.std::__1::unique_ptr.209"* nonnull dereferenceable(8) %20) #17
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %20, i64 0, i32 0, i32 0, i32 0
  %424 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %423, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %423, align 8
  %425 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %424, null
  br i1 %425, label %431, label %426

426:                                              ; preds = %406
  %427 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %424 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)***
  %428 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*** %427, align 8
  %429 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %428, i64 1
  %430 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %429, align 8
  call void %430(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nonnull %424) #17
  br label %431

431:                                              ; preds = %406, %426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %410) #17
  br label %437

432:                                              ; preds = %402
  %433 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, i64 0, i32 0
  %434 = load %"class.blink::(anonymous namespace)::EmbedderNode"*, %"class.blink::(anonymous namespace)::EmbedderNode"** %433, align 8
  %435 = icmp eq %"class.blink::(anonymous namespace)::EmbedderNode"* %434, null
  br i1 %435, label %437, label %436

436:                                              ; preds = %432
  call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder7AddEdgeEPNS1_5StateES3_(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %38, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119)
  br label %437

437:                                              ; preds = %382, %432, %431, %436, %386
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E(%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture readonly, %"class.blink::TraceWrapperV8Reference"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::Local", align 8
  %4 = bitcast %"class.v8::Local"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %3, i64 0, i32 0
  store %"class.v8::Value"* inttoptr (i64 -6148914691236517206 to %"class.v8::Value"*), %"class.v8::Value"** %5, align 8
  %6 = bitcast %"class.blink::TraceWrapperV8Reference"* %1 to %"class.v8::Value"**
  %7 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store %"class.v8::Value"* null, %"class.v8::Value"** %5, align 8
  br label %50

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 3
  %12 = bitcast %"class.v8::Isolate"** %11 to %"class.v8::internal::Isolate"**
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = bitcast %"class.v8::Value"* %7 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %15) #17
  %17 = bitcast %"class.v8::Local"* %3 to i64**
  store i64* %16, i64** %17, align 8
  %18 = icmp eq i64* %16, null
  br i1 %18, label %50, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 6
  %21 = load i8*, i8** %20, align 8
  %22 = tail call fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder15GetStateNotNullEPKv(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i8* %21)
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 4
  %24 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %22, i64 0, i32 0
  %27 = load %"class.blink::(anonymous namespace)::EmbedderNode"*, %"class.blink::(anonymous namespace)::EmbedderNode"** %26, align 8
  %28 = icmp eq %"class.blink::(anonymous namespace)::EmbedderNode"* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %19
  %30 = load %"class.blink::(anonymous namespace)::NodeBuilder"*, %"class.blink::(anonymous namespace)::NodeBuilder"** %25, align 8
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %22, i64 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %22, i64 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = tail call fastcc %"class.blink::(anonymous namespace)::EmbedderNode"* @_ZN5blink12_GLOBAL__N_111NodeBuilder9GraphNodeEPKvPKcPN2v813EmbedderGraph4NodeENS8_12DetachednessE(%"class.blink::(anonymous namespace)::NodeBuilder"* %30, i8* %32, i8* %34, %"class.v8::EmbedderGraph::Node"* null, i8 zeroext 0) #17
  store %"class.blink::(anonymous namespace)::EmbedderNode"* %35, %"class.blink::(anonymous namespace)::EmbedderNode"** %26, align 8
  br label %36

36:                                               ; preds = %19, %29
  %37 = phi %"class.blink::(anonymous namespace)::EmbedderNode"* [ %27, %19 ], [ %35, %29 ]
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %37, i64 0, i32 0
  %39 = load %"class.blink::(anonymous namespace)::NodeBuilder"*, %"class.blink::(anonymous namespace)::NodeBuilder"** %25, align 8
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %39, i64 0, i32 0
  %41 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %40, align 8
  %42 = bitcast %"class.v8::EmbedderGraph"* %41 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)***
  %43 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)*** %42, align 8
  %44 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)** %43, align 8
  %45 = call %"class.v8::EmbedderGraph::Node"* %44(%"class.v8::EmbedderGraph"* %41, %"class.v8::Local"* nonnull dereferenceable(8) %3) #17
  %46 = bitcast %"class.v8::EmbedderGraph"* %24 to void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)***
  %47 = load void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)**, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)** %47, i64 2
  %49 = load void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)** %48, align 8
  call void %49(%"class.v8::EmbedderGraph"* %24, %"class.v8::EmbedderGraph::Node"* %38, %"class.v8::EmbedderGraph::Node"* %45, i8* null) #17
  br label %50

50:                                               ; preds = %9, %36, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, i8* nocapture readnone, i8*, void (%"class.blink::Visitor"*, i8*)* nocapture readnone, %"class.base::Location"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.base::Location", %"class.base::Location"* %4, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %114, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.base::Location", %"class.base::Location"* %4, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %114, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 6
  %19 = load i8*, i8** %18, align 8
  %20 = tail call fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder15GetStateNotNullEPKv(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i8* %19)
  %21 = getelementptr inbounds i8, i8* %2, i64 -8
  %22 = bitcast i8* %21 to %"class.blink::HeapObjectHeader"*
  %23 = tail call i8* @_ZNK5blink16HeapObjectHeader4NameEv(%"class.blink::HeapObjectHeader"* %22) #17
  %24 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  store i8* %2, i8** %7, align 8
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8
  %26 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %26, align 8
  %28 = icmp eq %"struct.WTF::KeyValuePair.193"* %27, null
  %29 = ptrtoint i8* %2 to i64
  br i1 %28, label %91, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, -1
  %34 = zext i32 %33 to i64
  %35 = shl i64 %29, 32
  %36 = xor i64 %35, -1
  %37 = add i64 %29, %36
  %38 = lshr i64 %37, 22
  %39 = xor i64 %38, %37
  %40 = shl i64 %39, 13
  %41 = xor i64 %40, -1
  %42 = add i64 %39, %41
  %43 = lshr i64 %42, 8
  %44 = xor i64 %43, %42
  %45 = mul i64 %44, 9
  %46 = lshr i64 %45, 15
  %47 = xor i64 %46, %45
  %48 = shl i64 %47, 27
  %49 = xor i64 %48, -1
  %50 = add i64 %47, %49
  %51 = lshr i64 %50, 31
  %52 = xor i64 %51, %50
  %53 = trunc i64 %52 to i32
  %54 = and i32 %33, %53
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %27, i64 %55
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %56, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, %2
  br i1 %59, label %88, label %60

60:                                               ; preds = %30
  %61 = xor i32 %53, -1
  %62 = lshr i32 %53, 23
  %63 = add i32 %62, %61
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %79, %60
  %75 = phi i8* [ %58, %60 ], [ %86, %79 ]
  %76 = phi i64 [ %55, %60 ], [ %83, %79 ]
  %77 = phi i64 [ 0, %60 ], [ %81, %79 ]
  %78 = icmp eq i8* %75, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %74
  %80 = icmp eq i64 %77, 0
  %81 = select i1 %80, i64 %73, i64 %77
  %82 = add i64 %81, %76
  %83 = and i64 %82, %34
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %27, i64 %83
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %84, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, %2
  br i1 %87, label %88, label %74

88:                                               ; preds = %79, %30
  %89 = phi %"struct.WTF::KeyValuePair.193"* [ %56, %30 ], [ %84, %79 ]
  %90 = icmp eq %"struct.WTF::KeyValuePair.193"* %89, null
  br i1 %90, label %91, label %103

91:                                               ; preds = %74, %88, %17
  %92 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #17
  %93 = tail call noalias i8* @malloc(i64 56) #17
  %94 = bitcast i8* %93 to %"class.blink::(anonymous namespace)::EmbedderNode"**
  store %"class.blink::(anonymous namespace)::EmbedderNode"* null, %"class.blink::(anonymous namespace)::EmbedderNode"** %94, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = bitcast i8* %95 to i8**
  store i8* %2, i8** %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to i8**
  store i8* %23, i8** %98, align 8
  %99 = getelementptr inbounds i8, i8* %93, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 20, i1 false) #17
  %100 = getelementptr inbounds i8, i8* %93, i64 48
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds i8, i8* %93, i64 49
  store i8 0, i8* %101, align 1
  %102 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %8 to i8**
  store i8* %93, i8** %102, align 8
  call fastcc void @_ZN3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE6insertIRS2_S7_EENS_18HashTableAddResultINS_9HashTableIS2_NS_12KeyValuePairIS2_S7_EENS_24KeyValuePairKeyExtractorES9_NS_18HashMapValueTraitsISB_SC_EESB_SD_EESK_EEOT_OT0_(%"class.WTF::HashMap.189"* %25, i8** nonnull dereferenceable(8) %7, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** nonnull dereferenceable(8) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #17
  br label %103

103:                                              ; preds = %88, %91
  %104 = call fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZNK3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS2_(%"class.WTF::HashMap.189"* %25, i8** nonnull dereferenceable(8) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @_ZNK4base8Location8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.base::Location"* %4) #17
  %105 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105)
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %104, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %6, align 8
  %106 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %20, i64 0, i32 3
  call fastcc void @_ZN3WTF7HashMapIPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS_7PtrHashIS4_EENS_10HashTraitsIS5_EENSF_ISC_EENS_18PartitionAllocatorEE6insertIRS5_SC_EENS_18HashTableAddResultINS_9HashTableIS5_NS_12KeyValuePairIS5_SC_EENS_24KeyValuePairKeyExtractorESE_NS_18HashMapValueTraitsISG_SH_EESG_SI_EESP_EEOT_OT0_(%"class.WTF::HashMap.194"* %106, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105)
  %107 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #18
  br label %114

114:                                              ; preds = %13, %5, %111, %103
  call void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5VisitEPKvNS_15TraceDescriptorE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i8* %1, i8* %2, void (%"class.blink::Visitor"*, i8*)* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitEphemeronEPKvNS_15TraceDescriptorE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.220", align 8
  %6 = ptrtoint i8* %2 to i64
  %7 = ptrtoint void (%"class.blink::Visitor"*, i8*)* %3 to i64
  %8 = ptrtoint i8* %1 to i64
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 10
  %10 = bitcast %"class.std::__1::unique_ptr.220"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 6
  %12 = tail call i8* @_Znwm(i64 32) #18
  %13 = bitcast i8** %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %12 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 %8, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %12, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %6, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 24
  %21 = bitcast i8* %20 to i64*
  store i64 %7, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.220"* %5 to i8**
  store i8* %12, i8** %23, align 8
  call fastcc void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE9push_backIS9_EEvOT_(%"class.WTF::Deque.215"* %9, %"class.std::__1::unique_ptr.220"* nonnull dereferenceable(8) %5)
  %24 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %22, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %22, align 8
  %25 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %4
  %27 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #18
  br label %28

28:                                               ; preds = %4, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder18VisitWeakContainerEPKvPKS3_NS_15TraceDescriptorES6_PFvRKNS_14LivenessBrokerES3_ES3_(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*, i8* readnone, i8** nocapture readnone, i8* nocapture readnone, void (%"class.blink::Visitor"*, i8*)* nocapture readnone, %"struct.blink::TraceDescriptor"* nocapture readonly byval(%"struct.blink::TraceDescriptor") align 8, void (%"class.blink::LivenessBroker"*, i8*)* nocapture readnone, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %5, i64 0, i32 1
  %10 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %9, align 8
  %11 = icmp ne void (%"class.blink::Visitor"*, i8*)* %10, null
  %12 = icmp ne i8* %1, null
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %5, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 6
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  store i8* %16, i8** %17, align 8
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 0
  tail call void %10(%"class.blink::Visitor"* %20, i8* %16) #17
  store i64 %19, i64* %18, align 8
  br label %21

21:                                               ; preds = %14, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor19RegisterMovableSlotEPKPKv(%"class.blink::Visitor"*, i8**) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder21VisitPersistentHandleEPN2v810PersistentINS2_5ValueENS2_27NonCopyablePersistentTraitsIS4_EEEEt(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, %"class.v8::Persistent"* nocapture readonly, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = add i16 %2, -1
  %5 = icmp ult i16 %4, 2
  br i1 %5, label %6, label %20

6:                                                ; preds = %3
  %7 = bitcast %"class.v8::Persistent"* %1 to %"class.v8::Object"**
  %8 = load %"class.v8::Object"*, %"class.v8::Object"** %7, align 8
  %9 = icmp eq %"class.v8::Object"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 3
  %12 = bitcast %"class.v8::Isolate"** %11 to %"class.v8::internal::Isolate"**
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = bitcast %"class.v8::Object"* %8 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %15) #17
  %17 = bitcast i64* %16 to %"class.v8::Object"*
  br label %18

18:                                               ; preds = %6, %10
  %19 = phi %"class.v8::Object"* [ %17, %10 ], [ null, %6 ]
  tail call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder29VisitPersistentHandleInternalEN2v85LocalINS2_6ObjectEEEt(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, %"class.v8::Object"* %19, i16 zeroext %2)
  br label %20

20:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder20VisitTracedReferenceERKN2v815TracedReferenceINS2_5ValueEEE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, %"class.v8::TracedReference"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::TracedReference", %"class.v8::TracedReference"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i64, i64* %4, i64 1
  %8 = bitcast i64* %7 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = add i16 %9, -1
  %11 = icmp ult i16 %10, 2
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 3
  %14 = bitcast %"class.v8::Isolate"** %13 to %"class.v8::internal::Isolate"**
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %16 = load i64, i64* %4, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #17
  %18 = bitcast i64* %17 to %"class.v8::Object"*
  tail call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder29VisitPersistentHandleInternalEN2v85LocalINS2_6ObjectEEEt(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, %"class.v8::Object"* %18, i16 zeroext %9)
  br label %19

19:                                               ; preds = %2, %6, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder23VisitTracedGlobalHandleERKN2v812TracedGlobalINS2_5ValueEEE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture readnone, %"class.v8::TracedGlobal"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 494, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #17
  %5 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  %6 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i64 36) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD1Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*
  tail call void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD2Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD0Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*
  tail call void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD2Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %3) #17
  %4 = bitcast i32* %2 to i8*
  tail call void @free(i8* %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilder21VisitPersistentHandleEPN2v810PersistentINS2_5ValueENS2_27NonCopyablePersistentTraitsIS4_EEEEt(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, %"class.v8::Persistent"* nocapture readonly, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i32* %4 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*
  %6 = add i16 %2, -1
  %7 = icmp ult i16 %6, 2
  br i1 %7, label %8, label %22

8:                                                ; preds = %3
  %9 = bitcast %"class.v8::Persistent"* %1 to %"class.v8::Object"**
  %10 = load %"class.v8::Object"*, %"class.v8::Object"** %9, align 8
  %11 = icmp eq %"class.v8::Object"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds i32, i32* %4, i64 8
  %14 = bitcast i32* %13 to %"class.v8::internal::Isolate"**
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %16 = bitcast %"class.v8::Object"* %10 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %17) #17
  %19 = bitcast i64* %18 to %"class.v8::Object"*
  br label %20

20:                                               ; preds = %12, %8
  %21 = phi %"class.v8::Object"* [ %19, %12 ], [ null, %8 ]
  tail call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder29VisitPersistentHandleInternalEN2v85LocalINS2_6ObjectEEEt(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %5, %"class.v8::Object"* %21, i16 zeroext %2) #17
  br label %22

22:                                               ; preds = %3, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn24_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD1Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 -1, i32 10
  %3 = bitcast %"class.WTF::Deque.215"* %2 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*
  tail call void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD2Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn24_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD0Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 -1, i32 10
  %3 = bitcast %"class.WTF::Deque.215"* %2 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*
  tail call void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilderD2Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %3) #17
  %4 = bitcast %"class.WTF::Deque.215"* %2 to i8*
  tail call void @free(i8* %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn24_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilder23VisitTracedGlobalHandleERKN2v812TracedGlobalINS2_5ValueEEE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture readnone, %"class.v8::TracedGlobal"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 494, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #17
  %5 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  %6 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i64 36) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn24_N5blink12_GLOBAL__N_122V8EmbedderGraphBuilder20VisitTracedReferenceERKN2v815TracedReferenceINS2_5ValueEEE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, %"class.v8::TracedReference"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 -1, i32 10
  %4 = bitcast %"class.WTF::Deque.215"* %3 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*
  %5 = getelementptr inbounds %"class.v8::TracedReference", %"class.v8::TracedReference"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %6, i64 1
  %10 = bitcast i64* %9 to i16*
  %11 = load i16, i16* %10, align 2
  %12 = add i16 %11, -1
  %13 = icmp ult i16 %12, 2
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %3, i64 1, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i32* %15 to %"class.v8::internal::Isolate"**
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i64, i64* %6, align 8
  %19 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %17, i64 %18) #17
  %20 = bitcast i64* %19 to %"class.v8::Object"*
  tail call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder29VisitPersistentHandleInternalEN2v85LocalINS2_6ObjectEEEt(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %4, %"class.v8::Object"* %20, i16 zeroext %11) #17
  br label %21

21:                                               ; preds = %2, %8, %14
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN2v87IsolateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #17
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder15GetStateNotNullEPKv(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.193"* %7, null
  %9 = ptrtoint i8* %1 to i64
  br i1 %8, label %71, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  %14 = zext i32 %13 to i64
  %15 = shl i64 %9, 32
  %16 = xor i64 %15, -1
  %17 = add i64 %9, %16
  %18 = lshr i64 %17, 22
  %19 = xor i64 %18, %17
  %20 = shl i64 %19, 13
  %21 = xor i64 %20, -1
  %22 = add i64 %19, %21
  %23 = lshr i64 %22, 8
  %24 = xor i64 %23, %22
  %25 = mul i64 %24, 9
  %26 = lshr i64 %25, 15
  %27 = xor i64 %26, %25
  %28 = shl i64 %27, 27
  %29 = xor i64 %28, -1
  %30 = add i64 %27, %29
  %31 = lshr i64 %30, 31
  %32 = xor i64 %31, %30
  %33 = trunc i64 %32 to i32
  %34 = and i32 %13, %33
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %7, i64 %35
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, %1
  br i1 %39, label %68, label %40

40:                                               ; preds = %10
  %41 = xor i32 %33, -1
  %42 = lshr i32 %33, 23
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %59, %40
  %55 = phi i8* [ %38, %40 ], [ %66, %59 ]
  %56 = phi i64 [ %35, %40 ], [ %63, %59 ]
  %57 = phi i64 [ 0, %40 ], [ %61, %59 ]
  %58 = icmp eq i8* %55, null
  br i1 %58, label %71, label %59

59:                                               ; preds = %54
  %60 = icmp eq i64 %57, 0
  %61 = select i1 %60, i64 %53, i64 %57
  %62 = add i64 %61, %56
  %63 = and i64 %62, %14
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %7, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %64, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, %1
  br i1 %67, label %68, label %54

68:                                               ; preds = %59, %10
  %69 = phi %"struct.WTF::KeyValuePair.193"* [ %36, %10 ], [ %64, %59 ]
  %70 = icmp eq %"struct.WTF::KeyValuePair.193"* %69, null
  br i1 %70, label %71, label %74

71:                                               ; preds = %54, %68, %2
  %72 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 372, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #17
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #17
  br label %74

74:                                               ; preds = %68, %71
  %75 = call fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZNK3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS2_(%"class.WTF::HashMap.189"* %5, i8** nonnull dereferenceable(8) %3)
  ret %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %75
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder7AddEdgeEPNS1_5StateES3_(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture readonly, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* nocapture, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.181", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %1, i64 0, i32 0
  %9 = load %"class.blink::(anonymous namespace)::EmbedderNode"*, %"class.blink::(anonymous namespace)::EmbedderNode"** %8, align 8
  %10 = icmp eq %"class.blink::(anonymous namespace)::EmbedderNode"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %3
  %12 = load %"class.blink::(anonymous namespace)::NodeBuilder"*, %"class.blink::(anonymous namespace)::NodeBuilder"** %7, align 8
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %1, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %1, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = tail call fastcc %"class.blink::(anonymous namespace)::EmbedderNode"* @_ZN5blink12_GLOBAL__N_111NodeBuilder9GraphNodeEPKvPKcPN2v813EmbedderGraph4NodeENS8_12DetachednessE(%"class.blink::(anonymous namespace)::NodeBuilder"* %12, i8* %14, i8* %16, %"class.v8::EmbedderGraph::Node"* null, i8 zeroext 0) #17
  store %"class.blink::(anonymous namespace)::EmbedderNode"* %17, %"class.blink::(anonymous namespace)::EmbedderNode"** %8, align 8
  br label %18

18:                                               ; preds = %3, %11
  %19 = phi %"class.blink::(anonymous namespace)::EmbedderNode"* [ %9, %3 ], [ %17, %11 ]
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %2, i64 0, i32 0
  %21 = load %"class.blink::(anonymous namespace)::EmbedderNode"*, %"class.blink::(anonymous namespace)::EmbedderNode"** %20, align 8
  %22 = icmp eq %"class.blink::(anonymous namespace)::EmbedderNode"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = load %"class.blink::(anonymous namespace)::NodeBuilder"*, %"class.blink::(anonymous namespace)::NodeBuilder"** %7, align 8
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %2, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %2, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = tail call fastcc %"class.blink::(anonymous namespace)::EmbedderNode"* @_ZN5blink12_GLOBAL__N_111NodeBuilder9GraphNodeEPKvPKcPN2v813EmbedderGraph4NodeENS8_12DetachednessE(%"class.blink::(anonymous namespace)::NodeBuilder"* %24, i8* %26, i8* %28, %"class.v8::EmbedderGraph::Node"* null, i8 zeroext 0) #17
  store %"class.blink::(anonymous namespace)::EmbedderNode"* %29, %"class.blink::(anonymous namespace)::EmbedderNode"** %20, align 8
  br label %30

30:                                               ; preds = %18, %23
  %31 = phi %"class.blink::(anonymous namespace)::EmbedderNode"* [ %21, %18 ], [ %29, %23 ]
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5State8EdgeNameEPS2_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %1, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %2)
  %33 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = icmp eq i8 %35, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %38, label %100, label %45

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %42, label %100, label %45

45:                                               ; preds = %37, %39
  %46 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5State8EdgeNameEPS2_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %1, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %2)
  %50 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i64, i64* %48, align 8
  %55 = zext i8 %52 to i64
  %56 = select i1 %53, i64 %54, i64 %55
  %57 = add i64 %56, 1
  %58 = call i8* @_Znam(i64 %57) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %58, i8 0, i64 %57, i1 false) #17
  %59 = load i8*, i8** %47, align 8
  %60 = select i1 %53, i8* %59, i8* %46
  %61 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %58, i1 false, i1 true, i1 false) #17
  %62 = call i8* @__strncpy_chk(i8* nonnull %58, i8* %60, i64 %56, i64 %61) #17
  %63 = getelementptr inbounds i8, i8* %58, i64 %56
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 4
  %65 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %19, i64 0, i32 0
  %67 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %31, i64 0, i32 0
  %68 = bitcast %"class.v8::EmbedderGraph"* %65 to void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)***
  %69 = load void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)**, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)** %69, i64 2
  %71 = load void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)** %70, align 8
  call void %71(%"class.v8::EmbedderGraph"* %65, %"class.v8::EmbedderGraph::Node"* %66, %"class.v8::EmbedderGraph::Node"* %67, i8* nonnull %58) #17
  %72 = bitcast %"class.std::__1::unique_ptr.181"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72)
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %58, i8** %73, align 8
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %19, i64 0, i32 4
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %19, i64 0, i32 4, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %19, i64 0, i32 4, i32 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %89, label %80, !prof !2

80:                                               ; preds = %45
  %81 = ptrtoint i8* %58 to i64
  %82 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %74, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.std::__1::unique_ptr.181"*, %"class.std::__1::unique_ptr.181"** %82, align 8
  %84 = zext i32 %76 to i64
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %83, i64 %84
  store i8* null, i8** %73, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.181"* %85 to i64*
  store i64 %81, i64* %86, align 8
  %87 = load i32, i32* %75, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %75, align 4
  br label %90

89:                                               ; preds = %45
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.178"* %74, %"class.std::__1::unique_ptr.181"* nonnull dereferenceable(8) %4) #17
  br label %90

90:                                               ; preds = %89, %80
  %91 = load i8*, i8** %73, align 8
  store i8* null, i8** %73, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  call void @_ZdaPv(i8* nonnull %91) #18
  br label %94

94:                                               ; preds = %93, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72)
  %95 = load i8, i8* %51, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %98) #18
  br label %99

99:                                               ; preds = %94, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #17
  br label %109

100:                                              ; preds = %37, %39
  %101 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 4
  %102 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %19, i64 0, i32 0
  %104 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %31, i64 0, i32 0
  %105 = bitcast %"class.v8::EmbedderGraph"* %102 to void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)***
  %106 = load void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)**, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)** %106, i64 2
  %108 = load void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)*, void (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"*, i8*)** %107, align 8
  call void %108(%"class.v8::EmbedderGraph"* %102, %"class.v8::EmbedderGraph::Node"* %103, %"class.v8::EmbedderGraph::Node"* %104, i8* null) #17
  br label %109

109:                                              ; preds = %100, %99
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZNK3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS2_(%"class.WTF::HashMap.189"* nocapture readonly, i8** nocapture readonly dereferenceable(8)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.193"* %4, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast i8** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = inttoptr i64 %12 to i8*
  %38 = icmp eq i8* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi i8* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq i8* %54, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %63, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %6
  %68 = phi %"struct.WTF::KeyValuePair.193"* [ %34, %6 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.193"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %68, i64 0, i32 1
  %72 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %71, align 8
  br label %73

73:                                               ; preds = %53, %2, %67, %70
  %74 = phi %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %53 ]
  ret %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %74
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE6insertIRS2_S7_EENS_18HashTableAddResultINS_9HashTableIS2_NS_12KeyValuePairIS2_S7_EENS_24KeyValuePairKeyExtractorES9_NS_18HashMapValueTraitsISB_SC_EESB_SD_EESK_EEOT_OT0_(%"class.WTF::HashMap.189"* nocapture, i8** nocapture readonly dereferenceable(8), %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.193"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call fastcc %"struct.WTF::KeyValuePair.193"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.190"* %4, %"struct.WTF::KeyValuePair.193"* null) #17
  %10 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %5, align 8
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi %"struct.WTF::KeyValuePair.193"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = bitcast i8** %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %18, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %15, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %12, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  %44 = inttoptr i64 %18 to i8*
  br i1 %43, label %88, label %45

45:                                               ; preds = %11
  %46 = xor i32 %37, -1
  %47 = lshr i32 %37, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %66, %45
  %60 = phi i8* [ %42, %45 ], [ %75, %66 ]
  %61 = phi %"struct.WTF::KeyValuePair.193"* [ %40, %45 ], [ %73, %66 ]
  %62 = phi %"struct.WTF::KeyValuePair.193"* [ null, %45 ], [ %68, %66 ]
  %63 = phi i64 [ %39, %45 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %45 ], [ %70, %66 ]
  %65 = icmp eq i8* %60, %44
  br i1 %65, label %107, label %66

66:                                               ; preds = %59
  %67 = icmp eq i8* %60, inttoptr (i64 -1 to i8*)
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.193"* %61, %"struct.WTF::KeyValuePair.193"* %62
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %58, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %16
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %12, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %73, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %77, label %59

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.193"* %68, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %77
  %80 = bitcast %"struct.WTF::KeyValuePair.193"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 16, i1 false) #17
  %81 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %0, i64 0, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load i64, i64* %17, align 8
  br label %88

88:                                               ; preds = %79, %77, %11
  %89 = phi i64 [ %87, %79 ], [ %18, %77 ], [ %18, %11 ]
  %90 = phi %"struct.WTF::KeyValuePair.193"* [ %68, %79 ], [ %73, %77 ], [ %40, %11 ]
  %91 = bitcast %"struct.WTF::KeyValuePair.193"* %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %90, i64 0, i32 1
  %93 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %2 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %92 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %0, i64 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %0, i64 0, i32 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, %98
  %102 = shl i32 %101, 1
  %103 = load i32, i32* %13, align 8
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %88
  %106 = tail call fastcc %"struct.WTF::KeyValuePair.193"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.190"* %4, %"struct.WTF::KeyValuePair.193"* %90) #17
  br label %107

107:                                              ; preds = %59, %88, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.193"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.190"* nocapture, %"struct.WTF::KeyValuePair.193"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateEEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.193"*
  %37 = ptrtoint i8* %35 to i64
  %38 = load i32, i32* %6, align 8
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 0
  br i1 %39, label %41, label %44

41:                                               ; preds = %31
  %42 = bitcast %"class.WTF::HashTable.190"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  br label %51

44:                                               ; preds = %31
  %45 = add i32 %32, -1
  %46 = zext i32 %45 to i64
  %47 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %40, align 8
  %48 = ptrtoint %"struct.WTF::KeyValuePair.193"* %47 to i64
  br label %58

49:                                               ; preds = %149
  %50 = bitcast %"class.WTF::HashTable.190"* %0 to i64*
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi i64* [ %42, %41 ], [ %50, %49 ]
  %53 = phi i64 [ %43, %41 ], [ %150, %49 ]
  %54 = phi %"struct.WTF::KeyValuePair.193"* [ null, %41 ], [ %153, %49 ]
  store atomic i64 %37, i64* %52 monotonic, align 8
  store i32 %32, i32* %6, align 8
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %156, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %53 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #17
  br label %156

58:                                               ; preds = %149, %44
  %59 = phi i64 [ %48, %44 ], [ %150, %149 ]
  %60 = phi i32 [ %38, %44 ], [ %151, %149 ]
  %61 = phi %"struct.WTF::KeyValuePair.193"* [ %47, %44 ], [ %152, %149 ]
  %62 = phi %"struct.WTF::KeyValuePair.193"* [ null, %44 ], [ %153, %149 ]
  %63 = phi i32 [ 0, %44 ], [ %154, %149 ]
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %61, i64 %64
  %66 = bitcast %"struct.WTF::KeyValuePair.193"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %68 [
    i64 -1, label %149
    i64 0, label %149
  ]

68:                                               ; preds = %58
  %69 = shl i64 %67, 32
  %70 = xor i64 %69, -1
  %71 = add i64 %67, %70
  %72 = lshr i64 %71, 22
  %73 = xor i64 %72, %71
  %74 = shl i64 %73, 13
  %75 = xor i64 %74, -1
  %76 = add i64 %73, %75
  %77 = lshr i64 %76, 8
  %78 = xor i64 %77, %76
  %79 = mul i64 %78, 9
  %80 = lshr i64 %79, 15
  %81 = xor i64 %80, %79
  %82 = shl i64 %81, 27
  %83 = xor i64 %82, -1
  %84 = add i64 %81, %83
  %85 = lshr i64 %84, 31
  %86 = xor i64 %85, %84
  %87 = trunc i64 %86 to i32
  %88 = and i32 %45, %87
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %36, i64 %89
  %91 = ptrtoint %"struct.WTF::KeyValuePair.193"* %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %90, i64 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  %95 = inttoptr i64 %67 to i8*
  br i1 %94, label %113, label %96

96:                                               ; preds = %68
  %97 = xor i32 %87, -1
  %98 = lshr i32 %87, 23
  %99 = add i32 %98, %97
  %100 = shl i32 %99, 12
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 7
  %103 = xor i32 %102, %101
  %104 = shl i32 %103, 2
  %105 = xor i32 %104, %103
  %106 = lshr i32 %105, 20
  %107 = xor i32 %106, %105
  %108 = or i32 %107, 1
  %109 = zext i32 %108 to i64
  br label %119

110:                                              ; preds = %126
  %111 = ptrtoint %"struct.WTF::KeyValuePair.193"* %133 to i64
  %112 = inttoptr i64 %128 to %"struct.WTF::KeyValuePair.193"*
  br label %113

113:                                              ; preds = %110, %68
  %114 = phi i64 [ %111, %110 ], [ %91, %68 ]
  %115 = phi %"struct.WTF::KeyValuePair.193"* [ %112, %110 ], [ null, %68 ]
  %116 = icmp eq %"struct.WTF::KeyValuePair.193"* %115, null
  %117 = ptrtoint %"struct.WTF::KeyValuePair.193"* %115 to i64
  %118 = select i1 %116, i64 %114, i64 %117
  br label %138

119:                                              ; preds = %126, %96
  %120 = phi i64 [ 0, %96 ], [ %128, %126 ]
  %121 = phi i8* [ %93, %96 ], [ %136, %126 ]
  %122 = phi i64 [ %91, %96 ], [ %134, %126 ]
  %123 = phi i64 [ %89, %96 ], [ %132, %126 ]
  %124 = phi i64 [ 0, %96 ], [ %130, %126 ]
  %125 = icmp eq i8* %121, %95
  br i1 %125, label %138, label %126

126:                                              ; preds = %119
  %127 = icmp eq i8* %121, inttoptr (i64 -1 to i8*)
  %128 = select i1 %127, i64 %122, i64 %120
  %129 = icmp eq i64 %124, 0
  %130 = select i1 %129, i64 %109, i64 %124
  %131 = add i64 %130, %123
  %132 = and i64 %131, %46
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %36, i64 %132
  %134 = ptrtoint %"struct.WTF::KeyValuePair.193"* %133 to i64
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %133, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %110, label %119

138:                                              ; preds = %119, %113
  %139 = phi i64 [ %118, %113 ], [ %122, %119 ]
  %140 = inttoptr i64 %139 to %"struct.WTF::KeyValuePair.193"*
  %141 = inttoptr i64 %139 to i8*
  %142 = bitcast %"struct.WTF::KeyValuePair.193"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 16, i1 false) #17
  %143 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %40, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %143, i64 %64
  %145 = icmp eq %"struct.WTF::KeyValuePair.193"* %144, %1
  %146 = select i1 %145, %"struct.WTF::KeyValuePair.193"* %140, %"struct.WTF::KeyValuePair.193"* %62
  %147 = load i32, i32* %6, align 8
  %148 = ptrtoint %"struct.WTF::KeyValuePair.193"* %143 to i64
  br label %149

149:                                              ; preds = %138, %58, %58
  %150 = phi i64 [ %59, %58 ], [ %148, %138 ], [ %59, %58 ]
  %151 = phi i32 [ %60, %58 ], [ %147, %138 ], [ %60, %58 ]
  %152 = phi %"struct.WTF::KeyValuePair.193"* [ %61, %58 ], [ %143, %138 ], [ %61, %58 ]
  %153 = phi %"struct.WTF::KeyValuePair.193"* [ %62, %58 ], [ %146, %138 ], [ %62, %58 ]
  %154 = add i32 %63, 1
  %155 = icmp eq i32 %154, %151
  br i1 %155, label %49, label %58

156:                                              ; preds = %51, %56
  %157 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 3
  %158 = load i32, i32* %157, align 8
  %159 = and i32 %158, -2147483648
  store i32 %159, i32* %157, align 8
  ret %"struct.WTF::KeyValuePair.193"* %54
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = load i8, i8* %1, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 %4, i8* %3, align 1
  %5 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %3, i64 1) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF7HashMapIPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS_7PtrHashIS4_EENS_10HashTraitsIS5_EENSF_ISC_EENS_18PartitionAllocatorEE6insertIRS5_SC_EENS_18HashTableAddResultINS_9HashTableIS5_NS_12KeyValuePairIS5_SC_EENS_24KeyValuePairKeyExtractorESE_NS_18HashMapValueTraitsISG_SH_EESG_SI_EESP_EEOT_OT0_(%"class.WTF::HashMap.194"* nocapture, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.198"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call fastcc %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_12KeyValuePairIS5_NSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.195"* %4, %"struct.WTF::KeyValuePair.198"* null) #17
  %10 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %5, align 8
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi %"struct.WTF::KeyValuePair.198"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %18, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %15, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %12, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %40, i64 0, i32 0
  %42 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %41, align 8
  %43 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %42, null
  %44 = inttoptr i64 %18 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*
  br i1 %43, label %88, label %45

45:                                               ; preds = %11
  %46 = xor i32 %37, -1
  %47 = lshr i32 %37, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %66, %45
  %60 = phi %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* [ %42, %45 ], [ %75, %66 ]
  %61 = phi %"struct.WTF::KeyValuePair.198"* [ %40, %45 ], [ %73, %66 ]
  %62 = phi %"struct.WTF::KeyValuePair.198"* [ null, %45 ], [ %68, %66 ]
  %63 = phi i64 [ %39, %45 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %45 ], [ %70, %66 ]
  %65 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %60, %44
  br i1 %65, label %116, label %66

66:                                               ; preds = %59
  %67 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %60, inttoptr (i64 -1 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*)
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.198"* %61, %"struct.WTF::KeyValuePair.198"* %62
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %58, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %16
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %12, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %73, i64 0, i32 0
  %75 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %74, align 8
  %76 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %75, null
  br i1 %76, label %77, label %59

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.198"* %68, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %77
  %80 = bitcast %"struct.WTF::KeyValuePair.198"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 32, i1 false) #17
  %81 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load i64, i64* %17, align 8
  br label %88

88:                                               ; preds = %79, %77, %11
  %89 = phi i64 [ %87, %79 ], [ %18, %77 ], [ %18, %11 ]
  %90 = phi %"struct.WTF::KeyValuePair.198"* [ %68, %79 ], [ %73, %77 ], [ %40, %11 ]
  %91 = bitcast %"struct.WTF::KeyValuePair.198"* %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %90, i64 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  tail call void @_ZdlPv(i8* %99) #18
  br label %100

100:                                              ; preds = %97, %88
  %101 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %102 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 24, i1 false) #17
  %103 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  store i8 0, i8* %104, align 1
  store i8 0, i8* %102, align 1
  %105 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashMap.194", %"class.WTF::HashMap.194"* %0, i64 0, i32 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = load i32, i32* %13, align 8
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %100
  %115 = tail call fastcc %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_12KeyValuePairIS5_NSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.195"* %4, %"struct.WTF::KeyValuePair.198"* %90) #17
  br label %116

116:                                              ; preds = %59, %100, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.198"* @_ZN3WTF9HashTableIPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_12KeyValuePairIS5_NSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.195"* nocapture, %"struct.WTF::KeyValuePair.198"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([216 x i8], [216 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEEEEPKcv, i64 0, i64 0)) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.198"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 %34, i1 false) #17
  br label %39

39:                                               ; preds = %38, %31
  %40 = ptrtoint i8* %35 to i64
  %41 = load i32, i32* %6, align 8
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 0
  br i1 %42, label %44, label %47

44:                                               ; preds = %39
  %45 = bitcast %"class.WTF::HashTable.195"* %0 to i64*
  %46 = load i64, i64* %45, align 8
  br label %54

47:                                               ; preds = %39
  %48 = add i32 %32, -1
  %49 = zext i32 %48 to i64
  %50 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %43, align 8
  %51 = ptrtoint %"struct.WTF::KeyValuePair.198"* %50 to i64
  br label %84

52:                                               ; preds = %188
  %53 = bitcast %"class.WTF::HashTable.195"* %0 to i64*
  br label %54

54:                                               ; preds = %52, %44
  %55 = phi i64* [ %45, %44 ], [ %53, %52 ]
  %56 = phi i64 [ %46, %44 ], [ %189, %52 ]
  %57 = phi %"struct.WTF::KeyValuePair.198"* [ null, %44 ], [ %192, %52 ]
  %58 = phi i32 [ 0, %44 ], [ %190, %52 ]
  store atomic i64 %40, i64* %55 monotonic, align 8
  store i32 %32, i32* %6, align 8
  %59 = inttoptr i64 %56 to %"struct.WTF::KeyValuePair.198"*
  %60 = icmp eq i64 %56, 0
  br i1 %60, label %195, label %61

61:                                               ; preds = %54
  %62 = icmp eq i32 %58, 0
  br i1 %62, label %82, label %63

63:                                               ; preds = %61
  %64 = zext i32 %58 to i64
  br label %65

65:                                               ; preds = %79, %63
  %66 = phi i64 [ 0, %63 ], [ %80, %79 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %59, i64 %66, i32 0
  %68 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %67, align 8
  %69 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %68, inttoptr (i64 -1 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*)
  br i1 %69, label %79, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %59, i64 %66, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %76, %70, %65
  %80 = add nuw nsw i64 %66, 1
  %81 = icmp eq i64 %80, %64
  br i1 %81, label %82, label %65

82:                                               ; preds = %79, %61
  %83 = inttoptr i64 %56 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #17
  br label %195

84:                                               ; preds = %188, %47
  %85 = phi i64 [ %51, %47 ], [ %189, %188 ]
  %86 = phi i32 [ %41, %47 ], [ %190, %188 ]
  %87 = phi %"struct.WTF::KeyValuePair.198"* [ %50, %47 ], [ %191, %188 ]
  %88 = phi %"struct.WTF::KeyValuePair.198"* [ null, %47 ], [ %192, %188 ]
  %89 = phi i32 [ 0, %47 ], [ %193, %188 ]
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %87, i64 %90
  %92 = bitcast %"struct.WTF::KeyValuePair.198"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  switch i64 %93, label %94 [
    i64 -1, label %188
    i64 0, label %188
  ]

94:                                               ; preds = %84
  %95 = shl i64 %93, 32
  %96 = xor i64 %95, -1
  %97 = add i64 %93, %96
  %98 = lshr i64 %97, 22
  %99 = xor i64 %98, %97
  %100 = shl i64 %99, 13
  %101 = xor i64 %100, -1
  %102 = add i64 %99, %101
  %103 = lshr i64 %102, 8
  %104 = xor i64 %103, %102
  %105 = mul i64 %104, 9
  %106 = lshr i64 %105, 15
  %107 = xor i64 %106, %105
  %108 = shl i64 %107, 27
  %109 = xor i64 %108, -1
  %110 = add i64 %107, %109
  %111 = lshr i64 %110, 31
  %112 = xor i64 %111, %110
  %113 = trunc i64 %112 to i32
  %114 = and i32 %48, %113
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %115
  %117 = ptrtoint %"struct.WTF::KeyValuePair.198"* %116 to i64
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %116, i64 0, i32 0
  %119 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %118, align 8
  %120 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %119, null
  %121 = inttoptr i64 %93 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*
  br i1 %120, label %139, label %122

122:                                              ; preds = %94
  %123 = xor i32 %113, -1
  %124 = lshr i32 %113, 23
  %125 = add i32 %124, %123
  %126 = shl i32 %125, 12
  %127 = xor i32 %126, %125
  %128 = lshr i32 %127, 7
  %129 = xor i32 %128, %127
  %130 = shl i32 %129, 2
  %131 = xor i32 %130, %129
  %132 = lshr i32 %131, 20
  %133 = xor i32 %132, %131
  %134 = or i32 %133, 1
  %135 = zext i32 %134 to i64
  br label %145

136:                                              ; preds = %152
  %137 = ptrtoint %"struct.WTF::KeyValuePair.198"* %159 to i64
  %138 = inttoptr i64 %154 to %"struct.WTF::KeyValuePair.198"*
  br label %139

139:                                              ; preds = %136, %94
  %140 = phi i64 [ %137, %136 ], [ %117, %94 ]
  %141 = phi %"struct.WTF::KeyValuePair.198"* [ %138, %136 ], [ null, %94 ]
  %142 = icmp eq %"struct.WTF::KeyValuePair.198"* %141, null
  %143 = ptrtoint %"struct.WTF::KeyValuePair.198"* %141 to i64
  %144 = select i1 %142, i64 %140, i64 %143
  br label %164

145:                                              ; preds = %152, %122
  %146 = phi i64 [ 0, %122 ], [ %154, %152 ]
  %147 = phi %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* [ %119, %122 ], [ %162, %152 ]
  %148 = phi i64 [ %117, %122 ], [ %160, %152 ]
  %149 = phi i64 [ %115, %122 ], [ %158, %152 ]
  %150 = phi i64 [ 0, %122 ], [ %156, %152 ]
  %151 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %147, %121
  br i1 %151, label %164, label %152

152:                                              ; preds = %145
  %153 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %147, inttoptr (i64 -1 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*)
  %154 = select i1 %153, i64 %148, i64 %146
  %155 = icmp eq i64 %150, 0
  %156 = select i1 %155, i64 %135, i64 %150
  %157 = add i64 %156, %149
  %158 = and i64 %157, %49
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %36, i64 %158
  %160 = ptrtoint %"struct.WTF::KeyValuePair.198"* %159 to i64
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %159, i64 0, i32 0
  %162 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %161, align 8
  %163 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %162, null
  br i1 %163, label %136, label %145

164:                                              ; preds = %145, %139
  %165 = phi i64 [ %144, %139 ], [ %148, %145 ]
  %166 = inttoptr i64 %165 to %"struct.WTF::KeyValuePair.198"*
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %166, i64 0, i32 1
  %168 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #18
  %175 = load i64, i64* %92, align 8
  br label %176

176:                                              ; preds = %172, %164
  %177 = phi i64 [ %93, %164 ], [ %175, %172 ]
  %178 = inttoptr i64 %165 to i64*
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %87, i64 %90, i32 1
  %180 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  %181 = bitcast %"class.std::__1::basic_string"* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %181, i8 0, i64 24, i1 false) #17
  %182 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %43, align 8
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %182, i64 %90
  %184 = icmp eq %"struct.WTF::KeyValuePair.198"* %183, %1
  %185 = select i1 %184, %"struct.WTF::KeyValuePair.198"* %166, %"struct.WTF::KeyValuePair.198"* %88
  %186 = load i32, i32* %6, align 8
  %187 = ptrtoint %"struct.WTF::KeyValuePair.198"* %182 to i64
  br label %188

188:                                              ; preds = %176, %84, %84
  %189 = phi i64 [ %85, %84 ], [ %187, %176 ], [ %85, %84 ]
  %190 = phi i32 [ %86, %84 ], [ %186, %176 ], [ %86, %84 ]
  %191 = phi %"struct.WTF::KeyValuePair.198"* [ %87, %84 ], [ %182, %176 ], [ %87, %84 ]
  %192 = phi %"struct.WTF::KeyValuePair.198"* [ %88, %84 ], [ %185, %176 ], [ %88, %84 ]
  %193 = add i32 %89, 1
  %194 = icmp eq i32 %193, %190
  br i1 %194, label %52, label %84

195:                                              ; preds = %54, %82
  %196 = getelementptr inbounds %"class.WTF::HashTable.195", %"class.WTF::HashTable.195"* %0, i64 0, i32 3
  %197 = load i32, i32* %196, align 8
  %198 = and i32 %197, -2147483648
  store i32 %198, i32* %196, align 8
  ret %"struct.WTF::KeyValuePair.198"* %57
}

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5State8EdgeNameEPS2_(%"class.std::__1::basic_string"* noalias sret, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* nocapture readonly, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %1, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.198"*, %"struct.WTF::KeyValuePair.198"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.198"* %6, null
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %1, i64 0, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %71, label %10

10:                                               ; preds = %3
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %34, i64 0, i32 0
  %36 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %35, align 8
  %37 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %36, %2
  br i1 %37, label %66, label %38

38:                                               ; preds = %10
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %53, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %6, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %62, i64 0, i32 0
  %64 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %63, align 8
  %65 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %64, %2
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %10
  %67 = phi %"struct.WTF::KeyValuePair.198"* [ %34, %10 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.198"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %9 to i64
  br label %74

71:                                               ; preds = %52, %66, %3
  %72 = zext i32 %9 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %6, i64 %72
  br label %74

74:                                               ; preds = %69, %71
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"struct.WTF::KeyValuePair.198"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %6, i64 %75
  %78 = icmp eq %"struct.WTF::KeyValuePair.198"* %76, %77
  br i1 %78, label %93, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %76, i64 0, i32 1
  %81 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %87 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #17
  br label %95

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.198", %"struct.WTF::KeyValuePair.198"* %76, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %90, i64 %92) #17
  br label %95

93:                                               ; preds = %74
  %94 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #17
  br label %95

95:                                               ; preds = %88, %85, %93
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #12

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.178"*, %"class.std::__1::unique_ptr.181"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.181"*, %"class.std::__1::unique_ptr.181"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.181"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.181"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.181"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIA_cNS2_14default_deleteIS4_EEEEEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEEEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.178"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.181"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.181"*, %"class.std::__1::unique_ptr.181"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.181"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.181"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.178"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.178"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.181"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.181"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.181"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.181"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIA_cNS2_14default_deleteIS4_EEEEEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEEEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.178"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.181"*, %"class.std::__1::unique_ptr.181"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.181"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.181"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.178"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.178"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.181"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.181"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.181"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.181"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.181"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store i8* null, i8** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.181"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIA_cNS2_14default_deleteIS4_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::(anonymous namespace)::EmbedderNode"* @_ZN5blink12_GLOBAL__N_111NodeBuilder9GraphNodeEPKvPKcPN2v813EmbedderGraph4NodeENS8_12DetachednessE(%"class.blink::(anonymous namespace)::NodeBuilder"* nocapture, i8*, i8*, %"class.v8::EmbedderGraph::Node"*, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = ptrtoint i8* %1 to i64
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair"* %9, null
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %74, label %13

13:                                               ; preds = %5
  %14 = add i32 %12, -1
  %15 = zext i32 %14 to i64
  %16 = shl i64 %6, 32
  %17 = xor i64 %16, -1
  %18 = add i64 %17, %6
  %19 = lshr i64 %18, 22
  %20 = xor i64 %19, %18
  %21 = shl i64 %20, 13
  %22 = xor i64 %21, -1
  %23 = add i64 %20, %22
  %24 = lshr i64 %23, 8
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, 9
  %27 = lshr i64 %26, 15
  %28 = xor i64 %27, %26
  %29 = shl i64 %28, 27
  %30 = xor i64 %29, -1
  %31 = add i64 %28, %30
  %32 = lshr i64 %31, 31
  %33 = xor i64 %32, %31
  %34 = trunc i64 %33 to i32
  %35 = and i32 %14, %34
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %36
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, %1
  br i1 %40, label %69, label %41

41:                                               ; preds = %13
  %42 = xor i32 %34, -1
  %43 = lshr i32 %34, 23
  %44 = add i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %60, %41
  %56 = phi i8* [ %39, %41 ], [ %67, %60 ]
  %57 = phi i64 [ %36, %41 ], [ %64, %60 ]
  %58 = phi i64 [ 0, %41 ], [ %62, %60 ]
  %59 = icmp eq i8* %56, null
  br i1 %59, label %74, label %60

60:                                               ; preds = %55
  %61 = icmp eq i64 %58, 0
  %62 = select i1 %61, i64 %54, i64 %58
  %63 = add i64 %62, %57
  %64 = and i64 %63, %15
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, %1
  br i1 %68, label %69, label %55

69:                                               ; preds = %60, %13
  %70 = phi %"struct.WTF::KeyValuePair"* [ %37, %13 ], [ %65, %60 ]
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = zext i32 %12 to i64
  br label %77

74:                                               ; preds = %55, %69, %5
  %75 = zext i32 %12 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %75
  br label %77

77:                                               ; preds = %72, %74
  %78 = phi i64 [ %73, %72 ], [ %75, %74 ]
  %79 = phi %"struct.WTF::KeyValuePair"* [ %70, %72 ], [ %76, %74 ]
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %78
  %81 = icmp eq %"struct.WTF::KeyValuePair"* %79, %80
  br i1 %81, label %85, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %84 = load %"class.blink::(anonymous namespace)::EmbedderNode"*, %"class.blink::(anonymous namespace)::EmbedderNode"** %83, align 8
  br label %199

85:                                               ; preds = %77
  %86 = tail call i8* @_Znwm(i64 48) #18
  %87 = bitcast i8* %86 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112EmbedderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds i8, i8* %86, i64 8
  %89 = bitcast i8* %88 to i8**
  store i8* %2, i8** %89, align 8
  %90 = getelementptr inbounds i8, i8* %86, i64 16
  %91 = bitcast i8* %90 to %"class.v8::EmbedderGraph::Node"**
  store %"class.v8::EmbedderGraph::Node"* %3, %"class.v8::EmbedderGraph::Node"** %91, align 8
  %92 = getelementptr inbounds i8, i8* %86, i64 24
  store i8 %4, i8* %92, align 8
  %93 = getelementptr inbounds i8, i8* %86, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #17
  %94 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %0, i64 0, i32 0
  %95 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %94, align 8
  %96 = bitcast i8* %86 to %"class.v8::EmbedderGraph::Node"*
  %97 = bitcast %"class.v8::EmbedderGraph"* %95 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)***
  %98 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)** %98, i64 1
  %100 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph::Node"*)** %99, align 8
  %101 = tail call %"class.v8::EmbedderGraph::Node"* %100(%"class.v8::EmbedderGraph"* %95, %"class.v8::EmbedderGraph::Node"* nonnull %96) #17
  %102 = ptrtoint %"class.v8::EmbedderGraph::Node"* %101 to i64
  %103 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0
  %104 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %104, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %85
  %107 = tail call fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PN5blink12_GLOBAL__N_112EmbedderNodeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %103, %"struct.WTF::KeyValuePair"* null) #17
  %108 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  br label %109

109:                                              ; preds = %106, %85
  %110 = phi %"struct.WTF::KeyValuePair"* [ %104, %85 ], [ %108, %106 ]
  %111 = load i32, i32* %11, align 8
  %112 = add i32 %111, -1
  %113 = zext i32 %112 to i64
  %114 = shl i64 %6, 32
  %115 = xor i64 %114, -1
  %116 = add i64 %115, %6
  %117 = lshr i64 %116, 22
  %118 = xor i64 %117, %116
  %119 = shl i64 %118, 13
  %120 = xor i64 %119, -1
  %121 = add i64 %118, %120
  %122 = lshr i64 %121, 8
  %123 = xor i64 %122, %121
  %124 = mul i64 %123, 9
  %125 = lshr i64 %124, 15
  %126 = xor i64 %125, %124
  %127 = shl i64 %126, 27
  %128 = xor i64 %127, -1
  %129 = add i64 %126, %128
  %130 = lshr i64 %129, 31
  %131 = xor i64 %130, %129
  %132 = trunc i64 %131 to i32
  %133 = and i32 %112, %132
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 %134
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = icmp eq i8* %137, null
  br i1 %138, label %181, label %139

139:                                              ; preds = %109
  %140 = xor i32 %132, -1
  %141 = lshr i32 %132, 23
  %142 = add i32 %141, %140
  %143 = shl i32 %142, 12
  %144 = xor i32 %143, %142
  %145 = lshr i32 %144, 7
  %146 = xor i32 %145, %144
  %147 = shl i32 %146, 2
  %148 = xor i32 %147, %146
  %149 = lshr i32 %148, 20
  %150 = xor i32 %149, %148
  %151 = or i32 %150, 1
  %152 = zext i32 %151 to i64
  br label %153

153:                                              ; preds = %160, %139
  %154 = phi i8* [ %137, %139 ], [ %169, %160 ]
  %155 = phi %"struct.WTF::KeyValuePair"* [ %135, %139 ], [ %167, %160 ]
  %156 = phi %"struct.WTF::KeyValuePair"* [ null, %139 ], [ %162, %160 ]
  %157 = phi i64 [ %134, %139 ], [ %166, %160 ]
  %158 = phi i64 [ 0, %139 ], [ %164, %160 ]
  %159 = icmp eq i8* %154, %1
  br i1 %159, label %197, label %160

160:                                              ; preds = %153
  %161 = icmp eq i8* %154, inttoptr (i64 -1 to i8*)
  %162 = select i1 %161, %"struct.WTF::KeyValuePair"* %155, %"struct.WTF::KeyValuePair"* %156
  %163 = icmp eq i64 %158, 0
  %164 = select i1 %163, i64 %152, i64 %158
  %165 = add i64 %164, %157
  %166 = and i64 %165, %113
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 %166
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %167, i64 0, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %171, label %153

171:                                              ; preds = %160
  %172 = icmp eq %"struct.WTF::KeyValuePair"* %162, null
  br i1 %172, label %181, label %173

173:                                              ; preds = %171
  %174 = bitcast %"struct.WTF::KeyValuePair"* %162 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 16, i1 false) #17
  %175 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %0, i64 0, i32 1, i32 0, i32 3
  %176 = load i32, i32* %175, align 8
  %177 = add i32 %176, 2147483647
  %178 = and i32 %177, 2147483647
  %179 = and i32 %176, -2147483648
  %180 = or i32 %178, %179
  store i32 %180, i32* %175, align 8
  br label %181

181:                                              ; preds = %173, %171, %109
  %182 = phi %"struct.WTF::KeyValuePair"* [ %162, %173 ], [ %167, %171 ], [ %135, %109 ]
  %183 = bitcast %"struct.WTF::KeyValuePair"* %182 to i64*
  store i64 %6, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %182, i64 0, i32 1
  %185 = bitcast %"class.blink::(anonymous namespace)::EmbedderNode"** %184 to i64*
  store i64 %102, i64* %185, align 8
  %186 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %0, i64 0, i32 1, i32 0, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %187, 1
  store i32 %188, i32* %186, align 4
  %189 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %0, i64 0, i32 1, i32 0, i32 3
  %190 = load i32, i32* %189, align 8
  %191 = add i32 %190, %188
  %192 = shl i32 %191, 1
  %193 = load i32, i32* %11, align 8
  %194 = icmp ult i32 %192, %193
  br i1 %194, label %197, label %195

195:                                              ; preds = %181
  %196 = tail call fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PN5blink12_GLOBAL__N_112EmbedderNodeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %103, %"struct.WTF::KeyValuePair"* %182) #17
  br label %197

197:                                              ; preds = %153, %181, %195
  %198 = bitcast %"class.v8::EmbedderGraph::Node"* %101 to %"class.blink::(anonymous namespace)::EmbedderNode"*
  br label %199

199:                                              ; preds = %197, %82
  %200 = phi %"class.blink::(anonymous namespace)::EmbedderNode"* [ %84, %82 ], [ %198, %197 ]
  ret %"class.blink::(anonymous namespace)::EmbedderNode"* %200
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112EmbedderNodeD0Ev(%"class.blink::(anonymous namespace)::EmbedderNode"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112EmbedderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.181"*, %"class.std::__1::unique_ptr.181"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.181"* %5, null
  br i1 %6, label %29, label %7, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.181"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.std::__1::unique_ptr.181"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8* null, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  tail call void @_ZdaPv(i8* nonnull %18) #18
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %16, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr.181"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.178"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #17
  br label %29

29:                                               ; preds = %1, %27
  %30 = bitcast %"class.blink::(anonymous namespace)::EmbedderNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @_ZN5blink12_GLOBAL__N_112EmbedderNode4NameEv(%"class.blink::(anonymous namespace)::EmbedderNode"* nocapture readonly) unnamed_addr #14 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZN5blink12_GLOBAL__N_112EmbedderNode11SizeInBytesEv(%"class.blink::(anonymous namespace)::EmbedderNode"* nocapture readnone) unnamed_addr #15 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.v8::EmbedderGraph::Node"* @_ZN5blink12_GLOBAL__N_112EmbedderNode11WrapperNodeEv(%"class.blink::(anonymous namespace)::EmbedderNode"* nocapture readonly) unnamed_addr #14 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 2
  %3 = load %"class.v8::EmbedderGraph::Node"*, %"class.v8::EmbedderGraph::Node"** %2, align 8
  ret %"class.v8::EmbedderGraph::Node"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v813EmbedderGraph4Node10IsRootNodeEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v813EmbedderGraph4Node14IsEmbedderNodeEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN2v813EmbedderGraph4Node10NamePrefixEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN2v813EmbedderGraph4Node15GetNativeObjectEv(%"class.v8::EmbedderGraph::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i8 @_ZN5blink12_GLOBAL__N_112EmbedderNode15GetDetachednessEv(%"class.blink::(anonymous namespace)::EmbedderNode"* nocapture readonly) unnamed_addr #14 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PN5blink12_GLOBAL__N_112EmbedderNodeEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* nocapture, %"struct.WTF::KeyValuePair"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvPN5blink12_GLOBAL__N_112EmbedderNodeEEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = ptrtoint i8* %35 to i64
  %38 = load i32, i32* %6, align 8
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %39, label %41, label %44

41:                                               ; preds = %31
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  br label %51

44:                                               ; preds = %31
  %45 = add i32 %32, -1
  %46 = zext i32 %45 to i64
  %47 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %40, align 8
  %48 = ptrtoint %"struct.WTF::KeyValuePair"* %47 to i64
  br label %58

49:                                               ; preds = %149
  %50 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi i64* [ %42, %41 ], [ %50, %49 ]
  %53 = phi i64 [ %43, %41 ], [ %150, %49 ]
  %54 = phi %"struct.WTF::KeyValuePair"* [ null, %41 ], [ %153, %49 ]
  store atomic i64 %37, i64* %52 monotonic, align 8
  store i32 %32, i32* %6, align 8
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %156, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %53 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #17
  br label %156

58:                                               ; preds = %149, %44
  %59 = phi i64 [ %48, %44 ], [ %150, %149 ]
  %60 = phi i32 [ %38, %44 ], [ %151, %149 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ %47, %44 ], [ %152, %149 ]
  %62 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %153, %149 ]
  %63 = phi i32 [ 0, %44 ], [ %154, %149 ]
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %64
  %66 = bitcast %"struct.WTF::KeyValuePair"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %68 [
    i64 -1, label %149
    i64 0, label %149
  ]

68:                                               ; preds = %58
  %69 = shl i64 %67, 32
  %70 = xor i64 %69, -1
  %71 = add i64 %67, %70
  %72 = lshr i64 %71, 22
  %73 = xor i64 %72, %71
  %74 = shl i64 %73, 13
  %75 = xor i64 %74, -1
  %76 = add i64 %73, %75
  %77 = lshr i64 %76, 8
  %78 = xor i64 %77, %76
  %79 = mul i64 %78, 9
  %80 = lshr i64 %79, 15
  %81 = xor i64 %80, %79
  %82 = shl i64 %81, 27
  %83 = xor i64 %82, -1
  %84 = add i64 %81, %83
  %85 = lshr i64 %84, 31
  %86 = xor i64 %85, %84
  %87 = trunc i64 %86 to i32
  %88 = and i32 %45, %87
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %89
  %91 = ptrtoint %"struct.WTF::KeyValuePair"* %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  %95 = inttoptr i64 %67 to i8*
  br i1 %94, label %113, label %96

96:                                               ; preds = %68
  %97 = xor i32 %87, -1
  %98 = lshr i32 %87, 23
  %99 = add i32 %98, %97
  %100 = shl i32 %99, 12
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 7
  %103 = xor i32 %102, %101
  %104 = shl i32 %103, 2
  %105 = xor i32 %104, %103
  %106 = lshr i32 %105, 20
  %107 = xor i32 %106, %105
  %108 = or i32 %107, 1
  %109 = zext i32 %108 to i64
  br label %119

110:                                              ; preds = %126
  %111 = ptrtoint %"struct.WTF::KeyValuePair"* %133 to i64
  %112 = inttoptr i64 %128 to %"struct.WTF::KeyValuePair"*
  br label %113

113:                                              ; preds = %110, %68
  %114 = phi i64 [ %111, %110 ], [ %91, %68 ]
  %115 = phi %"struct.WTF::KeyValuePair"* [ %112, %110 ], [ null, %68 ]
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %115, null
  %117 = ptrtoint %"struct.WTF::KeyValuePair"* %115 to i64
  %118 = select i1 %116, i64 %114, i64 %117
  br label %138

119:                                              ; preds = %126, %96
  %120 = phi i64 [ 0, %96 ], [ %128, %126 ]
  %121 = phi i8* [ %93, %96 ], [ %136, %126 ]
  %122 = phi i64 [ %91, %96 ], [ %134, %126 ]
  %123 = phi i64 [ %89, %96 ], [ %132, %126 ]
  %124 = phi i64 [ 0, %96 ], [ %130, %126 ]
  %125 = icmp eq i8* %121, %95
  br i1 %125, label %138, label %126

126:                                              ; preds = %119
  %127 = icmp eq i8* %121, inttoptr (i64 -1 to i8*)
  %128 = select i1 %127, i64 %122, i64 %120
  %129 = icmp eq i64 %124, 0
  %130 = select i1 %129, i64 %109, i64 %124
  %131 = add i64 %130, %123
  %132 = and i64 %131, %46
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %132
  %134 = ptrtoint %"struct.WTF::KeyValuePair"* %133 to i64
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %133, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %110, label %119

138:                                              ; preds = %119, %113
  %139 = phi i64 [ %118, %113 ], [ %122, %119 ]
  %140 = inttoptr i64 %139 to %"struct.WTF::KeyValuePair"*
  %141 = inttoptr i64 %139 to i8*
  %142 = bitcast %"struct.WTF::KeyValuePair"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 16, i1 false) #17
  %143 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %40, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %143, i64 %64
  %145 = icmp eq %"struct.WTF::KeyValuePair"* %144, %1
  %146 = select i1 %145, %"struct.WTF::KeyValuePair"* %140, %"struct.WTF::KeyValuePair"* %62
  %147 = load i32, i32* %6, align 8
  %148 = ptrtoint %"struct.WTF::KeyValuePair"* %143 to i64
  br label %149

149:                                              ; preds = %138, %58, %58
  %150 = phi i64 [ %59, %58 ], [ %148, %138 ], [ %59, %58 ]
  %151 = phi i32 [ %60, %58 ], [ %147, %138 ], [ %60, %58 ]
  %152 = phi %"struct.WTF::KeyValuePair"* [ %61, %58 ], [ %143, %138 ], [ %61, %58 ]
  %153 = phi %"struct.WTF::KeyValuePair"* [ %62, %58 ], [ %146, %138 ], [ %62, %58 ]
  %154 = add i32 %63, 1
  %155 = icmp eq i32 %154, %151
  br i1 %155, label %49, label %58

156:                                              ; preds = %51, %56
  %157 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %158 = load i32, i32* %157, align 8
  %159 = and i32 %158, -2147483648
  store i32 %159, i32* %157, align 8
  ret %"struct.WTF::KeyValuePair"* %54
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE9push_backIS9_EEvOT_(%"class.WTF::Deque.204"* nocapture, %"class.std::__1::unique_ptr.209"* nocapture dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Deque.204", %"class.WTF::Deque.204"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.WTF::Deque.204", %"class.WTF::Deque.204"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  br i1 %5, label %14, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, 1
  %10 = icmp eq i32 %9, %4
  br i1 %10, label %11, label %96

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.WTF::Deque.204", %"class.WTF::Deque.204"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  br label %23

14:                                               ; preds = %2
  %15 = icmp eq i32 %7, 0
  %16 = getelementptr inbounds %"class.WTF::Deque.204", %"class.WTF::Deque.204"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %21, label %18

18:                                               ; preds = %14
  %19 = add i32 %17, -1
  %20 = icmp eq i32 %7, %19
  br i1 %20, label %23, label %96

21:                                               ; preds = %14
  %22 = icmp eq i32 %17, 0
  br i1 %22, label %23, label %96

23:                                               ; preds = %21, %18, %11
  %24 = phi i32 [ %13, %11 ], [ %17, %18 ], [ 0, %21 ]
  %25 = getelementptr inbounds %"class.WTF::Deque.204", %"class.WTF::Deque.204"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::Deque.204", %"class.WTF::Deque.204"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %26, align 8
  %28 = lshr i32 %24, 2
  %29 = add i32 %24, 1
  %30 = add i32 %29, %28
  %31 = icmp ugt i32 %30, 16
  %32 = select i1 %31, i32 %30, i32 16
  %33 = zext i32 %32 to i64
  %34 = tail call fastcc i64 @_ZNK3WTF16VectorBufferBaseINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEENS_18PartitionAllocatorEE14AllocationSizeEm(i64 %33) #17
  %35 = tail call fastcc i64 @_ZNK3WTF16VectorBufferBaseINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEENS_18PartitionAllocatorEE14AllocationSizeEm(i64 %33) #17
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([239 x i8], [239 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEEEEPKcv, i64 0, i64 0)) #17
  %37 = bitcast %"class.WTF::Deque.204"* %0 to i64*
  %38 = ptrtoint i8* %36 to i64
  store atomic i64 %38, i64* %37 monotonic, align 8
  %39 = lshr i64 %35, 3
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %25, align 8
  %41 = load i32, i32* %3, align 8
  %42 = load i32, i32* %6, align 4
  %43 = icmp ugt i32 %41, %42
  %44 = bitcast i8* %36 to %"class.std::__1::unique_ptr.209"*
  br i1 %43, label %60, label %45

45:                                               ; preds = %23
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %27, i64 %46
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %44, i64 %46
  %49 = icmp ne %"class.std::__1::unique_ptr.209"* %48, null
  %50 = icmp ne %"class.std::__1::unique_ptr.209"* %47, null
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %93, !prof !3

52:                                               ; preds = %45
  %53 = zext i32 %42 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %27, i64 %53
  %55 = bitcast %"class.std::__1::unique_ptr.209"* %47 to i8*
  %56 = ptrtoint %"class.std::__1::unique_ptr.209"* %54 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.209"* %47 to i64
  %58 = sub i64 %56, %57
  %59 = bitcast %"class.std::__1::unique_ptr.209"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* nonnull align 8 %55, i64 %58, i1 false) #17
  br label %93

60:                                               ; preds = %23
  %61 = icmp ne i8* %36, null
  %62 = icmp ne %"class.std::__1::unique_ptr.209"* %27, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %71, !prof !3

64:                                               ; preds = %60
  %65 = zext i32 %42 to i64
  %66 = bitcast %"class.std::__1::unique_ptr.209"* %27 to i8*
  %67 = shl nuw nsw i64 %65, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %66, i64 %67, i1 false) #17
  %68 = load i32, i32* %25, align 8
  %69 = load i32, i32* %3, align 8
  %70 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %26, align 8
  br label %71

71:                                               ; preds = %64, %60
  %72 = phi %"class.std::__1::unique_ptr.209"* [ %44, %60 ], [ %70, %64 ]
  %73 = phi i32 [ %41, %60 ], [ %69, %64 ]
  %74 = phi i32 [ %40, %60 ], [ %68, %64 ]
  %75 = sub i32 %73, %24
  %76 = add i32 %75, %74
  %77 = zext i32 %73 to i64
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %27, i64 %77
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %72, i64 %79
  %81 = icmp ne %"class.std::__1::unique_ptr.209"* %80, null
  %82 = icmp ne %"class.std::__1::unique_ptr.209"* %78, null
  %83 = and i1 %82, %81
  br i1 %83, label %84, label %92, !prof !3

84:                                               ; preds = %71
  %85 = zext i32 %24 to i64
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %27, i64 %85
  %87 = bitcast %"class.std::__1::unique_ptr.209"* %78 to i8*
  %88 = ptrtoint %"class.std::__1::unique_ptr.209"* %86 to i64
  %89 = ptrtoint %"class.std::__1::unique_ptr.209"* %78 to i64
  %90 = sub i64 %88, %89
  %91 = bitcast %"class.std::__1::unique_ptr.209"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* nonnull align 8 %87, i64 %90, i1 false) #17
  br label %92

92:                                               ; preds = %84, %71
  store i32 %76, i32* %3, align 8
  br label %93

93:                                               ; preds = %92, %52, %45
  %94 = bitcast %"class.std::__1::unique_ptr.209"* %27 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #17
  %95 = load i32, i32* %6, align 4
  br label %96

96:                                               ; preds = %8, %18, %21, %93
  %97 = phi i32 [ %7, %8 ], [ %7, %18 ], [ 0, %21 ], [ %95, %93 ]
  %98 = getelementptr inbounds %"class.WTF::Deque.204", %"class.WTF::Deque.204"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %98, align 8
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %99, i64 %100
  %102 = getelementptr inbounds %"class.WTF::Deque.204", %"class.WTF::Deque.204"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, -1
  %105 = icmp eq i32 %97, %104
  %106 = add i32 %97, 1
  %107 = select i1 %105, i32 0, i32 %106
  store i32 %107, i32* %6, align 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %1, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.209"* %1 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.209"* %101 to i64*
  store i64 %110, i64* %111, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZNK3WTF16VectorBufferBaseINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEENS_18PartitionAllocatorEE14AllocationSizeEm(i64) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitationItemD0Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"* nocapture) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"* %0 to i8*
  tail call void @free(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitationItem7ProcessEPS1_(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"* nocapture readonly, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.209", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %1, i64 0, i32 9
  %5 = bitcast %"class.std::__1::unique_ptr.209"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = tail call noalias i8* @malloc(i64 24) #17
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"* %0, i64 0, i32 0, i32 2
  %9 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %7 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = bitcast i8* %6 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder18VisitationDoneItemE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = ptrtoint i8* %6 to i64
  %15 = bitcast %"class.std::__1::unique_ptr.209"* %3 to i64*
  store i64 %14, i64* %15, align 8
  call fastcc void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE9push_backIS9_EEvOT_(%"class.WTF::Deque.204"* %4, %"class.std::__1::unique_ptr.209"* nonnull dereferenceable(8) %3)
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %16, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %16, align 8
  %18 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %17 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)***
  %21 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %21, i64 1
  %23 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %22, align 8
  tail call void %23(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nonnull %17) #17
  br label %24

24:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %25 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %8, align 8
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %25, i64 0, i32 5
  store i8 1, i8* %26, align 1
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"* %0, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %1, i64 0, i32 6
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %29, i64* %31, align 8
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationItem"* %0, i64 0, i32 2
  %34 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %1, i64 0, i32 0
  %36 = load i8*, i8** %27, align 8
  tail call void %34(%"class.blink::Visitor"* %35, i8* %36) #17
  store i64 %32, i64* %31, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseD2Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nocapture) unnamed_addr #15 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder18VisitationDoneItemD0Ev(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem"* nocapture) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem"* %0 to i8*
  tail call void @free(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder18VisitationDoneItem7ProcessEPS1_(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem"* nocapture readonly, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %8, i64 0, i32 0
  %10 = load %"class.blink::(anonymous namespace)::EmbedderNode"*, %"class.blink::(anonymous namespace)::EmbedderNode"** %9, align 8
  %11 = icmp eq %"class.blink::(anonymous namespace)::EmbedderNode"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder7AddEdgeEPNS1_5StateES3_(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %1, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* nonnull %4, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %8)
  br label %13

13:                                               ; preds = %6, %2, %12
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::VisitationDoneItem"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %15, i64 0, i32 5
  store i8 0, i8* %16, align 1
  ret void
}

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare i8* @_ZNK5blink16HeapObjectHeader4NameEv(%"class.blink::HeapObjectHeader"*) local_unnamed_addr #1

declare void @_ZNK4base8Location8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.base::Location"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE9push_backIS9_EEvOT_(%"class.WTF::Deque.215"* nocapture, %"class.std::__1::unique_ptr.220"* nocapture dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  br i1 %5, label %14, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, 1
  %10 = icmp eq i32 %9, %4
  br i1 %10, label %11, label %96

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  br label %23

14:                                               ; preds = %2
  %15 = icmp eq i32 %7, 0
  %16 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %21, label %18

18:                                               ; preds = %14
  %19 = add i32 %17, -1
  %20 = icmp eq i32 %7, %19
  br i1 %20, label %23, label %96

21:                                               ; preds = %14
  %22 = icmp eq i32 %17, 0
  br i1 %22, label %23, label %96

23:                                               ; preds = %21, %18, %11
  %24 = phi i32 [ %13, %11 ], [ %17, %18 ], [ 0, %21 ]
  %25 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %26, align 8
  %28 = lshr i32 %24, 2
  %29 = add i32 %24, 1
  %30 = add i32 %29, %28
  %31 = icmp ugt i32 %30, 16
  %32 = select i1 %31, i32 %30, i32 16
  %33 = zext i32 %32 to i64
  %34 = tail call fastcc i64 @_ZNK3WTF16VectorBufferBaseINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS1_14default_deleteIS6_EEEENS_18PartitionAllocatorEE14AllocationSizeEm(i64 %33) #17
  %35 = tail call fastcc i64 @_ZNK3WTF16VectorBufferBaseINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS1_14default_deleteIS6_EEEENS_18PartitionAllocatorEE14AllocationSizeEm(i64 %33) #17
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([233 x i8], [233 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS1_14default_deleteIS6_EEEEEEPKcv, i64 0, i64 0)) #17
  %37 = bitcast %"class.WTF::Deque.215"* %0 to i64*
  %38 = ptrtoint i8* %36 to i64
  store atomic i64 %38, i64* %37 monotonic, align 8
  %39 = lshr i64 %35, 3
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %25, align 8
  %41 = load i32, i32* %3, align 8
  %42 = load i32, i32* %6, align 4
  %43 = icmp ugt i32 %41, %42
  %44 = bitcast i8* %36 to %"class.std::__1::unique_ptr.220"*
  br i1 %43, label %60, label %45

45:                                               ; preds = %23
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %27, i64 %46
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %44, i64 %46
  %49 = icmp ne %"class.std::__1::unique_ptr.220"* %48, null
  %50 = icmp ne %"class.std::__1::unique_ptr.220"* %47, null
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %93, !prof !3

52:                                               ; preds = %45
  %53 = zext i32 %42 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %27, i64 %53
  %55 = bitcast %"class.std::__1::unique_ptr.220"* %47 to i8*
  %56 = ptrtoint %"class.std::__1::unique_ptr.220"* %54 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.220"* %47 to i64
  %58 = sub i64 %56, %57
  %59 = bitcast %"class.std::__1::unique_ptr.220"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* nonnull align 8 %55, i64 %58, i1 false) #17
  br label %93

60:                                               ; preds = %23
  %61 = icmp ne i8* %36, null
  %62 = icmp ne %"class.std::__1::unique_ptr.220"* %27, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %71, !prof !3

64:                                               ; preds = %60
  %65 = zext i32 %42 to i64
  %66 = bitcast %"class.std::__1::unique_ptr.220"* %27 to i8*
  %67 = shl nuw nsw i64 %65, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %66, i64 %67, i1 false) #17
  %68 = load i32, i32* %25, align 8
  %69 = load i32, i32* %3, align 8
  %70 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %26, align 8
  br label %71

71:                                               ; preds = %64, %60
  %72 = phi %"class.std::__1::unique_ptr.220"* [ %44, %60 ], [ %70, %64 ]
  %73 = phi i32 [ %41, %60 ], [ %69, %64 ]
  %74 = phi i32 [ %40, %60 ], [ %68, %64 ]
  %75 = sub i32 %73, %24
  %76 = add i32 %75, %74
  %77 = zext i32 %73 to i64
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %27, i64 %77
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %72, i64 %79
  %81 = icmp ne %"class.std::__1::unique_ptr.220"* %80, null
  %82 = icmp ne %"class.std::__1::unique_ptr.220"* %78, null
  %83 = and i1 %82, %81
  br i1 %83, label %84, label %92, !prof !3

84:                                               ; preds = %71
  %85 = zext i32 %24 to i64
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %27, i64 %85
  %87 = bitcast %"class.std::__1::unique_ptr.220"* %78 to i8*
  %88 = ptrtoint %"class.std::__1::unique_ptr.220"* %86 to i64
  %89 = ptrtoint %"class.std::__1::unique_ptr.220"* %78 to i64
  %90 = sub i64 %88, %89
  %91 = bitcast %"class.std::__1::unique_ptr.220"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* nonnull align 8 %87, i64 %90, i1 false) #17
  br label %92

92:                                               ; preds = %84, %71
  store i32 %76, i32* %3, align 8
  br label %93

93:                                               ; preds = %92, %52, %45
  %94 = bitcast %"class.std::__1::unique_ptr.220"* %27 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #17
  %95 = load i32, i32* %6, align 4
  br label %96

96:                                               ; preds = %8, %18, %21, %93
  %97 = phi i32 [ %7, %8 ], [ %7, %18 ], [ 0, %21 ], [ %95, %93 ]
  %98 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %98, align 8
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %99, i64 %100
  %102 = getelementptr inbounds %"class.WTF::Deque.215", %"class.WTF::Deque.215"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, -1
  %105 = icmp eq i32 %97, %104
  %106 = add i32 %97, 1
  %107 = select i1 %105, i32 0, i32 %106
  store i32 %107, i32* %6, align 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %1, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.220"* %1 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.220"* %101 to i64*
  store i64 %110, i64* %111, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZNK3WTF16VectorBufferBaseINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS1_14default_deleteIS6_EEEENS_18PartitionAllocatorEE14AllocationSizeEm(i64) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder29VisitPersistentHandleInternalEN2v85LocalINS2_6ObjectEEEt(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, %"class.v8::Object"*, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr.209", align 8
  %7 = alloca %"class.v8::Local", align 8
  %8 = bitcast %"class.v8::Object"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = and i64 %9, -4294967296
  %14 = zext i32 %12 to i64
  %15 = or i64 %13, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load i16, i16* %17, align 2
  switch i16 %18, label %23 [
    i16 1057, label %19
    i16 1056, label %19
    i16 1040, label %19
  ]

19:                                               ; preds = %3, %3, %3
  %20 = add i64 %9, 19
  %21 = inttoptr i64 %20 to i8**
  %22 = load i8*, i8** %21, align 1
  br label %25

23:                                               ; preds = %3
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1, i32 1) #17
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i8* [ %22, %19 ], [ %24, %23 ]
  %27 = bitcast i8* %26 to %"class.blink::ScriptWrappable"*
  %28 = icmp eq i8* %26, null
  br i1 %28, label %188, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 5
  %31 = load %"class.blink::(anonymous namespace)::NodeBuilder"*, %"class.blink::(anonymous namespace)::NodeBuilder"** %30, align 8
  %32 = bitcast %"class.v8::Local"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  %33 = bitcast %"class.v8::Local"* %7 to %"class.v8::Object"**
  store %"class.v8::Object"* %1, %"class.v8::Object"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::NodeBuilder", %"class.blink::(anonymous namespace)::NodeBuilder"* %31, i64 0, i32 0
  %35 = load %"class.v8::EmbedderGraph"*, %"class.v8::EmbedderGraph"** %34, align 8
  %36 = bitcast %"class.v8::EmbedderGraph"* %35 to %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)***
  %37 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)**, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)*** %36, align 8
  %38 = load %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)*, %"class.v8::EmbedderGraph::Node"* (%"class.v8::EmbedderGraph"*, %"class.v8::Local"*)** %37, align 8
  %39 = call %"class.v8::EmbedderGraph::Node"* %38(%"class.v8::EmbedderGraph"* %35, %"class.v8::Local"* nonnull dereferenceable(8) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 3
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %40, align 8
  %42 = icmp eq i16 %2, 1
  br i1 %42, label %43, label %76

43:                                               ; preds = %29
  %44 = load i64, i64* %8, align 8
  %45 = add i64 %44, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i64 %44, -4294967296
  %49 = zext i32 %47 to i64
  %50 = or i64 %48, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load i16, i16* %52, align 2
  switch i16 %53, label %58 [
    i16 1057, label %54
    i16 1056, label %54
    i16 1040, label %54
  ]

54:                                               ; preds = %43, %43, %43
  %55 = add i64 %44, 19
  %56 = inttoptr i64 %55 to i8**
  %57 = load i8*, i8** %56, align 1
  br label %60

58:                                               ; preds = %43
  %59 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %1, i32 1) #17
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi i8* [ %57, %54 ], [ %59, %58 ]
  %62 = bitcast i8* %61 to %"class.blink::Node"*
  %63 = call %"class.blink::Node"* @_ZN5blink14V8GCController15OpaqueRootForGCEPN2v87IsolateEPNS_4NodeE(%"class.v8::Isolate"* %41, %"class.blink::Node"* %62) #17
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 256
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %75, label %68

68:                                               ; preds = %60
  %69 = bitcast i8* %61 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %70 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %70, i64 10
  %72 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %71, align 8
  %73 = call %"class.blink::ExecutionContext"* %72(%"class.blink::Node"* %62) #17
  %74 = icmp eq %"class.blink::ExecutionContext"* %73, null
  br i1 %74, label %75, label %76

75:                                               ; preds = %68, %60
  br label %76

76:                                               ; preds = %29, %68, %75
  %77 = phi i8 [ 0, %29 ], [ 2, %75 ], [ 1, %68 ]
  %78 = load %"class.blink::(anonymous namespace)::NodeBuilder"*, %"class.blink::(anonymous namespace)::NodeBuilder"** %30, align 8
  %79 = bitcast i8* %26 to i8* (%"class.blink::ScriptWrappable"*)***
  %80 = load i8* (%"class.blink::ScriptWrappable"*)**, i8* (%"class.blink::ScriptWrappable"*)*** %79, align 8
  %81 = load i8* (%"class.blink::ScriptWrappable"*)*, i8* (%"class.blink::ScriptWrappable"*)** %80, align 8
  %82 = call i8* %81(%"class.blink::ScriptWrappable"* nonnull %27) #17
  %83 = call fastcc %"class.blink::(anonymous namespace)::EmbedderNode"* @_ZN5blink12_GLOBAL__N_111NodeBuilder9GraphNodeEPKvPKcPN2v813EmbedderGraph4NodeENS8_12DetachednessE(%"class.blink::(anonymous namespace)::NodeBuilder"* %78, i8* nonnull %26, i8* %82, %"class.v8::EmbedderGraph::Node"* %39, i8 zeroext %77)
  %84 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84)
  store i8* %26, i8** %4, align 8
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8
  %86 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %85, i64 0, i32 0, i32 0
  %87 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %86, align 8
  %88 = icmp eq %"struct.WTF::KeyValuePair.193"* %87, null
  %89 = ptrtoint i8* %26 to i64
  br i1 %88, label %151, label %90

90:                                               ; preds = %76
  %91 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, -1
  %94 = zext i32 %93 to i64
  %95 = shl i64 %89, 32
  %96 = xor i64 %95, -1
  %97 = add i64 %96, %89
  %98 = lshr i64 %97, 22
  %99 = xor i64 %98, %97
  %100 = shl i64 %99, 13
  %101 = xor i64 %100, -1
  %102 = add i64 %99, %101
  %103 = lshr i64 %102, 8
  %104 = xor i64 %103, %102
  %105 = mul i64 %104, 9
  %106 = lshr i64 %105, 15
  %107 = xor i64 %106, %105
  %108 = shl i64 %107, 27
  %109 = xor i64 %108, -1
  %110 = add i64 %107, %109
  %111 = lshr i64 %110, 31
  %112 = xor i64 %111, %110
  %113 = trunc i64 %112 to i32
  %114 = and i32 %93, %113
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %87, i64 %115
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %116, i64 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = icmp eq i8* %118, %26
  br i1 %119, label %148, label %120

120:                                              ; preds = %90
  %121 = xor i32 %113, -1
  %122 = lshr i32 %113, 23
  %123 = add i32 %122, %121
  %124 = shl i32 %123, 12
  %125 = xor i32 %124, %123
  %126 = lshr i32 %125, 7
  %127 = xor i32 %126, %125
  %128 = shl i32 %127, 2
  %129 = xor i32 %128, %127
  %130 = lshr i32 %129, 20
  %131 = xor i32 %130, %129
  %132 = or i32 %131, 1
  %133 = zext i32 %132 to i64
  br label %134

134:                                              ; preds = %139, %120
  %135 = phi i8* [ %118, %120 ], [ %146, %139 ]
  %136 = phi i64 [ %115, %120 ], [ %143, %139 ]
  %137 = phi i64 [ 0, %120 ], [ %141, %139 ]
  %138 = icmp eq i8* %135, null
  br i1 %138, label %151, label %139

139:                                              ; preds = %134
  %140 = icmp eq i64 %137, 0
  %141 = select i1 %140, i64 %133, i64 %137
  %142 = add i64 %141, %136
  %143 = and i64 %142, %94
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %87, i64 %143
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %144, i64 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = icmp eq i8* %146, %26
  br i1 %147, label %148, label %134

148:                                              ; preds = %139, %90
  %149 = phi %"struct.WTF::KeyValuePair.193"* [ %116, %90 ], [ %144, %139 ]
  %150 = icmp eq %"struct.WTF::KeyValuePair.193"* %149, null
  br i1 %150, label %151, label %159

151:                                              ; preds = %134, %148, %76
  %152 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #17
  %153 = call noalias i8* @malloc(i64 56) #17
  %154 = bitcast i8* %153 to %"class.blink::(anonymous namespace)::EmbedderNode"**
  store %"class.blink::(anonymous namespace)::EmbedderNode"* %83, %"class.blink::(anonymous namespace)::EmbedderNode"** %154, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 8
  %156 = getelementptr inbounds i8, i8* %153, i64 48
  store i8 0, i8* %156, align 8
  %157 = getelementptr inbounds i8, i8* %153, i64 49
  store i8 0, i8* %157, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 36, i1 false) #17
  %158 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %5 to i8**
  store i8* %153, i8** %158, align 8
  call fastcc void @_ZN3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE6insertIRS2_S7_EENS_18HashTableAddResultINS_9HashTableIS2_NS_12KeyValuePairIS2_S7_EENS_24KeyValuePairKeyExtractorES9_NS_18HashMapValueTraitsISB_SC_EESB_SD_EESK_EEOT_OT0_(%"class.WTF::HashMap.189"* %85, i8** nonnull dereferenceable(8) %4, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** nonnull dereferenceable(8) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #17
  br label %159

159:                                              ; preds = %148, %151
  %160 = call fastcc %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* @_ZNK3WTF7HashMapIPKvPN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateENS_7PtrHashIS1_EENS_10HashTraitsIS2_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS2_(%"class.WTF::HashMap.189"* %85, i8** nonnull dereferenceable(8) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84)
  %161 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %160, i64 0, i32 4
  %162 = load i8, i8* %161, align 8, !range !4
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %188

164:                                              ; preds = %159
  store i8 1, i8* %161, align 8
  %165 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 9
  %166 = bitcast %"class.std::__1::unique_ptr.209"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #17
  %167 = call noalias i8* @malloc(i64 40) #17
  %168 = bitcast i8* %167 to i32 (...)***
  %169 = getelementptr inbounds i8, i8* %167, i64 8
  %170 = bitcast i8* %169 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"**
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %170, align 8
  %171 = getelementptr inbounds i8, i8* %167, i64 16
  %172 = bitcast i8* %171 to %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"**
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"* %160, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %172, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder14VisitationItemE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %168, align 8
  %173 = getelementptr inbounds i8, i8* %167, i64 24
  %174 = bitcast i8* %173 to i8**
  store i8* %26, i8** %174, align 8
  %175 = getelementptr inbounds i8, i8* %167, i64 32
  %176 = bitcast i8* %175 to void (%"class.blink::Visitor"*, i8*)**
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::Visitor"*, i8*)** %176, align 8
  %177 = ptrtoint i8* %167 to i64
  %178 = bitcast %"class.std::__1::unique_ptr.209"* %6 to i64*
  store i64 %177, i64* %178, align 8
  call fastcc void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE9push_backIS9_EEvOT_(%"class.WTF::Deque.204"* %165, %"class.std::__1::unique_ptr.209"* nonnull dereferenceable(8) %6) #17
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %6, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %179, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %179, align 8
  %181 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %180, null
  br i1 %181, label %187, label %182

182:                                              ; preds = %164
  %183 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %180 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)***
  %184 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %184, i64 1
  %186 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %185, align 8
  call void %186(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nonnull %180) #17
  br label %187

187:                                              ; preds = %164, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #17
  br label %188

188:                                              ; preds = %159, %187, %25
  ret void
}

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink14V8GCController15OpaqueRootForGCEPN2v87IsolateEPNS_4NodeE(%"class.v8::Isolate"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZN2v87Isolate24VisitHandlesWithClassIdsEPNS_23PersistentHandleVisitorE(%"class.v8::Isolate"*, %"class.v8::PersistentHandleVisitor"*) local_unnamed_addr #1

declare void @_ZN2v818EmbedderHeapTracer26IterateTracedGlobalHandlesEPNS0_25TracedGlobalHandleVisitorE(%"class.v8::EmbedderHeapTracer"*, %"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder15EnsureRootStateEPNS0_12EmbedderNodeE(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* nocapture, %"class.blink::(anonymous namespace)::EmbedderNode"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = ptrtoint %"class.blink::(anonymous namespace)::EmbedderNode"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.193"* %7, null
  br i1 %8, label %74, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  %14 = shl i64 %4, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %4
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %7, i64 %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %35, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.blink::(anonymous namespace)::EmbedderNode"* %1 to i8*
  %39 = icmp eq i8* %37, %38
  br i1 %39, label %68, label %40

40:                                               ; preds = %9
  %41 = xor i32 %32, -1
  %42 = lshr i32 %32, 23
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %59, %40
  %55 = phi i8* [ %37, %40 ], [ %66, %59 ]
  %56 = phi i64 [ %34, %40 ], [ %63, %59 ]
  %57 = phi i64 [ 0, %40 ], [ %61, %59 ]
  %58 = icmp eq i8* %55, null
  br i1 %58, label %74, label %59

59:                                               ; preds = %54
  %60 = icmp eq i64 %57, 0
  %61 = select i1 %60, i64 %53, i64 %57
  %62 = add i64 %61, %56
  %63 = and i64 %62, %13
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %7, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %64, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, %38
  br i1 %67, label %68, label %54

68:                                               ; preds = %59, %9
  %69 = phi %"struct.WTF::KeyValuePair.193"* [ %35, %9 ], [ %64, %59 ]
  %70 = icmp eq %"struct.WTF::KeyValuePair.193"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 384, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0)) #17
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #17
  br label %74

74:                                               ; preds = %54, %68, %2, %71
  %75 = call noalias i8* @malloc(i64 56) #17
  %76 = bitcast i8* %75 to %"class.blink::(anonymous namespace)::EmbedderNode"**
  store %"class.blink::(anonymous namespace)::EmbedderNode"* %1, %"class.blink::(anonymous namespace)::EmbedderNode"** %76, align 8
  %77 = getelementptr inbounds i8, i8* %75, i64 8
  %78 = getelementptr inbounds i8, i8* %75, i64 48
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds i8, i8* %75, i64 49
  store i8 0, i8* %79, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 36, i1 false) #17
  %80 = ptrtoint i8* %75 to i64
  %81 = getelementptr inbounds %"class.WTF::HashMap.189", %"class.WTF::HashMap.189"* %5, i64 0, i32 0
  %82 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %6, align 8
  %83 = icmp eq %"struct.WTF::KeyValuePair.193"* %82, null
  br i1 %83, label %84, label %87

84:                                               ; preds = %74
  %85 = call fastcc %"struct.WTF::KeyValuePair.193"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.190"* %81, %"struct.WTF::KeyValuePair.193"* null) #17
  %86 = load %"struct.WTF::KeyValuePair.193"*, %"struct.WTF::KeyValuePair.193"** %6, align 8
  br label %87

87:                                               ; preds = %84, %74
  %88 = phi %"struct.WTF::KeyValuePair.193"* [ %82, %74 ], [ %86, %84 ]
  %89 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, -1
  %92 = zext i32 %91 to i64
  %93 = shl i64 %4, 32
  %94 = xor i64 %93, -1
  %95 = add i64 %94, %4
  %96 = lshr i64 %95, 22
  %97 = xor i64 %96, %95
  %98 = shl i64 %97, 13
  %99 = xor i64 %98, -1
  %100 = add i64 %97, %99
  %101 = lshr i64 %100, 8
  %102 = xor i64 %101, %100
  %103 = mul i64 %102, 9
  %104 = lshr i64 %103, 15
  %105 = xor i64 %104, %103
  %106 = shl i64 %105, 27
  %107 = xor i64 %106, -1
  %108 = add i64 %105, %107
  %109 = lshr i64 %108, 31
  %110 = xor i64 %109, %108
  %111 = trunc i64 %110 to i32
  %112 = and i32 %91, %111
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %88, i64 %113
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %114, i64 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = icmp eq i8* %116, null
  %118 = bitcast %"class.blink::(anonymous namespace)::EmbedderNode"* %1 to i8*
  br i1 %117, label %161, label %119

119:                                              ; preds = %87
  %120 = xor i32 %111, -1
  %121 = lshr i32 %111, 23
  %122 = add i32 %121, %120
  %123 = shl i32 %122, 12
  %124 = xor i32 %123, %122
  %125 = lshr i32 %124, 7
  %126 = xor i32 %125, %124
  %127 = shl i32 %126, 2
  %128 = xor i32 %127, %126
  %129 = lshr i32 %128, 20
  %130 = xor i32 %129, %128
  %131 = or i32 %130, 1
  %132 = zext i32 %131 to i64
  br label %133

133:                                              ; preds = %140, %119
  %134 = phi i8* [ %116, %119 ], [ %149, %140 ]
  %135 = phi %"struct.WTF::KeyValuePair.193"* [ %114, %119 ], [ %147, %140 ]
  %136 = phi %"struct.WTF::KeyValuePair.193"* [ null, %119 ], [ %142, %140 ]
  %137 = phi i64 [ %113, %119 ], [ %146, %140 ]
  %138 = phi i64 [ 0, %119 ], [ %144, %140 ]
  %139 = icmp eq i8* %134, %118
  br i1 %139, label %177, label %140

140:                                              ; preds = %133
  %141 = icmp eq i8* %134, inttoptr (i64 -1 to i8*)
  %142 = select i1 %141, %"struct.WTF::KeyValuePair.193"* %135, %"struct.WTF::KeyValuePair.193"* %136
  %143 = icmp eq i64 %138, 0
  %144 = select i1 %143, i64 %132, i64 %138
  %145 = add i64 %144, %137
  %146 = and i64 %145, %92
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %88, i64 %146
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %147, i64 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = icmp eq i8* %149, null
  br i1 %150, label %151, label %133

151:                                              ; preds = %140
  %152 = icmp eq %"struct.WTF::KeyValuePair.193"* %142, null
  br i1 %152, label %161, label %153

153:                                              ; preds = %151
  %154 = bitcast %"struct.WTF::KeyValuePair.193"* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 16, i1 false) #17
  %155 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = add i32 %156, 2147483647
  %158 = and i32 %157, 2147483647
  %159 = and i32 %156, -2147483648
  %160 = or i32 %158, %159
  store i32 %160, i32* %155, align 8
  br label %161

161:                                              ; preds = %153, %151, %87
  %162 = phi %"struct.WTF::KeyValuePair.193"* [ %142, %153 ], [ %147, %151 ], [ %114, %87 ]
  %163 = bitcast %"struct.WTF::KeyValuePair.193"* %162 to i64*
  store i64 %4, i64* %163, align 8
  %164 = getelementptr inbounds %"struct.WTF::KeyValuePair.193", %"struct.WTF::KeyValuePair.193"* %162, i64 0, i32 1
  %165 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::State"** %164 to i64*
  store i64 %80, i64* %165, align 8
  %166 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = add i32 %167, 1
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder", %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder"* %0, i64 0, i32 8, i32 0, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = add i32 %170, %168
  %172 = shl i32 %171, 1
  %173 = load i32, i32* %89, align 8
  %174 = icmp ult i32 %172, %173
  br i1 %174, label %177, label %175

175:                                              ; preds = %161
  %176 = call fastcc %"struct.WTF::KeyValuePair.193"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder5StateEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.190"* %81, %"struct.WTF::KeyValuePair.193"* %162) #17
  br label %177

177:                                              ; preds = %133, %161, %175
  ret void
}

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112EmbedderNodeD2Ev(%"class.blink::(anonymous namespace)::EmbedderNode"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112EmbedderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.181"*, %"class.std::__1::unique_ptr.181"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.181"* %5, null
  br i1 %6, label %29, label %7, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.181"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderNode", %"class.blink::(anonymous namespace)::EmbedderNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.std::__1::unique_ptr.181"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8* null, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  tail call void @_ZdaPv(i8* nonnull %18) #18
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %16, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr.181"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.178"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #17
  store %"class.std::__1::unique_ptr.181"* null, %"class.std::__1::unique_ptr.181"** %4, align 8
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116EmbedderRootNodeD0Ev(%"class.blink::(anonymous namespace)::EmbedderRootNode"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderRootNode", %"class.blink::(anonymous namespace)::EmbedderRootNode"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112EmbedderNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderRootNode", %"class.blink::(anonymous namespace)::EmbedderRootNode"* %0, i64 0, i32 0, i32 4
  %4 = getelementptr inbounds %"class.WTF::Vector.178", %"class.WTF::Vector.178"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.181"*, %"class.std::__1::unique_ptr.181"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.181"* %5, null
  br i1 %6, label %29, label %7, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.181"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::EmbedderRootNode", %"class.blink::(anonymous namespace)::EmbedderRootNode"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.std::__1::unique_ptr.181"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8* null, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  tail call void @_ZdaPv(i8* nonnull %18) #18
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181"* %16, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr.181"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.178"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #17
  br label %29

29:                                               ; preds = %1, %27
  %30 = bitcast %"class.blink::(anonymous namespace)::EmbedderRootNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_116EmbedderRootNode10IsRootNodeEv(%"class.blink::(anonymous namespace)::EmbedderRootNode"* nocapture readnone) unnamed_addr #15 align 2 {
  ret i1 true
}

declare void @_ZN5blink20PersistentRegionBase14TraceNodesImplEPNS_7VisitorEPFbS2_PNS_14PersistentNodeEE(%"class.blink::PersistentRegionBase"*, %"class.blink::Visitor"*, i1 (%"class.blink::Visitor"*, %"class.blink::PersistentNode"*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16PersistentRegion25ShouldTracePersistentNodeEPNS_7VisitorEPNS_14PersistentNodeE(%"class.blink::Visitor"*, %"class.blink::PersistentNode"*) #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink27CrossThreadPersistentRegion25ShouldTracePersistentNodeEPNS_7VisitorEPNS_14PersistentNodeE(%"class.blink::Visitor"*, %"class.blink::PersistentNode"*) #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZN5blink28ActiveScriptWrappableManager29IterateActiveScriptWrappablesEPNS_7VisitorE(%"class.blink::ActiveScriptWrappableManager"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder13EphemeronItemENS2_14default_deleteIS7_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.216"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.216"* %0 to %"class.std::__1::unique_ptr.220"**
  %3 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr.220"* %3, null
  br i1 %4, label %70, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.216", %"class.WTF::ConditionalDestructor.216"* %0, i64 16
  %7 = bitcast %"class.WTF::ConditionalDestructor.216"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::ConditionalDestructor.216", %"class.WTF::ConditionalDestructor.216"* %0, i64 20
  %10 = bitcast %"class.WTF::ConditionalDestructor.216"* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %67, label %13

13:                                               ; preds = %5
  %14 = icmp ugt i32 %8, %11
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %3, i64 %15
  br i1 %14, label %30, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %3, i64 %18
  br label %20

20:                                               ; preds = %27, %17
  %21 = phi %"class.std::__1::unique_ptr.220"* [ %28, %27 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %22, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %22, align 8
  %24 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %21, i64 1
  %29 = icmp eq %"class.std::__1::unique_ptr.220"* %28, %16
  br i1 %29, label %67, label %20

30:                                               ; preds = %13
  %31 = icmp eq i32 %11, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %30, %39
  %33 = phi %"class.std::__1::unique_ptr.220"* [ %40, %39 ], [ %3, %30 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %34, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %34, align 8
  %36 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %33, i64 1
  %41 = icmp eq %"class.std::__1::unique_ptr.220"* %40, %16
  br i1 %41, label %42, label %32

42:                                               ; preds = %39
  %43 = load %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"** %2, align 8
  %44 = load i32, i32* %7, align 8
  br label %45

45:                                               ; preds = %42, %30
  %46 = phi i32 [ %44, %42 ], [ %8, %30 ]
  %47 = phi %"class.std::__1::unique_ptr.220"* [ %43, %42 ], [ %3, %30 ]
  %48 = getelementptr inbounds %"class.WTF::ConditionalDestructor.216", %"class.WTF::ConditionalDestructor.216"* %0, i64 8
  %49 = bitcast %"class.WTF::ConditionalDestructor.216"* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %47, i64 %51
  %53 = icmp eq i32 %46, %50
  br i1 %53, label %67, label %54

54:                                               ; preds = %45
  %55 = zext i32 %46 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %47, i64 %55
  br label %57

57:                                               ; preds = %64, %54
  %58 = phi %"class.std::__1::unique_ptr.220"* [ %65, %64 ], [ %56, %54 ]
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %59, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"** %59, align 8
  %61 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::EphemeronItem"* %60 to i8*
  tail call void @_ZdlPv(i8* %63) #18
  br label %64

64:                                               ; preds = %62, %57
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %58, i64 1
  %66 = icmp eq %"class.std::__1::unique_ptr.220"* %65, %52
  br i1 %66, label %67, label %57

67:                                               ; preds = %27, %64, %45, %5
  %68 = bitcast %"class.WTF::ConditionalDestructor.216"* %0 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #17
  store %"class.std::__1::unique_ptr.220"* null, %"class.std::__1::unique_ptr.220"** %2, align 8
  br label %70

70:                                               ; preds = %1, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink12_GLOBAL__N_122V8EmbedderGraphBuilder16WorklistItemBaseENS2_14default_deleteIS7_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.205"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.205"* %0 to %"class.std::__1::unique_ptr.209"**
  %3 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr.209"* %3, null
  br i1 %4, label %79, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.205", %"class.WTF::ConditionalDestructor.205"* %0, i64 16
  %7 = bitcast %"class.WTF::ConditionalDestructor.205"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::ConditionalDestructor.205", %"class.WTF::ConditionalDestructor.205"* %0, i64 20
  %10 = bitcast %"class.WTF::ConditionalDestructor.205"* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %76, label %13

13:                                               ; preds = %5
  %14 = icmp ugt i32 %8, %11
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %3, i64 %15
  br i1 %14, label %33, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %3, i64 %18
  br label %20

20:                                               ; preds = %30, %17
  %21 = phi %"class.std::__1::unique_ptr.209"* [ %31, %30 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %22, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %22, align 8
  %24 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %23 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)***
  %27 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %27, i64 1
  %29 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %28, align 8
  tail call void %29(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nonnull %23) #17
  br label %30

30:                                               ; preds = %25, %20
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %21, i64 1
  %32 = icmp eq %"class.std::__1::unique_ptr.209"* %31, %16
  br i1 %32, label %76, label %20

33:                                               ; preds = %13
  %34 = icmp eq i32 %11, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %33, %45
  %36 = phi %"class.std::__1::unique_ptr.209"* [ %46, %45 ], [ %3, %33 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %37, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %37, align 8
  %39 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %38 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)***
  %42 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %42, i64 1
  %44 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %43, align 8
  tail call void %44(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nonnull %38) #17
  br label %45

45:                                               ; preds = %40, %35
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %36, i64 1
  %47 = icmp eq %"class.std::__1::unique_ptr.209"* %46, %16
  br i1 %47, label %48, label %35

48:                                               ; preds = %45
  %49 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %2, align 8
  %50 = load i32, i32* %7, align 8
  br label %51

51:                                               ; preds = %48, %33
  %52 = phi i32 [ %50, %48 ], [ %8, %33 ]
  %53 = phi %"class.std::__1::unique_ptr.209"* [ %49, %48 ], [ %3, %33 ]
  %54 = getelementptr inbounds %"class.WTF::ConditionalDestructor.205", %"class.WTF::ConditionalDestructor.205"* %0, i64 8
  %55 = bitcast %"class.WTF::ConditionalDestructor.205"* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %53, i64 %57
  %59 = icmp eq i32 %52, %56
  br i1 %59, label %76, label %60

60:                                               ; preds = %51
  %61 = zext i32 %52 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %53, i64 %61
  br label %63

63:                                               ; preds = %73, %60
  %64 = phi %"class.std::__1::unique_ptr.209"* [ %74, %73 ], [ %62, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %65, align 8
  store %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* null, %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"** %65, align 8
  %67 = icmp eq %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* %66 to void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)***
  %70 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)**, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %70, i64 1
  %72 = load void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)*, void (%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"*)** %71, align 8
  tail call void %72(%"class.blink::(anonymous namespace)::V8EmbedderGraphBuilder::WorklistItemBase"* nonnull %66) #17
  br label %73

73:                                               ; preds = %68, %63
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %64, i64 1
  %75 = icmp eq %"class.std::__1::unique_ptr.209"* %74, %58
  br i1 %75, label %76, label %63

76:                                               ; preds = %30, %73, %51, %5
  %77 = bitcast %"class.WTF::ConditionalDestructor.205"* %0 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %78) #17
  store %"class.std::__1::unique_ptr.209"* null, %"class.std::__1::unique_ptr.209"** %2, align 8
  br label %79

79:                                               ; preds = %1, %76
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
