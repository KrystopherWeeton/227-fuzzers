; ModuleID = '../../third_party/ffmpeg/libavformat/id3v2.c'
source_filename = "../../third_party/ffmpeg/libavformat/id3v2.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVMetadataConv = type { i8*, i8* }
%struct.CodecMime = type { [32 x i8], i32 }
%struct.ID3v2EMFunc = type { i8*, i8*, void (%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8*, %struct.ID3v2ExtraMeta**, i32)*, void (i8*)* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.ID3v2ExtraMeta = type { i8*, %struct.ID3v2ExtraMeta*, %union.anon }
%union.anon = type { %struct.ID3v2ExtraMetaGEOB }
%struct.ID3v2ExtraMetaGEOB = type { i32, i8*, i8*, i8*, i8* }
%union.unaligned_32 = type { i32 }
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.ID3v2ExtraMetaCHAP = type { i8*, i32, i32, %struct.AVDictionary* }
%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }

@.str = private unnamed_addr constant [5 x i8] c"TALB\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"album\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"TCOM\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"composer\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"TCON\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"genre\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"TCOP\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"copyright\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"TENC\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"encoded_by\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"TIT2\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"TLAN\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"TPE1\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"artist\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"TPE2\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"album_artist\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"TPE3\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"performer\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"TPOS\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"disc\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"TPUB\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"publisher\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"TRCK\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"track\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"TSSE\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"encoder\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"USLT\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"lyrics\00", align 1
@ff_id3v2_34_metadata_conv = hidden constant [16 x %struct.AVMetadataConv] [%struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0) }, %struct.AVMetadataConv zeroinitializer], align 16
@.str.30 = private unnamed_addr constant [5 x i8] c"TCMP\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"compilation\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"TDRC\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"TDRL\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"TDEN\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"creation_time\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"TSOA\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"album-sort\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"TSOP\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"artist-sort\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"TSOT\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"title-sort\00", align 1
@ff_id3v2_4_metadata_conv = hidden constant [8 x %struct.AVMetadataConv] [%struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0) }, %struct.AVMetadataConv zeroinitializer], align 16
@ff_id3v2_tags = hidden local_unnamed_addr constant [33 x [4 x i8]] [[4 x i8] c"TALB", [4 x i8] c"TBPM", [4 x i8] c"TCOM", [4 x i8] c"TCON", [4 x i8] c"TCOP", [4 x i8] c"TDLY", [4 x i8] c"TENC", [4 x i8] c"TEXT", [4 x i8] c"TFLT", [4 x i8] c"TIT1", [4 x i8] c"TIT2", [4 x i8] c"TIT3", [4 x i8] c"TKEY", [4 x i8] c"TLAN", [4 x i8] c"TLEN", [4 x i8] c"TMED", [4 x i8] c"TOAL", [4 x i8] c"TOFN", [4 x i8] c"TOLY", [4 x i8] c"TOPE", [4 x i8] c"TOWN", [4 x i8] c"TPE1", [4 x i8] c"TPE2", [4 x i8] c"TPE3", [4 x i8] c"TPE4", [4 x i8] c"TPOS", [4 x i8] c"TPUB", [4 x i8] c"TRCK", [4 x i8] c"TRSN", [4 x i8] c"TRSO", [4 x i8] c"TSRC", [4 x i8] c"TSSE", [4 x i8] zeroinitializer], align 16
@ff_id3v2_4_tags = hidden local_unnamed_addr constant [14 x [4 x i8]] [[4 x i8] c"TDEN", [4 x i8] c"TDOR", [4 x i8] c"TDRC", [4 x i8] c"TDRL", [4 x i8] c"TDTG", [4 x i8] c"TIPL", [4 x i8] c"TMCL", [4 x i8] c"TMOO", [4 x i8] c"TPRO", [4 x i8] c"TSOA", [4 x i8] c"TSOP", [4 x i8] c"TSOT", [4 x i8] c"TSST", [4 x i8] zeroinitializer], align 16
@ff_id3v2_3_tags = hidden local_unnamed_addr constant [7 x [4 x i8]] [[4 x i8] c"TDAT", [4 x i8] c"TIME", [4 x i8] c"TORY", [4 x i8] c"TRDA", [4 x i8] c"TSIZ", [4 x i8] c"TYER", [4 x i8] zeroinitializer], align 16
@.str.43 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"32x32 pixels 'file icon'\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"Other file icon\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"Cover (front)\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"Cover (back)\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"Leaflet page\00", align 1
@.str.49 = private unnamed_addr constant [30 x i8] c"Media (e.g. label side of CD)\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"Lead artist/lead performer/soloist\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"Artist/performer\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"Conductor\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"Band/Orchestra\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"Composer\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"Lyricist/text writer\00", align 1
@.str.56 = private unnamed_addr constant [19 x i8] c"Recording Location\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"During recording\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"During performance\00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"Movie/video screen capture\00", align 1
@.str.60 = private unnamed_addr constant [23 x i8] c"A bright coloured fish\00", align 1
@.str.61 = private unnamed_addr constant [13 x i8] c"Illustration\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"Band/artist logotype\00", align 1
@.str.63 = private unnamed_addr constant [26 x i8] c"Publisher/Studio logotype\00", align 1
@ff_id3v2_picture_types = hidden local_unnamed_addr constant [21 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.63, i32 0, i32 0)], align 16
@ff_id3v2_mime_tags = hidden constant [9 x %struct.CodecMime] [%struct.CodecMime { [32 x i8] c"image/gif\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 97 }, %struct.CodecMime { [32 x i8] c"image/jpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 7 }, %struct.CodecMime { [32 x i8] c"image/jpg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 7 }, %struct.CodecMime { [32 x i8] c"image/png\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 61 }, %struct.CodecMime { [32 x i8] c"image/tiff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 96 }, %struct.CodecMime { [32 x i8] c"image/bmp\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 78 }, %struct.CodecMime { [32 x i8] c"JPG\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 7 }, %struct.CodecMime { [32 x i8] c"PNG\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 61 }, %struct.CodecMime zeroinitializer], align 16
@.str.64 = private unnamed_addr constant [5 x i8] c"APIC\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"CHAP\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"PRIV\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"id3v2_priv.%s\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"\5Cx%02x\00", align 1
@id3v2_2_metadata_conv = internal constant [10 x %struct.AVMetadataConv] [%struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0) }, %struct.AVMetadataConv { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0) }, %struct.AVMetadataConv zeroinitializer], align 16
@.str.70 = private unnamed_addr constant [32 x i8] c"id3v2 ver:%d flags:%02X len:%d\0A\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"compression\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"COM\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"COMM\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.75 = private unnamed_addr constant [31 x i8] c"invalid extended header length\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"extended header too long.\00", align 1
@.str.77 = private unnamed_addr constant [35 x i8] c"Invalid empty frame %s, skipping.\0A\00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"encrypted\00", align 1
@.str.79 = private unnamed_addr constant [11 x i8] c"compressed\00", align 1
@.str.80 = private unnamed_addr constant [25 x i8] c"encrypted and compressed\00", align 1
@.str.81 = private unnamed_addr constant [29 x i8] c"Skipping %s ID3v2 frame %s.\0A\00", align 1
@.str.82 = private unnamed_addr constant [26 x i8] c"Failed to alloc %d bytes\0A\00", align 1
@.str.83 = private unnamed_addr constant [25 x i8] c"Failed to read tag data\0A\00", align 1
@.str.84 = private unnamed_addr constant [36 x i8] c"invalid frame id, assuming padding\0A\00", align 1
@.str.85 = private unnamed_addr constant [40 x i8] c"ID3v2.%d tag skipped, cannot handle %s\0A\00", align 1
@.str.86 = private unnamed_addr constant [33 x i8] c"Error reading frame %s, skipped\0A\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"TCO\00", align 1
@.str.88 = private unnamed_addr constant [5 x i8] c"(%d)\00", align 1
@.str.89 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@ff_id3v1_genre_str = external local_unnamed_addr constant [192 x i8*], align 16
@.str.90 = private unnamed_addr constant [5 x i8] c"TXXX\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"TXX\00", align 1
@.str.92 = private unnamed_addr constant [29 x i8] c"Error opening memory stream\0A\00", align 1
@.str.93 = private unnamed_addr constant [40 x i8] c"Cannot read BOM value, input too short\0A\00", align 1
@.str.94 = private unnamed_addr constant [21 x i8] c"Incorrect BOM value\0A\00", align 1
@.str.95 = private unnamed_addr constant [18 x i8] c"Unknown encoding\0A\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"lyrics-%s%s%s\00", align 1
@.str.97 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.98 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.99 = private unnamed_addr constant [31 x i8] c"Error reading lyrics, skipped\0A\00", align 1
@.str.100 = private unnamed_addr constant [38 x i8] c"Error reading comment frame, skipped\0A\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"TAL\00", align 1
@.str.102 = private unnamed_addr constant [4 x i8] c"TCP\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"TT2\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"TEN\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"TP1\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"TP2\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"TP3\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"TRK\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"TYER\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"TYE\00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"TDAT\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"TDA\00", align 1
@.str.113 = private unnamed_addr constant [11 x i8] c"-%.2s-%.2s\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"TIME\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"TIM\00", align 1
@.str.116 = private unnamed_addr constant [11 x i8] c" %.2s:%.2s\00", align 1
@id3v2_extra_meta_funcs = internal unnamed_addr constant [5 x %struct.ID3v2EMFunc] [%struct.ID3v2EMFunc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i32 0, i32 0), void (%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8*, %struct.ID3v2ExtraMeta**, i32)* @read_geobtag, void (i8*)* @free_geobtag }, %struct.ID3v2EMFunc { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), void (%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8*, %struct.ID3v2ExtraMeta**, i32)* @read_apic, void (i8*)* @free_apic }, %struct.ID3v2EMFunc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), void (%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8*, %struct.ID3v2ExtraMeta**, i32)* @read_chapter, void (i8*)* @free_chapter }, %struct.ID3v2EMFunc { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), void (%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8*, %struct.ID3v2ExtraMeta**, i32)* @read_priv, void (i8*)* @free_priv }, %struct.ID3v2EMFunc zeroinitializer], align 16
@.str.117 = private unnamed_addr constant [4 x i8] c"GEO\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"GEOB\00", align 1
@.str.119 = private unnamed_addr constant [4 x i8] c"PIC\00", align 1
@.str.120 = private unnamed_addr constant [27 x i8] c"Failed to alloc %zu bytes\0A\00", align 1
@.str.121 = private unnamed_addr constant [43 x i8] c"Error reading GEOB frame, data truncated.\0A\00", align 1
@.str.122 = private unnamed_addr constant [50 x i8] c"Unknown attached picture mimetype: %s, skipping.\0A\00", align 1
@.str.123 = private unnamed_addr constant [35 x i8] c"Unknown attached picture type %d.\0A\00", align 1
@.str.124 = private unnamed_addr constant [46 x i8] c"Error decoding attached picture description.\0A\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ff_id3v2_match(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = load i8, i8* %0, align 1
  %4 = zext i8 %3 to i32
  %5 = load i8, i8* %1, align 1
  %6 = sext i8 %5 to i32
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %50

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %0, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds i8, i8* %1, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = icmp eq i32 %11, %14
  br i1 %15, label %16, label %50

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %0, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds i8, i8* %1, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %24, label %50

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %0, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, -1
  br i1 %27, label %50, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %0, i64 4
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, -1
  br i1 %31, label %50, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %0, i64 6
  %34 = load i8, i8* %33, align 1
  %35 = icmp sgt i8 %34, -1
  br i1 %35, label %36, label %50

36:                                               ; preds = %32
  %37 = getelementptr inbounds i8, i8* %0, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = icmp sgt i8 %38, -1
  br i1 %39, label %40, label %50

40:                                               ; preds = %36
  %41 = getelementptr inbounds i8, i8* %0, i64 8
  %42 = load i8, i8* %41, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = getelementptr inbounds i8, i8* %0, i64 9
  %46 = load i8, i8* %45, align 1
  %47 = lshr i8 %46, 7
  %48 = xor i8 %47, 1
  %49 = zext i8 %48 to i32
  br label %50

50:                                               ; preds = %28, %24, %44, %40, %36, %32, %16, %8, %2
  %51 = phi i32 [ 0, %40 ], [ 0, %36 ], [ 0, %32 ], [ 0, %28 ], [ 0, %24 ], [ 0, %16 ], [ 0, %8 ], [ 0, %2 ], [ %49, %44 ]
  ret i32 %51
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ff_id3v2_tag_len(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 6
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 127
  %5 = zext i8 %4 to i32
  %6 = shl nuw nsw i32 %5, 21
  %7 = getelementptr inbounds i8, i8* %0, i64 7
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 127
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 14
  %12 = or i32 %11, %6
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, 127
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 7
  %18 = or i32 %12, %17
  %19 = getelementptr inbounds i8, i8* %0, i64 9
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, 127
  %22 = zext i8 %21 to i32
  %23 = or i32 %18, %22
  %24 = getelementptr inbounds i8, i8* %0, i64 5
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 16
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i32 10, i32 20
  %29 = add nuw nsw i32 %23, %28
  ret i32 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_id3v2_read_dict(%struct.AVIOContext*, %struct.AVDictionary**, i8* nocapture readonly, %struct.ID3v2ExtraMeta**) local_unnamed_addr #2 {
  tail call fastcc void @id3v2_read_internal(%struct.AVIOContext* %0, %struct.AVDictionary** %1, %struct.AVFormatContext* null, i8* %2, %struct.ID3v2ExtraMeta** %3, i64 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @id3v2_read_internal(%struct.AVIOContext*, %struct.AVDictionary**, %struct.AVFormatContext*, i8* nocapture readonly, %struct.ID3v2ExtraMeta**, i64) unnamed_addr #2 {
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %union.unaligned_32, align 4
  %15 = alloca %union.unaligned_32, align 4
  %16 = alloca [5 x i8], align 1
  %17 = alloca %struct.AVIOContext, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca [17 x i8], align 16
  %21 = alloca [10 x i8], align 1
  %22 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %22) #9
  %23 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 1
  %24 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 2
  %25 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 3
  %26 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 4
  %27 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 5
  %28 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 6
  %29 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 7
  %30 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 8
  %31 = getelementptr inbounds [10 x i8], [10 x i8]* %21, i64 0, i64 9
  %32 = icmp ne i64 %5, 0
  %33 = icmp slt i64 %5, 10
  %34 = and i1 %32, %33
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %22, i8 -86, i64 10, i1 false)
  br i1 %34, label %622, label %35

35:                                               ; preds = %6
  %36 = tail call i64 @avio_seek(%struct.AVIOContext* %0, i64 0, i32 1) #9
  %37 = add nsw i64 %5, -10
  %38 = getelementptr inbounds i8, i8* %3, i64 1
  %39 = getelementptr inbounds i8, i8* %3, i64 2
  %40 = getelementptr inbounds [5 x i8], [5 x i8]* %16, i64 0, i64 0
  %41 = getelementptr inbounds [5 x i8], [5 x i8]* %16, i64 0, i64 1
  %42 = getelementptr inbounds [5 x i8], [5 x i8]* %16, i64 0, i64 3
  %43 = getelementptr inbounds [5 x i8], [5 x i8]* %16, i64 0, i64 4
  %44 = bitcast %struct.AVIOContext* %17 to i8*
  %45 = bitcast i8** %18 to i8*
  %46 = bitcast i32* %19 to i8*
  %47 = bitcast %struct.AVFormatContext* %2 to i8*
  %48 = bitcast %union.unaligned_32* %15 to i8*
  %49 = getelementptr inbounds %union.unaligned_32, %union.unaligned_32* %15, i64 0, i32 0
  %50 = bitcast %union.unaligned_32* %14 to i8*
  %51 = getelementptr inbounds %union.unaligned_32, %union.unaligned_32* %14, i64 0, i32 0
  %52 = icmp eq %struct.ID3v2ExtraMeta** %4, null
  %53 = bitcast i8** %18 to i64*
  %54 = bitcast i32* %7 to i8*
  %55 = bitcast i8** %8 to i8*
  %56 = bitcast i8** %9 to i8*
  %57 = bitcast i32* %10 to i8*
  %58 = bitcast i32* %11 to [4 x i8]*
  %59 = bitcast i32* %11 to i8*
  %60 = getelementptr inbounds [4 x i8], [4 x i8]* %58, i64 0, i64 3
  %61 = bitcast i8** %12 to i8*
  %62 = bitcast i8** %13 to i8*
  %63 = xor i1 %32, true
  %64 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 0, i32 1) #9
  %65 = sub nsw i64 %64, %36
  %66 = icmp slt i64 %65, %37
  %67 = or i1 %66, %63
  br i1 %67, label %68, label %494

68:                                               ; preds = %35
  %69 = getelementptr inbounds i8, i8* %48, i64 3
  %70 = getelementptr inbounds i8, i8* %48, i64 2
  %71 = getelementptr inbounds i8, i8* %48, i64 1
  %72 = getelementptr inbounds i8, i8* %50, i64 3
  %73 = getelementptr inbounds i8, i8* %50, i64 2
  %74 = getelementptr inbounds i8, i8* %50, i64 1
  br label %75

75:                                               ; preds = %68, %486
  %76 = phi i64 [ %490, %486 ], [ %64, %68 ]
  %77 = call i32 @ffio_ensure_seekback(%struct.AVIOContext* %0, i64 10) #9
  %78 = icmp sgt i32 %77, -1
  br i1 %78, label %79, label %494

79:                                               ; preds = %75
  %80 = call i32 @avio_read(%struct.AVIOContext* %0, i8* nonnull %22, i32 10) #9
  %81 = icmp eq i32 %80, 10
  br i1 %81, label %82, label %494

82:                                               ; preds = %79
  %83 = load i8, i8* %22, align 1
  %84 = zext i8 %83 to i32
  %85 = load i8, i8* %3, align 1
  %86 = sext i8 %85 to i32
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %88, label %494

88:                                               ; preds = %82
  %89 = load i8, i8* %23, align 1
  %90 = zext i8 %89 to i32
  %91 = load i8, i8* %38, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %94, label %494

94:                                               ; preds = %88
  %95 = load i8, i8* %24, align 1
  %96 = zext i8 %95 to i32
  %97 = load i8, i8* %39, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp ne i32 %96, %98
  %100 = load i8, i8* %25, align 1
  %101 = icmp eq i8 %100, -1
  %102 = or i1 %99, %101
  %103 = load i8, i8* %26, align 1
  %104 = icmp eq i8 %103, -1
  %105 = or i1 %102, %104
  %106 = xor i1 %105, true
  %107 = load i8, i8* %28, align 1
  %108 = load i8, i8* %29, align 1
  %109 = or i8 %107, %108
  %110 = load i8, i8* %30, align 1
  %111 = or i8 %109, %110
  %112 = icmp sgt i8 %111, -1
  %113 = and i1 %112, %106
  br i1 %113, label %114, label %494

114:                                              ; preds = %94
  %115 = load i8, i8* %31, align 1
  %116 = icmp sgt i8 %115, -1
  br i1 %116, label %117, label %494

117:                                              ; preds = %114
  %118 = and i8 %107, 127
  %119 = zext i8 %118 to i32
  %120 = shl nuw nsw i32 %119, 21
  %121 = and i8 %108, 127
  %122 = zext i8 %121 to i32
  %123 = shl nuw nsw i32 %122, 14
  %124 = or i32 %123, %120
  %125 = and i8 %110, 127
  %126 = zext i8 %125 to i32
  %127 = shl nuw nsw i32 %126, 7
  %128 = or i32 %124, %127
  %129 = and i8 %115, 127
  %130 = zext i8 %129 to i32
  %131 = or i32 %128, %130
  %132 = load i8, i8* %27, align 1
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %40) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %40, i8 -86, i64 5, i1 false) #9
  %133 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 0, i32 1) #9
  %134 = zext i32 %131 to i64
  %135 = add nsw i64 %133, %134
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 264, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #9
  store i32 0, i32* %19, align 4
  %136 = zext i8 %100 to i32
  %137 = zext i8 %132 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 48, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.70, i64 0, i64 0), i32 %136, i32 %137, i32 %131) #9
  switch i8 %100, label %484 [
    i8 2, label %138
    i8 3, label %141
    i8 4, label %141
  ]

138:                                              ; preds = %117
  %139 = and i32 %137, 64
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %169, label %484

141:                                              ; preds = %117, %117
  %142 = and i32 %137, 64
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %169, label %144

144:                                              ; preds = %141
  %145 = call i32 @avio_r8(%struct.AVIOContext* %0) #9
  %146 = shl i32 %145, 7
  %147 = and i32 %146, 16256
  %148 = call i32 @avio_r8(%struct.AVIOContext* %0) #9
  %149 = and i32 %148, 127
  %150 = or i32 %149, %147
  %151 = shl nuw nsw i32 %150, 7
  %152 = call i32 @avio_r8(%struct.AVIOContext* %0) #9
  %153 = and i32 %152, 127
  %154 = or i32 %151, %153
  %155 = shl nuw nsw i32 %154, 7
  %156 = call i32 @avio_r8(%struct.AVIOContext* %0) #9
  %157 = and i32 %156, 127
  %158 = or i32 %155, %157
  %159 = icmp eq i8 %100, 4
  %160 = add nsw i32 %158, -4
  %161 = select i1 %159, i32 %160, i32 %158
  %162 = icmp slt i32 %161, 0
  br i1 %162, label %484, label %163

163:                                              ; preds = %144
  %164 = sext i32 %161 to i64
  %165 = call i64 @avio_skip(%struct.AVIOContext* %0, i64 %164) #9
  %166 = add nsw i32 %131, -4
  %167 = sub i32 %166, %161
  %168 = icmp slt i32 %167, 0
  br i1 %168, label %484, label %169

169:                                              ; preds = %163, %141, %138
  %170 = phi i1 [ true, %141 ], [ true, %163 ], [ false, %138 ]
  %171 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %141 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %163 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), %138 ]
  %172 = phi i32 [ 10, %141 ], [ 10, %163 ], [ 6, %138 ]
  %173 = phi i32 [ 1, %141 ], [ 1, %163 ], [ 0, %138 ]
  %174 = phi i32 [ %131, %141 ], [ %167, %163 ], [ %131, %138 ]
  %175 = icmp slt i32 %174, %172
  br i1 %175, label %477, label %176

176:                                              ; preds = %169
  %177 = icmp ne i8 %100, 3
  %178 = select i1 %170, i64 4, i64 3
  %179 = select i1 %170, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i64 0, i64 0)
  %180 = select i1 %170, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.119, i64 0, i64 0)
  %181 = icmp slt i8 %132, 0
  br label %182

182:                                              ; preds = %474, %176
  %183 = phi i32 [ %174, %176 ], [ %282, %474 ]
  %184 = phi %struct.ID3v2EMFunc* [ null, %176 ], [ %475, %474 ]
  br i1 %170, label %185, label %270

185:                                              ; preds = %182
  %186 = call i32 @avio_read(%struct.AVIOContext* %0, i8* nonnull %40, i32 4) #9
  %187 = icmp slt i32 %186, 4
  br i1 %187, label %477, label %188

188:                                              ; preds = %185
  store i8 0, i8* %43, align 1
  %189 = call i32 @avio_rb32(%struct.AVIOContext* %0) #9
  %190 = icmp ugt i32 %189, 127
  %191 = and i1 %177, %190
  br i1 %191, label %192, label %266

192:                                              ; preds = %188
  %193 = icmp ult i32 %189, %183
  br i1 %193, label %194, label %255

194:                                              ; preds = %192
  %195 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 0, i32 1) #9
  %196 = add i32 %189, 6
  %197 = zext i32 %196 to i64
  %198 = call i32 @ffio_ensure_seekback(%struct.AVIOContext* %0, i64 %197) #9
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %477

200:                                              ; preds = %194
  %201 = and i32 %189, 127
  %202 = lshr i32 %189, 1
  %203 = and i32 %202, 16256
  %204 = or i32 %203, %201
  %205 = lshr i32 %189, 2
  %206 = and i32 %205, 2080768
  %207 = or i32 %204, %206
  %208 = lshr i32 %189, 3
  %209 = and i32 %208, 266338304
  %210 = or i32 %207, %209
  %211 = trunc i64 %195 to i32
  %212 = add i32 %211, 2
  %213 = add i32 %212, %210
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #9
  %214 = sext i32 %213 to i64
  store i32 -1431655766, i32* %49, align 4
  %215 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 %214, i32 0) #9
  %216 = icmp slt i64 %215, 0
  br i1 %216, label %231, label %217

217:                                              ; preds = %200
  %218 = call i32 @avio_read(%struct.AVIOContext* %0, i8* nonnull %48, i32 4) #9
  %219 = icmp slt i32 %218, 4
  br i1 %219, label %231, label %220

220:                                              ; preds = %217
  %221 = load i32, i32* %49, align 4
  %222 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %221) #10, !srcloc !2
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %251, label %224

224:                                              ; preds = %220
  %225 = load i8, i8* %69, align 1
  %226 = add i8 %225, -65
  %227 = icmp ugt i8 %226, 25
  %228 = add i8 %225, -48
  %229 = icmp ugt i8 %228, 9
  %230 = and i1 %227, %229
  br i1 %230, label %231, label %623

231:                                              ; preds = %224, %623, %630, %637, %217, %200
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #9
  %232 = add i32 %212, %189
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #9
  %233 = sext i32 %232 to i64
  store i32 -1431655766, i32* %51, align 4
  %234 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 %233, i32 0) #9
  %235 = icmp slt i64 %234, 0
  br i1 %235, label %250, label %236

236:                                              ; preds = %231
  %237 = call i32 @avio_read(%struct.AVIOContext* %0, i8* nonnull %50, i32 4) #9
  %238 = icmp slt i32 %237, 4
  br i1 %238, label %250, label %239

239:                                              ; preds = %236
  %240 = load i32, i32* %51, align 4
  %241 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %240) #10, !srcloc !2
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %251, label %243

243:                                              ; preds = %239
  %244 = load i8, i8* %72, align 1
  %245 = add i8 %244, -65
  %246 = icmp ugt i8 %245, 25
  %247 = add i8 %244, -48
  %248 = icmp ugt i8 %247, 9
  %249 = and i1 %246, %248
  br i1 %249, label %250, label %644

250:                                              ; preds = %236, %231, %243, %644, %651, %658
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #9
  br label %477

251:                                              ; preds = %658, %637, %239, %220
  %252 = phi i8* [ %48, %220 ], [ %50, %239 ], [ %48, %637 ], [ %50, %658 ]
  %253 = phi i32 [ %210, %220 ], [ %189, %239 ], [ %210, %637 ], [ %189, %658 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252) #9
  %254 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 %195, i32 0) #9
  br label %266

255:                                              ; preds = %192
  %256 = and i32 %189, 127
  %257 = lshr i32 %189, 1
  %258 = and i32 %257, 16256
  %259 = or i32 %258, %256
  %260 = lshr i32 %189, 2
  %261 = and i32 %260, 2080768
  %262 = or i32 %259, %261
  %263 = lshr i32 %189, 3
  %264 = and i32 %263, 266338304
  %265 = or i32 %262, %264
  br label %266

266:                                              ; preds = %255, %251, %188
  %267 = phi i32 [ %253, %251 ], [ %265, %255 ], [ %189, %188 ]
  %268 = call i32 @avio_rb16(%struct.AVIOContext* %0) #9
  %269 = and i32 %268, 2
  br label %275

270:                                              ; preds = %182
  %271 = call i32 @avio_read(%struct.AVIOContext* %0, i8* nonnull %40, i32 3) #9
  %272 = icmp slt i32 %271, 3
  br i1 %272, label %477, label %273

273:                                              ; preds = %270
  store i8 0, i8* %42, align 1
  %274 = call i32 @avio_rb24(%struct.AVIOContext* %0) #9
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %267, %266 ], [ %274, %273 ]
  %277 = phi i32 [ %268, %266 ], [ 0, %273 ]
  %278 = phi i32 [ %269, %266 ], [ 0, %273 ]
  %279 = icmp ugt i32 %276, 268435456
  br i1 %279, label %477, label %280

280:                                              ; preds = %275
  %281 = sub i32 %183, %172
  %282 = sub i32 %281, %276
  %283 = icmp slt i32 %282, 0
  br i1 %283, label %477, label %284

284:                                              ; preds = %280
  %285 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 0, i32 1) #9
  %286 = zext i32 %276 to i64
  %287 = add nsw i64 %285, %286
  %288 = icmp eq i32 %276, 0
  br i1 %288, label %289, label %293

289:                                              ; preds = %284
  %290 = load i8, i8* %40, align 1
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %474, label %292

292:                                              ; preds = %289
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 48, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.77, i64 0, i64 0), i8* nonnull %40) #9
  br label %474

293:                                              ; preds = %284
  %294 = and i32 %277, 1
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %301, label %296

296:                                              ; preds = %293
  %297 = icmp ult i32 %276, 4
  br i1 %297, label %477, label %298

298:                                              ; preds = %296
  %299 = call i32 @avio_rb32(%struct.AVIOContext* %0) #9
  %300 = add nsw i32 %276, -4
  br label %301

301:                                              ; preds = %298, %293
  %302 = phi i32 [ %300, %298 ], [ %276, %293 ]
  %303 = and i32 %277, 12
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %314, label %305

305:                                              ; preds = %301
  %306 = and i32 %277, 4
  %307 = icmp eq i32 %306, 0
  %308 = and i32 %277, 8
  %309 = icmp eq i32 %308, 0
  %310 = select i1 %307, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.80, i64 0, i64 0)
  %311 = select i1 %309, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i64 0, i64 0), i8* %310
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i64 0, i64 0), i8* %311, i8* nonnull %40) #9
  %312 = zext i32 %302 to i64
  %313 = call i64 @avio_skip(%struct.AVIOContext* %0, i64 %312) #9
  br label %471

314:                                              ; preds = %301
  %315 = load i8, i8* %40, align 1
  %316 = icmp eq i8 %315, 84
  br i1 %316, label %336, label %317

317:                                              ; preds = %314
  %318 = call i32 @bcmp(i8* nonnull %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i64 4) #9
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %317
  %321 = call i32 @strcmp(i8* nonnull %40, i8* %171) #11
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %336, label %323

323:                                              ; preds = %320
  br i1 %52, label %461, label %324

324:                                              ; preds = %323
  %325 = call i32 @bcmp(i8* nonnull %40, i8* nonnull %179, i64 %178) #9
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %336, label %327

327:                                              ; preds = %324
  %328 = call i32 @bcmp(i8* nonnull %40, i8* nonnull %180, i64 %178) #9
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %336, label %330

330:                                              ; preds = %327
  %331 = call i32 @bcmp(i8* nonnull %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), i64 %178) #9
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %336, label %333

333:                                              ; preds = %330
  %334 = call i32 @bcmp(i8* nonnull %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i64 %178) #9
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %461

336:                                              ; preds = %333, %330, %327, %324, %320, %317, %314
  %337 = phi %struct.ID3v2EMFunc* [ %184, %314 ], [ %184, %320 ], [ %184, %317 ], [ getelementptr inbounds ([5 x %struct.ID3v2EMFunc], [5 x %struct.ID3v2EMFunc]* @id3v2_extra_meta_funcs, i64 0, i64 3), %333 ], [ getelementptr inbounds ([5 x %struct.ID3v2EMFunc], [5 x %struct.ID3v2EMFunc]* @id3v2_extra_meta_funcs, i64 0, i64 2), %330 ], [ getelementptr inbounds ([5 x %struct.ID3v2EMFunc], [5 x %struct.ID3v2EMFunc]* @id3v2_extra_meta_funcs, i64 0, i64 1), %327 ], [ getelementptr inbounds ([5 x %struct.ID3v2EMFunc], [5 x %struct.ID3v2EMFunc]* @id3v2_extra_meta_funcs, i64 0, i64 0), %324 ]
  %338 = icmp ne i32 %278, 0
  %339 = or i1 %181, %338
  br i1 %339, label %340, label %382

340:                                              ; preds = %336
  %341 = zext i32 %302 to i64
  call void @av_fast_malloc(i8* nonnull %45, i32* nonnull %19, i64 %341) #9
  %342 = load i8*, i8** %18, align 8
  %343 = icmp eq i8* %342, null
  br i1 %343, label %344, label %345

344:                                              ; preds = %340
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i64 0, i64 0), i32 %302) #9
  br label %471

345:                                              ; preds = %340
  %346 = getelementptr inbounds i8, i8* %342, i64 %341
  %347 = call i32 @avio_read(%struct.AVIOContext* %0, i8* nonnull %342, i32 %302) #9
  %348 = icmp eq i32 %347, %302
  br i1 %348, label %349, label %381

349:                                              ; preds = %345
  %350 = icmp eq i32 %302, 0
  br i1 %350, label %369, label %351

351:                                              ; preds = %349, %366
  %352 = phi i8* [ %367, %366 ], [ %342, %349 ]
  %353 = phi i8* [ %356, %366 ], [ %342, %349 ]
  %354 = getelementptr inbounds i8, i8* %352, i64 1
  %355 = load i8, i8* %352, align 1
  %356 = getelementptr inbounds i8, i8* %353, i64 1
  store i8 %355, i8* %353, align 1
  %357 = icmp eq i8* %354, %346
  br i1 %357, label %369, label %358

358:                                              ; preds = %351
  %359 = load i8, i8* %352, align 1
  %360 = icmp eq i8 %359, -1
  br i1 %360, label %361, label %366

361:                                              ; preds = %358
  %362 = load i8, i8* %354, align 1
  %363 = icmp eq i8 %362, 0
  %364 = getelementptr inbounds i8, i8* %352, i64 2
  %365 = select i1 %363, i8* %364, i8* %354
  br label %366

366:                                              ; preds = %361, %358
  %367 = phi i8* [ %354, %358 ], [ %365, %361 ]
  %368 = icmp eq i8* %367, %346
  br i1 %368, label %369, label %351

369:                                              ; preds = %366, %351, %349
  %370 = phi i8* [ %342, %349 ], [ %356, %351 ], [ %356, %366 ]
  %371 = load i8*, i8** %18, align 8
  %372 = ptrtoint i8* %370 to i64
  %373 = ptrtoint i8* %371 to i64
  %374 = sub i64 %372, %373
  %375 = trunc i64 %374 to i32
  %376 = call i32 @ffio_init_context(%struct.AVIOContext* nonnull %17, i8* %371, i32 %375, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null) #9
  %377 = load i64, i64* %53, align 8
  %378 = sub i64 %372, %377
  %379 = trunc i64 %378 to i32
  %380 = load i8, i8* %40, align 1
  br label %382

381:                                              ; preds = %345
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83, i64 0, i64 0)) #9
  br label %471

382:                                              ; preds = %369, %336
  %383 = phi i8 [ %315, %336 ], [ %380, %369 ]
  %384 = phi i32 [ %302, %336 ], [ %379, %369 ]
  %385 = phi %struct.AVIOContext* [ %0, %336 ], [ %17, %369 ]
  %386 = icmp eq i8 %383, 84
  br i1 %386, label %387, label %388

387:                                              ; preds = %382
  call fastcc void @read_ttag(%struct.AVFormatContext* %2, %struct.AVIOContext* %385, i32 %384, %struct.AVDictionary** %1, i8* nonnull %40) #9
  br label %471

388:                                              ; preds = %382
  %389 = call i32 @bcmp(i8* nonnull %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i64 4) #9
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %420

391:                                              ; preds = %388
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #9
  store i32 %384, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #9
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  store i8* null, i8** %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %392 = icmp slt i32 %384, 1
  br i1 %392, label %417, label %393

393:                                              ; preds = %391
  %394 = call i32 @avio_r8(%struct.AVIOContext* %385) #9
  %395 = add nsw i32 %384, -1
  store i32 %395, i32* %10, align 4
  %396 = call i32 @avio_read(%struct.AVIOContext* %385, i8* nonnull %59, i32 3) #9
  %397 = icmp slt i32 %396, 3
  br i1 %397, label %417, label %398

398:                                              ; preds = %393
  store i8 0, i8* %60, align 1
  %399 = add nsw i32 %384, -4
  store i32 %399, i32* %10, align 4
  %400 = call fastcc i32 @decode_str(%struct.AVFormatContext* %2, %struct.AVIOContext* %385, i32 %394, i8** nonnull %12, i32* nonnull %10) #9
  %401 = icmp slt i32 %400, 0
  br i1 %401, label %417, label %402

402:                                              ; preds = %398
  %403 = call fastcc i32 @decode_str(%struct.AVFormatContext* %2, %struct.AVIOContext* %385, i32 %394, i8** nonnull %13, i32* nonnull %10) #9
  %404 = icmp slt i32 %403, 0
  br i1 %404, label %417, label %405

405:                                              ; preds = %402
  %406 = load i8*, i8** %12, align 8
  %407 = load i8, i8* %406, align 1
  %408 = icmp ne i8 %407, 0
  %409 = select i1 %408, i8* %406, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.97, i64 0, i64 0)
  %410 = select i1 %408, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.97, i64 0, i64 0)
  %411 = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0), i8* %409, i8* %410, i32* nonnull %11) #9
  %412 = icmp eq i8* %411, null
  %413 = load i8*, i8** %13, align 8
  br i1 %412, label %414, label %415

414:                                              ; preds = %405
  call void @av_free(i8* %413) #9
  br label %417

415:                                              ; preds = %405
  %416 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* nonnull %411, i8* %413, i32 12) #9
  br label %418

417:                                              ; preds = %414, %402, %398, %393, %391
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.99, i64 0, i64 0)) #9
  br label %418

418:                                              ; preds = %417, %415
  %419 = load i8*, i8** %12, align 8
  call void @av_free(i8* %419) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #9
  br label %471

420:                                              ; preds = %388
  %421 = call i32 @strcmp(i8* nonnull %40, i8* %171) #11
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %458

423:                                              ; preds = %420
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #9
  store i32 %384, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0), i8** %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %424 = icmp slt i32 %384, 4
  br i1 %424, label %457, label %425

425:                                              ; preds = %423
  %426 = call i32 @avio_r8(%struct.AVIOContext* %385) #9
  %427 = call i32 @avio_rl24(%struct.AVIOContext* %385) #9
  %428 = add nsw i32 %384, -4
  store i32 %428, i32* %7, align 4
  %429 = call fastcc i32 @decode_str(%struct.AVFormatContext* %2, %struct.AVIOContext* %385, i32 %426, i8** nonnull %9, i32* nonnull %7) #9
  %430 = icmp slt i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %425
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.100, i64 0, i64 0)) #9
  br label %457

432:                                              ; preds = %425
  %433 = load i8*, i8** %9, align 8
  %434 = icmp eq i8* %433, null
  br i1 %434, label %443, label %435

435:                                              ; preds = %432
  %436 = load i8, i8* %433, align 1
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %438, label %441

438:                                              ; preds = %435
  call void @av_freep(i8* nonnull %56) #9
  %439 = load i8*, i8** %9, align 8
  %440 = icmp eq i8* %439, null
  br i1 %440, label %443, label %441

441:                                              ; preds = %438, %435
  %442 = phi i8* [ %439, %438 ], [ %433, %435 ]
  store i8* %442, i8** %8, align 8
  br label %443

443:                                              ; preds = %441, %438, %432
  %444 = phi i32 [ 28, %441 ], [ 24, %438 ], [ 24, %432 ]
  %445 = call fastcc i32 @decode_str(%struct.AVFormatContext* %2, %struct.AVIOContext* %385, i32 %426, i8** nonnull %9, i32* nonnull %7) #9
  %446 = icmp slt i32 %445, 0
  br i1 %446, label %447, label %451

447:                                              ; preds = %443
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.100, i64 0, i64 0)) #9
  %448 = and i32 %444, 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %457, label %450

450:                                              ; preds = %447
  call void @av_freep(i8* nonnull %55) #9
  br label %457

451:                                              ; preds = %443
  %452 = load i8*, i8** %9, align 8
  %453 = icmp eq i8* %452, null
  br i1 %453, label %457, label %454

454:                                              ; preds = %451
  %455 = load i8*, i8** %8, align 8
  %456 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* %455, i8* nonnull %452, i32 %444) #9
  br label %457

457:                                              ; preds = %454, %451, %450, %447, %431, %423
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #9
  br label %471

458:                                              ; preds = %420
  %459 = getelementptr inbounds %struct.ID3v2EMFunc, %struct.ID3v2EMFunc* %337, i64 0, i32 2
  %460 = load void (%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8*, %struct.ID3v2ExtraMeta**, i32)*, void (%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8*, %struct.ID3v2ExtraMeta**, i32)** %459, align 8
  call void %460(%struct.AVFormatContext* %2, %struct.AVIOContext* %385, i32 %384, i8* nonnull %40, %struct.ID3v2ExtraMeta** %4, i32 %173) #9
  br label %471

461:                                              ; preds = %333, %323
  %462 = phi %struct.ID3v2EMFunc* [ %184, %323 ], [ null, %333 ]
  %463 = icmp eq i8 %315, 0
  br i1 %463, label %464, label %471

464:                                              ; preds = %461
  %465 = load i8, i8* %41, align 1
  %466 = icmp eq i8 %465, 0
  br i1 %466, label %468, label %467

467:                                              ; preds = %464
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 24, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.84, i64 0, i64 0)) #9
  br label %468

468:                                              ; preds = %467, %464
  %469 = zext i32 %302 to i64
  %470 = call i64 @avio_skip(%struct.AVIOContext* %0, i64 %469) #9
  br label %477

471:                                              ; preds = %461, %458, %457, %418, %387, %381, %344, %305
  %472 = phi %struct.ID3v2EMFunc* [ %184, %305 ], [ %337, %381 ], [ %337, %387 ], [ %337, %458 ], [ %337, %457 ], [ %337, %418 ], [ %337, %344 ], [ %462, %461 ]
  %473 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 %287, i32 0) #9
  br label %474

474:                                              ; preds = %471, %292, %289
  %475 = phi %struct.ID3v2EMFunc* [ %472, %471 ], [ %184, %289 ], [ %184, %292 ]
  %476 = icmp slt i32 %282, %172
  br i1 %476, label %477, label %182

477:                                              ; preds = %474, %296, %280, %275, %270, %194, %185, %468, %250, %169
  %478 = icmp ne i8 %100, 4
  %479 = and i32 %137, 16
  %480 = icmp eq i32 %479, 0
  %481 = or i1 %478, %480
  %482 = add nsw i64 %135, 10
  %483 = select i1 %481, i64 %135, i64 %482
  br label %486

484:                                              ; preds = %163, %144, %138, %117
  %485 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %117 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0), %138 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.75, i64 0, i64 0), %144 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.76, i64 0, i64 0), %163 ]
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.85, i64 0, i64 0), i32 %136, i8* nonnull %485) #9
  br label %486

486:                                              ; preds = %484, %477
  %487 = phi i64 [ %135, %484 ], [ %483, %477 ]
  %488 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 %487, i32 0) #9
  %489 = load i8*, i8** %18, align 8
  call void @av_free(i8* %489) #9
  call void @av_free(i8* null) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %40) #9
  %490 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 0, i32 1) #9
  %491 = sub nsw i64 %490, %36
  %492 = icmp slt i64 %491, %37
  %493 = or i1 %492, %63
  br i1 %493, label %75, label %494

494:                                              ; preds = %82, %88, %114, %94, %79, %75, %486, %35
  %495 = phi i64 [ %64, %35 ], [ %76, %82 ], [ %76, %88 ], [ %76, %114 ], [ %76, %94 ], [ %76, %79 ], [ %76, %75 ], [ %490, %486 ]
  %496 = call i64 @avio_seek(%struct.AVIOContext* %0, i64 %495, i32 0) #9
  call void @ff_metadata_conv(%struct.AVDictionary** %1, %struct.AVMetadataConv* null, %struct.AVMetadataConv* getelementptr inbounds ([16 x %struct.AVMetadataConv], [16 x %struct.AVMetadataConv]* @ff_id3v2_34_metadata_conv, i64 0, i64 0)) #9
  call void @ff_metadata_conv(%struct.AVDictionary** %1, %struct.AVMetadataConv* null, %struct.AVMetadataConv* getelementptr inbounds ([10 x %struct.AVMetadataConv], [10 x %struct.AVMetadataConv]* @id3v2_2_metadata_conv, i64 0, i64 0)) #9
  call void @ff_metadata_conv(%struct.AVDictionary** %1, %struct.AVMetadataConv* null, %struct.AVMetadataConv* getelementptr inbounds ([8 x %struct.AVMetadataConv], [8 x %struct.AVMetadataConv]* @ff_id3v2_4_metadata_conv, i64 0, i64 0)) #9
  %497 = getelementptr inbounds [17 x i8], [17 x i8]* %20, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %497) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %497, i8 0, i64 17, i1 false) #9
  %498 = load %struct.AVDictionary*, %struct.AVDictionary** %1, align 8
  %499 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %498, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 1) #9
  %500 = icmp eq %struct.AVDictionaryEntry* %499, null
  br i1 %500, label %514, label %501

501:                                              ; preds = %494
  %502 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %499, i64 0, i32 1
  %503 = load i8*, i8** %502, align 8
  %504 = call i64 @strlen(i8* %503) #11
  %505 = icmp eq i64 %504, 4
  br i1 %505, label %506, label %514

506:                                              ; preds = %501, %506
  %507 = phi i8* [ %511, %506 ], [ %503, %501 ]
  %508 = load i8, i8* %507, align 1
  %509 = add i8 %508, -48
  %510 = icmp ult i8 %509, 10
  %511 = getelementptr inbounds i8, i8* %507, i64 1
  br i1 %510, label %506, label %512

512:                                              ; preds = %506
  %513 = icmp eq i8 %508, 0
  br i1 %513, label %531, label %514

514:                                              ; preds = %512, %501, %494
  %515 = load %struct.AVDictionary*, %struct.AVDictionary** %1, align 8
  %516 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %515, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 1) #9
  %517 = icmp eq %struct.AVDictionaryEntry* %516, null
  br i1 %517, label %621, label %518

518:                                              ; preds = %514
  %519 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %516, i64 0, i32 1
  %520 = load i8*, i8** %519, align 8
  %521 = call i64 @strlen(i8* %520) #11
  %522 = icmp eq i64 %521, 4
  br i1 %522, label %523, label %621

523:                                              ; preds = %518, %523
  %524 = phi i8* [ %528, %523 ], [ %520, %518 ]
  %525 = load i8, i8* %524, align 1
  %526 = add i8 %525, -48
  %527 = icmp ult i8 %526, 10
  %528 = getelementptr inbounds i8, i8* %524, i64 1
  br i1 %527, label %523, label %529

529:                                              ; preds = %523
  %530 = icmp eq i8 %525, 0
  br i1 %530, label %531, label %621

531:                                              ; preds = %529, %512
  %532 = phi i8* [ %503, %512 ], [ %520, %529 ]
  %533 = call i64 @av_strlcpy(i8* nonnull %497, i8* %532, i64 5) #9
  %534 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i64 0, i64 0), i8* null, i32 0) #9
  %535 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i64 0, i64 0), i8* null, i32 0) #9
  %536 = load %struct.AVDictionary*, %struct.AVDictionary** %1, align 8
  %537 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %536, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 1) #9
  %538 = icmp eq %struct.AVDictionaryEntry* %537, null
  br i1 %538, label %552, label %539

539:                                              ; preds = %531
  %540 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %537, i64 0, i32 1
  %541 = load i8*, i8** %540, align 8
  %542 = call i64 @strlen(i8* %541) #11
  %543 = icmp eq i64 %542, 4
  br i1 %543, label %544, label %552

544:                                              ; preds = %539, %544
  %545 = phi i8* [ %549, %544 ], [ %541, %539 ]
  %546 = load i8, i8* %545, align 1
  %547 = add i8 %546, -48
  %548 = icmp ult i8 %547, 10
  %549 = getelementptr inbounds i8, i8* %545, i64 1
  br i1 %548, label %544, label %550

550:                                              ; preds = %544
  %551 = icmp eq i8 %546, 0
  br i1 %551, label %569, label %552

552:                                              ; preds = %550, %539, %531
  %553 = load %struct.AVDictionary*, %struct.AVDictionary** %1, align 8
  %554 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %553, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 1) #9
  %555 = icmp eq %struct.AVDictionaryEntry* %554, null
  br i1 %555, label %616, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %554, i64 0, i32 1
  %558 = load i8*, i8** %557, align 8
  %559 = call i64 @strlen(i8* %558) #11
  %560 = icmp eq i64 %559, 4
  br i1 %560, label %561, label %616

561:                                              ; preds = %556, %561
  %562 = phi i8* [ %566, %561 ], [ %558, %556 ]
  %563 = load i8, i8* %562, align 1
  %564 = add i8 %563, -48
  %565 = icmp ult i8 %564, 10
  %566 = getelementptr inbounds i8, i8* %562, i64 1
  br i1 %565, label %561, label %567

567:                                              ; preds = %561
  %568 = icmp eq i8 %563, 0
  br i1 %568, label %569, label %616

569:                                              ; preds = %567, %550
  %570 = phi i8* [ %541, %550 ], [ %558, %567 ]
  %571 = getelementptr inbounds [17 x i8], [17 x i8]* %20, i64 0, i64 4
  %572 = getelementptr inbounds i8, i8* %570, i64 2
  %573 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %571, i64 13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.113, i64 0, i64 0), i8* %572, i8* %570) #9
  %574 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i64 0, i64 0), i8* null, i32 0) #9
  %575 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i64 0, i64 0), i8* null, i32 0) #9
  %576 = load %struct.AVDictionary*, %struct.AVDictionary** %1, align 8
  %577 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %576, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 1) #9
  %578 = icmp eq %struct.AVDictionaryEntry* %577, null
  br i1 %578, label %592, label %579

579:                                              ; preds = %569
  %580 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %577, i64 0, i32 1
  %581 = load i8*, i8** %580, align 8
  %582 = call i64 @strlen(i8* %581) #11
  %583 = icmp eq i64 %582, 4
  br i1 %583, label %584, label %592

584:                                              ; preds = %579, %584
  %585 = phi i8* [ %589, %584 ], [ %581, %579 ]
  %586 = load i8, i8* %585, align 1
  %587 = add i8 %586, -48
  %588 = icmp ult i8 %587, 10
  %589 = getelementptr inbounds i8, i8* %585, i64 1
  br i1 %588, label %584, label %590

590:                                              ; preds = %584
  %591 = icmp eq i8 %586, 0
  br i1 %591, label %609, label %592

592:                                              ; preds = %590, %579, %569
  %593 = load %struct.AVDictionary*, %struct.AVDictionary** %1, align 8
  %594 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %593, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 1) #9
  %595 = icmp eq %struct.AVDictionaryEntry* %594, null
  br i1 %595, label %616, label %596

596:                                              ; preds = %592
  %597 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %594, i64 0, i32 1
  %598 = load i8*, i8** %597, align 8
  %599 = call i64 @strlen(i8* %598) #11
  %600 = icmp eq i64 %599, 4
  br i1 %600, label %601, label %616

601:                                              ; preds = %596, %601
  %602 = phi i8* [ %606, %601 ], [ %598, %596 ]
  %603 = load i8, i8* %602, align 1
  %604 = add i8 %603, -48
  %605 = icmp ult i8 %604, 10
  %606 = getelementptr inbounds i8, i8* %602, i64 1
  br i1 %605, label %601, label %607

607:                                              ; preds = %601
  %608 = icmp eq i8 %603, 0
  br i1 %608, label %609, label %616

609:                                              ; preds = %607, %590
  %610 = phi i8* [ %581, %590 ], [ %598, %607 ]
  %611 = getelementptr inbounds [17 x i8], [17 x i8]* %20, i64 0, i64 10
  %612 = getelementptr inbounds i8, i8* %610, i64 2
  %613 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %611, i64 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.116, i64 0, i64 0), i8* %610, i8* %612) #9
  %614 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i64 0, i64 0), i8* null, i32 0) #9
  %615 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i64 0, i64 0), i8* null, i32 0) #9
  br label %616

616:                                              ; preds = %609, %607, %596, %592, %567, %556, %552
  %617 = load i8, i8* %497, align 16
  %618 = icmp eq i8 %617, 0
  br i1 %618, label %621, label %619

619:                                              ; preds = %616
  %620 = call i32 @av_dict_set(%struct.AVDictionary** %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* nonnull %497, i32 0) #9
  br label %621

621:                                              ; preds = %514, %518, %529, %616, %619
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %497) #9
  br label %622

622:                                              ; preds = %6, %621
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %22) #9
  ret void

623:                                              ; preds = %224
  %624 = load i8, i8* %70, align 2
  %625 = add i8 %624, -65
  %626 = icmp ugt i8 %625, 25
  %627 = add i8 %624, -48
  %628 = icmp ugt i8 %627, 9
  %629 = and i1 %626, %628
  br i1 %629, label %231, label %630

630:                                              ; preds = %623
  %631 = load i8, i8* %71, align 1
  %632 = add i8 %631, -65
  %633 = icmp ugt i8 %632, 25
  %634 = add i8 %631, -48
  %635 = icmp ugt i8 %634, 9
  %636 = and i1 %633, %635
  br i1 %636, label %231, label %637

637:                                              ; preds = %630
  %638 = load i8, i8* %48, align 4
  %639 = add i8 %638, -65
  %640 = icmp ugt i8 %639, 25
  %641 = add i8 %638, -48
  %642 = icmp ugt i8 %641, 9
  %643 = and i1 %640, %642
  br i1 %643, label %231, label %251

644:                                              ; preds = %243
  %645 = load i8, i8* %73, align 2
  %646 = add i8 %645, -65
  %647 = icmp ugt i8 %646, 25
  %648 = add i8 %645, -48
  %649 = icmp ugt i8 %648, 9
  %650 = and i1 %647, %649
  br i1 %650, label %250, label %651

651:                                              ; preds = %644
  %652 = load i8, i8* %74, align 1
  %653 = add i8 %652, -65
  %654 = icmp ugt i8 %653, 25
  %655 = add i8 %652, -48
  %656 = icmp ugt i8 %655, 9
  %657 = and i1 %654, %656
  br i1 %657, label %250, label %658

658:                                              ; preds = %651
  %659 = load i8, i8* %50, align 4
  %660 = add i8 %659, -65
  %661 = icmp ugt i8 %660, 25
  %662 = add i8 %659, -48
  %663 = icmp ugt i8 %662, 9
  %664 = and i1 %661, %663
  br i1 %664, label %250, label %251
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_id3v2_read(%struct.AVFormatContext*, i8* nocapture readonly, %struct.ID3v2ExtraMeta**, i32) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %8 = zext i32 %3 to i64
  tail call fastcc void @id3v2_read_internal(%struct.AVIOContext* %6, %struct.AVDictionary** %7, %struct.AVFormatContext* %0, i8* %1, %struct.ID3v2ExtraMeta** %2, i64 %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_id3v2_free_extra_meta(%struct.ID3v2ExtraMeta** nocapture) local_unnamed_addr #2 {
  %2 = alloca %struct.ID3v2ExtraMeta*, align 8
  %3 = bitcast %struct.ID3v2ExtraMeta** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #9
  %4 = bitcast %struct.ID3v2ExtraMeta** %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %struct.ID3v2ExtraMeta** %2 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %1, %34
  %9 = phi i64 [ %38, %34 ], [ %5, %1 ]
  %10 = inttoptr i64 %9 to %struct.ID3v2ExtraMeta*
  %11 = inttoptr i64 %9 to %struct.ID3v2ExtraMeta*
  %12 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %8
  %16 = call i32 @bcmp(i8* nonnull %13, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0), i64 4) #9
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = call i32 @bcmp(i8* nonnull %13, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i64 4) #9
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = call i32 @bcmp(i8* nonnull %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), i64 4) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = call i32 @bcmp(i8* nonnull %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i64 4) #9
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %15, %18, %21, %24
  %28 = phi %struct.ID3v2EMFunc* [ getelementptr inbounds ([5 x %struct.ID3v2EMFunc], [5 x %struct.ID3v2EMFunc]* @id3v2_extra_meta_funcs, i64 0, i64 3), %24 ], [ getelementptr inbounds ([5 x %struct.ID3v2EMFunc], [5 x %struct.ID3v2EMFunc]* @id3v2_extra_meta_funcs, i64 0, i64 2), %21 ], [ getelementptr inbounds ([5 x %struct.ID3v2EMFunc], [5 x %struct.ID3v2EMFunc]* @id3v2_extra_meta_funcs, i64 0, i64 1), %18 ], [ getelementptr inbounds ([5 x %struct.ID3v2EMFunc], [5 x %struct.ID3v2EMFunc]* @id3v2_extra_meta_funcs, i64 0, i64 0), %15 ]
  %29 = getelementptr inbounds %struct.ID3v2EMFunc, %struct.ID3v2EMFunc* %28, i64 0, i32 3
  %30 = load void (i8*)*, void (i8*)** %29, align 8
  %31 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %11, i64 0, i32 2
  %32 = bitcast %union.anon* %31 to i8*
  call void %30(i8* %32) #9
  %33 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %2, align 8
  br label %34

34:                                               ; preds = %24, %8, %27
  %35 = phi %struct.ID3v2ExtraMeta* [ %10, %24 ], [ %10, %8 ], [ %33, %27 ]
  %36 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %35, i64 0, i32 1
  %37 = bitcast %struct.ID3v2ExtraMeta** %36 to i64*
  %38 = load i64, i64* %37, align 8
  call void @av_freep(i8* nonnull %3) #9
  store i64 %38, i64* %6, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %8

40:                                               ; preds = %34, %1
  store %struct.ID3v2ExtraMeta* null, %struct.ID3v2ExtraMeta** %0, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #9
  ret void
}

declare void @av_freep(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_id3v2_parse_apic(%struct.AVFormatContext*, %struct.ID3v2ExtraMeta*) local_unnamed_addr #2 {
  %3 = icmp eq %struct.ID3v2ExtraMeta* %1, null
  br i1 %3, label %75, label %4

4:                                                ; preds = %2, %71
  %5 = phi %struct.ID3v2ExtraMeta* [ %73, %71 ], [ %1, %2 ]
  %6 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %5, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %71

10:                                               ; preds = %4
  %11 = tail call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %0, %struct.AVCodec* null) #9
  %12 = icmp eq %struct.AVStream* %11, null
  br i1 %12, label %75, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %5, i64 0, i32 2
  %15 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = or i32 %16, 1024
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 19
  %19 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %18, align 8
  %20 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 0
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %5, i64 0, i32 2, i32 0, i32 3
  %22 = bitcast i8** %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %18, align 8
  %25 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %24, i64 0, i32 1
  store i32 %23, i32* %25, align 4
  %26 = bitcast %union.anon* %14 to %struct.AVBufferRef**
  %27 = load %struct.AVBufferRef*, %struct.AVBufferRef** %26, align 8
  %28 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %27, i64 0, i32 1
  %29 = bitcast i8** %28 to i64**
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %30, align 1
  %32 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %31) #10, !srcloc !3
  %33 = icmp eq i64 %32, -8552249625308161526
  br i1 %33, label %34, label %37

34:                                               ; preds = %13
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %18, align 8
  %36 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i64 0, i32 1
  store i32 61, i32* %36, align 4
  br label %37

37:                                               ; preds = %34, %13
  %38 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %5, i64 0, i32 2, i32 0, i32 2
  %39 = load i8*, i8** %38, align 8
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 11
  %44 = tail call i32 @av_dict_set(%struct.AVDictionary** %43, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8* %39, i32 0) #9
  br label %45

45:                                               ; preds = %37, %42
  %46 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 11
  %47 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %5, i64 0, i32 2, i32 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = tail call i32 @av_dict_set(%struct.AVDictionary** %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0), i8* %48, i32 0) #9
  %50 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 13
  tail call void @av_init_packet(%struct.AVPacket* %50) #9
  %51 = bitcast %union.anon* %14 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %struct.AVPacket* %50 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load %struct.AVBufferRef*, %struct.AVBufferRef** %26, align 8
  %55 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %54, i64 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 13, i32 3
  %59 = bitcast i8** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = load %struct.AVBufferRef*, %struct.AVBufferRef** %26, align 8
  %61 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = add nsw i32 %62, -64
  %64 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 13, i32 4
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 13, i32 5
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i64 0, i32 13, i32 6
  %69 = load i32, i32* %68, align 8
  %70 = or i32 %69, 1
  store i32 %70, i32* %68, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %26, align 8
  br label %71

71:                                               ; preds = %45, %4
  %72 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %5, i64 0, i32 1
  %73 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %72, align 8
  %74 = icmp eq %struct.ID3v2ExtraMeta* %73, null
  br i1 %74, label %75, label %4

75:                                               ; preds = %71, %10, %2
  %76 = phi i32 [ 0, %2 ], [ -12, %10 ], [ 0, %71 ]
  ret i32 %76
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) local_unnamed_addr #3

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #3

declare void @av_init_packet(%struct.AVPacket*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_id3v2_parse_chapters(%struct.AVFormatContext*, %struct.ID3v2ExtraMeta*) local_unnamed_addr #2 {
  %3 = alloca %struct.ID3v2ExtraMetaCHAP**, align 8
  %4 = alloca i32, align 4
  %5 = bitcast %struct.ID3v2ExtraMetaCHAP*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  store %struct.ID3v2ExtraMetaCHAP** null, %struct.ID3v2ExtraMetaCHAP*** %3, align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  store i32 0, i32* %4, align 4
  %7 = icmp eq %struct.ID3v2ExtraMeta* %1, null
  br i1 %7, label %81, label %14

8:                                                ; preds = %26
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 1
  br i1 %10, label %11, label %31

11:                                               ; preds = %8
  %12 = lshr i32 %9, 1
  %13 = zext i32 %12 to i64
  br label %33

14:                                               ; preds = %2, %26
  %15 = phi i32 [ %27, %26 ], [ 0, %2 ]
  %16 = phi %struct.ID3v2ExtraMeta* [ %29, %26 ], [ %1, %2 ]
  %17 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @strcmp(i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0)) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %16, i64 0, i32 2
  %23 = bitcast %union.anon* %22 to i8*
  %24 = call i32 @av_dynarray_add_nofree(i8* nonnull %5, i32* nonnull %4, i8* %23) #9
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %81, label %26

26:                                               ; preds = %14, %21
  %27 = phi i32 [ %24, %21 ], [ %15, %14 ]
  %28 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %16, i64 0, i32 1
  %29 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %28, align 8
  %30 = icmp eq %struct.ID3v2ExtraMeta* %29, null
  br i1 %30, label %8, label %14

31:                                               ; preds = %33, %8
  %32 = icmp sgt i32 %9, 0
  br i1 %32, label %52, label %81

33:                                               ; preds = %11, %33
  %34 = phi i64 [ 0, %11 ], [ %49, %33 ]
  %35 = phi i32 [ 0, %11 ], [ %50, %33 ]
  %36 = xor i32 %35, -1
  %37 = add i32 %9, %36
  %38 = load %struct.ID3v2ExtraMetaCHAP**, %struct.ID3v2ExtraMetaCHAP*** %3, align 8
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds %struct.ID3v2ExtraMetaCHAP*, %struct.ID3v2ExtraMetaCHAP** %38, i64 %39
  %41 = bitcast %struct.ID3v2ExtraMetaCHAP** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %struct.ID3v2ExtraMetaCHAP*, %struct.ID3v2ExtraMetaCHAP** %38, i64 %34
  %44 = bitcast %struct.ID3v2ExtraMetaCHAP** %43 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %41, align 8
  %46 = load %struct.ID3v2ExtraMetaCHAP**, %struct.ID3v2ExtraMetaCHAP*** %3, align 8
  %47 = getelementptr inbounds %struct.ID3v2ExtraMetaCHAP*, %struct.ID3v2ExtraMetaCHAP** %46, i64 %34
  %48 = bitcast %struct.ID3v2ExtraMetaCHAP** %47 to i64*
  store i64 %42, i64* %48, align 8
  %49 = add nuw nsw i64 %34, 1
  %50 = add nuw nsw i32 %35, 1
  %51 = icmp ult i64 %49, %13
  br i1 %51, label %33, label %31

52:                                               ; preds = %31, %75
  %53 = phi i64 [ %77, %75 ], [ 0, %31 ]
  %54 = phi i32 [ %76, %75 ], [ %27, %31 ]
  %55 = load %struct.ID3v2ExtraMetaCHAP**, %struct.ID3v2ExtraMetaCHAP*** %3, align 8
  %56 = getelementptr inbounds %struct.ID3v2ExtraMetaCHAP*, %struct.ID3v2ExtraMetaCHAP** %55, i64 %53
  %57 = load %struct.ID3v2ExtraMetaCHAP*, %struct.ID3v2ExtraMetaCHAP** %56, align 8
  %58 = getelementptr inbounds %struct.ID3v2ExtraMetaCHAP, %struct.ID3v2ExtraMetaCHAP* %57, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %struct.ID3v2ExtraMetaCHAP, %struct.ID3v2ExtraMetaCHAP* %57, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %struct.ID3v2ExtraMetaCHAP, %struct.ID3v2ExtraMetaCHAP* %57, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = trunc i64 %53 to i32
  %67 = call %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext* %0, i32 %66, i64 4294967296001, i64 %60, i64 %63, i8* %65) #9
  %68 = icmp eq %struct.AVChapter* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %52
  %70 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %67, i64 0, i32 4
  %71 = getelementptr inbounds %struct.ID3v2ExtraMetaCHAP, %struct.ID3v2ExtraMetaCHAP* %57, i64 0, i32 3
  %72 = load %struct.AVDictionary*, %struct.AVDictionary** %71, align 8
  %73 = call i32 @av_dict_copy(%struct.AVDictionary** %70, %struct.AVDictionary* %72, i32 0) #9
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %52, %69
  %76 = phi i32 [ %73, %69 ], [ %54, %52 ]
  %77 = add nuw nsw i64 %53, 1
  %78 = load i32, i32* %4, align 4
  %79 = sext i32 %78 to i64
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %52, label %81

81:                                               ; preds = %21, %69, %75, %2, %31
  %82 = phi i32 [ %27, %31 ], [ 0, %2 ], [ %73, %69 ], [ %76, %75 ], [ %24, %21 ]
  call void @av_freep(i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i32 %82
}

declare i32 @av_dynarray_add_nofree(i8*, i32*, i8*) local_unnamed_addr #3

declare %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext*, i32, i64, i64, i64, i8*) local_unnamed_addr #3

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_id3v2_parse_priv_dict(%struct.AVDictionary**, %struct.ID3v2ExtraMeta* readonly) local_unnamed_addr #2 {
  %3 = alloca %struct.AVBPrint, align 8
  %4 = alloca i8*, align 8
  %5 = icmp eq %struct.ID3v2ExtraMeta* %1, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.AVBPrint* %3 to i8*
  %8 = bitcast i8** %4 to i8*
  br label %9

9:                                                ; preds = %6, %57
  %10 = phi %struct.ID3v2ExtraMeta* [ %1, %6 ], [ %59, %57 ]
  %11 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %10, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)) #11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %57

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %10, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 1024, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %17 = bitcast %union.anon* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i64 0, i64 0), i8* %18) #9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %51, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %10, i64 0, i32 2, i32 0, i32 2
  %23 = bitcast i8** %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  call void @av_bprint_init(%struct.AVBPrint* nonnull %3, i32 %25, i32 -1) #9
  %26 = load i32, i32* %23, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %10, i64 0, i32 2, i32 0, i32 1
  br label %30

30:                                               ; preds = %28, %42
  %31 = phi i64 [ 0, %28 ], [ %43, %42 ]
  %32 = load i8*, i8** %29, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = load i8, i8* %33, align 1
  %35 = add i8 %34, -32
  %36 = icmp ugt i8 %35, 94
  %37 = icmp eq i8 %34, 92
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = zext i8 %34 to i32
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i32 %40) #9
  br label %42

41:                                               ; preds = %30
  call void @av_bprint_chars(%struct.AVBPrint* nonnull %3, i8 signext %34, i32 1) #9
  br label %42

42:                                               ; preds = %39, %41
  %43 = add nuw nsw i64 %31, 1
  %44 = load i32, i32* %23, align 8
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %30, label %47

47:                                               ; preds = %42, %21
  %48 = call i32 @av_bprint_finalize(%struct.AVBPrint* nonnull %3, i8** nonnull %4) #9
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  call void @av_free(i8* nonnull %19) #9
  br label %51

51:                                               ; preds = %15, %50
  %52 = phi i32 [ %48, %50 ], [ -12, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %7) #9
  br label %61

53:                                               ; preds = %47
  %54 = load i8*, i8** %4, align 8
  %55 = call i32 @av_dict_set(%struct.AVDictionary** %0, i8* nonnull %19, i8* %54, i32 28) #9
  %56 = icmp slt i32 %55, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %7) #9
  br i1 %56, label %61, label %57

57:                                               ; preds = %53, %9
  %58 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %10, i64 0, i32 1
  %59 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %58, align 8
  %60 = icmp eq %struct.ID3v2ExtraMeta* %59, null
  br i1 %60, label %61, label %9

61:                                               ; preds = %57, %53, %2, %51
  %62 = phi i32 [ %52, %51 ], [ 0, %2 ], [ 0, %57 ], [ %55, %53 ]
  ret i32 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8* @av_asprintf(i8*, ...) local_unnamed_addr #3

declare void @av_bprint_init(%struct.AVBPrint*, i32, i32) local_unnamed_addr #3

declare void @av_bprintf(%struct.AVBPrint*, i8*, ...) local_unnamed_addr #3

declare void @av_bprint_chars(%struct.AVBPrint*, i8 signext, i32) local_unnamed_addr #3

declare i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) local_unnamed_addr #3

declare void @av_free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_id3v2_parse_priv(%struct.AVFormatContext*, %struct.ID3v2ExtraMeta* readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %4 = tail call i32 @ff_id3v2_parse_priv_dict(%struct.AVDictionary** %3, %struct.ID3v2ExtraMeta* %1)
  ret i32 %4
}

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) local_unnamed_addr #3

declare i32 @ffio_ensure_seekback(%struct.AVIOContext*, i64) local_unnamed_addr #3

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #3

declare void @ff_metadata_conv(%struct.AVDictionary**, %struct.AVMetadataConv*, %struct.AVMetadataConv*) local_unnamed_addr #3

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #3

declare i64 @avio_skip(%struct.AVIOContext*, i64) local_unnamed_addr #3

declare i32 @avio_rb32(%struct.AVIOContext*) local_unnamed_addr #3

declare i32 @avio_rb16(%struct.AVIOContext*) local_unnamed_addr #3

declare i32 @avio_rb24(%struct.AVIOContext*) local_unnamed_addr #3

declare void @av_fast_malloc(i8*, i32*, i64) local_unnamed_addr #3

declare i32 @ffio_init_context(%struct.AVIOContext*, i8*, i32, i32, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @read_ttag(%struct.AVFormatContext*, %struct.AVIOContext*, i32, %struct.AVDictionary**, i8*) unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store i32 %2, i32* %6, align 4
  store i8* %4, i8** %7, align 8
  %10 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  store i32 -1431655766, i32* %9, align 4
  %12 = icmp slt i32 %2, 1
  br i1 %12, label %75, label %13

13:                                               ; preds = %5
  %14 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #9
  %15 = add nsw i32 %2, -1
  store i32 %15, i32* %6, align 4
  %16 = call fastcc i32 @decode_str(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 %14, i8** nonnull %8, i32* nonnull %6)
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.86, i64 0, i64 0), i8* %4) #9
  br label %75

20:                                               ; preds = %13
  %21 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i64 0, i64 0)) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %43

26:                                               ; preds = %23, %20
  %27 = load i8*, i8** %8, align 8
  %28 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i64 0, i64 0), i32* nonnull %9) #9
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = load i8*, i8** %8, align 8
  %32 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89, i64 0, i64 0), i32* nonnull %9) #9
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %43

34:                                               ; preds = %30, %26
  %35 = load i32, i32* %9, align 4
  %36 = icmp ult i32 %35, 192
  br i1 %36, label %37, label %43

37:                                               ; preds = %34
  call void @av_freep(i8* nonnull %10) #9
  %38 = load i32, i32* %9, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [192 x i8*], [192 x i8*]* @ff_id3v1_genre_str, i64 0, i64 %39
  %41 = load i8*, i8** %40, align 8
  %42 = call noalias i8* @av_strdup(i8* %41) #9
  store i8* %42, i8** %8, align 8
  br label %68

43:                                               ; preds = %23, %34, %30
  %44 = load i8*, i8** %7, align 8
  %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i64 0, i64 0)) #11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i64 0, i64 0)) #11
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %47, %43
  %51 = bitcast i8** %8 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8** %7 to i64*
  store i64 %52, i64* %53, align 8
  %54 = call fastcc i32 @decode_str(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 %14, i8** nonnull %8, i32* nonnull %6)
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %65

56:                                               ; preds = %50
  %57 = inttoptr i64 %52 to i8*
  %58 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %58, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.86, i64 0, i64 0), i8* %57) #9
  %59 = bitcast i8** %7 to i8*
  call void @av_freep(i8* nonnull %59) #9
  br label %75

60:                                               ; preds = %47
  %61 = load i8*, i8** %8, align 8
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  call void @av_freep(i8* nonnull %10) #9
  br label %65

65:                                               ; preds = %64, %50
  %66 = phi i32 [ 28, %50 ], [ 24, %64 ]
  %67 = load i8*, i8** %8, align 8
  br label %68

68:                                               ; preds = %65, %60, %37
  %69 = phi i8* [ %67, %65 ], [ %61, %60 ], [ %42, %37 ]
  %70 = phi i32 [ %66, %65 ], [ 24, %60 ], [ 24, %37 ]
  %71 = icmp eq i8* %69, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = load i8*, i8** %7, align 8
  %74 = call i32 @av_dict_set(%struct.AVDictionary** %3, i8* %73, i8* nonnull %69, i32 %70) #9
  br label %75

75:                                               ; preds = %72, %68, %5, %56, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret void
}

declare i32 @avio_r8(%struct.AVIOContext*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @decode_str(%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8**, i32* nocapture) unnamed_addr #2 {
  %6 = alloca %struct.AVIOContext*, align 8
  %7 = load i32, i32* %4, align 4
  %8 = bitcast %struct.AVIOContext** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  store %struct.AVIOContext* inttoptr (i64 -6148914691236517206 to %struct.AVIOContext*), %struct.AVIOContext** %6, align 8
  %9 = call i32 @avio_open_dyn_buf(%struct.AVIOContext** nonnull %6) #9
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.92, i64 0, i64 0)) #9
  br label %146

13:                                               ; preds = %5
  switch i32 %2, label %133 [
    i32 0, label %16
    i32 1, label %52
    i32 2, label %62
    i32 3, label %14
  ]

14:                                               ; preds = %13
  %15 = icmp eq i32 %7, 0
  br i1 %15, label %139, label %125

16:                                               ; preds = %13
  %17 = icmp eq i32 %7, 0
  br i1 %17, label %139, label %18

18:                                               ; preds = %16, %47
  %19 = phi i32 [ %48, %47 ], [ %7, %16 ]
  %20 = call i32 @avio_r8(%struct.AVIOContext* %1) #9
  %21 = icmp ult i32 %20, 128
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  %24 = and i32 %20, 255
  call void @avio_w8(%struct.AVIOContext* %23, i32 %24) #9
  br label %47

25:                                               ; preds = %18
  %26 = or i32 %20, 1
  %27 = call i32 @llvm.ctlz.i32(i32 %26, i1 true), !range !4
  %28 = sub nuw nsw i32 35, %27
  %29 = udiv i32 %28, 5
  %30 = mul nuw nsw i32 %29, 6
  %31 = add nsw i32 %30, -6
  %32 = lshr i32 256, %29
  %33 = sub nsw i32 0, %32
  %34 = lshr i32 %20, %31
  %35 = or i32 %34, %33
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  %37 = and i32 %35, 255
  call void @avio_w8(%struct.AVIOContext* %36, i32 %37) #9
  %38 = icmp sgt i32 %31, 5
  br i1 %38, label %39, label %47

39:                                               ; preds = %25, %39
  %40 = phi i32 [ %41, %39 ], [ %31, %25 ]
  %41 = add nsw i32 %40, -6
  %42 = lshr i32 %20, %41
  %43 = and i32 %42, 63
  %44 = or i32 %43, 128
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  call void @avio_w8(%struct.AVIOContext* %45, i32 %44) #9
  %46 = icmp sgt i32 %41, 5
  br i1 %46, label %39, label %47

47:                                               ; preds = %39, %25, %22
  %48 = add nsw i32 %19, -1
  %49 = icmp ne i32 %48, 0
  %50 = icmp ne i32 %20, 0
  %51 = and i1 %50, %49
  br i1 %51, label %18, label %135

52:                                               ; preds = %13
  %53 = add nsw i32 %7, -2
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.93, i64 0, i64 0)) #9
  call void @ffio_free_dyn_buf(%struct.AVIOContext** nonnull %6) #9
  store i8* null, i8** %3, align 8
  br label %146

57:                                               ; preds = %52
  %58 = call i32 @avio_rb16(%struct.AVIOContext* %1) #9
  switch i32 %58, label %60 [
    i32 65534, label %59
    i32 65279, label %62
  ]

59:                                               ; preds = %57
  br label %62

60:                                               ; preds = %57
  %61 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i64 0, i64 0)) #9
  call void @ffio_free_dyn_buf(%struct.AVIOContext** nonnull %6) #9
  store i8* null, i8** %3, align 8
  store i32 %53, i32* %4, align 4
  br label %146

62:                                               ; preds = %57, %59, %13
  %63 = phi i32 [ %7, %13 ], [ %53, %57 ], [ %53, %59 ]
  %64 = phi i32 (%struct.AVIOContext*)* [ @avio_rb16, %13 ], [ @avio_rb16, %57 ], [ @avio_rl16, %59 ]
  %65 = icmp sgt i32 %63, 1
  br i1 %65, label %66, label %119

66:                                               ; preds = %62, %115
  %67 = phi i32 [ %88, %115 ], [ %63, %62 ]
  %68 = add nsw i32 %67, -2
  %69 = call i32 %64(%struct.AVIOContext* %1) #9, !callees !5
  %70 = add i32 %69, -55296
  %71 = icmp ult i32 %70, 2048
  br i1 %71, label %72, label %86

72:                                               ; preds = %66
  %73 = add nsw i32 %67, -4
  %74 = icmp sgt i32 %73, -1
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = call i32 %64(%struct.AVIOContext* %1) #9, !callees !5
  br label %77

77:                                               ; preds = %72, %75
  %78 = phi i32 [ %76, %75 ], [ 0, %72 ]
  %79 = add i32 %78, -56320
  %80 = or i32 %79, %70
  %81 = icmp ugt i32 %80, 1023
  br i1 %81, label %119, label %82

82:                                               ; preds = %77
  %83 = shl i32 %70, 10
  %84 = add nuw nsw i32 %83, 65536
  %85 = add i32 %84, %79
  br label %86

86:                                               ; preds = %82, %66
  %87 = phi i32 [ %69, %66 ], [ %85, %82 ]
  %88 = phi i32 [ %68, %66 ], [ %73, %82 ]
  %89 = icmp ult i32 %87, 128
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  %91 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  %92 = and i32 %87, 255
  call void @avio_w8(%struct.AVIOContext* %91, i32 %92) #9
  br label %115

93:                                               ; preds = %86
  %94 = or i32 %87, 1
  %95 = call i32 @llvm.ctlz.i32(i32 %94, i1 true), !range !4
  %96 = sub nuw nsw i32 35, %95
  %97 = udiv i32 %96, 5
  %98 = mul nuw nsw i32 %97, 6
  %99 = add nsw i32 %98, -6
  %100 = lshr i32 256, %97
  %101 = sub nsw i32 0, %100
  %102 = lshr i32 %87, %99
  %103 = or i32 %102, %101
  %104 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  %105 = and i32 %103, 255
  call void @avio_w8(%struct.AVIOContext* %104, i32 %105) #9
  %106 = icmp sgt i32 %99, 5
  br i1 %106, label %107, label %115

107:                                              ; preds = %93, %107
  %108 = phi i32 [ %109, %107 ], [ %99, %93 ]
  %109 = add nsw i32 %108, -6
  %110 = lshr i32 %87, %109
  %111 = and i32 %110, 63
  %112 = or i32 %111, 128
  %113 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  call void @avio_w8(%struct.AVIOContext* %113, i32 %112) #9
  %114 = icmp sgt i32 %109, 5
  br i1 %114, label %107, label %115

115:                                              ; preds = %107, %93, %90
  %116 = icmp sgt i32 %88, 1
  %117 = icmp ne i32 %87, 0
  %118 = and i1 %117, %116
  br i1 %118, label %66, label %119

119:                                              ; preds = %115, %77, %62
  %120 = phi i32 [ 1, %62 ], [ %79, %77 ], [ %87, %115 ]
  %121 = phi i32 [ %63, %62 ], [ %73, %77 ], [ %88, %115 ]
  %122 = icmp slt i32 %121, 0
  %123 = add nsw i32 %121, 2
  %124 = select i1 %122, i32 %123, i32 %121
  br label %135

125:                                              ; preds = %14, %125
  %126 = phi i32 [ %129, %125 ], [ %7, %14 ]
  %127 = call i32 @avio_r8(%struct.AVIOContext* %1) #9
  %128 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  call void @avio_w8(%struct.AVIOContext* %128, i32 %127) #9
  %129 = add nsw i32 %126, -1
  %130 = icmp ne i32 %129, 0
  %131 = icmp ne i32 %127, 0
  %132 = and i1 %131, %130
  br i1 %132, label %125, label %135

133:                                              ; preds = %13
  %134 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %134, i32 24, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0)) #9
  br label %139

135:                                              ; preds = %125, %47, %119
  %136 = phi i32 [ %120, %119 ], [ %20, %47 ], [ %127, %125 ]
  %137 = phi i32 [ %124, %119 ], [ %48, %47 ], [ %129, %125 ]
  %138 = icmp eq i32 %136, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %14, %16, %133, %135
  %140 = phi i32 [ %7, %133 ], [ %137, %135 ], [ 0, %16 ], [ 0, %14 ]
  %141 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  call void @avio_w8(%struct.AVIOContext* %141, i32 0) #9
  br label %142

142:                                              ; preds = %135, %139
  %143 = phi i32 [ %137, %135 ], [ %140, %139 ]
  %144 = load %struct.AVIOContext*, %struct.AVIOContext** %6, align 8
  %145 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %144, i8** %3) #9
  store i32 %143, i32* %4, align 4
  br label %146

146:                                              ; preds = %142, %60, %55, %11
  %147 = phi i32 [ %9, %11 ], [ 0, %142 ], [ -1094995529, %55 ], [ -1094995529, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret i32 %147
}

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #5

declare noalias i8* @av_strdup(i8*) local_unnamed_addr #3

declare i32 @avio_open_dyn_buf(%struct.AVIOContext**) local_unnamed_addr #3

declare void @avio_w8(%struct.AVIOContext*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

declare void @ffio_free_dyn_buf(%struct.AVIOContext**) local_unnamed_addr #3

declare i32 @avio_rl16(%struct.AVIOContext*) local_unnamed_addr #3

declare i32 @avio_close_dyn_buf(%struct.AVIOContext*, i8**) local_unnamed_addr #3

declare i32 @avio_rl24(%struct.AVIOContext*) local_unnamed_addr #3

declare i64 @av_strlcpy(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #5

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @read_geobtag(%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8*, %struct.ID3v2ExtraMeta** nocapture, i32) #2 {
  %7 = alloca i32, align 4
  store i32 %2, i32* %7, align 4
  %8 = icmp slt i32 %2, 1
  br i1 %8, label %74, label %9

9:                                                ; preds = %6
  %10 = tail call noalias i8* @av_mallocz(i64 56) #9
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.120, i64 0, i64 0), i64 56) #9
  br label %74

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %10, i64 16
  %16 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #9
  %17 = add nsw i32 %2, -1
  store i32 %17, i32* %7, align 4
  %18 = getelementptr inbounds i8, i8* %10, i64 24
  %19 = bitcast i8* %18 to i8**
  %20 = call fastcc i32 @decode_str(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 0, i8** %19, i32* nonnull %7)
  %21 = icmp slt i32 %20, 0
  %22 = load i32, i32* %7, align 4
  %23 = icmp slt i32 %22, 1
  %24 = or i1 %21, %23
  br i1 %24, label %69, label %25

25:                                               ; preds = %14
  %26 = shl i32 %16, 24
  %27 = ashr exact i32 %26, 24
  %28 = getelementptr inbounds i8, i8* %10, i64 32
  %29 = bitcast i8* %28 to i8**
  %30 = call fastcc i32 @decode_str(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 %27, i8** %29, i32* nonnull %7)
  %31 = icmp slt i32 %30, 0
  %32 = load i32, i32* %7, align 4
  %33 = icmp slt i32 %32, 1
  %34 = or i1 %31, %33
  br i1 %34, label %69, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds i8, i8* %10, i64 40
  %37 = bitcast i8* %36 to i8**
  %38 = call fastcc i32 @decode_str(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 %27, i8** %37, i32* nonnull %7)
  %39 = load i32, i32* %7, align 4
  %40 = or i32 %39, %38
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = icmp eq i32 %39, 0
  br i1 %43, label %57, label %44

44:                                               ; preds = %42
  %45 = sext i32 %39 to i64
  %46 = tail call noalias i8* @av_malloc(i64 %45) #9
  %47 = getelementptr inbounds i8, i8* %10, i64 48
  %48 = bitcast i8* %47 to i8**
  store i8* %46, i8** %48, align 8
  %49 = icmp eq i8* %46, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  %51 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %51, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i64 0, i64 0), i32 %39) #9
  br label %69

52:                                               ; preds = %44
  %53 = tail call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %46, i32 %39) #9
  %54 = icmp ult i32 %53, %39
  br i1 %54, label %55, label %60

55:                                               ; preds = %52
  %56 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.121, i64 0, i64 0)) #9
  br label %60

57:                                               ; preds = %42
  %58 = getelementptr inbounds i8, i8* %10, i64 48
  %59 = bitcast i8* %58 to i8**
  store i8* null, i8** %59, align 8
  br label %60

60:                                               ; preds = %52, %55, %57
  %61 = phi i32 [ 0, %57 ], [ %53, %55 ], [ %53, %52 ]
  %62 = bitcast i8* %15 to i32*
  store i32 %61, i32* %62, align 8
  %63 = bitcast i8* %10 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0), i8** %63, align 8
  %64 = bitcast %struct.ID3v2ExtraMeta** %4 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds i8, i8* %10, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast %struct.ID3v2ExtraMeta** %4 to i8**
  store i8* %10, i8** %68, align 8
  br label %74

69:                                               ; preds = %35, %25, %14, %50
  %70 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %70, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.86, i64 0, i64 0), i8* %3) #9
  tail call void @av_freep(i8* %18) #9
  %71 = getelementptr inbounds i8, i8* %10, i64 32
  tail call void @av_freep(i8* %71) #9
  %72 = getelementptr inbounds i8, i8* %10, i64 40
  tail call void @av_freep(i8* %72) #9
  %73 = getelementptr inbounds i8, i8* %10, i64 48
  tail call void @av_freep(i8* %73) #9
  tail call void @av_free(i8* nonnull %10) #9
  br label %74

74:                                               ; preds = %6, %69, %60, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @free_geobtag(i8*) #2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  tail call void @av_freep(i8* %2) #9
  %3 = getelementptr inbounds i8, i8* %0, i64 16
  tail call void @av_freep(i8* %3) #9
  %4 = getelementptr inbounds i8, i8* %0, i64 24
  tail call void @av_freep(i8* %4) #9
  %5 = getelementptr inbounds i8, i8* %0, i64 32
  tail call void @av_freep(i8* %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @read_apic(%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8* nocapture readnone, %struct.ID3v2ExtraMeta** nocapture, i32) #2 {
  %7 = alloca i32, align 4
  %8 = alloca [64 x i8], align 16
  %9 = alloca %struct.ID3v2ExtraMeta*, align 8
  store i32 %2, i32* %7, align 4
  %10 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 64, i1 false)
  %11 = bitcast %struct.ID3v2ExtraMeta** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store %struct.ID3v2ExtraMeta* null, %struct.ID3v2ExtraMeta** %9, align 8
  %12 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #9
  %13 = sext i32 %2 to i64
  %14 = add nsw i64 %12, %13
  %15 = icmp slt i32 %2, 5
  br i1 %15, label %119, label %16

16:                                               ; preds = %6
  %17 = icmp eq i32 %5, 0
  %18 = icmp slt i32 %2, 7
  %19 = and i1 %18, %17
  br i1 %19, label %119, label %20

20:                                               ; preds = %16
  %21 = tail call noalias i8* @av_mallocz(i64 56) #9
  %22 = bitcast %struct.ID3v2ExtraMeta** %9 to i8**
  store i8* %21, i8** %22, align 8
  %23 = icmp eq i8* %21, null
  br i1 %23, label %119, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  %26 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #9
  %27 = add nsw i32 %2, -1
  store i32 %27, i32* %7, align 4
  br i1 %17, label %35, label %28

28:                                               ; preds = %24
  %29 = call i32 @avio_get_str(%struct.AVIOContext* %1, i32 %27, i8* nonnull %10, i32 64) #9
  %30 = icmp sgt i32 %29, -1
  %31 = icmp sgt i32 %27, %29
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %114

33:                                               ; preds = %28
  %34 = sub nsw i32 %27, %29
  br label %41

35:                                               ; preds = %24
  %36 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %10, i32 3) #9
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %114, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 3
  store i8 0, i8* %39, align 1
  %40 = add nsw i32 %2, -4
  br label %41

41:                                               ; preds = %33, %38
  %42 = phi i32 [ %34, %33 ], [ %40, %38 ]
  store i32 %42, i32* %7, align 4
  %43 = call i32 @av_strncasecmp(i8* getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 0, i32 0, i64 0), i8* nonnull %10, i64 64) #9
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = call i32 @av_strncasecmp(i8* getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 1, i32 0, i64 0), i8* nonnull %10, i64 64) #9
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %122

48:                                               ; preds = %137, %134, %131, %128, %125, %122, %45, %41
  %49 = phi i32* [ getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 0, i32 1), %41 ], [ getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 1, i32 1), %45 ], [ getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 2, i32 1), %122 ], [ getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 3, i32 1), %125 ], [ getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 4, i32 1), %128 ], [ getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 5, i32 1), %131 ], [ getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 6, i32 1), %134 ], [ getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 7, i32 1), %137 ]
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %137, %48
  %53 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %53, i32 24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.122, i64 0, i64 0), i8* nonnull %10) #9
  br label %114

54:                                               ; preds = %48
  %55 = getelementptr inbounds i8, i8* %21, i64 40
  %56 = bitcast i8* %55 to i32*
  store i32 %50, i32* %56, align 8
  %57 = call i32 @avio_r8(%struct.AVIOContext* %1) #9
  %58 = add nsw i32 %42, -1
  store i32 %58, i32* %7, align 4
  %59 = icmp ugt i32 %57, 20
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.123, i64 0, i64 0), i32 %57) #9
  br label %62

62:                                               ; preds = %54, %60
  %63 = phi i32 [ 0, %60 ], [ %57, %54 ]
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [21 x i8*], [21 x i8*]* @ff_id3v2_picture_types, i64 0, i64 %64
  %66 = bitcast i8** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds i8, i8* %21, i64 24
  %69 = bitcast i8* %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds i8, i8* %21, i64 32
  %71 = bitcast i8* %70 to i8**
  %72 = call fastcc i32 @decode_str(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 %26, i8** %71, i32* nonnull %7)
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %62
  %75 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %75, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.124, i64 0, i64 0)) #9
  br label %114

76:                                               ; preds = %62
  %77 = load i32, i32* %7, align 4
  %78 = add nsw i32 %77, 64
  %79 = call %struct.AVBufferRef* @av_buffer_alloc(i32 %78) #9
  %80 = bitcast i8* %25 to %struct.AVBufferRef**
  store %struct.AVBufferRef* %79, %struct.AVBufferRef** %80, align 8
  %81 = icmp ne %struct.AVBufferRef* %79, null
  %82 = icmp ne i32 %77, 0
  %83 = and i1 %82, %81
  br i1 %83, label %84, label %114

84:                                               ; preds = %76
  %85 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %79, i64 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = call i32 @avio_read(%struct.AVIOContext* %1, i8* %86, i32 %77) #9
  %88 = icmp eq i32 %87, %77
  br i1 %88, label %89, label %114

89:                                               ; preds = %84
  %90 = load %struct.AVBufferRef*, %struct.AVBufferRef** %80, align 8
  %91 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %90, i64 0, i32 1
  %92 = load i8*, i8** %91, align 8
  %93 = sext i32 %77 to i64
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  call void @llvm.memset.p0i8.i64(i8* align 1 %94, i8 0, i64 64, i1 false)
  %95 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %9, align 8
  %96 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %95, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i8** %96, align 8
  %97 = bitcast %struct.ID3v2ExtraMeta** %4 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %9, align 8
  %100 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %99, i64 0, i32 1
  %101 = bitcast %struct.ID3v2ExtraMeta** %100 to i64*
  store i64 %98, i64* %101, align 8
  %102 = ptrtoint %struct.ID3v2ExtraMeta* %99 to i64
  store i64 %102, i64* %97, align 8
  %103 = load i8*, i8** %71, align 8
  %104 = call i64 @strlen(i8* %103) #11
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %121, label %106

106:                                              ; preds = %89, %112
  %107 = phi i64 [ %108, %112 ], [ %104, %89 ]
  %108 = add i64 %107, -1
  %109 = getelementptr inbounds i8, i8* %103, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %110, 32
  br i1 %111, label %112, label %121

112:                                              ; preds = %106
  store i8 0, i8* %109, align 1
  %113 = icmp eq i64 %108, 0
  br i1 %113, label %121, label %106

114:                                              ; preds = %28, %84, %76, %35, %74, %52
  %115 = icmp eq i8* %25, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %114
  %117 = bitcast i8* %25 to %struct.AVBufferRef**
  call void @av_buffer_unref(%struct.AVBufferRef** nonnull %117) #9
  %118 = getelementptr inbounds i8, i8* %21, i64 32
  call void @av_freep(i8* %118) #9
  br label %119

119:                                              ; preds = %20, %16, %6, %114, %116
  call void @av_freep(i8* nonnull %11) #9
  %120 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 %14, i32 0) #9
  br label %121

121:                                              ; preds = %112, %106, %89, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #9
  ret void

122:                                              ; preds = %45
  %123 = call i32 @av_strncasecmp(i8* getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 2, i32 0, i64 0), i8* nonnull %10, i64 64) #9
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %48, label %125

125:                                              ; preds = %122
  %126 = call i32 @av_strncasecmp(i8* getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 3, i32 0, i64 0), i8* nonnull %10, i64 64) #9
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %48, label %128

128:                                              ; preds = %125
  %129 = call i32 @av_strncasecmp(i8* getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 4, i32 0, i64 0), i8* nonnull %10, i64 64) #9
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %48, label %131

131:                                              ; preds = %128
  %132 = call i32 @av_strncasecmp(i8* getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 5, i32 0, i64 0), i8* nonnull %10, i64 64) #9
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %48, label %134

134:                                              ; preds = %131
  %135 = call i32 @av_strncasecmp(i8* getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 6, i32 0, i64 0), i8* nonnull %10, i64 64) #9
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %48, label %137

137:                                              ; preds = %134
  %138 = call i32 @av_strncasecmp(i8* getelementptr inbounds ([9 x %struct.CodecMime], [9 x %struct.CodecMime]* @ff_id3v2_mime_tags, i64 0, i64 7, i32 0, i64 0), i8* nonnull %10, i64 64) #9
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %48, label %52
}

; Function Attrs: nounwind ssp uwtable
define internal void @free_apic(i8*) #2 {
  %2 = bitcast i8* %0 to %struct.AVBufferRef**
  tail call void @av_buffer_unref(%struct.AVBufferRef** %2) #9
  %3 = getelementptr inbounds i8, i8* %0, i64 16
  tail call void @av_freep(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @read_chapter(%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8* nocapture readnone, %struct.ID3v2ExtraMeta** nocapture, i32) #2 {
  %7 = alloca i32, align 4
  %8 = alloca [5 x i8], align 1
  %9 = alloca %struct.ID3v2ExtraMeta*, align 8
  store i32 %2, i32* %7, align 4
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %10) #9
  %11 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 4
  %12 = bitcast %struct.ID3v2ExtraMeta** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 -86, i64 5, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = tail call noalias i8* @av_mallocz(i64 56) #9
  %14 = bitcast %struct.ID3v2ExtraMeta** %9 to i8**
  store i8* %13, i8** %14, align 8
  %15 = icmp eq i8* %13, null
  br i1 %15, label %75, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  %18 = bitcast i8* %17 to i8**
  %19 = call fastcc i32 @decode_str(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 0, i8** %18, i32* nonnull %7)
  %20 = icmp slt i32 %19, 0
  %21 = load i32, i32* %7, align 4
  %22 = icmp slt i32 %21, 16
  %23 = or i1 %20, %22
  br i1 %23, label %72, label %24

24:                                               ; preds = %16
  %25 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #9
  %26 = getelementptr inbounds i8, i8* %13, i64 24
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 8
  %28 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #9
  %29 = getelementptr inbounds i8, i8* %13, i64 28
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 4
  %31 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 8) #9
  %32 = add nsw i32 %21, -16
  store i32 %32, i32* %7, align 4
  %33 = icmp sgt i32 %32, 10
  br i1 %33, label %34, label %59

34:                                               ; preds = %24
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to %struct.AVDictionary**
  br label %37

37:                                               ; preds = %34, %55
  %38 = phi i32 [ %32, %34 ], [ %56, %55 ]
  %39 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %10, i32 4) #9
  %40 = icmp slt i32 %39, 4
  br i1 %40, label %70, label %41

41:                                               ; preds = %37
  store i8 0, i8* %11, align 1
  %42 = call i32 @avio_rb32(%struct.AVIOContext* %1) #9
  %43 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 2) #9
  %44 = add nsw i32 %38, -10
  %45 = icmp slt i32 %42, 0
  %46 = icmp slt i32 %44, %42
  %47 = or i1 %45, %46
  br i1 %47, label %70, label %48

48:                                               ; preds = %41
  %49 = load i8, i8* %10, align 1
  %50 = icmp eq i8 %49, 84
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call fastcc void @read_ttag(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 %42, %struct.AVDictionary** %36, i8* nonnull %10)
  br label %55

52:                                               ; preds = %48
  %53 = sext i32 %42 to i64
  %54 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %53) #9
  br label %55

55:                                               ; preds = %52, %51
  %56 = sub nsw i32 %44, %42
  %57 = icmp sgt i32 %56, 10
  br i1 %57, label %37, label %58

58:                                               ; preds = %55
  store i32 %56, i32* %7, align 4
  br label %59

59:                                               ; preds = %24, %58
  %60 = getelementptr inbounds i8, i8* %13, i64 32
  %61 = bitcast i8* %60 to %struct.AVDictionary**
  call void @ff_metadata_conv(%struct.AVDictionary** %61, %struct.AVMetadataConv* null, %struct.AVMetadataConv* getelementptr inbounds ([16 x %struct.AVMetadataConv], [16 x %struct.AVMetadataConv]* @ff_id3v2_34_metadata_conv, i64 0, i64 0)) #9
  call void @ff_metadata_conv(%struct.AVDictionary** %61, %struct.AVMetadataConv* null, %struct.AVMetadataConv* getelementptr inbounds ([8 x %struct.AVMetadataConv], [8 x %struct.AVMetadataConv]* @ff_id3v2_4_metadata_conv, i64 0, i64 0)) #9
  %62 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %9, align 8
  %63 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %62, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), i8** %63, align 8
  %64 = bitcast %struct.ID3v2ExtraMeta** %4 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %9, align 8
  %67 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %66, i64 0, i32 1
  %68 = bitcast %struct.ID3v2ExtraMeta** %67 to i64*
  store i64 %65, i64* %68, align 8
  %69 = ptrtoint %struct.ID3v2ExtraMeta* %66 to i64
  store i64 %69, i64* %64, align 8
  br label %75

70:                                               ; preds = %37, %41
  %71 = phi i32 [ %38, %37 ], [ %44, %41 ]
  store i32 %71, i32* %7, align 4
  br label %72

72:                                               ; preds = %16, %70
  call void @av_freep(i8* %17) #9
  %73 = getelementptr inbounds i8, i8* %13, i64 32
  %74 = bitcast i8* %73 to %struct.AVDictionary**
  call void @av_dict_free(%struct.AVDictionary** %74) #9
  call void @av_freep(i8* nonnull %12) #9
  br label %75

75:                                               ; preds = %6, %72, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @free_chapter(i8*) #2 {
  tail call void @av_freep(i8* %0) #9
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  %3 = bitcast i8* %2 to %struct.AVDictionary**
  tail call void @av_dict_free(%struct.AVDictionary** %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @read_priv(%struct.AVFormatContext*, %struct.AVIOContext*, i32, i8* nocapture readnone, %struct.ID3v2ExtraMeta** nocapture, i32) #2 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.ID3v2ExtraMeta*, align 8
  store i32 %2, i32* %7, align 4
  %9 = bitcast %struct.ID3v2ExtraMeta** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = tail call noalias i8* @av_mallocz(i64 56) #9
  %11 = bitcast %struct.ID3v2ExtraMeta** %8 to i8**
  store i8* %10, i8** %11, align 8
  %12 = icmp eq i8* %10, null
  br i1 %12, label %40, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast i8* %14 to i8**
  %16 = call fastcc i32 @decode_str(%struct.AVFormatContext* %0, %struct.AVIOContext* %1, i32 0, i8** %15, i32* nonnull %7)
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %38, label %18

18:                                               ; preds = %13
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = tail call noalias i8* @av_malloc(i64 %20) #9
  %22 = getelementptr inbounds i8, i8* %10, i64 24
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = icmp eq i8* %21, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %10, i64 32
  %27 = bitcast i8* %26 to i32*
  store i32 %19, i32* %27, align 8
  %28 = tail call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %21, i32 %19) #9
  %29 = load i32, i32* %27, align 8
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = bitcast i8* %10 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8** %32, align 8
  %33 = bitcast %struct.ID3v2ExtraMeta** %4 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds i8, i8* %10, i64 8
  %36 = bitcast i8* %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = ptrtoint i8* %10 to i64
  store i64 %37, i64* %33, align 8
  br label %40

38:                                               ; preds = %25, %18, %13
  tail call void @av_freep(i8* %14) #9
  %39 = getelementptr inbounds i8, i8* %10, i64 24
  tail call void @av_freep(i8* %39) #9
  call void @av_freep(i8* nonnull %9) #9
  br label %40

40:                                               ; preds = %6, %38, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @free_priv(i8*) #2 {
  tail call void @av_freep(i8* %0) #9
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  tail call void @av_freep(i8* %2) #9
  ret void
}

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #3

declare noalias i8* @av_malloc(i64) local_unnamed_addr #3

declare i32 @avio_get_str(%struct.AVIOContext*, i32, i8*, i32) local_unnamed_addr #3

declare i32 @av_strncasecmp(i8*, i8*, i64) local_unnamed_addr #3

declare %struct.AVBufferRef* @av_buffer_alloc(i32) local_unnamed_addr #3

declare void @av_buffer_unref(%struct.AVBufferRef**) local_unnamed_addr #3

declare void @av_dict_free(%struct.AVDictionary**) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 310811}
!3 = !{i32 310969}
!4 = !{i32 0, i32 32}
!5 = !{i32 (%struct.AVIOContext*)* @avio_rb16, i32 (%struct.AVIOContext*)* @avio_rl16}
