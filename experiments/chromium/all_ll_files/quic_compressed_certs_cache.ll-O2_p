; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/quic_compressed_certs_cache.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/quic_compressed_certs_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.quic::QuicCompressedCertsCache::UncompressedCerts" = type { %"class.quic::QuicReferenceCountedPointer", %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"struct.quic::ProofSource::Chain"* }
%"struct.quic::ProofSource::Chain" = type { %"class.quic::QuicReferenceCounted.base", %"class.std::__1::vector" }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicCompressedCertsCache::CachedCerts" = type { %"class.quic::QuicReferenceCountedPointer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.quic::QuicCompressedCertsCache" = type { %"class.quic::QuicLRUCache" }
%"class.quic::QuicLRUCache" = type { %"class.quiche::QuicheLinkedHashMap", i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair"**, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"struct.std::__1::pair" = type { i64, %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.quic::QuicReferenceCountedImpl" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator.16" = type { i8 }
%"struct.std::__1::pair.21" = type { i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.quic::QuicCompressedCertsCache::CachedCerts"* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::pair.42" = type { %"class.std::__1::tuple.43", %"class.std::__1::tuple.46" }
%"class.std::__1::tuple.43" = type { %"struct.std::__1::__tuple_impl.44" }
%"struct.std::__1::__tuple_impl.44" = type { %"class.std::__1::__tuple_leaf.45" }
%"class.std::__1::__tuple_leaf.45" = type { i64* }
%"class.std::__1::tuple.46" = type { %"struct.std::__1::__tuple_impl.47" }
%"struct.std::__1::__tuple_impl.47" = type { %"class.std::__1::__tuple_leaf.48" }
%"class.std::__1::__tuple_leaf.48" = type { %"class.std::__1::__list_iterator"* }
%"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable" = type { %"class.absl::container_internal::raw_hash_set"* }
%"struct.std::__1::pair.35" = type <{ %"class.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::iterator", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::iterator" = type { i8*, %union.anon.25 }
%union.anon.25 = type { %"struct.std::__1::pair"** }
%"struct.std::__1::pair.37" = type { i64, %"class.std::__1::__list_iterator" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4quic12QuicLRUCacheImNS_24QuicCompressedCertsCache11CachedCertsEE6LookupERKm = comdat any

$_ZN4quic12QuicLRUCacheImNS_24QuicCompressedCertsCache11CachedCertsEE6InsertERKmNSt3__110unique_ptrIS2_NS6_14default_deleteIS2_EEEE = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeINS_4pairImNS_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS_14default_deleteIS7_EEEEEEPvEEEEE7destroyISB_vvEEvRSE_PT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE5clearEv = comdat any

$_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE5eraseENS1_15__list_iteratorINS1_4pairImS8_EEPvEE = comdat any

$_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE7emplaceIJRKmS8_EEENS1_4pairINS1_15__list_iteratorINSJ_ImS8_EEPvEEbEEDpOT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE19EmplaceDecomposableclImJRKNS3_21piecewise_construct_tENS3_5tupleIJOmEEENSW_IJOSF_EEEEEENS5_INSQ_8iteratorEbEERKT_DpOT0_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZN4quic24QuicCompressedCertsCache29kQuicCompressedCertsCacheSizeE = hidden local_unnamed_addr constant i64 225, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@.str.1 = private unnamed_addr constant [65 x i8] c"../../net/third_party/quiche/src/common/quiche_linked_hash_map.h\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"found->second == position\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"Inconsistent iterator for map and list, or the iterator is invalid.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic24QuicCompressedCertsCache17UncompressedCertsC1Ev = hidden unnamed_addr alias void (%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"*), void (%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"*)* @_ZN4quic24QuicCompressedCertsCache17UncompressedCertsC2Ev
@_ZN4quic24QuicCompressedCertsCache17UncompressedCertsC1ERKNS_27QuicReferenceCountedPointerINS_11ProofSource5ChainEEEPKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_ = hidden unnamed_addr alias void (%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"*, %"class.quic::QuicReferenceCountedPointer"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"*, %"class.quic::QuicReferenceCountedPointer"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN4quic24QuicCompressedCertsCache17UncompressedCertsC2ERKNS_27QuicReferenceCountedPointerINS_11ProofSource5ChainEEEPKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_
@_ZN4quic24QuicCompressedCertsCache17UncompressedCertsD1Ev = hidden unnamed_addr alias void (%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"*), void (%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"*)* @_ZN4quic24QuicCompressedCertsCache17UncompressedCertsD2Ev
@_ZN4quic24QuicCompressedCertsCache11CachedCertsC1Ev = hidden unnamed_addr alias void (%"class.quic::QuicCompressedCertsCache::CachedCerts"*), void (%"class.quic::QuicCompressedCertsCache::CachedCerts"*)* @_ZN4quic24QuicCompressedCertsCache11CachedCertsC2Ev
@_ZN4quic24QuicCompressedCertsCache11CachedCertsC1ERKNS0_17UncompressedCertsERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"*, %"class.std::__1::basic_string"*), void (%"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"*, %"class.std::__1::basic_string"*)* @_ZN4quic24QuicCompressedCertsCache11CachedCertsC2ERKNS0_17UncompressedCertsERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
@_ZN4quic24QuicCompressedCertsCache11CachedCertsC1ERKS1_ = hidden unnamed_addr alias void (%"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"class.quic::QuicCompressedCertsCache::CachedCerts"*), void (%"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"class.quic::QuicCompressedCertsCache::CachedCerts"*)* @_ZN4quic24QuicCompressedCertsCache11CachedCertsC2ERKS1_
@_ZN4quic24QuicCompressedCertsCache11CachedCertsD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicCompressedCertsCache::CachedCerts"*), void (%"class.quic::QuicCompressedCertsCache::CachedCerts"*)* @_ZN4quic24QuicCompressedCertsCache11CachedCertsD2Ev
@_ZN4quic24QuicCompressedCertsCacheC1El = hidden unnamed_addr alias void (%"class.quic::QuicCompressedCertsCache"*, i64), void (%"class.quic::QuicCompressedCertsCache"*, i64)* @_ZN4quic24QuicCompressedCertsCacheC2El
@_ZN4quic24QuicCompressedCertsCacheD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicCompressedCertsCache"*), void (%"class.quic::QuicCompressedCertsCache"*)* @_ZN4quic24QuicCompressedCertsCacheD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic24QuicCompressedCertsCache17UncompressedCertsC2Ev(%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCache17UncompressedCertsC2ERKNS_27QuicReferenceCountedPointerINS_11ProofSource5ChainEEEPKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_(%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* nocapture, %"class.quic::QuicReferenceCountedPointer"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %5, align 8
  %7 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.quic::ProofSource::Chain"* %6, %"struct.quic::ProofSource::Chain"** %7, align 8
  %8 = icmp eq %"struct.quic::ProofSource::Chain"* %6, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %4, %9
  %13 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %13, align 8
  %14 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %0, i64 0, i32 2
  store %"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCache17UncompressedCertsD2Ev(%"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %2, align 8
  %4 = icmp eq %"struct.quic::ProofSource::Chain"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.quic::QuicReferenceCountedImpl"*
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %11 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %14 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %14, i64 1
  %16 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %15, align 8
  tail call void %16(%"class.quic::QuicReferenceCountedImpl"* nonnull %12) #11
  br label %17

17:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCache11CachedCertsC2Ev(%"class.quic::QuicCompressedCertsCache::CachedCerts"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCache11CachedCertsC2ERKNS0_17UncompressedCertsERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.quic::ProofSource::Chain"* %5, %"struct.quic::ProofSource::Chain"** %6, align 8
  %7 = icmp eq %"struct.quic::ProofSource::Chain"* %5, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %3, %8
  %12 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1, i64 0, i32 1
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #11
  br label %27

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %24, i64 %26) #11
  br label %27

27:                                               ; preds = %19, %22
  %28 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1, i64 0, i32 2
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  br label %43

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %40, i64 %42) #11
  br label %43

43:                                               ; preds = %35, %38
  %44 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 3
  %45 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #11
  br label %57

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %44, i8* %54, i64 %56) #11
  br label %57

57:                                               ; preds = %49, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCache11CachedCertsC2ERKS1_(%"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"class.quic::QuicCompressedCertsCache::CachedCerts"* nocapture readonly dereferenceable(80)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %3, align 8
  %5 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.quic::ProofSource::Chain"* %4, %"struct.quic::ProofSource::Chain"** %5, align 8
  %6 = icmp eq %"struct.quic::ProofSource::Chain"* %4, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %1, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  br label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %22, i64 %24) #11
  br label %25

25:                                               ; preds = %17, %20
  %26 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %1, i64 0, i32 2
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #11
  br label %40

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %26, i8* %37, i64 %39) #11
  br label %40

40:                                               ; preds = %32, %35
  %41 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %1, i64 0, i32 3
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %40
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #11
  br label %55

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %41, i8* %52, i64 %54) #11
  br label %55

55:                                               ; preds = %47, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCache11CachedCertsD2Ev(%"class.quic::QuicCompressedCertsCache::CachedCerts"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 3
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #18
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #18
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %29, align 8
  %31 = icmp eq %"struct.quic::ProofSource::Chain"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %30, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe"* %38 to %"class.quic::QuicReferenceCountedImpl"*
  %40 = bitcast %"class.base::RefCountedThreadSafe"* %38 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %41 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %41, i64 1
  %43 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %42, align 8
  tail call void %43(%"class.quic::QuicReferenceCountedImpl"* nonnull %39) #11
  br label %44

44:                                               ; preds = %28, %32, %37
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic24QuicCompressedCertsCache11CachedCerts24MatchesUncompressedCertsERKNS0_17UncompressedCertsE(%"class.quic::QuicCompressedCertsCache::CachedCerts"* nocapture readonly, %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1, i64 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = icmp eq i64 %13, %21
  br i1 %22, label %23, label %114

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %27 = select i1 %9, i8* %25, i8* %26
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %31 = select i1 %17, i8* %29, i8* %30
  %32 = icmp eq i64 %13, 0
  br i1 %9, label %39, label %33

33:                                               ; preds = %23
  br i1 %32, label %55, label %34

34:                                               ; preds = %33
  %35 = ptrtoint i8* %25 to i64
  %36 = trunc i64 %35 to i8
  %37 = load i8, i8* %31, align 1
  %38 = icmp eq i8 %37, %36
  br i1 %38, label %40, label %114

39:                                               ; preds = %23
  br i1 %32, label %55, label %52

40:                                               ; preds = %34, %47
  %41 = phi i64 [ %44, %47 ], [ %12, %34 ]
  %42 = phi i8* [ %45, %47 ], [ %26, %34 ]
  %43 = phi i8* [ %48, %47 ], [ %31, %34 ]
  %44 = add i64 %41, -1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %45, align 1
  %50 = load i8, i8* %48, align 1
  %51 = icmp eq i8 %49, %50
  br i1 %51, label %40, label %114

52:                                               ; preds = %39
  %53 = tail call i32 @bcmp(i8* %27, i8* %31, i64 %13) #11
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %114

55:                                               ; preds = %40, %33, %39, %52
  %56 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 2
  %57 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1, i64 0, i32 2
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %69 to i64
  %74 = select i1 %70, i64 %72, i64 %73
  %75 = icmp eq i64 %66, %74
  br i1 %75, label %76, label %114

76:                                               ; preds = %55
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %80 = select i1 %62, i8* %78, i8* %79
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %84 = select i1 %70, i8* %82, i8* %83
  %85 = icmp eq i64 %66, 0
  br i1 %62, label %92, label %86

86:                                               ; preds = %76
  br i1 %85, label %108, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %78 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %84, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %93, label %114

92:                                               ; preds = %76
  br i1 %85, label %108, label %105

93:                                               ; preds = %87, %100
  %94 = phi i64 [ %97, %100 ], [ %65, %87 ]
  %95 = phi i8* [ %98, %100 ], [ %79, %87 ]
  %96 = phi i8* [ %101, %100 ], [ %84, %87 ]
  %97 = add i64 %94, -1
  %98 = getelementptr inbounds i8, i8* %95, i64 1
  %99 = icmp eq i64 %97, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds i8, i8* %96, i64 1
  %102 = load i8, i8* %98, align 1
  %103 = load i8, i8* %101, align 1
  %104 = icmp eq i8 %102, %103
  br i1 %104, label %93, label %114

105:                                              ; preds = %92
  %106 = tail call i32 @bcmp(i8* %80, i8* %84, i64 %66) #11
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %114

108:                                              ; preds = %93, %86, %92, %105
  %109 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %109, align 8
  %111 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %111, align 8
  %113 = icmp eq %"struct.quic::ProofSource::Chain"* %110, %112
  br label %114

114:                                              ; preds = %47, %100, %34, %87, %55, %2, %108, %105, %52
  %115 = phi i1 [ false, %105 ], [ false, %52 ], [ %113, %108 ], [ false, %2 ], [ false, %55 ], [ false, %87 ], [ false, %34 ], [ false, %100 ], [ false, %47 ]
  ret i1 %115
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.std::__1::basic_string"* @_ZNK4quic24QuicCompressedCertsCache11CachedCerts15compressed_certEv(%"class.quic::QuicCompressedCertsCache::CachedCerts"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %0, i64 0, i32 3
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCacheC2El(%"class.quic::QuicCompressedCertsCache"*, i64) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %3, align 8
  %4 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"*** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #11
  %6 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %8, align 8
  %9 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %9, align 8
  %10 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 1
  store i64 %1, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCacheD2Ev(%"class.quic::QuicCompressedCertsCache"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set"* %2) #11
  %3 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__compressed_pair.13"* %8 to %"class.std::__1::allocator.16"*
  %10 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %16 = bitcast %"struct.std::__1::__list_node_base"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  store i64 %17, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.std::__1::__list_node_base"** %15 to i64**
  %25 = load i64*, i64** %24, align 8
  store i64 %23, i64* %25, align 8
  store i64 0, i64* %4, align 8
  %26 = icmp eq %"struct.std::__1::__list_node_base"* %11, %12
  br i1 %26, label %64, label %27

27:                                               ; preds = %7, %27
  %28 = phi %"struct.std::__1::__list_node_base"* [ %30, %27 ], [ %11, %7 ]
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 1
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 1
  %32 = bitcast %"struct.std::__1::__list_node_base"* %31 to %"struct.std::__1::pair.21"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeINS_4pairImNS_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS_14default_deleteIS7_EEEEEEPvEEEEE7destroyISB_vvEEvRSE_PT_(%"class.std::__1::allocator.16"* dereferenceable(1) %9, %"struct.std::__1::pair.21"* %32) #11
  %33 = bitcast %"struct.std::__1::__list_node_base"* %28 to i8*
  tail call void @_ZdlPv(i8* %33) #18
  %34 = icmp eq %"struct.std::__1::__list_node_base"* %30, %12
  br i1 %34, label %35, label %27

35:                                               ; preds = %27
  %36 = load i64, i64* %4, align 8
  %37 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %35
  %40 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %41 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %37, i64 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %37, i64 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %43, i64 0, i32 1
  %45 = bitcast %"struct.std::__1::__list_node_base"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %40, i64 0, i32 0
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 1
  %50 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64*
  store i64 %46, i64* %50, align 8
  %51 = bitcast %"struct.std::__1::__list_node_base"* %40 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"struct.std::__1::__list_node_base"** %44 to i64**
  %54 = load i64*, i64** %53, align 8
  store i64 %52, i64* %54, align 8
  store i64 0, i64* %4, align 8
  %55 = icmp eq %"struct.std::__1::__list_node_base"* %40, %41
  br i1 %55, label %64, label %56

56:                                               ; preds = %39, %56
  %57 = phi %"struct.std::__1::__list_node_base"* [ %59, %56 ], [ %40, %39 ]
  %58 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %57, i64 0, i32 1
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__list_node_base"* %60 to %"struct.std::__1::pair.21"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeINS_4pairImNS_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS_14default_deleteIS7_EEEEEEPvEEEEE7destroyISB_vvEEvRSE_PT_(%"class.std::__1::allocator.16"* dereferenceable(1) %9, %"struct.std::__1::pair.21"* %61) #11
  %62 = bitcast %"struct.std::__1::__list_node_base"* %57 to i8*
  tail call void @_ZdlPv(i8* %62) #18
  %63 = icmp eq %"struct.std::__1::__list_node_base"* %59, %41
  br i1 %63, label %64, label %56

64:                                               ; preds = %56, %7, %1, %39, %35
  %65 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %91, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %74

71:                                               ; preds = %87
  %72 = load i8*, i8** %69, align 8
  tail call void @_ZdlPv(i8* %72) #18
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %69, align 8
  %73 = bitcast %"struct.std::__1::pair"*** %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 32, i1 false) #11
  br label %91

74:                                               ; preds = %87, %68
  %75 = phi i64 [ %66, %68 ], [ %88, %87 ]
  %76 = phi i64 [ 0, %68 ], [ %89, %87 ]
  %77 = load i8*, i8** %69, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %76
  %79 = load i8, i8* %78, align 1
  %80 = icmp sgt i8 %79, -1
  br i1 %80, label %81, label %87

81:                                               ; preds = %74
  %82 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %70, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %82, i64 %76
  %84 = bitcast %"struct.std::__1::pair"** %83 to i8**
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #18
  %86 = load i64, i64* %65, align 8
  br label %87

87:                                               ; preds = %81, %74
  %88 = phi i64 [ %75, %74 ], [ %86, %81 ]
  %89 = add i64 %76, 1
  %90 = icmp eq i64 %89, %88
  br i1 %90, label %71, label %74

91:                                               ; preds = %64, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::basic_string"* @_ZN4quic24QuicCompressedCertsCache17GetCompressedCertERKNS_27QuicReferenceCountedPointerINS_11ProofSource5ChainEEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESF_(%"class.quic::QuicCompressedCertsCache"*, %"class.quic::QuicReferenceCountedPointer"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = alloca %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", align 8
  %8 = alloca i64, align 8
  %9 = bitcast %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %7, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %7, i64 0, i32 2
  %13 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %7, i64 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %13, align 8
  store %"struct.quic::ProofSource::Chain"* %16, %"struct.quic::ProofSource::Chain"** %10, align 8
  %17 = icmp eq %"struct.quic::ProofSource::Chain"* %16, null
  %18 = ptrtoint %"struct.quic::ProofSource::Chain"* %16 to i64
  br i1 %17, label %22, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %4, %19
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %11, align 8
  store %"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"** %12, align 8
  %23 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %33 = zext i8 %26 to i64
  %34 = select i1 %27, i8* %29, i8* %32
  %35 = select i1 %27, i64 %31, i64 %33
  %36 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #11
  %37 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %34, i64 %35) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #11
  %38 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %47 = zext i8 %40 to i64
  %48 = select i1 %41, i8* %43, i8* %46
  %49 = select i1 %41, i64 %45, i64 %47
  %50 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #11
  %51 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %5, i8* %48, i64 %49) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #11
  %52 = shl i64 %37, 6
  %53 = lshr i64 %37, 2
  %54 = add i64 %52, 2654435769
  %55 = add i64 %54, %53
  %56 = add i64 %55, %51
  %57 = xor i64 %56, %37
  %58 = add i64 %18, 2654435769
  %59 = shl i64 %57, 6
  %60 = add i64 %58, %59
  %61 = lshr i64 %57, 2
  %62 = add i64 %60, %61
  %63 = xor i64 %62, %57
  store i64 %63, i64* %8, align 8
  %64 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0
  %65 = call %"class.quic::QuicCompressedCertsCache::CachedCerts"* @_ZN4quic12QuicLRUCacheImNS_24QuicCompressedCertsCache11CachedCertsEE6LookupERKm(%"class.quic::QuicLRUCache"* %64, i64* nonnull dereferenceable(8) %8)
  %66 = icmp eq %"class.quic::QuicCompressedCertsCache::CachedCerts"* %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %22
  %68 = call zeroext i1 @_ZNK4quic24QuicCompressedCertsCache11CachedCerts24MatchesUncompressedCertsERKNS0_17UncompressedCertsE(%"class.quic::QuicCompressedCertsCache::CachedCerts"* nonnull %65, %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* nonnull dereferenceable(24) %7)
  %69 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %65, i64 0, i32 3
  %70 = select i1 %68, %"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"* null
  br label %71

71:                                               ; preds = %67, %22
  %72 = phi %"class.std::__1::basic_string"* [ null, %22 ], [ %70, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br i1 %17, label %85, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %16, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %85

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe"* %79 to %"class.quic::QuicReferenceCountedImpl"*
  %81 = bitcast %"class.base::RefCountedThreadSafe"* %79 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %82 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %82, i64 1
  %84 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %83, align 8
  call void %84(%"class.quic::QuicReferenceCountedImpl"* nonnull %80) #11
  br label %85

85:                                               ; preds = %71, %73, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret %"class.std::__1::basic_string"* %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic24QuicCompressedCertsCache28ComputeUncompressedCertsHashERKNS0_17UncompressedCertsE(%"class.quic::QuicCompressedCertsCache"* nocapture readnone, %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1, i64 0, i32 1
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #11
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %17, i64 %18) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #11
  %21 = getelementptr inbounds %"struct.quic::QuicCompressedCertsCache::UncompressedCerts", %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1, i64 0, i32 2
  %22 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %32 = zext i8 %25 to i64
  %33 = select i1 %26, i8* %28, i8* %31
  %34 = select i1 %26, i64 %30, i64 %32
  %35 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #11
  %36 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %33, i64 %34) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #11
  %37 = shl i64 %20, 6
  %38 = lshr i64 %20, 2
  %39 = add i64 %37, 2654435769
  %40 = add i64 %39, %38
  %41 = add i64 %40, %36
  %42 = xor i64 %41, %20
  %43 = bitcast %"struct.quic::QuicCompressedCertsCache::UncompressedCerts"* %1 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 2654435769
  %46 = shl i64 %42, 6
  %47 = add i64 %45, %46
  %48 = lshr i64 %42, 2
  %49 = add i64 %47, %48
  %50 = xor i64 %49, %42
  ret i64 %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.quic::QuicCompressedCertsCache::CachedCerts"* @_ZN4quic12QuicLRUCacheImNS_24QuicCompressedCertsCache11CachedCertsEE6LookupERKm(%"class.quic::QuicLRUCache"*, i64* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0
  %5 = load i64, i64* %1, align 8
  %6 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %7 = add i64 %6, %5
  %8 = zext i64 %7 to i128
  %9 = mul nuw i128 %8, 11376068507788127593
  %10 = lshr i128 %9, 64
  %11 = xor i128 %10, %9
  %12 = trunc i128 %11 to i64
  %13 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %12, 7
  %18 = ptrtoint i8* %14 to i64
  %19 = lshr i64 %18, 12
  %20 = xor i64 %17, %19
  %21 = trunc i128 %11 to i8
  %22 = and i8 %21, 127
  %23 = insertelement <16 x i8> undef, i8 %22, i32 0
  %24 = shufflevector <16 x i8> %23, <16 x i8> undef, <16 x i32> zeroinitializer
  %25 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %26

26:                                               ; preds = %58, %2
  %27 = phi i64 [ %20, %2 ], [ %60, %58 ]
  %28 = phi i64 [ 0, %2 ], [ %59, %58 ]
  %29 = and i64 %27, %16
  %30 = getelementptr inbounds i8, i8* %14, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %24, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %26
  %37 = zext i16 %34 to i32
  %38 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %25, align 8
  br label %39

39:                                               ; preds = %50, %36
  %40 = phi i32 [ %37, %36 ], [ %52, %50 ]
  %41 = tail call i32 @llvm.cttz.i32(i32 %40, i1 false) #11, !range !2
  %42 = zext i32 %41 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %16
  %45 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %38, i64 %44
  %46 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %5
  br i1 %49, label %61, label %50, !prof !3

50:                                               ; preds = %39
  %51 = add i32 %40, -1
  %52 = and i32 %51, %40
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %39

54:                                               ; preds = %50, %26
  %55 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %134, !prof !4

58:                                               ; preds = %54
  %59 = add i64 %28, 16
  %60 = add i64 %59, %29
  br label %26

61:                                               ; preds = %39
  %62 = getelementptr inbounds i8, i8* %14, i64 %44
  %63 = icmp ne i8* %62, null
  tail call void @llvm.assume(i1 %63) #11
  %64 = load i8, i8* %62, align 1
  %65 = icmp sgt i8 %64, -1
  br i1 %65, label %67, label %66, !prof !3

66:                                               ; preds = %61
  tail call void @llvm.trap() #11
  unreachable

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 0, i32 1, i32 0
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %71 = icmp eq %"struct.std::__1::__list_node_base"* %69, %70
  br i1 %71, label %134, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 1, i32 1
  %76 = bitcast %"struct.std::__1::__list_node_base"** %75 to %"class.quic::QuicCompressedCertsCache::CachedCerts"**
  %77 = bitcast %"struct.std::__1::__list_node_base"** %75 to i64*
  %78 = load i64, i64* %77, align 8
  store %"class.quic::QuicCompressedCertsCache::CachedCerts"* null, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %76, align 8
  %79 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %78, i64* %79, align 8
  %80 = tail call %"struct.std::__1::__list_node_base"* @_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE5eraseENS1_15__list_iteratorINS1_4pairImS8_EEPvEE(%"class.quiche::QuicheLinkedHashMap"* %4, %"struct.std::__1::__list_node_base"* %69)
  %81 = call { %"struct.std::__1::__list_node_base"*, i8 } @_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE7emplaceIJRKmS8_EEENS1_4pairINS1_15__list_iteratorINSJ_ImS8_EEPvEEbEEDpOT_(%"class.quiche::QuicheLinkedHashMap"* %4, i64* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3)
  %82 = extractvalue { %"struct.std::__1::__list_node_base"*, i8 } %81, 0
  %83 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %82, i64 1, i32 1
  %84 = bitcast %"struct.std::__1::__list_node_base"** %83 to %"class.quic::QuicCompressedCertsCache::CachedCerts"**
  %85 = load %"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %84, align 8
  %86 = load %"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %74, align 8
  store %"class.quic::QuicCompressedCertsCache::CachedCerts"* null, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %74, align 8
  %87 = icmp eq %"class.quic::QuicCompressedCertsCache::CachedCerts"* %86, null
  br i1 %87, label %133, label %88

88:                                               ; preds = %72
  %89 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %86, i64 0, i32 3
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #18
  br label %97

97:                                               ; preds = %94, %88
  %98 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %86, i64 0, i32 2
  %99 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #18
  br label %106

106:                                              ; preds = %103, %97
  %107 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %86, i64 0, i32 1
  %108 = bitcast %"class.std::__1::basic_string"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #18
  br label %115

115:                                              ; preds = %112, %106
  %116 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %116, align 8
  %118 = icmp eq %"struct.quic::ProofSource::Chain"* %117, null
  br i1 %118, label %131, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %117, i64 0, i32 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw sub i32* %121, i32 1 acq_rel
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %124, label %131

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %120, i64 -2
  %126 = bitcast %"class.base::RefCountedThreadSafe"* %125 to %"class.quic::QuicReferenceCountedImpl"*
  %127 = bitcast %"class.base::RefCountedThreadSafe"* %125 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %128 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %128, i64 1
  %130 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %129, align 8
  call void %130(%"class.quic::QuicReferenceCountedImpl"* nonnull %126) #11
  br label %131

131:                                              ; preds = %115, %119, %124
  %132 = bitcast %"class.quic::QuicCompressedCertsCache::CachedCerts"* %86 to i8*
  call void @_ZdlPv(i8* %132) #18
  br label %133

133:                                              ; preds = %72, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  br label %134

134:                                              ; preds = %54, %67, %133
  %135 = phi %"class.quic::QuicCompressedCertsCache::CachedCerts"* [ %85, %133 ], [ null, %67 ], [ null, %54 ]
  ret %"class.quic::QuicCompressedCertsCache::CachedCerts"* %135
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24QuicCompressedCertsCache6InsertERKNS_27QuicReferenceCountedPointerINS_11ProofSource5ChainEEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESF_SF_(%"class.quic::QuicCompressedCertsCache"*, %"class.quic::QuicReferenceCountedPointer"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %8 = alloca i64, align 8
  %9 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %9, align 8
  %11 = ptrtoint %"struct.quic::ProofSource::Chain"* %10 to i64
  %12 = icmp eq %"struct.quic::ProofSource::Chain"* %10, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %5, %13
  %17 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i8* %23, i8* %26
  %29 = select i1 %21, i64 %25, i64 %27
  %30 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #11
  %31 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %7, i8* %28, i64 %29) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #11
  %32 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %41 = zext i8 %34 to i64
  %42 = select i1 %35, i8* %37, i8* %40
  %43 = select i1 %35, i64 %39, i64 %41
  %44 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #11
  %45 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %42, i64 %43) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #11
  %46 = shl i64 %31, 6
  %47 = lshr i64 %31, 2
  %48 = add i64 %46, 2654435769
  %49 = add i64 %48, %47
  %50 = add i64 %49, %45
  %51 = xor i64 %50, %31
  %52 = add i64 %11, 2654435769
  %53 = shl i64 %51, 6
  %54 = add i64 %52, %53
  %55 = lshr i64 %51, 2
  %56 = add i64 %54, %55
  %57 = xor i64 %56, %51
  store i64 %57, i64* %8, align 8
  %58 = call i8* @_Znwm(i64 80) #18
  %59 = bitcast i8* %58 to %"class.quic::QuicCompressedCertsCache::CachedCerts"*
  %60 = bitcast i8* %58 to %"struct.quic::ProofSource::Chain"**
  store %"struct.quic::ProofSource::Chain"* %10, %"struct.quic::ProofSource::Chain"** %60, align 8
  br i1 %12, label %64, label %61

61:                                               ; preds = %16
  %62 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 1 monotonic
  br label %64

64:                                               ; preds = %61, %16
  %65 = getelementptr inbounds i8, i8* %58, i64 8
  %66 = load i8, i8* %19, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %26, i64 24, i1 false) #11
  br label %73

69:                                               ; preds = %64
  %70 = bitcast i8* %65 to %"class.std::__1::basic_string"*
  %71 = load i8*, i8** %22, align 8
  %72 = load i64, i64* %24, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %70, i8* %71, i64 %72) #11
  br label %73

73:                                               ; preds = %69, %68
  %74 = getelementptr inbounds i8, i8* %58, i64 32
  %75 = load i8, i8* %33, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %40, i64 24, i1 false) #11
  br label %82

78:                                               ; preds = %73
  %79 = bitcast i8* %74 to %"class.std::__1::basic_string"*
  %80 = load i8*, i8** %36, align 8
  %81 = load i64, i64* %38, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %79, i8* %80, i64 %81) #11
  br label %82

82:                                               ; preds = %78, %77
  %83 = getelementptr inbounds i8, i8* %58, i64 56
  %84 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  %89 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %89, i64 24, i1 false) #11
  br label %96

90:                                               ; preds = %82
  %91 = bitcast i8* %83 to %"class.std::__1::basic_string"*
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %91, i8* %93, i64 %95) #11
  br label %96

96:                                               ; preds = %90, %88
  %97 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0
  call void @_ZN4quic12QuicLRUCacheImNS_24QuicCompressedCertsCache11CachedCertsEE6InsertERKmNSt3__110unique_ptrIS2_NS6_14default_deleteIS2_EEEE(%"class.quic::QuicLRUCache"* %97, i64* nonnull dereferenceable(8) %8, %"class.quic::QuicCompressedCertsCache::CachedCerts"* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br i1 %12, label %110, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %10, i64 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw sub i32* %100, i32 1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %110

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %99, i64 -2
  %105 = bitcast %"class.base::RefCountedThreadSafe"* %104 to %"class.quic::QuicReferenceCountedImpl"*
  %106 = bitcast %"class.base::RefCountedThreadSafe"* %104 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %107 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %107, i64 1
  %109 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %108, align 8
  call void %109(%"class.quic::QuicReferenceCountedImpl"* nonnull %105) #11
  br label %110

110:                                              ; preds = %96, %98, %103
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic12QuicLRUCacheImNS_24QuicCompressedCertsCache11CachedCertsEE6InsertERKmNSt3__110unique_ptrIS2_NS6_14default_deleteIS2_EEEE(%"class.quic::QuicLRUCache"*, i64* dereferenceable(8), %"class.quic::QuicCompressedCertsCache::CachedCerts"*) local_unnamed_addr #6 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicCompressedCertsCache::CachedCerts"* %2, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %5, align 8
  %6 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0
  %7 = load i64, i64* %1, align 8
  %8 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %9 = add i64 %8, %7
  %10 = zext i64 %9 to i128
  %11 = mul nuw i128 %10, 11376068507788127593
  %12 = lshr i128 %11, 64
  %13 = xor i128 %12, %11
  %14 = trunc i128 %13 to i64
  %15 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %14, 7
  %20 = ptrtoint i8* %16 to i64
  %21 = lshr i64 %20, 12
  %22 = xor i64 %19, %21
  %23 = trunc i128 %13 to i8
  %24 = and i8 %23, 127
  %25 = insertelement <16 x i8> undef, i8 %24, i32 0
  %26 = shufflevector <16 x i8> %25, <16 x i8> undef, <16 x i32> zeroinitializer
  %27 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %28

28:                                               ; preds = %60, %3
  %29 = phi i64 [ %22, %3 ], [ %62, %60 ]
  %30 = phi i64 [ 0, %3 ], [ %61, %60 ]
  %31 = and i64 %29, %18
  %32 = getelementptr inbounds i8, i8* %16, i64 %31
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = icmp eq <16 x i8> %26, %34
  %36 = bitcast <16 x i1> %35 to i16
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %28
  %39 = zext i16 %36 to i32
  %40 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %27, align 8
  br label %41

41:                                               ; preds = %52, %38
  %42 = phi i32 [ %39, %38 ], [ %54, %52 ]
  %43 = tail call i32 @llvm.cttz.i32(i32 %42, i1 false) #11, !range !2
  %44 = zext i32 %43 to i64
  %45 = add i64 %31, %44
  %46 = and i64 %45, %18
  %47 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %40, i64 %46
  %48 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %7
  br i1 %51, label %63, label %52, !prof !3

52:                                               ; preds = %41
  %53 = add i32 %42, -1
  %54 = and i32 %53, %42
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %41

56:                                               ; preds = %52, %28
  %57 = icmp eq <16 x i8> %34, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %76, !prof !4

60:                                               ; preds = %56
  %61 = add i64 %30, 16
  %62 = add i64 %61, %31
  br label %28

63:                                               ; preds = %41
  %64 = getelementptr inbounds i8, i8* %16, i64 %46
  %65 = icmp ne i8* %64, null
  tail call void @llvm.assume(i1 %65) #11
  %66 = load i8, i8* %64, align 1
  %67 = icmp sgt i8 %66, -1
  br i1 %67, label %69, label %68, !prof !3

68:                                               ; preds = %63
  tail call void @llvm.trap() #11
  unreachable

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 1, i32 0
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %73 = icmp eq %"struct.std::__1::__list_node_base"* %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = tail call %"struct.std::__1::__list_node_base"* @_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE5eraseENS1_15__list_iteratorINS1_4pairImS8_EEPvEE(%"class.quiche::QuicheLinkedHashMap"* %6, %"struct.std::__1::__list_node_base"* %71)
  br label %76

76:                                               ; preds = %56, %69, %74
  %77 = call { %"struct.std::__1::__list_node_base"*, i8 } @_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE7emplaceIJRKmS8_EEENS1_4pairINS1_15__list_iteratorINSJ_ImS8_EEPvEEbEEDpOT_(%"class.quiche::QuicheLinkedHashMap"* %6, i64* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4)
  %78 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ugt i64 %79, %81
  br i1 %82, label %83, label %87

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.quic::QuicLRUCache", %"class.quic::QuicLRUCache"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %85 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %84, align 8
  %86 = call %"struct.std::__1::__list_node_base"* @_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE5eraseENS1_15__list_iteratorINS1_4pairImS8_EEPvEE(%"class.quiche::QuicheLinkedHashMap"* %6, %"struct.std::__1::__list_node_base"* %85) #11
  br label %87

87:                                               ; preds = %83, %76
  %88 = load %"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %5, align 8
  store %"class.quic::QuicCompressedCertsCache::CachedCerts"* null, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %5, align 8
  %89 = icmp eq %"class.quic::QuicCompressedCertsCache::CachedCerts"* %88, null
  br i1 %89, label %135, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %88, i64 0, i32 3
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #18
  br label %99

99:                                               ; preds = %96, %90
  %100 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %88, i64 0, i32 2
  %101 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #18
  br label %108

108:                                              ; preds = %105, %99
  %109 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %88, i64 0, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %114, %108
  %118 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %118, align 8
  %120 = icmp eq %"struct.quic::ProofSource::Chain"* %119, null
  br i1 %120, label %133, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %119, i64 0, i32 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %133

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %122, i64 -2
  %128 = bitcast %"class.base::RefCountedThreadSafe"* %127 to %"class.quic::QuicReferenceCountedImpl"*
  %129 = bitcast %"class.base::RefCountedThreadSafe"* %127 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %130 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %130, i64 1
  %132 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %131, align 8
  call void %132(%"class.quic::QuicReferenceCountedImpl"* nonnull %128) #11
  br label %133

133:                                              ; preds = %117, %121, %126
  %134 = bitcast %"class.quic::QuicCompressedCertsCache::CachedCerts"* %88 to i8*
  call void @_ZdlPv(i8* %134) #18
  br label %135

135:                                              ; preds = %87, %133
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN4quic24QuicCompressedCertsCache7MaxSizeEv(%"class.quic::QuicCompressedCertsCache"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN4quic24QuicCompressedCertsCache4SizeEv(%"class.quic::QuicCompressedCertsCache"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache", %"class.quic::QuicCompressedCertsCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeINS_4pairImNS_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS_14default_deleteIS7_EEEEEEPvEEEEE7destroyISB_vvEEvRSE_PT_(%"class.std::__1::allocator.16"* dereferenceable(1), %"struct.std::__1::pair.21"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.21", %"struct.std::__1::pair.21"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.quic::QuicCompressedCertsCache::CachedCerts"*, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %3, align 8
  store %"class.quic::QuicCompressedCertsCache::CachedCerts"* null, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %3, align 8
  %5 = icmp eq %"class.quic::QuicCompressedCertsCache::CachedCerts"* %4, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %4, i64 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %12, %6
  %16 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %4, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #18
  br label %24

24:                                               ; preds = %21, %15
  %25 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %4, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %30, %24
  %34 = getelementptr inbounds %"class.quic::QuicCompressedCertsCache::CachedCerts", %"class.quic::QuicCompressedCertsCache::CachedCerts"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.quic::ProofSource::Chain"*, %"struct.quic::ProofSource::Chain"** %34, align 8
  %36 = icmp eq %"struct.quic::ProofSource::Chain"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.quic::ProofSource::Chain", %"struct.quic::ProofSource::Chain"* %35, i64 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe"* %43 to %"class.quic::QuicReferenceCountedImpl"*
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %43 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %46 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %46, i64 1
  %48 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %47, align 8
  tail call void %48(%"class.quic::QuicReferenceCountedImpl"* nonnull %44) #11
  br label %49

49:                                               ; preds = %42, %37, %33
  %50 = bitcast %"class.quic::QuicCompressedCertsCache::CachedCerts"* %4 to i8*
  tail call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %2, %49
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 127
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %21, %5
  %9 = phi i64 [ %3, %5 ], [ %22, %21 ]
  %10 = phi i64 [ 0, %5 ], [ %23, %21 ]
  %11 = load i8*, i8** %6, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %10
  %13 = load i8, i8* %12, align 1
  %14 = icmp sgt i8 %13, -1
  br i1 %14, label %15, label %21

15:                                               ; preds = %8
  %16 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %7, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, i64 %10
  %18 = bitcast %"struct.std::__1::pair"** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #18
  %20 = load i64, i64* %2, align 8
  br label %21

21:                                               ; preds = %15, %8
  %22 = phi i64 [ %9, %8 ], [ %20, %15 ]
  %23 = add i64 %10, 1
  %24 = icmp eq i64 %23, %22
  br i1 %24, label %25, label %8

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %26) #18
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %27 = bitcast %"struct.std::__1::pair"*** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #11
  br label %64

28:                                               ; preds = %1
  %29 = icmp eq i64 %3, 0
  br i1 %29, label %64, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %47

33:                                               ; preds = %60
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = add i64 %61, 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 -128, i64 %37, i1 false) #11
  %38 = load i8*, i8** %35, align 8
  %39 = load i64, i64* %2, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  store i8 -1, i8* %40, align 1
  %41 = load i64, i64* %2, align 8
  %42 = lshr i64 %41, 3
  %43 = sub i64 %41, %42
  %44 = load i64, i64* %34, align 8
  %45 = sub i64 %43, %44
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %45, i64* %46, align 8
  br label %64

47:                                               ; preds = %30, %60
  %48 = phi i64 [ %3, %30 ], [ %61, %60 ]
  %49 = phi i64 [ 0, %30 ], [ %62, %60 ]
  %50 = load i8*, i8** %31, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = load i8, i8* %51, align 1
  %53 = icmp sgt i8 %52, -1
  br i1 %53, label %54, label %60

54:                                               ; preds = %47
  %55 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %32, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %55, i64 %49
  %57 = bitcast %"struct.std::__1::pair"** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #18
  %59 = load i64, i64* %2, align 8
  br label %60

60:                                               ; preds = %47, %54
  %61 = phi i64 [ %48, %47 ], [ %59, %54 ]
  %62 = add i64 %49, 1
  %63 = icmp eq i64 %62, %61
  br i1 %63, label %33, label %47

64:                                               ; preds = %28, %33, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__list_node_base"* @_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE5eraseENS1_15__list_iteratorINS1_4pairImS8_EEPvEE(%"class.quiche::QuicheLinkedHashMap"*, %"struct.std::__1::__list_node_base"*) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %5 = bitcast %"struct.std::__1::__list_node_base"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %8 = add i64 %7, %6
  %9 = zext i64 %8 to i128
  %10 = mul nuw i128 %9, 11376068507788127593
  %11 = lshr i128 %10, 64
  %12 = xor i128 %11, %10
  %13 = trunc i128 %12 to i64
  %14 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %13, 7
  %19 = ptrtoint i8* %15 to i64
  %20 = lshr i64 %19, 12
  %21 = xor i64 %18, %20
  %22 = trunc i128 %12 to i8
  %23 = and i8 %22, 127
  %24 = insertelement <16 x i8> undef, i8 %23, i32 0
  %25 = shufflevector <16 x i8> %24, <16 x i8> undef, <16 x i32> zeroinitializer
  %26 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %27

27:                                               ; preds = %59, %2
  %28 = phi i64 [ %21, %2 ], [ %61, %59 ]
  %29 = phi i64 [ 0, %2 ], [ %60, %59 ]
  %30 = and i64 %28, %17
  %31 = getelementptr inbounds i8, i8* %15, i64 %30
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1
  %34 = icmp eq <16 x i8> %25, %33
  %35 = bitcast <16 x i1> %34 to i16
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %27
  %38 = zext i16 %35 to i32
  %39 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %26, align 8
  br label %40

40:                                               ; preds = %51, %37
  %41 = phi i32 [ %38, %37 ], [ %53, %51 ]
  %42 = tail call i32 @llvm.cttz.i32(i32 %41, i1 false) #11, !range !2
  %43 = zext i32 %42 to i64
  %44 = add i64 %30, %43
  %45 = and i64 %44, %17
  %46 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %39, i64 %45
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %6
  br i1 %50, label %62, label %51, !prof !3

51:                                               ; preds = %40
  %52 = add i32 %41, -1
  %53 = and i32 %52, %41
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %40

55:                                               ; preds = %51, %27
  %56 = icmp eq <16 x i8> %33, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %68, !prof !4

59:                                               ; preds = %55
  %60 = add i64 %29, 16
  %61 = add i64 %60, %30
  br label %27

62:                                               ; preds = %40
  %63 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %39, i64 %45
  %64 = getelementptr inbounds i8, i8* %15, i64 %45
  %65 = icmp ne i8* %64, null
  tail call void @llvm.assume(i1 %65) #11
  %66 = load i8, i8* %64, align 1
  %67 = icmp sgt i8 %66, -1
  br i1 %67, label %69, label %68, !prof !3

68:                                               ; preds = %55, %62
  tail call void @llvm.trap() #11
  unreachable

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 1, i32 0
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__list_node_base"* %71, %1
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 129, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #11
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %75, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i64 67) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #11
  %77 = load i8, i8* %64, align 1
  %78 = icmp sgt i8 %77, -1
  br i1 %78, label %80, label %79, !prof !3

79:                                               ; preds = %73
  call void @llvm.trap() #11
  unreachable

80:                                               ; preds = %69, %73
  %81 = bitcast %"struct.std::__1::pair"** %63 to i8**
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #18
  %83 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, -1
  store i64 %85, i64* %83, align 8
  %86 = bitcast %"class.quiche::QuicheLinkedHashMap"* %0 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = ptrtoint i8* %64 to i64
  %89 = sub i64 %88, %87
  %90 = add i64 %89, -16
  %91 = load i64, i64* %16, align 8
  %92 = and i64 %90, %91
  %93 = bitcast i8* %64 to <16 x i8>*
  %94 = load <16 x i8>, <16 x i8>* %93, align 1
  %95 = icmp eq <16 x i8> %94, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %96 = bitcast <16 x i1> %95 to i16
  %97 = inttoptr i64 %87 to i8*
  %98 = getelementptr inbounds i8, i8* %97, i64 %92
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1
  %101 = icmp eq <16 x i8> %100, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %102 = bitcast <16 x i1> %101 to i16
  %103 = icmp ne i16 %102, 0
  %104 = icmp ne i16 %96, 0
  %105 = and i1 %104, %103
  br i1 %105, label %106, label %116

106:                                              ; preds = %80
  %107 = zext i16 %96 to i32
  %108 = zext i16 %102 to i32
  %109 = call i32 @llvm.cttz.i32(i32 %107, i1 false) #11, !range !2
  %110 = shl nuw i32 %108, 16
  %111 = call i32 @llvm.ctlz.i32(i32 %110, i1 false) #11, !range !2
  %112 = add nuw nsw i32 %111, %109
  %113 = icmp ult i32 %112, 16
  %114 = zext i1 %113 to i64
  %115 = select i1 %113, i8 -128, i8 -2
  br label %116

116:                                              ; preds = %80, %106
  %117 = phi i64 [ 0, %80 ], [ %114, %106 ]
  %118 = phi i8 [ -2, %80 ], [ %115, %106 ]
  %119 = getelementptr inbounds i8, i8* %97, i64 %89
  store i8 %118, i8* %119, align 1
  %120 = load i8*, i8** %14, align 8
  %121 = add i64 %89, -15
  %122 = load i64, i64* %16, align 8
  %123 = and i64 %122, %121
  %124 = and i64 %122, 15
  %125 = add i64 %123, %124
  %126 = getelementptr inbounds i8, i8* %120, i64 %125
  store i8 %118, i8* %126, align 1
  %127 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, %117
  store i64 %129, i64* %127, align 8
  %130 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 1, i32 0, i32 1
  %131 = bitcast %"class.std::__1::__compressed_pair.13"* %130 to %"class.std::__1::allocator.16"*
  %132 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 1
  %133 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %132, align 8
  %134 = ptrtoint %"struct.std::__1::__list_node_base"* %133 to i64
  %135 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 0
  %136 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %135, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %136, i64 0, i32 1
  %138 = bitcast %"struct.std::__1::__list_node_base"** %137 to i64*
  store i64 %134, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__list_node_base"* %1 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"struct.std::__1::__list_node_base"** %132 to i64**
  %142 = load i64*, i64** %141, align 8
  store i64 %140, i64* %142, align 8
  %143 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, -1
  store i64 %145, i64* %143, align 8
  %146 = bitcast %"struct.std::__1::__list_node_base"* %4 to %"struct.std::__1::pair.21"*
  call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeINS_4pairImNS_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS_14default_deleteIS7_EEEEEEPvEEEEE7destroyISB_vvEEvRSE_PT_(%"class.std::__1::allocator.16"* dereferenceable(1) %131, %"struct.std::__1::pair.21"* %146) #11
  %147 = bitcast %"struct.std::__1::__list_node_base"* %1 to i8*
  call void @_ZdlPv(i8* %147) #18
  ret %"struct.std::__1::__list_node_base"* %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__list_node_base"*, i8 } @_ZN6quiche19QuicheLinkedHashMapImNSt3__110unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS1_14default_deleteIS5_EEEEN4absl13hash_internal4HashImEENS1_8equal_toImEEE7emplaceIJRKmS8_EEENS1_4pairINS1_15__list_iteratorINSJ_ImS8_EEPvEEbEEDpOT_(%"class.quiche::QuicheLinkedHashMap"*, i64* dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.42", align 8
  %5 = alloca %"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable", align 8
  %6 = alloca %"class.std::__1::list", align 8
  %7 = alloca %"struct.std::__1::pair.35", align 8
  %8 = alloca %"struct.std::__1::pair.37", align 8
  %9 = bitcast %"class.std::__1::list"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0
  %14 = call i8* @_Znwm(i64 32) #18, !noalias !5
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %1, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 24
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.quic::QuicCompressedCertsCache::CachedCerts"* null, %"class.quic::QuicCompressedCertsCache::CachedCerts"** %19, align 8
  %22 = bitcast i8* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i8**
  store i8* %14, i8** %24, align 8
  %25 = ptrtoint %"class.std::__1::list"* %6 to i64
  %26 = bitcast i8* %14 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast %"class.std::__1::list"* %6 to i8**
  store i8* %14, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %14, i64 8
  %29 = bitcast i8* %28 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %13, %"struct.std::__1::__list_node_base"** %29, align 8
  store i64 1, i64* %12, align 8
  %30 = ptrtoint i8* %14 to i64
  %31 = bitcast %"struct.std::__1::pair.35"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %7, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %7, i64 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %7, i64 0, i32 1
  %35 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"struct.std::__1::pair.37"* %8 to i8*
  %37 = bitcast %"struct.std::__1::pair.35"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  %38 = getelementptr inbounds %"struct.std::__1::pair.37", %"struct.std::__1::pair.37"* %8, i64 0, i32 0
  store i64 %17, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.37", %"struct.std::__1::pair.37"* %8, i64 0, i32 1
  %40 = bitcast %"class.std::__1::__list_iterator"* %39 to i64*
  store i64 %30, i64* %40, align 8
  %41 = bitcast %"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11, !noalias !8
  %42 = getelementptr inbounds %"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable", %"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable"* %5, i64 0, i32 0
  store %"class.absl::container_internal::raw_hash_set"* %35, %"class.absl::container_internal::raw_hash_set"** %42, align 8, !noalias !8
  %43 = bitcast %"struct.std::__1::pair.42"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11, !noalias !13
  %44 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64* %38, i64** %44, align 8, !noalias !20
  %45 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.std::__1::__list_iterator"* %39, %"class.std::__1::__list_iterator"** %45, align 8, !noalias !20
  %46 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %4, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %4, i64 0, i32 1
  call void @_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE19EmplaceDecomposableclImJRKNS3_21piecewise_construct_tENS3_5tupleIJOmEEENSW_IJOSF_EEEEEENS5_INSQ_8iteratorEbEERKT_DpOT0_(%"struct.std::__1::pair.35"* nonnull sret %7, %"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable"* nonnull %5, i64* nonnull dereferenceable(8) %38, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.43"* nonnull dereferenceable(8) %46, %"class.std::__1::tuple.46"* dereferenceable(8) %47) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  %48 = load i8, i8* %34, align 8, !range !23
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %3
  %51 = load i8*, i8** %32, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53, !prof !4

53:                                               ; preds = %50
  %54 = load i8, i8* %51, align 1
  %55 = icmp sgt i8 %54, -1
  br i1 %55, label %93, label %56, !prof !3

56:                                               ; preds = %53, %50
  call void @llvm.trap() #11
  unreachable

57:                                               ; preds = %3
  %58 = bitcast i8* %14 to %"struct.std::__1::__list_node_base"*
  %59 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 1
  %60 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %59, i64 0, i32 0, i32 0
  %61 = icmp eq %"struct.std::__1::__list_node_base"* %60, %58
  br i1 %61, label %86, label %62

62:                                               ; preds = %57
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %64 = icmp eq %"struct.std::__1::__list_node_base"* %63, %60
  br i1 %64, label %86, label %65

65:                                               ; preds = %62
  %66 = ptrtoint %"struct.std::__1::__list_node_base"* %63 to i64
  %67 = bitcast i8* %14 to %"struct.std::__1::__list_node_base"**
  %68 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %68, i64 0, i32 1
  %70 = bitcast %"struct.std::__1::__list_node_base"** %69 to i64*
  store i64 %66, i64* %70, align 8
  %71 = load i64, i64* %26, align 8
  %72 = bitcast i8* %28 to i64**
  %73 = load i64*, i64** %72, align 8
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %59, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i8**
  store i8* %14, i8** %77, align 8
  %78 = bitcast %"class.std::__1::list"* %59 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %26, align 8
  %80 = bitcast %"class.std::__1::list"* %59 to i8**
  store i8* %14, i8** %80, align 8
  store %"struct.std::__1::__list_node_base"* %60, %"struct.std::__1::__list_node_base"** %29, align 8
  %81 = load i64, i64* %12, align 8
  %82 = add i64 %81, -1
  store i64 %82, i64* %12, align 8
  %83 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %83, align 8
  br label %86

86:                                               ; preds = %57, %62, %65
  %87 = load i8*, i8** %32, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %92, label %89, !prof !4

89:                                               ; preds = %86
  %90 = load i8, i8* %87, align 1
  %91 = icmp sgt i8 %90, -1
  br i1 %91, label %93, label %92, !prof !3

92:                                               ; preds = %89, %86
  call void @llvm.trap() #11
  unreachable

93:                                               ; preds = %89, %53
  %94 = phi i8 [ 0, %53 ], [ 1, %89 ]
  %95 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %33, align 8
  %96 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 1, i32 0
  %98 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %97, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  %99 = load i64, i64* %12, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %126, label %101

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 1
  %103 = bitcast %"class.std::__1::__compressed_pair.13"* %102 to %"class.std::__1::allocator.16"*
  %104 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %105 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %105, i64 0, i32 1
  %107 = bitcast %"struct.std::__1::__list_node_base"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %104, i64 0, i32 0
  %110 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %110, i64 0, i32 1
  %112 = bitcast %"struct.std::__1::__list_node_base"** %111 to i64*
  store i64 %108, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__list_node_base"* %104 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::__list_node_base"** %106 to i64**
  %116 = load i64*, i64** %115, align 8
  store i64 %114, i64* %116, align 8
  store i64 0, i64* %12, align 8
  %117 = icmp eq %"struct.std::__1::__list_node_base"* %104, %13
  br i1 %117, label %126, label %118

118:                                              ; preds = %101, %118
  %119 = phi %"struct.std::__1::__list_node_base"* [ %121, %118 ], [ %104, %101 ]
  %120 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %119, i64 0, i32 1
  %121 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %119, i64 1
  %123 = bitcast %"struct.std::__1::__list_node_base"* %122 to %"struct.std::__1::pair.21"*
  call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeINS_4pairImNS_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS_14default_deleteIS7_EEEEEEPvEEEEE7destroyISB_vvEEvRSE_PT_(%"class.std::__1::allocator.16"* dereferenceable(1) %103, %"struct.std::__1::pair.21"* %123) #11
  %124 = bitcast %"struct.std::__1::__list_node_base"* %119 to i8*
  call void @_ZdlPv(i8* %124) #18
  %125 = icmp eq %"struct.std::__1::__list_node_base"* %121, %13
  br i1 %125, label %126, label %118

126:                                              ; preds = %118, %93, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %127 = insertvalue { %"struct.std::__1::__list_node_base"*, i8 } undef, %"struct.std::__1::__list_node_base"* %98, 0
  %128 = insertvalue { %"struct.std::__1::__list_node_base"*, i8 } %127, i8 %94, 1
  ret { %"struct.std::__1::__list_node_base"*, i8 } %128
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #12

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #10

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !23
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #14

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #14

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #10

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE19EmplaceDecomposableclImJRKNS3_21piecewise_construct_tENS3_5tupleIJOmEEENSW_IJOSF_EEEEEENS5_INSQ_8iteratorEbEERKT_DpOT0_(%"struct.std::__1::pair.35"* noalias sret, %"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.43"* dereferenceable(8), %"class.std::__1::tuple.46"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %7 = getelementptr inbounds %"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable", %"struct.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> >, absl::hash_internal::Hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::__list_iterator<std::__1::pair<unsigned long, std::__1::unique_ptr<quic::QuicCompressedCertsCache::CachedCerts, std::__1::default_delete<quic::QuicCompressedCertsCache::CachedCerts> > >, void *> > > >::EmplaceDecomposable"* %1, i64 0, i32 0
  %8 = load %"class.absl::container_internal::raw_hash_set"*, %"class.absl::container_internal::raw_hash_set"** %7, align 8
  %9 = load i64, i64* %2, align 8
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %11 = add i64 %10, %9
  %12 = zext i64 %11 to i128
  %13 = mul nuw i128 %12, 11376068507788127593
  %14 = lshr i128 %13, 64
  %15 = xor i128 %14, %13
  %16 = trunc i128 %15 to i64
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %8, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %8, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %16, 7
  %22 = ptrtoint i8* %18 to i64
  %23 = lshr i64 %22, 12
  %24 = xor i64 %21, %23
  %25 = trunc i128 %15 to i8
  %26 = and i8 %25, 127
  %27 = insertelement <16 x i8> undef, i8 %26, i32 0
  %28 = shufflevector <16 x i8> %27, <16 x i8> undef, <16 x i32> zeroinitializer
  %29 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %8, i64 0, i32 1
  br label %30

30:                                               ; preds = %62, %6
  %31 = phi i64 [ %24, %6 ], [ %64, %62 ]
  %32 = phi i64 [ 0, %6 ], [ %63, %62 ]
  %33 = and i64 %31, %20
  %34 = getelementptr inbounds i8, i8* %18, i64 %33
  %35 = bitcast i8* %34 to <16 x i8>*
  %36 = load <16 x i8>, <16 x i8>* %35, align 1
  %37 = icmp eq <16 x i8> %28, %36
  %38 = bitcast <16 x i1> %37 to i16
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %58, label %40

40:                                               ; preds = %30
  %41 = zext i16 %38 to i32
  %42 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %29, align 8
  br label %43

43:                                               ; preds = %54, %40
  %44 = phi i32 [ %41, %40 ], [ %56, %54 ]
  %45 = tail call i32 @llvm.cttz.i32(i32 %44, i1 false) #11, !range !2
  %46 = zext i32 %45 to i64
  %47 = add i64 %33, %46
  %48 = and i64 %47, %20
  %49 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %42, i64 %48
  %50 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %50, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %9
  br i1 %53, label %87, label %54, !prof !3

54:                                               ; preds = %43
  %55 = add i32 %44, -1
  %56 = and i32 %55, %44
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %43

58:                                               ; preds = %54, %30
  %59 = icmp eq <16 x i8> %36, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %60 = bitcast <16 x i1> %59 to i16
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %62, label %65, !prof !4

62:                                               ; preds = %58
  %63 = add i64 %32, 16
  %64 = add i64 %63, %33
  br label %30

65:                                               ; preds = %58
  %66 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %8, i64 %16) #11
  %67 = load %"class.absl::container_internal::raw_hash_set"*, %"class.absl::container_internal::raw_hash_set"** %7, align 8
  %68 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %69, i64 %66
  %71 = tail call i8* @_Znwm(i64 16) #18
  %72 = getelementptr inbounds %"class.std::__1::tuple.43", %"class.std::__1::tuple.43"* %4, i64 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = bitcast %"class.std::__1::tuple.46"* %5 to i64**
  %75 = load i64*, i64** %74, align 8
  %76 = bitcast i8* %71 to i64*
  %77 = load i64, i64* %73, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  %80 = load i64, i64* %75, align 8
  store i64 %80, i64* %79, align 8
  %81 = bitcast %"struct.std::__1::pair"** %70 to i8**
  store i8* %71, i8** %81, align 8
  %82 = load %"class.absl::container_internal::raw_hash_set"*, %"class.absl::container_internal::raw_hash_set"** %7, align 8
  %83 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %82, i64 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %82, i64 0, i32 1
  %86 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %85, align 8
  br label %87

87:                                               ; preds = %43, %65
  %88 = phi %"struct.std::__1::pair"** [ %86, %65 ], [ %42, %43 ]
  %89 = phi i8* [ %84, %65 ], [ %18, %43 ]
  %90 = phi i8 [ 1, %65 ], [ 0, %43 ]
  %91 = phi i64 [ %66, %65 ], [ %48, %43 ]
  %92 = getelementptr inbounds i8, i8* %89, i64 %91
  %93 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %88, i64 %91
  %94 = icmp ne i8* %92, null
  tail call void @llvm.assume(i1 %94) #11
  %95 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %0, i64 0, i32 0, i32 0
  store i8* %92, i8** %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %0, i64 0, i32 0, i32 1, i32 0
  store %"struct.std::__1::pair"** %93, %"struct.std::__1::pair"*** %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %0, i64 0, i32 1
  store i8 %90, i8* %97, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 3
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #18
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"struct.std::__1::pair"*** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %96, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %92
  br i1 %24, label %96, label %95

28:                                               ; preds = %25, %92
  %29 = phi i64 [ 0, %25 ], [ %93, %92 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %92

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, i64 %29
  %35 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %5, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %87, i64 %76
  %89 = bitcast %"struct.std::__1::pair"** %34 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"struct.std::__1::pair"** %88 to i64*
  store i64 %90, i64* %91, align 8
  br label %92

92:                                               ; preds = %28, %69
  %93 = add nuw i64 %29, 1
  %94 = icmp eq i64 %93, %8
  br i1 %94, label %27, label %28

95:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #18
  br label %96

96:                                               ; preds = %2, %27, %95
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #15 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %124, %1
  %12 = phi i64 [ 0, %1 ], [ %126, %124 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %124
  %20 = phi i64 [ %6, %8 ], [ %127, %124 ]
  %21 = phi i64 [ 0, %8 ], [ %126, %124 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %124

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %9, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, i64 %21
  %30 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %10, %32
  %34 = zext i64 %33 to i128
  %35 = mul nuw i128 %34, 11376068507788127593
  %36 = lshr i128 %35, 64
  %37 = xor i128 %36, %35
  %38 = trunc i128 %37 to i64
  %39 = lshr i64 %38, 7
  %40 = lshr i64 %27, 12
  %41 = xor i64 %39, %40
  %42 = and i64 %41, %20
  %43 = getelementptr inbounds i8, i8* %22, i64 %42
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = icmp slt <16 x i8> %45, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %47 = bitcast <16 x i1> %46 to i16
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %26, %49
  %50 = phi i64 [ %54, %49 ], [ %42, %26 ]
  %51 = phi i64 [ %52, %49 ], [ 0, %26 ]
  %52 = add i64 %51, 16
  %53 = add i64 %52, %50
  %54 = and i64 %53, %20
  %55 = getelementptr inbounds i8, i8* %22, i64 %54
  %56 = bitcast i8* %55 to <16 x i8>*
  %57 = load <16 x i8>, <16 x i8>* %56, align 1
  %58 = icmp slt <16 x i8> %57, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %49, label %61

61:                                               ; preds = %49, %26
  %62 = phi i64 [ %42, %26 ], [ %54, %49 ]
  %63 = phi i16 [ %47, %26 ], [ %59, %49 ]
  %64 = zext i16 %63 to i32
  %65 = tail call i32 @llvm.cttz.i32(i32 %64, i1 false) #11, !range !2
  %66 = zext i32 %65 to i64
  %67 = add i64 %62, %66
  %68 = and i64 %67, %20
  %69 = sub i64 %68, %42
  %70 = sub i64 %21, %42
  %71 = xor i64 %69, %70
  %72 = and i64 %71, %20
  %73 = icmp ult i64 %72, 16
  br i1 %73, label %74, label %84, !prof !3

74:                                               ; preds = %61
  %75 = trunc i128 %37 to i8
  %76 = and i8 %75, 127
  store i8 %76, i8* %23, align 1
  %77 = load i8*, i8** %2, align 8
  %78 = add i64 %21, -15
  %79 = load i64, i64* %4, align 8
  %80 = and i64 %79, %78
  %81 = and i64 %79, 15
  %82 = add i64 %80, %81
  %83 = getelementptr inbounds i8, i8* %77, i64 %82
  store i8 %76, i8* %83, align 1
  br label %124

84:                                               ; preds = %61
  %85 = getelementptr inbounds i8, i8* %22, i64 %68
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, -128
  %88 = trunc i128 %37 to i8
  %89 = and i8 %88, 127
  store i8 %89, i8* %85, align 1
  %90 = load i8*, i8** %2, align 8
  %91 = add i64 %68, -15
  %92 = load i64, i64* %4, align 8
  %93 = and i64 %92, %91
  %94 = and i64 %92, 15
  %95 = add i64 %93, %94
  %96 = getelementptr inbounds i8, i8* %90, i64 %95
  store i8 %89, i8* %96, align 1
  %97 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %9, align 8
  br i1 %87, label %98, label %113

98:                                               ; preds = %84
  %99 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %97, i64 %68
  %100 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %97, i64 %21
  %101 = bitcast %"struct.std::__1::pair"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"struct.std::__1::pair"** %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = load i8*, i8** %2, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 %21
  store i8 -128, i8* %105, align 1
  %106 = load i8*, i8** %2, align 8
  %107 = add i64 %21, -15
  %108 = load i64, i64* %4, align 8
  %109 = and i64 %108, %107
  %110 = and i64 %108, 15
  %111 = add i64 %109, %110
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  store i8 -128, i8* %112, align 1
  br label %124

113:                                              ; preds = %84
  %114 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %97, i64 %21
  %115 = bitcast %"struct.std::__1::pair"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %97, i64 %68
  %118 = bitcast %"struct.std::__1::pair"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  store i64 %119, i64* %115, align 8
  %120 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %9, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %120, i64 %68
  %122 = bitcast %"struct.std::__1::pair"** %121 to i64*
  store i64 %116, i64* %122, align 8
  %123 = add i64 %21, -1
  br label %124

124:                                              ; preds = %74, %113, %98, %19
  %125 = phi i64 [ %21, %19 ], [ %21, %74 ], [ %21, %98 ], [ %123, %113 ]
  %126 = add i64 %125, 1
  %127 = load i64, i64* %4, align 8
  %128 = icmp eq i64 %126, %127
  br i1 %128, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #16 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__14listINS_4pairImNS_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS_14default_deleteIS5_EEEEEENS_9allocatorIS9_EEE15__allocate_nodeERNSA_INS_11__list_nodeIS9_PvEEEE: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14listINS_4pairImNS_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS_14default_deleteIS5_EEEEEENS_9allocatorIS9_EEE15__allocate_nodeERNSA_INS_11__list_nodeIS9_PvEEEE"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE7emplaceIJNS5_ImSF_EEELi0EEENS5_INSQ_8iteratorEbEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE7emplaceIJNS5_ImSF_EEELi0EEENS5_INSQ_8iteratorEbEEDpOT_"}
!11 = distinct !{!11, !12, !"_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE6insertEONS5_ImSF_EE: argument 0"}
!12 = distinct !{!12, !"_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEENS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE6insertEONS5_ImSF_EE"}
!13 = !{!14, !16, !18, !9, !11}
!14 = distinct !{!14, !15, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS4_4pairImNS4_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS4_14default_deleteISA_EEEEEEPvEEEENS_13hash_internal4HashImEENS4_8equal_toImEENS4_9allocatorINS6_IKmSG_EEEEE19EmplaceDecomposableEJNS6_ImSG_EEEEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSU_DpOSV_: argument 0"}
!15 = distinct !{!15, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS4_4pairImNS4_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS4_14default_deleteISA_EEEEEEPvEEEENS_13hash_internal4HashImEENS4_8equal_toImEENS4_9allocatorINS6_IKmSG_EEEEE19EmplaceDecomposableEJNS6_ImSG_EEEEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSU_DpOSV_"}
!16 = distinct !{!16, !17, !"_ZN4absl18container_internal17NodeHashMapPolicyImNSt3__115__list_iteratorINS2_4pairImNS2_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS2_14default_deleteIS8_EEEEEEPvEEE5applyINS0_12raw_hash_setISF_NS_13hash_internal4HashImEENS2_8equal_toImEENS2_9allocatorINS4_IKmSE_EEEEE19EmplaceDecomposableEJNS4_ImSE_EEEEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSU_DpOSV_: argument 0"}
!17 = distinct !{!17, !"_ZN4absl18container_internal17NodeHashMapPolicyImNSt3__115__list_iteratorINS2_4pairImNS2_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS2_14default_deleteIS8_EEEEEEPvEEE5applyINS0_12raw_hash_setISF_NS_13hash_internal4HashImEENS2_8equal_toImEENS2_9allocatorINS4_IKmSE_EEEEE19EmplaceDecomposableEJNS4_ImSE_EEEEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSU_DpOSV_"}
!18 = distinct !{!18, !19, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEEvE5applyINS0_12raw_hash_setISG_NS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE19EmplaceDecomposableEJNS5_ImSF_EEESG_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSX_DpOSY_: argument 0"}
!19 = distinct !{!19, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS3_4pairImNS3_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS3_14default_deleteIS9_EEEEEEPvEEEEvE5applyINS0_12raw_hash_setISG_NS_13hash_internal4HashImEENS3_8equal_toImEENS3_9allocatorINS5_IKmSF_EEEEE19EmplaceDecomposableEJNS5_ImSF_EEESG_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSX_DpOSY_"}
!20 = !{!21, !14, !16, !18, !9, !11}
!21 = distinct !{!21, !22, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS5_4pairImNS5_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS5_14default_deleteISB_EEEEEEPvEEEENS_13hash_internal4HashImEENS5_8equal_toImEENS5_9allocatorINS7_IKmSH_EEEEE19EmplaceDecomposableEOmNS5_5tupleIJOSH_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNS5_L19piecewise_constructEEclsr3stdE7declvalINSV_IJSZ_EEEEEclsr3stdE7declvalIT1_EEEEOSY_NS7_IS12_S13_EE: argument 0"}
!22 = distinct !{!22, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17NodeHashMapPolicyImNSt3__115__list_iteratorINS5_4pairImNS5_10unique_ptrIN4quic24QuicCompressedCertsCache11CachedCertsENS5_14default_deleteISB_EEEEEEPvEEEENS_13hash_internal4HashImEENS5_8equal_toImEENS5_9allocatorINS7_IKmSH_EEEEE19EmplaceDecomposableEOmNS5_5tupleIJOSH_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNS5_L19piecewise_constructEEclsr3stdE7declvalINSV_IJSZ_EEEEEclsr3stdE7declvalIT1_EEEEOSY_NS7_IS12_S13_EE"}
!23 = !{i8 0, i8 2}
