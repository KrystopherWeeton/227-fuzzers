; ModuleID = '../../content/browser/worker_host/dedicated_worker_service_impl.cc'
source_filename = "../../content/browser/worker_host/dedicated_worker_service_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::DedicatedWorkerServiceImpl" = type { %"class.content::DedicatedWorkerService", %"class.base::ObserverList", %"class.base::flat_map" }
%"class.content::DedicatedWorkerService" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.7" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.336" }
%"struct.std::__1::pair" = type { %"class.util::TokenType", %"class.content::DedicatedWorkerHost"* }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.content::DedicatedWorkerHost" = type { %"class.blink::mojom::DedicatedWorkerHost", %"class.content::RenderProcessHostObserver", %"class.content::DedicatedWorkerServiceImpl"*, %"class.util::TokenType", %"class.content::RenderProcessHost"*, %"class.base::ScopedObservation", %"class.absl::optional", %"class.absl::optional.18", %"struct.content::GlobalFrameRoutingId", %"class.url::Origin", %"class.url::Origin", %"class.net::IsolationInfo", %"struct.network::CrossOriginEmbedderPolicy", %"class.absl::optional.63", %"class.mojo::Remote", %"class.std::__1::unique_ptr.245", %"class.content::BrowserInterfaceBrokerImpl", %"class.mojo::Receiver", %"class.mojo::Receiver.299", i8, %"class.mojo::Remote.301", %"class.mojo::Remote.309", %"class.std::__1::unique_ptr.317", %"class.base::WeakPtr.323", %"class.base::WeakPtr.323", %"class.absl::optional.324", %"class.base::WeakPtrFactory.335" }
%"class.blink::mojom::DedicatedWorkerHost" = type { i32 (...)** }
%"class.content::RenderProcessHostObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Sender" = type { i32 (...)** }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ScopedObservation" = type { %"class.content::RenderProcessHostObserver"*, %"class.content::RenderProcessHost"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.content::GlobalFrameRoutingId" }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.util::TokenType" }
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.29" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.25 }
%union.anon.25 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.29" = type { %"class.absl::optional_internal::optional_data.30" }
%"class.absl::optional_internal::optional_data.30" = type { %"class.absl::optional_internal::optional_data_base.31" }
%"class.absl::optional_internal::optional_data_base.31" = type { %"class.absl::optional_internal::optional_data_dtor_base.32" }
%"class.absl::optional_internal::optional_data_dtor_base.32" = type { i8, %union.anon.33 }
%union.anon.33 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.34", %"class.absl::optional.34", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.44" }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %"class.url::Origin" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.39", %"class.absl::optional.39" }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.58", i32, %"class.absl::optional.58" }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"struct.network::CrossOriginEmbedderPolicy" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.239" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.68, %"class.std::__1::unique_ptr.189", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.70, i32 }>
%class.scoped_refptr.68 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.70, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.155", %"class.absl::optional.160", %"class.absl::optional.107", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.180", i8, [7 x i8], %class.scoped_refptr.70, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.69" }>
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.75", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.81" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.81" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.70, %"class.std::__1::unique_ptr.84", %"class.absl::optional.93", %"struct.std::__1::atomic.103", i8, i8, i8, i8, i32, i32, %"class.absl::optional.107", %"class.std::__1::unique_ptr.112", i8, i64, %class.scoped_refptr.144, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.153", %"class.base::WeakPtrFactory.154" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.82 }
%class.scoped_refptr.82 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.83", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.83" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.70, i8, %"class.mojo::ScopedHandleBase.87", %class.scoped_refptr.88, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.89" }
%"class.mojo::ScopedHandleBase.87" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.88 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.89" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.93" = type { %"class.absl::optional_internal::optional_data.94" }
%"class.absl::optional_internal::optional_data.94" = type { %"class.absl::optional_internal::optional_data_base.95" }
%"class.absl::optional_internal::optional_data_base.95" = type { %"class.absl::optional_internal::optional_data_dtor_base.96" }
%"class.absl::optional_internal::optional_data_dtor_base.96" = type { i8, %union.anon.97 }
%union.anon.97 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.98", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.98" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i8 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.115", i8, i64, %class.scoped_refptr.116, %class.scoped_refptr.140 }
%"class.base::RepeatingCallback.115" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.116 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.118", %"class.std::__1::map.129", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.117 }
%class.scoped_refptr.117 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.118" = type { %"class.std::__1::__tree.119" }
%"class.std::__1::__tree.119" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::map.129" = type { %"class.std::__1::__tree.130" }
%"class.std::__1::__tree.130" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%class.scoped_refptr.140 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.144 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.145", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.147", %"struct.std::__1::atomic.147", %"struct.std::__1::atomic.147", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.145" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.152 }
%class.scoped_refptr.152 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.341", [4 x i8], %"class.base::RepeatingCallback.192", %class.scoped_refptr.70, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.342", [4 x i8] }>
%"class.base::RefCountedThreadSafe.341" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.192" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.342" = type { %"struct.std::__1::__atomic_base.343" }
%"struct.std::__1::__atomic_base.343" = type { %"struct.std::__1::__atomic_base.344" }
%"struct.std::__1::__atomic_base.344" = type { %"struct.std::__1::__cxx_atomic_impl.345" }
%"struct.std::__1::__cxx_atomic_impl.345" = type { %"struct.std::__1::__cxx_atomic_base_impl.346" }
%"struct.std::__1::__cxx_atomic_base_impl.346" = type { i32 }
%"class.base::WeakPtr.153" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.154" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.155" = type { %"class.absl::optional_internal::optional_data.156" }
%"class.absl::optional_internal::optional_data.156" = type { %"class.absl::optional_internal::optional_data_base.157" }
%"class.absl::optional_internal::optional_data_base.157" = type { %"class.absl::optional_internal::optional_data_dtor_base.158" }
%"class.absl::optional_internal::optional_data_dtor_base.158" = type { i8, %union.anon.159 }
%union.anon.159 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.160" = type { %"class.absl::optional_internal::optional_data.161" }
%"class.absl::optional_internal::optional_data.161" = type { %"class.absl::optional_internal::optional_data_base.162" }
%"class.absl::optional_internal::optional_data_base.162" = type { %"class.absl::optional_internal::optional_data_dtor_base.163" }
%"class.absl::optional_internal::optional_data_dtor_base.163" = type { i8, [7 x i8], %union.anon.164 }
%union.anon.164 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.107" = type { %"class.absl::optional_internal::optional_data.108" }
%"class.absl::optional_internal::optional_data.108" = type { %"class.absl::optional_internal::optional_data_base.109" }
%"class.absl::optional_internal::optional_data_base.109" = type { %"class.absl::optional_internal::optional_data_dtor_base.110" }
%"class.absl::optional_internal::optional_data_dtor_base.110" = type { i8, %union.anon.111 }
%union.anon.111 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.165 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.165 = type { %"class.std::__1::map.168" }
%"class.std::__1::map.168" = type { %"class.std::__1::__tree.169" }
%"class.std::__1::__tree.169" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.179"*, i64 }
%"class.std::__1::unique_ptr.179" = type opaque
%"class.std::__1::map.180" = type { %"class.std::__1::__tree.181" }
%"class.std::__1::__tree.181" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.192", %"class.base::OnceCallback.193", %"class.absl::optional.194", %"class.absl::optional.199", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.206", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.214", %"class.std::__1::map.225", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.234", i8, %class.scoped_refptr.70, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.235" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.193" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.194" = type { %"class.absl::optional_internal::optional_data.195" }
%"class.absl::optional_internal::optional_data.195" = type { %"class.absl::optional_internal::optional_data_base.196" }
%"class.absl::optional_internal::optional_data_base.196" = type { %"class.absl::optional_internal::optional_data_dtor_base.197" }
%"class.absl::optional_internal::optional_data_dtor_base.197" = type { i8, %union.anon.198 }
%union.anon.198 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.199" = type { %"class.absl::optional_internal::optional_data.200" }
%"class.absl::optional_internal::optional_data.200" = type { %"class.absl::optional_internal::optional_data_base.201" }
%"class.absl::optional_internal::optional_data_base.201" = type { %"class.absl::optional_internal::optional_data_dtor_base.202" }
%"class.absl::optional_internal::optional_data_dtor_base.202" = type { i8, %union.anon.203 }
%union.anon.203 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.70, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.204" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.204" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.209", %class.scoped_refptr.210 }
%"class.base::RepeatingCallback.209" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.210 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.69", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.214" = type { %"class.std::__1::__tree.215" }
%"class.std::__1::__tree.215" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::map.225" = type { %"class.std::__1::__tree.226" }
%"class.std::__1::__tree.226" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::OnceCallback.234" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.235" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%class.scoped_refptr.70 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.71" }>
%"class.base::RefCountedThreadSafe.71" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::mojom::DedicatedWorkerHostFactoryClientProxy"* }
%"class.blink::mojom::DedicatedWorkerHostFactoryClientProxy" = type { %"class.blink::mojom::DedicatedWorkerHostFactoryClient", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::DedicatedWorkerHostFactoryClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.content::ServiceWorkerMainResourceHandle"* }
%"class.content::ServiceWorkerMainResourceHandle" = type opaque
%"class.content::BrowserInterfaceBrokerImpl" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.content::DedicatedWorkerHost"*, %"class.mojo::BinderMap", %"class.mojo::BinderMapWithContext.263", %"class.std::__1::unique_ptr.274" }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.mojo::BinderMap" = type { %"class.mojo::BinderMapWithContext" }
%"class.mojo::BinderMapWithContext" = type { %"class.std::__1::map.251", %"class.base::RepeatingCallback.262" }
%"class.std::__1::map.251" = type { %"class.std::__1::__tree.252" }
%"class.std::__1::__tree.252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::RepeatingCallback.262" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.mojo::BinderMapWithContext.263" = type { %"class.std::__1::map.264", %"class.base::RepeatingCallback.273" }
%"class.std::__1::map.264" = type { %"class.std::__1::__tree.265" }
%"class.std::__1::__tree.265" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::RepeatingCallback.273" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.content::MojoBinderPolicyApplier"* }
%"class.content::MojoBinderPolicyApplier" = type { i32, %"class.content::MojoBinderPolicyMapImpl"*, %"class.base::OnceCallback.287", i32, %"class.std::__1::vector.288" }
%"class.content::MojoBinderPolicyMapImpl" = type { %"class.content::MojoBinderPolicyMap", %"class.base::flat_map.277" }
%"class.content::MojoBinderPolicyMap" = type { i32 (...)** }
%"class.base::flat_map.277" = type { %"class.base::internal::flat_tree.278" }
%"class.base::internal::flat_tree.278" = type { %"class.std::__1::vector.279" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.std::__1::pair.281"*, %"struct.std::__1::pair.281"*, %"class.std::__1::__compressed_pair.282" }
%"struct.std::__1::pair.281" = type opaque
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::pair.281"* }
%"class.base::OnceCallback.287" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.base::OnceCallback"* }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::BrowserInterfaceBrokerStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.68, %"class.std::__1::unique_ptr.189", %"class.base::WeakPtrFactory.298" }
%"class.base::WeakPtrFactory.298" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::BrowserInterfaceBrokerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::BrowserInterfaceBroker"* }
%"class.mojo::Receiver.299" = type { %"class.mojo::internal::BindingState.300" }
%"class.mojo::internal::BindingState.300" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::DedicatedWorkerHostStub" }
%"class.blink::mojom::DedicatedWorkerHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::DedicatedWorkerHost"* }
%"class.mojo::Remote.301" = type { %"class.mojo::internal::InterfacePtrState.302" }
%"class.mojo::internal::InterfacePtrState.302" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.303" }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.network::mojom::URLLoaderFactoryProxy"* }
%"class.network::mojom::URLLoaderFactoryProxy" = type { %"class.network::mojom::URLLoaderFactory", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.mojo::Remote.309" = type { %"class.mojo::internal::InterfacePtrState.310" }
%"class.mojo::internal::InterfacePtrState.310" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.311" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::mojom::SubresourceLoaderUpdaterProxy"* }
%"class.blink::mojom::SubresourceLoaderUpdaterProxy" = type { %"class.blink::mojom::SubresourceLoaderUpdater", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::SubresourceLoaderUpdater" = type { i32 (...)** }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.content::CrossOriginEmbedderPolicyReporter"* }
%"class.content::CrossOriginEmbedderPolicyReporter" = type opaque
%"class.base::WeakPtr.323" = type { %"class.base::internal::WeakPtrBase" }
%"class.absl::optional.324" = type { %"class.absl::optional_internal::optional_data.325" }
%"class.absl::optional_internal::optional_data.325" = type { %"class.absl::optional_internal::optional_data_base.326" }
%"class.absl::optional_internal::optional_data_base.326" = type { %"class.absl::optional_internal::optional_data_dtor_base.327" }
%"class.absl::optional_internal::optional_data_dtor_base.327" = type { i8, %union.anon.328 }
%union.anon.328 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.329" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %class.GURL* }
%"class.base::WeakPtrFactory.335" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::pair"* }
%"class.content::DedicatedWorkerService::Observer" = type { %"class.base::CheckedObserver" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.367" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.337", %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.std::__1::allocator.339"* }
%"class.std::__1::allocator.339" = type { i8 }

$_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_ = comdat any

$_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_ = comdat any

$_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEEPN7content19DedicatedWorkerHostEEENS_9allocatorISA_EEE7emplaceIJSA_EEENS_11__wrap_iterIPSA_EENSF_IPKSA_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEEPN7content19DedicatedWorkerHostEEERNS_9allocatorISA_EEE12emplace_backIJSA_EEEvDpOT_ = comdat any

$_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv = comdat any

$_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_ = comdat any

@_ZTVN7content26DedicatedWorkerServiceImplE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::DedicatedWorkerServiceImpl"*, %"class.content::DedicatedWorkerService::Observer"*)* @_ZN7content26DedicatedWorkerServiceImpl11AddObserverEPNS_22DedicatedWorkerService8ObserverE to i8*), i8* bitcast (void (%"class.content::DedicatedWorkerServiceImpl"*, %"class.content::DedicatedWorkerService::Observer"*)* @_ZN7content26DedicatedWorkerServiceImpl14RemoveObserverEPNS_22DedicatedWorkerService8ObserverE to i8*), i8* bitcast (void (%"class.content::DedicatedWorkerServiceImpl"*, %"class.content::DedicatedWorkerService::Observer"*)* @_ZN7content26DedicatedWorkerServiceImpl25EnumerateDedicatedWorkersEPNS_22DedicatedWorkerService8ObserverE to i8*), i8* bitcast (void (%"class.content::DedicatedWorkerServiceImpl"*)* @_ZN7content26DedicatedWorkerServiceImplD2Ev to i8*), i8* bitcast (void (%"class.content::DedicatedWorkerServiceImpl"*)* @_ZN7content26DedicatedWorkerServiceImplD0Ev to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [36 x i8] c"../../base/observer_list_internal.h\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"!weak_ptr_.WasInvalidated()\00", align 1

@_ZN7content26DedicatedWorkerServiceImplC1Ev = hidden unnamed_addr alias void (%"class.content::DedicatedWorkerServiceImpl"*), void (%"class.content::DedicatedWorkerServiceImpl"*)* @_ZN7content26DedicatedWorkerServiceImplC2Ev
@_ZN7content26DedicatedWorkerServiceImplD1Ev = hidden unnamed_addr alias void (%"class.content::DedicatedWorkerServiceImpl"*), void (%"class.content::DedicatedWorkerServiceImpl"*)* @_ZN7content26DedicatedWorkerServiceImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImplC2Ev(%"class.content::DedicatedWorkerServiceImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content26DedicatedWorkerServiceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::ObserverList"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %5, %"class.base::internal::LinkNodeBase"* %5, %"class.base::internal::LinkNodeBase"* %5) #11
  %6 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2
  %9 = bitcast %"class.base::flat_map"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImplD2Ev(%"class.content::DedicatedWorkerServiceImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content26DedicatedWorkerServiceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %14 = bitcast %"class.base::internal::LinkNodeBase"** %13 to %"class.base::LinkNode"**
  %15 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 1, i32 0
  %16 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %14, align 8
  %17 = icmp eq %"class.base::LinkNode"* %16, %15
  br i1 %17, label %30, label %18

18:                                               ; preds = %11, %27
  %19 = phi %"class.base::LinkNode"* [ %28, %27 ], [ %16, %11 ]
  %20 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %19, i64 1
  %21 = bitcast %"class.base::LinkNode"* %20 to %"class.base::ObserverList"**
  %22 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %21, align 8
  %23 = icmp eq %"class.base::ObserverList"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %21, align 8
  %25 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %19, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %25) #11
  %26 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %14, align 8
  br label %27

27:                                               ; preds = %24, %18
  %28 = phi %"class.base::LinkNode"* [ %19, %18 ], [ %26, %24 ]
  %29 = icmp eq %"class.base::LinkNode"* %28, %15
  br i1 %29, label %30, label %18

30:                                               ; preds = %27, %11
  %31 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %12, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %31, align 8
  %33 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.base::internal::CheckedObserverAdapter"* %32 to i8*
  %36 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  %38 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %37, %32
  br i1 %38, label %46, label %39

39:                                               ; preds = %34, %39
  %40 = phi %"class.base::internal::CheckedObserverAdapter"* [ %41, %39 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %40, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %41) #11
  %42 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %41, %32
  br i1 %42, label %43, label %39

43:                                               ; preds = %39
  %44 = bitcast %"class.base::ObserverList"* %12 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %34
  %47 = phi i8* [ %45, %43 ], [ %35, %34 ]
  store %"class.base::internal::CheckedObserverAdapter"* %32, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %30, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImplD0Ev(%"class.content::DedicatedWorkerServiceImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7content26DedicatedWorkerServiceImplD2Ev(%"class.content::DedicatedWorkerServiceImpl"* %0) #11
  %2 = bitcast %"class.content::DedicatedWorkerServiceImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImpl11AddObserverEPNS_22DedicatedWorkerService8ObserverE(%"class.content::DedicatedWorkerServiceImpl"*, %"class.content::DedicatedWorkerService::Observer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_(%"class.base::ObserverList"* %3, %"class.content::DedicatedWorkerService::Observer"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_(%"class.base::ObserverList"*, %"class.content::DedicatedWorkerService::Observer"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::CheckedObserverAdapter", align 8
  %4 = icmp eq %"class.content::DedicatedWorkerService::Observer"* %1, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %6, align 8
  %8 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %7, %9
  %11 = getelementptr inbounds %"class.content::DedicatedWorkerService::Observer", %"class.content::DedicatedWorkerService::Observer"* %1, i64 0, i32 0
  br i1 %10, label %28, label %12

12:                                               ; preds = %5, %21
  %13 = phi %"class.base::internal::CheckedObserverAdapter"* [ %22, %21 ], [ %7, %5 ]
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #11
  %16 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to %"class.base::CheckedObserver"**
  %18 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %17, align 8
  %19 = select i1 %15, %"class.base::CheckedObserver"* %18, %"class.base::CheckedObserver"* null
  %20 = icmp eq %"class.base::CheckedObserver"* %19, %11
  br i1 %20, label %24, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 1
  %23 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %22, %9
  br i1 %23, label %24, label %12

24:                                               ; preds = %12, %21
  %25 = phi %"class.base::internal::CheckedObserverAdapter"* [ %9, %21 ], [ %13, %12 ]
  %26 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %27 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %25, %26
  br i1 %27, label %28, label %46

28:                                               ; preds = %24, %5, %2
  %29 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = bitcast %"class.base::internal::CheckedObserverAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.content::DedicatedWorkerService::Observer", %"class.content::DedicatedWorkerService::Observer"* %1, i64 0, i32 0
  call void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"* nonnull %3, %"class.base::CheckedObserver"* %33) #11
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %34, align 8
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  %38 = icmp ult %"class.base::internal::CheckedObserverAdapter"* %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %28
  call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %35, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #11
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %35, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = bitcast %"class.base::internal::CheckedObserverAdapter"** %34 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* %44, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #11
  br label %45

45:                                               ; preds = %39, %43
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #11
  br label %46

46:                                               ; preds = %24, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImpl14RemoveObserverEPNS_22DedicatedWorkerService8ObserverE(%"class.content::DedicatedWorkerServiceImpl"*, %"class.content::DedicatedWorkerService::Observer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_(%"class.base::ObserverList"* %3, %"class.content::DedicatedWorkerService::Observer"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_(%"class.base::ObserverList"*, %"class.content::DedicatedWorkerService::Observer"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %6, %8
  %10 = getelementptr inbounds %"class.content::DedicatedWorkerService::Observer", %"class.content::DedicatedWorkerService::Observer"* %1, i64 0, i32 0
  br i1 %9, label %97, label %11

11:                                               ; preds = %2, %20
  %12 = phi %"class.base::internal::CheckedObserverAdapter"* [ %21, %20 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #11
  %15 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.base::CheckedObserver"**
  %17 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %16, align 8
  %18 = select i1 %14, %"class.base::CheckedObserver"* %17, %"class.base::CheckedObserver"* null
  %19 = icmp eq %"class.base::CheckedObserver"* %18, %10
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 1
  %22 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %21, %8
  br i1 %22, label %23, label %11

23:                                               ; preds = %11, %20
  %24 = phi %"class.base::internal::CheckedObserverAdapter"* [ %8, %20 ], [ %12, %11 ]
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %26 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %25
  br i1 %26, label %97, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %33 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %32) #11
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #11
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %37

37:                                               ; preds = %27, %31, %34
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %39 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %38) #11
  %40 = bitcast i64* %28 to %"class.base::CheckedObserver"**
  %41 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %40, align 8
  %42 = icmp eq %"class.base::CheckedObserver"* %41, null
  %43 = xor i1 %39, true
  %44 = or i1 %42, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %45, %37
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::internal::LinkNodeBase"** %50 to %"class.base::LinkNode"**
  %52 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %51, align 8
  %53 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0
  %54 = icmp eq %"class.base::LinkNode"* %52, %53
  br i1 %54, label %55, label %78

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 1
  %57 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %58 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %56, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %55, %59
  %60 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %59 ], [ %24, %55 ]
  %61 = phi %"class.base::internal::CheckedObserverAdapter"* [ %63, %59 ], [ %56, %55 ]
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %60, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %61) #11
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %60, i64 1
  %65 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %63, %57
  br i1 %65, label %66, label %59

66:                                               ; preds = %59
  %67 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %64
  br i1 %68, label %76, label %69

69:                                               ; preds = %66, %55
  %70 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %24, %55 ]
  %71 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %66 ], [ %56, %55 ]
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi %"class.base::internal::CheckedObserverAdapter"* [ %74, %72 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %73, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %74) #11
  %75 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %74, %70
  br i1 %75, label %76, label %72

76:                                               ; preds = %72, %66
  %77 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %70, %72 ]
  store %"class.base::internal::CheckedObserverAdapter"* %77, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  br label %97

78:                                               ; preds = %49
  %79 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #11
  %81 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %81, align 8
  %84 = bitcast %"class.base::internal::CheckedObserverAdapter"* %24 to i64*
  %85 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.base::internal::WeakReference::Flag"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %86) #11
  %93 = bitcast %"class.base::internal::WeakReference::Flag"* %86 to i8*
  call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %78, %88, %92
  %95 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %28, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #11
  br label %97

97:                                               ; preds = %2, %76, %94, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImpl25EnumerateDedicatedWorkersEPNS_22DedicatedWorkerService8ObserverE(%"class.content::DedicatedWorkerServiceImpl"* nocapture readonly, %"class.content::DedicatedWorkerService::Observer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.content::DedicatedWorkerService::Observer"* %1 to void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)***
  %10 = bitcast %"class.content::DedicatedWorkerService::Observer"* %1 to void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)***
  br label %12

11:                                               ; preds = %38, %2
  ret void

12:                                               ; preds = %8, %38
  %13 = phi %"struct.std::__1::pair"* [ %4, %8 ], [ %39, %38 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 0, i32 1
  %16 = load %"class.content::DedicatedWorkerHost"*, %"class.content::DedicatedWorkerHost"** %15, align 8
  %17 = getelementptr inbounds %"class.content::DedicatedWorkerHost", %"class.content::DedicatedWorkerHost"* %16, i64 0, i32 4
  %18 = load %"class.content::RenderProcessHost"*, %"class.content::RenderProcessHost"** %17, align 8
  %19 = bitcast %"class.content::RenderProcessHost"* %18 to i32 (%"class.content::RenderProcessHost"*)***
  %20 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %20, i64 29
  %22 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %21, align 8
  %23 = tail call i32 %22(%"class.content::RenderProcessHost"* %18) #11
  %24 = getelementptr inbounds %"class.content::DedicatedWorkerHost", %"class.content::DedicatedWorkerHost"* %16, i64 0, i32 8
  %25 = bitcast %"struct.content::GlobalFrameRoutingId"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)**, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)*** %9, align 8
  %28 = getelementptr inbounds void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)** %27, i64 2
  %29 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)** %28, align 8
  tail call void %29(%"class.content::DedicatedWorkerService::Observer"* %1, %"class.util::TokenType"* dereferenceable(16) %14, i32 %23, i64 %26) #11
  %30 = getelementptr inbounds %"class.content::DedicatedWorkerHost", %"class.content::DedicatedWorkerHost"* %16, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %12
  %34 = getelementptr inbounds %"class.content::DedicatedWorkerHost", %"class.content::DedicatedWorkerHost"* %16, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)**, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)*** %10, align 8
  %36 = getelementptr inbounds void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)** %35, i64 4
  %37 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)** %36, align 8
  tail call void %37(%"class.content::DedicatedWorkerService::Observer"* %1, %"class.util::TokenType"* dereferenceable(16) %14, %class.GURL* dereferenceable(120) %34) #11
  br label %38

38:                                               ; preds = %12, %33
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 1
  %40 = icmp eq %"struct.std::__1::pair"* %39, %6
  br i1 %40, label %11, label %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImpl19NotifyWorkerCreatedEPNS_19DedicatedWorkerHostE(%"class.content::DedicatedWorkerServiceImpl"*, %"class.content::DedicatedWorkerHost"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair", align 8
  %4 = alloca %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = ptrtoint %"class.content::DedicatedWorkerHost"* %1 to i64
  %7 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.content::DedicatedWorkerHost", %"class.content::DedicatedWorkerHost"* %1, i64 0, i32 3
  %9 = bitcast %"struct.std::__1::pair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %"class.util::TokenType"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 16, i1 false) #11
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %12 = bitcast %"class.content::DedicatedWorkerHost"** %11 to i64*
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  %19 = sub i64 %17, %18
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %17 to %"struct.std::__1::pair"*
  br i1 %20, label %50, label %22

22:                                               ; preds = %2
  %23 = sdiv exact i64 %19, 24
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %24, align 8
  %27 = load i64, i64* %25, align 8
  br label %28

28:                                               ; preds = %46, %22
  %29 = phi %"struct.std::__1::pair"* [ %14, %22 ], [ %48, %46 ]
  %30 = phi i64 [ %23, %22 ], [ %47, %46 ]
  %31 = lshr i64 %30, 1
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 %31
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 %31, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %33, align 8
  %36 = icmp ult i64 %35, %26
  br i1 %36, label %42, label %37

37:                                               ; preds = %28
  %38 = icmp ult i64 %26, %35
  br i1 %38, label %46, label %39

39:                                               ; preds = %37
  %40 = load i64, i64* %34, align 8
  %41 = icmp ult i64 %40, %27
  br i1 %41, label %42, label %46

42:                                               ; preds = %39, %28
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 1
  %44 = xor i64 %31, -1
  %45 = add i64 %30, %44
  br label %46

46:                                               ; preds = %42, %39, %37
  %47 = phi i64 [ %45, %42 ], [ %31, %39 ], [ %31, %37 ]
  %48 = phi %"struct.std::__1::pair"* [ %43, %42 ], [ %29, %39 ], [ %29, %37 ]
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %50, label %28

50:                                               ; preds = %46, %2
  %51 = phi %"struct.std::__1::pair"* [ %14, %2 ], [ %48, %46 ]
  %52 = icmp eq %"struct.std::__1::pair"* %51, %21
  br i1 %52, label %67, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %54, align 8
  %59 = load i64, i64* %56, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %67, label %61

61:                                               ; preds = %53
  %62 = icmp ult i64 %59, %58
  br i1 %62, label %70, label %63

63:                                               ; preds = %61
  %64 = load i64, i64* %55, align 8
  %65 = load i64, i64* %57, align 8
  %66 = icmp ult i64 %64, %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %63, %53, %50
  %68 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %7, i64 0, i32 0
  %69 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEEPN7content19DedicatedWorkerHostEEENS_9allocatorISA_EEE7emplaceIJSA_EEENS_11__wrap_iterIPSA_EENSF_IPKSA_EEDpOT_(%"class.std::__1::vector.7"* %68, %"struct.std::__1::pair"* %51, %"struct.std::__1::pair"* nonnull dereferenceable(24) %3) #11
  br label %70

70:                                               ; preds = %61, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %71 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1
  %72 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %76 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %71, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 40, i1 false)
  %78 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %76, align 8, !noalias !3
  %79 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %80 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %79, align 8, !noalias !3
  %81 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %78, %80
  %82 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %82) #11
  br i1 %81, label %83, label %85

83:                                               ; preds = %70
  %84 = bitcast %"class.base::ObserverList"** %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #11, !alias.scope !3
  br label %99

85:                                               ; preds = %70
  store %"class.base::ObserverList"* %71, %"class.base::ObserverList"** %73, align 8, !alias.scope !3
  %86 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %82, %"class.base::internal::LinkNodeBase"* %86) #11
  store i64 0, i64* %74, align 8, !alias.scope !3
  %87 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 3
  %88 = load i32, i32* %87, align 8, !noalias !3
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.base::internal::CheckedObserverAdapter"** %79 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !3
  %93 = bitcast %"class.base::ObserverList"* %71 to i64*
  %94 = load i64, i64* %93, align 8, !noalias !3
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 4
  br label %97

97:                                               ; preds = %90, %85
  %98 = phi i64 [ %96, %90 ], [ -1, %85 ]
  store i64 %98, i64* %75, align 8, !alias.scope !3
  call void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %99

99:                                               ; preds = %83, %97
  %100 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %100) #11
  %101 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %102 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %103 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %104 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %104) #11
  %106 = bitcast %"class.base::ObserverList"** %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #11, !alias.scope !6
  %107 = getelementptr inbounds %"class.content::DedicatedWorkerHost", %"class.content::DedicatedWorkerHost"* %1, i64 0, i32 4
  %108 = getelementptr inbounds %"class.content::DedicatedWorkerHost", %"class.content::DedicatedWorkerHost"* %1, i64 0, i32 8
  %109 = bitcast %"struct.content::GlobalFrameRoutingId"* %108 to i64*
  br label %110

110:                                              ; preds = %230, %99
  %111 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %112 = icmp eq %"class.base::ObserverList"* %111, null
  br i1 %112, label %128, label %113

113:                                              ; preds = %110
  %114 = load i64, i64* %74, align 8
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::internal::CheckedObserverAdapter"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.base::ObserverList"* %111 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %117, %119
  %121 = ashr exact i64 %120, 4
  %122 = load i64, i64* %75, align 8
  %123 = icmp ult i64 %121, %122
  %124 = select i1 %123, i64 %121, i64 %122
  %125 = icmp eq i64 %114, %124
  br i1 %125, label %128, label %126

126:                                              ; preds = %113
  %127 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %101, align 8
  br label %144

128:                                              ; preds = %113, %110
  %129 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %101, align 8
  %130 = icmp eq %"class.base::ObserverList"* %129, null
  br i1 %130, label %179, label %131

131:                                              ; preds = %128
  %132 = load i64, i64* %102, align 8
  %133 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 0, i32 0, i32 1
  %134 = bitcast %"class.base::internal::CheckedObserverAdapter"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.base::ObserverList"* %129 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %135, %137
  %139 = ashr exact i64 %138, 4
  %140 = load i64, i64* %103, align 8
  %141 = icmp ult i64 %139, %140
  %142 = select i1 %141, i64 %139, i64 %140
  %143 = icmp eq i64 %132, %142
  br i1 %143, label %153, label %144

144:                                              ; preds = %131, %126
  %145 = phi %"class.base::ObserverList"* [ %127, %126 ], [ %129, %131 ]
  %146 = icmp eq %"class.base::ObserverList"* %111, %145
  %147 = load i64, i64* %74, align 8
  %148 = load i64, i64* %102, align 8
  %149 = icmp eq i64 %147, %148
  %150 = and i1 %146, %149
  br i1 %150, label %151, label %208

151:                                              ; preds = %144
  %152 = icmp eq %"class.base::ObserverList"* %111, null
  br i1 %152, label %179, label %153

153:                                              ; preds = %131, %151
  %154 = phi %"class.base::ObserverList"* [ %111, %151 ], [ %129, %131 ]
  %155 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %154, i64 0, i32 1
  %156 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %154, i64 0, i32 1, i32 0, i32 0, i32 1
  %157 = bitcast %"class.base::internal::LinkNodeBase"** %156 to %"class.base::LinkNode"**
  %158 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %157, align 8
  %159 = bitcast %"class.base::LinkedList"* %155 to %"class.base::LinkNode"**
  %160 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %159, align 8
  %161 = icmp eq %"class.base::LinkNode"* %158, %160
  br i1 %161, label %162, label %175

162:                                              ; preds = %153
  %163 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %154, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %163, align 8
  %165 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %154, i64 0, i32 0, i32 0, i32 1
  %166 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %165, align 8
  %167 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %164, %"class.base::internal::CheckedObserverAdapter"* %166) #11
  %168 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %165, align 8
  %169 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %167, %168
  br i1 %169, label %175, label %170

170:                                              ; preds = %162, %170
  %171 = phi %"class.base::internal::CheckedObserverAdapter"* [ %172, %170 ], [ %168, %162 ]
  %172 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %171, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %172) #11
  %173 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %172, %167
  br i1 %173, label %174, label %170

174:                                              ; preds = %170
  store %"class.base::internal::CheckedObserverAdapter"* %167, %"class.base::internal::CheckedObserverAdapter"** %165, align 8
  br label %175

175:                                              ; preds = %174, %162, %153
  %176 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %101, align 8
  %177 = icmp eq %"class.base::ObserverList"* %176, null
  br i1 %177, label %179, label %178

178:                                              ; preds = %175
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %101, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %104) #11
  br label %179

179:                                              ; preds = %128, %151, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %100) #11
  %180 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %181 = icmp eq %"class.base::ObserverList"* %180, null
  br i1 %181, label %207, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %180, i64 0, i32 1
  %184 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %180, i64 0, i32 1, i32 0, i32 0, i32 1
  %185 = bitcast %"class.base::internal::LinkNodeBase"** %184 to %"class.base::LinkNode"**
  %186 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %185, align 8
  %187 = bitcast %"class.base::LinkedList"* %183 to %"class.base::LinkNode"**
  %188 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %187, align 8
  %189 = icmp eq %"class.base::LinkNode"* %186, %188
  br i1 %189, label %190, label %203

190:                                              ; preds = %182
  %191 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %180, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %191, align 8
  %193 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %180, i64 0, i32 0, i32 0, i32 1
  %194 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %193, align 8
  %195 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %192, %"class.base::internal::CheckedObserverAdapter"* %194) #11
  %196 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %193, align 8
  %197 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %195, %196
  br i1 %197, label %203, label %198

198:                                              ; preds = %190, %198
  %199 = phi %"class.base::internal::CheckedObserverAdapter"* [ %200, %198 ], [ %196, %190 ]
  %200 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %199, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %200) #11
  %201 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %200, %195
  br i1 %201, label %202, label %198

202:                                              ; preds = %198
  store %"class.base::internal::CheckedObserverAdapter"* %195, %"class.base::internal::CheckedObserverAdapter"** %193, align 8
  br label %203

203:                                              ; preds = %202, %190, %182
  %204 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %205 = icmp eq %"class.base::ObserverList"* %204, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %203
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %73, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %82) #11
  br label %207

207:                                              ; preds = %179, %203, %206
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #11
  ret void

208:                                              ; preds = %144
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %209, align 8
  %211 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %210, i64 %147, i32 0, i32 0, i32 0
  %212 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %211) #11
  %213 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %210, i64 %147, i32 0, i32 0, i32 1
  %214 = bitcast i64* %213 to %"class.content::DedicatedWorkerService::Observer"**
  %215 = load %"class.content::DedicatedWorkerService::Observer"*, %"class.content::DedicatedWorkerService::Observer"** %214, align 8
  %216 = select i1 %212, %"class.content::DedicatedWorkerService::Observer"* %215, %"class.content::DedicatedWorkerService::Observer"* null
  %217 = load %"class.content::RenderProcessHost"*, %"class.content::RenderProcessHost"** %107, align 8
  %218 = bitcast %"class.content::RenderProcessHost"* %217 to i32 (%"class.content::RenderProcessHost"*)***
  %219 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %218, align 8
  %220 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %219, i64 29
  %221 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %220, align 8
  %222 = call i32 %221(%"class.content::RenderProcessHost"* %217) #11
  %223 = load i64, i64* %109, align 4
  %224 = bitcast %"class.content::DedicatedWorkerService::Observer"* %216 to void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)***
  %225 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)**, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)** %225, i64 2
  %227 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i32, i64)** %226, align 8
  call void %227(%"class.content::DedicatedWorkerService::Observer"* %216, %"class.util::TokenType"* dereferenceable(16) %8, i32 %222, i64 %223) #11
  %228 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %229 = icmp eq %"class.base::ObserverList"* %228, null
  br i1 %229, label %230, label %231

230:                                              ; preds = %208, %231
  br label %110

231:                                              ; preds = %208
  %232 = load i64, i64* %74, align 8
  %233 = add i64 %232, 1
  store i64 %233, i64* %74, align 8
  call void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %230
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImpl27NotifyBeforeWorkerDestroyedERKN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEENS_20GlobalFrameRoutingIdE(%"class.content::DedicatedWorkerServiceImpl"*, %"class.util::TokenType"* dereferenceable(16), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair"*
  br i1 %13, label %45, label %15

15:                                               ; preds = %3
  %16 = sdiv exact i64 %12, 24
  %17 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %17, align 8
  %20 = load i64, i64* %18, align 8
  br label %21

21:                                               ; preds = %39, %15
  %22 = phi %"struct.std::__1::pair"* [ %7, %15 ], [ %41, %39 ]
  %23 = phi i64 [ %16, %15 ], [ %40, %39 ]
  %24 = lshr i64 %23, 1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 %24
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 %24, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %26, align 8
  %29 = icmp ult i64 %28, %19
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = icmp ult i64 %19, %28
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = load i64, i64* %27, align 8
  %34 = icmp ult i64 %33, %20
  br i1 %34, label %35, label %39

35:                                               ; preds = %32, %21
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %37 = xor i64 %24, -1
  %38 = add i64 %23, %37
  br label %39

39:                                               ; preds = %35, %32, %30
  %40 = phi i64 [ %38, %35 ], [ %24, %32 ], [ %24, %30 ]
  %41 = phi %"struct.std::__1::pair"* [ %36, %35 ], [ %22, %32 ], [ %22, %30 ]
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %21

43:                                               ; preds = %39
  %44 = ptrtoint %"struct.std::__1::pair"* %41 to i64
  br label %45

45:                                               ; preds = %43, %3
  %46 = phi i64 [ %44, %43 ], [ %11, %3 ]
  %47 = phi %"struct.std::__1::pair"* [ %41, %43 ], [ %7, %3 ]
  %48 = icmp eq %"struct.std::__1::pair"* %47, %14
  br i1 %48, label %66, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %50, align 8
  %55 = load i64, i64* %52, align 8
  %56 = icmp ult i64 %54, %55
  br i1 %56, label %66, label %57

57:                                               ; preds = %49
  %58 = icmp ult i64 %55, %54
  br i1 %58, label %63, label %59

59:                                               ; preds = %57
  %60 = load i64, i64* %51, align 8
  %61 = load i64, i64* %53, align 8
  %62 = icmp ult i64 %60, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %59, %57
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 1
  %65 = ptrtoint %"struct.std::__1::pair"* %64 to i64
  br label %66

66:                                               ; preds = %63, %59, %49, %45
  %67 = phi i64 [ %65, %63 ], [ %46, %45 ], [ %46, %59 ], [ %46, %49 ]
  %68 = inttoptr i64 %67 to %"struct.std::__1::pair"*
  %69 = icmp eq %"struct.std::__1::pair"* %47, %68
  br i1 %69, label %87, label %70

70:                                               ; preds = %66
  %71 = icmp eq %"struct.std::__1::pair"* %14, %68
  br i1 %71, label %85, label %72

72:                                               ; preds = %70, %72
  %73 = phi %"struct.std::__1::pair"* [ %83, %72 ], [ %47, %70 ]
  %74 = phi %"struct.std::__1::pair"* [ %82, %72 ], [ %68, %70 ]
  %75 = bitcast %"struct.std::__1::pair"* %73 to i8*
  %76 = bitcast %"struct.std::__1::pair"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 16, i1 false) #11
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 1
  %78 = bitcast %"class.content::DedicatedWorkerHost"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 0, i32 1
  %81 = bitcast %"class.content::DedicatedWorkerHost"** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 1
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 1
  %84 = icmp eq %"struct.std::__1::pair"* %82, %14
  br i1 %84, label %85, label %72

85:                                               ; preds = %72, %70
  %86 = phi %"struct.std::__1::pair"* [ %47, %70 ], [ %83, %72 ]
  store %"struct.std::__1::pair"* %86, %"struct.std::__1::pair"** %8, align 8
  br label %87

87:                                               ; preds = %66, %85
  %88 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1
  %89 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %89) #11
  %90 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %92 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %93 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 40, i1 false)
  %95 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %93, align 8, !noalias !9
  %96 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %97 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %96, align 8, !noalias !9
  %98 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %95, %97
  %99 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %99) #11
  br i1 %98, label %100, label %102

100:                                              ; preds = %87
  %101 = bitcast %"class.base::ObserverList"** %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #11, !alias.scope !9
  br label %116

102:                                              ; preds = %87
  store %"class.base::ObserverList"* %88, %"class.base::ObserverList"** %90, align 8, !alias.scope !9
  %103 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %99, %"class.base::internal::LinkNodeBase"* %103) #11
  store i64 0, i64* %91, align 8, !alias.scope !9
  %104 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 3
  %105 = load i32, i32* %104, align 8, !noalias !9
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.base::internal::CheckedObserverAdapter"** %96 to i64*
  %109 = load i64, i64* %108, align 8, !noalias !9
  %110 = bitcast %"class.base::ObserverList"* %88 to i64*
  %111 = load i64, i64* %110, align 8, !noalias !9
  %112 = sub i64 %109, %111
  %113 = ashr exact i64 %112, 4
  br label %114

114:                                              ; preds = %107, %102
  %115 = phi i64 [ %113, %107 ], [ -1, %102 ]
  store i64 %115, i64* %92, align 8, !alias.scope !9
  call void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %116

116:                                              ; preds = %100, %114
  %117 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #11
  %118 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %119 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %120 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %121 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %121) #11
  %123 = bitcast %"class.base::ObserverList"** %118 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #11, !alias.scope !12
  br label %124

124:                                              ; preds = %237, %116
  %125 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  %126 = icmp eq %"class.base::ObserverList"* %125, null
  br i1 %126, label %142, label %127

127:                                              ; preds = %124
  %128 = load i64, i64* %91, align 8
  %129 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 0, i32 0, i32 1
  %130 = bitcast %"class.base::internal::CheckedObserverAdapter"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.base::ObserverList"* %125 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 4
  %136 = load i64, i64* %92, align 8
  %137 = icmp ult i64 %135, %136
  %138 = select i1 %137, i64 %135, i64 %136
  %139 = icmp eq i64 %128, %138
  br i1 %139, label %142, label %140

140:                                              ; preds = %127
  %141 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %118, align 8
  br label %158

142:                                              ; preds = %127, %124
  %143 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %118, align 8
  %144 = icmp eq %"class.base::ObserverList"* %143, null
  br i1 %144, label %193, label %145

145:                                              ; preds = %142
  %146 = load i64, i64* %119, align 8
  %147 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 0, i32 0, i32 1
  %148 = bitcast %"class.base::internal::CheckedObserverAdapter"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.base::ObserverList"* %143 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %149, %151
  %153 = ashr exact i64 %152, 4
  %154 = load i64, i64* %120, align 8
  %155 = icmp ult i64 %153, %154
  %156 = select i1 %155, i64 %153, i64 %154
  %157 = icmp eq i64 %146, %156
  br i1 %157, label %167, label %158

158:                                              ; preds = %145, %140
  %159 = phi %"class.base::ObserverList"* [ %141, %140 ], [ %143, %145 ]
  %160 = icmp eq %"class.base::ObserverList"* %125, %159
  %161 = load i64, i64* %91, align 8
  %162 = load i64, i64* %119, align 8
  %163 = icmp eq i64 %161, %162
  %164 = and i1 %160, %163
  br i1 %164, label %165, label %222

165:                                              ; preds = %158
  %166 = icmp eq %"class.base::ObserverList"* %125, null
  br i1 %166, label %193, label %167

167:                                              ; preds = %145, %165
  %168 = phi %"class.base::ObserverList"* [ %125, %165 ], [ %143, %145 ]
  %169 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %168, i64 0, i32 1
  %170 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %168, i64 0, i32 1, i32 0, i32 0, i32 1
  %171 = bitcast %"class.base::internal::LinkNodeBase"** %170 to %"class.base::LinkNode"**
  %172 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %171, align 8
  %173 = bitcast %"class.base::LinkedList"* %169 to %"class.base::LinkNode"**
  %174 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %173, align 8
  %175 = icmp eq %"class.base::LinkNode"* %172, %174
  br i1 %175, label %176, label %189

176:                                              ; preds = %167
  %177 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %168, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %177, align 8
  %179 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %168, i64 0, i32 0, i32 0, i32 1
  %180 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %179, align 8
  %181 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %178, %"class.base::internal::CheckedObserverAdapter"* %180) #11
  %182 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %179, align 8
  %183 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %181, %182
  br i1 %183, label %189, label %184

184:                                              ; preds = %176, %184
  %185 = phi %"class.base::internal::CheckedObserverAdapter"* [ %186, %184 ], [ %182, %176 ]
  %186 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %185, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %186) #11
  %187 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %186, %181
  br i1 %187, label %188, label %184

188:                                              ; preds = %184
  store %"class.base::internal::CheckedObserverAdapter"* %181, %"class.base::internal::CheckedObserverAdapter"** %179, align 8
  br label %189

189:                                              ; preds = %188, %176, %167
  %190 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %118, align 8
  %191 = icmp eq %"class.base::ObserverList"* %190, null
  br i1 %191, label %193, label %192

192:                                              ; preds = %189
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %118, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %121) #11
  br label %193

193:                                              ; preds = %142, %165, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #11
  %194 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  %195 = icmp eq %"class.base::ObserverList"* %194, null
  br i1 %195, label %221, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %194, i64 0, i32 1
  %198 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %194, i64 0, i32 1, i32 0, i32 0, i32 1
  %199 = bitcast %"class.base::internal::LinkNodeBase"** %198 to %"class.base::LinkNode"**
  %200 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %199, align 8
  %201 = bitcast %"class.base::LinkedList"* %197 to %"class.base::LinkNode"**
  %202 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %201, align 8
  %203 = icmp eq %"class.base::LinkNode"* %200, %202
  br i1 %203, label %204, label %217

204:                                              ; preds = %196
  %205 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %194, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %205, align 8
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %194, i64 0, i32 0, i32 0, i32 1
  %208 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %207, align 8
  %209 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %206, %"class.base::internal::CheckedObserverAdapter"* %208) #11
  %210 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %207, align 8
  %211 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %209, %210
  br i1 %211, label %217, label %212

212:                                              ; preds = %204, %212
  %213 = phi %"class.base::internal::CheckedObserverAdapter"* [ %214, %212 ], [ %210, %204 ]
  %214 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %213, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %214) #11
  %215 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %214, %209
  br i1 %215, label %216, label %212

216:                                              ; preds = %212
  store %"class.base::internal::CheckedObserverAdapter"* %209, %"class.base::internal::CheckedObserverAdapter"** %207, align 8
  br label %217

217:                                              ; preds = %216, %204, %196
  %218 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  %219 = icmp eq %"class.base::ObserverList"* %218, null
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %90, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %99) #11
  br label %221

221:                                              ; preds = %193, %217, %220
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %89) #11
  ret void

222:                                              ; preds = %158
  %223 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %223, align 8
  %225 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %224, i64 %161, i32 0, i32 0, i32 0
  %226 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %225) #11
  %227 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %224, i64 %161, i32 0, i32 0, i32 1
  %228 = bitcast i64* %227 to %"class.content::DedicatedWorkerService::Observer"**
  %229 = load %"class.content::DedicatedWorkerService::Observer"*, %"class.content::DedicatedWorkerService::Observer"** %228, align 8
  %230 = select i1 %226, %"class.content::DedicatedWorkerService::Observer"* %229, %"class.content::DedicatedWorkerService::Observer"* null
  %231 = bitcast %"class.content::DedicatedWorkerService::Observer"* %230 to void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i64)***
  %232 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i64)**, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i64)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i64)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i64)** %232, i64 3
  %234 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i64)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, i64)** %233, align 8
  call void %234(%"class.content::DedicatedWorkerService::Observer"* %230, %"class.util::TokenType"* dereferenceable(16) %1, i64 %2) #11
  %235 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  %236 = icmp eq %"class.base::ObserverList"* %235, null
  br i1 %236, label %237, label %238

237:                                              ; preds = %222, %238
  br label %124

238:                                              ; preds = %222
  %239 = load i64, i64* %91, align 8
  %240 = add i64 %239, 1
  store i64 %240, i64* %91, align 8
  call void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %237
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26DedicatedWorkerServiceImpl38NotifyWorkerFinalResponseURLDeterminedERKN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEERK4GURL(%"class.content::DedicatedWorkerServiceImpl"*, %"class.util::TokenType"* dereferenceable(16), %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %42, label %14

14:                                               ; preds = %3
  %15 = sdiv exact i64 %12, 24
  %16 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %16, align 8
  %19 = load i64, i64* %17, align 8
  br label %20

20:                                               ; preds = %38, %14
  %21 = phi %"struct.std::__1::pair"* [ %7, %14 ], [ %40, %38 ]
  %22 = phi i64 [ %15, %14 ], [ %39, %38 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %23
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %25, align 8
  %28 = icmp ult i64 %27, %18
  br i1 %28, label %34, label %29

29:                                               ; preds = %20
  %30 = icmp ult i64 %18, %27
  br i1 %30, label %38, label %31

31:                                               ; preds = %29
  %32 = load i64, i64* %26, align 8
  %33 = icmp ult i64 %32, %19
  br i1 %33, label %34, label %38

34:                                               ; preds = %31, %20
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 1
  %36 = xor i64 %23, -1
  %37 = add i64 %22, %36
  br label %38

38:                                               ; preds = %34, %31, %29
  %39 = phi i64 [ %37, %34 ], [ %23, %31 ], [ %23, %29 ]
  %40 = phi %"struct.std::__1::pair"* [ %35, %34 ], [ %21, %31 ], [ %21, %29 ]
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %20

42:                                               ; preds = %38, %3
  %43 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1
  %44 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %47 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %48 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %43, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 40, i1 false)
  %50 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %48, align 8, !noalias !15
  %51 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %51, align 8, !noalias !15
  %53 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %50, %52
  %54 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %54) #11
  br i1 %53, label %55, label %57

55:                                               ; preds = %42
  %56 = bitcast %"class.base::ObserverList"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #11, !alias.scope !15
  br label %71

57:                                               ; preds = %42
  store %"class.base::ObserverList"* %43, %"class.base::ObserverList"** %45, align 8, !alias.scope !15
  %58 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %54, %"class.base::internal::LinkNodeBase"* %58) #11
  store i64 0, i64* %46, align 8, !alias.scope !15
  %59 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 1, i32 3
  %60 = load i32, i32* %59, align 8, !noalias !15
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.base::internal::CheckedObserverAdapter"** %51 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !15
  %65 = bitcast %"class.base::ObserverList"* %43 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !15
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 4
  br label %69

69:                                               ; preds = %62, %57
  %70 = phi i64 [ %68, %62 ], [ -1, %57 ]
  store i64 %70, i64* %47, align 8, !alias.scope !15
  call void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %71

71:                                               ; preds = %55, %69
  %72 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %76 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %76) #11
  %78 = bitcast %"class.base::ObserverList"** %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #11, !alias.scope !18
  br label %79

79:                                               ; preds = %192, %71
  %80 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  %81 = icmp eq %"class.base::ObserverList"* %80, null
  br i1 %81, label %97, label %82

82:                                               ; preds = %79
  %83 = load i64, i64* %46, align 8
  %84 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %80, i64 0, i32 0, i32 0, i32 1
  %85 = bitcast %"class.base::internal::CheckedObserverAdapter"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.base::ObserverList"* %80 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %86, %88
  %90 = ashr exact i64 %89, 4
  %91 = load i64, i64* %47, align 8
  %92 = icmp ult i64 %90, %91
  %93 = select i1 %92, i64 %90, i64 %91
  %94 = icmp eq i64 %83, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %82
  %96 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  br label %113

97:                                               ; preds = %82, %79
  %98 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %99 = icmp eq %"class.base::ObserverList"* %98, null
  br i1 %99, label %148, label %100

100:                                              ; preds = %97
  %101 = load i64, i64* %74, align 8
  %102 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %98, i64 0, i32 0, i32 0, i32 1
  %103 = bitcast %"class.base::internal::CheckedObserverAdapter"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.base::ObserverList"* %98 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %104, %106
  %108 = ashr exact i64 %107, 4
  %109 = load i64, i64* %75, align 8
  %110 = icmp ult i64 %108, %109
  %111 = select i1 %110, i64 %108, i64 %109
  %112 = icmp eq i64 %101, %111
  br i1 %112, label %122, label %113

113:                                              ; preds = %100, %95
  %114 = phi %"class.base::ObserverList"* [ %96, %95 ], [ %98, %100 ]
  %115 = icmp eq %"class.base::ObserverList"* %80, %114
  %116 = load i64, i64* %46, align 8
  %117 = load i64, i64* %74, align 8
  %118 = icmp eq i64 %116, %117
  %119 = and i1 %115, %118
  br i1 %119, label %120, label %177

120:                                              ; preds = %113
  %121 = icmp eq %"class.base::ObserverList"* %80, null
  br i1 %121, label %148, label %122

122:                                              ; preds = %100, %120
  %123 = phi %"class.base::ObserverList"* [ %80, %120 ], [ %98, %100 ]
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %123, i64 0, i32 1
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %123, i64 0, i32 1, i32 0, i32 0, i32 1
  %126 = bitcast %"class.base::internal::LinkNodeBase"** %125 to %"class.base::LinkNode"**
  %127 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %126, align 8
  %128 = bitcast %"class.base::LinkedList"* %124 to %"class.base::LinkNode"**
  %129 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %128, align 8
  %130 = icmp eq %"class.base::LinkNode"* %127, %129
  br i1 %130, label %131, label %144

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %123, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %132, align 8
  %134 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %123, i64 0, i32 0, i32 0, i32 1
  %135 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %134, align 8
  %136 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %133, %"class.base::internal::CheckedObserverAdapter"* %135) #11
  %137 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %134, align 8
  %138 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %136, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %131, %139
  %140 = phi %"class.base::internal::CheckedObserverAdapter"* [ %141, %139 ], [ %137, %131 ]
  %141 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %140, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %141) #11
  %142 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %141, %136
  br i1 %142, label %143, label %139

143:                                              ; preds = %139
  store %"class.base::internal::CheckedObserverAdapter"* %136, %"class.base::internal::CheckedObserverAdapter"** %134, align 8
  br label %144

144:                                              ; preds = %143, %131, %122
  %145 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %146 = icmp eq %"class.base::ObserverList"* %145, null
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %73, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %76) #11
  br label %148

148:                                              ; preds = %97, %120, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #11
  %149 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  %150 = icmp eq %"class.base::ObserverList"* %149, null
  br i1 %150, label %176, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %149, i64 0, i32 1
  %153 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %149, i64 0, i32 1, i32 0, i32 0, i32 1
  %154 = bitcast %"class.base::internal::LinkNodeBase"** %153 to %"class.base::LinkNode"**
  %155 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %154, align 8
  %156 = bitcast %"class.base::LinkedList"* %152 to %"class.base::LinkNode"**
  %157 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %156, align 8
  %158 = icmp eq %"class.base::LinkNode"* %155, %157
  br i1 %158, label %159, label %172

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %149, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %160, align 8
  %162 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %149, i64 0, i32 0, i32 0, i32 1
  %163 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %162, align 8
  %164 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %161, %"class.base::internal::CheckedObserverAdapter"* %163) #11
  %165 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %162, align 8
  %166 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %164, %165
  br i1 %166, label %172, label %167

167:                                              ; preds = %159, %167
  %168 = phi %"class.base::internal::CheckedObserverAdapter"* [ %169, %167 ], [ %165, %159 ]
  %169 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %168, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %169) #11
  %170 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %169, %164
  br i1 %170, label %171, label %167

171:                                              ; preds = %167
  store %"class.base::internal::CheckedObserverAdapter"* %164, %"class.base::internal::CheckedObserverAdapter"** %162, align 8
  br label %172

172:                                              ; preds = %171, %159, %151
  %173 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  %174 = icmp eq %"class.base::ObserverList"* %173, null
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %45, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %54) #11
  br label %176

176:                                              ; preds = %148, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #11
  ret void

177:                                              ; preds = %113
  %178 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %80, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %178, align 8
  %180 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %179, i64 %116, i32 0, i32 0, i32 0
  %181 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %180) #11
  %182 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %179, i64 %116, i32 0, i32 0, i32 1
  %183 = bitcast i64* %182 to %"class.content::DedicatedWorkerService::Observer"**
  %184 = load %"class.content::DedicatedWorkerService::Observer"*, %"class.content::DedicatedWorkerService::Observer"** %183, align 8
  %185 = select i1 %181, %"class.content::DedicatedWorkerService::Observer"* %184, %"class.content::DedicatedWorkerService::Observer"* null
  %186 = bitcast %"class.content::DedicatedWorkerService::Observer"* %185 to void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)***
  %187 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)**, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)** %187, i64 4
  %189 = load void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)*, void (%"class.content::DedicatedWorkerService::Observer"*, %"class.util::TokenType"*, %class.GURL*)** %188, align 8
  call void %189(%"class.content::DedicatedWorkerService::Observer"* %185, %"class.util::TokenType"* dereferenceable(16) %1, %class.GURL* dereferenceable(120) %2) #11
  %190 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  %191 = icmp eq %"class.base::ObserverList"* %190, null
  br i1 %191, label %192, label %193

192:                                              ; preds = %177, %193
  br label %79

193:                                              ; preds = %177
  %194 = load i64, i64* %46, align 8
  %195 = add i64 %194, 1
  store i64 %195, i64* %46, align 8
  call void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %4) #11
  br label %192
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content26DedicatedWorkerServiceImpl8HasTokenERKN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEE(%"class.content::DedicatedWorkerServiceImpl"* nocapture readonly, %"class.util::TokenType"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %42, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 24
  %14 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %14, align 8
  %17 = load i64, i64* %15, align 8
  br label %18

18:                                               ; preds = %36, %12
  %19 = phi %"struct.std::__1::pair"* [ %4, %12 ], [ %38, %36 ]
  %20 = phi i64 [ %13, %12 ], [ %37, %36 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %21
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %21, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = icmp ult i64 %25, %16
  br i1 %26, label %32, label %27

27:                                               ; preds = %18
  %28 = icmp ult i64 %16, %25
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = load i64, i64* %24, align 8
  %31 = icmp ult i64 %30, %17
  br i1 %31, label %32, label %36

32:                                               ; preds = %29, %18
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1
  %34 = xor i64 %21, -1
  %35 = add i64 %20, %34
  br label %36

36:                                               ; preds = %32, %29, %27
  %37 = phi i64 [ %35, %32 ], [ %21, %29 ], [ %21, %27 ]
  %38 = phi %"struct.std::__1::pair"* [ %33, %32 ], [ %19, %29 ], [ %19, %27 ]
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %18

40:                                               ; preds = %36
  %41 = ptrtoint %"struct.std::__1::pair"* %38 to i64
  br label %42

42:                                               ; preds = %40, %2
  %43 = phi i64 [ %41, %40 ], [ %8, %2 ]
  %44 = phi %"struct.std::__1::pair"* [ %38, %40 ], [ %4, %2 ]
  %45 = icmp eq %"struct.std::__1::pair"* %44, %11
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %47, align 8
  %52 = load i64, i64* %49, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %63, label %54

54:                                               ; preds = %46
  %55 = icmp ult i64 %52, %51
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = load i64, i64* %48, align 8
  %58 = load i64, i64* %50, align 8
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %56, %54
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 1
  %62 = ptrtoint %"struct.std::__1::pair"* %61 to i64
  br label %63

63:                                               ; preds = %42, %46, %56, %60
  %64 = phi i64 [ %62, %60 ], [ %43, %42 ], [ %43, %56 ], [ %43, %46 ]
  %65 = ptrtoint %"struct.std::__1::pair"* %44 to i64
  %66 = icmp ne i64 %64, %65
  ret i1 %66
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.content::DedicatedWorkerHost"* @_ZNK7content26DedicatedWorkerServiceImpl31GetDedicatedWorkerHostFromTokenERKN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEE(%"class.content::DedicatedWorkerServiceImpl"* nocapture readonly, %"class.util::TokenType"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.content::DedicatedWorkerServiceImpl", %"class.content::DedicatedWorkerServiceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %42, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 24
  %14 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %14, align 8
  %17 = load i64, i64* %15, align 8
  br label %18

18:                                               ; preds = %36, %12
  %19 = phi %"struct.std::__1::pair"* [ %4, %12 ], [ %38, %36 ]
  %20 = phi i64 [ %13, %12 ], [ %37, %36 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %21
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %21, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = icmp ult i64 %25, %16
  br i1 %26, label %32, label %27

27:                                               ; preds = %18
  %28 = icmp ult i64 %16, %25
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = load i64, i64* %24, align 8
  %31 = icmp ult i64 %30, %17
  br i1 %31, label %32, label %36

32:                                               ; preds = %29, %18
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1
  %34 = xor i64 %21, -1
  %35 = add i64 %20, %34
  br label %36

36:                                               ; preds = %32, %29, %27
  %37 = phi i64 [ %35, %32 ], [ %21, %29 ], [ %21, %27 ]
  %38 = phi %"struct.std::__1::pair"* [ %33, %32 ], [ %19, %29 ], [ %19, %27 ]
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %18

40:                                               ; preds = %36
  %41 = ptrtoint %"struct.std::__1::pair"* %38 to i64
  br label %42

42:                                               ; preds = %40, %2
  %43 = phi i64 [ %41, %40 ], [ %8, %2 ]
  %44 = phi %"struct.std::__1::pair"* [ %38, %40 ], [ %4, %2 ]
  %45 = icmp eq %"struct.std::__1::pair"* %44, %11
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %47, align 8
  %52 = load i64, i64* %49, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %63, label %54

54:                                               ; preds = %46
  %55 = icmp ult i64 %52, %51
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = load i64, i64* %48, align 8
  %58 = load i64, i64* %50, align 8
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %56, %54
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 1
  %62 = ptrtoint %"struct.std::__1::pair"* %61 to i64
  br label %63

63:                                               ; preds = %42, %46, %56, %60
  %64 = phi i64 [ %62, %60 ], [ %43, %42 ], [ %43, %56 ], [ %43, %46 ]
  %65 = inttoptr i64 %64 to %"struct.std::__1::pair"*
  %66 = icmp eq %"struct.std::__1::pair"* %44, %65
  %67 = select i1 %66, %"struct.std::__1::pair"* %11, %"struct.std::__1::pair"* %44
  %68 = icmp eq %"struct.std::__1::pair"* %67, %11
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 0, i32 1
  %71 = load %"class.content::DedicatedWorkerHost"*, %"class.content::DedicatedWorkerHost"** %70, align 8
  br label %72

72:                                               ; preds = %63, %69
  %73 = phi %"class.content::DedicatedWorkerHost"* [ %71, %69 ], [ null, %63 ]
  ret %"class.content::DedicatedWorkerHost"* %73
}

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #6

declare void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*) unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::CheckedObserverAdapter"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::internal::CheckedObserverAdapter"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.base::internal::CheckedObserverAdapter"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::internal::CheckedObserverAdapter"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %35
  %39 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %38 to i64
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %37, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %1) #11
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %37, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %42, align 8
  %44 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  %45 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::internal::CheckedObserverAdapter"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::internal::CheckedObserverAdapter"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %50, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %51, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %52) #11
  %53 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::internal::CheckedObserverAdapter"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::internal::CheckedObserverAdapter"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::internal::CheckedObserverAdapter"*
  %63 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::internal::CheckedObserverAdapter"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %65, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %66) #11
  %67 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #6

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEEPN7content19DedicatedWorkerHostEEENS_9allocatorISA_EEE7emplaceIJSA_EEENS_11__wrap_iterIPSA_EENSF_IPKSA_EEDpOT_(%"class.std::__1::vector.7"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__split_buffer.367", align 8
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  br i1 %11, label %14, label %75

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair"* %8, %1
  br i1 %15, label %16, label %27

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #11
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %21 = bitcast %"class.content::DedicatedWorkerHost"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.content::DedicatedWorkerHost"** %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %25 = ptrtoint %"struct.std::__1::pair"* %24 to i64
  %26 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %25, i64* %26, align 8
  br label %198

27:                                               ; preds = %14
  %28 = bitcast %"struct.std::__1::pair"* %2 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %31 = bitcast %"class.content::DedicatedWorkerHost"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %34 = ptrtoint %"struct.std::__1::pair"* %33 to i64
  %35 = sub i64 %12, %34
  %36 = sdiv exact i64 %35, 24
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %36
  %38 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %39 = icmp ult %"struct.std::__1::pair"* %37, %8
  br i1 %39, label %58, label %42

40:                                               ; preds = %58
  %41 = ptrtoint %"struct.std::__1::pair"* %69 to i64
  br label %42

42:                                               ; preds = %40, %27
  %43 = phi i64 [ %41, %40 ], [ %12, %27 ]
  store i64 %43, i64* %38, align 8
  %44 = icmp eq i64 %35, 0
  br i1 %44, label %71, label %45

45:                                               ; preds = %42, %45
  %46 = phi %"struct.std::__1::pair"* [ %49, %45 ], [ %8, %42 ]
  %47 = phi %"struct.std::__1::pair"* [ %48, %45 ], [ %37, %42 ]
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 -1
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 -1
  %50 = bitcast %"struct.std::__1::pair"* %49 to i8*
  %51 = bitcast %"struct.std::__1::pair"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #11
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 -1, i32 1
  %53 = bitcast %"class.content::DedicatedWorkerHost"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 -1, i32 1
  %56 = bitcast %"class.content::DedicatedWorkerHost"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = icmp eq %"struct.std::__1::pair"* %48, %1
  br i1 %57, label %71, label %45

58:                                               ; preds = %27, %58
  %59 = phi %"struct.std::__1::pair"* [ %69, %58 ], [ %8, %27 ]
  %60 = phi %"struct.std::__1::pair"* [ %68, %58 ], [ %37, %27 ]
  %61 = bitcast %"struct.std::__1::pair"* %59 to i8*
  %62 = bitcast %"struct.std::__1::pair"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 16, i1 false) #11
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 0, i32 1
  %65 = bitcast %"class.content::DedicatedWorkerHost"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.content::DedicatedWorkerHost"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 1
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 1
  %70 = icmp ult %"struct.std::__1::pair"* %68, %8
  br i1 %70, label %58, label %40

71:                                               ; preds = %45, %42
  %72 = bitcast %"struct.std::__1::pair"* %1 to <16 x i8>*
  store <16 x i8> %29, <16 x i8>* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %74 = bitcast %"class.content::DedicatedWorkerHost"** %73 to i64*
  store i64 %32, i64* %74, align 8
  br label %198

75:                                               ; preds = %3
  %76 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2
  %77 = bitcast %"struct.std::__1::__split_buffer.367"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #11
  %78 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %4, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %4, i64 0, i32 1
  %80 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %4, i64 0, i32 2
  %81 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %4, i64 0, i32 3, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %4, i64 0, i32 3, i32 1, i32 0
  %83 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %84 = bitcast %"class.std::__1::vector.7"* %0 to i64*
  %85 = bitcast %"struct.std::__1::__split_buffer.367"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 40, i1 false)
  %86 = load i64, i64* %84, align 8
  %87 = sub i64 %12, %86
  %88 = sdiv exact i64 %87, 24
  %89 = add nsw i64 %88, 1
  %90 = icmp ugt i64 %89, 768614336404564650
  br i1 %90, label %91, label %93

91:                                               ; preds = %75
  %92 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %92) #13
  unreachable

93:                                               ; preds = %75
  %94 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %95 = sub i64 %13, %86
  %96 = sdiv exact i64 %95, 24
  %97 = icmp ult i64 %96, 384307168202282325
  br i1 %97, label %102, label %98

98:                                               ; preds = %93
  %99 = sub i64 %5, %86
  %100 = sdiv exact i64 %99, 24
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %81, align 8
  %101 = bitcast %"class.std::__1::allocator.339"** %82 to %"class.std::__1::__compressed_pair.336"**
  store %"class.std::__1::__compressed_pair.336"* %76, %"class.std::__1::__compressed_pair.336"** %101, align 8
  br label %110

102:                                              ; preds = %93
  %103 = shl nsw i64 %96, 1
  %104 = icmp ult i64 %103, %89
  %105 = select i1 %104, i64 %89, i64 %103
  %106 = sub i64 %5, %86
  %107 = sdiv exact i64 %106, 24
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %81, align 8
  %108 = bitcast %"class.std::__1::allocator.339"** %82 to %"class.std::__1::__compressed_pair.336"**
  store %"class.std::__1::__compressed_pair.336"* %76, %"class.std::__1::__compressed_pair.336"** %108, align 8
  %109 = icmp eq i64 %105, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %102, %98
  %111 = phi i64 [ %100, %98 ], [ %107, %102 ]
  %112 = phi i64 [ 768614336404564650, %98 ], [ %105, %102 ]
  %113 = mul i64 %112, 24
  %114 = tail call i8* @_Znwm(i64 %113) #12
  %115 = bitcast i8* %114 to %"struct.std::__1::pair"*
  br label %116

116:                                              ; preds = %102, %110
  %117 = phi i64 [ %111, %110 ], [ %107, %102 ]
  %118 = phi i64 [ %112, %110 ], [ 0, %102 ]
  %119 = phi %"struct.std::__1::pair"* [ %115, %110 ], [ null, %102 ]
  store %"struct.std::__1::pair"* %119, %"struct.std::__1::pair"** %78, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %119, i64 %117
  store %"struct.std::__1::pair"* %120, %"struct.std::__1::pair"** %80, align 8
  store %"struct.std::__1::pair"* %120, %"struct.std::__1::pair"** %79, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %119, i64 %118
  store %"struct.std::__1::pair"* %121, %"struct.std::__1::pair"** %81, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEEPN7content19DedicatedWorkerHostEEERNS_9allocatorISA_EEE12emplace_backIJSA_EEEvDpOT_(%"struct.std::__1::__split_buffer.367"* nonnull %4, %"struct.std::__1::pair"* dereferenceable(24) %2)
  %122 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %79, align 8
  %123 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %124 = icmp eq %"struct.std::__1::pair"* %123, %1
  br i1 %124, label %140, label %125

125:                                              ; preds = %116, %125
  %126 = phi %"struct.std::__1::pair"* [ %138, %125 ], [ %122, %116 ]
  %127 = phi %"struct.std::__1::pair"* [ %129, %125 ], [ %1, %116 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 -1
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 -1
  %130 = bitcast %"struct.std::__1::pair"* %128 to i8*
  %131 = bitcast %"struct.std::__1::pair"* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 16, i1 false) #11
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 -1, i32 1
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 -1, i32 1
  %134 = bitcast %"class.content::DedicatedWorkerHost"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.content::DedicatedWorkerHost"** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %79, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %137, i64 -1
  store %"struct.std::__1::pair"* %138, %"struct.std::__1::pair"** %79, align 8
  %139 = icmp eq %"struct.std::__1::pair"* %129, %123
  br i1 %139, label %140, label %125

140:                                              ; preds = %125, %116
  %141 = phi %"struct.std::__1::pair"* [ %122, %116 ], [ %138, %125 ]
  %142 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %143 = icmp eq %"struct.std::__1::pair"* %142, %1
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = ptrtoint %"struct.std::__1::pair"* %142 to i64
  %146 = ptrtoint %"struct.std::__1::pair"* %141 to i64
  %147 = bitcast %"struct.std::__1::pair"** %79 to i64*
  %148 = bitcast %"struct.std::__1::pair"** %80 to i64*
  %149 = load i64, i64* %148, align 8
  br label %172

150:                                              ; preds = %140
  %151 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %80, align 8
  br label %152

152:                                              ; preds = %152, %150
  %153 = phi %"struct.std::__1::pair"* [ %164, %152 ], [ %151, %150 ]
  %154 = phi %"struct.std::__1::pair"* [ %162, %152 ], [ %1, %150 ]
  %155 = bitcast %"struct.std::__1::pair"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #11
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 0, i32 1
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %154, i64 0, i32 1
  %159 = bitcast %"class.content::DedicatedWorkerHost"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.content::DedicatedWorkerHost"** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %154, i64 1
  %163 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %80, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %163, i64 1
  store %"struct.std::__1::pair"* %164, %"struct.std::__1::pair"** %80, align 8
  %165 = icmp eq %"struct.std::__1::pair"* %162, %142
  br i1 %165, label %166, label %152

166:                                              ; preds = %152
  %167 = ptrtoint %"struct.std::__1::pair"* %164 to i64
  %168 = bitcast %"struct.std::__1::pair"** %79 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = load i64, i64* %83, align 8
  %171 = bitcast %"struct.std::__1::pair"** %80 to i64*
  br label %172

172:                                              ; preds = %144, %166
  %173 = phi i64* [ %148, %144 ], [ %171, %166 ]
  %174 = phi i64 [ %149, %144 ], [ %167, %166 ]
  %175 = phi i64 [ %145, %144 ], [ %170, %166 ]
  %176 = phi i64* [ %147, %144 ], [ %168, %166 ]
  %177 = phi i64 [ %146, %144 ], [ %169, %166 ]
  %178 = load i64, i64* %84, align 8
  store i64 %177, i64* %84, align 8
  store i64 %178, i64* %176, align 8
  store i64 %174, i64* %83, align 8
  store i64 %175, i64* %173, align 8
  %179 = load i64, i64* %94, align 8
  %180 = bitcast %"struct.std::__1::pair"** %81 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %94, align 8
  store i64 %179, i64* %180, align 8
  %182 = bitcast %"struct.std::__1::__split_buffer.367"* %4 to i64*
  store i64 %178, i64* %182, align 8
  %183 = inttoptr i64 %178 to %"struct.std::__1::pair"*
  %184 = inttoptr i64 %175 to %"struct.std::__1::pair"*
  %185 = icmp eq %"struct.std::__1::pair"* %184, %183
  br i1 %185, label %193, label %186

186:                                              ; preds = %172
  %187 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = ptrtoint i64* %187 to i64
  %189 = sub i64 %188, %178
  %190 = udiv i64 %189, 24
  %191 = xor i64 %190, -1
  %192 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 %191
  store %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"** %80, align 8
  br label %193

193:                                              ; preds = %186, %172
  %194 = icmp eq i64 %178, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %193
  %196 = inttoptr i64 %178 to i8*
  call void @_ZdlPv(i8* %196) #12
  br label %197

197:                                              ; preds = %193, %195
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #11
  br label %198

198:                                              ; preds = %16, %71, %197
  %199 = phi %"struct.std::__1::pair"* [ %1, %16 ], [ %1, %71 ], [ %122, %197 ]
  ret %"struct.std::__1::pair"* %199
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN4util9TokenTypeIN5blink30DedicatedWorkerTokenTypeMarkerEEEPN7content19DedicatedWorkerHostEEERNS_9allocatorISA_EEE12emplace_backIJSA_EEEvDpOT_(%"struct.std::__1::__split_buffer.367"*, %"struct.std::__1::pair"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  br i1 %7, label %9, label %97

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %0, i64 0, i32 1
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.367", %"struct.std::__1::__split_buffer.367"* %0, i64 0, i32 0
  %13 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %14 = icmp ugt %"struct.std::__1::pair"* %11, %13
  %15 = ptrtoint %"struct.std::__1::pair"* %13 to i64
  br i1 %14, label %16, label %43

16:                                               ; preds = %9
  %17 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = sdiv exact i64 %18, 24
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %21
  %23 = icmp eq %"struct.std::__1::pair"* %11, %4
  br i1 %23, label %39, label %24

24:                                               ; preds = %16, %24
  %25 = phi %"struct.std::__1::pair"* [ %35, %24 ], [ %22, %16 ]
  %26 = phi %"struct.std::__1::pair"* [ %34, %24 ], [ %11, %16 ]
  %27 = bitcast %"struct.std::__1::pair"* %25 to i8*
  %28 = bitcast %"struct.std::__1::pair"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false) #11
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  %30 = bitcast %"class.content::DedicatedWorkerHost"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %33 = bitcast %"class.content::DedicatedWorkerHost"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %36 = icmp eq %"struct.std::__1::pair"* %34, %4
  br i1 %36, label %37, label %24

37:                                               ; preds = %24
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  br label %39

39:                                               ; preds = %37, %16
  %40 = phi %"struct.std::__1::pair"* [ %4, %16 ], [ %38, %37 ]
  %41 = phi %"struct.std::__1::pair"* [ %22, %16 ], [ %35, %37 ]
  store %"struct.std::__1::pair"* %41, %"struct.std::__1::pair"** %3, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 %21
  store %"struct.std::__1::pair"* %42, %"struct.std::__1::pair"** %10, align 8
  br label %97

43:                                               ; preds = %9
  %44 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %45 = bitcast %"struct.std::__1::__split_buffer.367"* %0 to i64*
  %46 = sub i64 %8, %15
  %47 = sdiv exact i64 %46, 24
  %48 = shl nsw i64 %47, 1
  %49 = icmp eq i64 %46, 0
  %50 = select i1 %49, i64 1, i64 %48
  %51 = icmp ugt i64 %50, 768614336404564650
  br i1 %51, label %52, label %53

52:                                               ; preds = %43
  tail call void @abort() #13
  unreachable

53:                                               ; preds = %43
  %54 = lshr i64 %50, 2
  %55 = mul i64 %50, 24
  %56 = tail call i8* @_Znwm(i64 %55) #12
  %57 = bitcast i8* %56 to %"struct.std::__1::pair"*
  %58 = ptrtoint i8* %56 to i64
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 %54
  %60 = ptrtoint %"struct.std::__1::pair"* %59 to i64
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 %50
  %62 = ptrtoint %"struct.std::__1::pair"* %61 to i64
  %63 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  %64 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %65 = sub i64 %64, %63
  %66 = sdiv exact i64 %65, 24
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 %66
  %68 = icmp eq i64 %65, 0
  br i1 %68, label %87, label %69

69:                                               ; preds = %53, %69
  %70 = phi %"struct.std::__1::pair"* [ %80, %69 ], [ %59, %53 ]
  %71 = phi i64 [ %81, %69 ], [ %60, %53 ]
  %72 = phi %"struct.std::__1::pair"* [ %82, %69 ], [ %11, %53 ]
  %73 = inttoptr i64 %71 to i8*
  %74 = bitcast %"struct.std::__1::pair"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #11
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 1
  %77 = bitcast %"class.content::DedicatedWorkerHost"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.content::DedicatedWorkerHost"** %75 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 1
  %81 = ptrtoint %"struct.std::__1::pair"* %80 to i64
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 1
  %83 = icmp eq %"struct.std::__1::pair"* %67, %80
  br i1 %83, label %84, label %69

84:                                               ; preds = %69
  %85 = ptrtoint %"struct.std::__1::pair"* %67 to i64
  %86 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  br label %87

87:                                               ; preds = %53, %84
  %88 = phi %"struct.std::__1::pair"* [ %86, %84 ], [ %13, %53 ]
  %89 = phi i64 [ %85, %84 ], [ %60, %53 ]
  store i64 %58, i64* %45, align 8
  %90 = bitcast %"struct.std::__1::pair"** %10 to i64*
  store i64 %60, i64* %90, align 8
  %91 = bitcast %"struct.std::__1::pair"** %3 to i64*
  store i64 %89, i64* %91, align 8
  store i64 %62, i64* %44, align 8
  %92 = icmp eq %"struct.std::__1::pair"* %88, null
  %93 = inttoptr i64 %89 to %"struct.std::__1::pair"*
  br i1 %92, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"struct.std::__1::pair"* %88 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  br label %97

97:                                               ; preds = %94, %87, %39, %2
  %98 = phi %"struct.std::__1::pair"* [ %96, %94 ], [ %93, %87 ], [ %41, %39 ], [ %4, %2 ]
  %99 = bitcast %"struct.std::__1::pair"* %98 to i8*
  %100 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #11
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 0, i32 1
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %103 = bitcast %"class.content::DedicatedWorkerHost"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.content::DedicatedWorkerHost"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 1
  store %"struct.std::__1::pair"* %107, %"struct.std::__1::pair"** %3, align 8
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::CheckedObserverAdapter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ObserverList"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = load i64, i64* %3, align 8
  %14 = icmp ult i64 %12, %13
  %15 = select i1 %14, i64 %12, i64 %13
  %16 = getelementptr inbounds %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<content::DedicatedWorkerService::Observer, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %21

21:                                               ; preds = %47, %19
  %22 = phi %"class.base::ObserverList"* [ %5, %19 ], [ %48, %47 ]
  %23 = phi i64 [ %17, %19 ], [ %45, %47 ]
  %24 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %31) #11
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #11
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %35

35:                                               ; preds = %21, %30, %33
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #11
  %38 = bitcast i64* %27 to %"class.base::CheckedObserver"**
  %39 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %38, align 8
  %40 = icmp eq %"class.base::CheckedObserver"* %39, null
  %41 = xor i1 %37, true
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  %46 = icmp ult i64 %45, %15
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  br label %21

49:                                               ; preds = %35, %43, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %0, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %6 ], [ %27, %26 ]
  %10 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #11
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  br label %18

18:                                               ; preds = %16, %13, %8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #11
  %21 = bitcast i64* %10 to %"class.base::CheckedObserver"**
  %22 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %21, align 8
  %23 = icmp eq %"class.base::CheckedObserver"* %22, null
  %24 = xor i1 %20, true
  %25 = or i1 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 1
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %1
  br i1 %28, label %29, label %8

29:                                               ; preds = %26
  %30 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %1 to i64
  br label %69

31:                                               ; preds = %18, %2
  %32 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %2 ], [ %9, %18 ]
  %33 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %32 to i64
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %1
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %32, i64 1
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %36, %1
  br i1 %37, label %69, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %40

40:                                               ; preds = %38, %65
  %41 = phi %"class.base::internal::CheckedObserverAdapter"* [ %36, %38 ], [ %67, %65 ]
  %42 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %38 ], [ %41, %65 ]
  %43 = phi i64 [ %33, %38 ], [ %66, %65 ]
  %44 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %42, i64 1, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %48) #11
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #11
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  br label %52

52:                                               ; preds = %40, %47, %50
  %53 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %54 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %53) #11
  %55 = bitcast i64* %44 to %"class.base::CheckedObserver"**
  %56 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %55, align 8
  %57 = icmp eq %"class.base::CheckedObserver"* %56, null
  %58 = xor i1 %54, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %43 to %"class.base::internal::CheckedObserverAdapter"*
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %61, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %41) #11
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %63 to i64
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %43, %52 ], [ %64, %60 ]
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %1
  br i1 %68, label %69, label %40

69:                                               ; preds = %65, %35, %31, %29
  %70 = phi i64 [ %33, %31 ], [ %30, %29 ], [ %33, %35 ], [ %66, %65 ]
  %71 = inttoptr i64 %70 to %"class.base::internal::CheckedObserverAdapter"*
  ret %"class.base::internal::CheckedObserverAdapter"* %71
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4base12ObserverListIN7content22DedicatedWorkerService8ObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
