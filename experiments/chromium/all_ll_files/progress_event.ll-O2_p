; ModuleID = '../../components/nacl/renderer/progress_event.cc'
source_filename = "../../components/nacl/renderer/progress_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.nacl::ProgressEvent" = type { i32, %"class.std::__1::basic_string", i8, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.3", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WebString" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.content::PepperPluginInstance" = type { i32 (...)** }
%"class.blink::WebPluginContainer" = type { i32 (...)** }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFviRKN4nacl13ProgressEventEEJiS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFviRKN4nacl13ProgressEventEEJiS3_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [22 x i8] c"DispatchProgressEvent\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"../../components/nacl/renderer/progress_event.cc\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"loadstart\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"progress\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"loadend\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"crash\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@switch.table._ZN4nacl12_GLOBAL__N_133DispatchProgressEventOnMainThreadEiRKNS_13ProgressEventE = private unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4nacl21DispatchProgressEventEiRKNS_13ProgressEventE(i32, %"struct.nacl::ProgressEvent"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #8
  %6 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5ppapi12PpapiGlobals24GetMainThreadMessageLoopEv(%"class.ppapi::PpapiGlobals"* %5) #8
  %7 = bitcast %"class.base::SingleThreadTaskRunner"* %6 to %"class.base::TaskRunner"*
  %8 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 65) #8
  %9 = call i8* @_Znwm(i64 104) #9, !noalias !2
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFviRKN4nacl13ProgressEventEEJiS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFviRKN4nacl13ProgressEventEEJiS3_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !2
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to i64*
  store i64 ptrtoint (void (i32, %"struct.nacl::ProgressEvent"*)* @_ZN4nacl12_GLOBAL__N_133DispatchProgressEventOnMainThreadEiRKNS_13ProgressEventE to i64), i64* %12, align 8, !noalias !2
  %13 = getelementptr inbounds i8, i8* %9, i64 40
  %14 = bitcast i8* %13 to i32*
  store i32 %0, i32* %14, align 4, !noalias !2
  %15 = getelementptr inbounds i8, i8* %9, i64 48
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 8, !noalias !2
  store i32 %18, i32* %16, align 8, !noalias !2
  %19 = getelementptr inbounds i8, i8* %9, i64 56
  %20 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1, !noalias !2
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %26, i64 24, i1 false) #8, !noalias !2
  br label %33

27:                                               ; preds = %2
  %28 = bitcast i8* %19 to %"class.std::__1::basic_string"*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8, !noalias !2
  %31 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %30, i64 %32) #8, !noalias !2
  br label %33

33:                                               ; preds = %25, %27
  %34 = getelementptr inbounds i8, i8* %9, i64 80
  %35 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #8, !noalias !2
  %36 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %9, i8** %36, align 8, !alias.scope !2
  %37 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %7, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #8
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret void
}

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN5ppapi12PpapiGlobals24GetMainThreadMessageLoopEv(%"class.ppapi::PpapiGlobals"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4nacl12_GLOBAL__N_133DispatchProgressEventOnMainThreadEiRKNS_13ProgressEventE(i32, %"struct.nacl::ProgressEvent"* dereferenceable(56)) #0 {
  %3 = alloca %"class.blink::WebString", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = tail call %"class.content::PepperPluginInstance"* @_ZN7content20PepperPluginInstance3GetEi(i32 %0) #8
  %7 = icmp eq %"class.content::PepperPluginInstance"* %6, null
  br i1 %7, label %94, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.content::PepperPluginInstance"* %6 to %"class.blink::WebPluginContainer"* (%"class.content::PepperPluginInstance"*)***
  %10 = load %"class.blink::WebPluginContainer"* (%"class.content::PepperPluginInstance"*)**, %"class.blink::WebPluginContainer"* (%"class.content::PepperPluginInstance"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::WebPluginContainer"* (%"class.content::PepperPluginInstance"*)*, %"class.blink::WebPluginContainer"* (%"class.content::PepperPluginInstance"*)** %10, i64 3
  %12 = load %"class.blink::WebPluginContainer"* (%"class.content::PepperPluginInstance"*)*, %"class.blink::WebPluginContainer"* (%"class.content::PepperPluginInstance"*)** %11, align 8
  %13 = tail call %"class.blink::WebPluginContainer"* %12(%"class.content::PepperPluginInstance"* nonnull %6) #8
  %14 = icmp eq %"class.blink::WebPluginContainer"* %13, null
  br i1 %14, label %94, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::WebString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, 7
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds [7 x i8*], [7 x i8*]* @switch.table._ZN4nacl12_GLOBAL__N_133DispatchProgressEventOnMainThreadEiRKNS_13ProgressEventE, i64 0, i64 %22
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i8* [ %24, %21 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %15 ]
  %27 = tail call i64 @strlen(i8* nonnull %26) #8
  %28 = icmp ugt i64 %27, -17
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %30) #10
  unreachable

31:                                               ; preds = %25
  %32 = icmp ult i64 %27, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %31
  %34 = add nuw i64 %27, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #9
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

42:                                               ; preds = %31
  %43 = trunc i64 %27 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  %46 = icmp eq i64 %27, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42, %33
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %41, %33 ]
  %49 = phi i8* [ %17, %42 ], [ %36, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %26, i64 %27, i1 false) #8
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %48, %47 ]
  %52 = phi i8* [ %17, %42 ], [ %49, %47 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %27
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1, !noalias !7
  %56 = icmp slt i8 %55, 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8, !noalias !7
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8, !noalias !7
  %61 = zext i8 %55 to i64
  %62 = select i1 %56, i8* %58, i8* %17
  %63 = select i1 %56, i64 %60, i64 %61
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %3, i8* %62, i64 %63) #8
  %64 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 2
  %65 = load i8, i8* %64, align 8, !range !10
  %66 = icmp ne i8 %65, 0
  %67 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 4
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #8
  %72 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 1
  %73 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1, !noalias !11
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8, !noalias !11
  %79 = getelementptr inbounds %"struct.nacl::ProgressEvent", %"struct.nacl::ProgressEvent"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !11
  %81 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %82 = zext i8 %75 to i64
  %83 = select i1 %76, i8* %78, i8* %81
  %84 = select i1 %76, i64 %80, i64 %82
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %5, i8* %83, i64 %84) #8
  %85 = bitcast %"class.blink::WebPluginContainer"* %13 to void (%"class.blink::WebPluginContainer"*, %"class.blink::WebString"*, i1, i64, i64, %"class.blink::WebString"*)***
  %86 = load void (%"class.blink::WebPluginContainer"*, %"class.blink::WebString"*, i1, i64, i64, %"class.blink::WebString"*)**, void (%"class.blink::WebPluginContainer"*, %"class.blink::WebString"*, i1, i64, i64, %"class.blink::WebString"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::WebPluginContainer"*, %"class.blink::WebString"*, i1, i64, i64, %"class.blink::WebString"*)*, void (%"class.blink::WebPluginContainer"*, %"class.blink::WebString"*, i1, i64, i64, %"class.blink::WebString"*)** %86, i64 2
  %88 = load void (%"class.blink::WebPluginContainer"*, %"class.blink::WebString"*, i1, i64, i64, %"class.blink::WebString"*)*, void (%"class.blink::WebPluginContainer"*, %"class.blink::WebString"*, i1, i64, i64, %"class.blink::WebString"*)** %87, align 8
  call void %88(%"class.blink::WebPluginContainer"* nonnull %13, %"class.blink::WebString"* nonnull dereferenceable(8) %3, i1 zeroext %66, i64 %68, i64 %70, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %3) #8
  %89 = load i8, i8* %54, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %50
  %92 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %50, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %94

94:                                               ; preds = %93, %8, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.content::PepperPluginInstance"* @_ZN7content20PepperPluginInstance3GetEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFviRKN4nacl13ProgressEventEEJiS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (i32, %"struct.nacl::ProgressEvent"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i32*
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"struct.nacl::ProgressEvent"*
  %8 = load void (i32, %"struct.nacl::ProgressEvent"*)*, void (i32, %"struct.nacl::ProgressEvent"*)** %3, align 8
  %9 = load i32, i32* %5, align 4
  tail call void %8(i32 %9, %"struct.nacl::ProgressEvent"* dereferenceable(56) %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFviRKN4nacl13ProgressEventEEJiS3_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #9
  br label %12

12:                                               ; preds = %3, %9
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %12, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFviRKN4nacl13ProgressEventEEJRiS6_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFviRKN4nacl13ProgressEventEEJRiS6_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFviRKN4nacl13ProgressEventEEJRiS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFviRKN4nacl13ProgressEventEEJRiS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
