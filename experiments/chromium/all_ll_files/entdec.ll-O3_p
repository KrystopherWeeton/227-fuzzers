; ModuleID = '../../third_party/opus/src/celt/entdec.c'
source_filename = "../../third_party/opus/src/celt/entdec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [24 x i8] c"assertion failed: _ft>1\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"../../third_party/opus/src/celt/entdec.c\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ec_dec_init(%struct.ec_ctx*, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %8 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 9>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  store i32 128, i32* %10, align 8
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  store i32 1, i32* %9, align 4
  %13 = load i8, i8* %1, align 1
  %14 = zext i8 %13 to i32
  br label %15

15:                                               ; preds = %3, %12
  %16 = phi i32 [ 1, %12 ], [ 0, %3 ]
  %17 = phi i32 [ %14, %12 ], [ 0, %3 ]
  %18 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  store i32 %17, i32* %18, align 4
  %19 = lshr i32 %17, 1
  %20 = xor i32 %19, 127
  %21 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  store i32 0, i32* %22, align 8
  store i32 17, i32* %7, align 8
  store i32 32768, i32* %10, align 8
  %23 = icmp ult i32 %16, %2
  br i1 %23, label %24, label %30

24:                                               ; preds = %15
  %25 = add nuw nsw i32 %16, 1
  store i32 %25, i32* %9, align 4
  %26 = zext i32 %16 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %24, %15
  %31 = phi i32 [ %25, %24 ], [ %16, %15 ]
  %32 = phi i32 [ %29, %24 ], [ 0, %15 ]
  store i32 %32, i32* %18, align 4
  %33 = shl nuw nsw i32 %17, 8
  %34 = or i32 %32, %33
  %35 = lshr i32 %34, 1
  %36 = shl nuw nsw i32 %20, 8
  %37 = and i32 %35, 255
  %38 = or i32 %36, %37
  %39 = xor i32 %38, 255
  store i32 %39, i32* %21, align 4
  store i32 25, i32* %7, align 8
  store i32 8388608, i32* %10, align 8
  %40 = icmp ult i32 %31, %2
  br i1 %40, label %41, label %47

41:                                               ; preds = %30
  %42 = add nuw nsw i32 %31, 1
  store i32 %42, i32* %9, align 4
  %43 = zext i32 %31 to i64
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  br label %47

47:                                               ; preds = %41, %30
  %48 = phi i32 [ %42, %41 ], [ %31, %30 ]
  %49 = phi i32 [ %46, %41 ], [ 0, %30 ]
  store i32 %49, i32* %18, align 4
  %50 = shl nuw nsw i32 %32, 8
  %51 = or i32 %49, %50
  %52 = lshr i32 %51, 1
  %53 = shl i32 %39, 8
  %54 = and i32 %52, 255
  %55 = and i32 %53, 2147483392
  %56 = or i32 %55, %54
  %57 = xor i32 %56, 255
  store i32 %57, i32* %21, align 4
  store i32 33, i32* %7, align 8
  store i32 -2147483648, i32* %10, align 8
  %58 = icmp ult i32 %48, %2
  br i1 %58, label %59, label %65

59:                                               ; preds = %47
  %60 = add nuw nsw i32 %48, 1
  store i32 %60, i32* %9, align 4
  %61 = zext i32 %48 to i64
  %62 = getelementptr inbounds i8, i8* %1, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  br label %65

65:                                               ; preds = %59, %47
  %66 = phi i32 [ %64, %59 ], [ 0, %47 ]
  store i32 %66, i32* %18, align 4
  %67 = shl nuw nsw i32 %49, 8
  %68 = or i32 %66, %67
  %69 = lshr i32 %68, 1
  %70 = shl i32 %57, 8
  %71 = and i32 %69, 255
  %72 = and i32 %70, 2147483392
  %73 = or i32 %72, %71
  %74 = xor i32 %73, 255
  store i32 %74, i32* %21, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @ec_decode(%struct.ec_ctx* nocapture, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = udiv i32 %4, %1
  %6 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = udiv i32 %8, %5
  %10 = add i32 %9, 1
  %11 = tail call i32 @llvm.usub.sat.i32(i32 %10, i32 %1)
  %12 = xor i32 %9, -1
  %13 = add i32 %12, %1
  %14 = add i32 %13, %11
  ret i32 %14
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @ec_decode_bin(%struct.ec_ctx* nocapture, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, %1
  %6 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = udiv i32 %8, %5
  %10 = shl i32 1, %1
  %11 = add i32 %9, 1
  %12 = tail call i32 @llvm.usub.sat.i32(i32 %11, i32 %10)
  %13 = xor i32 %9, -1
  %14 = add i32 %10, %13
  %15 = add i32 %14, %12
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ec_dec_update(%struct.ec_ctx* nocapture, i32, i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = sub i32 %3, %2
  %8 = mul i32 %6, %7
  %9 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = sub i32 %10, %8
  store i32 %11, i32* %9, align 4
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = sub i32 %2, %1
  %15 = mul i32 %6, %14
  br label %20

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = sub i32 %18, %8
  br label %20

20:                                               ; preds = %16, %13
  %21 = phi i32 [ %15, %13 ], [ %19, %16 ]
  %22 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  store i32 %21, i32* %22, align 8
  %23 = icmp ult i32 %21, 8388609
  br i1 %23, label %24, label %62

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %26 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %27 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %28 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %29 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %30 = load i32, i32* %25, align 8
  %31 = load i32, i32* %26, align 4
  %32 = load i32, i32* %27, align 4
  %33 = load i32, i32* %28, align 8
  br label %34

34:                                               ; preds = %50, %24
  %35 = phi i32 [ %11, %24 ], [ %60, %50 ]
  %36 = phi i32 [ %32, %24 ], [ %51, %50 ]
  %37 = phi i32 [ %31, %24 ], [ %52, %50 ]
  %38 = phi i32 [ %30, %24 ], [ %40, %50 ]
  %39 = phi i32 [ %21, %24 ], [ %41, %50 ]
  %40 = add nsw i32 %38, 8
  store i32 %40, i32* %25, align 8
  %41 = shl i32 %39, 8
  store i32 %41, i32* %22, align 8
  %42 = icmp ult i32 %36, %33
  br i1 %42, label %43, label %50

43:                                               ; preds = %34
  %44 = load i8*, i8** %29, align 8
  %45 = add nuw i32 %36, 1
  store i32 %45, i32* %27, align 4
  %46 = zext i32 %36 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  br label %50

50:                                               ; preds = %43, %34
  %51 = phi i32 [ %45, %43 ], [ %36, %34 ]
  %52 = phi i32 [ %49, %43 ], [ 0, %34 ]
  store i32 %52, i32* %26, align 4
  %53 = shl i32 %37, 8
  %54 = or i32 %52, %53
  %55 = lshr i32 %54, 1
  %56 = shl i32 %35, 8
  %57 = and i32 %55, 255
  %58 = and i32 %56, 2147483392
  %59 = or i32 %58, %57
  %60 = xor i32 %59, 255
  store i32 %60, i32* %9, align 4
  %61 = icmp ult i32 %41, 8388609
  br i1 %61, label %34, label %62

62:                                               ; preds = %50, %20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ec_dec_bit_logp(%struct.ec_ctx* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %4, %1
  %8 = icmp ult i32 %6, %7
  %9 = zext i1 %8 to i32
  br i1 %8, label %13, label %10

10:                                               ; preds = %2
  %11 = sub i32 %6, %7
  store i32 %11, i32* %5, align 4
  %12 = sub i32 %4, %7
  br label %13

13:                                               ; preds = %2, %10
  %14 = phi i32 [ %11, %10 ], [ %6, %2 ]
  %15 = phi i32 [ %12, %10 ], [ %7, %2 ]
  store i32 %15, i32* %3, align 8
  %16 = icmp ult i32 %15, 8388609
  br i1 %16, label %17, label %55

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %19 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %20 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %21 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %22 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %23 = load i32, i32* %18, align 8
  %24 = load i32, i32* %19, align 4
  %25 = load i32, i32* %20, align 4
  %26 = load i32, i32* %21, align 8
  br label %27

27:                                               ; preds = %43, %17
  %28 = phi i32 [ %14, %17 ], [ %53, %43 ]
  %29 = phi i32 [ %25, %17 ], [ %44, %43 ]
  %30 = phi i32 [ %24, %17 ], [ %45, %43 ]
  %31 = phi i32 [ %23, %17 ], [ %33, %43 ]
  %32 = phi i32 [ %15, %17 ], [ %34, %43 ]
  %33 = add nsw i32 %31, 8
  store i32 %33, i32* %18, align 8
  %34 = shl i32 %32, 8
  store i32 %34, i32* %3, align 8
  %35 = icmp ult i32 %29, %26
  br i1 %35, label %36, label %43

36:                                               ; preds = %27
  %37 = load i8*, i8** %22, align 8
  %38 = add nuw i32 %29, 1
  store i32 %38, i32* %20, align 4
  %39 = zext i32 %29 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  br label %43

43:                                               ; preds = %36, %27
  %44 = phi i32 [ %38, %36 ], [ %29, %27 ]
  %45 = phi i32 [ %42, %36 ], [ 0, %27 ]
  store i32 %45, i32* %19, align 4
  %46 = shl i32 %30, 8
  %47 = or i32 %45, %46
  %48 = lshr i32 %47, 1
  %49 = shl i32 %28, 8
  %50 = and i32 %48, 255
  %51 = and i32 %49, 2147483392
  %52 = or i32 %51, %50
  %53 = xor i32 %52, 255
  store i32 %53, i32* %5, align 4
  %54 = icmp ult i32 %34, 8388609
  br i1 %54, label %27, label %55

55:                                               ; preds = %43, %13
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ec_dec_icdf(%struct.ec_ctx* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %5, %2
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ %12, %9 ], [ -1, %3 ]
  %11 = phi i32 [ %16, %9 ], [ %5, %3 ]
  %12 = add nsw i64 %10, 1
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = mul i32 %8, %15
  %17 = icmp ult i32 %7, %16
  br i1 %17, label %9, label %18

18:                                               ; preds = %9
  %19 = trunc i64 %12 to i32
  %20 = sub i32 %7, %16
  store i32 %20, i32* %6, align 4
  %21 = sub i32 %11, %16
  store i32 %21, i32* %4, align 8
  %22 = icmp ult i32 %21, 8388609
  br i1 %22, label %23, label %61

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %25 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %26 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %27 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %28 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %29 = load i32, i32* %24, align 8
  %30 = load i32, i32* %25, align 4
  %31 = load i32, i32* %26, align 4
  %32 = load i32, i32* %27, align 8
  br label %33

33:                                               ; preds = %49, %23
  %34 = phi i32 [ %20, %23 ], [ %59, %49 ]
  %35 = phi i32 [ %31, %23 ], [ %50, %49 ]
  %36 = phi i32 [ %30, %23 ], [ %51, %49 ]
  %37 = phi i32 [ %29, %23 ], [ %39, %49 ]
  %38 = phi i32 [ %21, %23 ], [ %40, %49 ]
  %39 = add nsw i32 %37, 8
  store i32 %39, i32* %24, align 8
  %40 = shl i32 %38, 8
  store i32 %40, i32* %4, align 8
  %41 = icmp ult i32 %35, %32
  br i1 %41, label %42, label %49

42:                                               ; preds = %33
  %43 = load i8*, i8** %28, align 8
  %44 = add nuw i32 %35, 1
  store i32 %44, i32* %26, align 4
  %45 = zext i32 %35 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  br label %49

49:                                               ; preds = %42, %33
  %50 = phi i32 [ %44, %42 ], [ %35, %33 ]
  %51 = phi i32 [ %48, %42 ], [ 0, %33 ]
  store i32 %51, i32* %25, align 4
  %52 = shl i32 %36, 8
  %53 = or i32 %51, %52
  %54 = lshr i32 %53, 1
  %55 = shl i32 %34, 8
  %56 = and i32 %54, 255
  %57 = and i32 %55, 2147483392
  %58 = or i32 %57, %56
  %59 = xor i32 %58, 255
  store i32 %59, i32* %6, align 4
  %60 = icmp ult i32 %40, 8388609
  br i1 %60, label %33, label %61

61:                                               ; preds = %49, %18
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ec_dec_uint(%struct.ec_ctx*, i32) local_unnamed_addr #2 {
  %3 = icmp ugt i32 %1, 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @celt_fatal(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 203) #5
  unreachable

5:                                                ; preds = %2
  %6 = add i32 %1, -1
  %7 = icmp ugt i32 %6, 255
  br i1 %7, label %8, label %117

8:                                                ; preds = %5
  %9 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 true), !range !2
  %10 = sub nsw i32 24, %9
  %11 = lshr i32 %6, %10
  %12 = add nuw i32 %11, 1
  %13 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = udiv i32 %14, %12
  %16 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %18 = load i32, i32* %17, align 4
  %19 = udiv i32 %18, %15
  %20 = add i32 %19, 1
  %21 = tail call i32 @llvm.usub.sat.i32(i32 %20, i32 %12) #6
  %22 = sub i32 %11, %19
  %23 = add i32 %21, %22
  %24 = sub i32 %11, %23
  %25 = mul i32 %24, %15
  %26 = sub i32 %18, %25
  store i32 %26, i32* %17, align 4
  %27 = icmp eq i32 %23, 0
  %28 = sub i32 %14, %25
  %29 = select i1 %27, i32 %28, i32 %15
  store i32 %29, i32* %13, align 8
  %30 = icmp ult i32 %29, 8388609
  br i1 %30, label %31, label %69

31:                                               ; preds = %8
  %32 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %33 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %34 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %35 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %36 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %37 = load i32, i32* %32, align 8
  %38 = load i32, i32* %33, align 4
  %39 = load i32, i32* %34, align 4
  %40 = load i32, i32* %35, align 8
  br label %41

41:                                               ; preds = %57, %31
  %42 = phi i32 [ %26, %31 ], [ %67, %57 ]
  %43 = phi i32 [ %39, %31 ], [ %58, %57 ]
  %44 = phi i32 [ %38, %31 ], [ %59, %57 ]
  %45 = phi i32 [ %37, %31 ], [ %47, %57 ]
  %46 = phi i32 [ %29, %31 ], [ %48, %57 ]
  %47 = add nsw i32 %45, 8
  store i32 %47, i32* %32, align 8
  %48 = shl i32 %46, 8
  store i32 %48, i32* %13, align 8
  %49 = icmp ult i32 %43, %40
  br i1 %49, label %50, label %57

50:                                               ; preds = %41
  %51 = load i8*, i8** %36, align 8
  %52 = add nuw i32 %43, 1
  store i32 %52, i32* %34, align 4
  %53 = zext i32 %43 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  br label %57

57:                                               ; preds = %50, %41
  %58 = phi i32 [ %52, %50 ], [ %43, %41 ]
  %59 = phi i32 [ %56, %50 ], [ 0, %41 ]
  store i32 %59, i32* %33, align 4
  %60 = shl i32 %44, 8
  %61 = or i32 %59, %60
  %62 = lshr i32 %61, 1
  %63 = shl i32 %42, 8
  %64 = and i32 %62, 255
  %65 = and i32 %63, 2147483392
  %66 = or i32 %64, %65
  %67 = xor i32 %66, 255
  store i32 %67, i32* %17, align 4
  %68 = icmp ult i32 %48, 8388609
  br i1 %68, label %41, label %69

69:                                               ; preds = %57, %8
  %70 = shl i32 %23, %10
  %71 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = icmp ult i32 %74, %10
  br i1 %75, label %76, label %102

76:                                               ; preds = %69
  %77 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %78 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %79 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %80 = load i32, i32* %77, align 4
  %81 = load i32, i32* %78, align 8
  br label %82

82:                                               ; preds = %95, %76
  %83 = phi i32 [ %96, %95 ], [ %80, %76 ]
  %84 = phi i32 [ %99, %95 ], [ %72, %76 ]
  %85 = phi i32 [ %100, %95 ], [ %74, %76 ]
  %86 = icmp ult i32 %83, %81
  br i1 %86, label %87, label %95

87:                                               ; preds = %82
  %88 = load i8*, i8** %79, align 8
  %89 = add nuw i32 %83, 1
  store i32 %89, i32* %77, align 4
  %90 = sub i32 %81, %89
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %88, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  br label %95

95:                                               ; preds = %87, %82
  %96 = phi i32 [ %89, %87 ], [ %83, %82 ]
  %97 = phi i32 [ %94, %87 ], [ 0, %82 ]
  %98 = shl i32 %97, %85
  %99 = or i32 %98, %84
  %100 = add nsw i32 %85, 8
  %101 = icmp slt i32 %100, 25
  br i1 %101, label %82, label %102

102:                                              ; preds = %95, %69
  %103 = phi i32 [ %72, %69 ], [ %99, %95 ]
  %104 = phi i32 [ %74, %69 ], [ %100, %95 ]
  %105 = shl nsw i32 -1, %10
  %106 = xor i32 %105, -1
  %107 = and i32 %103, %106
  %108 = lshr i32 %103, %10
  %109 = sub i32 %104, %10
  store i32 %108, i32* %71, align 8
  store i32 %109, i32* %73, align 4
  %110 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, %10
  store i32 %112, i32* %110, align 8
  %113 = or i32 %107, %70
  %114 = icmp ugt i32 %113, %6
  br i1 %114, label %115, label %176

115:                                              ; preds = %102
  %116 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  store i32 1, i32* %116, align 8
  br label %176

117:                                              ; preds = %5
  %118 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %119 = load i32, i32* %118, align 8
  %120 = udiv i32 %119, %1
  %121 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  store i32 %120, i32* %121, align 8
  %122 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %123 = load i32, i32* %122, align 4
  %124 = udiv i32 %123, %120
  %125 = add i32 %124, 1
  %126 = tail call i32 @llvm.usub.sat.i32(i32 %125, i32 %1) #6
  %127 = xor i32 %124, -1
  %128 = add i32 %127, %1
  %129 = add i32 %128, %126
  %130 = xor i32 %129, -1
  %131 = add i32 %130, %1
  %132 = mul i32 %131, %120
  %133 = sub i32 %123, %132
  store i32 %133, i32* %122, align 4
  %134 = icmp eq i32 %129, 0
  %135 = sub i32 %119, %132
  %136 = select i1 %134, i32 %135, i32 %120
  store i32 %136, i32* %118, align 8
  %137 = icmp ult i32 %136, 8388609
  br i1 %137, label %138, label %176

138:                                              ; preds = %117
  %139 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %140 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %141 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %142 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %143 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %144 = load i32, i32* %139, align 8
  %145 = load i32, i32* %140, align 4
  %146 = load i32, i32* %141, align 4
  %147 = load i32, i32* %142, align 8
  br label %148

148:                                              ; preds = %164, %138
  %149 = phi i32 [ %133, %138 ], [ %174, %164 ]
  %150 = phi i32 [ %146, %138 ], [ %165, %164 ]
  %151 = phi i32 [ %145, %138 ], [ %166, %164 ]
  %152 = phi i32 [ %144, %138 ], [ %154, %164 ]
  %153 = phi i32 [ %136, %138 ], [ %155, %164 ]
  %154 = add nsw i32 %152, 8
  store i32 %154, i32* %139, align 8
  %155 = shl i32 %153, 8
  store i32 %155, i32* %118, align 8
  %156 = icmp ult i32 %150, %147
  br i1 %156, label %157, label %164

157:                                              ; preds = %148
  %158 = load i8*, i8** %143, align 8
  %159 = add nuw i32 %150, 1
  store i32 %159, i32* %141, align 4
  %160 = zext i32 %150 to i64
  %161 = getelementptr inbounds i8, i8* %158, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  br label %164

164:                                              ; preds = %157, %148
  %165 = phi i32 [ %159, %157 ], [ %150, %148 ]
  %166 = phi i32 [ %163, %157 ], [ 0, %148 ]
  store i32 %166, i32* %140, align 4
  %167 = shl i32 %151, 8
  %168 = or i32 %166, %167
  %169 = lshr i32 %168, 1
  %170 = shl i32 %149, 8
  %171 = and i32 %169, 255
  %172 = and i32 %170, 2147483392
  %173 = or i32 %171, %172
  %174 = xor i32 %173, 255
  store i32 %174, i32* %122, align 4
  %175 = icmp ult i32 %155, 8388609
  br i1 %175, label %148, label %176

176:                                              ; preds = %164, %117, %115, %102
  %177 = phi i32 [ %6, %115 ], [ %113, %102 ], [ %129, %117 ], [ %129, %164 ]
  ret i32 %177
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ec_dec_bits(%struct.ec_ctx* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %10 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %12 = load i32, i32* %9, align 4
  %13 = load i32, i32* %10, align 8
  br label %14

14:                                               ; preds = %8, %27
  %15 = phi i32 [ %28, %27 ], [ %12, %8 ]
  %16 = phi i32 [ %31, %27 ], [ %4, %8 ]
  %17 = phi i32 [ %32, %27 ], [ %6, %8 ]
  %18 = icmp ult i32 %15, %13
  br i1 %18, label %19, label %27

19:                                               ; preds = %14
  %20 = load i8*, i8** %11, align 8
  %21 = add nuw i32 %15, 1
  store i32 %21, i32* %9, align 4
  %22 = sub i32 %13, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  br label %27

27:                                               ; preds = %14, %19
  %28 = phi i32 [ %21, %19 ], [ %15, %14 ]
  %29 = phi i32 [ %26, %19 ], [ 0, %14 ]
  %30 = shl i32 %29, %17
  %31 = or i32 %30, %16
  %32 = add nsw i32 %17, 8
  %33 = icmp slt i32 %32, 25
  br i1 %33, label %14, label %34

34:                                               ; preds = %27, %2
  %35 = phi i32 [ %4, %2 ], [ %31, %27 ]
  %36 = phi i32 [ %6, %2 ], [ %32, %27 ]
  %37 = shl nsw i32 -1, %1
  %38 = xor i32 %37, -1
  %39 = and i32 %35, %38
  %40 = lshr i32 %35, %1
  %41 = sub i32 %36, %1
  store i32 %40, i32* %3, align 8
  store i32 %41, i32* %5, align 4
  %42 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, %1
  store i32 %44, i32* %42, align 8
  ret i32 %39
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
