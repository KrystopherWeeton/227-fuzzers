; ModuleID = '../../sandbox/linux/bpf_dsl/codegen.cc'
source_filename = "../../sandbox/linux/bpf_dsl/codegen.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.sandbox::CodeGen" = type { %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::map" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.sock_filter*, %struct.sock_filter*, %"class.std::__1::__compressed_pair" }
%struct.sock_filter = type { i16, i8, i8, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.sock_filter* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i64*, i64*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.20" }
%"struct.std::__1::pair.20" = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.17", %"class.std::__1::__tuple_leaf.18", %"class.std::__1::__tuple_leaf.19" }
%"class.std::__1::__tuple_leaf" = type { i16 }
%"class.std::__1::__tuple_leaf.17" = type { i32 }
%"class.std::__1::__tuple_leaf.18" = type { i64 }
%"class.std::__1::__tuple_leaf.19" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::pair.16" = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_mEEEEENSD_INS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN7sandbox7CodeGen9kNullNodeE = hidden local_unnamed_addr constant i64 -1, align 8
@.str = private unnamed_addr constant [24 x i8] c"0x00 != ((code) & 0xf0)\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"../../sandbox/linux/bpf_dsl/codegen.cc\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"CodeGen inserts JAs as needed\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"kNullNode == jf\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"Non-branch instructions shouldn't provide jf\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"kNullNode == jt\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"Return instructions shouldn't provide jt\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"0U == Offset(jt)\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"ICE: Failed to setup next instruction\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"jt <= kBranchRange\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"jf <= kBranchRange\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"0U == jt\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"0U == jf\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"program_.size() < static_cast<size_t>(4096)\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"program_.size() == equivalent_.size()\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"target < program_.size()\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"Bogus offset target node\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN7sandbox7CodeGenC1Ev = hidden unnamed_addr alias void (%"class.sandbox::CodeGen"*), void (%"class.sandbox::CodeGen"*)* @_ZN7sandbox7CodeGenC2Ev
@_ZN7sandbox7CodeGenD1Ev = hidden unnamed_addr alias void (%"class.sandbox::CodeGen"*), void (%"class.sandbox::CodeGen"*)* @_ZN7sandbox7CodeGenD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox7CodeGenC2Ev(%"class.sandbox::CodeGen"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #8
  %6 = bitcast %"class.sandbox::CodeGen"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false)
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox7CodeGenD2Ev(%"class.sandbox::CodeGen"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 2, i32 0
  %3 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #8
  %6 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = ptrtoint i64* %7 to i64
  %11 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i64** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast i64* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %struct.sock_filter*, %struct.sock_filter** %15, align 8
  %17 = icmp eq %struct.sock_filter* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %struct.sock_filter* %16 to i64
  %20 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %struct.sock_filter** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %struct.sock_filter* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %14, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox7CodeGen7CompileEm(%"class.std::__1::vector"* noalias sret, %"class.sandbox::CodeGen"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load %struct.sock_filter*, %struct.sock_filter** %4, align 8
  %6 = tail call i64 @_ZNK7sandbox7CodeGen6OffsetEm(%"class.sandbox::CodeGen"* %1, i64 %2)
  %7 = sub nsw i64 0, %6
  %8 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %5, i64 %7
  %9 = bitcast %struct.sock_filter* %8 to i8*
  %10 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %struct.sock_filter*, %struct.sock_filter** %10, align 8
  %12 = ptrtoint %struct.sock_filter* %11 to i64
  %13 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #8
  %14 = ptrtoint %struct.sock_filter* %8 to i64
  %15 = sub i64 %14, %12
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %205, label %18

18:                                               ; preds = %3
  %19 = icmp ugt i64 %16, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #10
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #9
  %24 = bitcast i8* %23 to %struct.sock_filter*
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %26 = bitcast %struct.sock_filter** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %24, i64 %16
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %struct.sock_filter* %28, %struct.sock_filter** %29, align 8
  %30 = bitcast %struct.sock_filter** %25 to i64*
  %31 = ptrtoint i8* %23 to i64
  %32 = icmp eq %struct.sock_filter* %8, %11
  br i1 %32, label %203, label %33

33:                                               ; preds = %22
  %34 = xor i64 %6, -1
  %35 = getelementptr %struct.sock_filter, %struct.sock_filter* %5, i64 %34, i32 0
  %36 = ptrtoint i16* %35 to i64
  %37 = sub i64 %36, %12
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %130, label %41

41:                                               ; preds = %33
  %42 = xor i64 %6, -1
  %43 = getelementptr %struct.sock_filter, %struct.sock_filter* %5, i64 %42, i32 0
  %44 = ptrtoint i16* %43 to i64
  %45 = sub i64 %44, %12
  %46 = lshr i64 %45, 3
  %47 = add i64 %45, 8
  %48 = and i64 %47, -8
  %49 = getelementptr i8, i8* %23, i64 %48
  %50 = xor i64 %6, -1
  %51 = sub i64 %50, %46
  %52 = getelementptr %struct.sock_filter, %struct.sock_filter* %5, i64 %51
  %53 = bitcast %struct.sock_filter* %52 to i8*
  %54 = icmp ult i8* %23, %9
  %55 = icmp ugt i8* %49, %53
  %56 = and i1 %54, %55
  br i1 %56, label %130, label %57

57:                                               ; preds = %41
  %58 = and i64 %39, 4611686018427387900
  %59 = getelementptr %struct.sock_filter, %struct.sock_filter* %24, i64 %58
  %60 = sub nsw i64 0, %58
  %61 = getelementptr %struct.sock_filter, %struct.sock_filter* %8, i64 %60
  %62 = add nsw i64 %58, -4
  %63 = lshr exact i64 %62, 2
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %62, 0
  br i1 %66, label %108, label %67

67:                                               ; preds = %57
  %68 = sub nuw nsw i64 %64, %65
  %69 = getelementptr %struct.sock_filter, %struct.sock_filter* %8, i64 -1
  %70 = getelementptr %struct.sock_filter, %struct.sock_filter* %8, i64 -1
  br label %71

71:                                               ; preds = %71, %67
  %72 = phi i64 [ 0, %67 ], [ %105, %71 ]
  %73 = phi i64 [ %68, %67 ], [ %106, %71 ]
  %74 = getelementptr %struct.sock_filter, %struct.sock_filter* %24, i64 %72
  %75 = sub i64 0, %72
  %76 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %69, i64 %75
  %77 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %76, i64 -1
  %78 = bitcast %struct.sock_filter* %77 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 4, !alias.scope !2
  %80 = shufflevector <2 x i64> %79, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %81 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %76, i64 -2
  %82 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %81, i64 -1
  %83 = bitcast %struct.sock_filter* %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 4, !alias.scope !2
  %85 = shufflevector <2 x i64> %84, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %86 = bitcast %struct.sock_filter* %74 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %86, align 4, !alias.scope !5, !noalias !2
  %87 = getelementptr %struct.sock_filter, %struct.sock_filter* %74, i64 2
  %88 = bitcast %struct.sock_filter* %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 4, !alias.scope !5, !noalias !2
  %89 = or i64 %72, 4
  %90 = getelementptr %struct.sock_filter, %struct.sock_filter* %24, i64 %89
  %91 = sub nuw nsw i64 -4, %72
  %92 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %70, i64 %91
  %93 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %92, i64 -1
  %94 = bitcast %struct.sock_filter* %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 4, !alias.scope !2
  %96 = shufflevector <2 x i64> %95, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %97 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %92, i64 -2
  %98 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %97, i64 -1
  %99 = bitcast %struct.sock_filter* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 4, !alias.scope !2
  %101 = shufflevector <2 x i64> %100, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %102 = bitcast %struct.sock_filter* %90 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %102, align 4, !alias.scope !5, !noalias !2
  %103 = getelementptr %struct.sock_filter, %struct.sock_filter* %90, i64 2
  %104 = bitcast %struct.sock_filter* %103 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %104, align 4, !alias.scope !5, !noalias !2
  %105 = add i64 %72, 8
  %106 = add i64 %73, -2
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %71, !llvm.loop !7

108:                                              ; preds = %71, %57
  %109 = phi i64 [ 0, %57 ], [ %105, %71 ]
  %110 = icmp eq i64 %65, 0
  br i1 %110, label %128, label %111

111:                                              ; preds = %108
  %112 = getelementptr %struct.sock_filter, %struct.sock_filter* %24, i64 %109
  %113 = sub i64 0, %109
  %114 = getelementptr %struct.sock_filter, %struct.sock_filter* %8, i64 -1
  %115 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %114, i64 %113
  %116 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %115, i64 -1
  %117 = bitcast %struct.sock_filter* %116 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 4, !alias.scope !2
  %119 = shufflevector <2 x i64> %118, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %120 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %115, i64 -2
  %121 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %120, i64 -1
  %122 = bitcast %struct.sock_filter* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 4, !alias.scope !2
  %124 = shufflevector <2 x i64> %123, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %125 = bitcast %struct.sock_filter* %112 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %125, align 4, !alias.scope !5, !noalias !2
  %126 = getelementptr %struct.sock_filter, %struct.sock_filter* %112, i64 2
  %127 = bitcast %struct.sock_filter* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 4, !alias.scope !5, !noalias !2
  br label %128

128:                                              ; preds = %108, %111
  %129 = icmp eq i64 %39, %58
  br i1 %129, label %200, label %130

130:                                              ; preds = %128, %41, %33
  %131 = phi %struct.sock_filter* [ %24, %41 ], [ %24, %33 ], [ %59, %128 ]
  %132 = phi %struct.sock_filter* [ %8, %41 ], [ %8, %33 ], [ %61, %128 ]
  %133 = getelementptr %struct.sock_filter, %struct.sock_filter* %132, i64 -1, i32 0
  %134 = ptrtoint i16* %133 to i64
  %135 = sub i64 %134, %12
  %136 = lshr i64 %135, 3
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %130, %140
  %141 = phi %struct.sock_filter* [ %148, %140 ], [ %131, %130 ]
  %142 = phi %struct.sock_filter* [ %145, %140 ], [ %132, %130 ]
  %143 = phi i64 [ %149, %140 ], [ %138, %130 ]
  %144 = bitcast %struct.sock_filter* %141 to i64*
  %145 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %142, i64 -1
  %146 = bitcast %struct.sock_filter* %145 to i64*
  %147 = load i64, i64* %146, align 4
  store i64 %147, i64* %144, align 4
  %148 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %141, i64 1
  %149 = add i64 %143, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !9

151:                                              ; preds = %140, %130
  %152 = phi %struct.sock_filter* [ undef, %130 ], [ %148, %140 ]
  %153 = phi %struct.sock_filter* [ %131, %130 ], [ %148, %140 ]
  %154 = phi %struct.sock_filter* [ %132, %130 ], [ %145, %140 ]
  %155 = icmp ult i64 %135, 56
  br i1 %155, label %200, label %156

156:                                              ; preds = %151, %156
  %157 = phi %struct.sock_filter* [ %198, %156 ], [ %153, %151 ]
  %158 = phi %struct.sock_filter* [ %195, %156 ], [ %154, %151 ]
  %159 = bitcast %struct.sock_filter* %157 to i64*
  %160 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %158, i64 -1
  %161 = bitcast %struct.sock_filter* %160 to i64*
  %162 = load i64, i64* %161, align 4
  store i64 %162, i64* %159, align 4
  %163 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i64 1
  %164 = bitcast %struct.sock_filter* %163 to i64*
  %165 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %158, i64 -2
  %166 = bitcast %struct.sock_filter* %165 to i64*
  %167 = load i64, i64* %166, align 4
  store i64 %167, i64* %164, align 4
  %168 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i64 2
  %169 = bitcast %struct.sock_filter* %168 to i64*
  %170 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %158, i64 -3
  %171 = bitcast %struct.sock_filter* %170 to i64*
  %172 = load i64, i64* %171, align 4
  store i64 %172, i64* %169, align 4
  %173 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i64 3
  %174 = bitcast %struct.sock_filter* %173 to i64*
  %175 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %158, i64 -4
  %176 = bitcast %struct.sock_filter* %175 to i64*
  %177 = load i64, i64* %176, align 4
  store i64 %177, i64* %174, align 4
  %178 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i64 4
  %179 = bitcast %struct.sock_filter* %178 to i64*
  %180 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %158, i64 -5
  %181 = bitcast %struct.sock_filter* %180 to i64*
  %182 = load i64, i64* %181, align 4
  store i64 %182, i64* %179, align 4
  %183 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i64 5
  %184 = bitcast %struct.sock_filter* %183 to i64*
  %185 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %158, i64 -6
  %186 = bitcast %struct.sock_filter* %185 to i64*
  %187 = load i64, i64* %186, align 4
  store i64 %187, i64* %184, align 4
  %188 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i64 6
  %189 = bitcast %struct.sock_filter* %188 to i64*
  %190 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %158, i64 -7
  %191 = bitcast %struct.sock_filter* %190 to i64*
  %192 = load i64, i64* %191, align 4
  store i64 %192, i64* %189, align 4
  %193 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i64 7
  %194 = bitcast %struct.sock_filter* %193 to i64*
  %195 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %158, i64 -8
  %196 = bitcast %struct.sock_filter* %195 to i64*
  %197 = load i64, i64* %196, align 4
  store i64 %197, i64* %194, align 4
  %198 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %157, i64 8
  %199 = icmp eq %struct.sock_filter* %195, %11
  br i1 %199, label %200, label %156, !llvm.loop !11

200:                                              ; preds = %151, %156, %128
  %201 = phi %struct.sock_filter* [ %59, %128 ], [ %152, %151 ], [ %198, %156 ]
  %202 = ptrtoint %struct.sock_filter* %201 to i64
  br label %203

203:                                              ; preds = %200, %22
  %204 = phi i64 [ %31, %22 ], [ %202, %200 ]
  store i64 %204, i64* %30, align 8
  br label %205

205:                                              ; preds = %3, %203
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7sandbox7CodeGen6OffsetEm(%"class.sandbox::CodeGen"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %struct.sock_filter** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.sandbox::CodeGen"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp ugt i64 %14, %1
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %7, align 8
  br label %28

18:                                               ; preds = %2
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #8
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %14) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i8* %19, i8* %20) #8
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %7, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 144, %"class.logging::CheckOpResult"* nonnull %4) #8
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i64 24) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  br label %28

28:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %29 = load i64, i64* %9, align 8
  %30 = load i64, i64* %11, align 8
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 3
  %33 = xor i64 %1, -1
  %34 = add i64 %32, %33
  ret i64 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox7CodeGen15MakeInstructionEtjmm(%"class.sandbox::CodeGen"*, i16 zeroext, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::pair.16", align 8
  %7 = bitcast %"struct.std::__1::pair.16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i16 %1, i16* %8, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %6, i64 0, i32 0, i32 0, i32 2, i32 0
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %6, i64 0, i32 0, i32 0, i32 3, i32 0
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %6, i64 0, i32 1
  store i64 -1, i64* %12, align 8, !alias.scope !12
  %13 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %6, i64 0, i32 0
  %15 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_mEEEEENSD_INS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %13, %"class.std::__1::tuple"* nonnull dereferenceable(24) %14, %"struct.std::__1::pair.16"* nonnull dereferenceable(32) %6) #8
  %16 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %15, 0
  %17 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %15, 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 7
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to i64*
  %20 = icmp eq i8 %17, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %5
  %22 = load i64, i64* %19, align 8
  br label %25

23:                                               ; preds = %5
  %24 = call i64 @_ZN7sandbox7CodeGen17AppendInstructionEtjmm(%"class.sandbox::CodeGen"* %0, i16 zeroext %1, i32 %2, i64 %3, i64 %4)
  store i64 %24, i64* %19, align 8
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi i64 [ %22, %21 ], [ %24, %23 ]
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox7CodeGen17AppendInstructionEtjmm(%"class.sandbox::CodeGen"*, i16 zeroext, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckOpResult", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.logging::CheckOpResult", align 8
  %17 = alloca %"class.logging::CheckError", align 8
  %18 = zext i16 %1 to i32
  %19 = and i32 %18, 7
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %21, label %44

21:                                               ; preds = %5
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = and i32 %18, 240
  %25 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  store i8* null, i8** %23, align 8
  br label %38

28:                                               ; preds = %21
  %29 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #8
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* %29, i8* %30) #8
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  store i8* %32, i8** %23, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %10) #8
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i64 29) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  br label %38

38:                                               ; preds = %27, %28, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  %39 = call i64 @_ZN7sandbox7CodeGen11WithinRangeEmm(%"class.sandbox::CodeGen"* %0, i64 %3, i64 254)
  %40 = call i64 @_ZN7sandbox7CodeGen11WithinRangeEmm(%"class.sandbox::CodeGen"* %0, i64 %4, i64 255)
  %41 = call i64 @_ZNK7sandbox7CodeGen6OffsetEm(%"class.sandbox::CodeGen"* %0, i64 %39)
  %42 = call i64 @_ZNK7sandbox7CodeGen6OffsetEm(%"class.sandbox::CodeGen"* %0, i64 %40)
  %43 = call i64 @_ZN7sandbox7CodeGen6AppendEtjmm(%"class.sandbox::CodeGen"* %0, i16 zeroext %1, i32 %2, i64 %41, i64 %42)
  br label %99

44:                                               ; preds = %5
  %45 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  store i8* null, i8** %46, align 8
  br label %60

50:                                               ; preds = %44
  %51 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 -1) #8
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %4) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* %51, i8* %52) #8
  %53 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  store i8* %54, i8** %46, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 94, %"class.logging::CheckOpResult"* nonnull %12) #8
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #8
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0), i64 44) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  br label %60

60:                                               ; preds = %49, %50, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %61 = icmp eq i32 %19, 6
  br i1 %61, label %62, label %78

62:                                               ; preds = %60
  %63 = bitcast %"class.logging::CheckOpResult"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #8
  %64 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %14, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %64, align 8
  %65 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = icmp eq i64 %3, -1
  br i1 %66, label %67, label %68

67:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  store i8* null, i8** %64, align 8
  br label %96

68:                                               ; preds = %62
  %69 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 -1) #8
  %70 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %3) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* %69, i8* %70) #8
  %71 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  store i8* %72, i8** %64, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %96, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 96, %"class.logging::CheckOpResult"* nonnull %14) #8
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #8
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i64 40) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #8
  br label %96

78:                                               ; preds = %60
  %79 = call i64 @_ZN7sandbox7CodeGen11WithinRangeEmm(%"class.sandbox::CodeGen"* %0, i64 %3, i64 0)
  %80 = bitcast %"class.logging::CheckOpResult"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #8
  %81 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %16, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %81, align 8
  %82 = call i64 @_ZNK7sandbox7CodeGen6OffsetEm(%"class.sandbox::CodeGen"* %0, i64 %79)
  %83 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  store i8* null, i8** %81, align 8
  br label %96

86:                                               ; preds = %78
  %87 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  %88 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %82) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %87, i8* %88) #8
  %89 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  store i8* %90, i8** %81, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.logging::CheckError"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %17, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 102, %"class.logging::CheckOpResult"* nonnull %16) #8
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %17) #8
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %94, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  br label %96

96:                                               ; preds = %92, %86, %85, %74, %68, %67
  %97 = phi i8* [ %63, %67 ], [ %63, %68 ], [ %63, %74 ], [ %80, %85 ], [ %80, %86 ], [ %80, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #8
  %98 = call i64 @_ZN7sandbox7CodeGen6AppendEtjmm(%"class.sandbox::CodeGen"* %0, i16 zeroext %1, i32 %2, i64 0, i64 0)
  br label %99

99:                                               ; preds = %96, %38
  %100 = phi i64 [ %43, %38 ], [ %98, %96 ]
  ret i64 %100
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox7CodeGen11WithinRangeEmm(%"class.sandbox::CodeGen"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call i64 @_ZNK7sandbox7CodeGen6OffsetEm(%"class.sandbox::CodeGen"* %0, i64 %1)
  %5 = icmp ugt i64 %4, %2
  br i1 %5, label %6, label %50

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %14, %1
  br i1 %15, label %18, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.std::__1::vector.1"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %17) #10
  unreachable

18:                                               ; preds = %6
  %19 = inttoptr i64 %12 to i64*
  %20 = getelementptr inbounds i64, i64* %19, i64 %1
  %21 = load i64, i64* %20, align 8
  %22 = tail call i64 @_ZNK7sandbox7CodeGen6OffsetEm(%"class.sandbox::CodeGen"* %0, i64 %21)
  %23 = icmp ugt i64 %22, %2
  br i1 %23, label %36, label %24

24:                                               ; preds = %18
  %25 = load i64, i64* %9, align 8
  %26 = load i64, i64* %11, align 8
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp ugt i64 %28, %1
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::vector.1"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %31) #10
  unreachable

32:                                               ; preds = %24
  %33 = inttoptr i64 %26 to i64*
  %34 = getelementptr inbounds i64, i64* %33, i64 %1
  %35 = load i64, i64* %34, align 8
  br label %50

36:                                               ; preds = %18
  %37 = tail call i64 @_ZNK7sandbox7CodeGen6OffsetEm(%"class.sandbox::CodeGen"* %0, i64 %1)
  %38 = trunc i64 %37 to i32
  %39 = tail call i64 @_ZN7sandbox7CodeGen6AppendEtjmm(%"class.sandbox::CodeGen"* %0, i16 zeroext 5, i32 %38, i64 0, i64 0)
  %40 = load i64, i64* %9, align 8
  %41 = load i64, i64* %11, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ugt i64 %43, %1
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  %46 = bitcast %"class.std::__1::vector.1"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %46) #10
  unreachable

47:                                               ; preds = %36
  %48 = inttoptr i64 %41 to i64*
  %49 = getelementptr inbounds i64, i64* %48, i64 %1
  store i64 %39, i64* %49, align 8
  br label %50

50:                                               ; preds = %3, %47, %32
  %51 = phi i64 [ %35, %32 ], [ %39, %47 ], [ %1, %3 ]
  ret i64 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox7CodeGen6AppendEtjmm(%"class.sandbox::CodeGen"*, i16 zeroext, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckOpResult", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.logging::CheckOpResult", align 8
  %17 = alloca %"class.logging::CheckError", align 8
  %18 = alloca %"class.logging::CheckOpResult", align 8
  %19 = alloca %"class.logging::CheckError", align 8
  %20 = alloca %"class.logging::CheckOpResult", align 8
  %21 = alloca %"class.logging::CheckError", align 8
  %22 = alloca %"class.logging::CheckOpResult", align 8
  %23 = alloca %"class.logging::CheckError", align 8
  %24 = zext i16 %1 to i32
  %25 = and i32 %24, 7
  %26 = icmp ne i32 %25, 5
  %27 = and i32 %24, 240
  %28 = icmp eq i32 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %60, label %30

30:                                               ; preds = %5
  %31 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %32, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = icmp ugt i64 %3, 255
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* null, i8** %32, align 8
  br label %45

36:                                               ; preds = %30
  %37 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %3) #8
  %38 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 255) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* %37, i8* %38) #8
  %39 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* %40, i8** %32, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 126, %"class.logging::CheckOpResult"* nonnull %12) #8
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %45

45:                                               ; preds = %35, %36, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %46 = bitcast %"class.logging::CheckOpResult"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %14, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %47, align 8
  %48 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ugt i64 %4, 255
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %47, align 8
  br label %90

51:                                               ; preds = %45
  %52 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %4) #8
  %53 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 255) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* %52, i8* %53) #8
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %47, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %90, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 127, %"class.logging::CheckOpResult"* nonnull %14) #8
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  br label %90

60:                                               ; preds = %5
  %61 = bitcast %"class.logging::CheckOpResult"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #8
  %62 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %16, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %62, align 8
  %63 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = icmp eq i64 %3, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  store i8* null, i8** %62, align 8
  br label %75

66:                                               ; preds = %60
  %67 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  %68 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %3) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* %67, i8* %68) #8
  %69 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  store i8* %70, i8** %62, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.logging::CheckError"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %17, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 129, %"class.logging::CheckOpResult"* nonnull %16) #8
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %17) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #8
  br label %75

75:                                               ; preds = %65, %66, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  %76 = bitcast %"class.logging::CheckOpResult"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #8
  %77 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %18, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %77, align 8
  %78 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = icmp eq i64 %4, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  store i8* null, i8** %77, align 8
  br label %90

81:                                               ; preds = %75
  %82 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  %83 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %4) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8* %82, i8* %83) #8
  %84 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  store i8* %85, i8** %77, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %81
  %88 = bitcast %"class.logging::CheckError"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %19, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 130, %"class.logging::CheckOpResult"* nonnull %18) #8
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %19) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #8
  br label %90

90:                                               ; preds = %87, %81, %80, %57, %51, %50
  %91 = phi i8* [ %46, %50 ], [ %46, %51 ], [ %46, %57 ], [ %76, %80 ], [ %76, %81 ], [ %76, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #8
  %92 = bitcast %"class.logging::CheckOpResult"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #8
  %93 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %20, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %93, align 8
  %94 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %struct.sock_filter** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.sandbox::CodeGen"* %0 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)
  %102 = icmp ult i64 %100, 4096
  br i1 %102, label %103, label %104

103:                                              ; preds = %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  store i8* null, i8** %93, align 8
  br label %113

104:                                              ; preds = %90
  %105 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %100) #8
  %106 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 4096) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %105, i8* %106) #8
  %107 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %108 = load i8*, i8** %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  store i8* %108, i8** %93, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %104
  %111 = bitcast %"class.logging::CheckError"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %21, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 133, %"class.logging::CheckOpResult"* nonnull %20) #8
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %21) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #8
  br label %113

113:                                              ; preds = %103, %104, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #8
  %114 = bitcast %"class.logging::CheckOpResult"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #8
  %115 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %22, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %115, align 8
  %116 = load i64, i64* %95, align 8
  %117 = load i64, i64* %97, align 8
  %118 = sub i64 %116, %117
  %119 = ashr exact i64 %118, 3
  %120 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 1
  %121 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 1, i32 0, i32 1
  %122 = bitcast i64** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::vector.1"* %120 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %123, %125
  %127 = ashr exact i64 %126, 3
  %128 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128)
  %129 = icmp eq i64 %119, %127
  br i1 %129, label %130, label %131

130:                                              ; preds = %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128)
  store i8* null, i8** %115, align 8
  br label %140

131:                                              ; preds = %113
  %132 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %119) #8
  %133 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %127) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i8* %132, i8* %133) #8
  %134 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128)
  store i8* %135, i8** %115, align 8
  %136 = icmp eq i8* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = bitcast %"class.logging::CheckError"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %23, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 134, %"class.logging::CheckOpResult"* nonnull %22) #8
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %23) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #8
  br label %140

140:                                              ; preds = %130, %131, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #8
  %141 = load i64, i64* %95, align 8
  %142 = load i64, i64* %97, align 8
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 3
  %145 = inttoptr i64 %141 to %struct.sock_filter*
  %146 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %147 = load %struct.sock_filter*, %struct.sock_filter** %146, align 8
  %148 = icmp ugt %struct.sock_filter* %147, %145
  %149 = ptrtoint %struct.sock_filter* %147 to i64
  br i1 %148, label %150, label %164

150:                                              ; preds = %140
  %151 = inttoptr i64 %141 to i64*
  %152 = zext i32 %2 to i64
  %153 = shl nuw i64 %152, 32
  %154 = shl i64 %4, 24
  %155 = and i64 %154, 4278190080
  %156 = shl i64 %3, 16
  %157 = and i64 %156, 16711680
  %158 = zext i16 %1 to i64
  %159 = or i64 %153, %158
  %160 = or i64 %159, %157
  %161 = or i64 %160, %155
  store i64 %161, i64* %151, align 4
  %162 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %145, i64 1
  %163 = ptrtoint %struct.sock_filter* %162 to i64
  store i64 %163, i64* %95, align 8
  br label %225

164:                                              ; preds = %140
  %165 = add nsw i64 %144, 1
  %166 = icmp ugt i64 %165, 2305843009213693951
  br i1 %166, label %167, label %169

167:                                              ; preds = %164
  %168 = bitcast %"class.sandbox::CodeGen"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %168) #10
  unreachable

169:                                              ; preds = %164
  %170 = bitcast %struct.sock_filter** %146 to i64*
  %171 = sub i64 %149, %142
  %172 = ashr exact i64 %171, 3
  %173 = icmp ult i64 %172, 1152921504606846975
  br i1 %173, label %174, label %182

174:                                              ; preds = %169
  %175 = ashr exact i64 %171, 2
  %176 = icmp ult i64 %175, %165
  %177 = select i1 %176, i64 %165, i64 %175
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %174
  %180 = icmp ugt i64 %177, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  call void @abort() #10
  unreachable

182:                                              ; preds = %179, %169
  %183 = phi i64 [ %177, %179 ], [ 2305843009213693951, %169 ]
  %184 = shl i64 %183, 3
  %185 = call i8* @_Znwm(i64 %184) #9
  %186 = bitcast i8* %185 to %struct.sock_filter*
  br label %187

187:                                              ; preds = %182, %174
  %188 = phi i64 [ %183, %182 ], [ 0, %174 ]
  %189 = phi %struct.sock_filter* [ %186, %182 ], [ null, %174 ]
  %190 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %189, i64 %144
  %191 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %189, i64 %188
  %192 = ptrtoint %struct.sock_filter* %191 to i64
  %193 = bitcast %struct.sock_filter* %190 to i64*
  %194 = zext i32 %2 to i64
  %195 = shl nuw i64 %194, 32
  %196 = shl i64 %4, 24
  %197 = and i64 %196, 4278190080
  %198 = shl i64 %3, 16
  %199 = and i64 %198, 16711680
  %200 = zext i16 %1 to i64
  %201 = or i64 %195, %200
  %202 = or i64 %201, %199
  %203 = or i64 %202, %197
  store i64 %203, i64* %193, align 4
  %204 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %190, i64 1
  %205 = ptrtoint %struct.sock_filter* %204 to i64
  %206 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 0, i32 0, i32 0
  %207 = load %struct.sock_filter*, %struct.sock_filter** %206, align 8
  %208 = load i64, i64* %95, align 8
  %209 = ptrtoint %struct.sock_filter* %207 to i64
  %210 = sub i64 %208, %209
  %211 = ashr exact i64 %210, 3
  %212 = sub nsw i64 0, %211
  %213 = getelementptr inbounds %struct.sock_filter, %struct.sock_filter* %190, i64 %212
  %214 = ptrtoint %struct.sock_filter* %213 to i64
  %215 = icmp sgt i64 %210, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %187
  %217 = bitcast %struct.sock_filter* %213 to i8*
  %218 = bitcast %struct.sock_filter* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %210, i1 false) #8
  %219 = load %struct.sock_filter*, %struct.sock_filter** %206, align 8
  br label %220

220:                                              ; preds = %216, %187
  %221 = phi %struct.sock_filter* [ %207, %187 ], [ %219, %216 ]
  store i64 %214, i64* %97, align 8
  store i64 %205, i64* %95, align 8
  store i64 %192, i64* %170, align 8
  %222 = icmp eq %struct.sock_filter* %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %220
  %224 = bitcast %struct.sock_filter* %221 to i8*
  call void @_ZdlPv(i8* %224) #9
  br label %225

225:                                              ; preds = %150, %220, %223
  %226 = load i64*, i64** %121, align 8
  %227 = getelementptr inbounds %"class.sandbox::CodeGen", %"class.sandbox::CodeGen"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %228 = load i64*, i64** %227, align 8
  %229 = icmp eq i64* %226, %228
  %230 = ptrtoint i64* %228 to i64
  br i1 %229, label %234, label %231

231:                                              ; preds = %225
  store i64 %144, i64* %226, align 8
  %232 = getelementptr inbounds i64, i64* %226, i64 1
  %233 = ptrtoint i64* %232 to i64
  store i64 %233, i64* %122, align 8
  br label %288

234:                                              ; preds = %225
  %235 = ptrtoint i64* %226 to i64
  %236 = load i64, i64* %124, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = add nsw i64 %238, 1
  %240 = icmp ugt i64 %239, 2305843009213693951
  br i1 %240, label %241, label %243

241:                                              ; preds = %234
  %242 = bitcast %"class.std::__1::vector.1"* %120 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %242) #10
  unreachable

243:                                              ; preds = %234
  %244 = bitcast i64** %227 to i64*
  %245 = sub i64 %230, %236
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %243
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %239
  %251 = select i1 %250, i64 %239, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #10
  unreachable

256:                                              ; preds = %253, %243
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %243 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #9
  %260 = bitcast i8* %259 to i64*
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi i64* [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds i64, i64* %263, i64 %238
  %265 = getelementptr inbounds i64, i64* %263, i64 %262
  %266 = ptrtoint i64* %265 to i64
  store i64 %144, i64* %264, align 8
  %267 = getelementptr inbounds i64, i64* %264, i64 1
  %268 = ptrtoint i64* %267 to i64
  %269 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %120, i64 0, i32 0, i32 0
  %270 = load i64*, i64** %269, align 8
  %271 = load i64, i64* %122, align 8
  %272 = ptrtoint i64* %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds i64, i64* %264, i64 %275
  %277 = ptrtoint i64* %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast i64* %276 to i8*
  %281 = bitcast i64* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #8
  %282 = load i64*, i64** %269, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi i64* [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %124, align 8
  store i64 %268, i64* %122, align 8
  store i64 %266, i64* %244, align 8
  %285 = icmp eq i64* %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast i64* %284 to i8*
  call void @_ZdlPv(i8* %287) #9
  br label %288

288:                                              ; preds = %231, %283, %286
  ret i64 %144
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_mEEEEENSD_INS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::tuple"* dereferenceable(24), %"struct.std::__1::pair.16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %64, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %60, %8
  %19 = phi %"class.std::__1::__tree_node"* [ %63, %60 ], [ %6, %8 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %62, %60 ], [ %9, %8 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = icmp ult i16 %11, %22
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = icmp ult i16 %22, %11
  br i1 %25, label %52, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %13, %28
  br i1 %29, label %42, label %30

30:                                               ; preds = %26
  %31 = icmp ult i32 %28, %13
  br i1 %31, label %52, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %15, %34
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = icmp ult i64 %34, %15
  br i1 %37, label %52, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %17, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %38, %32, %26, %18
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %60

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %66

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %17
  br i1 %51, label %52, label %58

52:                                               ; preds = %36, %30, %48, %24
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %66

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %66

60:                                               ; preds = %52, %42
  %61 = phi %"class.std::__1::__tree_node_base"* [ %44, %42 ], [ %54, %52 ]
  %62 = phi %"class.std::__1::__tree_node_base"** [ %43, %42 ], [ %53, %52 ]
  %63 = bitcast %"class.std::__1::__tree_node_base"* %61 to %"class.std::__1::__tree_node"*
  br label %18

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %66

66:                                               ; preds = %46, %56, %58, %64
  %67 = phi %"class.std::__1::__tree_end_node"* [ %4, %64 ], [ %47, %46 ], [ %57, %56 ], [ %59, %58 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %65, %64 ], [ %43, %46 ], [ %53, %56 ], [ %20, %58 ]
  %69 = bitcast %"class.std::__1::__tree_node_base"** %68 to %"class.std::__1::__tree_node"**
  %70 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node"* %70, null
  br i1 %71, label %72, label %101

72:                                               ; preds = %66
  %73 = tail call i8* @_Znwm(i64 64) #9, !noalias !15
  %74 = getelementptr inbounds i8, i8* %73, i64 32
  %75 = bitcast %"struct.std::__1::pair.16"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #8, !noalias !15
  %76 = getelementptr inbounds i8, i8* %73, i64 56
  %77 = bitcast i8* %76 to i64*
  %78 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %2, i64 0, i32 1
  %79 = load i64, i64* %78, align 8, !noalias !15
  store i64 %79, i64* %77, align 8, !noalias !15
  %80 = bitcast i8* %73 to %"class.std::__1::__tree_node"*
  %81 = bitcast i8* %73 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds i8, i8* %73, i64 16
  %83 = bitcast i8* %82 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %67, %"class.std::__1::__tree_end_node"** %83, align 8
  %84 = bitcast %"class.std::__1::__tree_node_base"** %68 to i8**
  store i8* %73, i8** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %72
  %91 = ptrtoint %"class.std::__1::__tree_node_base"* %88 to i64
  %92 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %91, i64* %92, align 8
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  br label %94

94:                                               ; preds = %90, %72
  %95 = phi %"class.std::__1::__tree_node_base"* [ %81, %72 ], [ %93, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %97, %"class.std::__1::__tree_node_base"* %95) #8
  %98 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 1
  store i64 %100, i64* %98, align 8
  br label %101

101:                                              ; preds = %94, %66
  %102 = phi i8 [ 1, %94 ], [ 0, %66 ]
  %103 = phi %"class.std::__1::__tree_node"* [ %80, %94 ], [ %70, %66 ]
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  %105 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %104, 0
  %106 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %105, i8 %102, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %106
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !18
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !18
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !18
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !18
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__19make_pairINS_5tupleIJtjmmEEERKmEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__19make_pairINS_5tupleIJtjmmEEERKmEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS_4pairIS3_mEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJtjmmEEEmEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS_4pairIS3_mEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_"}
!18 = !{i8 0, i8 2}
