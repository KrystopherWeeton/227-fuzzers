; ModuleID = '../../ui/gl/scoped_binders.cc'
source_filename = "../../ui/gl/scoped_binders.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gl::ScopedFramebufferBinder" = type <{ %"class.gl::GLStateRestorer"*, i32, [4 x i8] }>
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.gl::ScopedActiveTexture" = type <{ %"class.gl::GLStateRestorer"*, i32, [4 x i8] }>
%"class.gl::ScopedTextureBinder" = type { %"class.gl::GLStateRestorer"*, i32, i32 }
%"class.gl::ScopedUseProgram" = type <{ %"class.gl::GLStateRestorer"*, i32, [4 x i8] }>
%"class.gl::ScopedVertexAttribArray" = type { %"class.gl::GLStateRestorer"*, i32, i32, i32, i32, i32, i32, i32, i8* }
%"class.gl::ScopedBufferBinder" = type { %"class.gl::GLStateRestorer"*, i32, i32 }
%"class.gl::ScopedViewport" = type { [4 x i32] }
%"class.gl::ScopedColorMask" = type { [4 x i8] }
%"class.gl::ScopedCapability" = type <{ i32, i8, [3 x i8] }>
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.34", %"class.gl::RealGLApi"*, %class.scoped_refptr.40, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.40 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.41", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.gl::GLStateRestorer"* }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.gl::GLVersionInfo"* }

@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8

@_ZN2gl23ScopedFramebufferBinderC1Ej = hidden unnamed_addr alias void (%"class.gl::ScopedFramebufferBinder"*, i32), void (%"class.gl::ScopedFramebufferBinder"*, i32)* @_ZN2gl23ScopedFramebufferBinderC2Ej
@_ZN2gl23ScopedFramebufferBinderD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedFramebufferBinder"*), void (%"class.gl::ScopedFramebufferBinder"*)* @_ZN2gl23ScopedFramebufferBinderD2Ev
@_ZN2gl19ScopedActiveTextureC1Ej = hidden unnamed_addr alias void (%"class.gl::ScopedActiveTexture"*, i32), void (%"class.gl::ScopedActiveTexture"*, i32)* @_ZN2gl19ScopedActiveTextureC2Ej
@_ZN2gl19ScopedActiveTextureD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedActiveTexture"*), void (%"class.gl::ScopedActiveTexture"*)* @_ZN2gl19ScopedActiveTextureD2Ev
@_ZN2gl19ScopedTextureBinderC1Ejj = hidden unnamed_addr alias void (%"class.gl::ScopedTextureBinder"*, i32, i32), void (%"class.gl::ScopedTextureBinder"*, i32, i32)* @_ZN2gl19ScopedTextureBinderC2Ejj
@_ZN2gl19ScopedTextureBinderD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedTextureBinder"*), void (%"class.gl::ScopedTextureBinder"*)* @_ZN2gl19ScopedTextureBinderD2Ev
@_ZN2gl16ScopedUseProgramC1Ej = hidden unnamed_addr alias void (%"class.gl::ScopedUseProgram"*, i32), void (%"class.gl::ScopedUseProgram"*, i32)* @_ZN2gl16ScopedUseProgramC2Ej
@_ZN2gl16ScopedUseProgramD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedUseProgram"*), void (%"class.gl::ScopedUseProgram"*)* @_ZN2gl16ScopedUseProgramD2Ev
@_ZN2gl23ScopedVertexAttribArrayC1EjijciPKv = hidden unnamed_addr alias void (%"class.gl::ScopedVertexAttribArray"*, i32, i32, i32, i8, i32, i8*), void (%"class.gl::ScopedVertexAttribArray"*, i32, i32, i32, i8, i32, i8*)* @_ZN2gl23ScopedVertexAttribArrayC2EjijciPKv
@_ZN2gl23ScopedVertexAttribArrayD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedVertexAttribArray"*), void (%"class.gl::ScopedVertexAttribArray"*)* @_ZN2gl23ScopedVertexAttribArrayD2Ev
@_ZN2gl18ScopedBufferBinderC1Ejj = hidden unnamed_addr alias void (%"class.gl::ScopedBufferBinder"*, i32, i32), void (%"class.gl::ScopedBufferBinder"*, i32, i32)* @_ZN2gl18ScopedBufferBinderC2Ejj
@_ZN2gl18ScopedBufferBinderD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedBufferBinder"*), void (%"class.gl::ScopedBufferBinder"*)* @_ZN2gl18ScopedBufferBinderD2Ev
@_ZN2gl14ScopedViewportC1Eiiii = hidden unnamed_addr alias void (%"class.gl::ScopedViewport"*, i32, i32, i32, i32), void (%"class.gl::ScopedViewport"*, i32, i32, i32, i32)* @_ZN2gl14ScopedViewportC2Eiiii
@_ZN2gl14ScopedViewportD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedViewport"*), void (%"class.gl::ScopedViewport"*)* @_ZN2gl14ScopedViewportD2Ev
@_ZN2gl15ScopedColorMaskC1Ecccc = hidden unnamed_addr alias void (%"class.gl::ScopedColorMask"*, i8, i8, i8, i8), void (%"class.gl::ScopedColorMask"*, i8, i8, i8, i8)* @_ZN2gl15ScopedColorMaskC2Ecccc
@_ZN2gl15ScopedColorMaskD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedColorMask"*), void (%"class.gl::ScopedColorMask"*)* @_ZN2gl15ScopedColorMaskD2Ev
@_ZN2gl16ScopedCapabilityC1Ejh = hidden unnamed_addr alias void (%"class.gl::ScopedCapability"*, i32, i8), void (%"class.gl::ScopedCapability"*, i32, i8)* @_ZN2gl16ScopedCapabilityC2Ejh
@_ZN2gl16ScopedCapabilityD1Ev = hidden unnamed_addr alias void (%"class.gl::ScopedCapability"*), void (%"class.gl::ScopedCapability"*)* @_ZN2gl16ScopedCapabilityD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl23ScopedFramebufferBinderC2Ej(%"class.gl::ScopedFramebufferBinder"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ScopedFramebufferBinder", %"class.gl::ScopedFramebufferBinder"* %0, i64 0, i32 0
  %4 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %5 = icmp eq %"class.gl::GLContext"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  store %"class.gl::GLStateRestorer"* null, %"class.gl::GLStateRestorer"** %3, align 8
  %7 = getelementptr inbounds %"class.gl::ScopedFramebufferBinder", %"class.gl::ScopedFramebufferBinder"* %0, i64 0, i32 1
  store i32 -1, i32* %7, align 8
  br label %13

8:                                                ; preds = %2
  %9 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %10 = tail call %"class.gl::GLStateRestorer"* @_ZN2gl9GLContext18GetGLStateRestorerEv(%"class.gl::GLContext"* %9) #3
  store %"class.gl::GLStateRestorer"* %10, %"class.gl::GLStateRestorer"** %3, align 8
  %11 = getelementptr inbounds %"class.gl::ScopedFramebufferBinder", %"class.gl::ScopedFramebufferBinder"* %0, i64 0, i32 1
  store i32 -1, i32* %11, align 8
  %12 = icmp eq %"class.gl::GLStateRestorer"* %10, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %6, %8
  %14 = phi i32* [ %7, %6 ], [ %11, %8 ]
  %15 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %16 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %15, i64 0, i32 0
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #3
  %18 = bitcast i8* %17 to %"class.gl::GLApi"**
  %19 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %18, align 8
  %20 = bitcast %"class.gl::GLApi"* %19 to void (%"class.gl::GLApi"*, i32, i32*)***
  %21 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %21, i64 193
  %23 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %22, align 8
  tail call void %23(%"class.gl::GLApi"* %19, i32 36006, i32* %14) #3
  br label %24

24:                                               ; preds = %8, %13
  %25 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %26 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %25, i64 0, i32 0
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #3
  %28 = bitcast i8* %27 to %"class.gl::GLApi"**
  %29 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %28, align 8
  %30 = bitcast %"class.gl::GLApi"* %29 to void (%"class.gl::GLApi"*, i32, i32)***
  %31 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %31, i64 15
  %33 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %32, align 8
  tail call void %33(%"class.gl::GLApi"* %29, i32 36160, i32 %1) #3
  ret void
}

declare %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() local_unnamed_addr #1

declare %"class.gl::GLStateRestorer"* @_ZN2gl9GLContext18GetGLStateRestorerEv(%"class.gl::GLContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl23ScopedFramebufferBinderD2Ev(%"class.gl::ScopedFramebufferBinder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ScopedFramebufferBinder", %"class.gl::ScopedFramebufferBinder"* %0, i64 0, i32 0
  %3 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %2, align 8
  %4 = icmp eq %"class.gl::GLStateRestorer"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.gl::GLStateRestorer"* %3 to void (%"class.gl::GLStateRestorer"*)***
  %7 = load void (%"class.gl::GLStateRestorer"*)**, void (%"class.gl::GLStateRestorer"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %7, i64 8
  %9 = load void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %8, align 8
  tail call void %9(%"class.gl::GLStateRestorer"* nonnull %3) #3
  br label %22

10:                                               ; preds = %1
  %11 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #3
  %14 = bitcast i8* %13 to %"class.gl::GLApi"**
  %15 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::ScopedFramebufferBinder", %"class.gl::ScopedFramebufferBinder"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"class.gl::GLApi"* %15 to void (%"class.gl::GLApi"*, i32, i32)***
  %19 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %19, i64 15
  %21 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %20, align 8
  tail call void %21(%"class.gl::GLApi"* %15, i32 36160, i32 %17) #3
  br label %22

22:                                               ; preds = %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19ScopedActiveTextureC2Ej(%"class.gl::ScopedActiveTexture"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ScopedActiveTexture", %"class.gl::ScopedActiveTexture"* %0, i64 0, i32 0
  %4 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %5 = icmp eq %"class.gl::GLContext"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  store %"class.gl::GLStateRestorer"* null, %"class.gl::GLStateRestorer"** %3, align 8
  %7 = getelementptr inbounds %"class.gl::ScopedActiveTexture", %"class.gl::ScopedActiveTexture"* %0, i64 0, i32 1
  store i32 -1, i32* %7, align 8
  br label %13

8:                                                ; preds = %2
  %9 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %10 = tail call %"class.gl::GLStateRestorer"* @_ZN2gl9GLContext18GetGLStateRestorerEv(%"class.gl::GLContext"* %9) #3
  store %"class.gl::GLStateRestorer"* %10, %"class.gl::GLStateRestorer"** %3, align 8
  %11 = getelementptr inbounds %"class.gl::ScopedActiveTexture", %"class.gl::ScopedActiveTexture"* %0, i64 0, i32 1
  store i32 -1, i32* %11, align 8
  %12 = icmp eq %"class.gl::GLStateRestorer"* %10, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %6, %8
  %14 = phi i32* [ %7, %6 ], [ %11, %8 ]
  %15 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %16 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %15, i64 0, i32 0
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #3
  %18 = bitcast i8* %17 to %"class.gl::GLApi"**
  %19 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %18, align 8
  %20 = bitcast %"class.gl::GLApi"* %19 to void (%"class.gl::GLApi"*, i32, i32*)***
  %21 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %21, i64 193
  %23 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %22, align 8
  tail call void %23(%"class.gl::GLApi"* %19, i32 34016, i32* %14) #3
  br label %24

24:                                               ; preds = %8, %13
  %25 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %26 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %25, i64 0, i32 0
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #3
  %28 = bitcast i8* %27 to %"class.gl::GLApi"**
  %29 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %28, align 8
  %30 = bitcast %"class.gl::GLApi"* %29 to void (%"class.gl::GLApi"*, i32)***
  %31 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %31, i64 4
  %33 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %32, align 8
  tail call void %33(%"class.gl::GLApi"* %29, i32 %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19ScopedActiveTextureD2Ev(%"class.gl::ScopedActiveTexture"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ScopedActiveTexture", %"class.gl::ScopedActiveTexture"* %0, i64 0, i32 0
  %3 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %2, align 8
  %4 = icmp eq %"class.gl::GLStateRestorer"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.gl::GLStateRestorer"* %3 to void (%"class.gl::GLStateRestorer"*)***
  %7 = load void (%"class.gl::GLStateRestorer"*)**, void (%"class.gl::GLStateRestorer"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %7, i64 5
  %9 = load void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %8, align 8
  tail call void %9(%"class.gl::GLStateRestorer"* nonnull %3) #3
  br label %22

10:                                               ; preds = %1
  %11 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #3
  %14 = bitcast i8* %13 to %"class.gl::GLApi"**
  %15 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::ScopedActiveTexture", %"class.gl::ScopedActiveTexture"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"class.gl::GLApi"* %15 to void (%"class.gl::GLApi"*, i32)***
  %19 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %19, i64 4
  %21 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %20, align 8
  tail call void %21(%"class.gl::GLApi"* %15, i32 %17) #3
  br label %22

22:                                               ; preds = %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19ScopedTextureBinderC2Ejj(%"class.gl::ScopedTextureBinder"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 0
  %5 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %6 = icmp eq %"class.gl::GLContext"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  store %"class.gl::GLStateRestorer"* null, %"class.gl::GLStateRestorer"** %4, align 8
  %8 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 2
  store i32 -1, i32* %9, align 4
  br label %16

10:                                               ; preds = %3
  %11 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %12 = tail call %"class.gl::GLStateRestorer"* @_ZN2gl9GLContext18GetGLStateRestorerEv(%"class.gl::GLContext"* %11) #3
  store %"class.gl::GLStateRestorer"* %12, %"class.gl::GLStateRestorer"** %4, align 8
  %13 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 1
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 2
  store i32 -1, i32* %14, align 4
  %15 = icmp eq %"class.gl::GLStateRestorer"* %12, null
  br i1 %15, label %16, label %34

16:                                               ; preds = %7, %10
  %17 = phi i32* [ %9, %7 ], [ %14, %10 ]
  %18 = phi i32* [ %8, %7 ], [ %13, %10 ]
  switch i32 %1, label %23 [
    i32 3553, label %19
    i32 34067, label %20
    i32 36197, label %21
    i32 34037, label %22
  ]

19:                                               ; preds = %16
  br label %23

20:                                               ; preds = %16
  br label %23

21:                                               ; preds = %16
  br label %23

22:                                               ; preds = %16
  br label %23

23:                                               ; preds = %16, %22, %21, %20, %19
  %24 = phi i32 [ 0, %16 ], [ 34038, %22 ], [ 36199, %21 ], [ 34068, %20 ], [ 32873, %19 ]
  %25 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %26 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %25, i64 0, i32 0
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #3
  %28 = bitcast i8* %27 to %"class.gl::GLApi"**
  %29 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %28, align 8
  %30 = bitcast %"class.gl::GLApi"* %29 to void (%"class.gl::GLApi"*, i32, i32*)***
  %31 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %31, i64 193
  %33 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %32, align 8
  tail call void %33(%"class.gl::GLApi"* %29, i32 %24, i32* %17) #3
  br label %34

34:                                               ; preds = %10, %23
  %35 = phi i32* [ %13, %10 ], [ %18, %23 ]
  %36 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %37 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %36, i64 0, i32 0
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #3
  %39 = bitcast i8* %38 to %"class.gl::GLApi"**
  %40 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %39, align 8
  %41 = load i32, i32* %35, align 8
  %42 = bitcast %"class.gl::GLApi"* %40 to void (%"class.gl::GLApi"*, i32, i32)***
  %43 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %43, i64 20
  %45 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %44, align 8
  tail call void %45(%"class.gl::GLApi"* %40, i32 %41, i32 %2) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19ScopedTextureBinderD2Ev(%"class.gl::ScopedTextureBinder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 0
  %3 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %2, align 8
  %4 = icmp eq %"class.gl::GLStateRestorer"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = bitcast %"class.gl::GLStateRestorer"* %3 to void (%"class.gl::GLStateRestorer"*, i32)***
  %9 = load void (%"class.gl::GLStateRestorer"*, i32)**, void (%"class.gl::GLStateRestorer"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*, i32)*, void (%"class.gl::GLStateRestorer"*, i32)** %9, i64 6
  %11 = load void (%"class.gl::GLStateRestorer"*, i32)*, void (%"class.gl::GLStateRestorer"*, i32)** %10, align 8
  tail call void %11(%"class.gl::GLStateRestorer"* nonnull %3, i32 %7) #3
  br label %26

12:                                               ; preds = %1
  %13 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %14 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %13, i64 0, i32 0
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #3
  %16 = bitcast i8* %15 to %"class.gl::GLApi"**
  %17 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.gl::ScopedTextureBinder", %"class.gl::ScopedTextureBinder"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %"class.gl::GLApi"* %17 to void (%"class.gl::GLApi"*, i32, i32)***
  %23 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %23, i64 20
  %25 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %24, align 8
  tail call void %25(%"class.gl::GLApi"* %17, i32 %19, i32 %21) #3
  br label %26

26:                                               ; preds = %12, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16ScopedUseProgramC2Ej(%"class.gl::ScopedUseProgram"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ScopedUseProgram", %"class.gl::ScopedUseProgram"* %0, i64 0, i32 0
  %4 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %5 = icmp eq %"class.gl::GLContext"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  store %"class.gl::GLStateRestorer"* null, %"class.gl::GLStateRestorer"** %3, align 8
  %7 = getelementptr inbounds %"class.gl::ScopedUseProgram", %"class.gl::ScopedUseProgram"* %0, i64 0, i32 1
  store i32 -1, i32* %7, align 8
  br label %13

8:                                                ; preds = %2
  %9 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %10 = tail call %"class.gl::GLStateRestorer"* @_ZN2gl9GLContext18GetGLStateRestorerEv(%"class.gl::GLContext"* %9) #3
  store %"class.gl::GLStateRestorer"* %10, %"class.gl::GLStateRestorer"** %3, align 8
  %11 = getelementptr inbounds %"class.gl::ScopedUseProgram", %"class.gl::ScopedUseProgram"* %0, i64 0, i32 1
  store i32 -1, i32* %11, align 8
  %12 = icmp eq %"class.gl::GLStateRestorer"* %10, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %6, %8
  %14 = phi i32* [ %7, %6 ], [ %11, %8 ]
  %15 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %16 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %15, i64 0, i32 0
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #3
  %18 = bitcast i8* %17 to %"class.gl::GLApi"**
  %19 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %18, align 8
  %20 = bitcast %"class.gl::GLApi"* %19 to void (%"class.gl::GLApi"*, i32, i32*)***
  %21 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %21, i64 193
  %23 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %22, align 8
  tail call void %23(%"class.gl::GLApi"* %19, i32 35725, i32* %14) #3
  br label %24

24:                                               ; preds = %8, %13
  %25 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %26 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %25, i64 0, i32 0
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #3
  %28 = bitcast i8* %27 to %"class.gl::GLApi"**
  %29 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %28, align 8
  %30 = bitcast %"class.gl::GLApi"* %29 to void (%"class.gl::GLApi"*, i32)***
  %31 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %31, i64 478
  %33 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %32, align 8
  tail call void %33(%"class.gl::GLApi"* %29, i32 %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16ScopedUseProgramD2Ev(%"class.gl::ScopedUseProgram"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ScopedUseProgram", %"class.gl::ScopedUseProgram"* %0, i64 0, i32 0
  %3 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %2, align 8
  %4 = icmp eq %"class.gl::GLStateRestorer"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.gl::GLStateRestorer"* %3 to void (%"class.gl::GLStateRestorer"*)***
  %7 = load void (%"class.gl::GLStateRestorer"*)**, void (%"class.gl::GLStateRestorer"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %7, i64 9
  %9 = load void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %8, align 8
  tail call void %9(%"class.gl::GLStateRestorer"* nonnull %3) #3
  br label %22

10:                                               ; preds = %1
  %11 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #3
  %14 = bitcast i8* %13 to %"class.gl::GLApi"**
  %15 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::ScopedUseProgram", %"class.gl::ScopedUseProgram"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"class.gl::GLApi"* %15 to void (%"class.gl::GLApi"*, i32)***
  %19 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %19, i64 478
  %21 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %20, align 8
  tail call void %21(%"class.gl::GLApi"* %15, i32 %17) #3
  br label %22

22:                                               ; preds = %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl23ScopedVertexAttribArrayC2EjijciPKv(%"class.gl::ScopedVertexAttribArray"*, i32, i32, i32, i8 signext, i32, i8*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 0
  %9 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %10 = icmp eq %"class.gl::GLContext"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %13 = tail call %"class.gl::GLStateRestorer"* @_ZN2gl9GLContext18GetGLStateRestorerEv(%"class.gl::GLContext"* %12) #3
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi %"class.gl::GLStateRestorer"* [ %13, %11 ], [ null, %7 ]
  store %"class.gl::GLStateRestorer"* %15, %"class.gl::GLStateRestorer"** %8, align 8
  %16 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 2
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 3
  store i32 %1, i32* %18, align 8
  %19 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 4
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, <4 x i32>* %20, align 4
  %21 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 8
  store i8* null, i8** %21, align 8
  %22 = icmp eq %"class.gl::GLStateRestorer"* %15, null
  br i1 %22, label %23, label %90

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 5
  %27 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %28 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %27, i64 0, i32 0
  %29 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %28) #3
  %30 = bitcast i8* %29 to %"class.gl::GLApi"**
  %31 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %30, align 8
  %32 = bitcast %"class.gl::GLApi"* %31 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %33 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %33, i64 270
  %35 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %34, align 8
  tail call void %35(%"class.gl::GLApi"* %31, i32 %1, i32 34975, i32* %16) #3
  %36 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %37 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %36, i64 0, i32 0
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #3
  %39 = bitcast i8* %38 to %"class.gl::GLApi"**
  %40 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %39, align 8
  %41 = bitcast %"class.gl::GLApi"* %40 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %42 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %42, i64 270
  %44 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %43, align 8
  tail call void %44(%"class.gl::GLApi"* %40, i32 %1, i32 34338, i32* %17) #3
  %45 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %46 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %45, i64 0, i32 0
  %47 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %46) #3
  %48 = bitcast i8* %47 to %"class.gl::GLApi"**
  %49 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %48, align 8
  %50 = bitcast %"class.gl::GLApi"* %49 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %51 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %51, i64 270
  %53 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %52, align 8
  tail call void %53(%"class.gl::GLApi"* %49, i32 %1, i32 34339, i32* %19) #3
  %54 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %55 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %54, i64 0, i32 0
  %56 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %55) #3
  %57 = bitcast i8* %56 to %"class.gl::GLApi"**
  %58 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %57, align 8
  %59 = bitcast %"class.gl::GLApi"* %58 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %60 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %60, i64 270
  %62 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %61, align 8
  tail call void %62(%"class.gl::GLApi"* %58, i32 %1, i32 34341, i32* %26) #3
  %63 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %64 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %63, i64 0, i32 0
  %65 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %64) #3
  %66 = bitcast i8* %65 to %"class.gl::GLApi"**
  %67 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %66, align 8
  %68 = bitcast %"class.gl::GLApi"* %67 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %69 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %69, i64 270
  %71 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %70, align 8
  tail call void %71(%"class.gl::GLApi"* %67, i32 %1, i32 34922, i32* %25) #3
  %72 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %73 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %72, i64 0, i32 0
  %74 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %73) #3
  %75 = bitcast i8* %74 to %"class.gl::GLApi"**
  %76 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %75, align 8
  %77 = bitcast %"class.gl::GLApi"* %76 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %78 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %78, i64 270
  %80 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %79, align 8
  tail call void %80(%"class.gl::GLApi"* %76, i32 %1, i32 34340, i32* %24) #3
  %81 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %82 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %81, i64 0, i32 0
  %83 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %82) #3
  %84 = bitcast i8* %83 to %"class.gl::GLApi"**
  %85 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %84, align 8
  %86 = bitcast %"class.gl::GLApi"* %85 to void (%"class.gl::GLApi"*, i32, i32, i8**)***
  %87 = load void (%"class.gl::GLApi"*, i32, i32, i8**)**, void (%"class.gl::GLApi"*, i32, i32, i8**)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i8**)*, void (%"class.gl::GLApi"*, i32, i32, i8**)** %87, i64 272
  %89 = load void (%"class.gl::GLApi"*, i32, i32, i8**)*, void (%"class.gl::GLApi"*, i32, i32, i8**)** %88, align 8
  tail call void %89(%"class.gl::GLApi"* %85, i32 %1, i32 34373, i8** %21) #3
  br label %90

90:                                               ; preds = %14, %23
  %91 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %92 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %91, i64 0, i32 0
  %93 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %92) #3
  %94 = bitcast i8* %93 to %"class.gl::GLApi"**
  %95 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %94, align 8
  %96 = bitcast %"class.gl::GLApi"* %95 to void (%"class.gl::GLApi"*, i32)***
  %97 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %97, i64 127
  %99 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %98, align 8
  tail call void %99(%"class.gl::GLApi"* %95, i32 %1) #3
  %100 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %101 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %100, i64 0, i32 0
  %102 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %101) #3
  %103 = bitcast i8* %102 to %"class.gl::GLApi"**
  %104 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %103, align 8
  %105 = bitcast %"class.gl::GLApi"* %104 to void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)***
  %106 = load void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)** %106, i64 499
  %108 = load void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)** %107, align 8
  tail call void %108(%"class.gl::GLApi"* %104, i32 %1, i32 %2, i32 %3, i8 zeroext %4, i32 %5, i8* %6) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl23ScopedVertexAttribArrayD2Ev(%"class.gl::ScopedVertexAttribArray"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.gl::ScopedBufferBinder", align 8
  %3 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 0
  %4 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %3, align 8
  %5 = icmp eq %"class.gl::GLStateRestorer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.gl::GLStateRestorer"* %4 to void (%"class.gl::GLStateRestorer"*, i32)***
  %10 = load void (%"class.gl::GLStateRestorer"*, i32)**, void (%"class.gl::GLStateRestorer"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*, i32)*, void (%"class.gl::GLStateRestorer"*, i32)** %10, i64 11
  %12 = load void (%"class.gl::GLStateRestorer"*, i32)*, void (%"class.gl::GLStateRestorer"*, i32)** %11, align 8
  tail call void %12(%"class.gl::GLStateRestorer"* nonnull %4, i32 %8) #3
  br label %79

13:                                               ; preds = %1
  %14 = bitcast %"class.gl::ScopedBufferBinder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #3
  %15 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %2, i64 0, i32 0
  %16 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %2, i64 0, i32 2
  %18 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 1
  %19 = bitcast %"class.gl::ScopedBufferBinder"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load i32, i32* %18, align 8
  call void @_ZN2gl18ScopedBufferBinderC2Ejj(%"class.gl::ScopedBufferBinder"* nonnull %2, i32 34962, i32 %20)
  %21 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %22 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %21, i64 0, i32 0
  %23 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #3
  %24 = bitcast i8* %23 to %"class.gl::GLApi"**
  %25 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %24, align 8
  %26 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 5
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 6
  %33 = load i32, i32* %32, align 4
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 8
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.gl::GLApi"* %25 to void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)***
  %40 = load void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)** %40, i64 499
  %42 = load void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i8, i32, i8*)** %41, align 8
  call void %42(%"class.gl::GLApi"* %25, i32 %27, i32 %29, i32 %31, i8 zeroext %34, i32 %36, i8* %38) #3
  %43 = getelementptr inbounds %"class.gl::ScopedVertexAttribArray", %"class.gl::ScopedVertexAttribArray"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %57

46:                                               ; preds = %13
  %47 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %48 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %47, i64 0, i32 0
  %49 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #3
  %50 = bitcast i8* %49 to %"class.gl::GLApi"**
  %51 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %50, align 8
  %52 = load i32, i32* %26, align 8
  %53 = bitcast %"class.gl::GLApi"* %51 to void (%"class.gl::GLApi"*, i32)***
  %54 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %54, i64 108
  %56 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %55, align 8
  call void %56(%"class.gl::GLApi"* %51, i32 %52) #3
  br label %57

57:                                               ; preds = %46, %13
  %58 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %15, align 8
  %59 = icmp eq %"class.gl::GLStateRestorer"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %57
  %61 = load i32, i32* %16, align 8
  %62 = bitcast %"class.gl::GLStateRestorer"* %58 to void (%"class.gl::GLStateRestorer"*, i32)***
  %63 = load void (%"class.gl::GLStateRestorer"*, i32)**, void (%"class.gl::GLStateRestorer"*, i32)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*, i32)*, void (%"class.gl::GLStateRestorer"*, i32)** %63, i64 10
  %65 = load void (%"class.gl::GLStateRestorer"*, i32)*, void (%"class.gl::GLStateRestorer"*, i32)** %64, align 8
  call void %65(%"class.gl::GLStateRestorer"* nonnull %58, i32 %61) #3
  br label %78

66:                                               ; preds = %57
  %67 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %68 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %67, i64 0, i32 0
  %69 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %68) #3
  %70 = bitcast i8* %69 to %"class.gl::GLApi"**
  %71 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %70, align 8
  %72 = load i32, i32* %16, align 8
  %73 = load i32, i32* %17, align 4
  %74 = bitcast %"class.gl::GLApi"* %71 to void (%"class.gl::GLApi"*, i32, i32)***
  %75 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %75, i64 9
  %77 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %76, align 8
  call void %77(%"class.gl::GLApi"* %71, i32 %72, i32 %73) #3
  br label %78

78:                                               ; preds = %60, %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #3
  br label %79

79:                                               ; preds = %78, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl18ScopedBufferBinderC2Ejj(%"class.gl::ScopedBufferBinder"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 0
  %5 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %6 = icmp eq %"class.gl::GLContext"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  store %"class.gl::GLStateRestorer"* null, %"class.gl::GLStateRestorer"** %4, align 8
  %8 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 2
  store i32 -1, i32* %9, align 4
  br label %16

10:                                               ; preds = %3
  %11 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #3
  %12 = tail call %"class.gl::GLStateRestorer"* @_ZN2gl9GLContext18GetGLStateRestorerEv(%"class.gl::GLContext"* %11) #3
  store %"class.gl::GLStateRestorer"* %12, %"class.gl::GLStateRestorer"** %4, align 8
  %13 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 1
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 2
  store i32 -1, i32* %14, align 4
  %15 = icmp eq %"class.gl::GLStateRestorer"* %12, null
  br i1 %15, label %16, label %32

16:                                               ; preds = %7, %10
  %17 = phi i32* [ %9, %7 ], [ %14, %10 ]
  %18 = phi i32* [ %8, %7 ], [ %13, %10 ]
  %19 = icmp eq i32 %1, 35052
  %20 = select i1 %19, i32 35055, i32 0
  %21 = icmp eq i32 %1, 34962
  %22 = select i1 %21, i32 34964, i32 %20
  %23 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %24 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %23, i64 0, i32 0
  %25 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %24) #3
  %26 = bitcast i8* %25 to %"class.gl::GLApi"**
  %27 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %26, align 8
  %28 = bitcast %"class.gl::GLApi"* %27 to void (%"class.gl::GLApi"*, i32, i32*)***
  %29 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %29, i64 193
  %31 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %30, align 8
  tail call void %31(%"class.gl::GLApi"* %27, i32 %22, i32* %17) #3
  br label %32

32:                                               ; preds = %10, %16
  %33 = phi i32* [ %13, %10 ], [ %18, %16 ]
  %34 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %35 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %34, i64 0, i32 0
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #3
  %37 = bitcast i8* %36 to %"class.gl::GLApi"**
  %38 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %37, align 8
  %39 = load i32, i32* %33, align 8
  %40 = bitcast %"class.gl::GLApi"* %38 to void (%"class.gl::GLApi"*, i32, i32)***
  %41 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %41, i64 9
  %43 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %42, align 8
  tail call void %43(%"class.gl::GLApi"* %38, i32 %39, i32 %2) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl18ScopedBufferBinderD2Ev(%"class.gl::ScopedBufferBinder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 0
  %3 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %2, align 8
  %4 = icmp eq %"class.gl::GLStateRestorer"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = bitcast %"class.gl::GLStateRestorer"* %3 to void (%"class.gl::GLStateRestorer"*, i32)***
  %9 = load void (%"class.gl::GLStateRestorer"*, i32)**, void (%"class.gl::GLStateRestorer"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*, i32)*, void (%"class.gl::GLStateRestorer"*, i32)** %9, i64 10
  %11 = load void (%"class.gl::GLStateRestorer"*, i32)*, void (%"class.gl::GLStateRestorer"*, i32)** %10, align 8
  tail call void %11(%"class.gl::GLStateRestorer"* nonnull %3, i32 %7) #3
  br label %26

12:                                               ; preds = %1
  %13 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %14 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %13, i64 0, i32 0
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #3
  %16 = bitcast i8* %15 to %"class.gl::GLApi"**
  %17 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.gl::ScopedBufferBinder", %"class.gl::ScopedBufferBinder"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %"class.gl::GLApi"* %17 to void (%"class.gl::GLApi"*, i32, i32)***
  %23 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %23, i64 9
  %25 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %24, align 8
  tail call void %25(%"class.gl::GLApi"* %17, i32 %19, i32 %21) #3
  br label %26

26:                                               ; preds = %12, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14ScopedViewportC2Eiiii(%"class.gl::ScopedViewport"*, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.gl::ScopedViewport"* %0 to i8*
  %7 = getelementptr inbounds %"class.gl::ScopedViewport", %"class.gl::ScopedViewport"* %0, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false)
  %8 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %9 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %8, i64 0, i32 0
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #3
  %11 = bitcast i8* %10 to %"class.gl::GLApi"**
  %12 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %11, align 8
  %13 = bitcast %"class.gl::GLApi"* %12 to void (%"class.gl::GLApi"*, i32, i32*)***
  %14 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %14, i64 193
  %16 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %15, align 8
  tail call void %16(%"class.gl::GLApi"* %12, i32 2978, i32* %7) #3
  %17 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %18 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %17, i64 0, i32 0
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #3
  %20 = bitcast i8* %19 to %"class.gl::GLApi"**
  %21 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %20, align 8
  %22 = bitcast %"class.gl::GLApi"* %21 to void (%"class.gl::GLApi"*, i32, i32, i32, i32)***
  %23 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32)** %23, i64 501
  %25 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32)** %24, align 8
  tail call void %25(%"class.gl::GLApi"* %21, i32 %1, i32 %2, i32 %3, i32 %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14ScopedViewportD2Ev(%"class.gl::ScopedViewport"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #3
  %5 = bitcast i8* %4 to %"class.gl::GLApi"**
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::ScopedViewport", %"class.gl::ScopedViewport"* %0, i64 0, i32 0, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gl::ScopedViewport", %"class.gl::ScopedViewport"* %0, i64 0, i32 0, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gl::ScopedViewport", %"class.gl::ScopedViewport"* %0, i64 0, i32 0, i64 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gl::ScopedViewport", %"class.gl::ScopedViewport"* %0, i64 0, i32 0, i64 3
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.gl::GLApi"* %6 to void (%"class.gl::GLApi"*, i32, i32, i32, i32)***
  %16 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32)** %16, i64 501
  %18 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32)** %17, align 8
  tail call void %18(%"class.gl::GLApi"* %6, i32 %8, i32 %10, i32 %12, i32 %14) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ScopedColorMaskC2Ecccc(%"class.gl::ScopedColorMask"*, i8 signext, i8 signext, i8 signext, i8 signext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gl::ScopedColorMask", %"class.gl::ScopedColorMask"* %0, i64 0, i32 0, i64 0
  %7 = bitcast %"class.gl::ScopedColorMask"* %0 to i32*
  store i32 0, i32* %7, align 1
  %8 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %9 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %8, i64 0, i32 0
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #3
  %11 = bitcast i8* %10 to %"class.gl::GLApi"**
  %12 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %11, align 8
  %13 = bitcast %"class.gl::GLApi"* %12 to void (%"class.gl::GLApi"*, i32, i8*)***
  %14 = load void (%"class.gl::GLApi"*, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i8*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i8*)** %14, i64 169
  %16 = load void (%"class.gl::GLApi"*, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i8*)** %15, align 8
  tail call void %16(%"class.gl::GLApi"* %12, i32 3107, i8* %6) #3
  %17 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %18 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %17, i64 0, i32 0
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #3
  %20 = bitcast i8* %19 to %"class.gl::GLApi"**
  %21 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %20, align 8
  %22 = bitcast %"class.gl::GLApi"* %21 to void (%"class.gl::GLApi"*, i8, i8, i8, i8)***
  %23 = load void (%"class.gl::GLApi"*, i8, i8, i8, i8)**, void (%"class.gl::GLApi"*, i8, i8, i8, i8)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLApi"*, i8, i8, i8, i8)*, void (%"class.gl::GLApi"*, i8, i8, i8, i8)** %23, i64 52
  %25 = load void (%"class.gl::GLApi"*, i8, i8, i8, i8)*, void (%"class.gl::GLApi"*, i8, i8, i8, i8)** %24, align 8
  tail call void %25(%"class.gl::GLApi"* %21, i8 zeroext %1, i8 zeroext %2, i8 zeroext %3, i8 zeroext %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15ScopedColorMaskD2Ev(%"class.gl::ScopedColorMask"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #3
  %5 = bitcast i8* %4 to %"class.gl::GLApi"**
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::ScopedColorMask", %"class.gl::ScopedColorMask"* %0, i64 0, i32 0, i64 0
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.gl::ScopedColorMask", %"class.gl::ScopedColorMask"* %0, i64 0, i32 0, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds %"class.gl::ScopedColorMask", %"class.gl::ScopedColorMask"* %0, i64 0, i32 0, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds %"class.gl::ScopedColorMask", %"class.gl::ScopedColorMask"* %0, i64 0, i32 0, i64 3
  %14 = load i8, i8* %13, align 1
  %15 = bitcast %"class.gl::GLApi"* %6 to void (%"class.gl::GLApi"*, i8, i8, i8, i8)***
  %16 = load void (%"class.gl::GLApi"*, i8, i8, i8, i8)**, void (%"class.gl::GLApi"*, i8, i8, i8, i8)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GLApi"*, i8, i8, i8, i8)*, void (%"class.gl::GLApi"*, i8, i8, i8, i8)** %16, i64 52
  %18 = load void (%"class.gl::GLApi"*, i8, i8, i8, i8)*, void (%"class.gl::GLApi"*, i8, i8, i8, i8)** %17, align 8
  tail call void %18(%"class.gl::GLApi"* %6, i8 zeroext %8, i8 zeroext %10, i8 zeroext %12, i8 zeroext %14) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16ScopedCapabilityC2Ejh(%"class.gl::ScopedCapability"* nocapture, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::ScopedCapability", %"class.gl::ScopedCapability"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %6 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %5, i64 0, i32 0
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #3
  %8 = bitcast i8* %7 to %"class.gl::GLApi"**
  %9 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %8, align 8
  %10 = load i32, i32* %4, align 4
  %11 = bitcast %"class.gl::GLApi"* %9 to i8 (%"class.gl::GLApi"*, i32)***
  %12 = load i8 (%"class.gl::GLApi"*, i32)**, i8 (%"class.gl::GLApi"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i8 (%"class.gl::GLApi"*, i32)*, i8 (%"class.gl::GLApi"*, i32)** %12, i64 286
  %14 = load i8 (%"class.gl::GLApi"*, i32)*, i8 (%"class.gl::GLApi"*, i32)** %13, align 8
  %15 = tail call zeroext i8 %14(%"class.gl::GLApi"* %9, i32 %10) #3
  %16 = getelementptr inbounds %"class.gl::ScopedCapability", %"class.gl::ScopedCapability"* %0, i64 0, i32 1
  store i8 %15, i8* %16, align 4
  %17 = icmp eq i8 %2, 1
  %18 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %19 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %18, i64 0, i32 0
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #3
  %21 = bitcast i8* %20 to %"class.gl::GLApi"**
  %22 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %21, align 8
  %23 = bitcast %"class.gl::GLApi"* %22 to void (%"class.gl::GLApi"*, i32)***
  %24 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %23, align 8
  br i1 %17, label %25, label %28

25:                                               ; preds = %3
  %26 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %24, i64 125
  %27 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %26, align 8
  tail call void %27(%"class.gl::GLApi"* %22, i32 %1) #3
  br label %31

28:                                               ; preds = %3
  %29 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %24, i64 105
  %30 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %29, align 8
  tail call void %30(%"class.gl::GLApi"* %22, i32 %1) #3
  br label %31

31:                                               ; preds = %28, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16ScopedCapabilityD2Ev(%"class.gl::ScopedCapability"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ScopedCapability", %"class.gl::ScopedCapability"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 1
  %5 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %6 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %5, i64 0, i32 0
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #3
  %8 = bitcast i8* %7 to %"class.gl::GLApi"**
  %9 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::ScopedCapability", %"class.gl::ScopedCapability"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.gl::GLApi"* %9 to void (%"class.gl::GLApi"*, i32)***
  %13 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %12, align 8
  br i1 %4, label %14, label %17

14:                                               ; preds = %1
  %15 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %13, i64 125
  %16 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %15, align 8
  tail call void %16(%"class.gl::GLApi"* %9, i32 %11) #3
  br label %20

17:                                               ; preds = %1
  %18 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %13, i64 105
  %19 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %18, align 8
  tail call void %19(%"class.gl::GLApi"* %9, i32 %11) #3
  br label %20

20:                                               ; preds = %17, %14
  ret void
}

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
