; ModuleID = '../../third_party/skia/modules/skottie/src/Camera.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/Camera.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkV3 = type { float, float, float }
%"class.skottie::internal::CameraAdaper" = type { %"class.skottie::internal::TransformAdapter3D.base", %struct.SkSize, i32, float, [4 x i8] }
%"class.skottie::internal::TransformAdapter3D.base" = type <{ %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::VectorValue", %"class.skottie::VectorValue", %"class.skottie::VectorValue", %"class.skottie::VectorValue", float, float, float }>
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.2 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp*, %class.sk_sp*, %"class.std::__1::__compressed_pair" }
%class.sk_sp = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp* }
%class.sk_sp.2 = type { %"class.sksg::Matrix"* }
%"class.sksg::Matrix" = type { %"class.sksg::Transform.base", %class.SkM44, [4 x i8] }
%"class.sksg::Transform.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkM44 = type { [16 x float] }
%"class.skottie::VectorValue" = type { %"class.std::__1::vector.4" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { float*, float*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { float* }
%struct.SkSize = type { float, float }
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp.11, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.13, %class.sk_sp.14, %class.sk_sp.15, %class.sk_sp.16, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.20, %class.SkTHashMap.29 }
%class.sk_sp.11 = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.12 }
%class.sk_sp.12 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.13 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.14 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.15 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.16 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.29 = type { %class.SkTHashTable.30 }
%class.SkTHashTable.30 = type { i32, i32, %class.SkAutoTArray.31 }
%class.SkAutoTArray.31 = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::TransformAdapter3D" = type <{ %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::VectorValue", %"class.skottie::VectorValue", %"class.skottie::VectorValue", %"class.skottie::VectorValue", float, float, float, [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%class.sk_sp.38 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type { %"class.sksg::Node.base", [6 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.sksg::InvalidationController" = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN4sksg6MatrixI5SkM44ED0Ev = comdat any

$_ZN4sksg6MatrixI5SkM44E12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix = comdat any

$_ZNK4sksg6MatrixI5SkM44E4is44Ev = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZTVN4sksg6MatrixI5SkM44EE = comdat any

@_ZTVN7skottie8internal12CameraAdaperE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::CameraAdaper"*)* @_ZN7skottie8internal12CameraAdaperD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::CameraAdaper"*)* @_ZN7skottie8internal12CameraAdaperD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::TransformAdapter3D"*)* @_ZN7skottie8internal18TransformAdapter3D6onSyncEv to i8*), i8* bitcast (void (%class.SkM44*, %"class.skottie::internal::CameraAdaper"*)* @_ZNK7skottie8internal12CameraAdaper11totalMatrixEv to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"pe\00", align 1
@_ZZN7skottie8internal12CameraAdaper22DefaultCameraTransformERK6SkSizeE3rot = internal constant %struct.SkV3 zeroinitializer, align 4
@.ref.tmp = private constant %struct.SkV3 { float 0.000000e+00, float 1.000000e+00, float 0.000000e+00 }, align 4
@_ZTVN4sksg6MatrixI5SkM44EE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Node"*)* @_ZN4sksg4NodeD2Ev to i8*), i8* bitcast (void (%"class.sksg::Matrix"*)* @_ZN4sksg6MatrixI5SkM44ED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::Matrix"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg6MatrixI5SkM44E12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (i1 (%"class.sksg::Matrix"*)* @_ZNK4sksg6MatrixI5SkM44E4is44Ev to i8*), i8* bitcast (void (%class.SkMatrix*, %"class.sksg::Matrix"*)* @_ZNK4sksg6MatrixI5SkM44E8asMatrixEv to i8*), i8* bitcast (void (%class.SkM44*, %"class.sksg::Matrix"*)* @_ZNK4sksg6MatrixI5SkM44E5asM44Ev to i8*)] }, comdat, align 8
@switch.table._ZN7skottie8internal12CameraAdaperC2ERKN6skjson11ObjectValueES5_RKNS0_16AnimationBuilderERK6SkSize = private unnamed_addr constant [8 x i32] [i32 1, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1], align 4

@_ZN7skottie8internal12CameraAdaperC1ERKN6skjson11ObjectValueES5_RKNS0_16AnimationBuilderERK6SkSize = hidden unnamed_addr alias void (%"class.skottie::internal::CameraAdaper"*, %"class.skjson::ObjectValue"*, %"class.skjson::ObjectValue"*, %"class.skottie::internal::AnimationBuilder"*, %struct.SkSize*), void (%"class.skottie::internal::CameraAdaper"*, %"class.skjson::ObjectValue"*, %"class.skjson::ObjectValue"*, %"class.skottie::internal::AnimationBuilder"*, %struct.SkSize*)* @_ZN7skottie8internal12CameraAdaperC2ERKN6skjson11ObjectValueES5_RKNS0_16AnimationBuilderERK6SkSize
@_ZN7skottie8internal12CameraAdaperD1Ev = hidden unnamed_addr alias void (%"class.skottie::internal::CameraAdaper"*), void (%"class.skottie::internal::CameraAdaper"*)* @_ZN7skottie8internal12CameraAdaperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12CameraAdaperC2ERKN6skjson11ObjectValueES5_RKNS0_16AnimationBuilderERK6SkSize(%"class.skottie::internal::CameraAdaper"*, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %struct.SkSize* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.skottie::internal::CameraAdaper"* %0 to %"class.skottie::internal::TransformAdapter3D"*
  tail call void @_ZN7skottie8internal18TransformAdapter3DC2ERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE(%"class.skottie::internal::TransformAdapter3D"* %6, %"class.skjson::ObjectValue"* dereferenceable(8) %2, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3) #11
  %7 = getelementptr inbounds %"class.skottie::internal::CameraAdaper", %"class.skottie::internal::CameraAdaper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal12CameraAdaperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.skottie::internal::CameraAdaper", %"class.skottie::internal::CameraAdaper"* %0, i64 0, i32 1
  %9 = bitcast %struct.SkSize* %4 to i64*
  %10 = bitcast %struct.SkSize* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = getelementptr inbounds %"class.skottie::internal::CameraAdaper", %"class.skottie::internal::CameraAdaper"* %0, i64 0, i32 2
  %13 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %14 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %13, i64 0, i32 0, i64 0
  %15 = load i8, i8* %14, align 8
  %16 = and i8 %15, 7
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN7skottie8internal12CameraAdaperC2ERKN6skjson11ObjectValueES5_RKNS0_16AnimationBuilderERK6SkSize, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 4
  %20 = getelementptr inbounds %"class.skottie::internal::CameraAdaper", %"class.skottie::internal::CameraAdaper"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %20, align 8
  %21 = bitcast %"class.skottie::internal::CameraAdaper"* %0 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %22 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #11
  %23 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %22, i64 0, i32 0, i64 0
  %24 = load i8, i8* %23, align 8
  %25 = and i8 %24, 7
  %26 = icmp eq i8 %25, 7
  %27 = bitcast %"class.skjson::Value"* %22 to %"class.skjson::ObjectValue"*
  %28 = select i1 %26, %"class.skjson::ObjectValue"* %27, %"class.skjson::ObjectValue"* null
  %29 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %21, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %28, float* %20) #11
  ret void
}

declare void @_ZN7skottie8internal18TransformAdapter3DC2ERKN6skjson11ObjectValueERKNS0_16AnimationBuilderE(%"class.skottie::internal::TransformAdapter3D"*, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"* dereferenceable(152)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7skottie8internal18TransformAdapter3DD2Ev(%"class.skottie::internal::TransformAdapter3D"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12CameraAdaperD2Ev(%"class.skottie::internal::CameraAdaper"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.skottie::internal::CameraAdaper"* %0 to %"class.skottie::internal::TransformAdapter3D"*
  tail call void @_ZN7skottie8internal18TransformAdapter3DD2Ev(%"class.skottie::internal::TransformAdapter3D"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12CameraAdaperD0Ev(%"class.skottie::internal::CameraAdaper"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.skottie::internal::CameraAdaper"* %0 to %"class.skottie::internal::TransformAdapter3D"*
  tail call void @_ZN7skottie8internal18TransformAdapter3DD2Ev(%"class.skottie::internal::TransformAdapter3D"* %2) #11
  %3 = bitcast %"class.skottie::internal::CameraAdaper"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal12CameraAdaper11totalMatrixEv(%class.SkM44* noalias sret, %"class.skottie::internal::CameraAdaper"*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkV3, align 8
  %4 = alloca %struct.SkV3, align 8
  %5 = alloca %struct.SkV3, align 8
  %6 = bitcast %struct.SkV3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #11
  %7 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %3, i64 0, i32 2
  %8 = bitcast %"class.skottie::internal::CameraAdaper"* %1 to %"class.skottie::internal::TransformAdapter3D"*
  %9 = tail call { <2 x float>, float } @_ZNK7skottie8internal18TransformAdapter3D8positionEv(%"class.skottie::internal::TransformAdapter3D"* %8) #11
  %10 = extractvalue { <2 x float>, float } %9, 0
  %11 = extractvalue { <2 x float>, float } %9, 1
  %12 = bitcast %struct.SkV3* %3 to <2 x float>*
  store <2 x float> %10, <2 x float>* %12, align 8
  store float %11, float* %7, align 8
  %13 = bitcast %struct.SkV3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.skottie::internal::CameraAdaper", %"class.skottie::internal::CameraAdaper"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = fsub float -1.000000e+00, %11
  br label %24

19:                                               ; preds = %2
  %20 = tail call { <2 x float>, float } @_ZNK7skottie8internal18TransformAdapter3D12anchor_pointEv(%"class.skottie::internal::TransformAdapter3D"* %8) #11
  %21 = extractvalue { <2 x float>, float } %20, 0
  %22 = extractvalue { <2 x float>, float } %20, 1
  %23 = fsub float -0.000000e+00, %22
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi <2 x float> [ %10, %17 ], [ %21, %19 ]
  %26 = phi float [ %18, %17 ], [ %23, %19 ]
  %27 = bitcast %struct.SkV3* %4 to <2 x float>*
  store <2 x float> %25, <2 x float>* %27, align 8
  %28 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %4, i64 0, i32 2
  store float %26, float* %28, align 8
  %29 = bitcast %struct.SkV3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %29) #11
  %30 = tail call { <2 x float>, float } @_ZNK7skottie8internal18TransformAdapter3D8rotationEv(%"class.skottie::internal::TransformAdapter3D"* %8) #11
  %31 = extractvalue { <2 x float>, float } %30, 0
  %32 = extractvalue { <2 x float>, float } %30, 1
  %33 = bitcast %struct.SkV3* %5 to <2 x float>*
  store <2 x float> %31, <2 x float>* %33, align 8
  %34 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %5, i64 0, i32 2
  store float %32, float* %34, align 8
  %35 = getelementptr inbounds %"class.skottie::internal::CameraAdaper", %"class.skottie::internal::CameraAdaper"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %"class.skottie::internal::CameraAdaper", %"class.skottie::internal::CameraAdaper"* %1, i64 0, i32 3
  %37 = load float, float* %36, align 8
  call fastcc void @_ZN7skottie8internal12_GLOBAL__N_119ComputeCameraMatrixERK4SkV3S4_S4_RK6SkSizef(%class.SkM44* sret %0, %struct.SkV3* nonnull dereferenceable(12) %3, %struct.SkV3* nonnull dereferenceable(12) %4, %struct.SkV3* nonnull dereferenceable(12) %5, %struct.SkSize* dereferenceable(8) %35, float %37)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare { <2 x float>, float } @_ZNK7skottie8internal18TransformAdapter3D8positionEv(%"class.skottie::internal::TransformAdapter3D"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7skottie8internal12_GLOBAL__N_119ComputeCameraMatrixERK4SkV3S4_S4_RK6SkSizef(%class.SkM44* noalias sret, %struct.SkV3* nocapture readonly dereferenceable(12), %struct.SkV3* nocapture readonly dereferenceable(12), %struct.SkV3* nocapture readonly dereferenceable(12), %struct.SkSize* nocapture readonly dereferenceable(8), float) unnamed_addr #5 {
  %7 = alloca %class.SkM44, align 4
  %8 = alloca %class.SkM44, align 4
  %9 = alloca %class.SkM44, align 4
  %10 = alloca %class.SkM44, align 4
  %11 = alloca %class.SkM44, align 4
  %12 = alloca %class.SkM44, align 4
  %13 = alloca %class.SkM44, align 4
  %14 = alloca %class.SkM44, align 4
  %15 = alloca %struct.SkV3, align 4
  %16 = alloca %struct.SkV3, align 4
  %17 = alloca %class.SkM44, align 4
  %18 = alloca %class.SkM44, align 4
  %19 = alloca %class.SkM44, align 4
  %20 = alloca %class.SkM44, align 4
  %21 = alloca %class.SkM44, align 4
  %22 = alloca %class.SkM44, align 4
  %23 = bitcast %class.SkM44* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -1, i64 64, i1 false)
  %24 = bitcast %class.SkM44* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %24) #11
  %25 = bitcast %class.SkM44* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %25) #11
  %26 = bitcast %class.SkM44* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #11
  %27 = bitcast %class.SkM44* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #11
  %28 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %3, i64 0, i32 2
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, 0xBF91DF46A0000000
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 -1, i64 64, i1 false) #11, !alias.scope !2
  %31 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setRotateE4SkV3f(%class.SkM44* nonnull %11, <2 x float> zeroinitializer, float 1.000000e+00, float %30) #11
  %32 = bitcast %class.SkM44* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %32) #11
  %33 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %3, i64 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fmul float %34, 0x3F91DF46A0000000
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 -1, i64 64, i1 false) #11, !alias.scope !5
  %36 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setRotateE4SkV3f(%class.SkM44* nonnull %12, <2 x float> <float 0.000000e+00, float 1.000000e+00>, float 0.000000e+00, float %35) #11
  %37 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %10, %class.SkM44* nonnull dereferenceable(64) %11, %class.SkM44* nonnull dereferenceable(64) %12) #11
  %38 = bitcast %class.SkM44* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %38) #11
  %39 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %3, i64 0, i32 0
  %40 = load float, float* %39, align 4
  %41 = fmul float %40, 0x3F91DF46A0000000
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 -1, i64 64, i1 false) #11, !alias.scope !8
  %42 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setRotateE4SkV3f(%class.SkM44* nonnull %13, <2 x float> <float 1.000000e+00, float 0.000000e+00>, float 0.000000e+00, float %41) #11
  %43 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %9, %class.SkM44* nonnull dereferenceable(64) %10, %class.SkM44* nonnull dereferenceable(64) %13) #11
  %44 = bitcast %class.SkM44* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %44) #11
  %45 = bitcast %struct.SkV3* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %45) #11
  %46 = bitcast %struct.SkV3* %1 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = bitcast %struct.SkV3* %15 to i32*
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %15, i64 0, i32 1
  %50 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %1, i64 0, i32 1
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = bitcast float* %49 to i32*
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %15, i64 0, i32 2
  %55 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %1, i64 0, i32 2
  %56 = load float, float* %55, align 4
  %57 = fsub float -0.000000e+00, %56
  store float %57, float* %54, align 4
  %58 = bitcast %struct.SkV3* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %58) #11
  %59 = bitcast %struct.SkV3* %2 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = bitcast %struct.SkV3* %16 to i32*
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %16, i64 0, i32 1
  %63 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %2, i64 0, i32 1
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = bitcast float* %62 to i32*
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %16, i64 0, i32 2
  %68 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %2, i64 0, i32 2
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = bitcast float* %67 to i32*
  store i32 %70, i32* %71, align 4
  call void @_ZN5SkM446LookAtERK4SkV3S2_S2_(%class.SkM44* nonnull sret %14, %struct.SkV3* nonnull dereferenceable(12) %15, %struct.SkV3* nonnull dereferenceable(12) %16, %struct.SkV3* nonnull dereferenceable(12) @.ref.tmp) #11
  %72 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %8, %class.SkM44* nonnull dereferenceable(64) %9, %class.SkM44* nonnull dereferenceable(64) %14) #11
  %73 = bitcast %class.SkM44* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %73) #11
  %74 = getelementptr inbounds %class.SkM44, %class.SkM44* %17, i64 0, i32 0, i64 0
  store float 1.000000e+00, float* %74, align 4, !alias.scope !11
  %75 = getelementptr inbounds %class.SkM44, %class.SkM44* %17, i64 0, i32 0, i64 1
  %76 = getelementptr inbounds %class.SkM44, %class.SkM44* %17, i64 0, i32 0, i64 5
  %77 = bitcast float* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 16, i1 false) #11, !alias.scope !11
  store float 1.000000e+00, float* %76, align 4, !alias.scope !11
  %78 = getelementptr inbounds %class.SkM44, %class.SkM44* %17, i64 0, i32 0, i64 6
  %79 = getelementptr inbounds %class.SkM44, %class.SkM44* %17, i64 0, i32 0, i64 10
  %80 = bitcast float* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 16, i1 false) #11, !alias.scope !11
  store float -1.000000e+00, float* %79, align 4, !alias.scope !11
  %81 = getelementptr inbounds %class.SkM44, %class.SkM44* %17, i64 0, i32 0, i64 11
  %82 = getelementptr inbounds %class.SkM44, %class.SkM44* %17, i64 0, i32 0, i64 15
  %83 = bitcast float* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 16, i1 false) #11, !alias.scope !11
  store float 1.000000e+00, float* %82, align 4, !alias.scope !11
  %84 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %7, %class.SkM44* nonnull dereferenceable(64) %8, %class.SkM44* nonnull dereferenceable(64) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %24) #11
  %85 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %4, i64 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %4, i64 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = fcmp olt float %86, %88
  %90 = select i1 %89, float %88, float %86
  %91 = fmul float %90, 5.000000e-01
  %92 = fdiv float %91, %5
  %93 = call float @atanf(float %92) #11
  %94 = bitcast %class.SkM44* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %94) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %94, i8 -1, i64 64, i1 false)
  %95 = bitcast %class.SkM44* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %95) #11
  %96 = getelementptr inbounds %class.SkM44, %class.SkM44* %19, i64 0, i32 0, i64 0
  store float %91, float* %96, align 4, !alias.scope !14
  %97 = getelementptr inbounds %class.SkM44, %class.SkM44* %19, i64 0, i32 0, i64 1
  %98 = getelementptr inbounds %class.SkM44, %class.SkM44* %19, i64 0, i32 0, i64 5
  %99 = bitcast float* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 16, i1 false) #11, !alias.scope !14
  store float %91, float* %98, align 4, !alias.scope !14
  %100 = getelementptr inbounds %class.SkM44, %class.SkM44* %19, i64 0, i32 0, i64 6
  %101 = getelementptr inbounds %class.SkM44, %class.SkM44* %19, i64 0, i32 0, i64 10
  %102 = bitcast float* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 16, i1 false) #11, !alias.scope !14
  store float 1.000000e+00, float* %101, align 4, !alias.scope !14
  %103 = getelementptr inbounds %class.SkM44, %class.SkM44* %19, i64 0, i32 0, i64 11
  %104 = getelementptr inbounds %class.SkM44, %class.SkM44* %19, i64 0, i32 0, i64 15
  %105 = bitcast float* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 16, i1 false) #11, !alias.scope !14
  store float 1.000000e+00, float* %104, align 4, !alias.scope !14
  %106 = bitcast %class.SkM44* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %106) #11
  %107 = fmul float %93, 2.000000e+00
  call void @_ZN5SkM4411PerspectiveEfff(%class.SkM44* nonnull sret %20, float 0.000000e+00, float %5, float %107) #11
  %108 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %18, %class.SkM44* nonnull dereferenceable(64) %19, %class.SkM44* nonnull dereferenceable(64) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %106) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %95) #11
  %109 = bitcast %class.SkM44* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %109) #11
  %110 = bitcast %class.SkM44* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %110) #11
  %111 = load float, float* %85, align 4
  %112 = fmul float %111, 5.000000e-01
  %113 = load float, float* %87, align 4
  %114 = fmul float %113, 5.000000e-01
  %115 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 0
  store float 1.000000e+00, float* %115, align 4, !alias.scope !17
  %116 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 1
  %117 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 5
  %118 = bitcast float* %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 16, i1 false) #11, !alias.scope !17
  store float 1.000000e+00, float* %117, align 4, !alias.scope !17
  %119 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 6
  %120 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 10
  %121 = bitcast float* %119 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 16, i1 false) #11, !alias.scope !17
  store float 1.000000e+00, float* %120, align 4, !alias.scope !17
  %122 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 11
  store float 0.000000e+00, float* %122, align 4, !alias.scope !17
  %123 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 12
  store float %112, float* %123, align 4, !alias.scope !17
  %124 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 13
  store float %114, float* %124, align 4, !alias.scope !17
  %125 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %125, align 4, !alias.scope !17
  %126 = getelementptr inbounds %class.SkM44, %class.SkM44* %22, i64 0, i32 0, i64 15
  store float 1.000000e+00, float* %126, align 4, !alias.scope !17
  %127 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %21, %class.SkM44* nonnull dereferenceable(64) %22, %class.SkM44* nonnull dereferenceable(64) %18) #11
  %128 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* %0, %class.SkM44* nonnull dereferenceable(64) %21, %class.SkM44* nonnull dereferenceable(64) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %110) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %109) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, float } @_ZNK7skottie8internal12CameraAdaper3poiERK4SkV3(%"class.skottie::internal::CameraAdaper"*, %struct.SkV3* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.skottie::internal::CameraAdaper", %"class.skottie::internal::CameraAdaper"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = bitcast %struct.SkV3* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %1, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = fsub float -1.000000e+00, %10
  br label %18

12:                                               ; preds = %2
  %13 = bitcast %"class.skottie::internal::CameraAdaper"* %0 to %"class.skottie::internal::TransformAdapter3D"*
  %14 = tail call { <2 x float>, float } @_ZNK7skottie8internal18TransformAdapter3D12anchor_pointEv(%"class.skottie::internal::TransformAdapter3D"* %13) #11
  %15 = extractvalue { <2 x float>, float } %14, 0
  %16 = extractvalue { <2 x float>, float } %14, 1
  %17 = fsub float -0.000000e+00, %16
  br label %18

18:                                               ; preds = %12, %6
  %19 = phi <2 x float> [ %8, %6 ], [ %15, %12 ]
  %20 = phi float [ %11, %6 ], [ %17, %12 ]
  %21 = insertvalue { <2 x float>, float } undef, <2 x float> %19, 0
  %22 = insertvalue { <2 x float>, float } %21, float %20, 1
  ret { <2 x float>, float } %22
}

declare { <2 x float>, float } @_ZNK7skottie8internal18TransformAdapter3D8rotationEv(%"class.skottie::internal::TransformAdapter3D"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare { <2 x float>, float } @_ZNK7skottie8internal18TransformAdapter3D12anchor_pointEv(%"class.skottie::internal::TransformAdapter3D"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12CameraAdaper22DefaultCameraTransformERK6SkSize(%class.sk_sp.38* noalias nocapture sret, %struct.SkSize* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = alloca %struct.SkV3, align 4
  %4 = alloca %struct.SkV3, align 4
  %5 = alloca %class.SkM44, align 4
  %6 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fmul float %7, 5.000000e-01
  %9 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, 5.000000e-01
  %12 = bitcast %struct.SkV3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %12) #11
  %13 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %3, i64 0, i32 0
  %14 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %3, i64 0, i32 1
  %15 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %3, i64 0, i32 2
  store float %8, float* %13, align 4
  store float %11, float* %14, align 4
  store float 0xC08B790A40000000, float* %15, align 4
  %16 = bitcast %struct.SkV3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #11
  %17 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %4, i64 0, i32 1
  %18 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %4, i64 0, i32 2
  %19 = getelementptr inbounds %struct.SkV3, %struct.SkV3* %4, i64 0, i32 0
  store float %8, float* %19, align 4
  store float %11, float* %17, align 4
  store float 0x408B710A40000000, float* %18, align 4
  %20 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #11
  call fastcc void @_ZN7skottie8internal12_GLOBAL__N_119ComputeCameraMatrixERK4SkV3S4_S4_RK6SkSizef(%class.SkM44* nonnull sret %5, %struct.SkV3* nonnull dereferenceable(12) %3, %struct.SkV3* nonnull dereferenceable(12) %4, %struct.SkV3* nonnull dereferenceable(12) @_ZZN7skottie8internal12CameraAdaper22DefaultCameraTransformERK6SkSizeE3rot, %struct.SkSize* dereferenceable(8) %1, float 0x408B790A40000000)
  %21 = call i8* @_Znwm(i64 112) #12, !noalias !20
  %22 = bitcast i8* %21 to %"class.sksg::Transform"*
  call void @_ZN4sksg9TransformC2Ev(%"class.sksg::Transform"* nonnull %22) #11, !noalias !20
  %23 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg6MatrixI5SkM44EE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8, !noalias !20
  %24 = getelementptr inbounds i8, i8* %21, i64 44
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 4 %20, i64 64, i1 false) #11, !noalias !20
  %25 = ptrtoint i8* %21 to i64
  %26 = bitcast %class.sk_sp.38* %0 to i64*
  store i64 %25, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal16AnimationBuilder12attachCameraERKN6skjson11ObjectValueES5_5sk_spIN4sksg9TransformEERK6SkSize(%class.sk_sp.38* noalias sret, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skjson::ObjectValue"* dereferenceable(8), %class.sk_sp.38* nocapture, %struct.SkSize* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp.38, align 8
  %9 = alloca %class.sk_sp.38, align 8
  %10 = tail call i8* @_Znwm(i64 184) #12, !noalias !23
  %11 = bitcast i8* %10 to %"class.skottie::internal::CameraAdaper"*
  tail call void @_ZN7skottie8internal12CameraAdaperC2ERKN6skjson11ObjectValueES5_RKNS0_16AnimationBuilderERK6SkSize(%"class.skottie::internal::CameraAdaper"* nonnull %11, %"class.skjson::ObjectValue"* dereferenceable(8) %2, %"class.skjson::ObjectValue"* dereferenceable(8) %3, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %1, %struct.SkSize* dereferenceable(8) %5) #11, !noalias !23
  %12 = getelementptr inbounds i8, i8* %10, i64 16
  %13 = bitcast i8* %12 to %class.sk_sp**
  %14 = load %class.sk_sp*, %class.sk_sp** %13, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 24
  %16 = bitcast i8* %15 to %class.sk_sp**
  %17 = load %class.sk_sp*, %class.sk_sp** %16, align 8
  %18 = icmp eq %class.sk_sp* %14, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %6
  %20 = bitcast i8* %10 to %"class.skottie::internal::Animator"*
  %21 = bitcast i8* %10 to i1 (%"class.skottie::internal::Animator"*, float)***
  %22 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %22, i64 3
  %24 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.skottie::internal::Animator"* nonnull %20, float 0.000000e+00) #11
  br label %62

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %1, i64 0, i32 11
  %28 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %27, align 8
  %29 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds i8, i8* %10, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  %33 = bitcast %class.sk_sp* %7 to i8**
  store i8* %10, i8** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 1
  %35 = load %class.sk_sp*, %class.sk_sp** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = load %class.sk_sp*, %class.sk_sp** %36, align 8
  %38 = icmp ult %class.sk_sp* %35, %37
  br i1 %38, label %39, label %46

39:                                               ; preds = %26
  %40 = ptrtoint i8* %10 to i64
  %41 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %41, align 8
  %42 = bitcast %class.sk_sp* %35 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %35, i64 1
  %44 = ptrtoint %class.sk_sp* %43 to i64
  %45 = bitcast %class.sk_sp** %34 to i64*
  store i64 %44, i64* %45, align 8
  br label %47

46:                                               ; preds = %26
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %28, %class.sk_sp* nonnull dereferenceable(8) %7) #11
  br label %47

47:                                               ; preds = %39, %46
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %49 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %48, align 8
  %50 = icmp eq %"class.skottie::internal::Animator"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %49, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %"class.skottie::internal::Animator"* %49 to %class.SkRefCntBase*
  %57 = bitcast %"class.skottie::internal::Animator"* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8
  call void %60(%class.SkRefCntBase* nonnull %56) #11
  br label %61

61:                                               ; preds = %47, %51, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %62

62:                                               ; preds = %61, %19
  %63 = getelementptr inbounds i8, i8* %10, i64 48
  %64 = bitcast i8* %63 to %"class.sksg::Matrix"**
  %65 = load %"class.sksg::Matrix"*, %"class.sksg::Matrix"** %64, align 8
  %66 = icmp eq %"class.sksg::Matrix"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.sksg::Matrix", %"class.sksg::Matrix"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  br label %70

70:                                               ; preds = %62, %67
  %71 = bitcast %class.sk_sp.38* %8 to %"class.sksg::Matrix"**
  store %"class.sksg::Matrix"* %65, %"class.sksg::Matrix"** %71, align 8
  %72 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %4, i64 0, i32 0
  %73 = bitcast %class.sk_sp.38* %4 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.sksg::Transform"* null, %"class.sksg::Transform"** %72, align 8
  %75 = bitcast %class.sk_sp.38* %9 to i64*
  store i64 %74, i64* %75, align 8
  call void @_ZN4sksg9Transform10MakeConcatE5sk_spIS0_ES2_(%class.sk_sp.38* sret %0, %class.sk_sp.38* nonnull %8, %class.sk_sp.38* nonnull %9) #11
  %76 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %9, i64 0, i32 0
  %77 = load %"class.sksg::Transform"*, %"class.sksg::Transform"** %76, align 8
  %78 = icmp eq %"class.sksg::Transform"* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.sksg::Transform", %"class.sksg::Transform"* %77, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  %84 = bitcast %"class.sksg::Transform"* %77 to %class.SkRefCntBase*
  %85 = bitcast %"class.sksg::Transform"* %77 to void (%class.SkRefCntBase*)***
  %86 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, i64 2
  %88 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, align 8
  call void %88(%class.SkRefCntBase* nonnull %84) #11
  br label %89

89:                                               ; preds = %70, %79, %83
  %90 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %8, i64 0, i32 0
  %91 = load %"class.sksg::Transform"*, %"class.sksg::Transform"** %90, align 8
  %92 = icmp eq %"class.sksg::Transform"* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.sksg::Transform", %"class.sksg::Transform"* %91, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %"class.sksg::Transform"* %91 to %class.SkRefCntBase*
  %99 = bitcast %"class.sksg::Transform"* %91 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  call void %102(%class.SkRefCntBase* nonnull %98) #11
  br label %103

103:                                              ; preds = %97, %93, %89
  %104 = getelementptr inbounds i8, i8* %10, i64 8
  %105 = bitcast i8* %104 to i32*
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %114

108:                                              ; preds = %103
  %109 = bitcast i8* %10 to %class.SkRefCntBase*
  %110 = bitcast i8* %10 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #11
  br label %114

114:                                              ; preds = %103, %108
  ret void
}

declare void @_ZN4sksg9Transform10MakeConcatE5sk_spIS0_ES2_(%class.sk_sp.38* sret, %class.sk_sp.38*, %class.sk_sp.38*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #1

declare void @_ZN7skottie8internal18TransformAdapter3D6onSyncEv(%"class.skottie::internal::TransformAdapter3D"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5SkM446LookAtERK4SkV3S2_S2_(%class.SkM44* sret, %struct.SkV3* dereferenceable(12), %struct.SkV3* dereferenceable(12), %struct.SkV3* dereferenceable(12)) local_unnamed_addr #1

declare void @_ZN5SkM4411PerspectiveEfff(%class.SkM44* sret, float, float, float) local_unnamed_addr #1

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #1

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setRotateE4SkV3f(%class.SkM44*, <2 x float>, float, float) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @atanf(float) local_unnamed_addr #6

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN4sksg9TransformC2Ev(%"class.sksg::Transform"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg6MatrixI5SkM44ED0Ev(%"class.sksg::Matrix"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.sksg::Matrix"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %2) #11
  %3 = bitcast %"class.sksg::Matrix"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZN4sksg6MatrixI5SkM44E12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Matrix"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret { <2 x float>, <2 x float> } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4sksg6MatrixI5SkM44E4is44Ev(%"class.sksg::Matrix"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZNK4sksg6MatrixI5SkM44E8asMatrixEv(%class.SkMatrix* sret, %"class.sksg::Matrix"*) unnamed_addr #1

declare void @_ZNK4sksg6MatrixI5SkM44E5asM44Ev(%class.SkM44* sret, %"class.sksg::Matrix"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.sk_sp*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %35
  %39 = ptrtoint %class.sk_sp* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %37, i64 1
  %45 = ptrtoint %class.sk_sp* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp*, %class.sk_sp** %46, align 8
  %48 = ptrtoint %class.sk_sp* %47 to i64
  %49 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %50 = icmp eq %class.sk_sp* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp, %class.sk_sp* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !26

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp*
  %138 = icmp eq %class.sk_sp* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #11
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5SkM446RotateE4SkV3f: argument 0"}
!4 = distinct !{!4, !"_ZN5SkM446RotateE4SkV3f"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5SkM446RotateE4SkV3f: argument 0"}
!7 = distinct !{!7, !"_ZN5SkM446RotateE4SkV3f"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5SkM446RotateE4SkV3f: argument 0"}
!10 = distinct !{!10, !"_ZN5SkM446RotateE4SkV3f"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5SkM445ScaleEfff: argument 0"}
!13 = distinct !{!13, !"_ZN5SkM445ScaleEfff"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5SkM445ScaleEfff: argument 0"}
!16 = distinct !{!16, !"_ZN5SkM445ScaleEfff"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5SkM449TranslateEfff: argument 0"}
!19 = distinct !{!19, !"_ZN5SkM449TranslateEfff"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4sksg6MatrixI5SkM44E4MakeINSt3__19enable_ifILb1EvEEEE5sk_spIS2_ERKS1_: argument 0"}
!22 = distinct !{!22, !"_ZN4sksg6MatrixI5SkM44E4MakeINSt3__19enable_ifILb1EvEEEE5sk_spIS2_ERKS1_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_Z10sk_make_spIN7skottie8internal12CameraAdaperEJRKN6skjson11ObjectValueES6_RKNS1_16AnimationBuilderERK6SkSizeEE5sk_spIT_EDpOT0_: argument 0"}
!25 = distinct !{!25, !"_Z10sk_make_spIN7skottie8internal12CameraAdaperEJRKN6skjson11ObjectValueES6_RKNS1_16AnimationBuilderERK6SkSizeEE5sk_spIT_EDpOT0_"}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
