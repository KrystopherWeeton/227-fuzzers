; ModuleID = '../../third_party/icu/source/common/ustrcase.cpp'
source_filename = "../../third_party/icu/source/common/ustrcase.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::Edits" = type <{ i16*, i32, i32, i32, i32, i32, [100 x i16], [4 x i8] }>
%struct.UCaseContext = type { i8*, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%struct.CmpEquivLevel = type { i16*, i16*, i16* }

@_ZN6icu_6910GreekUpperL8data0370E = internal unnamed_addr constant [144 x i16] [i16 880, i16 880, i16 882, i16 882, i16 0, i16 0, i16 886, i16 886, i16 0, i16 0, i16 890, i16 1021, i16 1022, i16 1023, i16 0, i16 895, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 21393, i16 0, i16 21397, i16 21399, i16 21401, i16 0, i16 21407, i16 0, i16 21413, i16 21417, i16 -11367, i16 5009, i16 914, i16 915, i16 916, i16 5013, i16 918, i16 5015, i16 920, i16 5017, i16 922, i16 923, i16 924, i16 925, i16 926, i16 5023, i16 928, i16 929, i16 0, i16 931, i16 932, i16 5029, i16 934, i16 935, i16 936, i16 5033, i16 -27751, i16 -27739, i16 21393, i16 21397, i16 21399, i16 21401, i16 -11355, i16 5009, i16 914, i16 915, i16 916, i16 5013, i16 918, i16 5015, i16 920, i16 5017, i16 922, i16 923, i16 924, i16 925, i16 926, i16 5023, i16 928, i16 929, i16 931, i16 931, i16 932, i16 5029, i16 934, i16 935, i16 936, i16 5033, i16 -27751, i16 -27739, i16 21407, i16 21413, i16 21417, i16 975, i16 914, i16 920, i16 978, i16 17362, i16 -31790, i16 934, i16 928, i16 975, i16 984, i16 984, i16 986, i16 986, i16 988, i16 988, i16 990, i16 990, i16 992, i16 992, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 922, i16 929, i16 1017, i16 895, i16 1012, i16 5013, i16 0, i16 1015, i16 1015, i16 1017, i16 1018, i16 1018, i16 1020, i16 1021, i16 1022, i16 1023], align 16
@_ZN6icu_6910GreekUpperL8data1F00E = internal unnamed_addr constant [256 x i16] [i16 5009, i16 5009, i16 21393, i16 21393, i16 21393, i16 21393, i16 21393, i16 21393, i16 5009, i16 5009, i16 21393, i16 21393, i16 21393, i16 21393, i16 21393, i16 21393, i16 5013, i16 5013, i16 21397, i16 21397, i16 21397, i16 21397, i16 0, i16 0, i16 5013, i16 5013, i16 21397, i16 21397, i16 21397, i16 21397, i16 0, i16 0, i16 5015, i16 5015, i16 21399, i16 21399, i16 21399, i16 21399, i16 21399, i16 21399, i16 5015, i16 5015, i16 21399, i16 21399, i16 21399, i16 21399, i16 21399, i16 21399, i16 5017, i16 5017, i16 21401, i16 21401, i16 21401, i16 21401, i16 21401, i16 21401, i16 5017, i16 5017, i16 21401, i16 21401, i16 21401, i16 21401, i16 21401, i16 21401, i16 5023, i16 5023, i16 21407, i16 21407, i16 21407, i16 21407, i16 0, i16 0, i16 5023, i16 5023, i16 21407, i16 21407, i16 21407, i16 21407, i16 0, i16 0, i16 5029, i16 5029, i16 21413, i16 21413, i16 21413, i16 21413, i16 21413, i16 21413, i16 0, i16 5029, i16 0, i16 21413, i16 0, i16 21413, i16 0, i16 21413, i16 5033, i16 5033, i16 21417, i16 21417, i16 21417, i16 21417, i16 21417, i16 21417, i16 5033, i16 5033, i16 21417, i16 21417, i16 21417, i16 21417, i16 21417, i16 21417, i16 21393, i16 21393, i16 21397, i16 21397, i16 21399, i16 21399, i16 21401, i16 21401, i16 21407, i16 21407, i16 21413, i16 21413, i16 21417, i16 21417, i16 0, i16 0, i16 13201, i16 13201, i16 29585, i16 29585, i16 29585, i16 29585, i16 29585, i16 29585, i16 13201, i16 13201, i16 29585, i16 29585, i16 29585, i16 29585, i16 29585, i16 29585, i16 13207, i16 13207, i16 29591, i16 29591, i16 29591, i16 29591, i16 29591, i16 29591, i16 13207, i16 13207, i16 29591, i16 29591, i16 29591, i16 29591, i16 29591, i16 29591, i16 13225, i16 13225, i16 29609, i16 29609, i16 29609, i16 29609, i16 29609, i16 29609, i16 13225, i16 13225, i16 29609, i16 29609, i16 29609, i16 29609, i16 29609, i16 29609, i16 5009, i16 5009, i16 29585, i16 13201, i16 29585, i16 0, i16 21393, i16 29585, i16 5009, i16 5009, i16 21393, i16 21393, i16 13201, i16 0, i16 5017, i16 0, i16 0, i16 0, i16 29591, i16 13207, i16 29591, i16 0, i16 21399, i16 29591, i16 21397, i16 21397, i16 21399, i16 21399, i16 13207, i16 0, i16 0, i16 0, i16 5017, i16 5017, i16 -11367, i16 -11367, i16 0, i16 0, i16 21401, i16 -11367, i16 5017, i16 5017, i16 21401, i16 21401, i16 0, i16 0, i16 0, i16 0, i16 5029, i16 5029, i16 -11355, i16 -11355, i16 929, i16 929, i16 21413, i16 -11355, i16 5029, i16 5029, i16 21413, i16 21413, i16 929, i16 0, i16 0, i16 0, i16 0, i16 0, i16 29609, i16 13225, i16 29609, i16 0, i16 21417, i16 29609, i16 21407, i16 21407, i16 21417, i16 21417, i16 13225, i16 0, i16 0, i16 0], align 16
@_ZN6icu_699LatinCase15TO_LOWER_NORMALE = external local_unnamed_addr constant [384 x i8], align 16
@_ZN6icu_699LatinCase14TO_LOWER_TR_LTE = external local_unnamed_addr constant [384 x i8], align 16
@_ZN6icu_699LatinCase11TO_UPPER_TRE = external local_unnamed_addr constant [384 x i8], align 16
@_ZN6icu_699LatinCase15TO_UPPER_NORMALE = external local_unnamed_addr constant [384 x i8], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ustrcase_internalToTitle_69(i32, i32, %"class.icu_69::BreakIterator"*, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %10 = alloca %struct.UCaseContext, align 8
  %11 = alloca i16*, align 8
  %12 = load i32, i32* %8, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %263

14:                                               ; preds = %9
  %15 = and i32 %1, 1536
  %16 = icmp eq i32 %15, 1536
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  store i32 1, i32* %8, align 4
  br label %263

18:                                               ; preds = %14
  %19 = bitcast %struct.UCaseContext* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #8
  %20 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %10, i64 0, i32 1
  %21 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false)
  %22 = bitcast %struct.UCaseContext* %10 to i16**
  store i16* %5, i16** %22, align 8
  %23 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %10, i64 0, i32 3
  store i32 %6, i32* %23, align 8
  %24 = icmp sgt i32 %6, 0
  br i1 %24, label %25, label %253

25:                                               ; preds = %18
  %26 = bitcast %"class.icu_69::BreakIterator"* %2 to i32 (%"class.icu_69::BreakIterator"*)***
  %27 = and i32 %1, 512
  %28 = icmp eq i32 %27, 0
  %29 = and i32 %1, 1024
  %30 = icmp eq i32 %29, 0
  %31 = icmp eq %"class.icu_69::Edits"* %7, null
  %32 = and i32 %1, 16384
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %10, i64 0, i32 4
  %35 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %10, i64 0, i32 5
  %36 = bitcast i16** %11 to i8*
  %37 = icmp eq i32 %0, 5
  %38 = and i32 %1, 256
  %39 = icmp eq i32 %38, 0
  br label %40

40:                                               ; preds = %25, %247
  %41 = phi i1 [ false, %25 ], [ true, %247 ]
  %42 = phi i32 [ 0, %25 ], [ %58, %247 ]
  %43 = phi i32 [ 0, %25 ], [ %248, %247 ]
  %44 = load i32 (%"class.icu_69::BreakIterator"*)**, i32 (%"class.icu_69::BreakIterator"*)*** %26, align 8
  br i1 %41, label %49, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %44, i64 10
  %47 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %46, align 8
  %48 = call i32 %47(%"class.icu_69::BreakIterator"* %2) #8
  br label %53

49:                                               ; preds = %40
  %50 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %44, i64 13
  %51 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %50, align 8
  %52 = call i32 %51(%"class.icu_69::BreakIterator"* %2) #8
  br label %53

53:                                               ; preds = %49, %45
  %54 = phi i32 [ %48, %45 ], [ %52, %49 ]
  %55 = icmp eq i32 %54, -1
  %56 = icmp sgt i32 %54, %6
  %57 = or i1 %55, %56
  %58 = select i1 %57, i32 %6, i32 %54
  %59 = icmp slt i32 %42, %58
  br i1 %59, label %60, label %247

60:                                               ; preds = %53
  %61 = add nsw i32 %42, 1
  %62 = sext i32 %42 to i64
  %63 = getelementptr inbounds i16, i16* %5, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = and i32 %65, 64512
  %67 = icmp ne i32 %66, 55296
  %68 = icmp eq i32 %61, %58
  %69 = or i1 %68, %67
  br i1 %69, label %82, label %70

70:                                               ; preds = %60
  %71 = sext i32 %61 to i64
  %72 = getelementptr inbounds i16, i16* %5, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = zext i16 %73 to i32
  %75 = and i32 %74, 64512
  %76 = icmp eq i32 %75, 56320
  br i1 %76, label %77, label %82

77:                                               ; preds = %70
  %78 = add nsw i32 %42, 2
  %79 = shl nuw nsw i32 %65, 10
  %80 = add nsw i32 %79, -56613888
  %81 = add nsw i32 %80, %74
  br label %82

82:                                               ; preds = %60, %70, %77
  %83 = phi i32 [ %61, %60 ], [ %78, %77 ], [ %61, %70 ]
  %84 = phi i32 [ %65, %60 ], [ %81, %77 ], [ %65, %70 ]
  br i1 %28, label %85, label %154

85:                                               ; preds = %82, %115
  %86 = phi i32 [ %87, %115 ], [ %42, %82 ]
  %87 = phi i32 [ %116, %115 ], [ %83, %82 ]
  %88 = phi i32 [ %117, %115 ], [ %84, %82 ]
  br i1 %30, label %92, label %89

89:                                               ; preds = %85
  %90 = call i32 @ucase_getType_69(i32 %88) #8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %103, label %130

92:                                               ; preds = %85
  %93 = call signext i8 @u_charType_69(i32 %88) #8
  %94 = sext i8 %93 to i32
  %95 = shl i32 1, %94
  %96 = and i32 %95, 251792942
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %130

98:                                               ; preds = %92
  %99 = icmp eq i8 %93, 4
  br i1 %99, label %100, label %103

100:                                              ; preds = %98
  %101 = call i32 @ucase_getType_69(i32 %88) #8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %130

103:                                              ; preds = %98, %89, %100
  %104 = icmp eq i32 %87, %58
  br i1 %104, label %130, label %105

105:                                              ; preds = %103
  %106 = add nsw i32 %87, 1
  %107 = sext i32 %87 to i64
  %108 = getelementptr inbounds i16, i16* %5, i64 %107
  %109 = load i16, i16* %108, align 2
  %110 = zext i16 %109 to i32
  %111 = and i32 %110, 64512
  %112 = icmp ne i32 %111, 55296
  %113 = icmp eq i32 %106, %58
  %114 = or i1 %113, %112
  br i1 %114, label %115, label %118

115:                                              ; preds = %105, %118, %125
  %116 = phi i32 [ %106, %105 ], [ %106, %118 ], [ %126, %125 ]
  %117 = phi i32 [ %110, %105 ], [ %110, %118 ], [ %129, %125 ]
  br label %85

118:                                              ; preds = %105
  %119 = sext i32 %106 to i64
  %120 = getelementptr inbounds i16, i16* %5, i64 %119
  %121 = load i16, i16* %120, align 2
  %122 = zext i16 %121 to i32
  %123 = and i32 %122, 64512
  %124 = icmp eq i32 %123, 56320
  br i1 %124, label %125, label %115

125:                                              ; preds = %118
  %126 = add nsw i32 %87, 2
  %127 = shl nuw nsw i32 %110, 10
  %128 = add nsw i32 %127, -56613888
  %129 = add nsw i32 %128, %122
  br label %115

130:                                              ; preds = %92, %89, %103, %100
  %131 = phi i32 [ %87, %92 ], [ %87, %89 ], [ %58, %103 ], [ %87, %100 ]
  %132 = phi i32 [ %86, %92 ], [ %86, %89 ], [ %58, %103 ], [ %86, %100 ]
  %133 = icmp sgt i32 %132, %42
  br i1 %133, label %134, label %154

134:                                              ; preds = %130
  %135 = sub nsw i32 %132, %42
  %136 = icmp slt i32 %135, 1
  br i1 %136, label %150, label %137

137:                                              ; preds = %134
  br i1 %31, label %139, label %138

138:                                              ; preds = %137
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %7, i32 %135) #8
  br label %139

139:                                              ; preds = %138, %137
  br i1 %33, label %140, label %150

140:                                              ; preds = %139
  %141 = sub nsw i32 2147483647, %43
  %142 = icmp slt i32 %141, %135
  br i1 %142, label %153, label %143

143:                                              ; preds = %140
  %144 = add nsw i32 %135, %43
  %145 = icmp sgt i32 %144, %4
  br i1 %145, label %150, label %146

146:                                              ; preds = %143
  %147 = sext i32 %43 to i64
  %148 = getelementptr inbounds i16, i16* %3, i64 %147
  %149 = call i16* @u_memcpy_69(i16* %148, i16* %63, i32 %135) #8
  br label %150

150:                                              ; preds = %134, %139, %143, %146
  %151 = phi i32 [ %43, %134 ], [ %43, %139 ], [ %144, %143 ], [ %144, %146 ]
  %152 = icmp slt i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %140, %150
  store i32 8, i32* %8, align 4
  br label %261

154:                                              ; preds = %130, %150, %82
  %155 = phi i32 [ %43, %82 ], [ %43, %130 ], [ %151, %150 ]
  %156 = phi i32 [ %42, %82 ], [ %132, %130 ], [ %132, %150 ]
  %157 = phi i32 [ %83, %82 ], [ %131, %130 ], [ %131, %150 ]
  %158 = phi i32 [ %84, %82 ], [ %88, %130 ], [ %88, %150 ]
  %159 = icmp sgt i32 %157, %156
  br i1 %159, label %160, label %247

160:                                              ; preds = %154
  store i32 %156, i32* %34, align 4
  store i32 %157, i32* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  %161 = call i32 @ucase_toFullTitle_69(i32 %158, i32 (i8*, i8)* nonnull @_ZN6icu_6912_GLOBAL__N_125utf16_caseContextIteratorEPva, i8* nonnull %19, i16** nonnull %11, i32 %0) #8
  %162 = load i16*, i16** %11, align 8
  %163 = sub nsw i32 %157, %156
  %164 = call fastcc i32 @_ZN6icu_6912_GLOBAL__N_112appendResultEPDsiiiPKDsijPNS_5EditsE(i16* %3, i32 %155, i32 %4, i32 %161, i16* %162, i32 %163, i32 %1, %"class.icu_69::Edits"* %7)
  %165 = icmp slt i32 %164, 0
  br i1 %165, label %242, label %166

166:                                              ; preds = %160
  %167 = add nsw i32 %156, 1
  %168 = icmp slt i32 %167, %58
  %169 = and i1 %37, %168
  br i1 %169, label %170, label %206

170:                                              ; preds = %166
  %171 = sext i32 %156 to i64
  %172 = getelementptr inbounds i16, i16* %5, i64 %171
  %173 = load i16, i16* %172, align 2
  switch i16 %173, label %206 [
    i16 73, label %174
    i16 105, label %174
  ]

174:                                              ; preds = %170, %170
  %175 = sext i32 %167 to i64
  %176 = getelementptr inbounds i16, i16* %5, i64 %175
  %177 = load i16, i16* %176, align 2
  switch i16 %177, label %206 [
    i16 106, label %178
    i16 74, label %190
  ]

178:                                              ; preds = %174
  %179 = icmp slt i32 %164, %4
  br i1 %179, label %180, label %183

180:                                              ; preds = %178
  %181 = sext i32 %164 to i64
  %182 = getelementptr inbounds i16, i16* %3, i64 %181
  store i16 74, i16* %182, align 2
  br label %185

183:                                              ; preds = %178
  %184 = icmp eq i32 %164, 2147483647
  br i1 %184, label %242, label %185

185:                                              ; preds = %183, %180
  %186 = add nuw nsw i32 %164, 1
  br i1 %31, label %188, label %187

187:                                              ; preds = %185
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %7, i32 1, i32 1) #8
  br label %188

188:                                              ; preds = %185, %187
  %189 = add nsw i32 %157, 1
  br label %206

190:                                              ; preds = %174
  %191 = getelementptr inbounds i16, i16* %172, i64 1
  br i1 %31, label %193, label %192

192:                                              ; preds = %190
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %7, i32 1) #8
  br label %193

193:                                              ; preds = %192, %190
  br i1 %33, label %194, label %203

194:                                              ; preds = %193
  %195 = icmp eq i32 %164, 2147483647
  br i1 %195, label %242, label %196

196:                                              ; preds = %194
  %197 = add nuw nsw i32 %164, 1
  %198 = icmp slt i32 %164, %4
  br i1 %198, label %199, label %203

199:                                              ; preds = %196
  %200 = sext i32 %164 to i64
  %201 = getelementptr inbounds i16, i16* %3, i64 %200
  %202 = call i16* @u_memcpy_69(i16* %201, i16* %191, i32 1) #8
  br label %203

203:                                              ; preds = %199, %196, %193
  %204 = phi i32 [ %197, %199 ], [ %197, %196 ], [ %164, %193 ]
  %205 = add nsw i32 %157, 1
  br label %206

206:                                              ; preds = %174, %170, %188, %203, %166
  %207 = phi i32 [ %186, %188 ], [ %204, %203 ], [ %164, %166 ], [ %164, %170 ], [ %164, %174 ]
  %208 = phi i32 [ %189, %188 ], [ %205, %203 ], [ %157, %166 ], [ %157, %170 ], [ %157, %174 ]
  %209 = icmp sgt i32 %58, %208
  br i1 %209, label %210, label %245

210:                                              ; preds = %206
  br i1 %39, label %211, label %222

211:                                              ; preds = %210
  %212 = sext i32 %207 to i64
  %213 = getelementptr inbounds i16, i16* %3, i64 %212
  %214 = sub nsw i32 %4, %207
  %215 = call fastcc i32 @_ZN6icu_6912_GLOBAL__N_17toLowerEijPDsiPKDsP12UCaseContextiiPNS_5EditsER10UErrorCode(i32 %0, i32 %1, i16* %213, i32 %214, i16* %5, %struct.UCaseContext* nonnull %10, i32 %208, i32 %58, %"class.icu_69::Edits"* %7, i32* dereferenceable(4) %8)
  %216 = add nsw i32 %215, %207
  %217 = load i32, i32* %8, align 4
  %218 = icmp eq i32 %217, 15
  br i1 %218, label %219, label %220

219:                                              ; preds = %211
  store i32 0, i32* %8, align 4
  br label %245

220:                                              ; preds = %211
  %221 = icmp slt i32 %217, 1
  br i1 %221, label %245, label %243

222:                                              ; preds = %210
  %223 = sext i32 %208 to i64
  %224 = getelementptr inbounds i16, i16* %5, i64 %223
  %225 = sub nsw i32 %58, %208
  %226 = icmp slt i32 %225, 1
  br i1 %226, label %245, label %227

227:                                              ; preds = %222
  br i1 %31, label %229, label %228

228:                                              ; preds = %227
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %7, i32 %225) #8
  br label %229

229:                                              ; preds = %228, %227
  br i1 %33, label %230, label %245

230:                                              ; preds = %229
  %231 = sub nuw nsw i32 2147483647, %207
  %232 = icmp slt i32 %231, %225
  br i1 %232, label %242, label %233

233:                                              ; preds = %230
  %234 = add nuw nsw i32 %225, %207
  %235 = icmp sgt i32 %234, %4
  br i1 %235, label %240, label %236

236:                                              ; preds = %233
  %237 = sext i32 %207 to i64
  %238 = getelementptr inbounds i16, i16* %3, i64 %237
  %239 = call i16* @u_memcpy_69(i16* %238, i16* %224, i32 %225) #8
  br label %240

240:                                              ; preds = %233, %236
  %241 = icmp slt i32 %234, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %240, %230, %194, %183, %160
  store i32 8, i32* %8, align 4
  br label %243

243:                                              ; preds = %220, %242
  %244 = phi i32 [ 0, %242 ], [ %216, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %261

245:                                              ; preds = %219, %229, %222, %206, %240, %220
  %246 = phi i32 [ %216, %220 ], [ %234, %240 ], [ %207, %206 ], [ %207, %222 ], [ %207, %229 ], [ %216, %219 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %247

247:                                              ; preds = %154, %245, %53
  %248 = phi i32 [ %43, %53 ], [ %155, %154 ], [ %246, %245 ]
  %249 = icmp slt i32 %58, %6
  br i1 %249, label %40, label %250

250:                                              ; preds = %247
  %251 = load i32, i32* %8, align 4
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %18, %250
  %254 = phi i32 [ %248, %250 ], [ 0, %18 ]
  %255 = icmp sgt i32 %254, %4
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  store i32 15, i32* %8, align 4
  br label %261

257:                                              ; preds = %253
  %258 = icmp eq %"class.icu_69::Edits"* %7, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %257
  %260 = call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %7, i32* dereferenceable(4) %8) #8
  br label %261

261:                                              ; preds = %243, %153, %259, %257, %256, %250
  %262 = phi i32 [ %248, %250 ], [ %254, %256 ], [ %254, %257 ], [ %254, %259 ], [ %244, %243 ], [ 0, %153 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #8
  br label %263

263:                                              ; preds = %9, %17, %261
  %264 = phi i32 [ %262, %261 ], [ 0, %17 ], [ 0, %9 ]
  ret i32 %264
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @ucase_getType_69(i32) local_unnamed_addr #2

declare i32 @ucase_toFullTitle_69(i32, i32 (i8*, i8)*, i8*, i16**, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @_ZN6icu_6912_GLOBAL__N_125utf16_caseContextIteratorEPva(i8* nocapture, i8 signext) #3 {
  %3 = icmp slt i8 %1, 0
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %0, i64 20
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds i8, i8* %0, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 %7, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %0, i64 28
  store i8 %1, i8* %10, align 4
  br label %27

11:                                               ; preds = %2
  %12 = icmp eq i8 %1, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i64 24
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds i8, i8* %0, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 %16, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %0, i64 28
  store i8 %1, i8* %19, align 4
  br label %58

20:                                               ; preds = %11
  %21 = getelementptr inbounds i8, i8* %0, i64 28
  %22 = load i8, i8* %21, align 4
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds i8, i8* %0, i64 12
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %23, label %27, label %58

27:                                               ; preds = %20, %4
  %28 = phi i32* [ %9, %4 ], [ %25, %20 ]
  %29 = phi i32 [ %7, %4 ], [ %26, %20 ]
  %30 = getelementptr inbounds i8, i8* %0, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = icmp slt i32 %32, %29
  br i1 %33, label %34, label %89

34:                                               ; preds = %27
  %35 = bitcast i8* %0 to i16**
  %36 = load i16*, i16** %35, align 8
  %37 = add nsw i32 %29, -1
  store i32 %37, i32* %28, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %36, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %41, 64512
  %43 = icmp eq i32 %42, 56320
  %44 = icmp sgt i32 %37, %32
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %89

46:                                               ; preds = %34
  %47 = add nsw i32 %29, -2
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %36, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = and i32 %51, 64512
  %53 = icmp eq i32 %52, 55296
  br i1 %53, label %54, label %89

54:                                               ; preds = %46
  store i32 %47, i32* %28, align 4
  %55 = shl nuw nsw i32 %51, 10
  %56 = add nuw nsw i32 %41, -56613888
  %57 = add nsw i32 %56, %55
  br label %89

58:                                               ; preds = %20, %13
  %59 = phi i32* [ %18, %13 ], [ %25, %20 ]
  %60 = phi i32 [ %16, %13 ], [ %26, %20 ]
  %61 = getelementptr inbounds i8, i8* %0, i64 16
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = icmp slt i32 %60, %63
  br i1 %64, label %65, label %89

65:                                               ; preds = %58
  %66 = bitcast i8* %0 to i16**
  %67 = load i16*, i16** %66, align 8
  %68 = add nsw i32 %60, 1
  store i32 %68, i32* %59, align 4
  %69 = sext i32 %60 to i64
  %70 = getelementptr inbounds i16, i16* %67, i64 %69
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = and i32 %72, 64512
  %74 = icmp ne i32 %73, 55296
  %75 = icmp eq i32 %68, %63
  %76 = or i1 %75, %74
  br i1 %76, label %89, label %77

77:                                               ; preds = %65
  %78 = sext i32 %68 to i64
  %79 = getelementptr inbounds i16, i16* %67, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = and i32 %81, 64512
  %83 = icmp eq i32 %82, 56320
  br i1 %83, label %84, label %89

84:                                               ; preds = %77
  %85 = add nsw i32 %60, 2
  store i32 %85, i32* %59, align 4
  %86 = shl nuw nsw i32 %72, 10
  %87 = add nsw i32 %86, -56613888
  %88 = add nsw i32 %87, %81
  br label %89

89:                                               ; preds = %65, %27, %58, %84, %77, %34, %54, %46
  %90 = phi i32 [ %41, %34 ], [ %57, %54 ], [ %41, %46 ], [ %72, %65 ], [ %88, %84 ], [ %72, %77 ], [ -1, %58 ], [ -1, %27 ]
  ret i32 %90
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i32 @_ZN6icu_6912_GLOBAL__N_112appendResultEPDsiiiPKDsijPNS_5EditsE(i16* nocapture, i32, i32, i32, i16* nocapture readonly, i32, i32, %"class.icu_69::Edits"*) unnamed_addr #4 {
  %9 = icmp slt i32 %3, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %8
  %11 = icmp eq %"class.icu_69::Edits"* %7, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %10
  tail call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %7, i32 %5) #8
  br label %13

13:                                               ; preds = %10, %12
  %14 = and i32 %6, 16384
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %212

16:                                               ; preds = %13
  %17 = xor i32 %3, -1
  %18 = icmp slt i32 %1, %2
  %19 = icmp sgt i32 %3, -65537
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %47

21:                                               ; preds = %16
  %22 = trunc i32 %17 to i16
  %23 = add nsw i32 %1, 1
  %24 = sext i32 %1 to i64
  %25 = getelementptr inbounds i16, i16* %0, i64 %24
  store i16 %22, i16* %25, align 2
  br label %212

26:                                               ; preds = %8
  %27 = icmp slt i32 %3, 32
  br i1 %27, label %42, label %28

28:                                               ; preds = %26
  %29 = icmp slt i32 %1, %2
  %30 = icmp slt i32 %3, 65536
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = trunc i32 %3 to i16
  %34 = add nsw i32 %1, 1
  %35 = sext i32 %1 to i64
  %36 = getelementptr inbounds i16, i16* %0, i64 %35
  store i16 %33, i16* %36, align 2
  %37 = icmp eq %"class.icu_69::Edits"* %7, null
  br i1 %37, label %212, label %38

38:                                               ; preds = %32
  tail call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %7, i32 %5, i32 1) #8
  br label %212

39:                                               ; preds = %28
  %40 = icmp ult i32 %3, 65536
  %41 = select i1 %40, i32 1, i32 2
  br label %42

42:                                               ; preds = %26, %39
  %43 = phi i32 [ %3, %39 ], [ -1, %26 ]
  %44 = phi i32 [ %41, %39 ], [ %3, %26 ]
  %45 = icmp eq %"class.icu_69::Edits"* %7, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %7, i32 %5, i32 %44) #8
  br label %47

47:                                               ; preds = %16, %42, %46
  %48 = phi i32 [ %43, %46 ], [ %43, %42 ], [ %17, %16 ]
  %49 = phi i32 [ %44, %46 ], [ %44, %42 ], [ %5, %16 ]
  %50 = sub nsw i32 2147483647, %1
  %51 = icmp sgt i32 %49, %50
  br i1 %51, label %212, label %52

52:                                               ; preds = %47
  %53 = icmp slt i32 %1, %2
  br i1 %53, label %54, label %207

54:                                               ; preds = %52
  %55 = icmp sgt i32 %48, -1
  br i1 %55, label %56, label %82

56:                                               ; preds = %54
  %57 = icmp ult i32 %48, 65536
  br i1 %57, label %58, label %63

58:                                               ; preds = %56
  %59 = trunc i32 %48 to i16
  %60 = add nsw i32 %1, 1
  %61 = sext i32 %1 to i64
  %62 = getelementptr inbounds i16, i16* %0, i64 %61
  store i16 %59, i16* %62, align 2
  br label %212

63:                                               ; preds = %56
  %64 = icmp ult i32 %48, 1114112
  br i1 %64, label %65, label %80

65:                                               ; preds = %63
  %66 = add nsw i32 %1, 1
  %67 = icmp slt i32 %66, %2
  br i1 %67, label %68, label %80

68:                                               ; preds = %65
  %69 = lshr i32 %48, 10
  %70 = trunc i32 %69 to i16
  %71 = add nuw nsw i16 %70, -10304
  %72 = sext i32 %1 to i64
  %73 = getelementptr inbounds i16, i16* %0, i64 %72
  store i16 %71, i16* %73, align 2
  %74 = trunc i32 %48 to i16
  %75 = and i16 %74, 1023
  %76 = or i16 %75, -9216
  %77 = add nsw i32 %1, 2
  %78 = sext i32 %66 to i64
  %79 = getelementptr inbounds i16, i16* %0, i64 %78
  store i16 %76, i16* %79, align 2
  br label %212

80:                                               ; preds = %65, %63
  %81 = add nsw i32 %49, %1
  br label %212

82:                                               ; preds = %54
  %83 = add nsw i32 %49, %1
  %84 = icmp sgt i32 %83, %2
  br i1 %84, label %212, label %85

85:                                               ; preds = %82
  %86 = icmp sgt i32 %49, 0
  br i1 %86, label %87, label %212

87:                                               ; preds = %85
  %88 = sext i32 %1 to i64
  %89 = add nsw i32 %49, -1
  %90 = zext i32 %89 to i64
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %91, 16
  br i1 %92, label %193, label %93

93:                                               ; preds = %87
  %94 = getelementptr i16, i16* %0, i64 %88
  %95 = add nsw i32 %49, -1
  %96 = zext i32 %95 to i64
  %97 = add nsw i64 %88, %96
  %98 = add nsw i64 %97, 1
  %99 = getelementptr i16, i16* %0, i64 %98
  %100 = add nuw nsw i64 %96, 1
  %101 = getelementptr i16, i16* %4, i64 %100
  %102 = icmp ult i16* %94, %101
  %103 = icmp ugt i16* %99, %4
  %104 = and i1 %102, %103
  br i1 %104, label %193, label %105

105:                                              ; preds = %93
  %106 = and i64 %91, 8589934576
  %107 = add nsw i64 %106, %88
  %108 = trunc i64 %106 to i32
  %109 = sub i32 %49, %108
  %110 = getelementptr i16, i16* %4, i64 %106
  %111 = add nsw i64 %106, -16
  %112 = lshr exact i64 %111, 4
  %113 = add nuw nsw i64 %112, 1
  %114 = and i64 %113, 3
  %115 = icmp ult i64 %111, 48
  br i1 %115, label %171, label %116

116:                                              ; preds = %105
  %117 = sub nsw i64 %113, %114
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ 0, %116 ], [ %168, %118 ]
  %120 = phi i64 [ %117, %116 ], [ %169, %118 ]
  %121 = add i64 %119, %88
  %122 = getelementptr i16, i16* %4, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !2
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !2
  %128 = getelementptr inbounds i16, i16* %0, i64 %121
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = getelementptr inbounds i16, i16* %128, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !5, !noalias !2
  %132 = or i64 %119, 16
  %133 = add i64 %132, %88
  %134 = getelementptr i16, i16* %4, i64 %132
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !2
  %137 = getelementptr i16, i16* %134, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !2
  %140 = getelementptr inbounds i16, i16* %0, i64 %133
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %141, align 2, !alias.scope !5, !noalias !2
  %142 = getelementptr inbounds i16, i16* %140, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !5, !noalias !2
  %144 = or i64 %119, 32
  %145 = add i64 %144, %88
  %146 = getelementptr i16, i16* %4, i64 %144
  %147 = bitcast i16* %146 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !2
  %149 = getelementptr i16, i16* %146, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !2
  %152 = getelementptr inbounds i16, i16* %0, i64 %145
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %153, align 2, !alias.scope !5, !noalias !2
  %154 = getelementptr inbounds i16, i16* %152, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %155, align 2, !alias.scope !5, !noalias !2
  %156 = or i64 %119, 48
  %157 = add i64 %156, %88
  %158 = getelementptr i16, i16* %4, i64 %156
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !2
  %161 = getelementptr i16, i16* %158, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !2
  %164 = getelementptr inbounds i16, i16* %0, i64 %157
  %165 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %165, align 2, !alias.scope !5, !noalias !2
  %166 = getelementptr inbounds i16, i16* %164, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %167, align 2, !alias.scope !5, !noalias !2
  %168 = add i64 %119, 64
  %169 = add i64 %120, -4
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %118, !llvm.loop !7

171:                                              ; preds = %118, %105
  %172 = phi i64 [ 0, %105 ], [ %168, %118 ]
  %173 = icmp eq i64 %114, 0
  br i1 %173, label %191, label %174

174:                                              ; preds = %171, %174
  %175 = phi i64 [ %188, %174 ], [ %172, %171 ]
  %176 = phi i64 [ %189, %174 ], [ %114, %171 ]
  %177 = add i64 %175, %88
  %178 = getelementptr i16, i16* %4, i64 %175
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !2
  %181 = getelementptr i16, i16* %178, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !2
  %184 = getelementptr inbounds i16, i16* %0, i64 %177
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %185, align 2, !alias.scope !5, !noalias !2
  %186 = getelementptr inbounds i16, i16* %184, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %187, align 2, !alias.scope !5, !noalias !2
  %188 = add i64 %175, 16
  %189 = add i64 %176, -1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %174, !llvm.loop !9

191:                                              ; preds = %174, %171
  %192 = icmp eq i64 %91, %106
  br i1 %192, label %209, label %193

193:                                              ; preds = %191, %93, %87
  %194 = phi i64 [ %88, %93 ], [ %88, %87 ], [ %107, %191 ]
  %195 = phi i32 [ %49, %93 ], [ %49, %87 ], [ %109, %191 ]
  %196 = phi i16* [ %4, %93 ], [ %4, %87 ], [ %110, %191 ]
  br label %197

197:                                              ; preds = %193, %197
  %198 = phi i64 [ %203, %197 ], [ %194, %193 ]
  %199 = phi i32 [ %205, %197 ], [ %195, %193 ]
  %200 = phi i16* [ %201, %197 ], [ %196, %193 ]
  %201 = getelementptr inbounds i16, i16* %200, i64 1
  %202 = load i16, i16* %200, align 2
  %203 = add nsw i64 %198, 1
  %204 = getelementptr inbounds i16, i16* %0, i64 %198
  store i16 %202, i16* %204, align 2
  %205 = add nsw i32 %199, -1
  %206 = icmp sgt i32 %205, 0
  br i1 %206, label %197, label %209, !llvm.loop !11

207:                                              ; preds = %52
  %208 = add nsw i32 %49, %1
  br label %212

209:                                              ; preds = %197, %191
  %210 = phi i64 [ %107, %191 ], [ %203, %197 ]
  %211 = trunc i64 %210 to i32
  br label %212

212:                                              ; preds = %209, %85, %58, %68, %80, %207, %82, %47, %38, %32, %13, %21
  %213 = phi i32 [ %23, %21 ], [ %1, %13 ], [ %34, %32 ], [ %34, %38 ], [ -1, %47 ], [ %208, %207 ], [ %83, %82 ], [ %81, %80 ], [ %60, %58 ], [ %77, %68 ], [ %1, %85 ], [ %211, %209 ]
  ret i32 %213
}

declare void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN6icu_6912_GLOBAL__N_17toLowerEijPDsiPKDsP12UCaseContextiiPNS_5EditsER10UErrorCode(i32, i32, i16*, i32, i16*, %struct.UCaseContext*, i32, i32, %"class.icu_69::Edits"*, i32* nocapture dereferenceable(4)) unnamed_addr #0 {
  %11 = alloca i16*, align 8
  %12 = icmp eq i32 %0, 1
  br i1 %12, label %22, label %13

13:                                               ; preds = %10
  %14 = icmp sgt i32 %0, -1
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = or i32 %0, 1
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %21, label %22

18:                                               ; preds = %13
  %19 = and i32 %1, 7
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18, %15
  br label %22

22:                                               ; preds = %10, %18, %15, %21
  %23 = phi i8* [ getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase14TO_LOWER_TR_LTE, i64 0, i64 0), %21 ], [ getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase15TO_LOWER_NORMALE, i64 0, i64 0), %15 ], [ getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase15TO_LOWER_NORMALE, i64 0, i64 0), %18 ], [ getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase15TO_LOWER_NORMALE, i64 0, i64 0), %10 ]
  %24 = tail call %struct.UTrie2* @ucase_getTrie_69() #8
  %25 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %24, i64 0, i32 0
  %26 = icmp eq %"class.icu_69::Edits"* %8, null
  %27 = and i32 %1, 16384
  %28 = icmp eq i32 %27, 0
  %29 = bitcast i16** %11 to i8*
  %30 = icmp sgt i32 %0, -1
  %31 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %5, i64 0, i32 4
  %32 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %5, i64 0, i32 5
  %33 = bitcast %struct.UCaseContext* %5 to i8*
  br label %34

34:                                               ; preds = %190, %22
  %35 = phi i32 [ 0, %22 ], [ %191, %190 ]
  %36 = phi i32 [ %6, %22 ], [ %192, %190 ]
  %37 = phi i32 [ %6, %22 ], [ %154, %190 ]
  %38 = icmp slt i32 %37, %7
  br i1 %38, label %39, label %128

39:                                               ; preds = %34, %122
  %40 = phi i32 [ %125, %122 ], [ %37, %34 ]
  %41 = phi i32 [ %124, %122 ], [ %36, %34 ]
  %42 = phi i32 [ %123, %122 ], [ %35, %34 ]
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds i16, i16* %4, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = icmp ult i16 %45, 383
  br i1 %47, label %48, label %57

48:                                               ; preds = %39
  %49 = zext i16 %45 to i64
  %50 = getelementptr inbounds i8, i8* %23, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, -128
  br i1 %52, label %128, label %53

53:                                               ; preds = %48
  %54 = sext i8 %51 to i16
  %55 = add nsw i32 %40, 1
  %56 = icmp eq i8 %51, 0
  br i1 %56, label %122, label %82

57:                                               ; preds = %39
  %58 = icmp ugt i16 %45, -10241
  br i1 %58, label %128, label %59

59:                                               ; preds = %57
  %60 = load i16*, i16** %25, align 8
  %61 = lshr i32 %46, 5
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i16, i16* %60, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = shl nuw nsw i32 %65, 2
  %67 = and i32 %46, 31
  %68 = add nuw nsw i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i16, i16* %60, i64 %69
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = and i32 %72, 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %128

75:                                               ; preds = %59
  %76 = add nsw i32 %40, 1
  %77 = and i32 %72, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %122, label %79

79:                                               ; preds = %75
  %80 = ashr i16 %71, 7
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %122, label %82

82:                                               ; preds = %79, %53
  %83 = phi i32 [ %55, %53 ], [ %76, %79 ]
  %84 = phi i16 [ %54, %53 ], [ %80, %79 ]
  %85 = add i16 %84, %45
  %86 = sext i32 %41 to i64
  %87 = getelementptr inbounds i16, i16* %4, i64 %86
  %88 = xor i32 %41, -1
  %89 = add i32 %83, %88
  %90 = icmp slt i32 %89, 1
  br i1 %90, label %104, label %91

91:                                               ; preds = %82
  br i1 %26, label %93, label %92

92:                                               ; preds = %91
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %8, i32 %89) #8
  br label %93

93:                                               ; preds = %92, %91
  br i1 %28, label %94, label %104

94:                                               ; preds = %93
  %95 = sub nsw i32 2147483647, %42
  %96 = icmp slt i32 %95, %89
  br i1 %96, label %121, label %97

97:                                               ; preds = %94
  %98 = add nsw i32 %89, %42
  %99 = icmp sgt i32 %98, %3
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = sext i32 %42 to i64
  %102 = getelementptr inbounds i16, i16* %2, i64 %101
  %103 = call i16* @u_memcpy_69(i16* %102, i16* %87, i32 %89) #8
  br label %104

104:                                              ; preds = %82, %93, %97, %100
  %105 = phi i32 [ %42, %82 ], [ %42, %93 ], [ %98, %97 ], [ %98, %100 ]
  %106 = icmp sgt i32 %105, -1
  br i1 %106, label %107, label %121

107:                                              ; preds = %104
  %108 = icmp slt i32 %105, %3
  br i1 %108, label %109, label %112

109:                                              ; preds = %107
  %110 = sext i32 %105 to i64
  %111 = getelementptr inbounds i16, i16* %2, i64 %110
  store i16 %85, i16* %111, align 2
  br label %114

112:                                              ; preds = %107
  %113 = icmp eq i32 %105, 2147483647
  br i1 %113, label %116, label %114

114:                                              ; preds = %112, %109
  %115 = add nuw nsw i32 %105, 1
  br label %116

116:                                              ; preds = %112, %114
  %117 = phi i32 [ %115, %114 ], [ -1, %112 ]
  br i1 %26, label %119, label %118

118:                                              ; preds = %116
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %8, i32 1, i32 1) #8
  br label %119

119:                                              ; preds = %116, %118
  %120 = icmp slt i32 %117, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %94, %104, %119
  store i32 8, i32* %9, align 4
  br label %215

122:                                              ; preds = %79, %75, %53, %119
  %123 = phi i32 [ %117, %119 ], [ %42, %53 ], [ %42, %75 ], [ %42, %79 ]
  %124 = phi i32 [ %83, %119 ], [ %41, %53 ], [ %41, %75 ], [ %41, %79 ]
  %125 = phi i32 [ %83, %119 ], [ %55, %53 ], [ %76, %75 ], [ %76, %79 ]
  %126 = phi i16 [ %85, %119 ], [ %45, %53 ], [ %45, %75 ], [ %45, %79 ]
  %127 = icmp slt i32 %125, %7
  br i1 %127, label %39, label %128

128:                                              ; preds = %122, %57, %48, %59, %34
  %129 = phi i32 [ %35, %34 ], [ %42, %59 ], [ %42, %48 ], [ %42, %57 ], [ %123, %122 ]
  %130 = phi i32 [ %36, %34 ], [ %41, %59 ], [ %41, %48 ], [ %41, %57 ], [ %124, %122 ]
  %131 = phi i32 [ %37, %34 ], [ %40, %59 ], [ %40, %48 ], [ %40, %57 ], [ %125, %122 ]
  %132 = phi i16 [ 0, %34 ], [ %45, %59 ], [ %45, %48 ], [ %45, %57 ], [ %126, %122 ]
  %133 = icmp slt i32 %131, %7
  br i1 %133, label %134, label %193

134:                                              ; preds = %128
  %135 = add nsw i32 %131, 1
  %136 = zext i16 %132 to i32
  %137 = and i32 %136, 64512
  %138 = icmp eq i32 %137, 55296
  %139 = icmp slt i32 %135, %7
  %140 = and i1 %139, %138
  br i1 %140, label %141, label %153

141:                                              ; preds = %134
  %142 = sext i32 %135 to i64
  %143 = getelementptr inbounds i16, i16* %4, i64 %142
  %144 = load i16, i16* %143, align 2
  %145 = zext i16 %144 to i32
  %146 = and i32 %145, 64512
  %147 = icmp eq i32 %146, 56320
  br i1 %147, label %148, label %153

148:                                              ; preds = %141
  %149 = shl nuw nsw i32 %136, 10
  %150 = add nsw i32 %149, -56613888
  %151 = add nsw i32 %150, %145
  %152 = add nsw i32 %131, 2
  br label %153

153:                                              ; preds = %134, %141, %148
  %154 = phi i32 [ %152, %148 ], [ %135, %141 ], [ %135, %134 ]
  %155 = phi i32 [ %151, %148 ], [ %136, %141 ], [ %136, %134 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  br i1 %30, label %156, label %158

156:                                              ; preds = %153
  store i32 %131, i32* %31, align 4
  store i32 %154, i32* %32, align 8
  %157 = call i32 @ucase_toFullLower_69(i32 %155, i32 (i8*, i8)* nonnull @_ZN6icu_6912_GLOBAL__N_125utf16_caseContextIteratorEPva, i8* %33, i16** nonnull %11, i32 %0) #8
  br label %160

158:                                              ; preds = %153
  %159 = call i32 @ucase_toFullFolding_69(i32 %155, i16** nonnull %11, i32 %1) #8
  br label %160

160:                                              ; preds = %158, %156
  %161 = phi i32 [ %157, %156 ], [ %159, %158 ]
  %162 = icmp sgt i32 %161, -1
  br i1 %162, label %163, label %190

163:                                              ; preds = %160
  %164 = sext i32 %130 to i64
  %165 = getelementptr inbounds i16, i16* %4, i64 %164
  %166 = sub nsw i32 %131, %130
  %167 = icmp slt i32 %166, 1
  br i1 %167, label %181, label %168

168:                                              ; preds = %163
  br i1 %26, label %170, label %169

169:                                              ; preds = %168
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %8, i32 %166) #8
  br label %170

170:                                              ; preds = %169, %168
  br i1 %28, label %171, label %181

171:                                              ; preds = %170
  %172 = sub nsw i32 2147483647, %129
  %173 = icmp slt i32 %172, %166
  br i1 %173, label %189, label %174

174:                                              ; preds = %171
  %175 = add nsw i32 %166, %129
  %176 = icmp sgt i32 %175, %3
  br i1 %176, label %181, label %177

177:                                              ; preds = %174
  %178 = sext i32 %129 to i64
  %179 = getelementptr inbounds i16, i16* %2, i64 %178
  %180 = call i16* @u_memcpy_69(i16* %179, i16* %165, i32 %166) #8
  br label %181

181:                                              ; preds = %163, %170, %174, %177
  %182 = phi i32 [ %129, %163 ], [ %129, %170 ], [ %175, %174 ], [ %175, %177 ]
  %183 = icmp sgt i32 %182, -1
  br i1 %183, label %184, label %189

184:                                              ; preds = %181
  %185 = load i16*, i16** %11, align 8
  %186 = sub nsw i32 %154, %131
  %187 = call fastcc i32 @_ZN6icu_6912_GLOBAL__N_112appendResultEPDsiiiPKDsijPNS_5EditsE(i16* %2, i32 %182, i32 %3, i32 %161, i16* %185, i32 %186, i32 %1, %"class.icu_69::Edits"* %8)
  %188 = icmp slt i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %184, %181, %171
  store i32 8, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %215

190:                                              ; preds = %184, %160
  %191 = phi i32 [ %129, %160 ], [ %187, %184 ]
  %192 = phi i32 [ %130, %160 ], [ %154, %184 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %34

193:                                              ; preds = %128
  %194 = sext i32 %130 to i64
  %195 = getelementptr inbounds i16, i16* %4, i64 %194
  %196 = sub nsw i32 %131, %130
  %197 = icmp slt i32 %196, 1
  br i1 %197, label %211, label %198

198:                                              ; preds = %193
  br i1 %26, label %200, label %199

199:                                              ; preds = %198
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %8, i32 %196) #8
  br label %200

200:                                              ; preds = %199, %198
  br i1 %28, label %201, label %211

201:                                              ; preds = %200
  %202 = sub nsw i32 2147483647, %129
  %203 = icmp slt i32 %202, %196
  br i1 %203, label %214, label %204

204:                                              ; preds = %201
  %205 = add nsw i32 %196, %129
  %206 = icmp sgt i32 %205, %3
  br i1 %206, label %211, label %207

207:                                              ; preds = %204
  %208 = sext i32 %129 to i64
  %209 = getelementptr inbounds i16, i16* %2, i64 %208
  %210 = call i16* @u_memcpy_69(i16* %209, i16* %195, i32 %196) #8
  br label %211

211:                                              ; preds = %193, %200, %204, %207
  %212 = phi i32 [ %129, %193 ], [ %129, %200 ], [ %205, %204 ], [ %205, %207 ]
  %213 = icmp slt i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %201, %211
  store i32 8, i32* %9, align 4
  br label %215

215:                                              ; preds = %189, %121, %211, %214
  %216 = phi i32 [ 0, %214 ], [ %212, %211 ], [ 0, %121 ], [ 0, %189 ]
  ret i32 %216
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6icu_6910GreekUpper13getLetterDataEi(i32) local_unnamed_addr #5 {
  %2 = add i32 %0, -880
  %3 = icmp ugt i32 %2, 7606
  %4 = add i32 %0, -1024
  %5 = icmp ult i32 %4, 6912
  %6 = or i1 %3, %5
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  %8 = icmp slt i32 %0, 1024
  br i1 %8, label %9, label %13

9:                                                ; preds = %7
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds [144 x i16], [144 x i16]* @_ZN6icu_6910GreekUpperL8data0370E, i64 0, i64 %10
  %12 = load i16, i16* %11, align 2
  br label %23

13:                                               ; preds = %7
  %14 = icmp slt i32 %0, 8192
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = add nsw i32 %0, -7936
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN6icu_6910GreekUpperL8data1F00E, i64 0, i64 %17
  %19 = load i16, i16* %18, align 2
  br label %23

20:                                               ; preds = %13
  %21 = icmp eq i32 %0, 8486
  %22 = select i1 %21, i16 5033, i16 0
  br label %23

23:                                               ; preds = %20, %1, %15, %9
  %24 = phi i16 [ %12, %9 ], [ %19, %15 ], [ 0, %1 ], [ %22, %20 ]
  %25 = zext i16 %24 to i32
  ret i32 %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6icu_6910GreekUpper16getDiacriticDataEi(i32) local_unnamed_addr #5 {
  switch i32 %0, label %6 [
    i32 768, label %7
    i32 769, label %7
    i32 834, label %7
    i32 770, label %7
    i32 771, label %7
    i32 785, label %7
    i32 776, label %2
    i32 836, label %3
    i32 837, label %4
    i32 772, label %5
    i32 774, label %5
    i32 787, label %5
    i32 788, label %5
    i32 835, label %5
  ]

2:                                                ; preds = %1
  br label %7

3:                                                ; preds = %1
  br label %7

4:                                                ; preds = %1
  br label %7

5:                                                ; preds = %1, %1, %1, %1, %1
  br label %7

6:                                                ; preds = %1
  br label %7

7:                                                ; preds = %1, %1, %1, %1, %1, %1, %6, %5, %4, %3, %2
  %8 = phi i32 [ 0, %6 ], [ 131072, %5 ], [ 8192, %4 ], [ 81920, %3 ], [ 65536, %2 ], [ 16384, %1 ], [ 16384, %1 ], [ 16384, %1 ], [ 16384, %1 ], [ 16384, %1 ], [ 16384, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6910GreekUpper23isFollowedByCasedLetterEPKDsii(i16* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  br label %4

4:                                                ; preds = %29, %3
  %5 = phi i32 [ %1, %3 ], [ %30, %29 ]
  %6 = icmp slt i32 %5, %2
  br i1 %6, label %7, label %38

7:                                                ; preds = %4
  %8 = add nsw i32 %5, 1
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds i16, i16* %0, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = and i32 %12, 64512
  %14 = icmp ne i32 %13, 55296
  %15 = icmp eq i32 %8, %2
  %16 = or i1 %15, %14
  br i1 %16, label %29, label %17

17:                                               ; preds = %7
  %18 = sext i32 %8 to i64
  %19 = getelementptr inbounds i16, i16* %0, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 64512
  %23 = icmp eq i32 %22, 56320
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = add nsw i32 %5, 2
  %26 = shl nuw nsw i32 %12, 10
  %27 = add nsw i32 %26, -56613888
  %28 = add nsw i32 %27, %21
  br label %29

29:                                               ; preds = %7, %17, %24
  %30 = phi i32 [ %8, %7 ], [ %25, %24 ], [ %8, %17 ]
  %31 = phi i32 [ %12, %7 ], [ %28, %24 ], [ %12, %17 ]
  %32 = tail call i32 @ucase_getTypeOrIgnorable_69(i32 %31) #8
  %33 = and i32 %32, 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %4

35:                                               ; preds = %29
  %36 = icmp ne i32 %32, 0
  %37 = zext i1 %36 to i8
  br label %38

38:                                               ; preds = %4, %35
  %39 = phi i8 [ %37, %35 ], [ 0, %4 ]
  ret i8 %39
}

declare i32 @ucase_getTypeOrIgnorable_69(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6910GreekUpper7toUpperEjPDsiPKDsiPNS_5EditsER10UErrorCode(i32, i16* nocapture, i32, i16* nocapture readonly, i32, %"class.icu_69::Edits"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 {
  %8 = alloca i16*, align 8
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %298

10:                                               ; preds = %7
  %11 = icmp eq %"class.icu_69::Edits"* %5, null
  %12 = and i32 %0, 16384
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %13, %11
  %15 = icmp ne %"class.icu_69::Edits"* %5, null
  %16 = bitcast i16** %8 to i8*
  br label %17

17:                                               ; preds = %10, %293
  %18 = phi i32 [ 0, %10 ], [ %296, %293 ]
  %19 = phi i32 [ 0, %10 ], [ %295, %293 ]
  %20 = phi i32 [ 0, %10 ], [ %294, %293 ]
  %21 = add nsw i32 %18, 1
  %22 = sext i32 %18 to i64
  %23 = getelementptr inbounds i16, i16* %3, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = and i32 %25, 64512
  %27 = icmp ne i32 %26, 55296
  %28 = icmp eq i32 %21, %4
  %29 = or i1 %28, %27
  br i1 %29, label %42, label %30

30:                                               ; preds = %17
  %31 = sext i32 %21 to i64
  %32 = getelementptr inbounds i16, i16* %3, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 64512
  %36 = icmp eq i32 %35, 56320
  br i1 %36, label %37, label %42

37:                                               ; preds = %30
  %38 = add nsw i32 %18, 2
  %39 = shl nuw nsw i32 %25, 10
  %40 = add nsw i32 %39, -56613888
  %41 = add nsw i32 %40, %34
  br label %42

42:                                               ; preds = %17, %30, %37
  %43 = phi i32 [ %21, %17 ], [ %38, %37 ], [ %21, %30 ]
  %44 = phi i32 [ %25, %17 ], [ %41, %37 ], [ %25, %30 ]
  %45 = call i32 @ucase_getTypeOrIgnorable_69(i32 %44) #8
  %46 = and i32 %45, 4
  %47 = icmp eq i32 %46, 0
  %48 = and i32 %19, 1
  %49 = icmp ne i32 %45, 0
  %50 = zext i1 %49 to i32
  %51 = select i1 %47, i32 %50, i32 %48
  %52 = add nsw i32 %44, -880
  %53 = icmp ugt i32 %52, 7606
  %54 = add nsw i32 %44, -1024
  %55 = icmp ult i32 %54, 6912
  %56 = or i1 %53, %55
  br i1 %56, label %285, label %57

57:                                               ; preds = %42
  %58 = icmp slt i32 %44, 1024
  br i1 %58, label %59, label %62

59:                                               ; preds = %57
  %60 = sext i32 %52 to i64
  %61 = getelementptr inbounds [144 x i16], [144 x i16]* @_ZN6icu_6910GreekUpperL8data0370E, i64 0, i64 %60
  br label %70

62:                                               ; preds = %57
  %63 = icmp slt i32 %44, 8192
  br i1 %63, label %64, label %68

64:                                               ; preds = %62
  %65 = add nsw i32 %44, -7936
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN6icu_6910GreekUpperL8data1F00E, i64 0, i64 %66
  br label %70

68:                                               ; preds = %62
  %69 = icmp eq i32 %44, 8486
  br i1 %69, label %75, label %285

70:                                               ; preds = %59, %64
  %71 = phi i16* [ %61, %59 ], [ %67, %64 ]
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = icmp eq i16 %72, 0
  br i1 %74, label %285, label %75

75:                                               ; preds = %68, %70
  %76 = phi i32 [ %73, %70 ], [ 5033, %68 ]
  %77 = and i32 %76, 1023
  %78 = and i32 %76, 4096
  %79 = icmp eq i32 %78, 0
  %80 = and i32 %19, 2
  %81 = icmp eq i32 %80, 0
  %82 = or i1 %81, %79
  br i1 %82, label %86, label %83

83:                                               ; preds = %75
  switch i32 %77, label %86 [
    i32 933, label %84
    i32 921, label %84
  ]

84:                                               ; preds = %83, %83
  %85 = or i32 %76, 32768
  br label %86

86:                                               ; preds = %83, %75, %84
  %87 = phi i32 [ %85, %84 ], [ %76, %83 ], [ %76, %75 ]
  %88 = lshr i32 %87, 13
  %89 = and i32 %88, 1
  %90 = icmp slt i32 %43, %4
  br i1 %90, label %91, label %114

91:                                               ; preds = %86
  %92 = sext i32 %43 to i64
  br label %93

93:                                               ; preds = %103, %91
  %94 = phi i64 [ %92, %91 ], [ %108, %103 ]
  %95 = phi i32 [ %89, %91 ], [ %107, %103 ]
  %96 = phi i32 [ %87, %91 ], [ %104, %103 ]
  %97 = phi i32 [ %43, %91 ], [ %109, %103 ]
  %98 = getelementptr inbounds i16, i16* %3, i64 %94
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = call i32 @_ZN6icu_6910GreekUpper16getDiacriticDataEi(i32 %100)
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %93
  %104 = or i32 %101, %96
  %105 = lshr i32 %101, 13
  %106 = and i32 %105, 1
  %107 = add nuw nsw i32 %106, %95
  %108 = add nsw i64 %94, 1
  %109 = add nsw i32 %97, 1
  %110 = trunc i64 %108 to i32
  %111 = icmp eq i32 %110, %4
  br i1 %111, label %114, label %93

112:                                              ; preds = %93
  %113 = trunc i64 %94 to i32
  br label %114

114:                                              ; preds = %103, %112, %86
  %115 = phi i32 [ %43, %86 ], [ %113, %112 ], [ %109, %103 ]
  %116 = phi i32 [ %87, %86 ], [ %96, %112 ], [ %104, %103 ]
  %117 = phi i32 [ %89, %86 ], [ %95, %112 ], [ %107, %103 ]
  %118 = and i32 %116, 53248
  %119 = icmp eq i32 %118, 20480
  %120 = or i32 %51, 2
  %121 = select i1 %119, i32 %120, i32 %51
  %122 = icmp eq i32 %77, 919
  br i1 %122, label %123, label %167

123:                                              ; preds = %114
  %124 = and i32 %116, 16384
  %125 = icmp ne i32 %124, 0
  %126 = or i32 %117, %48
  %127 = icmp eq i32 %126, 0
  %128 = and i1 %125, %127
  br i1 %128, label %129, label %167

129:                                              ; preds = %123, %154
  %130 = phi i32 [ %155, %154 ], [ %115, %123 ]
  %131 = icmp slt i32 %130, %4
  br i1 %131, label %132, label %162

132:                                              ; preds = %129
  %133 = add nsw i32 %130, 1
  %134 = sext i32 %130 to i64
  %135 = getelementptr inbounds i16, i16* %3, i64 %134
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %136 to i32
  %138 = and i32 %137, 64512
  %139 = icmp ne i32 %138, 55296
  %140 = icmp eq i32 %133, %4
  %141 = or i1 %140, %139
  br i1 %141, label %154, label %142

142:                                              ; preds = %132
  %143 = sext i32 %133 to i64
  %144 = getelementptr inbounds i16, i16* %3, i64 %143
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = and i32 %146, 64512
  %148 = icmp eq i32 %147, 56320
  br i1 %148, label %149, label %154

149:                                              ; preds = %142
  %150 = add nsw i32 %130, 2
  %151 = shl nuw nsw i32 %137, 10
  %152 = add nsw i32 %151, -56613888
  %153 = add nsw i32 %152, %146
  br label %154

154:                                              ; preds = %149, %142, %132
  %155 = phi i32 [ %133, %132 ], [ %150, %149 ], [ %133, %142 ]
  %156 = phi i32 [ %137, %132 ], [ %153, %149 ], [ %137, %142 ]
  %157 = call i32 @ucase_getTypeOrIgnorable_69(i32 %156) #8
  %158 = and i32 %157, 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %129

160:                                              ; preds = %154
  %161 = icmp eq i32 %157, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %129, %160
  %163 = icmp eq i32 %115, %18
  %164 = select i1 %163, i32 905, i32 919
  %165 = xor i1 %163, true
  %166 = zext i1 %165 to i8
  br label %173

167:                                              ; preds = %160, %123, %114
  %168 = trunc i32 %116 to i16
  %169 = icmp slt i16 %168, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %167
  switch i32 %77, label %173 [
    i32 921, label %171
    i32 933, label %172
  ]

171:                                              ; preds = %170
  br label %173

172:                                              ; preds = %170
  br label %173

173:                                              ; preds = %170, %162, %167, %172, %171
  %174 = phi i32 [ 0, %171 ], [ 0, %172 ], [ %116, %167 ], [ %116, %162 ], [ %116, %170 ]
  %175 = phi i32 [ 938, %171 ], [ 939, %172 ], [ %77, %167 ], [ %164, %162 ], [ %77, %170 ]
  %176 = phi i8 [ 0, %171 ], [ 0, %172 ], [ 0, %167 ], [ %166, %162 ], [ 0, %170 ]
  br i1 %14, label %224, label %177

177:                                              ; preds = %173
  %178 = load i16, i16* %23, align 2
  %179 = zext i16 %178 to i32
  %180 = icmp ne i32 %175, %179
  %181 = icmp sgt i32 %117, 0
  %182 = or i1 %181, %180
  %183 = and i32 %174, 98304
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %196, label %185

185:                                              ; preds = %177
  %186 = icmp slt i32 %21, %115
  br i1 %186, label %187, label %192

187:                                              ; preds = %185
  %188 = sext i32 %21 to i64
  %189 = getelementptr inbounds i16, i16* %3, i64 %188
  %190 = load i16, i16* %189, align 2
  %191 = icmp ne i16 %190, 776
  br label %192

192:                                              ; preds = %185, %187
  %193 = phi i1 [ true, %185 ], [ %191, %187 ]
  %194 = or i1 %182, %193
  %195 = add nsw i32 %18, 2
  br label %196

196:                                              ; preds = %177, %192
  %197 = phi i1 [ %194, %192 ], [ %182, %177 ]
  %198 = phi i32 [ %195, %192 ], [ %21, %177 ]
  %199 = icmp eq i8 %176, 0
  br i1 %199, label %211, label %200

200:                                              ; preds = %196
  %201 = icmp slt i32 %198, %115
  br i1 %201, label %202, label %207

202:                                              ; preds = %200
  %203 = sext i32 %198 to i64
  %204 = getelementptr inbounds i16, i16* %3, i64 %203
  %205 = load i16, i16* %204, align 2
  %206 = icmp ne i16 %205, 769
  br label %207

207:                                              ; preds = %200, %202
  %208 = phi i1 [ true, %200 ], [ %206, %202 ]
  %209 = or i1 %197, %208
  %210 = add nsw i32 %198, 1
  br label %211

211:                                              ; preds = %196, %207
  %212 = phi i1 [ %209, %207 ], [ %197, %196 ]
  %213 = phi i32 [ %210, %207 ], [ %198, %196 ]
  %214 = sub nsw i32 %115, %18
  %215 = sub nsw i32 %213, %18
  %216 = add nsw i32 %215, %117
  %217 = icmp ne i32 %214, %216
  %218 = or i1 %212, %217
  br i1 %218, label %219, label %221

219:                                              ; preds = %211
  br i1 %15, label %220, label %224

220:                                              ; preds = %219
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %5, i32 %214, i32 %216) #8
  br label %224

221:                                              ; preds = %211
  br i1 %15, label %222, label %223

222:                                              ; preds = %221
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %5, i32 %214) #8
  br label %223

223:                                              ; preds = %221, %222
  br i1 %13, label %224, label %293

224:                                              ; preds = %223, %219, %220, %173
  %225 = icmp slt i32 %20, %2
  br i1 %225, label %226, label %230

226:                                              ; preds = %224
  %227 = trunc i32 %175 to i16
  %228 = sext i32 %20 to i64
  %229 = getelementptr inbounds i16, i16* %1, i64 %228
  store i16 %227, i16* %229, align 2
  br label %232

230:                                              ; preds = %224
  %231 = icmp eq i32 %20, 2147483647
  br i1 %231, label %284, label %232

232:                                              ; preds = %226, %230
  %233 = add nsw i32 %20, 1
  %234 = icmp slt i32 %233, 0
  %235 = and i32 %174, 98304
  %236 = icmp eq i32 %235, 0
  %237 = or i1 %234, %236
  br i1 %237, label %247, label %238

238:                                              ; preds = %232
  %239 = icmp slt i32 %233, %2
  br i1 %239, label %240, label %243

240:                                              ; preds = %238
  %241 = sext i32 %233 to i64
  %242 = getelementptr inbounds i16, i16* %1, i64 %241
  store i16 776, i16* %242, align 2
  br label %245

243:                                              ; preds = %238
  %244 = icmp eq i32 %233, 2147483647
  br i1 %244, label %284, label %245

245:                                              ; preds = %243, %240
  %246 = add nsw i32 %20, 2
  br label %247

247:                                              ; preds = %245, %232
  %248 = phi i32 [ %233, %232 ], [ %246, %245 ]
  %249 = icmp sgt i32 %248, -1
  %250 = icmp ne i8 %176, 0
  %251 = and i1 %250, %249
  br i1 %251, label %252, label %261

252:                                              ; preds = %247
  %253 = icmp slt i32 %248, %2
  br i1 %253, label %254, label %257

254:                                              ; preds = %252
  %255 = sext i32 %248 to i64
  %256 = getelementptr inbounds i16, i16* %1, i64 %255
  store i16 769, i16* %256, align 2
  br label %259

257:                                              ; preds = %252
  %258 = icmp eq i32 %248, 2147483647
  br i1 %258, label %284, label %259

259:                                              ; preds = %257, %254
  %260 = add nuw nsw i32 %248, 1
  br label %261

261:                                              ; preds = %259, %247
  %262 = phi i32 [ %248, %247 ], [ %260, %259 ]
  %263 = icmp sgt i32 %262, -1
  %264 = icmp sgt i32 %117, 0
  %265 = and i1 %263, %264
  br i1 %265, label %266, label %281

266:                                              ; preds = %261, %275
  %267 = phi i32 [ %277, %275 ], [ %117, %261 ]
  %268 = phi i32 [ %276, %275 ], [ %262, %261 ]
  %269 = icmp slt i32 %268, %2
  br i1 %269, label %270, label %273

270:                                              ; preds = %266
  %271 = sext i32 %268 to i64
  %272 = getelementptr inbounds i16, i16* %1, i64 %271
  store i16 921, i16* %272, align 2
  br label %275

273:                                              ; preds = %266
  %274 = icmp eq i32 %268, 2147483647
  br i1 %274, label %284, label %275

275:                                              ; preds = %270, %273
  %276 = add nsw i32 %268, 1
  %277 = add nsw i32 %267, -1
  %278 = icmp sgt i32 %268, -2
  %279 = icmp sgt i32 %277, 0
  %280 = and i1 %278, %279
  br i1 %280, label %266, label %281

281:                                              ; preds = %275, %261
  %282 = phi i32 [ %262, %261 ], [ %276, %275 ]
  %283 = icmp slt i32 %282, 0
  br i1 %283, label %284, label %293

284:                                              ; preds = %230, %243, %257, %281, %273
  store i32 8, i32* %6, align 4
  br label %298

285:                                              ; preds = %68, %42, %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %286 = call i32 @ucase_toFullUpper_69(i32 %44, i32 (i8*, i8)* null, i8* null, i16** nonnull %8, i32 4) #8
  %287 = load i16*, i16** %8, align 8
  %288 = sub nsw i32 %43, %18
  %289 = call fastcc i32 @_ZN6icu_6912_GLOBAL__N_112appendResultEPDsiiiPKDsijPNS_5EditsE(i16* %1, i32 %20, i32 %2, i32 %286, i16* %287, i32 %288, i32 %0, %"class.icu_69::Edits"* %5)
  %290 = icmp slt i32 %289, 0
  br i1 %290, label %292, label %291

291:                                              ; preds = %285
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %293

292:                                              ; preds = %285
  store i32 8, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %298

293:                                              ; preds = %223, %281, %291
  %294 = phi i32 [ %289, %291 ], [ %20, %223 ], [ %282, %281 ]
  %295 = phi i32 [ %51, %291 ], [ %121, %223 ], [ %121, %281 ]
  %296 = phi i32 [ %43, %291 ], [ %115, %223 ], [ %115, %281 ]
  %297 = icmp slt i32 %296, %4
  br i1 %297, label %17, label %298

298:                                              ; preds = %293, %7, %292, %284
  %299 = phi i32 [ 0, %284 ], [ 0, %292 ], [ 0, %7 ], [ %294, %293 ]
  ret i32 %299
}

declare void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"*, i32) local_unnamed_addr #2

declare i32 @ucase_toFullUpper_69(i32, i32 (i8*, i8)*, i8*, i16**, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ustrcase_internalToLower_69(i32, i32, %"class.icu_69::BreakIterator"* nocapture readnone, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %10 = alloca %struct.UCaseContext, align 8
  %11 = bitcast %struct.UCaseContext* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8
  %12 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %10, i64 0, i32 1
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false)
  %14 = bitcast %struct.UCaseContext* %10 to i16**
  store i16* %5, i16** %14, align 8
  %15 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %10, i64 0, i32 3
  store i32 %6, i32* %15, align 8
  %16 = call fastcc i32 @_ZN6icu_6912_GLOBAL__N_17toLowerEijPDsiPKDsP12UCaseContextiiPNS_5EditsER10UErrorCode(i32 %0, i32 %1, i16* %3, i32 %4, i16* %5, %struct.UCaseContext* nonnull %10, i32 0, i32 %6, %"class.icu_69::Edits"* %7, i32* dereferenceable(4) %8)
  %17 = load i32, i32* %8, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %9
  %20 = icmp sgt i32 %16, %4
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  store i32 15, i32* %8, align 4
  br label %26

22:                                               ; preds = %19
  %23 = icmp eq %"class.icu_69::Edits"* %7, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %7, i32* dereferenceable(4) %8) #8
  br label %26

26:                                               ; preds = %9, %21, %22, %24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ustrcase_internalToUpper_69(i32, i32, %"class.icu_69::BreakIterator"* nocapture readnone, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %10 = alloca i16*, align 8
  %11 = alloca %struct.UCaseContext, align 8
  %12 = icmp eq i32 %0, 4
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = tail call i32 @_ZN6icu_6910GreekUpper7toUpperEjPDsiPKDsiPNS_5EditsER10UErrorCode(i32 %1, i16* %3, i32 %4, i16* %5, i32 %6, %"class.icu_69::Edits"* %7, i32* dereferenceable(4) %8)
  br label %209

15:                                               ; preds = %9
  %16 = bitcast %struct.UCaseContext* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #8
  %17 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 1
  %18 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false)
  %19 = bitcast %struct.UCaseContext* %11 to i16**
  store i16* %5, i16** %19, align 8
  %20 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 3
  store i32 %6, i32* %20, align 8
  %21 = icmp eq i32 %0, 2
  %22 = select i1 %21, i8* getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase11TO_UPPER_TRE, i64 0, i64 0), i8* getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase15TO_UPPER_NORMALE, i64 0, i64 0)
  %23 = tail call %struct.UTrie2* @ucase_getTrie_69() #8
  %24 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %23, i64 0, i32 0
  %25 = icmp eq %"class.icu_69::Edits"* %7, null
  %26 = and i32 %1, 16384
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 4
  %29 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 5
  %30 = bitcast i16** %10 to i8*
  br label %31

31:                                               ; preds = %182, %15
  %32 = phi i32 [ 0, %15 ], [ %183, %182 ]
  %33 = phi i32 [ 0, %15 ], [ %184, %182 ]
  %34 = phi i32 [ 0, %15 ], [ %151, %182 ]
  %35 = icmp slt i32 %34, %6
  br i1 %35, label %36, label %125

36:                                               ; preds = %31, %119
  %37 = phi i32 [ %122, %119 ], [ %34, %31 ]
  %38 = phi i32 [ %121, %119 ], [ %33, %31 ]
  %39 = phi i32 [ %120, %119 ], [ %32, %31 ]
  %40 = sext i32 %37 to i64
  %41 = getelementptr inbounds i16, i16* %5, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = icmp ult i16 %42, 383
  br i1 %44, label %45, label %54

45:                                               ; preds = %36
  %46 = zext i16 %42 to i64
  %47 = getelementptr inbounds i8, i8* %22, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, -128
  br i1 %49, label %125, label %50

50:                                               ; preds = %45
  %51 = sext i8 %48 to i16
  %52 = add nsw i32 %37, 1
  %53 = icmp eq i8 %48, 0
  br i1 %53, label %119, label %79

54:                                               ; preds = %36
  %55 = icmp ugt i16 %42, -10241
  br i1 %55, label %125, label %56

56:                                               ; preds = %54
  %57 = load i16*, i16** %24, align 8
  %58 = lshr i32 %43, 5
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i16, i16* %57, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = shl nuw nsw i32 %62, 2
  %64 = and i32 %43, 31
  %65 = add nuw nsw i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i16, i16* %57, i64 %66
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = and i32 %69, 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %125

72:                                               ; preds = %56
  %73 = add nsw i32 %37, 1
  %74 = and i32 %69, 3
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %119

76:                                               ; preds = %72
  %77 = ashr i16 %68, 7
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %119, label %79

79:                                               ; preds = %76, %50
  %80 = phi i32 [ %52, %50 ], [ %73, %76 ]
  %81 = phi i16 [ %51, %50 ], [ %77, %76 ]
  %82 = add i16 %81, %42
  %83 = sext i32 %38 to i64
  %84 = getelementptr inbounds i16, i16* %5, i64 %83
  %85 = xor i32 %38, -1
  %86 = add i32 %80, %85
  %87 = icmp slt i32 %86, 1
  br i1 %87, label %101, label %88

88:                                               ; preds = %79
  br i1 %25, label %90, label %89

89:                                               ; preds = %88
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %7, i32 %86) #8
  br label %90

90:                                               ; preds = %89, %88
  br i1 %27, label %91, label %101

91:                                               ; preds = %90
  %92 = sub nsw i32 2147483647, %39
  %93 = icmp slt i32 %92, %86
  br i1 %93, label %118, label %94

94:                                               ; preds = %91
  %95 = add nsw i32 %86, %39
  %96 = icmp sgt i32 %95, %4
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = sext i32 %39 to i64
  %99 = getelementptr inbounds i16, i16* %3, i64 %98
  %100 = call i16* @u_memcpy_69(i16* %99, i16* %84, i32 %86) #8
  br label %101

101:                                              ; preds = %97, %94, %90, %79
  %102 = phi i32 [ %39, %79 ], [ %39, %90 ], [ %95, %94 ], [ %95, %97 ]
  %103 = icmp sgt i32 %102, -1
  br i1 %103, label %104, label %118

104:                                              ; preds = %101
  %105 = icmp slt i32 %102, %4
  br i1 %105, label %106, label %109

106:                                              ; preds = %104
  %107 = sext i32 %102 to i64
  %108 = getelementptr inbounds i16, i16* %3, i64 %107
  store i16 %82, i16* %108, align 2
  br label %111

109:                                              ; preds = %104
  %110 = icmp eq i32 %102, 2147483647
  br i1 %110, label %113, label %111

111:                                              ; preds = %109, %106
  %112 = add nuw nsw i32 %102, 1
  br label %113

113:                                              ; preds = %111, %109
  %114 = phi i32 [ %112, %111 ], [ -1, %109 ]
  br i1 %25, label %116, label %115

115:                                              ; preds = %113
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %7, i32 1, i32 1) #8
  br label %116

116:                                              ; preds = %115, %113
  %117 = icmp slt i32 %114, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %116, %101, %91
  store i32 8, i32* %8, align 4
  br label %207

119:                                              ; preds = %116, %76, %72, %50
  %120 = phi i32 [ %114, %116 ], [ %39, %50 ], [ %39, %72 ], [ %39, %76 ]
  %121 = phi i32 [ %80, %116 ], [ %38, %50 ], [ %38, %72 ], [ %38, %76 ]
  %122 = phi i32 [ %80, %116 ], [ %52, %50 ], [ %73, %72 ], [ %73, %76 ]
  %123 = phi i16 [ %82, %116 ], [ %42, %50 ], [ %42, %72 ], [ %42, %76 ]
  %124 = icmp slt i32 %122, %6
  br i1 %124, label %36, label %125

125:                                              ; preds = %119, %56, %54, %45, %31
  %126 = phi i32 [ %32, %31 ], [ %120, %119 ], [ %39, %54 ], [ %39, %45 ], [ %39, %56 ]
  %127 = phi i32 [ %33, %31 ], [ %121, %119 ], [ %38, %54 ], [ %38, %45 ], [ %38, %56 ]
  %128 = phi i32 [ %34, %31 ], [ %122, %119 ], [ %37, %54 ], [ %37, %45 ], [ %37, %56 ]
  %129 = phi i16 [ 0, %31 ], [ %123, %119 ], [ %42, %54 ], [ %42, %45 ], [ %42, %56 ]
  %130 = icmp slt i32 %128, %6
  br i1 %130, label %131, label %185

131:                                              ; preds = %125
  %132 = add nsw i32 %128, 1
  store i32 %128, i32* %28, align 4
  %133 = zext i16 %129 to i32
  %134 = and i32 %133, 64512
  %135 = icmp eq i32 %134, 55296
  %136 = icmp slt i32 %132, %6
  %137 = and i1 %136, %135
  br i1 %137, label %138, label %150

138:                                              ; preds = %131
  %139 = sext i32 %132 to i64
  %140 = getelementptr inbounds i16, i16* %5, i64 %139
  %141 = load i16, i16* %140, align 2
  %142 = zext i16 %141 to i32
  %143 = and i32 %142, 64512
  %144 = icmp eq i32 %143, 56320
  br i1 %144, label %145, label %150

145:                                              ; preds = %138
  %146 = shl nuw nsw i32 %133, 10
  %147 = add nsw i32 %146, -56613888
  %148 = add nsw i32 %147, %142
  %149 = add nsw i32 %128, 2
  br label %150

150:                                              ; preds = %145, %138, %131
  %151 = phi i32 [ %149, %145 ], [ %132, %138 ], [ %132, %131 ]
  %152 = phi i32 [ %148, %145 ], [ %133, %138 ], [ %133, %131 ]
  store i32 %151, i32* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %10, align 8
  %153 = call i32 @ucase_toFullUpper_69(i32 %152, i32 (i8*, i8)* nonnull @_ZN6icu_6912_GLOBAL__N_125utf16_caseContextIteratorEPva, i8* nonnull %16, i16** nonnull %10, i32 %0) #8
  %154 = icmp sgt i32 %153, -1
  br i1 %154, label %155, label %182

155:                                              ; preds = %150
  %156 = sext i32 %127 to i64
  %157 = getelementptr inbounds i16, i16* %5, i64 %156
  %158 = sub nsw i32 %128, %127
  %159 = icmp slt i32 %158, 1
  br i1 %159, label %173, label %160

160:                                              ; preds = %155
  br i1 %25, label %162, label %161

161:                                              ; preds = %160
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %7, i32 %158) #8
  br label %162

162:                                              ; preds = %161, %160
  br i1 %27, label %163, label %173

163:                                              ; preds = %162
  %164 = sub nsw i32 2147483647, %126
  %165 = icmp slt i32 %164, %158
  br i1 %165, label %181, label %166

166:                                              ; preds = %163
  %167 = add nsw i32 %158, %126
  %168 = icmp sgt i32 %167, %4
  br i1 %168, label %173, label %169

169:                                              ; preds = %166
  %170 = sext i32 %126 to i64
  %171 = getelementptr inbounds i16, i16* %3, i64 %170
  %172 = call i16* @u_memcpy_69(i16* %171, i16* %157, i32 %158) #8
  br label %173

173:                                              ; preds = %169, %166, %162, %155
  %174 = phi i32 [ %126, %155 ], [ %126, %162 ], [ %167, %166 ], [ %167, %169 ]
  %175 = icmp sgt i32 %174, -1
  br i1 %175, label %176, label %181

176:                                              ; preds = %173
  %177 = load i16*, i16** %10, align 8
  %178 = sub nsw i32 %151, %128
  %179 = call fastcc i32 @_ZN6icu_6912_GLOBAL__N_112appendResultEPDsiiiPKDsijPNS_5EditsE(i16* %3, i32 %174, i32 %4, i32 %153, i16* %177, i32 %178, i32 %1, %"class.icu_69::Edits"* %7) #8
  %180 = icmp slt i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %176, %173, %163
  store i32 8, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  br label %207

182:                                              ; preds = %176, %150
  %183 = phi i32 [ %126, %150 ], [ %179, %176 ]
  %184 = phi i32 [ %127, %150 ], [ %151, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  br label %31

185:                                              ; preds = %125
  %186 = sext i32 %127 to i64
  %187 = getelementptr inbounds i16, i16* %5, i64 %186
  %188 = sub nsw i32 %128, %127
  %189 = icmp slt i32 %188, 1
  br i1 %189, label %203, label %190

190:                                              ; preds = %185
  br i1 %25, label %192, label %191

191:                                              ; preds = %190
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %7, i32 %188) #8
  br label %192

192:                                              ; preds = %191, %190
  br i1 %27, label %193, label %203

193:                                              ; preds = %192
  %194 = sub nsw i32 2147483647, %126
  %195 = icmp slt i32 %194, %188
  br i1 %195, label %206, label %196

196:                                              ; preds = %193
  %197 = add nsw i32 %188, %126
  %198 = icmp sgt i32 %197, %4
  br i1 %198, label %203, label %199

199:                                              ; preds = %196
  %200 = sext i32 %126 to i64
  %201 = getelementptr inbounds i16, i16* %3, i64 %200
  %202 = call i16* @u_memcpy_69(i16* %201, i16* %187, i32 %188) #8
  br label %203

203:                                              ; preds = %199, %196, %192, %185
  %204 = phi i32 [ %126, %185 ], [ %126, %192 ], [ %197, %196 ], [ %197, %199 ]
  %205 = icmp slt i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203, %193
  store i32 8, i32* %8, align 4
  br label %207

207:                                              ; preds = %118, %181, %203, %206
  %208 = phi i32 [ 0, %206 ], [ %204, %203 ], [ 0, %118 ], [ 0, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #8
  br label %209

209:                                              ; preds = %207, %13
  %210 = phi i32 [ %14, %13 ], [ %208, %207 ]
  %211 = load i32, i32* %8, align 4
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %220, label %213

213:                                              ; preds = %209
  %214 = icmp sgt i32 %210, %4
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  store i32 15, i32* %8, align 4
  br label %220

216:                                              ; preds = %213
  %217 = icmp eq %"class.icu_69::Edits"* %7, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %216
  %219 = call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %7, i32* dereferenceable(4) %8) #8
  br label %220

220:                                              ; preds = %209, %215, %216, %218
  ret i32 %210
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ustrcase_internalFold_69(i32, i32, %"class.icu_69::BreakIterator"* nocapture readnone, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) #0 {
  %10 = tail call fastcc i32 @_ZN6icu_6912_GLOBAL__N_17toLowerEijPDsiPKDsP12UCaseContextiiPNS_5EditsER10UErrorCode(i32 -1, i32 %1, i16* %3, i32 %4, i16* %5, %struct.UCaseContext* null, i32 0, i32 %6, %"class.icu_69::Edits"* %7, i32* dereferenceable(4) %8)
  %11 = load i32, i32* %8, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = icmp sgt i32 %10, %4
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i32 15, i32* %8, align 4
  br label %20

16:                                               ; preds = %13
  %17 = icmp eq %"class.icu_69::Edits"* %7, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = tail call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %7, i32* dereferenceable(4) %8) #8
  br label %20

20:                                               ; preds = %9, %15, %16, %18
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ustrcase_map_69(i32, i32, %"class.icu_69::BreakIterator"*, i16*, i32, i16*, i32, i32 (i32, i32, %"class.icu_69::BreakIterator"*, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32*)* nocapture, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %11 = load i32, i32* %9, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %52

13:                                               ; preds = %10
  %14 = icmp slt i32 %4, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %13
  %16 = icmp eq i16* %3, null
  %17 = icmp ne i32 %4, 0
  %18 = and i1 %16, %17
  %19 = icmp eq i16* %5, null
  %20 = or i1 %18, %19
  %21 = icmp slt i32 %6, -1
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %15, %13
  store i32 1, i32* %9, align 4
  br label %52

24:                                               ; preds = %15
  %25 = icmp eq i32 %6, -1
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = tail call i32 @u_strlen_69(i16* nonnull %5) #8
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i32 [ %27, %26 ], [ %6, %24 ]
  br i1 %16, label %43, label %30

30:                                               ; preds = %28
  %31 = icmp ult i16* %5, %3
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = sext i32 %4 to i64
  %34 = getelementptr inbounds i16, i16* %3, i64 %33
  %35 = icmp ugt i16* %34, %5
  br i1 %35, label %42, label %36

36:                                               ; preds = %30, %32
  %37 = icmp ult i16* %3, %5
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = sext i32 %29 to i64
  %40 = getelementptr inbounds i16, i16* %5, i64 %39
  %41 = icmp ugt i16* %40, %3
  br i1 %41, label %42, label %43

42:                                               ; preds = %38, %32
  store i32 1, i32* %9, align 4
  br label %52

43:                                               ; preds = %36, %28, %38
  %44 = icmp ne %"class.icu_69::Edits"* %8, null
  %45 = and i32 %1, 8192
  %46 = icmp eq i32 %45, 0
  %47 = and i1 %46, %44
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  tail call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %8) #8
  br label %49

49:                                               ; preds = %43, %48
  %50 = tail call i32 %7(i32 %0, i32 %1, %"class.icu_69::BreakIterator"* %2, i16* %3, i32 %4, i16* nonnull %5, i32 %29, %"class.icu_69::Edits"* %8, i32* dereferenceable(4) %9) #8
  %51 = tail call i32 @u_terminateUChars_69(i16* %3, i32 %4, i32 %50, i32* %9) #8
  br label %52

52:                                               ; preds = %10, %49, %42, %23
  %53 = phi i32 [ 0, %23 ], [ 0, %42 ], [ %51, %49 ], [ 0, %10 ]
  ret i32 %53
}

declare i32 @u_strlen_69(i16*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"*) local_unnamed_addr #6

declare i32 @u_terminateUChars_69(i16*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ustrcase_mapWithOverlap_69(i32, i32, %"class.icu_69::BreakIterator"*, i16*, i32, i16*, i32, i32 (i32, i32, %"class.icu_69::BreakIterator"*, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32*)* nocapture, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %10 = alloca [300 x i16], align 16
  %11 = bitcast [300 x i16]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 600, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 600, i1 false)
  %12 = load i32, i32* %8, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %77

14:                                               ; preds = %9
  %15 = icmp slt i32 %4, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = icmp eq i16* %3, null
  %18 = icmp ne i32 %4, 0
  %19 = and i1 %17, %18
  %20 = icmp eq i16* %5, null
  %21 = or i1 %19, %20
  %22 = icmp slt i32 %6, -1
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %16, %14
  store i32 1, i32* %8, align 4
  br label %77

25:                                               ; preds = %16
  %26 = icmp eq i32 %6, -1
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = tail call i32 @u_strlen_69(i16* nonnull %5) #8
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %28, %27 ], [ %6, %25 ]
  br i1 %17, label %54, label %31

31:                                               ; preds = %29
  %32 = icmp ult i16* %5, %3
  br i1 %32, label %37, label %33

33:                                               ; preds = %31
  %34 = sext i32 %4 to i64
  %35 = getelementptr inbounds i16, i16* %3, i64 %34
  %36 = icmp ugt i16* %35, %5
  br i1 %36, label %43, label %37

37:                                               ; preds = %31, %33
  %38 = icmp ult i16* %3, %5
  br i1 %38, label %54, label %39

39:                                               ; preds = %37
  %40 = sext i32 %30 to i64
  %41 = getelementptr inbounds i16, i16* %5, i64 %40
  %42 = icmp ugt i16* %41, %3
  br i1 %42, label %43, label %54

43:                                               ; preds = %39, %33
  %44 = icmp slt i32 %4, 301
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = getelementptr inbounds [300 x i16], [300 x i16]* %10, i64 0, i64 0
  br label %56

47:                                               ; preds = %43
  %48 = shl nsw i32 %4, 1
  %49 = sext i32 %48 to i64
  %50 = tail call noalias i8* @uprv_malloc_69(i64 %49) #9
  %51 = bitcast i8* %50 to i16*
  %52 = icmp eq i8* %50, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  store i32 7, i32* %8, align 4
  br label %77

54:                                               ; preds = %37, %29, %39
  %55 = tail call i32 %7(i32 %0, i32 %1, %"class.icu_69::BreakIterator"* %2, i16* %3, i32 %4, i16* nonnull %5, i32 %30, %"class.icu_69::Edits"* null, i32* dereferenceable(4) %8) #8
  br label %74

56:                                               ; preds = %45, %47
  %57 = phi i16* [ %46, %45 ], [ %51, %47 ]
  %58 = call i32 %7(i32 %0, i32 %1, %"class.icu_69::BreakIterator"* %2, i16* %57, i32 %4, i16* nonnull %5, i32 %30, %"class.icu_69::Edits"* null, i32* dereferenceable(4) %8) #8
  %59 = icmp eq i16* %57, %3
  br i1 %59, label %74, label %60

60:                                               ; preds = %56
  %61 = load i32, i32* %8, align 4
  %62 = icmp sgt i32 %61, 0
  %63 = icmp slt i32 %58, 1
  %64 = or i1 %63, %62
  %65 = icmp sgt i32 %58, %4
  %66 = or i1 %65, %64
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  %68 = call i16* @u_memmove_69(i16* nonnull %3, i16* %57, i32 %58) #8
  br label %69

69:                                               ; preds = %60, %67
  %70 = getelementptr inbounds [300 x i16], [300 x i16]* %10, i64 0, i64 0
  %71 = icmp eq i16* %57, %70
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = bitcast i16* %57 to i8*
  call void @uprv_free_69(i8* %73) #8
  br label %74

74:                                               ; preds = %54, %69, %56, %72
  %75 = phi i32 [ %55, %54 ], [ %58, %69 ], [ %58, %56 ], [ %58, %72 ]
  %76 = call i32 @u_terminateUChars_69(i16* %3, i32 %4, i32 %75, i32* %8) #8
  br label %77

77:                                               ; preds = %9, %74, %53, %24
  %78 = phi i32 [ 0, %24 ], [ %76, %74 ], [ 0, %53 ], [ 0, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 600, i8* nonnull %11) #8
  ret i32 %78
}

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #7

declare i16* @u_memmove_69(i16*, i16*, i32) local_unnamed_addr #2

declare void @uprv_free_69(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_strFoldCase_69(i16*, i32, i16*, i32, i32, i32*) local_unnamed_addr #0 {
  %7 = tail call i32 @ustrcase_mapWithOverlap_69(i32 1, i32 %4, %"class.icu_69::BreakIterator"* null, i16* %0, i32 %1, i16* %2, i32 %3, i32 (i32, i32, %"class.icu_69::BreakIterator"*, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32*)* nonnull @ustrcase_internalFold_69, i32* dereferenceable(4) %5)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_697CaseMap4foldEjPKDsiPDsiPNS_5EditsER10UErrorCode(i32, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = tail call i32 @ustrcase_map_69(i32 1, i32 %0, %"class.icu_69::BreakIterator"* null, i16* %3, i32 %4, i16* %1, i32 %2, i32 (i32, i32, %"class.icu_69::BreakIterator"*, i16*, i32, i16*, i32, %"class.icu_69::Edits"*, i32*)* nonnull @ustrcase_internalFold_69, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_strcmpFold_69(i16*, i32, i16*, i32, i32, i32* nocapture readonly) local_unnamed_addr #0 {
  %7 = tail call fastcc i32 @_ZL8_cmpFoldPKDsiS0_ijPiS1_P10UErrorCode(i16* %0, i32 %1, i16* %2, i32 %3, i32 %4, i32* null, i32* null, i32* %5)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL8_cmpFoldPKDsiS0_ijPiS1_P10UErrorCode(i16*, i32, i16*, i32, i32, i32*, i32* nocapture, i32* nocapture readonly) unnamed_addr #0 {
  %9 = alloca i16*, align 8
  %10 = alloca [2 x %struct.CmpEquivLevel], align 16
  %11 = alloca [2 x %struct.CmpEquivLevel], align 16
  %12 = alloca [32 x i16], align 16
  %13 = alloca [32 x i16], align 16
  %14 = bitcast i16** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %9, align 8
  %15 = bitcast [2 x %struct.CmpEquivLevel]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #8
  %16 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 0, i32 0
  %17 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 0, i32 1
  %18 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 0, i32 2
  %19 = bitcast [2 x %struct.CmpEquivLevel]* %11 to i8*
  %20 = bitcast [2 x %struct.CmpEquivLevel]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #8
  %21 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %11, i64 0, i64 0, i32 0
  %22 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %11, i64 0, i64 0, i32 1
  %23 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %11, i64 0, i64 0, i32 2
  %24 = bitcast [32 x i16]* %12 to i8*
  %25 = bitcast [2 x %struct.CmpEquivLevel]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %24) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 64, i1 false)
  %26 = bitcast [32 x i16]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 64, i1 false)
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %29, label %405

29:                                               ; preds = %8
  %30 = icmp ne i32* %5, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %32

32:                                               ; preds = %31, %29
  %33 = icmp eq i32 %1, -1
  %34 = sext i32 %1 to i64
  %35 = getelementptr inbounds i16, i16* %0, i64 %34
  %36 = select i1 %33, i16* null, i16* %35
  %37 = icmp eq i32 %3, -1
  %38 = sext i32 %3 to i64
  %39 = getelementptr inbounds i16, i16* %2, i64 %38
  %40 = select i1 %37, i16* null, i16* %39
  %41 = and i32 %4, 4096
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds [32 x i16], [32 x i16]* %13, i64 0, i64 0
  %44 = getelementptr inbounds [32 x i16], [32 x i16]* %13, i64 0, i64 1
  %45 = getelementptr inbounds [32 x i16], [32 x i16]* %12, i64 0, i64 0
  %46 = getelementptr inbounds [32 x i16], [32 x i16]* %12, i64 0, i64 1
  br label %47

47:                                               ; preds = %185, %32
  %48 = phi i16* [ %73, %185 ], [ inttoptr (i64 -6148914691236517206 to i16*), %32 ]
  %49 = phi i16* [ %86, %185 ], [ inttoptr (i64 -6148914691236517206 to i16*), %32 ]
  %50 = phi i16* [ %169, %185 ], [ %2, %32 ]
  %51 = phi i16* [ %131, %185 ], [ %0, %32 ]
  %52 = phi i16* [ %132, %185 ], [ %0, %32 ]
  %53 = phi i16* [ %170, %185 ], [ %2, %32 ]
  %54 = phi i16* [ %133, %185 ], [ %36, %32 ]
  %55 = phi i16* [ %171, %185 ], [ %40, %32 ]
  %56 = phi i16* [ %191, %185 ], [ %0, %32 ]
  %57 = phi i16* [ %192, %185 ], [ %2, %32 ]
  %58 = phi i32 [ %134, %185 ], [ 0, %32 ]
  %59 = phi i32 [ %172, %185 ], [ 0, %32 ]
  br label %60

60:                                               ; preds = %181, %47
  %61 = phi i16* [ %48, %47 ], [ %73, %181 ]
  %62 = phi i16* [ %49, %47 ], [ %86, %181 ]
  %63 = phi i16* [ %50, %47 ], [ %169, %181 ]
  %64 = phi i16* [ %51, %47 ], [ %131, %181 ]
  %65 = phi i16* [ %52, %47 ], [ %132, %181 ]
  %66 = phi i16* [ %53, %47 ], [ %170, %181 ]
  %67 = phi i16* [ %54, %47 ], [ %133, %181 ]
  %68 = phi i16* [ %55, %47 ], [ %171, %181 ]
  %69 = phi i16* [ %57, %47 ], [ %93, %181 ]
  %70 = phi i32 [ %58, %47 ], [ %134, %181 ]
  %71 = phi i32 [ %59, %47 ], [ %172, %181 ]
  br label %72

72:                                               ; preds = %334, %60
  %73 = phi i16* [ %315, %334 ], [ %61, %60 ]
  %74 = phi i16* [ %86, %334 ], [ %62, %60 ]
  %75 = phi i16* [ %43, %334 ], [ %63, %60 ]
  %76 = phi i16* [ %316, %334 ], [ %64, %60 ]
  %77 = phi i16* [ %132, %334 ], [ %65, %60 ]
  %78 = phi i16* [ %43, %334 ], [ %66, %60 ]
  %79 = phi i16* [ %133, %334 ], [ %67, %60 ]
  %80 = phi i16* [ %337, %334 ], [ %68, %60 ]
  %81 = phi i16* [ %317, %334 ], [ %69, %60 ]
  %82 = phi i32 [ %134, %334 ], [ %70, %60 ]
  %83 = phi i32 [ 1, %334 ], [ %71, %60 ]
  %84 = phi i32 [ %318, %334 ], [ -1, %60 ]
  br label %85

85:                                               ; preds = %72, %293
  %86 = phi i16* [ %275, %293 ], [ %74, %72 ]
  %87 = phi i16* [ %274, %293 ], [ %75, %72 ]
  %88 = phi i16* [ %45, %293 ], [ %76, %72 ]
  %89 = phi i16* [ %45, %293 ], [ %77, %72 ]
  %90 = phi i16* [ %170, %293 ], [ %78, %72 ]
  %91 = phi i16* [ %296, %293 ], [ %79, %72 ]
  %92 = phi i16* [ %171, %293 ], [ %80, %72 ]
  %93 = phi i16* [ %276, %293 ], [ %81, %72 ]
  %94 = phi i32 [ 1, %293 ], [ %82, %72 ]
  %95 = phi i32 [ %172, %293 ], [ %83, %72 ]
  %96 = phi i32 [ -1, %293 ], [ %84, %72 ]
  %97 = phi i32 [ %277, %293 ], [ -1, %72 ]
  %98 = icmp slt i32 %96, 0
  br i1 %98, label %99, label %130

99:                                               ; preds = %85, %124
  %100 = phi i16* [ %127, %124 ], [ %88, %85 ]
  %101 = phi i16* [ %122, %124 ], [ %89, %85 ]
  %102 = phi i16* [ %129, %124 ], [ %91, %85 ]
  %103 = phi i32 [ %125, %124 ], [ %94, %85 ]
  %104 = icmp eq i16* %100, %102
  br i1 %104, label %111, label %105

105:                                              ; preds = %99
  %106 = load i16, i16* %100, align 2
  %107 = icmp ne i16 %106, 0
  %108 = icmp ne i16* %102, null
  %109 = and i1 %42, %108
  %110 = or i1 %107, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %105, %99
  %112 = icmp eq i32 %103, 0
  br i1 %112, label %130, label %113

113:                                              ; preds = %111
  %114 = sext i32 %103 to i64
  br label %118

115:                                              ; preds = %105
  %116 = zext i16 %106 to i32
  %117 = getelementptr inbounds i16, i16* %100, i64 1
  br label %130

118:                                              ; preds = %113, %118
  %119 = phi i64 [ %114, %113 ], [ %120, %118 ]
  %120 = add nsw i64 %119, -1
  %121 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %120, i32 0
  %122 = load i16*, i16** %121, align 8
  %123 = icmp eq i16* %122, null
  br i1 %123, label %118, label %124

124:                                              ; preds = %118
  %125 = trunc i64 %120 to i32
  %126 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %120, i32 1
  %127 = load i16*, i16** %126, align 8
  %128 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %120, i32 2
  %129 = load i16*, i16** %128, align 8
  br label %99

130:                                              ; preds = %111, %115, %85
  %131 = phi i16* [ %117, %115 ], [ %88, %85 ], [ %100, %111 ]
  %132 = phi i16* [ %101, %115 ], [ %89, %85 ], [ %101, %111 ]
  %133 = phi i16* [ %102, %115 ], [ %91, %85 ], [ %102, %111 ]
  %134 = phi i32 [ %103, %115 ], [ %94, %85 ], [ 0, %111 ]
  %135 = phi i32 [ %116, %115 ], [ %96, %85 ], [ -1, %111 ]
  %136 = icmp slt i32 %97, 0
  br i1 %136, label %137, label %168

137:                                              ; preds = %130, %162
  %138 = phi i16* [ %165, %162 ], [ %87, %130 ]
  %139 = phi i16* [ %160, %162 ], [ %90, %130 ]
  %140 = phi i16* [ %167, %162 ], [ %92, %130 ]
  %141 = phi i32 [ %163, %162 ], [ %95, %130 ]
  %142 = icmp eq i16* %138, %140
  br i1 %142, label %149, label %143

143:                                              ; preds = %137
  %144 = load i16, i16* %138, align 2
  %145 = icmp ne i16 %144, 0
  %146 = icmp ne i16* %140, null
  %147 = and i1 %42, %146
  %148 = or i1 %145, %147
  br i1 %148, label %153, label %149

149:                                              ; preds = %143, %137
  %150 = icmp eq i32 %141, 0
  br i1 %150, label %168, label %151

151:                                              ; preds = %149
  %152 = sext i32 %141 to i64
  br label %156

153:                                              ; preds = %143
  %154 = zext i16 %144 to i32
  %155 = getelementptr inbounds i16, i16* %138, i64 1
  br label %168

156:                                              ; preds = %151, %156
  %157 = phi i64 [ %152, %151 ], [ %158, %156 ]
  %158 = add nsw i64 %157, -1
  %159 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %11, i64 0, i64 %158, i32 0
  %160 = load i16*, i16** %159, align 8
  %161 = icmp eq i16* %160, null
  br i1 %161, label %156, label %162

162:                                              ; preds = %156
  %163 = trunc i64 %158 to i32
  %164 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %11, i64 0, i64 %158, i32 1
  %165 = load i16*, i16** %164, align 8
  %166 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %11, i64 0, i64 %158, i32 2
  %167 = load i16*, i16** %166, align 8
  br label %137

168:                                              ; preds = %149, %153, %130
  %169 = phi i16* [ %155, %153 ], [ %87, %130 ], [ %138, %149 ]
  %170 = phi i16* [ %139, %153 ], [ %90, %130 ], [ %139, %149 ]
  %171 = phi i16* [ %140, %153 ], [ %92, %130 ], [ %140, %149 ]
  %172 = phi i32 [ %141, %153 ], [ %95, %130 ], [ 0, %149 ]
  %173 = phi i32 [ %154, %153 ], [ %97, %130 ], [ -1, %149 ]
  %174 = icmp eq i32 %135, %173
  %175 = icmp slt i32 %135, 0
  br i1 %174, label %176, label %193

176:                                              ; preds = %168
  br i1 %175, label %392, label %177

177:                                              ; preds = %176
  %178 = icmp eq i32 %134, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %177
  %180 = icmp eq i16* %131, %133
  br i1 %180, label %182, label %181

181:                                              ; preds = %179, %182
  br label %60

182:                                              ; preds = %179, %177
  %183 = phi i16* [ %131, %177 ], [ %86, %179 ]
  %184 = icmp eq i16* %183, null
  br i1 %184, label %181, label %185

185:                                              ; preds = %182
  %186 = icmp eq i32 %172, 0
  %187 = icmp eq i16* %169, %171
  %188 = select i1 %187, i16* %73, i16* null
  %189 = select i1 %186, i16* %169, i16* %188
  %190 = icmp eq i16* %189, null
  %191 = select i1 %190, i16* %56, i16* %183
  %192 = select i1 %190, i16* %93, i16* %189
  br label %47

193:                                              ; preds = %168
  br i1 %175, label %392, label %194

194:                                              ; preds = %193
  %195 = icmp slt i32 %173, 0
  br i1 %195, label %392, label %196

196:                                              ; preds = %194
  %197 = and i32 %135, -2048
  %198 = icmp eq i32 %197, 55296
  br i1 %198, label %199, label %225

199:                                              ; preds = %196
  %200 = and i32 %135, 1024
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %213

202:                                              ; preds = %199
  %203 = icmp eq i16* %131, %133
  br i1 %203, label %225, label %204

204:                                              ; preds = %202
  %205 = load i16, i16* %131, align 2
  %206 = zext i16 %205 to i32
  %207 = and i32 %206, 64512
  %208 = icmp eq i32 %207, 56320
  br i1 %208, label %209, label %225

209:                                              ; preds = %204
  %210 = shl i32 %135, 10
  %211 = add i32 %210, -56613888
  %212 = add i32 %211, %206
  br label %225

213:                                              ; preds = %199
  %214 = getelementptr inbounds i16, i16* %131, i64 -2
  %215 = icmp ugt i16* %132, %214
  br i1 %215, label %225, label %216

216:                                              ; preds = %213
  %217 = load i16, i16* %214, align 2
  %218 = zext i16 %217 to i32
  %219 = and i32 %218, 64512
  %220 = icmp eq i32 %219, 55296
  br i1 %220, label %221, label %225

221:                                              ; preds = %216
  %222 = shl nuw nsw i32 %218, 10
  %223 = add nsw i32 %135, -56613888
  %224 = add i32 %223, %222
  br label %225

225:                                              ; preds = %209, %204, %221, %216, %213, %202, %196
  %226 = phi i32 [ %135, %196 ], [ %212, %209 ], [ %135, %204 ], [ %135, %202 ], [ %224, %221 ], [ %135, %216 ], [ %135, %213 ]
  %227 = and i32 %173, -2048
  %228 = icmp eq i32 %227, 55296
  br i1 %228, label %229, label %255

229:                                              ; preds = %225
  %230 = and i32 %173, 1024
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %243

232:                                              ; preds = %229
  %233 = icmp eq i16* %169, %171
  br i1 %233, label %255, label %234

234:                                              ; preds = %232
  %235 = load i16, i16* %169, align 2
  %236 = zext i16 %235 to i32
  %237 = and i32 %236, 64512
  %238 = icmp eq i32 %237, 56320
  br i1 %238, label %239, label %255

239:                                              ; preds = %234
  %240 = shl i32 %173, 10
  %241 = add i32 %240, -56613888
  %242 = add i32 %241, %236
  br label %255

243:                                              ; preds = %229
  %244 = getelementptr inbounds i16, i16* %169, i64 -2
  %245 = icmp ugt i16* %170, %244
  br i1 %245, label %255, label %246

246:                                              ; preds = %243
  %247 = load i16, i16* %244, align 2
  %248 = zext i16 %247 to i32
  %249 = and i32 %248, 64512
  %250 = icmp eq i32 %249, 55296
  br i1 %250, label %251, label %255

251:                                              ; preds = %246
  %252 = shl nuw nsw i32 %248, 10
  %253 = add nsw i32 %173, -56613888
  %254 = add i32 %253, %252
  br label %255

255:                                              ; preds = %239, %234, %251, %246, %243, %232, %225
  %256 = phi i32 [ %173, %225 ], [ %242, %239 ], [ %173, %234 ], [ %173, %232 ], [ %254, %251 ], [ %173, %246 ], [ %173, %243 ]
  %257 = icmp eq i32 %134, 0
  br i1 %257, label %258, label %297

258:                                              ; preds = %255
  %259 = call i32 @ucase_toFullFolding_69(i32 %226, i16** nonnull %9, i32 %4) #8
  %260 = icmp sgt i32 %259, -1
  br i1 %260, label %261, label %297

261:                                              ; preds = %258
  br i1 %198, label %262, label %273

262:                                              ; preds = %261
  %263 = and i32 %135, 1024
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %267

265:                                              ; preds = %262
  %266 = getelementptr inbounds i16, i16* %131, i64 1
  br label %273

267:                                              ; preds = %262
  %268 = getelementptr inbounds i16, i16* %169, i64 -1
  %269 = getelementptr inbounds i16, i16* %93, i64 -1
  %270 = getelementptr inbounds i16, i16* %169, i64 -2
  %271 = load i16, i16* %270, align 2
  %272 = zext i16 %271 to i32
  br label %273

273:                                              ; preds = %265, %267, %261
  %274 = phi i16* [ %169, %265 ], [ %268, %267 ], [ %169, %261 ]
  %275 = phi i16* [ %266, %265 ], [ %131, %267 ], [ %131, %261 ]
  %276 = phi i16* [ %93, %265 ], [ %269, %267 ], [ %93, %261 ]
  %277 = phi i32 [ %173, %265 ], [ %272, %267 ], [ %173, %261 ]
  store i16* %132, i16** %16, align 16
  store i16* %275, i16** %17, align 8
  store i16* %133, i16** %18, align 16
  %278 = icmp slt i32 %259, 32
  br i1 %278, label %279, label %282

279:                                              ; preds = %273
  %280 = load i16*, i16** %9, align 8
  %281 = call i16* @u_memcpy_69(i16* nonnull %45, i16* %280, i32 %259) #8
  br label %293

282:                                              ; preds = %273
  %283 = icmp ult i32 %259, 65536
  br i1 %283, label %284, label %286

284:                                              ; preds = %282
  %285 = trunc i32 %259 to i16
  store i16 %285, i16* %45, align 16
  br label %293

286:                                              ; preds = %282
  %287 = lshr i32 %259, 10
  %288 = trunc i32 %287 to i16
  %289 = add i16 %288, -10304
  store i16 %289, i16* %45, align 16
  %290 = trunc i32 %259 to i16
  %291 = and i16 %290, 1023
  %292 = or i16 %291, -9216
  store i16 %292, i16* %46, align 2
  br label %293

293:                                              ; preds = %284, %286, %279
  %294 = phi i32 [ %259, %279 ], [ 1, %284 ], [ 2, %286 ]
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [32 x i16], [32 x i16]* %12, i64 0, i64 %295
  br label %85

297:                                              ; preds = %258, %255
  %298 = icmp eq i32 %172, 0
  br i1 %298, label %299, label %338

299:                                              ; preds = %297
  %300 = call i32 @ucase_toFullFolding_69(i32 %256, i16** nonnull %9, i32 %4) #8
  %301 = icmp sgt i32 %300, -1
  br i1 %301, label %302, label %338

302:                                              ; preds = %299
  br i1 %228, label %303, label %314

303:                                              ; preds = %302
  %304 = and i32 %173, 1024
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %308

306:                                              ; preds = %303
  %307 = getelementptr inbounds i16, i16* %169, i64 1
  br label %314

308:                                              ; preds = %303
  %309 = getelementptr inbounds i16, i16* %131, i64 -1
  %310 = getelementptr inbounds i16, i16* %93, i64 -1
  %311 = getelementptr inbounds i16, i16* %131, i64 -2
  %312 = load i16, i16* %311, align 2
  %313 = zext i16 %312 to i32
  br label %314

314:                                              ; preds = %306, %308, %302
  %315 = phi i16* [ %307, %306 ], [ %169, %308 ], [ %169, %302 ]
  %316 = phi i16* [ %131, %306 ], [ %309, %308 ], [ %131, %302 ]
  %317 = phi i16* [ %93, %306 ], [ %310, %308 ], [ %93, %302 ]
  %318 = phi i32 [ %135, %306 ], [ %313, %308 ], [ %135, %302 ]
  store i16* %170, i16** %21, align 16
  store i16* %315, i16** %22, align 8
  store i16* %171, i16** %23, align 16
  %319 = icmp slt i32 %300, 32
  br i1 %319, label %320, label %323

320:                                              ; preds = %314
  %321 = load i16*, i16** %9, align 8
  %322 = call i16* @u_memcpy_69(i16* nonnull %43, i16* %321, i32 %300) #8
  br label %334

323:                                              ; preds = %314
  %324 = icmp ult i32 %300, 65536
  br i1 %324, label %325, label %327

325:                                              ; preds = %323
  %326 = trunc i32 %300 to i16
  store i16 %326, i16* %43, align 16
  br label %334

327:                                              ; preds = %323
  %328 = lshr i32 %300, 10
  %329 = trunc i32 %328 to i16
  %330 = add i16 %329, -10304
  store i16 %330, i16* %43, align 16
  %331 = trunc i32 %300 to i16
  %332 = and i16 %331, 1023
  %333 = or i16 %332, -9216
  store i16 %333, i16* %44, align 2
  br label %334

334:                                              ; preds = %325, %327, %320
  %335 = phi i32 [ %300, %320 ], [ 1, %325 ], [ 2, %327 ]
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [32 x i16], [32 x i16]* %13, i64 0, i64 %336
  br label %72

338:                                              ; preds = %299, %297
  %339 = icmp sgt i32 %135, 55295
  %340 = icmp sgt i32 %173, 55295
  %341 = and i1 %339, %340
  %342 = trunc i32 %4 to i16
  %343 = icmp slt i16 %342, 0
  %344 = and i1 %343, %341
  br i1 %344, label %345, label %388

345:                                              ; preds = %338
  %346 = icmp sgt i32 %135, 56319
  %347 = icmp eq i16* %131, %133
  %348 = or i1 %347, %346
  br i1 %348, label %353, label %349

349:                                              ; preds = %345
  %350 = load i16, i16* %131, align 2
  %351 = and i16 %350, -1024
  %352 = icmp eq i16 %351, -9216
  br i1 %352, label %366, label %353

353:                                              ; preds = %345, %349
  %354 = and i32 %135, -1024
  %355 = icmp ne i32 %354, 56320
  %356 = getelementptr inbounds i16, i16* %131, i64 -1
  %357 = icmp eq i16* %132, %356
  %358 = or i1 %357, %355
  br i1 %358, label %364, label %359

359:                                              ; preds = %353
  %360 = getelementptr inbounds i16, i16* %131, i64 -2
  %361 = load i16, i16* %360, align 2
  %362 = and i16 %361, -1024
  %363 = icmp eq i16 %362, -10240
  br i1 %363, label %366, label %364

364:                                              ; preds = %353, %359
  %365 = add nsw i32 %135, -10240
  br label %366

366:                                              ; preds = %349, %359, %364
  %367 = phi i32 [ %135, %349 ], [ %135, %359 ], [ %365, %364 ]
  %368 = icmp sgt i32 %173, 56319
  %369 = icmp eq i16* %169, %171
  %370 = or i1 %369, %368
  br i1 %370, label %375, label %371

371:                                              ; preds = %366
  %372 = load i16, i16* %169, align 2
  %373 = and i16 %372, -1024
  %374 = icmp eq i16 %373, -9216
  br i1 %374, label %388, label %375

375:                                              ; preds = %366, %371
  %376 = and i32 %173, -1024
  %377 = icmp ne i32 %376, 56320
  %378 = getelementptr inbounds i16, i16* %169, i64 -1
  %379 = icmp eq i16* %170, %378
  %380 = or i1 %379, %377
  br i1 %380, label %386, label %381

381:                                              ; preds = %375
  %382 = getelementptr inbounds i16, i16* %169, i64 -2
  %383 = load i16, i16* %382, align 2
  %384 = and i16 %383, -1024
  %385 = icmp eq i16 %384, -10240
  br i1 %385, label %388, label %386

386:                                              ; preds = %375, %381
  %387 = add nsw i32 %173, -10240
  br label %388

388:                                              ; preds = %386, %381, %371, %338
  %389 = phi i32 [ %367, %371 ], [ %367, %381 ], [ %367, %386 ], [ %135, %338 ]
  %390 = phi i32 [ %173, %371 ], [ %173, %381 ], [ %387, %386 ], [ %173, %338 ]
  %391 = sub nsw i32 %389, %390
  br label %392

392:                                              ; preds = %176, %194, %193, %388
  %393 = phi i32 [ %391, %388 ], [ -1, %193 ], [ 1, %194 ], [ 0, %176 ]
  br i1 %30, label %394, label %405

394:                                              ; preds = %392
  %395 = ptrtoint i16* %56 to i64
  %396 = ptrtoint i16* %0 to i64
  %397 = sub i64 %395, %396
  %398 = lshr exact i64 %397, 1
  %399 = trunc i64 %398 to i32
  store i32 %399, i32* %5, align 4
  %400 = ptrtoint i16* %93 to i64
  %401 = ptrtoint i16* %2 to i64
  %402 = sub i64 %400, %401
  %403 = lshr exact i64 %402, 1
  %404 = trunc i64 %403 to i32
  store i32 %404, i32* %6, align 4
  br label %405

405:                                              ; preds = %392, %394, %8
  %406 = phi i32 [ 0, %8 ], [ %393, %394 ], [ %393, %392 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  ret i32 %406
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_strCaseCompare_69(i16*, i32, i16*, i32, i32, i32*) local_unnamed_addr #0 {
  %7 = icmp eq i32* %5, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %6
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %23

11:                                               ; preds = %8
  %12 = icmp eq i16* %0, null
  %13 = icmp slt i32 %1, -1
  %14 = or i1 %12, %13
  %15 = icmp eq i16* %2, null
  %16 = or i1 %14, %15
  %17 = icmp slt i32 %3, -1
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %11
  store i32 1, i32* %5, align 4
  br label %23

20:                                               ; preds = %11
  %21 = or i32 %4, 65536
  %22 = tail call fastcc i32 @_ZL8_cmpFoldPKDsiS0_ijPiS1_P10UErrorCode(i16* nonnull %0, i32 %1, i16* nonnull %2, i32 %3, i32 %21, i32* null, i32* null, i32* nonnull %5) #8
  br label %23

23:                                               ; preds = %6, %8, %20, %19
  %24 = phi i32 [ 0, %19 ], [ %22, %20 ], [ 0, %8 ], [ 0, %6 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_strcasecmp_69(i16*, i16*, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 0, i32* %4, align 4
  %6 = or i32 %2, 65536
  %7 = call fastcc i32 @_ZL8_cmpFoldPKDsiS0_ijPiS1_P10UErrorCode(i16* %0, i32 -1, i16* %1, i32 -1, i32 %6, i32* null, i32* null, i32* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_memcasecmp_69(i16*, i16*, i32, i32) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  %7 = or i32 %3, 65536
  %8 = call fastcc i32 @_ZL8_cmpFoldPKDsiS0_ijPiS1_P10UErrorCode(i16* %0, i32 %2, i16* %1, i32 %2, i32 %7, i32* null, i32* null, i32* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_strncasecmp_69(i16*, i16*, i32, i32) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  %7 = or i32 %3, 69632
  %8 = call fastcc i32 @_ZL8_cmpFoldPKDsiS0_ijPiS1_P10UErrorCode(i16* %0, i32 %2, i16* %1, i32 %2, i32 %7, i32* null, i32* null, i32* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @u_caseInsensitivePrefixMatch_69(i16*, i32, i16*, i32, i32, i32*, i32* nocapture, i32* nocapture readonly) local_unnamed_addr #0 {
  %9 = tail call fastcc i32 @_ZL8_cmpFoldPKDsiS0_ijPiS1_P10UErrorCode(i16* %0, i32 %1, i16* %2, i32 %3, i32 %4, i32* %5, i32* %6, i32* %7)
  ret void
}

declare signext i8 @u_charType_69(i32) local_unnamed_addr #2

declare i16* @u_memcpy_69(i16*, i16*, i32) local_unnamed_addr #2

declare %struct.UTrie2* @ucase_getTrie_69() local_unnamed_addr #2

declare i32 @ucase_toFullLower_69(i32, i32 (i8*, i8)*, i8*, i16**, i32) local_unnamed_addr #2

declare i32 @ucase_toFullFolding_69(i32, i16**, i32) local_unnamed_addr #2

declare signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
