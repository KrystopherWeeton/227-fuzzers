; ModuleID = '../../third_party/blink/renderer/core/css/css_segmented_font_face.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_segmented_font_face.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.151 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.152", %"class.WTF::RefCounted.159", [4 x i8] }>
%"class.blink::FontSettings.152" = type { %"class.WTF::Vector.153" }
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { %"class.blink::FontTagValuePair.156"*, i32, i32 }
%"class.blink::FontTagValuePair.156" = type { i32, float }
%"class.WTF::RefCounted.159" = type { %"class.base::RefCounted.160" }
%"class.base::RefCounted.160" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.143, %class.scoped_refptr.151, %class.scoped_refptr.161, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.170 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.171", [4 x i8] }>
%"class.WTF::RefCounted.171" = type { %"class.base::RefCounted.172" }
%"class.base::RefCounted.172" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.143 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.149", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.144" }
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.149" = type { %"class.base::RefCounted.150" }
%"class.base::RefCounted.150" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.161 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.162", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.167, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.162" = type { %"class.base::RefCounted.163" }
%"class.base::RefCounted.163" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.167 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.168", [4 x i8] }>
%"class.WTF::RefCounted.168" = type { %"class.base::RefCounted.169" }
%"class.base::RefCounted.169" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.170 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.215", i32, [4 x i8], %"class.std::__1::unique_ptr.353", %"class.std::__1::unique_ptr.353", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.359", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.364", %"class.std::__1::unique_ptr.370", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.382", %"class.std::__1::unique_ptr.388", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.395", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.333", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.251" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.251" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__cxx_atomic_impl.254" }
%"struct.std::__1::__cxx_atomic_impl.254" = type { %"struct.std::__1::__cxx_atomic_base_impl.255" }
%"struct.std::__1::__cxx_atomic_base_impl.255" = type { i64 }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::Worklist.262"* }
%"class.blink::Worklist.262" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.251" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::Worklist.269"* }
%"class.blink::Worklist.269" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.251" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::Worklist.276"* }
%"class.blink::Worklist.276" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.251" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::Worklist.283"* }
%"class.blink::Worklist.283" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.251" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::Worklist.290"* }
%"class.blink::Worklist.290" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.251" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::Worklist.297"* }
%"class.blink::Worklist.297" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.251" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::Worklist.304"* }
%"class.blink::Worklist.304" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.251" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.311", %"class.std::__1::__compressed_pair.320", %"class.std::__1::__compressed_pair.325", %"class.std::__1::__compressed_pair.327", [4 x i8] }>
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313", %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { i64 }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { float }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.336", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.345" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.359" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.363" }
%"class.WTF::VectorBufferBase.363" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.376" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.262"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.269"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.276"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.283"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.290"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.399" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.394 }
%class.scoped_refptr.394 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.134" }
%"struct.std::__1::atomic.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl.137" }
%"struct.std::__1::__cxx_atomic_impl.137" = type { %"struct.std::__1::__cxx_atomic_base_impl.138" }
%"struct.std::__1::__cxx_atomic_base_impl.138" = type { i32 }
%"class.blink::CSSSegmentedFontFace" = type { %"struct.blink::FontSelectionCapabilities", %"class.WTF::LruCache", %"class.blink::Member", i64 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::FontCacheKey", %"class.std::__1::unique_ptr.411" }
%"struct.blink::FontCacheKey" = type <{ %"class.blink::FontFaceCreationParams", i32, i32, float, [4 x i8], %class.scoped_refptr.151, i8, [7 x i8] }>
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey" = type { %"struct.blink::FontCacheKey", %class.scoped_refptr.173, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%class.scoped_refptr.173 = type { %"class.blink::SegmentedFontData"* }
%"class.blink::SegmentedFontData" = type { %"class.blink::FontData.base", %"class.WTF::Vector.174" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.140" }>
%"class.WTF::RefCounted.140" = type { %"class.base::RefCounted.141" }
%"class.base::RefCounted.141" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.174" = type { %"class.WTF::VectorBuffer.175" }
%"class.WTF::VectorBuffer.175" = type { %"class.WTF::VectorBufferBase.176", [8 x i8] }
%"class.WTF::VectorBufferBase.176" = type { %class.scoped_refptr.177*, i32, i32 }
%class.scoped_refptr.177 = type { %"class.blink::FontDataForRangeSet"* }
%"class.blink::FontDataForRangeSet" = type { i32 (...)**, %"class.WTF::RefCounted.178", %class.scoped_refptr.180, %class.scoped_refptr.33 }
%"class.WTF::RefCounted.178" = type { %"class.base::RefCounted.179" }
%"class.base::RefCounted.179" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.180 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.188", %class.scoped_refptr.194, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.181 }
%union.anon.181 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.187, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.134" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.134" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.182" }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.187 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.180, %class.scoped_refptr.180 }
%class.scoped_refptr.194 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.195", [4 x i8] }>
%"class.WTF::RefCounted.195" = type { %"class.base::RefCounted.196" }
%"class.base::RefCounted.196" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.33 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted", %"class.WTF::Vector.34" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36" }
%"class.WTF::VectorBufferBase.36" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FontFaceList"* }
%"class.blink::FontFaceList" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.5", %"class.blink::Member.7", %"class.blink::Member.7", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.5" = type <{ %"class.blink::Member.7"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.11", %"class.blink::Member.7", %"class.blink::Member.7" }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::FontFace"* }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.17", i32, %"class.blink::Member.21", %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::HeapVector" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.102", i32, i8, [3 x i8], %"class.blink::HeapVector.104", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.123", %"class.blink::Member.129", %"class.blink::Member.131", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.70" }
%"class.WTF::HashMap.70" = type { %"class.WTF::HashTable.71" }
%"class.WTF::HashTable.71" = type <{ %"struct.WTF::KeyValuePair.73"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.73" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.81" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.74" }
%"class.blink::HeapHashSet.74" = type { %"class.WTF::HashSet.77" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.blink::WeakMember.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.80" = type opaque
%"class.blink::Supplementable.81" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.82" }
%"class.blink::HeapHashMap.82" = type { %"class.WTF::HashMap.85" }
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type { i8*, %"class.blink::Member.406" }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.408" }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.89, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.blink::Member.97", i32, [4 x i8], %"class.WTF::HashSet.98", i32, i32 }
%class.scoped_refptr.89 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.15" }
%"class.WTF::HashSet.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.104" = type { %"class.WTF::Vector.107" }
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109" }
%"class.WTF::VectorBufferBase.109" = type { %"class.blink::Member.110"*, i32, i32 }
%"class.blink::Member.110" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.116", i32, i32 }
%"class.blink::HeapHashMap.116" = type { %"class.WTF::HashMap.119" }
%"class.WTF::HashMap.119" = type { %"class.WTF::HashTable.120" }
%"class.WTF::HashTable.120" = type <{ %"struct.WTF::KeyValuePair.122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.122" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::CSSFontFace"* }
%"class.blink::CSSFontFace" = type { %class.scoped_refptr.33, %"class.blink::HeapHashSet", %"class.blink::HeapDeque", %"class.blink::Member.11" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.41" }
%"class.WTF::HashTable.41" = type <{ %"class.blink::Member.43"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.43" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::CSSSegmentedFontFace"* }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.47" }
%"class.WTF::VectorBuffer.47" = type { %"class.WTF::VectorBufferBase.48" }
%"class.WTF::VectorBufferBase.48" = type { %"class.blink::Member.49"*, i32, i32 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::CSSFontFaceSource"* }
%"class.blink::CSSFontFaceSource" = type { i32 (...)**, %"class.WTF::HashMap.53", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.53" = type { %"class.WTF::HashTable.54" }
%"class.WTF::HashTable.54" = type <{ %"struct.WTF::KeyValuePair.57"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.57" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.58", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.58" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair.62"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.62" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.63", i32, i32 }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.29" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.133 }
%class.scoped_refptr.133 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.134" }
%"class.WTF::ListHashSet" = type <{ %"class.WTF::HashTable.5", %"class.blink::Member.7", %"class.blink::Member.7", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider", [7 x i8] }>
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.140", [4 x i8] }>
%"class.base::RepeatingCallback.199" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::HeapVector.208" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::Member.11"*, i32, i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapVector.208"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::__tuple_impl.494" = type { %"class.std::__1::__tuple_leaf.477", %"class.std::__1::__tuple_leaf.495" }
%"class.std::__1::__tuple_leaf.477" = type { %"class.WTF::String" }
%"class.std::__1::__tuple_leaf.495" = type { %"class.blink::Persistent" }
%"class.blink::HeapListHashSetAllocator" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE3PutERKS2_OS5_ = comdat any

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZN3WTF11ListHashSetIN5blink6MemberINS1_8FontFaceEEELm0ENS_10MemberHashIS3_EENS1_24HeapListHashSetAllocatorEE6insertIRPS3_EENS8_9AddResultEOT_ = comdat any

$_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev = comdat any

$_ZNSt3__110unique_ptrIN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS3_17SegmentedFontDataEENS3_16FontCacheKeyHashENS1_10HashTraitsIS4_EEE21MappedListNodeWithKeyENS_14default_deleteISC_EEE5resetEPSC_ = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink16SharedFontFamilyD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12FontFaceListEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_12FontFaceListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_12FontFaceListEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISA_SM_SN_EES2_EEPSI_RKT0_ = comdat any

$_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE = comdat any

$_ZNK5blink22FontFaceCreationParams7GetHashEv = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZNK5blink22FontFaceCreationParamseqERKS0_ = comdat any

$_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink19FontDataForRangeSetEEEEmm = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN5blink19FontDataForRangeSetD2Ev = comdat any

$_ZN5blink19FontDataForRangeSetD0Ev = comdat any

$_ZN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyC2ERKS2_OS5_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SA_SN_EERKS2_SH_EENS_18HashTableAddResultISO_SI_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6ExpandEPSI_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS2_INSt3__110unique_ptrINS_8LruCacheIS4_13scoped_refptrINS3_17SegmentedFontDataEENS3_16FontCacheKeyHashES5_E21MappedListNodeWithKeyENS6_14default_deleteISE_EEEEEEEESC_NS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_SH_EERKS4_SH_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE8RehashToEPSI_jSP_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISA_SM_SN_EES2_EENS4_4pairIPSI_bEERKT0_ = comdat any

$_ZN5blink22FontFaceCreationParamsaSERKS0_ = comdat any

$_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE5eraseEPKSI_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8FontFaceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN3WTF6StringEN5blink10PersistentINS5_10HeapVectorINS5_6MemberINS5_8FontFaceEEELj0EEEEEEEC2IJLm0ELm1EEJS4_SC_EJEJEJRKS4_SC_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSI_IJDpT2_EEEDpOT3_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE6insertINS_21ListHashSetTranslatorISB_S6_EERPS4_RSE_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS3_INS_8FontFaceEEEEEEES8_NS1_17IdentityExtractorENS1_28ListHashSetNodeHashFunctionsINS1_10MemberHashIS5_EEEENS1_17ListHashSetTraitsIS6_Lj0ENS_24HeapListHashSetAllocatorEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE4findEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZN3WTF11ListHashSetIN5blink6MemberINS1_8FontFaceEEELm0ENS_10MemberHashIS3_EENS1_24HeapListHashSetAllocatorEE6UnlinkEPNS1_19HeapListHashSetNodeIS4_EE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS4_8FontFaceEEEEEES7_EJS9_EEES8_E3RunEPNS0_13BindStateBaseEOS7_ = comdat any

$_ZN4base8internal9BindStateIPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJS8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS4_8FontFaceEEEEEES7_EJS9_EEEFbS7_EE3RunEPNS0_13BindStateBaseEOS7_ = comdat any

$_ZN4base8internal9BindStateIPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJS8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_12FontFaceListEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12FontFaceListEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19FontDataForRangeSetE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5IndexEvE13gc_info_index = comdat any

@__const._ZN5blink20CSSSegmentedFontFace11GetFontDataERKNS_15FontDescriptionE.key = private unnamed_addr constant <{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }, i32, i32, float, [4 x i8], %class.scoped_refptr.151, i8, [7 x i8] }> <{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.164" { %"struct.std::__1::__compressed_pair_elem.165" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr.151 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@__const._ZN5blink20CSSSegmentedFontFace11GetFontDataERKNS_15FontDescriptionE.requested_font_description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.142 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.143 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.151 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.161 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.170 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@_ZTVN5blink17SegmentedFontDataE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold = internal global i64 0, align 8
@_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal global i64 0, align 8
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontFaceListEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FontFaceList]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_12FontFaceListEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12FontFaceListEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12FontFaceListEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12FontFaceListEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.6 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink19FontDataForRangeSetEEEEPKcv = private unnamed_addr constant [89 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::FontDataForRangeSet>]\00", align 1
@_ZTVN5blink19FontDataForRangeSetE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FontDataForRangeSet"*)* @_ZN5blink19FontDataForRangeSetD2Ev to i8*), i8* bitcast (void (%"class.blink::FontDataForRangeSet"*)* @_ZN5blink19FontDataForRangeSetD0Ev to i8*)] }, comdat, align 8
@_ZTVN5blink28FontDataForRangeSetFromCacheE = external unnamed_addr constant { [4 x i8*] }, align 8
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashENS_10HashTraitsIS3_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEEEEPKcv = private unnamed_addr constant [464 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::FontCacheKey, std::__1::unique_ptr<WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey, std::__1::default_delete<WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.13 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.15 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8FontFaceEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::FontFace>, WTF::VectorTraits<blink::Member<blink::FontFace> > >]\00", align 1
@.str.16 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_19HeapListHashSetNodeINS4_INS1_8FontFaceEEEEEEES9_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS6_EEEENS_17ListHashSetTraitsIS7_Lj0ENS1_24HeapListHashSetAllocatorEEESH_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [546 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::HeapListHashSetNode<blink::Member<blink::FontFace> > >, blink::Member<blink::HeapListHashSetNode<blink::Member<blink::FontFace> > >, WTF::IdentityExtractor, WTF::ListHashSetNodeHashFunctions<WTF::MemberHash<blink::FontFace> >, WTF::ListHashSetTraits<blink::Member<blink::FontFace>, 0, blink::HeapListHashSetAllocator>, WTF::ListHashSetTraits<blink::Member<blink::FontFace>, 0, blink::HeapListHashSetAllocator>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19HeapListHashSetNodeINS1_6MemberINS1_8FontFaceEEEEEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapListHashSetNode<blink::Member<blink::FontFace> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink20CSSSegmentedFontFaceC1ENS_25FontSelectionCapabilitiesE = hidden unnamed_addr alias void (%"class.blink::CSSSegmentedFontFace"*, i64, i48), void (%"class.blink::CSSSegmentedFontFace"*, i64, i48)* @_ZN5blink20CSSSegmentedFontFaceC2ENS_25FontSelectionCapabilitiesE
@_ZN5blink20CSSSegmentedFontFaceD1Ev = hidden unnamed_addr alias void (%"class.blink::CSSSegmentedFontFace"*), void (%"class.blink::CSSSegmentedFontFace"*)* @_ZN5blink20CSSSegmentedFontFaceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSSegmentedFontFaceC2ENS_25FontSelectionCapabilitiesE(%"class.blink::CSSSegmentedFontFace"* nocapture, i64, i48) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::CSSSegmentedFontFace"* %0 to i64*
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 0, i32 2
  %6 = bitcast %"struct.blink::FontSelectionRange"* %5 to i48*
  store i48 %2, i48* %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::LruCache"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #14
  %9 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 1
  %10 = bitcast %"class.WTF::DoublyLinkedList"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #14
  %11 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 2
  store i64 250, i64* %11, align 8
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FontFaceListEEEPhm(i64 96) #14
  %13 = getelementptr inbounds i8, i8* %12, i64 -4
  %14 = bitcast i8* %13 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 96, i1 false) #14
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.blink::FontFaceList"** %17 to i8**
  store i8* %12, i8** %18, align 8
  %19 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 3
  store i64 0, i64* %19, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSSegmentedFontFaceD2Ev(%"class.blink::CSSSegmentedFontFace"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %27, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %22, %9
  %12 = phi i64 [ 0, %9 ], [ %23, %22 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, -1
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 0, i32 3
  %17 = load float, float* %16, align 8
  %18 = fcmp oeq float %17, 0x47EFFFFFE0000000
  %19 = and i1 %15, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12
  tail call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"* %21) #14
  br label %22

22:                                               ; preds = %20, %11
  %23 = add nuw nsw i64 %12, 1
  %24 = icmp eq i64 %23, %10
  br i1 %24, label %25, label %11

25:                                               ; preds = %22, %5
  %26 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #14
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %2, align 8
  br label %27

27:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSSegmentedFontFace10PruneTableEv(%"class.blink::CSSSegmentedFontFace"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %10
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %27, %14
  %17 = phi i64 [ 0, %14 ], [ %28, %27 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, -1
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 0, i32 3
  %22 = load float, float* %21, align 8
  %23 = fcmp oeq float %22, 0x47EFFFFFE0000000
  %24 = and i1 %20, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17
  tail call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"* %26) #14
  br label %27

27:                                               ; preds = %25, %16
  %28 = add nuw nsw i64 %17, 1
  %29 = icmp eq i64 %28, %15
  br i1 %29, label %30, label %16

30:                                               ; preds = %27, %10
  %31 = bitcast %"struct.WTF::KeyValuePair"* %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #14
  %32 = bitcast %"class.WTF::LruCache"* %2 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store i32 0, i32* %11, align 8
  store i32 0, i32* %3, align 4
  br label %33

33:                                               ; preds = %6, %30
  %34 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 1
  %35 = bitcast %"class.WTF::DoublyLinkedList"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #14
  br label %36

36:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20CSSSegmentedFontFace7IsValidEv(%"class.blink::CSSSegmentedFontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Member.11", align 8
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %5, align 8
  %7 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = tail call i8* @_Znwm(i64 40) #15, !noalias !3
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEEEFbNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOS9_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEE7DestroyEPKNS0_13BindStateBaseE") #14, !noalias !3
  %10 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %8, i8** %10, align 8, !alias.scope !3
  %11 = bitcast %"class.blink::Member.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = bitcast %"class.blink::Member.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %13, align 8
  %15 = icmp eq %"class.blink::HeapListHashSetNode"* %14, null
  br i1 %15, label %38, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::Member.11"* %2 to i64*
  %18 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::HeapListHashSetNode"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  %21 = getelementptr inbounds i8, i8* %8, i64 8
  %22 = bitcast i8* %21 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %23 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %22, align 8
  %24 = call zeroext i1 %23(%"class.base::internal::BindStateBase"* nonnull %9, %"class.blink::Member.11"* nonnull dereferenceable(8) %2) #14
  br i1 %24, label %58, label %25

25:                                               ; preds = %16, %30
  %26 = phi %"class.blink::HeapListHashSetNode"* [ %28, %30 ], [ %14, %16 ]
  %27 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %27, align 8
  %29 = icmp eq %"class.blink::HeapListHashSetNode"* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %25
  %31 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %18, align 8
  %32 = bitcast %"class.blink::HeapListHashSetNode"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %17, align 8
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %31, i64 0, i32 1
  %35 = bitcast void ()** %34 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %36 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %35, align 8
  %37 = call zeroext i1 %36(%"class.base::internal::BindStateBase"* %31, %"class.blink::Member.11"* nonnull dereferenceable(8) %2) #14
  br i1 %37, label %58, label %25

38:                                               ; preds = %25, %1
  %39 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %6, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %39, align 8
  %41 = icmp eq %"class.blink::HeapListHashSetNode"* %40, null
  br i1 %41, label %58, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::Member.11"* %3 to i64*
  %44 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %49

45:                                               ; preds = %49
  %46 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %50, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %46, align 8
  %48 = icmp eq %"class.blink::HeapListHashSetNode"* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45, %42
  %50 = phi %"class.blink::HeapListHashSetNode"* [ %40, %42 ], [ %47, %45 ]
  %51 = bitcast %"class.blink::HeapListHashSetNode"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %43, align 8
  %53 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %44, align 8
  %54 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %53, i64 0, i32 1
  %55 = bitcast void ()** %54 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %56 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %55, align 8
  %57 = call zeroext i1 %56(%"class.base::internal::BindStateBase"* %53, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %57, label %58, label %45

58:                                               ; preds = %30, %45, %49, %16, %38
  %59 = phi i1 [ false, %38 ], [ true, %16 ], [ true, %49 ], [ false, %45 ], [ true, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  %60 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12FontFaceList16ForEachUntilTrueERKN4base17RepeatingCallbackIFbNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"*, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = alloca %"class.blink::Member.11", align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %5, align 8
  %7 = icmp eq %"class.blink::HeapListHashSetNode"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Member.11"* %3 to i64*
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %15

11:                                               ; preds = %15
  %12 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %16, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %12, align 8
  %14 = icmp eq %"class.blink::HeapListHashSetNode"* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %8, %11
  %16 = phi %"class.blink::HeapListHashSetNode"* [ %6, %8 ], [ %13, %11 ]
  %17 = bitcast %"class.blink::HeapListHashSetNode"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %9, align 8
  %19 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %19, i64 0, i32 1
  %21 = bitcast void ()** %20 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %22 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.base::internal::BindStateBase"* %19, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %23, label %44, label %11

24:                                               ; preds = %11, %2
  %25 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %25, align 8
  %27 = icmp eq %"class.blink::HeapListHashSetNode"* %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::Member.11"* %4 to i64*
  %30 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %35

31:                                               ; preds = %35
  %32 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %36, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %32, align 8
  %34 = icmp eq %"class.blink::HeapListHashSetNode"* %33, null
  br i1 %34, label %44, label %35

35:                                               ; preds = %28, %31
  %36 = phi %"class.blink::HeapListHashSetNode"* [ %26, %28 ], [ %33, %31 ]
  %37 = bitcast %"class.blink::HeapListHashSetNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %29, align 8
  %39 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %30, align 8
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %41 = bitcast void ()** %40 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %42 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.base::internal::BindStateBase"* %39, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %43, label %44, label %31

44:                                               ; preds = %15, %31, %35, %24
  %45 = phi i1 [ false, %24 ], [ false, %31 ], [ true, %35 ], [ true, %15 ]
  ret i1 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSSegmentedFontFace19FontFaceInvalidatedEv(%"class.blink::CSSSegmentedFontFace"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %10
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %27, %14
  %17 = phi i64 [ 0, %14 ], [ %28, %27 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, -1
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 0, i32 3
  %22 = load float, float* %21, align 8
  %23 = fcmp oeq float %22, 0x47EFFFFFE0000000
  %24 = and i1 %20, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17
  tail call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"* %26) #14
  br label %27

27:                                               ; preds = %25, %16
  %28 = add nuw nsw i64 %17, 1
  %29 = icmp eq i64 %28, %15
  br i1 %29, label %30, label %16

30:                                               ; preds = %27, %10
  %31 = bitcast %"struct.WTF::KeyValuePair"* %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #14
  %32 = bitcast %"class.WTF::LruCache"* %2 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store i32 0, i32* %11, align 8
  store i32 0, i32* %3, align 4
  br label %33

33:                                               ; preds = %30, %6
  %34 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 1
  %35 = bitcast %"class.WTF::DoublyLinkedList"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #14
  br label %36

36:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSSegmentedFontFace11AddFontFaceEPNS_8FontFaceEb(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::FontFace"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontFace"*, align 8
  %5 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = icmp eq %"struct.WTF::KeyValuePair"* %11, null
  br i1 %12, label %36, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %13
  %18 = zext i32 %15 to i64
  br label %19

19:                                               ; preds = %30, %17
  %20 = phi i64 [ 0, %17 ], [ %31, %30 ]
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, -1
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %20, i32 0, i32 3
  %25 = load float, float* %24, align 8
  %26 = fcmp oeq float %25, 0x47EFFFFFE0000000
  %27 = and i1 %23, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %20
  tail call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"* %29) #14
  br label %30

30:                                               ; preds = %28, %19
  %31 = add nuw nsw i64 %20, 1
  %32 = icmp eq i64 %31, %18
  br i1 %32, label %33, label %19

33:                                               ; preds = %30, %13
  %34 = bitcast %"struct.WTF::KeyValuePair"* %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #14
  %35 = bitcast %"class.WTF::LruCache"* %5 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  store i32 0, i32* %14, align 8
  store i32 0, i32* %6, align 4
  br label %36

36:                                               ; preds = %33, %9
  %37 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 1
  %38 = bitcast %"class.WTF::DoublyLinkedList"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #14
  br label %39

39:                                               ; preds = %3, %36
  %40 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 20, i32 0, i32 0
  %41 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %40, align 8
  tail call void @_ZN5blink11CSSFontFace20AddSegmentedFontFaceEPNS_20CSSSegmentedFontFaceE(%"class.blink::CSSFontFace"* %41, %"class.blink::CSSSegmentedFontFace"* %0) #14
  %42 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %42, align 8
  %44 = bitcast %"class.blink::FontFace"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  store %"class.blink::FontFace"* %1, %"class.blink::FontFace"** %4, align 8
  %45 = bitcast %"class.blink::FontFaceList"* %43 to %"class.WTF::ListHashSet"*
  %46 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %43, i64 0, i32 1
  %47 = bitcast %"class.blink::HeapListHashSet"* %46 to %"class.WTF::ListHashSet"*
  %48 = select i1 %2, %"class.WTF::ListHashSet"* %45, %"class.WTF::ListHashSet"* %47
  %49 = call { %"class.blink::Member.11"*, i8 } @_ZN3WTF11ListHashSetIN5blink6MemberINS1_8FontFaceEEELm0ENS_10MemberHashIS3_EENS1_24HeapListHashSetAllocatorEE6insertIRPS3_EENS8_9AddResultEOT_(%"class.WTF::ListHashSet"* %48, %"class.blink::FontFace"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  ret void
}

declare void @_ZN5blink11CSSFontFace20AddSegmentedFontFaceEPNS_20CSSSegmentedFontFaceE(%"class.blink::CSSFontFace"*, %"class.blink::CSSSegmentedFontFace"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FontFaceList6InsertEPNS_8FontFaceEb(%"class.blink::FontFaceList"*, %"class.blink::FontFace"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontFace"*, align 8
  store %"class.blink::FontFace"* %1, %"class.blink::FontFace"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::HeapListHashSet"* %5 to %"class.WTF::ListHashSet"*
  %7 = bitcast %"class.blink::FontFaceList"* %0 to %"class.WTF::ListHashSet"*
  %8 = select i1 %2, %"class.WTF::ListHashSet"* %7, %"class.WTF::ListHashSet"* %6
  %9 = call { %"class.blink::Member.11"*, i8 } @_ZN3WTF11ListHashSetIN5blink6MemberINS1_8FontFaceEEELm0ENS_10MemberHashIS3_EENS1_24HeapListHashSetAllocatorEE6insertIRPS3_EENS8_9AddResultEOT_(%"class.WTF::ListHashSet"* %8, %"class.blink::FontFace"** nonnull dereferenceable(8) %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSSegmentedFontFace14RemoveFontFaceEPNS_8FontFaceE(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::FontFace"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %3, align 8
  %5 = tail call zeroext i1 @_ZN5blink12FontFaceList5EraseEPNS_8FontFaceE(%"class.blink::FontFaceList"* %4, %"class.blink::FontFace"* %1)
  br i1 %5, label %6, label %44

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %41, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  br label %21

21:                                               ; preds = %32, %19
  %22 = phi i64 [ 0, %19 ], [ %33, %32 ]
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, -1
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22, i32 0, i32 3
  %27 = load float, float* %26, align 8
  %28 = fcmp oeq float %27, 0x47EFFFFFE0000000
  %29 = and i1 %25, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22
  tail call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"* %31) #14
  br label %32

32:                                               ; preds = %30, %21
  %33 = add nuw nsw i64 %22, 1
  %34 = icmp eq i64 %33, %20
  br i1 %34, label %35, label %21

35:                                               ; preds = %32, %15
  %36 = bitcast %"struct.WTF::KeyValuePair"* %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #14
  %37 = bitcast %"class.WTF::LruCache"* %7 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store i32 0, i32* %16, align 8
  store i32 0, i32* %8, align 4
  br label %38

38:                                               ; preds = %35, %11
  %39 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 1
  %40 = bitcast %"class.WTF::DoublyLinkedList"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #14
  br label %41

41:                                               ; preds = %6, %38
  %42 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 20, i32 0, i32 0
  %43 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %42, align 8
  tail call void @_ZN5blink11CSSFontFace23RemoveSegmentedFontFaceEPNS_20CSSSegmentedFontFaceE(%"class.blink::CSSFontFace"* %43, %"class.blink::CSSSegmentedFontFace"* %0) #14
  br label %44

44:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12FontFaceList5EraseEPNS_8FontFaceE(%"class.blink::FontFaceList"*, %"class.blink::FontFace"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::FontFaceList"* %0 to %"class.WTF::ListHashSet"*
  %4 = ptrtoint %"class.blink::FontFace"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %5, align 8
  %7 = icmp eq %"class.blink::Member.7"* %6, null
  %8 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %67, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = xor i32 %31, -1
  %35 = lshr i32 %31, 23
  %36 = add i32 %35, %34
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %58, %10
  %48 = phi i64 [ 0, %10 ], [ %60, %58 ]
  %49 = phi i64 [ %33, %10 ], [ %62, %58 ]
  %50 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %6, i64 %49
  %51 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %51, align 8
  %53 = ptrtoint %"class.blink::HeapListHashSetNode"* %52 to i64
  switch i64 %53, label %54 [
    i64 0, label %67
    i64 -1, label %58
  ]

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %52, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %55, align 8
  %57 = icmp eq %"class.blink::FontFace"* %56, %1
  br i1 %57, label %63, label %58

58:                                               ; preds = %54, %47
  %59 = icmp eq i64 %48, 0
  %60 = select i1 %59, i64 %46, i64 %48
  %61 = add i64 %60, %49
  %62 = and i64 %61, %12
  br label %47

63:                                               ; preds = %54
  %64 = icmp eq %"class.blink::Member.7"* %50, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = zext i32 %9 to i64
  br label %70

67:                                               ; preds = %47, %63, %2
  %68 = zext i32 %9 to i64
  %69 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %6, i64 %68
  br label %70

70:                                               ; preds = %67, %65
  %71 = phi i64 [ %66, %65 ], [ %68, %67 ]
  %72 = phi %"class.blink::Member.7"* [ %50, %65 ], [ %69, %67 ]
  %73 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %6, i64 %71
  %74 = icmp eq %"class.blink::Member.7"* %72, %73
  br i1 %74, label %90, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %72, i64 0, i32 0, i32 0
  %77 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %76, align 8
  %78 = icmp eq %"class.blink::HeapListHashSetNode"* %77, null
  br i1 %78, label %90, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = tail call { %"class.blink::Member.7"*, %"class.blink::Member.7"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE4findEPS6_(%"class.WTF::HashTable.5"* %80, %"class.blink::HeapListHashSetNode"* nonnull %77) #14
  %82 = extractvalue { %"class.blink::Member.7"*, %"class.blink::Member.7"* } %81, 0
  %83 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %5, align 8
  %84 = load i32, i32* %8, align 8
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %83, i64 %85
  %87 = icmp eq %"class.blink::Member.7"* %86, %82
  br i1 %87, label %89, label %88

88:                                               ; preds = %79
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.5"* %80, %"class.blink::Member.7"* %82) #14
  br label %89

89:                                               ; preds = %79, %88
  tail call void @_ZN3WTF11ListHashSetIN5blink6MemberINS1_8FontFaceEEELm0ENS_10MemberHashIS3_EENS1_24HeapListHashSetAllocatorEE6UnlinkEPNS1_19HeapListHashSetNodeIS4_EE(%"class.WTF::ListHashSet"* %3, %"class.blink::HeapListHashSetNode"* nonnull %77) #14
  br label %178

90:                                               ; preds = %75, %70
  %91 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1
  %92 = bitcast %"class.blink::HeapListHashSet"* %91 to %"class.WTF::ListHashSet"*
  %93 = getelementptr inbounds %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet"* %91, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %93, align 8
  %95 = icmp eq %"class.blink::Member.7"* %94, null
  %96 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  br i1 %95, label %155, label %98

98:                                               ; preds = %90
  %99 = add i32 %97, -1
  %100 = zext i32 %99 to i64
  %101 = shl i64 %4, 32
  %102 = xor i64 %101, -1
  %103 = add i64 %102, %4
  %104 = lshr i64 %103, 22
  %105 = xor i64 %104, %103
  %106 = shl i64 %105, 13
  %107 = xor i64 %106, -1
  %108 = add i64 %105, %107
  %109 = lshr i64 %108, 8
  %110 = xor i64 %109, %108
  %111 = mul i64 %110, 9
  %112 = lshr i64 %111, 15
  %113 = xor i64 %112, %111
  %114 = shl i64 %113, 27
  %115 = xor i64 %114, -1
  %116 = add i64 %113, %115
  %117 = lshr i64 %116, 31
  %118 = xor i64 %117, %116
  %119 = trunc i64 %118 to i32
  %120 = and i32 %99, %119
  %121 = zext i32 %120 to i64
  %122 = xor i32 %119, -1
  %123 = lshr i32 %119, 23
  %124 = add i32 %123, %122
  %125 = shl i32 %124, 12
  %126 = xor i32 %125, %124
  %127 = lshr i32 %126, 7
  %128 = xor i32 %127, %126
  %129 = shl i32 %128, 2
  %130 = xor i32 %129, %128
  %131 = lshr i32 %130, 20
  %132 = xor i32 %131, %130
  %133 = or i32 %132, 1
  %134 = zext i32 %133 to i64
  br label %135

135:                                              ; preds = %146, %98
  %136 = phi i64 [ 0, %98 ], [ %148, %146 ]
  %137 = phi i64 [ %121, %98 ], [ %150, %146 ]
  %138 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %94, i64 %137
  %139 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %139, align 8
  %141 = ptrtoint %"class.blink::HeapListHashSetNode"* %140 to i64
  switch i64 %141, label %142 [
    i64 0, label %155
    i64 -1, label %146
  ]

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %140, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %143, align 8
  %145 = icmp eq %"class.blink::FontFace"* %144, %1
  br i1 %145, label %151, label %146

146:                                              ; preds = %142, %135
  %147 = icmp eq i64 %136, 0
  %148 = select i1 %147, i64 %134, i64 %136
  %149 = add i64 %148, %137
  %150 = and i64 %149, %100
  br label %135

151:                                              ; preds = %142
  %152 = icmp eq %"class.blink::Member.7"* %138, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = zext i32 %97 to i64
  br label %158

155:                                              ; preds = %135, %151, %90
  %156 = zext i32 %97 to i64
  %157 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %94, i64 %156
  br label %158

158:                                              ; preds = %155, %153
  %159 = phi i64 [ %154, %153 ], [ %156, %155 ]
  %160 = phi %"class.blink::Member.7"* [ %138, %153 ], [ %157, %155 ]
  %161 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %94, i64 %159
  %162 = icmp eq %"class.blink::Member.7"* %160, %161
  br i1 %162, label %178, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %160, i64 0, i32 0, i32 0
  %165 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %164, align 8
  %166 = icmp eq %"class.blink::HeapListHashSetNode"* %165, null
  br i1 %166, label %178, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet"* %91, i64 0, i32 0, i32 0
  %169 = tail call { %"class.blink::Member.7"*, %"class.blink::Member.7"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE4findEPS6_(%"class.WTF::HashTable.5"* %168, %"class.blink::HeapListHashSetNode"* nonnull %165) #14
  %170 = extractvalue { %"class.blink::Member.7"*, %"class.blink::Member.7"* } %169, 0
  %171 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %93, align 8
  %172 = load i32, i32* %96, align 8
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %171, i64 %173
  %175 = icmp eq %"class.blink::Member.7"* %174, %170
  br i1 %175, label %177, label %176

176:                                              ; preds = %167
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.5"* %168, %"class.blink::Member.7"* %170) #14
  br label %177

177:                                              ; preds = %167, %176
  tail call void @_ZN3WTF11ListHashSetIN5blink6MemberINS1_8FontFaceEEELm0ENS_10MemberHashIS3_EENS1_24HeapListHashSetAllocatorEE6UnlinkEPNS1_19HeapListHashSetNodeIS4_EE(%"class.WTF::ListHashSet"* %92, %"class.blink::HeapListHashSetNode"* nonnull %165) #14
  br label %178

178:                                              ; preds = %163, %158, %177, %89
  %179 = phi i1 [ true, %89 ], [ true, %177 ], [ false, %163 ], [ false, %158 ]
  ret i1 %179
}

declare void @_ZN5blink11CSSFontFace23RemoveSegmentedFontFaceEPNS_20CSSSegmentedFontFaceE(%"class.blink::CSSFontFace"*, %"class.blink::CSSSegmentedFontFace"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontData"* @_ZN5blink20CSSSegmentedFontFace11GetFontDataERKNS_15FontDescriptionE(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::FontSelectionRequest", align 8
  %4 = alloca %"struct.blink::FontCacheKey", align 8
  %5 = alloca %"class.blink::FontFaceCreationParams", align 8
  %6 = alloca %"class.blink::FontDescription", align 8
  %7 = alloca %"class.base::RepeatingCallback.199", align 8
  %8 = alloca %class.scoped_refptr.173, align 8
  %9 = tail call zeroext i1 @_ZNK5blink20CSSSegmentedFontFace7IsValidEv(%"class.blink::CSSSegmentedFontFace"* %0)
  br i1 %9, label %10, label %312

10:                                               ; preds = %2
  %11 = bitcast %"struct.blink::FontSelectionRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %11) #14
  %12 = tail call i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* %1) #14
  %13 = bitcast %"struct.blink::FontSelectionRequest"* %3 to i48*
  store i48 %12, i48* %13, align 8
  %14 = bitcast %"struct.blink::FontCacheKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (<{ { i32, [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }, i32, i32, float, [4 x i8], %class.scoped_refptr.151, i8, [7 x i8] }>* @__const._ZN5blink20CSSSegmentedFontFace11GetFontDataERKNS_15FontDescriptionE.key to i8*), i64 80, i1 false)
  %15 = bitcast %"class.blink::FontFaceCreationParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 1
  %18 = bitcast %"class.WTF::AtomicString"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 40, i1 false) #14
  call void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* nonnull sret %4, %"class.blink::FontDescription"* %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %5, i1 zeroext false, %"struct.blink::FontSelectionRequest"* nonnull dereferenceable(6) %3) #14
  %19 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %24, %10
  %28 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #14
  br label %44

44:                                               ; preds = %27, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #14
  %45 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %108, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %45, i64 0, i32 0, i32 0
  %51 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISA_SM_SN_EES2_EEPSI_RKT0_(%"class.WTF::HashTable"* %50, %"struct.blink::FontCacheKey"* nonnull dereferenceable(80) %4) #14
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %51, null
  %53 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %45, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57
  %59 = select i1 %52, %"struct.WTF::KeyValuePair"* %58, %"struct.WTF::KeyValuePair"* %51
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %58
  br i1 %60, label %108, label %61

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 1
  %65 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %63, i64 0, i32 2
  %66 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %65, align 8
  %67 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %66, null
  %68 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %63, i64 0, i32 3
  %69 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.WTF::DoublyLinkedList"* %64 to i64*
  %72 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %66, i64 0, i32 3
  %73 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %72 to i64*
  %74 = select i1 %67, i64* %71, i64* %73
  store i64 %70, i64* %74, align 8
  %75 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %68, align 8
  %76 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %75, null
  %77 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %65 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 1, i32 1
  %80 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %75, i64 0, i32 2
  %81 = select i1 %76, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %79, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %80
  %82 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %81 to i64*
  store i64 %78, i64* %82, align 8
  %83 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %64, i64 0, i32 0
  %84 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %83, align 8
  %85 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %84, null
  br i1 %85, label %86, label %89

86:                                               ; preds = %61
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %63, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %83, align 8
  %87 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 1, i32 1, i32 1
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %63, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %87, align 8
  %88 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #14
  br label %93

89:                                               ; preds = %61
  %90 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %84, i64 0, i32 2
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %63, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %90, align 8
  %91 = bitcast %"class.WTF::DoublyLinkedList"* %64 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %69, align 8
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %65, align 8
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %63, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %83, align 8
  br label %93

93:                                               ; preds = %86, %89
  %94 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %62, align 8
  %95 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %94, i64 0, i32 1
  %96 = icmp eq %class.scoped_refptr.173* %95, null
  br i1 %96, label %108, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %class.scoped_refptr.173, %class.scoped_refptr.173* %95, i64 0, i32 0
  %99 = load %"class.blink::SegmentedFontData"*, %"class.blink::SegmentedFontData"** %98, align 8
  %100 = icmp eq %"class.blink::SegmentedFontData"* %99, null
  br i1 %100, label %108, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %99, i64 0, i32 1, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %101
  %106 = ptrtoint %"class.blink::SegmentedFontData"* %99 to i64
  %107 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %99, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %107) #14
  br label %260

108:                                              ; preds = %97, %49, %44, %101, %93
  %109 = call noalias i8* @malloc(i64 40) #14
  %110 = getelementptr inbounds i8, i8* %109, i64 8
  %111 = bitcast i8* %110 to i32*
  store i32 1, i32* %111, align 4
  %112 = bitcast i8* %109 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17SegmentedFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds i8, i8* %109, i64 16
  %114 = getelementptr inbounds i8, i8* %109, i64 32
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %109, i64 24
  %117 = bitcast i8* %116 to i32*
  store i32 1, i32* %117, align 8
  %118 = getelementptr inbounds i8, i8* %109, i64 28
  %119 = bitcast i8* %118 to i32*
  store i32 0, i32* %119, align 4
  %120 = ptrtoint i8* %109 to i64
  %121 = bitcast %"class.blink::FontDescription"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %121) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink20CSSSegmentedFontFace11GetFontDataERKNS_15FontDescriptionE.requested_font_description to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %6, %"class.blink::FontDescription"* dereferenceable(80) %1) #14
  %122 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i16, i16* %122, align 2
  %124 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %125 = load i16, i16* %124, align 2
  %126 = icmp sgt i16 %125, %123
  br i1 %126, label %200, label %127

127:                                              ; preds = %108
  %128 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %129 = load i16, i16* %128, align 2
  %130 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %131 = load i16, i16* %130, align 2
  %132 = icmp sgt i16 %131, %129
  br i1 %132, label %200, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %135 = load i16, i16* %134, align 2
  %136 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %137 = load i16, i16* %136, align 2
  %138 = icmp sgt i16 %137, %135
  br i1 %138, label %200, label %139

139:                                              ; preds = %133
  %140 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold to i8*) acquire, align 8
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %146, !prof !10

142:                                              ; preds = %139
  %143 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  store i16 2400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  br label %146

146:                                              ; preds = %139, %142, %145
  %147 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  %148 = load i16, i16* %136, align 2
  %149 = icmp slt i16 %148, %147
  br i1 %149, label %150, label %162

150:                                              ; preds = %146
  %151 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold to i8*) acquire, align 8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %157, !prof !10

153:                                              ; preds = %150
  %154 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %157, label %156

156:                                              ; preds = %153
  store i16 2400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  br label %157

157:                                              ; preds = %150, %153, %156
  %158 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  %159 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %3, i64 0, i32 0, i32 0
  %160 = load i16, i16* %159, align 8
  %161 = icmp sge i16 %160, %158
  br label %162

162:                                              ; preds = %157, %146
  %163 = phi i1 [ false, %146 ], [ %161, %157 ]
  %164 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %6, i64 0, i32 12, i32 0
  %165 = bitcast %"struct.blink::FontDescription::BitFields"* %164 to i64*
  %166 = zext i1 %163 to i64
  %167 = load i64, i64* %165, align 8
  %168 = shl nuw nsw i64 %166, 29
  %169 = and i64 %167, -536870913
  %170 = or i64 %169, %168
  store i64 %170, i64* %165, align 8
  %171 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %177, !prof !10

173:                                              ; preds = %162
  %174 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #14
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %177, label %176

176:                                              ; preds = %173
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #14
  br label %177

177:                                              ; preds = %162, %173, %176
  %178 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  %179 = load i16, i16* %130, align 2
  %180 = icmp eq i16 %179, %178
  br i1 %180, label %181, label %195

181:                                              ; preds = %177
  %182 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %188, !prof !10

184:                                              ; preds = %181
  %185 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #14
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #14
  br label %188

188:                                              ; preds = %181, %184, %187
  %189 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %190 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %3, i64 0, i32 2, i32 0
  %191 = load i16, i16* %190, align 4
  %192 = icmp eq i16 %191, %189
  %193 = zext i1 %192 to i64
  %194 = shl nuw nsw i64 %193, 30
  br label %195

195:                                              ; preds = %188, %177
  %196 = phi i64 [ 0, %177 ], [ %194, %188 ]
  %197 = load i64, i64* %165, align 8
  %198 = and i64 %197, -1073741825
  %199 = or i64 %198, %196
  store i64 %199, i64* %165, align 8
  br label %200

200:                                              ; preds = %108, %127, %195, %133
  %201 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %202 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %201, align 8
  %203 = bitcast %"class.base::RepeatingCallback.199"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #14
  %204 = getelementptr inbounds %"class.base::RepeatingCallback.199", %"class.base::RepeatingCallback.199"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %204, align 8, !alias.scope !11
  %205 = call i8* @_Znwm(i64 128) #15, !noalias !14
  %206 = bitcast i8* %205 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %206, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink20CSSSegmentedFontFace11GetFontDataERKNS3_15FontDescriptionEE3$_1JS5_13scoped_refptrINS3_17SegmentedFontDataEEEEEFvNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink20CSSSegmentedFontFace11GetFontDataERKNS2_15FontDescriptionEE3$_1JS4_13scoped_refptrINS2_17SegmentedFontDataEEEE7DestroyEPKNS0_13BindStateBaseE") #14, !noalias !14
  %207 = getelementptr inbounds i8, i8* %205, i64 40
  %208 = bitcast i8* %207 to %"class.blink::FontDescription"*
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* %208, %"class.blink::FontDescription"* nonnull dereferenceable(80) %6) #14, !noalias !14
  %209 = getelementptr inbounds i8, i8* %205, i64 120
  %210 = bitcast i8* %209 to i8**
  store i8* %109, i8** %210, align 8, !noalias !14
  %211 = icmp eq i8* %109, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %200
  %213 = bitcast i8* %110 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %213) #14, !noalias !14
  br label %214

214:                                              ; preds = %200, %212
  %215 = bitcast %"class.base::RepeatingCallback.199"* %7 to i8**
  store i8* %205, i8** %215, align 8, !alias.scope !14
  call void @_ZNK5blink12FontFaceList14ForEachReverseERKN4base17RepeatingCallbackIFvNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"* %202, %"class.base::RepeatingCallback.199"* nonnull dereferenceable(8) %7)
  %216 = getelementptr inbounds %"class.base::RepeatingCallback.199", %"class.base::RepeatingCallback.199"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %216) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #14
  %217 = load i32, i32* %119, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %242, label %219

219:                                              ; preds = %214
  %220 = bitcast %class.scoped_refptr.173* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #14
  %221 = getelementptr inbounds %class.scoped_refptr.173, %class.scoped_refptr.173* %8, i64 0, i32 0
  %222 = bitcast %class.scoped_refptr.173* %8 to i8**
  store i8* %109, i8** %222, align 8
  br i1 %211, label %225, label %223

223:                                              ; preds = %219
  %224 = bitcast i8* %110 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %224) #14
  br label %225

225:                                              ; preds = %219, %223
  call void @_ZN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE3PutERKS2_OS5_(%"class.WTF::LruCache"* %45, %"struct.blink::FontCacheKey"* nonnull dereferenceable(80) %4, %class.scoped_refptr.173* nonnull dereferenceable(8) %8)
  %226 = load %"class.blink::SegmentedFontData"*, %"class.blink::SegmentedFontData"** %221, align 8
  %227 = icmp eq %"class.blink::SegmentedFontData"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %226, i64 0, i32 0, i32 1, i32 0
  %230 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %229, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %230) #14
  %231 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %229, i64 0, i32 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %241

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %229, i64 -2
  %236 = bitcast %"class.base::RefCounted.141"* %235 to %"class.blink::FontData"*
  %237 = bitcast %"class.base::RefCounted.141"* %235 to void (%"class.blink::FontData"*)***
  %238 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %238, i64 1
  %240 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %239, align 8
  call void %240(%"class.blink::FontData"* nonnull %236) #14
  br label %241

241:                                              ; preds = %225, %228, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #14
  br label %242

242:                                              ; preds = %214, %241
  %243 = phi i64 [ %120, %241 ], [ 0, %214 ]
  %244 = phi i64 [ 0, %241 ], [ %120, %214 ]
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %121) #14
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %260, label %246

246:                                              ; preds = %242
  %247 = inttoptr i64 %244 to %"class.blink::SegmentedFontData"*
  %248 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %247, i64 0, i32 0, i32 1, i32 0
  %249 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %248, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %249) #14
  %250 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %248, i64 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %260

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %248, i64 -2
  %255 = bitcast %"class.base::RefCounted.141"* %254 to %"class.blink::FontData"*
  %256 = bitcast %"class.base::RefCounted.141"* %254 to void (%"class.blink::FontData"*)***
  %257 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %256, align 8
  %258 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %257, i64 1
  %259 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %258, align 8
  call void %259(%"class.blink::FontData"* nonnull %255) #14
  br label %260

260:                                              ; preds = %253, %246, %242, %105
  %261 = phi i64 [ %106, %105 ], [ %243, %242 ], [ %243, %246 ], [ %243, %253 ]
  %262 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %4, i64 0, i32 5, i32 0
  %263 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %262, align 8
  %264 = icmp eq %"class.blink::FontVariationSettings"* %263, null
  br i1 %264, label %285, label %265

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %263, i64 0, i32 1, i32 0
  %267 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %266, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %267) #14
  %268 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %266, i64 0, i32 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %285

271:                                              ; preds = %265
  %272 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %266, i64 -4
  %273 = bitcast %"class.base::RefCounted.160"* %272 to %"class.blink::FontTagValuePair.156"**
  %274 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %273, align 8
  %275 = icmp eq %"class.blink::FontTagValuePair.156"* %274, null
  %276 = bitcast %"class.blink::FontTagValuePair.156"* %274 to i8*
  br i1 %275, label %283, label %277, !prof !2

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %266, i64 -1, i32 0, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %282, label %281, !prof !19

281:                                              ; preds = %277
  store i32 0, i32* %278, align 4
  br label %282

282:                                              ; preds = %281, %277
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %276) #14
  br label %283

283:                                              ; preds = %282, %271
  %284 = bitcast %"class.base::RefCounted.160"* %272 to i8*
  call void @free(i8* %284) #14
  br label %285

285:                                              ; preds = %283, %265, %260
  %286 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %4, i64 0, i32 0, i32 2
  %287 = bitcast %"class.std::__1::basic_string"* %286 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %288 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %287, i64 0, i32 1, i32 0
  %289 = load i8, i8* %288, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %294

291:                                              ; preds = %285
  %292 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %286, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load i8*, i8** %292, align 8
  call void @_ZdlPv(i8* %293) #15
  br label %294

294:                                              ; preds = %291, %285
  %295 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %311, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  br i1 %302, label %305, label %307

305:                                              ; preds = %298
  %306 = add i32 %304, -1
  store i32 %306, i32* %303, align 4
  br label %307

307:                                              ; preds = %305, %298
  %308 = phi i32 [ %306, %305 ], [ %304, %298 ]
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %307
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %296) #14
  br label %311

311:                                              ; preds = %294, %307, %310
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %11) #14
  br label %312

312:                                              ; preds = %2, %311
  %313 = phi i64 [ %261, %311 ], [ 0, %2 ]
  %314 = inttoptr i64 %313 to %"class.blink::FontData"*
  ret %"class.blink::FontData"* %314
}

declare i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"*) local_unnamed_addr #3

declare void @_ZNK5blink15FontDescription8CacheKeyERKNS_22FontFaceCreationParamsEbRKNS_20FontSelectionRequestE(%"struct.blink::FontCacheKey"* sret, %"class.blink::FontDescription"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48), i1 zeroext, %"struct.blink::FontSelectionRequest"* dereferenceable(6)) local_unnamed_addr #3

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12FontFaceList14ForEachReverseERKN4base17RepeatingCallbackIFvNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"* nocapture readonly, %"class.base::RepeatingCallback.199"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = alloca %"class.blink::Member.11", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call i8* @_Znwm(i64 48) #15, !noalias !20
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS4_8FontFaceEEEEEES7_EJS9_EEEFbS7_EE3RunEPNS0_13BindStateBaseEOS7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJS8_EE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !20
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i1 (%"class.base::RepeatingCallback.199"*, %"class.blink::Member.11"*)* @_ZN5blinkL22FalseReturningCallbackERKN4base17RepeatingCallbackIFvNS_6MemberINS_8FontFaceEEEEEES4_ to i64), i64* %11, align 8, !noalias !20
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = bitcast i8* %12 to %"class.base::internal::CallbackBaseCopyable"*
  %14 = getelementptr inbounds %"class.base::RepeatingCallback.199", %"class.base::RepeatingCallback.199"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %13, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %14) #14, !noalias !20
  %15 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %8, i8** %15, align 8, !alias.scope !20
  %16 = bitcast %"class.blink::Member.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.blink::Member.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %18, align 8
  %20 = icmp eq %"class.blink::HeapListHashSetNode"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::Member.11"* %3 to i64*
  %23 = bitcast %"class.blink::HeapListHashSetNode"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds i8, i8* %8, i64 8
  %26 = bitcast i8* %25 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %27 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %26, align 8
  %28 = call zeroext i1 %27(%"class.base::internal::BindStateBase"* nonnull %9, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %28, label %61, label %29

29:                                               ; preds = %21, %34
  %30 = phi %"class.blink::HeapListHashSetNode"* [ %32, %34 ], [ %19, %21 ]
  %31 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %30, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %31, align 8
  %33 = icmp eq %"class.blink::HeapListHashSetNode"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %29
  %35 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %36 = bitcast %"class.blink::HeapListHashSetNode"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %22, align 8
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %39 = bitcast void ()** %38 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %40 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.base::internal::BindStateBase"* %35, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %41, label %61, label %29

42:                                               ; preds = %29, %2
  %43 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %43, align 8
  %45 = icmp eq %"class.blink::HeapListHashSetNode"* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.blink::Member.11"* %4 to i64*
  br label %52

48:                                               ; preds = %52
  %49 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %53, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %49, align 8
  %51 = icmp eq %"class.blink::HeapListHashSetNode"* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %46
  %53 = phi %"class.blink::HeapListHashSetNode"* [ %44, %46 ], [ %50, %48 ]
  %54 = bitcast %"class.blink::HeapListHashSetNode"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %47, align 8
  %56 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %57 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %56, i64 0, i32 1
  %58 = bitcast void ()** %57 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %59 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::internal::BindStateBase"* %56, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %60, label %61, label %48

61:                                               ; preds = %34, %48, %52, %21, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %62 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE3PutERKS2_OS5_(%"class.WTF::LruCache"*, %"struct.blink::FontCacheKey"* dereferenceable(80), %class.scoped_refptr.173* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.411", align 8
  %5 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0
  %6 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISA_SM_SN_EES2_EEPSI_RKT0_(%"class.WTF::HashTable"* %5, %"struct.blink::FontCacheKey"* dereferenceable(80) %1) #14
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  %8 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = select i1 %7, %"struct.WTF::KeyValuePair"* %13, %"struct.WTF::KeyValuePair"* %6
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %14, %13
  br i1 %15, label %76, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %17, align 8
  %19 = getelementptr inbounds %class.scoped_refptr.173, %class.scoped_refptr.173* %2, i64 0, i32 0
  %20 = bitcast %class.scoped_refptr.173* %2 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.blink::SegmentedFontData"* null, %"class.blink::SegmentedFontData"** %19, align 8
  %22 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %18, i64 0, i32 1
  %23 = bitcast %class.scoped_refptr.173* %22 to i64*
  %24 = getelementptr inbounds %class.scoped_refptr.173, %class.scoped_refptr.173* %22, i64 0, i32 0
  %25 = load %"class.blink::SegmentedFontData"*, %"class.blink::SegmentedFontData"** %24, align 8
  store i64 %21, i64* %23, align 8
  %26 = icmp eq %"class.blink::SegmentedFontData"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %25, i64 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %28, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #14
  %30 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %28, i64 -2
  %35 = bitcast %"class.base::RefCounted.141"* %34 to %"class.blink::FontData"*
  %36 = bitcast %"class.base::RefCounted.141"* %34 to void (%"class.blink::FontData"*)***
  %37 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %37, i64 1
  %39 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %38, align 8
  tail call void %39(%"class.blink::FontData"* nonnull %35) #14
  br label %40

40:                                               ; preds = %16, %27, %33
  %41 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %42 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %17, align 8
  %43 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %42, i64 0, i32 2
  %44 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %43, align 8
  %45 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %44, null
  %46 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %42, i64 0, i32 3
  %47 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::DoublyLinkedList"* %41 to i64*
  %50 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %44, i64 0, i32 3
  %51 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %50 to i64*
  %52 = select i1 %45, i64* %49, i64* %51
  store i64 %48, i64* %52, align 8
  %53 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %46, align 8
  %54 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %53, null
  %55 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %43 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %53, i64 0, i32 2
  %58 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  %59 = select i1 %54, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %58, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %57
  %60 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %59 to i64*
  store i64 %56, i64* %60, align 8
  %61 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %17, align 8
  %62 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %41, i64 0, i32 0
  %63 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %62, align 8
  %64 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %40
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %61, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %62, align 8
  %66 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %61, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %66, align 8
  %67 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %61, i64 0, i32 2
  %68 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #14
  br label %101

69:                                               ; preds = %40
  %70 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %63, i64 0, i32 2
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %61, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %70, align 8
  %71 = bitcast %"class.WTF::DoublyLinkedList"* %41 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %61, i64 0, i32 3
  %74 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %61, i64 0, i32 2
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %75, align 8
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %61, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %62, align 8
  br label %101

76:                                               ; preds = %3
  %77 = bitcast %"class.std::__1::unique_ptr.411"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #14
  %78 = tail call noalias i8* @malloc(i64 104) #14
  %79 = bitcast i8* %78 to %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*
  tail call void @_ZN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyC2ERKS2_OS5_(%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %79, %"struct.blink::FontCacheKey"* dereferenceable(80) %1, %class.scoped_refptr.173* dereferenceable(8) %2) #14
  %80 = bitcast %"class.std::__1::unique_ptr.411"* %4 to i8**
  store i8* %78, i8** %80, align 8
  %81 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SA_SN_EERKS2_SH_EENS_18HashTableAddResultISO_SI_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"struct.blink::FontCacheKey"* dereferenceable(80) %1, %"class.std::__1::unique_ptr.411"* nonnull dereferenceable(8) %4) #14
  %82 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %81, 0
  %83 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %84, align 8
  %86 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %83, i64 0, i32 0
  %87 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %86, align 8
  %88 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %76
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %85, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %86, align 8
  %90 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %85, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %85, i64 0, i32 2
  %92 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #14
  br label %100

93:                                               ; preds = %76
  %94 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %87, i64 0, i32 2
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %85, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %94, align 8
  %95 = bitcast %"class.WTF::DoublyLinkedList"* %83 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %85, i64 0, i32 3
  %98 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %85, i64 0, i32 2
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %99, align 8
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %85, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %86, align 8
  br label %100

100:                                              ; preds = %89, %93
  call void @_ZNSt3__110unique_ptrIN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS3_17SegmentedFontDataEENS3_16FontCacheKeyHashENS1_10HashTraitsIS4_EEE21MappedListNodeWithKeyENS_14default_deleteISC_EEE5resetEPSC_(%"class.std::__1::unique_ptr.411"* nonnull %4, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* null) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #14
  br label %101

101:                                              ; preds = %69, %65, %100
  %102 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = icmp ult i64 %106, %104
  br i1 %107, label %108, label %139

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  %110 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %109, align 8
  %111 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %110, i64 0, i32 2
  %112 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %111, align 8
  %113 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %112, null
  %114 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %110, i64 0, i32 3
  %115 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %118 = bitcast %"class.WTF::DoublyLinkedList"* %117 to i64*
  %119 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %112, i64 0, i32 3
  %120 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %119 to i64*
  %121 = select i1 %113, i64* %118, i64* %120
  store i64 %116, i64* %121, align 8
  %122 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %114, align 8
  %123 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %122, null
  %124 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %111 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %122, i64 0, i32 2
  %127 = select i1 %123, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %109, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %126
  %128 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %127 to i64*
  store i64 %125, i64* %128, align 8
  %129 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %110, i64 0, i32 0
  %130 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISA_SM_SN_EES2_EEPSI_RKT0_(%"class.WTF::HashTable"* %5, %"struct.blink::FontCacheKey"* dereferenceable(80) %129) #14
  %131 = icmp eq %"struct.WTF::KeyValuePair"* %130, null
  %132 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %133 = load i32, i32* %10, align 8
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 %134
  %136 = select i1 %131, %"struct.WTF::KeyValuePair"* %135, %"struct.WTF::KeyValuePair"* %130
  %137 = icmp eq %"struct.WTF::KeyValuePair"* %135, %136
  br i1 %137, label %139, label %138

138:                                              ; preds = %108
  call void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE5eraseEPKSI_(%"class.WTF::HashTable"* %5, %"struct.WTF::KeyValuePair"* %136) #14
  br label %139

139:                                              ; preds = %138, %108, %101
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.169", %"class.base::RefCounted.169"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #14
  %17 = getelementptr inbounds %"class.base::RefCounted.169", %"class.base::RefCounted.169"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.169", %"class.base::RefCounted.169"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.169"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.169"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #14
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #14
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #14
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #14
  %62 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted.160"* %66 to %"class.blink::FontTagValuePair.156"**
  %68 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair.156"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair.156"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !2

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !19

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #14
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted.160"* %66 to i8*
  tail call void @free(i8* %78) #14
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.150", %"class.base::RefCounted.150"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #14
  %86 = getelementptr inbounds %"class.base::RefCounted.150", %"class.base::RefCounted.150"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.150", %"class.base::RefCounted.150"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted.150"* %90 to %"class.blink::FontTagValuePair"**
  %92 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !2

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted.150", %"class.base::RefCounted.150"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !19

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #14
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted.150"* %90 to i8*
  tail call void @free(i8* %102) #14
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS_15FontDescriptionERKN3WTF6StringE(%"class.blink::CSSSegmentedFontFace"* nocapture, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Member.11", align 8
  %5 = alloca %"class.blink::Member.11", align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i64 [ %13, %10 ], [ 0, %3 ]
  %16 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %15
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %19, align 8
  %21 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %22, align 8, !alias.scope !27
  %23 = tail call i8* @_Znwm(i64 128) #15, !noalias !30
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS3_15FontDescriptionERKN3WTF6StringEE3$_2JS5_S9_EEEFbNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOSG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS2_15FontDescriptionERKN3WTF6StringEE3$_2JS4_S8_EE7DestroyEPKNS0_13BindStateBaseE") #14, !noalias !30
  %25 = getelementptr inbounds i8, i8* %23, i64 40
  %26 = bitcast i8* %25 to %"class.blink::FontDescription"*
  tail call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* %26, %"class.blink::FontDescription"* dereferenceable(80) %1) #14, !noalias !30
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8, !noalias !30
  %28 = getelementptr inbounds i8, i8* %23, i64 120
  %29 = bitcast i8* %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8, !noalias !30
  %30 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %14
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4, !noalias !30
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %38 = load i32, i32* %37, align 4, !noalias !30
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #14
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !19

45:                                               ; preds = %36
  tail call void @llvm.trap() #14, !noalias !30
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4, !noalias !30
  br label %48

48:                                               ; preds = %14, %31, %46
  %49 = bitcast %"class.base::RepeatingCallback"* %6 to i8**
  store i8* %23, i8** %49, align 8, !alias.scope !30
  %50 = bitcast %"class.blink::Member.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = bitcast %"class.blink::Member.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %20, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %52, align 8
  %54 = icmp eq %"class.blink::HeapListHashSetNode"* %53, null
  br i1 %54, label %76, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.blink::Member.11"* %4 to i64*
  %57 = bitcast %"class.blink::HeapListHashSetNode"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %56, align 8
  %59 = getelementptr inbounds i8, i8* %23, i64 8
  %60 = bitcast i8* %59 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %61 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %60, align 8
  %62 = call zeroext i1 %61(%"class.base::internal::BindStateBase"* nonnull %24, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %62, label %95, label %63

63:                                               ; preds = %55, %68
  %64 = phi %"class.blink::HeapListHashSetNode"* [ %66, %68 ], [ %53, %55 ]
  %65 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %64, i64 0, i32 1, i32 0, i32 0
  %66 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %65, align 8
  %67 = icmp eq %"class.blink::HeapListHashSetNode"* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %22, align 8
  %70 = bitcast %"class.blink::HeapListHashSetNode"* %66 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %56, align 8
  %72 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %69, i64 0, i32 1
  %73 = bitcast void ()** %72 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %74 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %73, align 8
  %75 = call zeroext i1 %74(%"class.base::internal::BindStateBase"* %69, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %75, label %95, label %63

76:                                               ; preds = %63, %48
  %77 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %20, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %77, align 8
  %79 = icmp eq %"class.blink::HeapListHashSetNode"* %78, null
  br i1 %79, label %95, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.blink::Member.11"* %5 to i64*
  br label %86

82:                                               ; preds = %86
  %83 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %87, i64 0, i32 1, i32 0, i32 0
  %84 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %83, align 8
  %85 = icmp eq %"class.blink::HeapListHashSetNode"* %84, null
  br i1 %85, label %95, label %86

86:                                               ; preds = %82, %80
  %87 = phi %"class.blink::HeapListHashSetNode"* [ %78, %80 ], [ %84, %82 ]
  %88 = bitcast %"class.blink::HeapListHashSetNode"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %81, align 8
  %90 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %22, align 8
  %91 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %90, i64 0, i32 1
  %92 = bitcast void ()** %91 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %93 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.base::internal::BindStateBase"* %90, %"class.blink::Member.11"* nonnull dereferenceable(8) %5) #14
  br i1 %94, label %95, label %82

95:                                               ; preds = %68, %82, %86, %55, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  %96 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %96) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12FontFaceList23ForEachReverseUntilTrueERKN4base17RepeatingCallbackIFbNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"*, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = alloca %"class.blink::Member.11", align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %5, align 8
  %7 = icmp eq %"class.blink::HeapListHashSetNode"* %6, null
  br i1 %7, label %26, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Member.11"* %3 to i64*
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %15

11:                                               ; preds = %15
  %12 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %16, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %12, align 8
  %14 = icmp eq %"class.blink::HeapListHashSetNode"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %8, %11
  %16 = phi %"class.blink::HeapListHashSetNode"* [ %6, %8 ], [ %13, %11 ]
  %17 = bitcast %"class.blink::HeapListHashSetNode"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %9, align 8
  %19 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %19, i64 0, i32 1
  %21 = bitcast void ()** %20 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %22 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.base::internal::BindStateBase"* %19, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %23, label %24, label %11

24:                                               ; preds = %15, %37, %33, %26
  %25 = phi i1 [ false, %26 ], [ true, %37 ], [ false, %33 ], [ true, %15 ]
  ret i1 %25

26:                                               ; preds = %11, %2
  %27 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %27, align 8
  %29 = icmp eq %"class.blink::HeapListHashSetNode"* %28, null
  br i1 %29, label %24, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::Member.11"* %4 to i64*
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %37

33:                                               ; preds = %37
  %34 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %38, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %34, align 8
  %36 = icmp eq %"class.blink::HeapListHashSetNode"* %35, null
  br i1 %36, label %24, label %37

37:                                               ; preds = %30, %33
  %38 = phi %"class.blink::HeapListHashSetNode"* [ %28, %30 ], [ %35, %33 ]
  %39 = bitcast %"class.blink::HeapListHashSetNode"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %31, align 8
  %41 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %32, align 8
  %42 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %41, i64 0, i32 1
  %43 = bitcast void ()** %42 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %44 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %43, align 8
  %45 = call zeroext i1 %44(%"class.base::internal::BindStateBase"* %41, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %45, label %24, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS_15FontDescriptionERKNS_19FontDataForRangeSetE(%"class.blink::CSSSegmentedFontFace"* nocapture readonly, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontDataForRangeSet"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Member.11", align 8
  %5 = alloca %"class.blink::Member.11", align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %7, align 8
  %9 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = tail call i8* @_Znwm(i64 152) #15, !noalias !35
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS3_15FontDescriptionERKNS3_19FontDataForRangeSetEE3$_3JS5_S8_EEEFbNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS2_15FontDescriptionERKNS2_19FontDataForRangeSetEE3$_3JS4_S7_EE7DestroyEPKNS0_13BindStateBaseE") #14, !noalias !35
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast i8* %12 to %"class.blink::FontDescription"*
  tail call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* %13, %"class.blink::FontDescription"* dereferenceable(80) %1) #14, !noalias !35
  %14 = getelementptr inbounds i8, i8* %10, i64 120
  %15 = bitcast i8* %14 to %"class.blink::FontDataForRangeSet"*
  tail call void @_ZN5blink19FontDataForRangeSetC1ERKS0_(%"class.blink::FontDataForRangeSet"* %15, %"class.blink::FontDataForRangeSet"* dereferenceable(32) %2) #14, !noalias !35
  %16 = bitcast %"class.base::RepeatingCallback"* %6 to i8**
  store i8* %10, i8** %16, align 8, !alias.scope !35
  %17 = bitcast %"class.blink::Member.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast %"class.blink::Member.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %8, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %19, align 8
  %21 = icmp eq %"class.blink::HeapListHashSetNode"* %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.blink::Member.11"* %4 to i64*
  %24 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.blink::HeapListHashSetNode"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  %27 = getelementptr inbounds i8, i8* %10, i64 8
  %28 = bitcast i8* %27 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %29 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %28, align 8
  %30 = call zeroext i1 %29(%"class.base::internal::BindStateBase"* nonnull %11, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %30, label %64, label %31

31:                                               ; preds = %22, %36
  %32 = phi %"class.blink::HeapListHashSetNode"* [ %34, %36 ], [ %20, %22 ]
  %33 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %33, align 8
  %35 = icmp eq %"class.blink::HeapListHashSetNode"* %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %24, align 8
  %38 = bitcast %"class.blink::HeapListHashSetNode"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %23, align 8
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %37, i64 0, i32 1
  %41 = bitcast void ()** %40 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %42 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.base::internal::BindStateBase"* %37, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %43, label %64, label %31

44:                                               ; preds = %31, %3
  %45 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %45, align 8
  %47 = icmp eq %"class.blink::HeapListHashSetNode"* %46, null
  br i1 %47, label %64, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.blink::Member.11"* %5 to i64*
  %50 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %55

51:                                               ; preds = %55
  %52 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %56, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %52, align 8
  %54 = icmp eq %"class.blink::HeapListHashSetNode"* %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %51, %48
  %56 = phi %"class.blink::HeapListHashSetNode"* [ %46, %48 ], [ %53, %51 ]
  %57 = bitcast %"class.blink::HeapListHashSetNode"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %49, align 8
  %59 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %50, align 8
  %60 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %59, i64 0, i32 1
  %61 = bitcast void ()** %60 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %62 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %61, align 8
  %63 = call zeroext i1 %62(%"class.base::internal::BindStateBase"* %59, %"class.blink::Member.11"* nonnull dereferenceable(8) %5) #14
  br i1 %63, label %64, label %51

64:                                               ; preds = %36, %51, %55, %22, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %65 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringE(%"class.blink::CSSSegmentedFontFace"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %4, align 8
  %6 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %7, align 8, !alias.scope !42
  %8 = tail call i8* @_Znwm(i64 48) #15, !noalias !45
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringEE3$_4JS6_EEEFbNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOSD_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringEE3$_4JS5_EE7DestroyEPKNS0_13BindStateBaseE") #14, !noalias !45
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8, !noalias !45
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8, !noalias !45
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4, !noalias !45
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4, !noalias !45
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #14
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !19

29:                                               ; preds = %20
  tail call void @llvm.trap() #14, !noalias !45
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4, !noalias !45
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %8, i8** %33, align 8, !alias.scope !45
  %34 = call zeroext i1 @_ZNK5blink12FontFaceList17ForEachUntilFalseERKN4base17RepeatingCallbackIFbNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"* %5, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %3)
  %35 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12FontFaceList17ForEachUntilFalseERKN4base17RepeatingCallbackIFbNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"* nocapture readonly, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = alloca %"class.blink::Member.11", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call i8* @_Znwm(i64 48) #15, !noalias !50
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS4_8FontFaceEEEEEES7_EJS9_EEES8_E3RunEPNS0_13BindStateBaseEOS7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJS8_EE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !50
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i1 (%"class.base::RepeatingCallback"*, %"class.blink::Member.11"*)* @_ZN5blinkL16NegatingCallbackERKN4base17RepeatingCallbackIFbNS_6MemberINS_8FontFaceEEEEEES4_ to i64), i64* %11, align 8, !noalias !50
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = bitcast i8* %12 to %"class.base::internal::CallbackBaseCopyable"*
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %13, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %14) #14, !noalias !50
  %15 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %8, i8** %15, align 8, !alias.scope !50
  %16 = bitcast %"class.blink::Member.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.blink::Member.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %18, align 8
  %20 = icmp eq %"class.blink::HeapListHashSetNode"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::Member.11"* %3 to i64*
  %23 = bitcast %"class.blink::HeapListHashSetNode"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds i8, i8* %8, i64 8
  %26 = bitcast i8* %25 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %27 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %26, align 8
  %28 = call zeroext i1 %27(%"class.base::internal::BindStateBase"* nonnull %9, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %28, label %61, label %29

29:                                               ; preds = %21, %34
  %30 = phi %"class.blink::HeapListHashSetNode"* [ %32, %34 ], [ %19, %21 ]
  %31 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %31, align 8
  %33 = icmp eq %"class.blink::HeapListHashSetNode"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %29
  %35 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %36 = bitcast %"class.blink::HeapListHashSetNode"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %22, align 8
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %39 = bitcast void ()** %38 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %40 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.base::internal::BindStateBase"* %35, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %41, label %61, label %29

42:                                               ; preds = %29, %2
  %43 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %43, align 8
  %45 = icmp eq %"class.blink::HeapListHashSetNode"* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.blink::Member.11"* %4 to i64*
  br label %52

48:                                               ; preds = %52
  %49 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %53, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %49, align 8
  %51 = icmp eq %"class.blink::HeapListHashSetNode"* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %46
  %53 = phi %"class.blink::HeapListHashSetNode"* [ %44, %46 ], [ %50, %48 ]
  %54 = bitcast %"class.blink::HeapListHashSetNode"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %47, align 8
  %56 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %57 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %56, i64 0, i32 1
  %58 = bitcast void ()** %57 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %59 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::internal::BindStateBase"* %56, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %60, label %61, label %48

61:                                               ; preds = %34, %48, %52, %21, %42
  %62 = phi i1 [ true, %42 ], [ false, %21 ], [ false, %52 ], [ true, %48 ], [ false, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %63 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEE(%"class.blink::CSSSegmentedFontFace"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector.208"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RepeatingCallback.199", align 8
  %5 = alloca %"class.blink::Persistent", align 8
  %6 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %6, align 8
  %8 = bitcast %"class.base::RepeatingCallback.199"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = bitcast %"class.blink::Persistent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 0
  store %"class.blink::HeapVector.208"* %2, %"class.blink::HeapVector.208"** %11, align 8, !alias.scope !57
  %12 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8, !alias.scope !57
  %13 = ptrtoint %"class.blink::HeapVector.208"* %2 to i64
  switch i64 %13, label %14 [
    i64 0, label %40
    i64 -1, label %40
  ]

14:                                               ; preds = %3
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !57
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #14, !noalias !57
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !19

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #14
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8, !noalias !57
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8, !noalias !57
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8, !noalias !57
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %30, label %33, !prof !19

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %31) #14
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  br label %33

33:                                               ; preds = %30, %21
  %34 = phi %"class.blink::PersistentNode"* [ %32, %30 ], [ %28, %21 ]
  %35 = bitcast %"class.blink::PersistentNode"* %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !57
  %37 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  store i64 %36, i64* %37, align 8, !noalias !57
  %38 = bitcast %"class.blink::PersistentNode"* %34 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %10, %"class.blink::PersistentBase"** %38, align 8, !noalias !57
  %39 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %34, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv, void (%"class.blink::Visitor"*, i8*)** %39, align 8
  store %"class.blink::PersistentNode"* %34, %"class.blink::PersistentNode"** %12, align 8, !alias.scope !57
  br label %40

40:                                               ; preds = %3, %3, %33
  %41 = call i8* @_Znwm(i64 64) #15, !noalias !60
  %42 = bitcast i8* %41 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %42, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS3_10HeapVectorINS3_6MemberINS3_8FontFaceEEELj0EEEE3$_5JS6_NS3_10PersistentISD_EEEEEFvSC_EE3RunEPNS0_13BindStateBaseEOSC_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS2_10HeapVectorINS2_6MemberINS2_8FontFaceEEELj0EEEE3$_5JS5_NS2_10PersistentISC_EEEE7DestroyEPKNS0_13BindStateBaseE") #14, !noalias !60
  %43 = getelementptr inbounds i8, i8* %41, i64 40
  %44 = bitcast i8* %43 to %"struct.std::__1::__tuple_impl.494"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN3WTF6StringEN5blink10PersistentINS5_10HeapVectorINS5_6MemberINS5_8FontFaceEEELj0EEEEEEEC2IJLm0ELm1EEJS4_SC_EJEJEJRKS4_SC_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSI_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.494"* %44, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::Persistent"* nonnull dereferenceable(16) %5) #14, !noalias !60
  %45 = bitcast %"class.base::RepeatingCallback.199"* %4 to i8**
  store i8* %41, i8** %45, align 8, !alias.scope !60
  call void @_ZNK5blink12FontFaceList7ForEachERKN4base17RepeatingCallbackIFvNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"* %7, %"class.base::RepeatingCallback.199"* nonnull dereferenceable(8) %4)
  %46 = getelementptr inbounds %"class.base::RepeatingCallback.199", %"class.base::RepeatingCallback.199"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #14
  %47 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %48 = icmp eq %"class.blink::PersistentNode"* %47, null
  br i1 %48, label %68, label %49

49:                                               ; preds = %40
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #14
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !19

54:                                               ; preds = %49
  %55 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #14
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %60, align 8
  %62 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %63 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0, i32 0
  %64 = bitcast %"class.blink::PersistentRegion"* %61 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.blink::PersistentNode"* %62 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %62, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  store %"class.blink::PersistentNode"* %62, %"class.blink::PersistentNode"** %63, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  br label %68

68:                                               ; preds = %40, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12FontFaceList7ForEachERKN4base17RepeatingCallbackIFvNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"* nocapture readonly, %"class.base::RepeatingCallback.199"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = alloca %"class.blink::Member.11", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call i8* @_Znwm(i64 48) #15, !noalias !67
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS4_8FontFaceEEEEEES7_EJS9_EEEFbS7_EE3RunEPNS0_13BindStateBaseEOS7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJS8_EE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !67
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i1 (%"class.base::RepeatingCallback.199"*, %"class.blink::Member.11"*)* @_ZN5blinkL22FalseReturningCallbackERKN4base17RepeatingCallbackIFvNS_6MemberINS_8FontFaceEEEEEES4_ to i64), i64* %11, align 8, !noalias !67
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = bitcast i8* %12 to %"class.base::internal::CallbackBaseCopyable"*
  %14 = getelementptr inbounds %"class.base::RepeatingCallback.199", %"class.base::RepeatingCallback.199"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %13, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %14) #14, !noalias !67
  %15 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %8, i8** %15, align 8, !alias.scope !67
  %16 = bitcast %"class.blink::Member.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.blink::Member.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %18, align 8
  %20 = icmp eq %"class.blink::HeapListHashSetNode"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::Member.11"* %3 to i64*
  %23 = bitcast %"class.blink::HeapListHashSetNode"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds i8, i8* %8, i64 8
  %26 = bitcast i8* %25 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %27 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %26, align 8
  %28 = call zeroext i1 %27(%"class.base::internal::BindStateBase"* nonnull %9, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %28, label %61, label %29

29:                                               ; preds = %21, %34
  %30 = phi %"class.blink::HeapListHashSetNode"* [ %32, %34 ], [ %19, %21 ]
  %31 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %31, align 8
  %33 = icmp eq %"class.blink::HeapListHashSetNode"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %29
  %35 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %36 = bitcast %"class.blink::HeapListHashSetNode"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %22, align 8
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %39 = bitcast void ()** %38 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %40 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.base::internal::BindStateBase"* %35, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %41, label %61, label %29

42:                                               ; preds = %29, %2
  %43 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %43, align 8
  %45 = icmp eq %"class.blink::HeapListHashSetNode"* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.blink::Member.11"* %4 to i64*
  br label %52

48:                                               ; preds = %52
  %49 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %53, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %49, align 8
  %51 = icmp eq %"class.blink::HeapListHashSetNode"* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %46
  %53 = phi %"class.blink::HeapListHashSetNode"* [ %44, %46 ], [ %50, %48 ]
  %54 = bitcast %"class.blink::HeapListHashSetNode"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %47, align 8
  %56 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %57 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %56, i64 0, i32 1
  %58 = bitcast void ()** %57 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %59 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::internal::BindStateBase"* %56, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %60, label %61, label %48

61:                                               ; preds = %34, %48, %52, %21, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %62 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSSegmentedFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSSegmentedFontFace"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FontFaceListEE5TraceEPNS_7VisitorEPKv) #14
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12FontFaceList7IsEmptyEv(%"class.blink::FontFaceList"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.11"*, i8 } @_ZN3WTF11ListHashSetIN5blink6MemberINS1_8FontFaceEEELm0ENS_10MemberHashIS3_EENS1_24HeapListHashSetAllocatorEE6insertIRPS3_EENS8_9AddResultEOT_(%"class.WTF::ListHashSet"*, %"class.blink::FontFace"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::ListHashSet", %"class.WTF::ListHashSet"* %0, i64 0, i32 0
  %4 = tail call { %"class.blink::Member.7"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE6insertINS_21ListHashSetTranslatorISB_S6_EERPS4_RSE_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.5"* %3, %"class.blink::FontFace"** dereferenceable(8) %1, %"class.blink::HeapListHashSetAllocator"* dereferenceable(1) null)
  %5 = extractvalue { %"class.blink::Member.7"*, i8 } %4, 0
  %6 = extractvalue { %"class.blink::Member.7"*, i8 } %4, 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %5, i64 0, i32 0, i32 0
  %11 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::ListHashSet", %"class.WTF::ListHashSet"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %11, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.7"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::Member.7"* %13 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %9
  %20 = inttoptr i64 %15 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #14
  br label %22

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %11, i64 0, i32 2
  %24 = bitcast %"class.blink::Member.7"* %23 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %12, i64 0, i32 0, i32 0
  %26 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %25, align 8
  %27 = icmp eq %"class.blink::HeapListHashSetNode"* %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %26, i64 0, i32 2
  %30 = ptrtoint %"class.blink::HeapListHashSetNode"* %11 to i64
  %31 = bitcast %"class.blink::Member.7"* %29 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::HeapListHashSetNode"* %11 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #14
  br label %46

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.WTF::ListHashSet", %"class.WTF::ListHashSet"* %0, i64 0, i32 1
  %39 = ptrtoint %"class.blink::HeapListHashSetNode"* %11 to i64
  %40 = bitcast %"class.blink::Member.7"* %38 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.blink::HeapListHashSetNode"* %11 to i8*
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #14
  br label %46

46:                                               ; preds = %43, %37, %34, %28
  %47 = phi i64 [ %39, %43 ], [ %39, %37 ], [ %30, %34 ], [ %30, %28 ]
  store atomic i64 %47, i64* %14 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::HeapListHashSetNode"* %11 to i8*
  %52 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #14
  br label %53

53:                                               ; preds = %2, %50, %46
  %54 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %5, i64 0, i32 0, i32 0
  %55 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %55, i64 0, i32 0
  %57 = insertvalue { %"class.blink::Member.11"*, i8 } undef, %"class.blink::Member.11"* %56, 0
  %58 = insertvalue { %"class.blink::Member.11"*, i8 } %57, i8 %7, 1
  ret { %"class.blink::Member.11"*, i8 } %58
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL16NegatingCallbackERKN4base17RepeatingCallbackIFbNS_6MemberINS_8FontFaceEEEEEES4_(%"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8), %"class.blink::Member.11"* nocapture readonly) #0 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = bitcast %"class.blink::Member.11"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::Member.11"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %8, i64 0, i32 1
  %10 = bitcast void ()** %9 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %11 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %10, align 8
  %12 = call zeroext i1 %11(%"class.base::internal::BindStateBase"* %8, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  %13 = xor i1 %12, true
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL22FalseReturningCallbackERKN4base17RepeatingCallbackIFvNS_6MemberINS_8FontFaceEEEEEES4_(%"class.base::RepeatingCallback.199"* nocapture readonly dereferenceable(8), %"class.blink::Member.11"* nocapture readonly) #0 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = bitcast %"class.blink::Member.11"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::Member.11"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::RepeatingCallback.199", %"class.base::RepeatingCallback.199"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %8, i64 0, i32 1
  %10 = bitcast void ()** %9 to void (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %11 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %10, align 8
  call void %11(%"class.base::internal::BindStateBase"* %8, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12FontFaceList24ForEachReverseUntilFalseERKN4base17RepeatingCallbackIFbNS_6MemberINS_8FontFaceEEEEEE(%"class.blink::FontFaceList"* nocapture readonly, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = alloca %"class.blink::Member.11", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call i8* @_Znwm(i64 48) #15, !noalias !74
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS4_8FontFaceEEEEEES7_EJS9_EEES8_E3RunEPNS0_13BindStateBaseEOS7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJS8_EE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !74
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i1 (%"class.base::RepeatingCallback"*, %"class.blink::Member.11"*)* @_ZN5blinkL16NegatingCallbackERKN4base17RepeatingCallbackIFbNS_6MemberINS_8FontFaceEEEEEES4_ to i64), i64* %11, align 8, !noalias !74
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = bitcast i8* %12 to %"class.base::internal::CallbackBaseCopyable"*
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %13, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %14) #14, !noalias !74
  %15 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %8, i8** %15, align 8, !alias.scope !74
  %16 = bitcast %"class.blink::Member.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.blink::Member.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %18, align 8
  %20 = icmp eq %"class.blink::HeapListHashSetNode"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::Member.11"* %3 to i64*
  %23 = bitcast %"class.blink::HeapListHashSetNode"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds i8, i8* %8, i64 8
  %26 = bitcast i8* %25 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %27 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %26, align 8
  %28 = call zeroext i1 %27(%"class.base::internal::BindStateBase"* nonnull %9, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %28, label %61, label %29

29:                                               ; preds = %21, %34
  %30 = phi %"class.blink::HeapListHashSetNode"* [ %32, %34 ], [ %19, %21 ]
  %31 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %30, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %31, align 8
  %33 = icmp eq %"class.blink::HeapListHashSetNode"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %29
  %35 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %36 = bitcast %"class.blink::HeapListHashSetNode"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %22, align 8
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %39 = bitcast void ()** %38 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %40 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.base::internal::BindStateBase"* %35, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br i1 %41, label %61, label %29

42:                                               ; preds = %29, %2
  %43 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %43, align 8
  %45 = icmp eq %"class.blink::HeapListHashSetNode"* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.blink::Member.11"* %4 to i64*
  br label %52

48:                                               ; preds = %52
  %49 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %53, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %49, align 8
  %51 = icmp eq %"class.blink::HeapListHashSetNode"* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %46
  %53 = phi %"class.blink::HeapListHashSetNode"* [ %44, %46 ], [ %50, %48 ]
  %54 = bitcast %"class.blink::HeapListHashSetNode"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %47, align 8
  %56 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %57 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %56, i64 0, i32 1
  %58 = bitcast void ()** %57 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)**
  %59 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::internal::BindStateBase"* %56, %"class.blink::Member.11"* nonnull dereferenceable(8) %4) #14
  br i1 %60, label %61, label %48

61:                                               ; preds = %34, %48, %52, %21, %42
  %62 = phi i1 [ true, %42 ], [ false, %21 ], [ true, %48 ], [ false, %52 ], [ false, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %63 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12FontFaceList5TraceEPNS_7VisitorE(%"class.blink::FontFaceList"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::FontFaceList"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast %"class.blink::FontFaceList"* %0 to i8**
  %6 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %1, i8** %5) #14
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #14
  br label %17

17:                                               ; preds = %11, %2
  %18 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.blink::Member.7"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = inttoptr i64 %20 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %28

28:                                               ; preds = %22, %17
  %29 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %"class.blink::Member.7"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = inttoptr i64 %31 to i8*
  %35 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %1, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %39

39:                                               ; preds = %28, %33
  %40 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1
  %41 = bitcast %"class.blink::HeapListHashSet"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = bitcast %"class.blink::HeapListHashSet"* %40 to i8**
  %44 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %44, i64 11
  %46 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8** %43) #14
  %47 = icmp eq i64 %42, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %39
  %49 = inttoptr i64 %42 to i8*
  %50 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, i64 5
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, align 8
  tail call void %53(%"class.blink::Visitor"* %1, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #14
  br label %54

54:                                               ; preds = %48, %39
  %55 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 1
  %56 = bitcast %"class.blink::Member.7"* %55 to i64*
  %57 = load atomic i64, i64* %56 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = inttoptr i64 %57 to i8*
  %61 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %1, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %65

65:                                               ; preds = %59, %54
  %66 = getelementptr inbounds %"class.blink::FontFaceList", %"class.blink::FontFaceList"* %0, i64 0, i32 1, i32 0, i32 2
  %67 = bitcast %"class.blink::Member.7"* %66 to i64*
  %68 = load atomic i64, i64* %67 monotonic, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %65
  %71 = inttoptr i64 %68 to i8*
  %72 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %1, i8* nonnull %71, i8* nonnull %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %76

76:                                               ; preds = %65, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  tail call void @_ZNSt3__110unique_ptrIN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS3_17SegmentedFontDataEENS3_16FontCacheKeyHashENS1_10HashTraitsIS4_EEE21MappedListNodeWithKeyENS_14default_deleteISC_EEE5resetEPSC_(%"class.std::__1::unique_ptr.411"* %2, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* null) #14
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %3, align 8
  %5 = icmp eq %"class.blink::FontVariationSettings"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #14
  %9 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %7, i64 -4
  %14 = bitcast %"class.base::RefCounted.160"* %13 to %"class.blink::FontTagValuePair.156"**
  %15 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %14, align 8
  %16 = icmp eq %"class.blink::FontTagValuePair.156"* %15, null
  %17 = bitcast %"class.blink::FontTagValuePair.156"* %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %7, i64 -1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !19

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #14
  br label %24

24:                                               ; preds = %23, %12
  %25 = bitcast %"class.base::RefCounted.160"* %13 to i8*
  tail call void @free(i8* %25) #14
  br label %26

26:                                               ; preds = %24, %6, %1
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %32, %26
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #14
  br label %52

52:                                               ; preds = %35, %48, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS3_17SegmentedFontDataEENS3_16FontCacheKeyHashENS1_10HashTraitsIS4_EEE21MappedListNodeWithKeyENS_14default_deleteISC_EEE5resetEPSC_(%"class.std::__1::unique_ptr.411"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.411"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %3, align 8
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %1, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %3, align 8
  %5 = icmp eq %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %4, null
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %4, i64 0, i32 1, i32 0
  %8 = load %"class.blink::SegmentedFontData"*, %"class.blink::SegmentedFontData"** %7, align 8
  %9 = icmp eq %"class.blink::SegmentedFontData"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %8, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #14
  %13 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.141"* %17 to %"class.blink::FontData"*
  %19 = bitcast %"class.base::RefCounted.141"* %17 to void (%"class.blink::FontData"*)***
  %20 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %20, i64 1
  %22 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %21, align 8
  tail call void %22(%"class.blink::FontData"* nonnull %18) #14
  br label %23

23:                                               ; preds = %16, %10, %6
  %24 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %4, i64 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %24, align 8
  %26 = icmp eq %"class.blink::FontVariationSettings"* %25, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %25, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %28, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #14
  %30 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %28, i64 -4
  %35 = bitcast %"class.base::RefCounted.160"* %34 to %"class.blink::FontTagValuePair.156"**
  %36 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %35, align 8
  %37 = icmp eq %"class.blink::FontTagValuePair.156"* %36, null
  %38 = bitcast %"class.blink::FontTagValuePair.156"* %36 to i8*
  br i1 %37, label %45, label %39, !prof !2

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %28, i64 -1, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !19

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #14
  br label %45

45:                                               ; preds = %44, %33
  %46 = bitcast %"class.base::RefCounted.160"* %34 to i8*
  tail call void @free(i8* %46) #14
  br label %47

47:                                               ; preds = %45, %27, %23
  %48 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %4, i64 0, i32 0, i32 0, i32 2
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %53, %47
  %57 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #14
  br label %73

73:                                               ; preds = %72, %69, %56
  %74 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %4 to i8*
  tail call void @free(i8* %74) #14
  br label %75

75:                                               ; preds = %2, %73
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #14
  %15 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.172"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #14
  %21 = bitcast %"class.base::RefCounted.172"* %19 to i8*
  tail call void @free(i8* %21) #14
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #14
  %27 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.172"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #14
  %33 = bitcast %"class.base::RefCounted.172"* %31 to i8*
  tail call void @free(i8* %33) #14
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #14
  %40 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.172"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #14
  %46 = bitcast %"class.base::RefCounted.172"* %44 to i8*
  tail call void @free(i8* %46) #14
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #14
  %15 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.172"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #14
  %21 = bitcast %"class.base::RefCounted.172"* %19 to i8*
  tail call void @free(i8* %21) #14
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #14
  %27 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.172"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #14
  %33 = bitcast %"class.base::RefCounted.172"* %31 to i8*
  tail call void @free(i8* %33) #14
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #14
  %40 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.172", %"class.base::RefCounted.172"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.172"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #14
  %46 = bitcast %"class.base::RefCounted.172"* %44 to i8*
  tail call void @free(i8* %46) #14
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12FontFaceListEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !19

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FontFaceListEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12FontFaceListEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FontFaceListEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FontFaceListEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #14
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !19

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #14
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12FontFaceListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontFaceList"*
  tail call void @_ZNK5blink12FontFaceList5TraceEPNS_7VisitorE(%"class.blink::FontFaceList"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12FontFaceListEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEEEFbNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOS9_"(%"class.base::internal::BindStateBase"* nocapture readnone, %"class.blink::Member.11"* nocapture readonly dereferenceable(8)) #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %4, i64 0, i32 20, i32 0, i32 0
  %6 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %6, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %6, i64 0, i32 2, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %8, %10
  ret i1 %11
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorISA_SM_SN_EES2_EEPSI_RKT0_(%"class.WTF::HashTable"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %187, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #14
  %12 = and i32 %11, %9
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %20 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %21 = icmp ne %"class.blink::FontVariationSettings"* %20, null
  %22 = xor i1 %21, true
  %23 = or i1 %18, %22
  %24 = xor i1 %18, true
  %25 = or i1 %21, %24
  br i1 %23, label %59, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %59

32:                                               ; preds = %26
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %37, align 8
  %39 = zext i32 %28 to i64
  %40 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %36, i64 %39
  br label %41

41:                                               ; preds = %55, %34
  %42 = phi %"class.blink::FontTagValuePair.156"* [ %57, %55 ], [ %38, %34 ]
  %43 = phi %"class.blink::FontTagValuePair.156"* [ %56, %55 ], [ %36, %34 ]
  %44 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %42, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %59

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %43, i64 0, i32 1
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %42, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp oeq float %51, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %43, i64 1
  %57 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %42, i64 1
  %58 = icmp eq %"class.blink::FontTagValuePair.156"* %56, %40
  br i1 %58, label %59, label %41

59:                                               ; preds = %55, %49, %41, %32, %26, %6
  %60 = phi i1 [ true, %26 ], [ false, %32 ], [ %25, %6 ], [ true, %49 ], [ false, %55 ], [ true, %41 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %61, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %62) #14
  br i1 %63, label %64, label %89

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %89

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %76, label %89

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 3
  %78 = load float, float* %77, align 8
  %79 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %80 = load float, float* %79, align 8
  %81 = fcmp une float %78, %80
  %82 = or i1 %60, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0, i32 6
  %85 = load i8, i8* %84, align 8, !range !81
  %86 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %87 = load i8, i8* %86, align 8, !range !81
  %88 = icmp eq i8 %85, %87
  br i1 %88, label %187, label %89

89:                                               ; preds = %59, %64, %70, %76, %83
  %90 = xor i32 %11, -1
  %91 = lshr i32 %11, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  %103 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %15) #14
  br i1 %103, label %187, label %104

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %107 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %108 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  br label %109

109:                                              ; preds = %104, %185
  %110 = phi i64 [ 0, %104 ], [ %113, %185 ]
  %111 = phi i64 [ %13, %104 ], [ %115, %185 ]
  %112 = icmp eq i64 %110, 0
  %113 = select i1 %112, i64 %102, i64 %110
  %114 = add i64 %113, %111
  %115 = and i64 %114, %10
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 5, i32 0
  %119 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %118, align 8
  %120 = icmp eq %"class.blink::FontVariationSettings"* %119, null
  %121 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %19, align 8
  %122 = icmp ne %"class.blink::FontVariationSettings"* %121, null
  %123 = xor i1 %122, true
  %124 = or i1 %120, %123
  %125 = xor i1 %120, true
  %126 = or i1 %122, %125
  br i1 %124, label %160, label %127

127:                                              ; preds = %109
  %128 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %133, label %160

133:                                              ; preds = %127
  %134 = icmp eq i32 %129, 0
  br i1 %134, label %160, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %138, align 8
  %140 = zext i32 %129 to i64
  %141 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %137, i64 %140
  br label %142

142:                                              ; preds = %156, %135
  %143 = phi %"class.blink::FontTagValuePair.156"* [ %158, %156 ], [ %139, %135 ]
  %144 = phi %"class.blink::FontTagValuePair.156"* [ %157, %156 ], [ %137, %135 ]
  %145 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %144, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %143, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %160

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %144, i64 0, i32 1
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %143, i64 0, i32 1
  %154 = load float, float* %153, align 4
  %155 = fcmp oeq float %152, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %144, i64 1
  %158 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %143, i64 1
  %159 = icmp eq %"class.blink::FontTagValuePair.156"* %157, %141
  br i1 %159, label %160, label %142

160:                                              ; preds = %156, %150, %142, %133, %127, %109
  %161 = phi i1 [ true, %127 ], [ false, %133 ], [ %126, %109 ], [ true, %150 ], [ false, %156 ], [ true, %142 ]
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0, i32 0
  %163 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %162, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %62) #14
  br i1 %163, label %164, label %185

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = load i32, i32* %105, align 8
  %168 = icmp eq i32 %166, %167
  br i1 %168, label %169, label %185

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %106, align 4
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %174, label %185

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 3
  %176 = load float, float* %175, align 8
  %177 = load float, float* %107, align 8
  %178 = fcmp une float %176, %177
  %179 = or i1 %161, %178
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %115, i32 0, i32 6
  %182 = load i8, i8* %181, align 8, !range !81
  %183 = load i8, i8* %108, align 8, !range !81
  %184 = icmp eq i8 %182, %183
  br i1 %184, label %187, label %185

185:                                              ; preds = %174, %169, %164, %160, %180
  %186 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %117) #14
  br i1 %186, label %187, label %109

187:                                              ; preds = %185, %180, %89, %2, %83
  %188 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %14, %83 ], [ null, %89 ], [ null, %185 ], [ %116, %180 ]
  ret %"struct.WTF::KeyValuePair"* %188
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 3
  %3 = load float, float* %2, align 8
  %4 = fmul float %3, 1.000000e+03
  %5 = fptoui float %4 to i32
  %6 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0
  %7 = tail call i32 @_ZNK5blink22FontFaceCreationParams7GetHashEv(%"class.blink::FontFaceCreationParams"* %6) #14
  %8 = lshr i32 %7, 16
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = lshr i32 %10, 16
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 16
  %15 = lshr i32 %5, 16
  %16 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 5, i32 0
  %17 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %16, align 8
  %18 = icmp eq %"class.blink::FontVariationSettings"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %1
  %20 = tail call i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"* nonnull %17) #14
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %1, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %1 ]
  %24 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 6
  %25 = load i8, i8* %24, align 8, !range !81
  %26 = and i32 %7, 65535
  %27 = add nuw nsw i32 %26, -1640531527
  %28 = shl i32 %27, 16
  %29 = shl nuw nsw i32 %8, 11
  %30 = xor i32 %29, %27
  %31 = xor i32 %30, %28
  %32 = lshr i32 %31, 11
  %33 = and i32 %10, 65535
  %34 = add i32 %31, %33
  %35 = add i32 %34, %32
  %36 = shl i32 %35, 16
  %37 = shl nuw nsw i32 %11, 11
  %38 = xor i32 %35, %37
  %39 = xor i32 %38, %36
  %40 = lshr i32 %39, 11
  %41 = and i32 %13, 65535
  %42 = add i32 %39, %41
  %43 = add i32 %42, %40
  %44 = shl i32 %43, 16
  %45 = shl nuw nsw i32 %14, 11
  %46 = xor i32 %43, %45
  %47 = xor i32 %46, %44
  %48 = lshr i32 %47, 11
  %49 = and i32 %5, 65535
  %50 = add i32 %47, %49
  %51 = add i32 %50, %48
  %52 = shl i32 %51, 16
  %53 = shl nuw nsw i32 %15, 11
  %54 = xor i32 %51, %53
  %55 = xor i32 %54, %52
  %56 = lshr i32 %55, 11
  %57 = add i32 %56, %55
  %58 = trunc i64 %23 to i32
  %59 = and i32 %58, 65535
  %60 = add i32 %57, %59
  %61 = shl i32 %60, 16
  %62 = lshr i64 %23, 5
  %63 = trunc i64 %62 to i32
  %64 = and i32 %63, 134215680
  %65 = xor i32 %64, %60
  %66 = xor i32 %65, %61
  %67 = lshr i32 %66, 11
  %68 = zext i8 %25 to i32
  %69 = add i32 %66, %68
  %70 = add i32 %69, %67
  %71 = shl i32 %70, 16
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 11
  %74 = add i32 %73, %72
  %75 = shl i32 %74, 3
  %76 = xor i32 %75, %74
  %77 = lshr i32 %76, 5
  %78 = add i32 %77, %76
  %79 = shl i32 %78, 2
  %80 = xor i32 %79, %78
  %81 = lshr i32 %80, 15
  %82 = add i32 %81, %80
  %83 = shl i32 %82, 10
  %84 = xor i32 %83, %82
  %85 = and i32 %84, 16777215
  %86 = icmp eq i32 %85, 0
  %87 = select i1 %86, i32 8388608, i32 %85
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22FontFaceCreationParams7GetHashEv(%"class.blink::FontFaceCreationParams"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %205

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %20

17:                                               ; preds = %6
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %19 = zext i8 %10 to i64
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i8* [ %14, %12 ], [ %18, %17 ]
  %22 = phi i64 [ %16, %12 ], [ %19, %17 ]
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = lshr i32 %23, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %90, label %28

28:                                               ; preds = %20
  %29 = add nsw i32 %26, -1
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 1
  %32 = add nuw nsw i64 %31, 2
  %33 = and i32 %26, 1
  %34 = icmp eq i32 %26, 1
  br i1 %34, label %69, label %35

35:                                               ; preds = %28
  %36 = sub nsw i32 %26, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i32 [ -1640531527, %35 ], [ %65, %37 ]
  %39 = phi i8* [ %21, %35 ], [ %66, %37 ]
  %40 = phi i32 [ %36, %35 ], [ %67, %37 ]
  %41 = load i8, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %41 to i32
  %45 = add i32 %38, %44
  %46 = shl i32 %45, 16
  %47 = zext i8 %43 to i32
  %48 = shl nuw nsw i32 %47, 11
  %49 = xor i32 %48, %45
  %50 = xor i32 %49, %46
  %51 = lshr i32 %50, 11
  %52 = add i32 %51, %50
  %53 = getelementptr inbounds i8, i8* %39, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds i8, i8* %39, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %54 to i32
  %58 = add i32 %52, %57
  %59 = shl i32 %58, 16
  %60 = zext i8 %56 to i32
  %61 = shl nuw nsw i32 %60, 11
  %62 = xor i32 %61, %58
  %63 = xor i32 %62, %59
  %64 = lshr i32 %63, 11
  %65 = add i32 %64, %63
  %66 = getelementptr inbounds i8, i8* %39, i64 4
  %67 = add i32 %40, -2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %37

69:                                               ; preds = %37, %28
  %70 = phi i32 [ undef, %28 ], [ %65, %37 ]
  %71 = phi i32 [ -1640531527, %28 ], [ %65, %37 ]
  %72 = phi i8* [ %21, %28 ], [ %66, %37 ]
  %73 = icmp eq i32 %33, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = load i8, i8* %72, align 1
  %76 = getelementptr inbounds i8, i8* %72, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %75 to i32
  %79 = add i32 %71, %78
  %80 = shl i32 %79, 16
  %81 = zext i8 %77 to i32
  %82 = shl nuw nsw i32 %81, 11
  %83 = xor i32 %82, %79
  %84 = xor i32 %83, %80
  %85 = lshr i32 %84, 11
  %86 = add i32 %85, %84
  br label %87

87:                                               ; preds = %69, %74
  %88 = phi i32 [ %70, %69 ], [ %86, %74 ]
  %89 = getelementptr i8, i8* %21, i64 %32
  br label %90

90:                                               ; preds = %87, %20
  %91 = phi i32 [ -1640531527, %20 ], [ %88, %87 ]
  %92 = phi i8* [ %21, %20 ], [ %89, %87 ]
  br i1 %25, label %93, label %96

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %95 = bitcast i32* %94 to i8*
  br label %111

96:                                               ; preds = %90
  %97 = load i8, i8* %92, align 1
  %98 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %99 = bitcast i32* %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = load i8, i8* %99, align 1
  %102 = zext i8 %97 to i32
  %103 = add i32 %91, %102
  %104 = shl i32 %103, 16
  %105 = zext i8 %101 to i32
  %106 = shl nuw nsw i32 %105, 11
  %107 = xor i32 %106, %103
  %108 = xor i32 %107, %104
  %109 = lshr i32 %108, 11
  %110 = add i32 %109, %108
  br label %111

111:                                              ; preds = %96, %93
  %112 = phi i32 [ %110, %96 ], [ %91, %93 ]
  %113 = phi i8* [ %100, %96 ], [ %95, %93 ]
  %114 = phi i32 [ 3, %96 ], [ 4, %93 ]
  %115 = and i32 %114, 1
  %116 = lshr i32 %114, 1
  %117 = add nsw i32 %116, -1
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 1
  %120 = add nuw nsw i64 %119, 2
  %121 = load i8, i8* %113, align 1
  %122 = getelementptr inbounds i8, i8* %113, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %121 to i32
  %125 = add i32 %112, %124
  %126 = shl i32 %125, 16
  %127 = zext i8 %123 to i32
  %128 = shl nuw nsw i32 %127, 11
  %129 = xor i32 %128, %125
  %130 = xor i32 %129, %126
  %131 = lshr i32 %130, 11
  %132 = add i32 %131, %130
  %133 = icmp eq i32 %116, 1
  br i1 %133, label %134, label %269

134:                                              ; preds = %269, %111
  %135 = phi i32 [ %132, %111 ], [ %282, %269 ]
  %136 = icmp eq i32 %115, 0
  br i1 %136, label %153, label %137

137:                                              ; preds = %134
  %138 = getelementptr i8, i8* %113, i64 %120
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %141 = bitcast i32* %140 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = load i8, i8* %141, align 1
  %144 = zext i8 %139 to i32
  %145 = add i32 %135, %144
  %146 = shl i32 %145, 16
  %147 = zext i8 %143 to i32
  %148 = shl nuw nsw i32 %147, 11
  %149 = xor i32 %148, %145
  %150 = xor i32 %149, %146
  %151 = lshr i32 %150, 11
  %152 = add i32 %151, %150
  br label %156

153:                                              ; preds = %134
  %154 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %155 = bitcast i32* %154 to i8*
  br label %156

156:                                              ; preds = %137, %153
  %157 = phi i32 [ %152, %137 ], [ %135, %153 ]
  %158 = phi i8* [ %142, %137 ], [ %155, %153 ]
  %159 = phi i32 [ 3, %137 ], [ 4, %153 ]
  %160 = and i32 %159, 1
  %161 = lshr i32 %159, 1
  %162 = add nsw i32 %161, -1
  %163 = zext i32 %162 to i64
  %164 = shl nuw nsw i64 %163, 1
  %165 = add nuw nsw i64 %164, 2
  %166 = load i8, i8* %158, align 1
  %167 = getelementptr inbounds i8, i8* %158, i64 1
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %166 to i32
  %170 = add i32 %157, %169
  %171 = shl i32 %170, 16
  %172 = zext i8 %168 to i32
  %173 = shl nuw nsw i32 %172, 11
  %174 = xor i32 %173, %170
  %175 = xor i32 %174, %171
  %176 = lshr i32 %175, 11
  %177 = add i32 %176, %175
  %178 = icmp eq i32 %161, 1
  br i1 %178, label %179, label %255

179:                                              ; preds = %255, %156
  %180 = phi i32 [ %177, %156 ], [ %268, %255 ]
  %181 = icmp eq i32 %160, 0
  br i1 %181, label %191, label %182

182:                                              ; preds = %179
  %183 = getelementptr i8, i8* %158, i64 %165
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = add i32 %180, %185
  %187 = shl i32 %186, 11
  %188 = xor i32 %187, %186
  %189 = lshr i32 %188, 17
  %190 = add i32 %189, %188
  br label %191

191:                                              ; preds = %179, %182
  %192 = phi i32 [ %190, %182 ], [ %180, %179 ]
  %193 = shl i32 %192, 3
  %194 = xor i32 %193, %192
  %195 = lshr i32 %194, 5
  %196 = add i32 %195, %194
  %197 = shl i32 %196, 2
  %198 = xor i32 %197, %196
  %199 = lshr i32 %198, 15
  %200 = add i32 %199, %198
  %201 = shl i32 %200, 10
  %202 = xor i32 %201, %200
  %203 = icmp eq i32 %202, 0
  %204 = select i1 %203, i32 -2147483648, i32 %202
  br label %253

205:                                              ; preds = %1
  %206 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #14
  %207 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %214, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %205, %210
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0) #14
  br label %233

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %216, align 8
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %233

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i33
  %225 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %224, i33 1) #14
  %226 = extractvalue { i33, i1 } %225, 1
  %227 = extractvalue { i33, i1 } %225, 0
  %228 = icmp slt i33 %227, 0
  %229 = or i1 %226, %228
  br i1 %229, label %230, label %231, !prof !19

230:                                              ; preds = %221
  tail call void @llvm.trap() #14
  unreachable

231:                                              ; preds = %221
  %232 = trunc i33 %227 to i32
  store i32 %232, i32* %222, align 4
  br label %233

233:                                              ; preds = %231, %215, %214
  %234 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %235) #14
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #14
  br label %252

252:                                              ; preds = %233, %248, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #14
  br label %253

253:                                              ; preds = %252, %191
  %254 = phi i32 [ %204, %191 ], [ %236, %252 ]
  ret i32 %254

255:                                              ; preds = %156
  %256 = getelementptr inbounds i8, i8* %158, i64 2
  %257 = load i8, i8* %256, align 1
  %258 = getelementptr inbounds i8, i8* %158, i64 3
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %257 to i32
  %261 = add i32 %177, %260
  %262 = shl i32 %261, 16
  %263 = zext i8 %259 to i32
  %264 = shl nuw nsw i32 %263, 11
  %265 = xor i32 %264, %261
  %266 = xor i32 %265, %262
  %267 = lshr i32 %266, 11
  %268 = add i32 %267, %266
  br label %179

269:                                              ; preds = %111
  %270 = getelementptr inbounds i8, i8* %113, i64 2
  %271 = load i8, i8* %270, align 1
  %272 = getelementptr inbounds i8, i8* %113, i64 3
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %271 to i32
  %275 = add i32 %132, %274
  %276 = shl i32 %275, 16
  %277 = zext i8 %273 to i32
  %278 = shl nuw nsw i32 %277, 11
  %279 = xor i32 %278, %275
  %280 = xor i32 %279, %276
  %281 = lshr i32 %280, 11
  %282 = add i32 %281, %280
  br label %134
}

declare i32 @_ZNK5blink21FontVariationSettings7GetHashEv(%"class.blink::FontVariationSettings"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #14
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #14
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !81
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #14
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #14
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #14
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #14
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !81
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #3

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  %10 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  br i1 %9, label %12, label %112

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %18, i64* %19, align 8
  br label %27

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  br label %27

27:                                               ; preds = %16, %20
  %28 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %33, %37
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #14
  br i1 %47, label %48, label %112

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = icmp eq i64 %58, %66
  br i1 %67, label %68, label %112

68:                                               ; preds = %48
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %72 = select i1 %54, i8* %70, i8* %71
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %76 = select i1 %62, i8* %74, i8* %75
  %77 = icmp eq i64 %58, 0
  br i1 %54, label %84, label %78

78:                                               ; preds = %68
  br i1 %77, label %100, label %79

79:                                               ; preds = %78
  %80 = ptrtoint i8* %70 to i64
  %81 = trunc i64 %80 to i8
  %82 = load i8, i8* %76, align 1
  %83 = icmp eq i8 %82, %81
  br i1 %83, label %85, label %112

84:                                               ; preds = %68
  br i1 %77, label %100, label %97

85:                                               ; preds = %79, %92
  %86 = phi i64 [ %89, %92 ], [ %57, %79 ]
  %87 = phi i8* [ %90, %92 ], [ %71, %79 ]
  %88 = phi i8* [ %93, %92 ], [ %76, %79 ]
  %89 = add i64 %86, -1
  %90 = getelementptr inbounds i8, i8* %87, i64 1
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds i8, i8* %88, i64 1
  %94 = load i8, i8* %90, align 1
  %95 = load i8, i8* %93, align 1
  %96 = icmp eq i8 %94, %95
  br i1 %96, label %85, label %112

97:                                               ; preds = %84
  %98 = call i32 @bcmp(i8* %72, i8* %76, i64 %58) #14
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %85, %78, %84, %97
  %101 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %102, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 4
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %108, %110
  br label %112

112:                                              ; preds = %92, %79, %48, %106, %100, %97, %44, %2
  %113 = phi i1 [ false, %100 ], [ false, %97 ], [ false, %44 ], [ false, %2 ], [ %111, %106 ], [ false, %48 ], [ false, %79 ], [ false, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  ret i1 %113
}

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.blink::FontCacheKey", align 8
  %3 = bitcast %"struct.blink::FontCacheKey"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3) #14
  %4 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %4, align 8, !alias.scope !82
  %5 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %6, align 8, !alias.scope !82
  %7 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 6
  store i8 0, i8* %7, align 8, !alias.scope !82
  %8 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 52, i1 false) #14, !alias.scope !82
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 5, i32 0
  %10 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %9, align 8
  %11 = icmp ne %"class.blink::FontVariationSettings"* %10, null
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0
  %14 = call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %12, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %13) #14
  br i1 %14, label %15, label %39

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %39

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 3
  %29 = load float, float* %28, align 8
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 3
  %31 = load float, float* %30, align 8
  %32 = fcmp une float %29, %31
  %33 = or i1 %11, %32
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %0, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !81
  %37 = load i8, i8* %7, align 8, !range !81
  %38 = icmp eq i8 %36, %37
  br label %39

39:                                               ; preds = %1, %15, %21, %27, %34
  %40 = phi i1 [ false, %27 ], [ false, %21 ], [ false, %15 ], [ false, %1 ], [ %38, %34 ]
  %41 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %6, align 8
  %42 = icmp eq %"class.blink::FontVariationSettings"* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %41, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %44, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #14
  %46 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %44, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %63

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %44, i64 -4
  %51 = bitcast %"class.base::RefCounted.160"* %50 to %"class.blink::FontTagValuePair.156"**
  %52 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %51, align 8
  %53 = icmp eq %"class.blink::FontTagValuePair.156"* %52, null
  %54 = bitcast %"class.blink::FontTagValuePair.156"* %52 to i8*
  br i1 %53, label %61, label %55, !prof !2

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %44, i64 -1, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !19

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #14
  br label %61

61:                                               ; preds = %60, %49
  %62 = bitcast %"class.base::RefCounted.160"* %50 to i8*
  call void @free(i8* %62) #14
  br label %63

63:                                               ; preds = %61, %43, %39
  %64 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 2
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #15
  br label %72

72:                                               ; preds = %69, %63
  %73 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #14
  br label %89

89:                                               ; preds = %72, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3) #14
  ret i1 %40
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink20CSSSegmentedFontFace11GetFontDataERKNS3_15FontDescriptionEE3$_1JS5_13scoped_refptrINS3_17SegmentedFontDataEEEEEFvNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOSF_"(%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %class.scoped_refptr.177, align 8
  %4 = alloca %class.scoped_refptr.177, align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.blink::FontDescription"*
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 10
  %8 = bitcast void ()** %7 to %"class.blink::SegmentedFontData"**
  %9 = load %"class.blink::SegmentedFontData"*, %"class.blink::SegmentedFontData"** %8, align 8
  %10 = icmp eq %"class.blink::SegmentedFontData"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #14
  br label %13

13:                                               ; preds = %11, %2
  %14 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %15, i64 0, i32 20, i32 0, i32 0
  %17 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %17, i64 0, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %17, i64 0, i32 2, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %132, label %23

23:                                               ; preds = %13
  %24 = tail call %"class.blink::SimpleFontData"* @_ZN5blink11CSSFontFace11GetFontDataERKNS_15FontDescriptionE(%"class.blink::CSSFontFace"* %17, %"class.blink::FontDescription"* dereferenceable(80) %6) #14
  %25 = ptrtoint %"class.blink::SimpleFontData"* %24 to i64
  %26 = icmp eq %"class.blink::SimpleFontData"* %24, null
  br i1 %26, label %132, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::SimpleFontData"* %24 to i1 (%"class.blink::SimpleFontData"*)***
  %29 = load i1 (%"class.blink::SimpleFontData"*)**, i1 (%"class.blink::SimpleFontData"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %29, i64 3
  %31 = load i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::SimpleFontData"* nonnull %24) #14
  %33 = tail call noalias i8* @malloc(i64 32) #14
  %34 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %16, align 8
  %35 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %35, align 8
  %37 = icmp eq %"class.blink::UnicodeRangeSet"* %36, null
  br i1 %32, label %38, label %85

38:                                               ; preds = %27
  br i1 %37, label %41, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %36, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #14
  br label %41

41:                                               ; preds = %39, %38
  %42 = ptrtoint %"class.blink::UnicodeRangeSet"* %36 to i64
  %43 = getelementptr inbounds i8, i8* %33, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 1, i32* %44, align 4
  %45 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink19FontDataForRangeSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 %25, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 24
  %49 = bitcast i8* %48 to i64*
  store i64 %42, i64* %49, align 8
  %50 = bitcast %class.scoped_refptr.177* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  %51 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %3, i64 0, i32 0
  %52 = bitcast %class.scoped_refptr.177* %3 to i8**
  store i8* %33, i8** %52, align 8
  %53 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %9, i64 0, i32 1
  %54 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %9, i64 0, i32 1, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %9, i64 0, i32 1, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %68, label %59, !prof !19

59:                                               ; preds = %41
  %60 = ptrtoint i8* %33 to i64
  %61 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %53, i64 0, i32 0, i32 0, i32 0
  %62 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %61, align 8
  %63 = zext i32 %55 to i64
  %64 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %62, i64 %63
  %65 = bitcast %class.scoped_refptr.177* %64 to i64*
  store i64 %60, i64* %65, align 8
  store %"class.blink::FontDataForRangeSet"* null, %"class.blink::FontDataForRangeSet"** %51, align 8
  %66 = load i32, i32* %54, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %54, align 4
  br label %84

68:                                               ; preds = %41
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.174"* %53, %class.scoped_refptr.177* nonnull dereferenceable(8) %3) #14
  %69 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %51, align 8
  %70 = icmp eq %"class.blink::FontDataForRangeSet"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %69, i64 0, i32 1, i32 0
  %73 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %72, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %73) #14
  %74 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %72, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %72, i64 -2
  %79 = bitcast %"class.base::RefCounted.179"* %78 to %"class.blink::FontDataForRangeSet"*
  %80 = bitcast %"class.base::RefCounted.179"* %78 to void (%"class.blink::FontDataForRangeSet"*)***
  %81 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %81, i64 1
  %83 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %82, align 8
  call void %83(%"class.blink::FontDataForRangeSet"* nonnull %79) #14
  br label %84

84:                                               ; preds = %77, %71, %68, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #14
  br label %132

85:                                               ; preds = %27
  br i1 %37, label %88, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %36, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %87) #14
  br label %88

88:                                               ; preds = %86, %85
  %89 = ptrtoint %"class.blink::UnicodeRangeSet"* %36 to i64
  %90 = getelementptr inbounds i8, i8* %33, i64 8
  %91 = bitcast i8* %90 to i32*
  store i32 1, i32* %91, align 4
  %92 = bitcast i8* %33 to i32 (...)***
  %93 = getelementptr inbounds i8, i8* %33, i64 16
  %94 = bitcast i8* %93 to i64*
  store i64 %25, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %33, i64 24
  %96 = bitcast i8* %95 to i64*
  store i64 %89, i64* %96, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink28FontDataForRangeSetFromCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %97 = bitcast %class.scoped_refptr.177* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #14
  %98 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %4, i64 0, i32 0
  %99 = bitcast %class.scoped_refptr.177* %4 to i8**
  store i8* %33, i8** %99, align 8
  %100 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %9, i64 0, i32 1
  %101 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %9, i64 0, i32 1, i32 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %9, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %102, %104
  br i1 %105, label %115, label %106, !prof !19

106:                                              ; preds = %88
  %107 = ptrtoint i8* %33 to i64
  %108 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %100, i64 0, i32 0, i32 0, i32 0
  %109 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %108, align 8
  %110 = zext i32 %102 to i64
  %111 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %109, i64 %110
  %112 = bitcast %class.scoped_refptr.177* %111 to i64*
  store i64 %107, i64* %112, align 8
  store %"class.blink::FontDataForRangeSet"* null, %"class.blink::FontDataForRangeSet"** %98, align 8
  %113 = load i32, i32* %101, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %101, align 4
  br label %131

115:                                              ; preds = %88
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.174"* %100, %class.scoped_refptr.177* nonnull dereferenceable(8) %4) #14
  %116 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %98, align 8
  %117 = icmp eq %"class.blink::FontDataForRangeSet"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %116, i64 0, i32 1, i32 0
  %120 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %119, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %120) #14
  %121 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %119, i64 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.base::RefCounted.179", %"class.base::RefCounted.179"* %119, i64 -2
  %126 = bitcast %"class.base::RefCounted.179"* %125 to %"class.blink::FontDataForRangeSet"*
  %127 = bitcast %"class.base::RefCounted.179"* %125 to void (%"class.blink::FontDataForRangeSet"*)***
  %128 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %128, i64 1
  %130 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %129, align 8
  call void %130(%"class.blink::FontDataForRangeSet"* nonnull %126) #14
  br label %131

131:                                              ; preds = %124, %118, %115, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #14
  br label %132

132:                                              ; preds = %131, %84, %23, %13
  br i1 %10, label %146, label %133

133:                                              ; preds = %132
  %134 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %9, i64 0, i32 0, i32 1, i32 0
  %135 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %134, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %135) #14
  %136 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %134, i64 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %146

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %134, i64 -2
  %141 = bitcast %"class.base::RefCounted.141"* %140 to %"class.blink::FontData"*
  %142 = bitcast %"class.base::RefCounted.141"* %140 to void (%"class.blink::FontData"*)***
  %143 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %143, i64 1
  %145 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %144, align 8
  call void %145(%"class.blink::FontData"* nonnull %141) #14
  br label %146

146:                                              ; preds = %132, %133, %139
  ret void
}

declare %"class.blink::SimpleFontData"* @_ZN5blink11CSSFontFace11GetFontDataERKNS_15FontDescriptionE(%"class.blink::CSSFontFace"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.174"*, %class.scoped_refptr.177* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.177* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.177* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.174"* %0, i32 %5) #14
  %14 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %class.scoped_refptr.177* %1 to i64
  %17 = ptrtoint %class.scoped_refptr.177* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.174"* %0, i32 %5) #14
  %20 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %6, align 8
  %21 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %class.scoped_refptr.177* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %class.scoped_refptr.177* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %23, i64 %26
  %28 = getelementptr inbounds %class.scoped_refptr.177, %class.scoped_refptr.177* %24, i64 0, i32 0
  %29 = bitcast %class.scoped_refptr.177* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %class.scoped_refptr.177* %27 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.blink::FontDataForRangeSet"* null, %"class.blink::FontDataForRangeSet"** %28, align 8
  %32 = load i32, i32* %3, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.174"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %31, align 8
  %33 = icmp eq %class.scoped_refptr.177* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink19FontDataForRangeSetEEEEmm(i64 %37) #14
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink19FontDataForRangeSetEEEEPKcv, i64 0, i64 0)) #14
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.174"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.174"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.174"* %0, i32 %27) #14
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.174"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %5, align 8
  %7 = icmp eq %class.scoped_refptr.177* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %class.scoped_refptr.177*
  %10 = icmp eq %class.scoped_refptr.177* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.174"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.174"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !19

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %class.scoped_refptr.177* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #14
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.175"* %19, %class.scoped_refptr.177* nonnull %6) #14
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink19FontDataForRangeSetEEEEmm(i64 %30) #14
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink19FontDataForRangeSetEEEEPKcv, i64 0, i64 0)) #14
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %class.scoped_refptr.177* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %class.scoped_refptr.177* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #14
  %46 = load %class.scoped_refptr.177*, %class.scoped_refptr.177** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %class.scoped_refptr.177* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %class.scoped_refptr.177*
  %51 = icmp eq %class.scoped_refptr.177* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.175"* %53, %class.scoped_refptr.177* %48) #14
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.174"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.174", %"class.WTF::Vector.174"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink19FontDataForRangeSetEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink19FontDataForRangeSetEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.175"*, %class.scoped_refptr.177*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %class.scoped_refptr.177* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19FontDataForRangeSetD2Ev(%"class.blink::FontDataForRangeSet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink19FontDataForRangeSetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %3, align 8
  %5 = icmp eq %"class.blink::UnicodeRangeSet"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #14
  %9 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"struct.blink::UnicodeRange"**
  %15 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %14, align 8
  %16 = icmp eq %"struct.blink::UnicodeRange"* %15, null
  %17 = bitcast %"struct.blink::UnicodeRange"* %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 5, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !19

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #14
  br label %24

24:                                               ; preds = %23, %12
  %25 = bitcast %"class.blink::UnicodeRangeSet"* %4 to i8*
  tail call void @free(i8* %25) #14
  br label %26

26:                                               ; preds = %1, %6, %24
  %27 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %0, i64 0, i32 2, i32 0
  %28 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %27, align 8
  %29 = icmp eq %"class.blink::SimpleFontData"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %28, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %31, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #14
  %33 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %31, i64 -2
  %38 = bitcast %"class.base::RefCounted.141"* %37 to %"class.blink::FontData"*
  %39 = bitcast %"class.base::RefCounted.141"* %37 to void (%"class.blink::FontData"*)***
  %40 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %40, i64 1
  %42 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %41, align 8
  tail call void %42(%"class.blink::FontData"* nonnull %38) #14
  br label %43

43:                                               ; preds = %26, %30, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19FontDataForRangeSetD0Ev(%"class.blink::FontDataForRangeSet"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink19FontDataForRangeSetD2Ev(%"class.blink::FontDataForRangeSet"* %0) #14
  %2 = bitcast %"class.blink::FontDataForRangeSet"* %0 to i8*
  tail call void @free(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink20CSSSegmentedFontFace11GetFontDataERKNS2_15FontDescriptionEE3$_1JS4_13scoped_refptrINS2_17SegmentedFontDataEEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 3, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::SegmentedFontData"**
  %6 = load %"class.blink::SegmentedFontData"*, %"class.blink::SegmentedFontData"** %5, align 8
  %7 = icmp eq %"class.blink::SegmentedFontData"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::SegmentedFontData", %"class.blink::SegmentedFontData"* %6, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #14
  %11 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted.141", %"class.base::RefCounted.141"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted.141"* %15 to %"class.blink::FontData"*
  %17 = bitcast %"class.base::RefCounted.141"* %15 to void (%"class.blink::FontData"*)***
  %18 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %18, i64 1
  %20 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %19, align 8
  tail call void %20(%"class.blink::FontData"* nonnull %16) #14
  br label %21

21:                                               ; preds = %3, %8, %14
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %23 = bitcast void ()** %22 to %"class.blink::FontDescription"*
  tail call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* %23) #14
  %24 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyC2ERKS2_OS5_(%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"struct.blink::FontCacheKey"* dereferenceable(80), %class.scoped_refptr.173* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 2
  %5 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #14
  %6 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #14
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !19

27:                                               ; preds = %18
  tail call void @llvm.trap() #14
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %28, %13, %3
  %31 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 2
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #14
  br label %45

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %42, i64 %44) #14
  br label %45

45:                                               ; preds = %40, %37
  %46 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 0, i32 0, i32 3
  %47 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0, i32 3
  %48 = bitcast i32* %47 to i64*
  %49 = bitcast i32* %46 to i64*
  %50 = load i64, i64* %48, align 8
  store i64 %50, i64* %49, align 8
  %51 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %53 = bitcast i32* %51 to i8*
  %54 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #14
  %55 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %56 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %55, align 8
  %57 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 0, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* %56, %"class.blink::FontVariationSettings"** %57, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %56, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %45
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %56, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %60) #14
  br label %61

61:                                               ; preds = %45, %59
  %62 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 0, i32 6
  %63 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %64 = load i8, i8* %63, align 8, !range !81
  store i8 %64, i8* %62, align 8
  %65 = getelementptr inbounds %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey", %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %0, i64 0, i32 1
  %66 = getelementptr inbounds %class.scoped_refptr.173, %class.scoped_refptr.173* %2, i64 0, i32 0
  %67 = bitcast %class.scoped_refptr.173* %2 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %class.scoped_refptr.173* %65 to i64*
  store i64 %68, i64* %69, align 8
  store %"class.blink::SegmentedFontData"* null, %"class.blink::SegmentedFontData"** %66, align 8
  %70 = bitcast %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SA_SN_EERKS2_SH_EENS_18HashTableAddResultISO_SI_EEOT0_OT1_(%"class.WTF::HashTable"*, %"struct.blink::FontCacheKey"* dereferenceable(80), %"class.std::__1::unique_ptr.411"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [20 x i8], align 8
  %5 = alloca [12 x i8], align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6ExpandEPSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #14
  %19 = and i32 %18, %16
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %20
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %22) #14
  br i1 %23, label %152, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %26 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %30 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %31 = xor i32 %18, -1
  %32 = lshr i32 %18, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %24, %116
  %45 = phi %"struct.WTF::KeyValuePair"* [ %21, %24 ], [ %127, %116 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ null, %24 ], [ %122, %116 ]
  %47 = phi i64 [ %20, %24 ], [ %126, %116 ]
  %48 = phi i64 [ 0, %24 ], [ %124, %116 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 5, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %25, align 8
  %53 = icmp ne %"class.blink::FontVariationSettings"* %52, null
  %54 = xor i1 %53, true
  %55 = or i1 %51, %54
  %56 = xor i1 %51, true
  %57 = or i1 %53, %56
  br i1 %55, label %91, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %91

64:                                               ; preds = %58
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %69, align 8
  %71 = zext i32 %60 to i64
  %72 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %68, i64 %71
  br label %73

73:                                               ; preds = %87, %66
  %74 = phi %"class.blink::FontTagValuePair.156"* [ %89, %87 ], [ %70, %66 ]
  %75 = phi %"class.blink::FontTagValuePair.156"* [ %88, %87 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %74, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %91

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %75, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %74, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %83, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %75, i64 1
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %74, i64 1
  %90 = icmp eq %"class.blink::FontTagValuePair.156"* %88, %72
  br i1 %90, label %91, label %73

91:                                               ; preds = %87, %81, %73, %64, %58, %44
  %92 = phi i1 [ true, %58 ], [ false, %64 ], [ %57, %44 ], [ true, %81 ], [ false, %87 ], [ true, %73 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0, i32 0
  %94 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %93, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %26) #14
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  br i1 %94, label %97, label %116

97:                                               ; preds = %91
  %98 = load i32, i32* %27, align 8
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %116

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %28, align 4
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %116

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 3
  %107 = load float, float* %106, align 8
  %108 = load float, float* %29, align 8
  %109 = fcmp une float %107, %108
  %110 = or i1 %92, %109
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 6
  %113 = load i8, i8* %112, align 8, !range !81
  %114 = load i8, i8* %30, align 8, !range !81
  %115 = icmp eq i8 %113, %114
  br i1 %115, label %165, label %116

116:                                              ; preds = %91, %97, %100, %105, %111
  %117 = icmp eq i32 %96, -1
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0, i32 3
  %119 = load float, float* %118, align 8
  %120 = fcmp oeq float %119, 0x47EFFFFFE0000000
  %121 = and i1 %117, %120
  %122 = select i1 %121, %"struct.WTF::KeyValuePair"* %45, %"struct.WTF::KeyValuePair"* %46
  %123 = icmp eq i64 %48, 0
  %124 = select i1 %123, i64 %43, i64 %48
  %125 = add i64 %124, %47
  %126 = and i64 %125, %17
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %126
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 0
  %129 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %128) #14
  br i1 %129, label %130, label %44

130:                                              ; preds = %116
  %131 = icmp eq %"struct.WTF::KeyValuePair"* %122, null
  br i1 %131, label %152, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %133)
  %134 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %134)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 20, i1 false), !alias.scope !85, !noalias !88
  %135 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %133, i8* align 8 %135, i64 12, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %134)
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %136, align 8
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 0, i32 1
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 1
  %139 = bitcast i32* %138 to i8*
  %140 = bitcast %"class.WTF::AtomicString"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 40, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* nonnull align 8 %133, i64 12, i1 false) #14
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 5
  %142 = bitcast %class.scoped_refptr.151* %141 to i64*
  store i64 0, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 6
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 1
  %145 = bitcast %"class.std::__1::unique_ptr.411"* %144 to i64*
  store i64 0, i64* %145, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %133)
  %146 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = add i32 %147, 2147483647
  %149 = and i32 %148, 2147483647
  %150 = and i32 %147, -2147483648
  %151 = or i32 %149, %150
  store i32 %151, i32* %146, align 8
  br label %152

152:                                              ; preds = %12, %130, %132
  %153 = phi %"struct.WTF::KeyValuePair"* [ %122, %132 ], [ %127, %130 ], [ %21, %12 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS2_INSt3__110unique_ptrINS_8LruCacheIS4_13scoped_refptrINS3_17SegmentedFontDataEENS3_16FontCacheKeyHashES5_E21MappedListNodeWithKeyENS6_14default_deleteISE_EEEEEEEESC_NS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_SH_EERKS4_SH_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(88) %153, %"struct.blink::FontCacheKey"* dereferenceable(80) %1, %"class.std::__1::unique_ptr.411"* dereferenceable(8) %2)
  %154 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %158 = load i32, i32* %157, align 8
  %159 = add i32 %158, %156
  %160 = shl i32 %159, 1
  %161 = load i32, i32* %14, align 8
  %162 = icmp ult i32 %160, %161
  br i1 %162, label %165, label %163

163:                                              ; preds = %152
  %164 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6ExpandEPSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %153)
  br label %165

165:                                              ; preds = %111, %152, %163
  %166 = phi i8 [ 1, %152 ], [ 1, %163 ], [ 0, %111 ]
  %167 = phi %"struct.WTF::KeyValuePair"* [ %153, %152 ], [ %164, %163 ], [ %45, %111 ]
  %168 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %167, 0
  %169 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %168, i8 %166, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %169
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE6ExpandEPSI_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca [20 x i8], align 8
  %5 = alloca [12 x i8], align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = mul i32 %13, 6
  %15 = shl i32 %9, 1
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %33, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i32 %15, %9
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #14
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %24, i8* %25) #14
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %6) #14
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  br label %33

33:                                               ; preds = %11, %2, %32
  %34 = phi i32 [ %15, %32 ], [ 8, %2 ], [ %9, %11 ]
  %35 = zext i32 %34 to i64
  %36 = mul nuw nsw i64 %35, 88
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([464 x i8], [464 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashENS_10HashTraitsIS3_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEEEEPKcv, i64 0, i64 0)) #14
  %38 = bitcast i8* %37 to %"struct.WTF::KeyValuePair"*
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %58, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  %42 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 8
  %43 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  br label %44

44:                                               ; preds = %44, %40
  %45 = phi i64 [ 0, %40 ], [ %56, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %41)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %43)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 20, i1 false), !alias.scope !91, !noalias !94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %42, i64 12, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %43)
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 0, i32 0
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 1
  %49 = bitcast i32* %48 to i8*
  %50 = bitcast %"class.WTF::AtomicString"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 40, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %41, i64 12, i1 false) #14
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 5
  %52 = bitcast %class.scoped_refptr.151* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 0, i32 6
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %45, i32 1
  %55 = bitcast %"class.std::__1::unique_ptr.411"* %54 to i64*
  store i64 0, i64* %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %41)
  %56 = add nuw nsw i64 %45, 1
  %57 = icmp eq i64 %56, %35
  br i1 %57, label %58, label %44

58:                                               ; preds = %44, %33
  %59 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE8RehashToEPSI_jSP_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %38, i32 %34, %"struct.WTF::KeyValuePair"* %1) #14
  ret %"struct.WTF::KeyValuePair"* %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS2_INSt3__110unique_ptrINS_8LruCacheIS4_13scoped_refptrINS3_17SegmentedFontDataEENS3_16FontCacheKeyHashES5_E21MappedListNodeWithKeyENS6_14default_deleteISE_EEEEEEEESC_NS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_SH_EERKS4_SH_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(88), %"struct.blink::FontCacheKey"* dereferenceable(80), %"class.std::__1::unique_ptr.411"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %6 = tail call dereferenceable(48) %"class.blink::FontFaceCreationParams"* @_ZN5blink22FontFaceCreationParamsaSERKS0_(%"class.blink::FontFaceCreationParams"* %4, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %5) #14
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %9 = bitcast i32* %7 to i8*
  %10 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 12, i1 false) #14
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 5
  %12 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %13 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %12, align 8
  %14 = icmp eq %"class.blink::FontVariationSettings"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %13, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #14
  br label %17

17:                                               ; preds = %15, %3
  %18 = ptrtoint %"class.blink::FontVariationSettings"* %13 to i64
  %19 = bitcast %class.scoped_refptr.151* %11 to i64*
  %20 = getelementptr inbounds %class.scoped_refptr.151, %class.scoped_refptr.151* %11, i64 0, i32 0
  %21 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.blink::FontVariationSettings"* %21, null
  br i1 %22, label %43, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %21, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %24, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #14
  %26 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %24, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %43

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %24, i64 -4
  %31 = bitcast %"class.base::RefCounted.160"* %30 to %"class.blink::FontTagValuePair.156"**
  %32 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %31, align 8
  %33 = icmp eq %"class.blink::FontTagValuePair.156"* %32, null
  %34 = bitcast %"class.blink::FontTagValuePair.156"* %32 to i8*
  br i1 %33, label %41, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::RefCounted.160", %"class.base::RefCounted.160"* %24, i64 -1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39, !prof !19

39:                                               ; preds = %35
  store i32 0, i32* %36, align 4
  br label %40

40:                                               ; preds = %39, %35
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #14
  br label %41

41:                                               ; preds = %40, %29
  %42 = bitcast %"class.base::RefCounted.160"* %30 to i8*
  tail call void @free(i8* %42) #14
  br label %43

43:                                               ; preds = %17, %23, %41
  %44 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !81
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 6
  store i8 %45, i8* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.411"* %2, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %48, align 8
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %48, align 8
  tail call void @_ZNSt3__110unique_ptrIN3WTF8LruCacheIN5blink12FontCacheKeyE13scoped_refptrINS3_17SegmentedFontDataEENS3_16FontCacheKeyHashENS1_10HashTraitsIS4_EEE21MappedListNodeWithKeyENS_14default_deleteISC_EEE5resetEPSC_(%"class.std::__1::unique_ptr.411"* %47, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* %49) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE8RehashToEPSI_jSP_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %55

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %22

19:                                               ; preds = %117
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i64* [ %18, %16 ], [ %20, %19 ]
  %24 = phi i64 [ %17, %16 ], [ %21, %19 ]
  %25 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %118, %19 ]
  %26 = phi i32 [ 0, %16 ], [ %119, %19 ]
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %24, i64* %27 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %28, i64* %23, align 8
  store i32 %26, i32* %8, align 8
  %29 = inttoptr i64 %28 to %"struct.WTF::KeyValuePair"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %51, label %31

31:                                               ; preds = %22
  %32 = icmp eq i32 %26, 0
  br i1 %32, label %49, label %33

33:                                               ; preds = %31
  %34 = zext i32 %26 to i64
  br label %35

35:                                               ; preds = %46, %33
  %36 = phi i64 [ 0, %33 ], [ %47, %46 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, -1
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %36, i32 0, i32 3
  %41 = load float, float* %40, align 8
  %42 = fcmp oeq float %41, 0x47EFFFFFE0000000
  %43 = and i1 %39, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %36
  call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"* %45) #14
  br label %46

46:                                               ; preds = %44, %35
  %47 = add nuw nsw i64 %36, 1
  %48 = icmp eq i64 %47, %34
  br i1 %48, label %49, label %35

49:                                               ; preds = %46, %31
  %50 = inttoptr i64 %28 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #14
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %51

51:                                               ; preds = %22, %49
  %52 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, -2147483648
  store i32 %54, i32* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"struct.WTF::KeyValuePair"* %25

55:                                               ; preds = %4, %117
  %56 = phi %"struct.WTF::KeyValuePair"* [ %118, %117 ], [ null, %4 ]
  %57 = phi i32 [ %119, %117 ], [ 0, %4 ]
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %59 = zext i32 %57 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %59, i32 0
  %61 = call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %60) #14
  br i1 %61, label %117, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %59, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %59, i32 0, i32 3
  %68 = load float, float* %67, align 8
  %69 = fcmp oeq float %68, 0x47EFFFFFE0000000
  br i1 %69, label %117, label %70

70:                                               ; preds = %62, %66
  %71 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISA_SM_SN_EES2_EENS4_4pairIPSI_bEERKT0_(%"class.WTF::HashTable"* nonnull %5, %"struct.blink::FontCacheKey"* dereferenceable(80) %73) #14
  %75 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %74, 0
  call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"* %75) #14
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::AtomicString"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::AtomicString"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 2
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 0, i32 2
  %87 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #14
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 3
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 0, i32 3
  %91 = bitcast i32* %90 to i64*
  %92 = bitcast i32* %89 to i64*
  %93 = load i64, i64* %91, align 8
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 1
  %96 = bitcast i32* %94 to i8*
  %97 = bitcast i32* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 12, i1 false) #14
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 5
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 5
  %100 = getelementptr inbounds %class.scoped_refptr.151, %class.scoped_refptr.151* %99, i64 0, i32 0
  %101 = bitcast %class.scoped_refptr.151* %99 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %class.scoped_refptr.151* %98 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %100, align 8
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 6
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 0, i32 6
  %106 = load i8, i8* %105, align 8, !range !81
  store i8 %106, i8* %104, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %59, i32 1
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.411"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.411"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.411"* %107 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 %59
  %115 = icmp eq %"struct.WTF::KeyValuePair"* %114, %3
  %116 = select i1 %115, %"struct.WTF::KeyValuePair"* %75, %"struct.WTF::KeyValuePair"* %56
  br label %117

117:                                              ; preds = %55, %66, %70
  %118 = phi %"struct.WTF::KeyValuePair"* [ %56, %66 ], [ %116, %70 ], [ %56, %55 ]
  %119 = add i32 %57, 1
  %120 = load i32, i32* %12, align 8
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %19, label %55
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISA_SM_SN_EES2_EENS4_4pairIPSI_bEERKT0_(%"class.WTF::HashTable"*, %"struct.blink::FontCacheKey"* dereferenceable(80)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = tail call i32 @_ZN5blink16FontCacheKeyHash7GetHashERKNS_12FontCacheKeyE(%"struct.blink::FontCacheKey"* dereferenceable(80) %1) #14
  %10 = and i32 %9, %7
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %11
  %13 = ptrtoint %"struct.WTF::KeyValuePair"* %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %14) #14
  br i1 %15, label %38, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 5, i32 0
  %18 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %1, i64 0, i32 6
  %23 = xor i32 %9, -1
  %24 = lshr i32 %9, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %44

36:                                               ; preds = %116
  %37 = ptrtoint %"struct.WTF::KeyValuePair"* %128 to i64
  br label %38

38:                                               ; preds = %36, %2
  %39 = phi i64 [ %13, %2 ], [ %37, %36 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %123, %36 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, null
  %42 = ptrtoint %"struct.WTF::KeyValuePair"* %40 to i64
  %43 = select i1 %41, i64 %39, i64 %42
  br label %132

44:                                               ; preds = %16, %116
  %45 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %123, %116 ]
  %46 = phi i64 [ %13, %16 ], [ %129, %116 ]
  %47 = phi i64 [ %11, %16 ], [ %127, %116 ]
  %48 = phi i64 [ 0, %16 ], [ %125, %116 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 5, i32 0
  %50 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %49, align 8
  %51 = icmp eq %"class.blink::FontVariationSettings"* %50, null
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %17, align 8
  %53 = icmp ne %"class.blink::FontVariationSettings"* %52, null
  %54 = xor i1 %53, true
  %55 = or i1 %51, %54
  %56 = xor i1 %51, true
  %57 = or i1 %53, %56
  br i1 %55, label %91, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %91

64:                                               ; preds = %58
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FontTagValuePair.156"*, %"class.blink::FontTagValuePair.156"** %69, align 8
  %71 = zext i32 %60 to i64
  %72 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %68, i64 %71
  br label %73

73:                                               ; preds = %87, %66
  %74 = phi %"class.blink::FontTagValuePair.156"* [ %89, %87 ], [ %70, %66 ]
  %75 = phi %"class.blink::FontTagValuePair.156"* [ %88, %87 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %74, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %91

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %75, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %74, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %83, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %75, i64 1
  %89 = getelementptr inbounds %"class.blink::FontTagValuePair.156", %"class.blink::FontTagValuePair.156"* %74, i64 1
  %90 = icmp eq %"class.blink::FontTagValuePair.156"* %88, %72
  br i1 %90, label %91, label %73

91:                                               ; preds = %87, %81, %73, %64, %58, %44
  %92 = phi i1 [ true, %58 ], [ false, %64 ], [ %57, %44 ], [ true, %81 ], [ false, %87 ], [ true, %73 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 0
  %94 = tail call zeroext i1 @_ZNK5blink22FontFaceCreationParamseqERKS0_(%"class.blink::FontFaceCreationParams"* %93, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %18) #14
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  br i1 %94, label %97, label %116

97:                                               ; preds = %91
  %98 = load i32, i32* %19, align 8
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %116

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %20, align 4
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %116

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 3
  %107 = load float, float* %106, align 8
  %108 = load float, float* %21, align 8
  %109 = fcmp une float %107, %108
  %110 = or i1 %92, %109
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 6
  %113 = load i8, i8* %112, align 8, !range !81
  %114 = load i8, i8* %22, align 8, !range !81
  %115 = icmp eq i8 %113, %114
  br i1 %115, label %132, label %116

116:                                              ; preds = %91, %97, %100, %105, %111
  %117 = icmp eq i32 %96, -1
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %47, i32 0, i32 3
  %119 = load float, float* %118, align 8
  %120 = fcmp oeq float %119, 0x47EFFFFFE0000000
  %121 = and i1 %117, %120
  %122 = inttoptr i64 %46 to %"struct.WTF::KeyValuePair"*
  %123 = select i1 %121, %"struct.WTF::KeyValuePair"* %122, %"struct.WTF::KeyValuePair"* %45
  %124 = icmp eq i64 %48, 0
  %125 = select i1 %124, i64 %35, i64 %48
  %126 = add i64 %125, %47
  %127 = and i64 %126, %8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %127
  %129 = ptrtoint %"struct.WTF::KeyValuePair"* %128 to i64
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 0, i32 0
  %131 = tail call zeroext i1 @_ZN3WTF27HashTraitsEmptyValueCheckerINS_10HashTraitsIN5blink12FontCacheKeyEEELb0EE12IsEmptyValueIS3_EEbRKT_(%"struct.blink::FontCacheKey"* dereferenceable(80) %130) #14
  br i1 %131, label %36, label %44

132:                                              ; preds = %111, %38
  %133 = phi i64 [ %43, %38 ], [ %46, %111 ]
  %134 = phi i8 [ 0, %38 ], [ 1, %111 ]
  %135 = inttoptr i64 %133 to %"struct.WTF::KeyValuePair"*
  %136 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %135, 0
  %137 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %136, i8 %134, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %137
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.blink::FontFaceCreationParams"* @_ZN5blink22FontFaceCreationParamsaSERKS0_(%"class.blink::FontFaceCreationParams"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #14
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !19

24:                                               ; preds = %15
  tail call void @llvm.trap() #14
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #14
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2
  %49 = icmp eq %"class.blink::FontFaceCreationParams"* %0, %1
  br i1 %49, label %79, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %54, label %69, label %59

59:                                               ; preds = %50
  br i1 %58, label %63, label %60

60:                                               ; preds = %59
  %61 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #14
  br label %79

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %47, i8* %65, i64 %67) #14
  br label %79

69:                                               ; preds = %50
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %75 = zext i8 %57 to i64
  %76 = select i1 %58, i8* %71, i8* %74
  %77 = select i1 %58, i64 %73, i64 %75
  %78 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %47, i8* %76, i64 %77) #14
  br label %79

79:                                               ; preds = %46, %60, %63, %69
  %80 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %0, i64 0, i32 3
  %81 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %1, i64 0, i32 3
  %82 = bitcast i32* %81 to i64*
  %83 = bitcast i32* %80 to i64*
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  ret %"class.blink::FontFaceCreationParams"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE5eraseEPKSI_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [20 x i8], align 8
  %4 = alloca [12 x i8], align 8
  tail call void @_ZN3WTF12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS3_14default_deleteISD_EEEEED2Ev(%"struct.WTF::KeyValuePair"* %1) #14
  %5 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false) #14
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 1
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 3
  store float 0x47EFFFFFE0000000, float* %9, align 8
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  %14 = and i32 %13, 2147483647
  %15 = and i32 %12, -2147483648
  %16 = or i32 %14, %15
  store i32 %16, i32* %11, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, i32* %17, align 4
  %20 = mul i32 %19, 6
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %20, %22
  %24 = icmp ugt i32 %22, 8
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %53

26:                                               ; preds = %2
  %27 = lshr i32 %22, 1
  %28 = zext i32 %27 to i64
  %29 = mul nuw nsw i64 %28, 88
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([464 x i8], [464 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink12FontCacheKeyENSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashENS_10HashTraitsIS3_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEEEEPKcv, i64 0, i64 0)) #14
  %31 = bitcast i8* %30 to %"struct.WTF::KeyValuePair"*
  %32 = icmp eq i32 %27, 0
  br i1 %32, label %51, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds [12 x i8], [12 x i8]* %4, i64 0, i64 0
  %35 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 8
  %36 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 0
  br label %37

37:                                               ; preds = %37, %33
  %38 = phi i64 [ 0, %33 ], [ %49, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %34)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %36)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 20, i1 false), !alias.scope !97, !noalias !100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %35, i64 12, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %36)
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %38, i32 0, i32 0, i32 0
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %38, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %38, i32 0, i32 1
  %42 = bitcast i32* %41 to i8*
  %43 = bitcast %"class.WTF::AtomicString"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 40, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %34, i64 12, i1 false) #14
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %38, i32 0, i32 5
  %45 = bitcast %class.scoped_refptr.151* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %38, i32 0, i32 6
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %38, i32 1
  %48 = bitcast %"class.std::__1::unique_ptr.411"* %47 to i64*
  store i64 0, i64* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %34)
  %49 = add nuw nsw i64 %38, 1
  %50 = icmp eq i64 %49, %28
  br i1 %50, label %51, label %37

51:                                               ; preds = %37, %26
  %52 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink12FontCacheKeyENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_13scoped_refptrINS1_17SegmentedFontDataEENS1_16FontCacheKeyHashENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISE_EEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISH_EEEESC_NS_18PartitionAllocatorEE8RehashToEPSI_jSP_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %31, i32 %27, %"struct.WTF::KeyValuePair"* null) #14
  br label %53

53:                                               ; preds = %51, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS3_15FontDescriptionERKN3WTF6StringEE3$_2JS5_S9_EEEFbNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOSG_"(%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %5, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds void ()*, void ()** %3, i64 10
  %11 = bitcast void ()** %10 to %"class.WTF::String"*
  %12 = bitcast void ()** %3 to %"class.blink::FontDescription"*
  %13 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %5, i64 0, i32 20, i32 0, i32 0
  %14 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %13, align 8
  %15 = tail call zeroext i1 @_ZN5blink11CSSFontFace13MaybeLoadFontERKNS_15FontDescriptionERKN3WTF6StringE(%"class.blink::CSSFontFace"* %14, %"class.blink::FontDescription"* dereferenceable(80) %12, %"class.WTF::String"* dereferenceable(8) %11) #14
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i1 [ true, %2 ], [ %15, %9 ]
  ret i1 %17
}

declare zeroext i1 @_ZN5blink11CSSFontFace13MaybeLoadFontERKNS_15FontDescriptionERKN3WTF6StringE(%"class.blink::CSSFontFace"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS2_15FontDescriptionERKN3WTF6StringEE3$_2JS4_S8_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 3, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.WTF::StringImpl"**
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #14
  br label %21

21:                                               ; preds = %3, %17, %20
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %23 = bitcast void ()** %22 to %"class.blink::FontDescription"*
  tail call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* %23) #14
  %24 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS3_15FontDescriptionERKNS3_19FontDataForRangeSetEE3$_3JS5_S8_EEEFbNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOSF_"(%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.blink::FontDescription"*
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 10
  %6 = bitcast void ()** %5 to %"class.blink::FontDataForRangeSet"*
  %7 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %8, i64 0, i32 20, i32 0, i32 0
  %10 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %9, align 8
  %11 = tail call zeroext i1 @_ZN5blink11CSSFontFace13MaybeLoadFontERKNS_15FontDescriptionERKNS_19FontDataForRangeSetE(%"class.blink::CSSFontFace"* %10, %"class.blink::FontDescription"* dereferenceable(80) %4, %"class.blink::FontDataForRangeSet"* dereferenceable(32) %6) #14
  ret i1 %11
}

declare zeroext i1 @_ZN5blink11CSSFontFace13MaybeLoadFontERKNS_15FontDescriptionERKNS_19FontDataForRangeSetE(%"class.blink::CSSFontFace"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontDataForRangeSet"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS2_15FontDescriptionERKNS2_19FontDataForRangeSetEE3$_3JS4_S7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 3, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::FontDataForRangeSet"*
  tail call void @_ZN5blink19FontDataForRangeSetD2Ev(%"class.blink::FontDataForRangeSet"* %5) #14
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.blink::FontDescription"*
  tail call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* %7) #14
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #15
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN5blink19FontDataForRangeSetC1ERKS0_(%"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringEE3$_4JS6_EEEFbNS3_6MemberINS3_8FontFaceEEEEE3RunEPNS0_13BindStateBaseEOSD_"(%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.WTF::String"*
  %5 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %6, i64 0, i32 17
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %41, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %6, i64 0, i32 20, i32 0, i32 0
  %12 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %13, align 8
  %15 = icmp eq %"class.blink::UnicodeRangeSet"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet14IntersectsWithERKN3WTF6StringE(%"class.blink::UnicodeRangeSet"* null, %"class.WTF::String"* dereferenceable(8) %4) #14
  br i1 %17, label %40, label %41

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #14
  %20 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet14IntersectsWithERKN3WTF6StringE(%"class.blink::UnicodeRangeSet"* nonnull %14, %"class.WTF::String"* dereferenceable(8) %4) #14
  %21 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %14, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #14
  %22 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 2
  %27 = bitcast %"class.base::RefCounted"* %26 to %"struct.blink::UnicodeRange"**
  %28 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %27, align 8
  %29 = icmp eq %"struct.blink::UnicodeRange"* %28, null
  %30 = bitcast %"struct.blink::UnicodeRange"* %28 to i8*
  br i1 %29, label %37, label %31, !prof !2

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 5, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !19

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #14
  br label %37

37:                                               ; preds = %36, %25
  %38 = bitcast %"class.blink::UnicodeRangeSet"* %14 to i8*
  tail call void @free(i8* %38) #14
  br i1 %20, label %40, label %41

39:                                               ; preds = %18
  br i1 %20, label %40, label %41

40:                                               ; preds = %39, %37, %16
  br label %41

41:                                               ; preds = %2, %16, %37, %39, %40
  %42 = phi i1 [ false, %40 ], [ true, %39 ], [ true, %16 ], [ true, %37 ], [ true, %2 ]
  ret i1 %42
}

declare zeroext i1 @_ZNK5blink15UnicodeRangeSet14IntersectsWithERKN3WTF6StringE(%"class.blink::UnicodeRangeSet"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringEE3$_4JS5_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.WTF::StringImpl"**
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #14
  br label %21

21:                                               ; preds = %3, %17, %20
  %22 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #15
  br label %23

23:                                               ; preds = %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapVector.208"**
  %5 = load %"class.blink::HeapVector.208"*, %"class.blink::HeapVector.208"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #14
  %7 = icmp eq %"class.blink::HeapVector.208"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapVector.208"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #14
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #14
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.11"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !19

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.11"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #14
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontFace"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontFace"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS3_10HeapVectorINS3_6MemberINS3_8FontFaceEEELj0EEEE3$_5JS6_NS3_10PersistentISD_EEEEEFvSC_EE3RunEPNS0_13BindStateBaseEOSC_"(%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.WTF::String"*
  %6 = bitcast %"class.blink::Member.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %8 = bitcast void ()** %7 to %"class.blink::HeapVector.208"**
  %9 = load %"class.blink::HeapVector.208"*, %"class.blink::HeapVector.208"** %8, align 8
  %10 = bitcast %"class.blink::Member.11"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::Member.11"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = inttoptr i64 %11 to %"class.blink::FontFace"*
  %14 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %13, i64 0, i32 20, i32 0, i32 0
  %15 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %16, align 8
  %18 = icmp eq %"class.blink::UnicodeRangeSet"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet14IntersectsWithERKN3WTF6StringE(%"class.blink::UnicodeRangeSet"* null, %"class.WTF::String"* dereferenceable(8) %5) #14
  br i1 %20, label %43, label %65

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #14
  %23 = tail call zeroext i1 @_ZNK5blink15UnicodeRangeSet14IntersectsWithERKN3WTF6StringE(%"class.blink::UnicodeRangeSet"* nonnull %17, %"class.WTF::String"* dereferenceable(8) %5) #14
  %24 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %17, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #14
  %25 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 2
  %30 = bitcast %"class.base::RefCounted"* %29 to %"struct.blink::UnicodeRange"**
  %31 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %30, align 8
  %32 = icmp eq %"struct.blink::UnicodeRange"* %31, null
  %33 = bitcast %"struct.blink::UnicodeRange"* %31 to i8*
  br i1 %32, label %40, label %34, !prof !2

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 5, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38, !prof !19

38:                                               ; preds = %34
  store i32 0, i32* %35, align 4
  br label %39

39:                                               ; preds = %38, %34
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #14
  br label %40

40:                                               ; preds = %39, %28
  %41 = bitcast %"class.blink::UnicodeRangeSet"* %17 to i8*
  tail call void @free(i8* %41) #14
  br i1 %23, label %43, label %65

42:                                               ; preds = %21
  br i1 %23, label %43, label %65

43:                                               ; preds = %42, %40, %19
  %44 = getelementptr inbounds %"class.blink::HeapVector.208", %"class.blink::HeapVector.208"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::HeapVector.208", %"class.blink::HeapVector.208"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %63, label %49, !prof !19

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::HeapVector.208", %"class.blink::HeapVector.208"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %51, i64 %52
  %54 = bitcast %"class.blink::Member.11"* %53 to i64*
  store atomic i64 %11, i64* %54 monotonic, align 8
  %55 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %49
  %58 = inttoptr i64 %11 to i8*
  %59 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %58) #14
  br label %60

60:                                               ; preds = %57, %49
  %61 = load i32, i32* %44, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %44, align 4
  br label %65

63:                                               ; preds = %43
  %64 = getelementptr inbounds %"class.blink::HeapVector.208", %"class.blink::HeapVector.208"* %9, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.211"* %64, %"class.blink::Member.11"* nonnull dereferenceable(8) %3) #14
  br label %65

65:                                               ; preds = %19, %40, %42, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.211"*, %"class.blink::Member.11"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.11"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.11"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.211"* %0, i32 %22) #14
  %23 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.11"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.11"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.211"* %0, i32 %37) #14
  %38 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.11"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.11"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.11"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.11"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #14
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.211"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %8, align 8
  %10 = icmp eq %"class.blink::Member.11"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8FontFaceEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.211"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %8, align 8
  %26 = icmp eq %"class.blink::Member.11"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.11"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !19

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !81
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.211"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.211"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.211"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.211"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8FontFaceEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.11"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.11"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.211"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.211"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.211"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8FontFaceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.15, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !19

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8FontFaceEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS2_10HeapVectorINS2_6MemberINS2_8FontFaceEEELj0EEEE3$_5JS5_NS2_10PersistentISC_EEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %47, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #14
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !19

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #14
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %5, align 8
  br label %27

27:                                               ; preds = %15, %3
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %29 = bitcast void ()** %28 to %"class.WTF::StringImpl"**
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #14
  br label %45

45:                                               ; preds = %27, %41, %44
  %46 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %45, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN3WTF6StringEN5blink10PersistentINS5_10HeapVectorINS5_6MemberINS5_8FontFaceEEELj0EEEEEEEC2IJLm0ELm1EEJS4_SC_EJEJEJRKS4_SC_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSI_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.494"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Persistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__tuple_impl.494", %"struct.std::__1::__tuple_impl.494"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #14
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !19

22:                                               ; preds = %13
  tail call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %3, %8, %23
  %26 = getelementptr inbounds %"struct.std::__1::__tuple_impl.494", %"struct.std::__1::__tuple_impl.494"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::__tuple_leaf.495", %"class.std::__1::__tuple_leaf.495"* %26, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::Persistent"* %2 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::__tuple_leaf.495"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__tuple_impl.494", %"struct.std::__1::__tuple_impl.494"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %31, align 8
  switch i64 %29, label %32 [
    i64 0, label %58
    i64 -1, label %58
  ]

32:                                               ; preds = %25
  %33 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %34 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %33, i64 0, i32 1
  %35 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %34) #14
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39, !prof !19

37:                                               ; preds = %32
  %38 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %34, i8* %38) #14
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i8* [ %38, %37 ], [ %35, %32 ]
  %41 = bitcast i8* %40 to %"class.blink::ThreadState"**
  %42 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %48, label %51, !prof !19

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %44, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %49) #14
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  br label %51

51:                                               ; preds = %48, %39
  %52 = phi %"class.blink::PersistentNode"* [ %50, %48 ], [ %46, %39 ]
  %53 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::PersistentRegion"* %44 to i64*
  store i64 %54, i64* %55, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %27, %"class.blink::PersistentBase"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %31, align 8
  br label %58

58:                                               ; preds = %25, %25, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.7"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE6insertINS_21ListHashSetTranslatorISB_S6_EERPS4_RSE_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.5"*, %"class.blink::FontFace"** dereferenceable(8), %"class.blink::HeapListHashSetAllocator"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %4, align 8
  %6 = icmp eq %"class.blink::Member.7"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* null)
  %9 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.7"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::FontFace"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = inttoptr i64 %17 to %"class.blink::FontFace"*
  %40 = xor i32 %36, -1
  %41 = lshr i32 %36, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %65, %10
  %54 = phi i64 [ 0, %10 ], [ %68, %65 ]
  %55 = phi i64 [ %38, %10 ], [ %70, %65 ]
  %56 = phi %"class.blink::Member.7"* [ null, %10 ], [ %66, %65 ]
  %57 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %11, i64 %55
  %58 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %58, align 8
  %60 = ptrtoint %"class.blink::HeapListHashSetNode"* %59 to i64
  switch i64 %60, label %61 [
    i64 0, label %71
    i64 -1, label %65
  ]

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %59, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %62, align 8
  %64 = icmp eq %"class.blink::FontFace"* %63, %39
  br i1 %64, label %116, label %65

65:                                               ; preds = %53, %61
  %66 = phi %"class.blink::Member.7"* [ %56, %61 ], [ %57, %53 ]
  %67 = icmp eq i64 %54, 0
  %68 = select i1 %67, i64 %52, i64 %54
  %69 = add i64 %68, %55
  %70 = and i64 %69, %15
  br label %53

71:                                               ; preds = %53
  %72 = icmp eq %"class.blink::Member.7"* %56, null
  br i1 %72, label %81, label %73

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::Member.7"* %56 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %74, i64 8) #14
  %75 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %71, %73
  %82 = phi %"class.blink::Member.7"* [ %56, %73 ], [ %57, %71 ]
  %83 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEEEPhm(i64 24) #14
  %84 = load i64, i64* %16, align 8
  %85 = bitcast i8* %83 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i8, i8* %83, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #14
  %87 = getelementptr inbounds i8, i8* %83, i64 -4
  %88 = bitcast i8* %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = or i16 %89, 1
  store atomic i16 %90, i16* %88 release, align 2
  %91 = ptrtoint i8* %83 to i64
  %92 = bitcast %"class.blink::Member.7"* %82 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %81
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #14
  br label %97

97:                                               ; preds = %81, %95
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.blink::Member.7"* %82 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #14
  br label %104

104:                                              ; preds = %97, %100
  %105 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = load i32, i32* %12, align 8
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = tail call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* %82)
  br label %116

116:                                              ; preds = %61, %104, %114
  %117 = phi i8 [ 1, %104 ], [ 1, %114 ], [ 0, %61 ]
  %118 = phi %"class.blink::Member.7"* [ %82, %104 ], [ %115, %114 ], [ %57, %61 ]
  %119 = insertvalue { %"class.blink::Member.7"*, i8 } undef, %"class.blink::Member.7"* %118, 0
  %120 = insertvalue { %"class.blink::Member.7"*, i8 } %119, i8 %117, 1
  ret { %"class.blink::Member.7"*, i8 } %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.5"*, %"class.blink::Member.7"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #14
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %23, i8* %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.5"* %0, i32 %35, %"class.blink::Member.7"* %1, i8* nonnull dereferenceable(1) %4) #14
  %37 = load i8, i8* %4, align 1, !range !81
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #14
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.7"*
  %44 = call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* %43, i32 %40, %"class.blink::Member.7"* %1) #14
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.7"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.7"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.5"*, i32, %"class.blink::Member.7"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !19

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #14
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !81
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %33 = icmp eq %"class.blink::Member.7"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.7"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #14
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #14
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.7"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.7"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.7"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.7"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.7"* %61, %"class.blink::Member.7"* %55
  %63 = bitcast %"class.blink::Member.7"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.7"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.7"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.5"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #14
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.7"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* %42, i32 %1, %"class.blink::Member.7"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.7"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.7"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.7"* %87, %"class.blink::Member.7"* %82
  %89 = bitcast %"class.blink::Member.7"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.7"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.7"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.7"* %99, %"class.blink::Member.7"* %88
  %101 = bitcast %"class.blink::Member.7"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.7"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.7"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.7"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.5"*, %"class.blink::Member.7"*, i32, %"class.blink::Member.7"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.7"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %10, align 8
  br label %37

14:                                               ; preds = %113, %4
  %15 = phi %"class.blink::Member.7"* [ null, %4 ], [ %116, %113 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.7"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #14
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.5"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.7"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #14
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.7"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.7"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #14
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.7"* %15

37:                                               ; preds = %9, %113
  %38 = phi i32 [ %7, %9 ], [ %114, %113 ]
  %39 = phi %"class.blink::Member.7"* [ %13, %9 ], [ %115, %113 ]
  %40 = phi %"class.blink::Member.7"* [ null, %9 ], [ %116, %113 ]
  %41 = phi i32 [ 0, %9 ], [ %117, %113 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.7"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %113
    i64 0, label %113
  ]

46:                                               ; preds = %37
  %47 = inttoptr i64 %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = shl i64 %48, 32
  %50 = xor i64 %49, -1
  %51 = add i64 %48, %50
  %52 = lshr i64 %51, 22
  %53 = xor i64 %52, %51
  %54 = shl i64 %53, 13
  %55 = xor i64 %54, -1
  %56 = add i64 %53, %55
  %57 = lshr i64 %56, 8
  %58 = xor i64 %57, %56
  %59 = mul i64 %58, 9
  %60 = lshr i64 %59, 15
  %61 = xor i64 %60, %59
  %62 = shl i64 %61, 27
  %63 = xor i64 %62, -1
  %64 = add i64 %61, %63
  %65 = lshr i64 %64, 31
  %66 = xor i64 %65, %64
  %67 = trunc i64 %66 to i32
  %68 = and i32 %11, %67
  %69 = zext i32 %68 to i64
  %70 = xor i32 %67, -1
  %71 = lshr i32 %67, 23
  %72 = add i32 %71, %70
  %73 = shl i32 %72, 12
  %74 = xor i32 %73, %72
  %75 = lshr i32 %74, 7
  %76 = xor i32 %75, %74
  %77 = shl i32 %76, 2
  %78 = xor i32 %77, %76
  %79 = lshr i32 %78, 20
  %80 = xor i32 %79, %78
  %81 = or i32 %80, 1
  %82 = zext i32 %81 to i64
  %83 = inttoptr i64 %48 to %"class.blink::FontFace"*
  br label %84

84:                                               ; preds = %99, %46
  %85 = phi %"class.blink::Member.7"* [ null, %46 ], [ %100, %99 ]
  %86 = phi i64 [ 0, %46 ], [ %102, %99 ]
  %87 = phi i64 [ %69, %46 ], [ %104, %99 ]
  %88 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %1, i64 %87
  %89 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %88, i64 0, i32 0, i32 0
  %90 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %89, align 8
  %91 = ptrtoint %"class.blink::HeapListHashSetNode"* %90 to i64
  switch i64 %91, label %95 [
    i64 0, label %92
    i64 -1, label %99
  ]

92:                                               ; preds = %84
  %93 = icmp eq %"class.blink::Member.7"* %85, null
  %94 = select i1 %93, %"class.blink::Member.7"* %88, %"class.blink::Member.7"* %85
  br label %105

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %90, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %96, align 8
  %98 = icmp eq %"class.blink::FontFace"* %97, %83
  br i1 %98, label %105, label %99

99:                                               ; preds = %95, %84
  %100 = phi %"class.blink::Member.7"* [ %85, %95 ], [ %88, %84 ]
  %101 = icmp eq i64 %86, 0
  %102 = select i1 %101, i64 %82, i64 %86
  %103 = add i64 %102, %87
  %104 = and i64 %103, %12
  br label %84

105:                                              ; preds = %95, %92
  %106 = phi %"class.blink::Member.7"* [ %94, %92 ], [ %88, %95 ]
  %107 = bitcast %"class.blink::Member.7"* %106 to i64*
  store i64 %45, i64* %107, align 8
  %108 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %10, align 8
  %109 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %108, i64 %42
  %110 = icmp eq %"class.blink::Member.7"* %109, %3
  %111 = select i1 %110, %"class.blink::Member.7"* %106, %"class.blink::Member.7"* %40
  %112 = load i32, i32* %6, align 8
  br label %113

113:                                              ; preds = %37, %37, %105
  %114 = phi i32 [ %38, %37 ], [ %112, %105 ], [ %38, %37 ]
  %115 = phi %"class.blink::Member.7"* [ %39, %37 ], [ %108, %105 ], [ %39, %37 ]
  %116 = phi %"class.blink::Member.7"* [ %40, %37 ], [ %111, %105 ], [ %40, %37 ]
  %117 = add i32 %41, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.16, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS3_INS_8FontFaceEEEEEEES8_NS1_17IdentityExtractorENS1_28ListHashSetNodeHashFunctionsINS1_10MemberHashIS5_EEEENS1_17ListHashSetTraitsIS6_Lj0ENS_24HeapListHashSetAllocatorEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS3_INS_8FontFaceEEEEEEES8_NS1_17IdentityExtractorENS1_28ListHashSetNodeHashFunctionsINS1_10MemberHashIS5_EEEENS1_17ListHashSetTraitsIS6_Lj0ENS_24HeapListHashSetAllocatorEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !19

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([546 x i8], [546 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_19HeapListHashSetNodeINS4_INS1_8FontFaceEEEEEEES9_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS6_EEEENS_17ListHashSetTraitsIS7_Lj0ENS1_24HeapListHashSetAllocatorEEESH_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.7"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !19

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #14
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.7"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %24

24:                                               ; preds = %18, %13
  %25 = bitcast i8* %1 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %0, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #14
  br label %34

34:                                               ; preds = %24, %28
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !19

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19HeapListHashSetNodeINS1_6MemberINS1_8FontFaceEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19HeapListHashSetNodeINS_6MemberINS_8FontFaceEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.7"*, %"class.blink::Member.7"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE4findEPS6_(%"class.WTF::HashTable.5"*, %"class.blink::HeapListHashSetNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %4 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %3, align 8
  %5 = icmp eq %"class.blink::Member.7"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %66, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::HeapListHashSetNode"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = xor i32 %31, -1
  %35 = lshr i32 %31, 23
  %36 = add i32 %35, %34
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = inttoptr i64 %12 to %"class.blink::FontFace"*
  br label %48

48:                                               ; preds = %59, %8
  %49 = phi i64 [ 0, %8 ], [ %61, %59 ]
  %50 = phi i64 [ %33, %8 ], [ %63, %59 ]
  %51 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %4, i64 %50
  %52 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %52, align 8
  %54 = ptrtoint %"class.blink::HeapListHashSetNode"* %53 to i64
  switch i64 %54, label %55 [
    i64 0, label %66
    i64 -1, label %59
  ]

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %53, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %56, align 8
  %58 = icmp eq %"class.blink::FontFace"* %57, %47
  br i1 %58, label %64, label %59

59:                                               ; preds = %55, %48
  %60 = icmp eq i64 %49, 0
  %61 = select i1 %60, i64 %46, i64 %49
  %62 = add i64 %61, %50
  %63 = and i64 %62, %10
  br label %48

64:                                               ; preds = %55
  %65 = icmp eq %"class.blink::Member.7"* %51, null
  br i1 %65, label %66, label %69

66:                                               ; preds = %48, %64, %2
  %67 = zext i32 %7 to i64
  %68 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %4, i64 %67
  br label %72

69:                                               ; preds = %64
  %70 = zext i32 %7 to i64
  %71 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %4, i64 %70
  br label %72

72:                                               ; preds = %66, %69
  %73 = phi %"class.blink::Member.7"* [ %51, %69 ], [ %68, %66 ]
  %74 = phi %"class.blink::Member.7"* [ %71, %69 ], [ %68, %66 ]
  %75 = insertvalue { %"class.blink::Member.7"*, %"class.blink::Member.7"* } undef, %"class.blink::Member.7"* %73, 0
  %76 = insertvalue { %"class.blink::Member.7"*, %"class.blink::Member.7"* } %75, %"class.blink::Member.7"* %74, 1
  ret { %"class.blink::Member.7"*, %"class.blink::Member.7"* } %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.5"*, %"class.blink::Member.7"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.7"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #14
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !19

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #14
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !81
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_19HeapListHashSetNodeINS4_INS_8FontFaceEEEEEEES9_NS2_17IdentityExtractorENS2_28ListHashSetNodeHashFunctionsINS2_10MemberHashIS6_EEEENS2_17ListHashSetTraitsIS7_Lj0ENS_24HeapListHashSetAllocatorEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #14
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member.7"*
  %47 = tail call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_19HeapListHashSetNodeINS2_INS1_8FontFaceEEEEEEES7_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_10MemberHashIS4_EEEENS_17ListHashSetTraitsIS5_Lj0ENS1_24HeapListHashSetAllocatorEEESF_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* %46, i32 %43, %"class.blink::Member.7"* null) #14
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11ListHashSetIN5blink6MemberINS1_8FontFaceEEELm0ENS_10MemberHashIS3_EENS1_24HeapListHashSetAllocatorEE6UnlinkEPNS1_19HeapListHashSetNodeIS4_EE(%"class.WTF::ListHashSet"*, %"class.blink::HeapListHashSetNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %4, align 8
  %6 = icmp eq %"class.blink::HeapListHashSetNode"* %5, null
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %1, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::ListHashSet", %"class.WTF::ListHashSet"* %0, i64 0, i32 1
  %11 = ptrtoint %"class.blink::HeapListHashSetNode"* %9 to i64
  %12 = bitcast %"class.blink::Member.7"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.blink::HeapListHashSetNode"* %9 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #14
  br label %29

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %1, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %5, i64 0, i32 2
  %21 = bitcast %"class.blink::Member.7"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::Member.7"* %20 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = inttoptr i64 %22 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #14
  br label %29

29:                                               ; preds = %26, %18, %15, %7
  %30 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %1, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %30, align 8
  %32 = icmp eq %"class.blink::HeapListHashSetNode"* %31, null
  br i1 %32, label %33, label %44

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::HeapListHashSetNode"*, %"class.blink::HeapListHashSetNode"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::ListHashSet", %"class.WTF::ListHashSet"* %0, i64 0, i32 2
  %37 = ptrtoint %"class.blink::HeapListHashSetNode"* %35 to i64
  %38 = bitcast %"class.blink::Member.7"* %36 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.blink::HeapListHashSetNode"* %35 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #14
  br label %54

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.blink::HeapListHashSetNode", %"class.blink::HeapListHashSetNode"* %31, i64 0, i32 1
  %46 = bitcast %"class.blink::Member.7"* %3 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.7"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #14
  br label %54

54:                                               ; preds = %51, %44, %41, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS4_8FontFaceEEEEEES7_EJS9_EEES8_E3RunEPNS0_13BindStateBaseEOS7_(%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i1 (%"class.base::RepeatingCallback"*, %"class.blink::Member.11"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RepeatingCallback"*
  %8 = bitcast %"class.blink::Member.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = load i1 (%"class.base::RepeatingCallback"*, %"class.blink::Member.11"*)*, i1 (%"class.base::RepeatingCallback"*, %"class.blink::Member.11"*)** %5, align 8
  %10 = bitcast %"class.blink::Member.11"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::Member.11"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = call zeroext i1 %9(%"class.base::RepeatingCallback"* dereferenceable(8) %7, %"class.blink::Member.11"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJS8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #14
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS4_8FontFaceEEEEEES7_EJS9_EEEFbS7_EE3RunEPNS0_13BindStateBaseEOS7_(%"class.base::internal::BindStateBase"*, %"class.blink::Member.11"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.blink::Member.11", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i1 (%"class.base::RepeatingCallback.199"*, %"class.blink::Member.11"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RepeatingCallback.199"*
  %8 = bitcast %"class.blink::Member.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = load i1 (%"class.base::RepeatingCallback.199"*, %"class.blink::Member.11"*)*, i1 (%"class.base::RepeatingCallback.199"*, %"class.blink::Member.11"*)** %5, align 8
  %10 = bitcast %"class.blink::Member.11"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::Member.11"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = call zeroext i1 %9(%"class.base::RepeatingCallback.199"* dereferenceable(8) %7, %"class.blink::Member.11"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJS8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #14
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6, !8}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIRZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIRZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
!8 = distinct !{!8, !9, !"_ZN3WTF13BindRepeatingIZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEFbNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF13BindRepeatingIZNK5blink20CSSSegmentedFontFace7IsValidEvE3$_0JEFbNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!10 = !{!"branch_weights", i32 1, i32 1048575}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTF13BindRepeatingIZN5blink20CSSSegmentedFontFace11GetFontDataERKNS1_15FontDescriptionEE3$_1JRS3_R13scoped_refptrINS1_17SegmentedFontDataEEEFvNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF13BindRepeatingIZN5blink20CSSSegmentedFontFace11GetFontDataERKNS1_15FontDescriptionEE3$_1JRS3_R13scoped_refptrINS1_17SegmentedFontDataEEEFvNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!14 = !{!15, !17, !12}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZN5blink20CSSSegmentedFontFace11GetFontDataERKNS3_15FontDescriptionEE3$_1JRS5_R13scoped_refptrINS3_17SegmentedFontDataEEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZN5blink20CSSSegmentedFontFace11GetFontDataERKNS3_15FontDescriptionEE3$_1JRS5_R13scoped_refptrINS3_17SegmentedFontDataEEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base13BindRepeatingIRZN5blink20CSSSegmentedFontFace11GetFontDataERKNS1_15FontDescriptionEE3$_1JRS3_R13scoped_refptrINS1_17SegmentedFontDataEEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!18 = distinct !{!18, !"_ZN4base13BindRepeatingIRZN5blink20CSSSegmentedFontFace11GetFontDataERKNS1_15FontDescriptionEE3$_1JRS3_R13scoped_refptrINS1_17SegmentedFontDataEEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!19 = !{!"branch_weights", i32 1, i32 2000}
!20 = !{!21, !23, !25}
!21 = distinct !{!21, !22, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbRKNS2_IFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EEEDcOT0_DpOT1_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbRKNS2_IFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EEEDcOT0_DpOT1_"}
!23 = distinct !{!23, !24, !"_ZN4base13BindRepeatingIRPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS2_8FontFaceEEEEEES5_EJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!24 = distinct !{!24, !"_ZN4base13BindRepeatingIRPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS2_8FontFaceEEEEEES5_EJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!25 = distinct !{!25, !26, !"_ZN3WTF13BindRepeatingIPFbRKN4base17RepeatingCallbackIFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EFbS6_EEENS2_IT1_EET_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF13BindRepeatingIPFbRKN4base17RepeatingCallbackIFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EFbS6_EEENS2_IT1_EET_DpOT0_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3WTF13BindRepeatingIZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS1_15FontDescriptionERKNS_6StringEE3$_2JS5_S8_EFbNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF13BindRepeatingIZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS1_15FontDescriptionERKNS_6StringEE3$_2JS5_S8_EFbNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!30 = !{!31, !33, !28}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS3_15FontDescriptionERKN3WTF6StringEE3$_2JS7_SB_EEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS3_15FontDescriptionERKN3WTF6StringEE3$_2JS7_SB_EEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base13BindRepeatingIRZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS1_15FontDescriptionERKN3WTF6StringEE3$_2JS5_S9_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!34 = distinct !{!34, !"_ZN4base13BindRepeatingIRZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS1_15FontDescriptionERKN3WTF6StringEE3$_2JS5_S9_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!35 = !{!36, !38, !40}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS3_15FontDescriptionERKNS3_19FontDataForRangeSetEE3$_3JS7_SA_EEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS3_15FontDescriptionERKNS3_19FontDataForRangeSetEE3$_3JS7_SA_EEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base13BindRepeatingIRZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS1_15FontDescriptionERKNS1_19FontDataForRangeSetEE3$_3JS5_S8_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!39 = distinct !{!39, !"_ZN4base13BindRepeatingIRZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS1_15FontDescriptionERKNS1_19FontDataForRangeSetEE3$_3JS5_S8_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!40 = distinct !{!40, !41, !"_ZN3WTF13BindRepeatingIZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS1_15FontDescriptionERKNS1_19FontDataForRangeSetEE3$_3JS5_S8_EFbNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZN3WTF13BindRepeatingIZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS1_15FontDescriptionERKNS1_19FontDataForRangeSetEE3$_3JS5_S8_EFbNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN3WTF13BindRepeatingIZNK5blink20CSSSegmentedFontFace9CheckFontERKNS_6StringEE3$_4JS5_EFbNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZN3WTF13BindRepeatingIZNK5blink20CSSSegmentedFontFace9CheckFontERKNS_6StringEE3$_4JS5_EFbNS1_6MemberINS1_8FontFaceEEEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!45 = !{!46, !48, !43}
!46 = distinct !{!46, !47, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringEE3$_4JS8_EEEDcOT0_DpOT1_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringEE3$_4JS8_EEEDcOT0_DpOT1_"}
!48 = distinct !{!48, !49, !"_ZN4base13BindRepeatingIRZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringEE3$_4JS6_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!49 = distinct !{!49, !"_ZN4base13BindRepeatingIRZNK5blink20CSSSegmentedFontFace9CheckFontERKN3WTF6StringEE3$_4JS6_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!50 = !{!51, !53, !55}
!51 = distinct !{!51, !52, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbRKNS2_IFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EEEDcOT0_DpOT1_: argument 0"}
!52 = distinct !{!52, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbRKNS2_IFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EEEDcOT0_DpOT1_"}
!53 = distinct !{!53, !54, !"_ZN4base13BindRepeatingIRPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS2_8FontFaceEEEEEES5_EJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!54 = distinct !{!54, !"_ZN4base13BindRepeatingIRPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS2_8FontFaceEEEEEES5_EJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!55 = distinct !{!55, !56, !"_ZN3WTF13BindRepeatingIPFbRKN4base17RepeatingCallbackIFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_ES7_EENS2_IT1_EET_DpOT0_: argument 0"}
!56 = distinct !{!56, !"_ZN3WTF13BindRepeatingIPFbRKN4base17RepeatingCallbackIFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_ES7_EENS2_IT1_EET_DpOT0_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN5blink22WrapPersistentInternalINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEEEENS_10PersistentIT_EEPS7_: argument 0"}
!59 = distinct !{!59, !"_ZN5blink22WrapPersistentInternalINS_10HeapVectorINS_6MemberINS_8FontFaceEEELj0EEEEENS_10PersistentIT_EEPS7_"}
!60 = !{!61, !63, !65}
!61 = distinct !{!61, !62, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS3_10HeapVectorINS3_6MemberINS3_8FontFaceEEELj0EEEE3$_5JS8_NS3_10PersistentISD_EEEEEDcOT0_DpOT1_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS3_10HeapVectorINS3_6MemberINS3_8FontFaceEEELj0EEEE3$_5JS8_NS3_10PersistentISD_EEEEEDcOT0_DpOT1_"}
!63 = distinct !{!63, !64, !"_ZN4base13BindRepeatingIRZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS1_10HeapVectorINS1_6MemberINS1_8FontFaceEEELj0EEEE3$_5JS6_NS1_10PersistentISB_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!64 = distinct !{!64, !"_ZN4base13BindRepeatingIRZNK5blink20CSSSegmentedFontFace5MatchERKN3WTF6StringEPNS1_10HeapVectorINS1_6MemberINS1_8FontFaceEEELj0EEEE3$_5JS6_NS1_10PersistentISB_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!65 = distinct !{!65, !66, !"_ZN3WTF13BindRepeatingIZNK5blink20CSSSegmentedFontFace5MatchERKNS_6StringEPNS1_10HeapVectorINS1_6MemberINS1_8FontFaceEEELj0EEEE3$_5JS5_NS1_10PersistentISA_EEEFvS9_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!66 = distinct !{!66, !"_ZN3WTF13BindRepeatingIZNK5blink20CSSSegmentedFontFace5MatchERKNS_6StringEPNS1_10HeapVectorINS1_6MemberINS1_8FontFaceEEELj0EEEE3$_5JS5_NS1_10PersistentISA_EEEFvS9_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!67 = !{!68, !70, !72}
!68 = distinct !{!68, !69, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbRKNS2_IFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EEEDcOT0_DpOT1_: argument 0"}
!69 = distinct !{!69, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbRKNS2_IFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EEEDcOT0_DpOT1_"}
!70 = distinct !{!70, !71, !"_ZN4base13BindRepeatingIRPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS2_8FontFaceEEEEEES5_EJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!71 = distinct !{!71, !"_ZN4base13BindRepeatingIRPFbRKNS_17RepeatingCallbackIFvN5blink6MemberINS2_8FontFaceEEEEEES5_EJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!72 = distinct !{!72, !73, !"_ZN3WTF13BindRepeatingIPFbRKN4base17RepeatingCallbackIFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EFbS6_EEENS2_IT1_EET_DpOT0_: argument 0"}
!73 = distinct !{!73, !"_ZN3WTF13BindRepeatingIPFbRKN4base17RepeatingCallbackIFvN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EFbS6_EEENS2_IT1_EET_DpOT0_"}
!74 = !{!75, !77, !79}
!75 = distinct !{!75, !76, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbRKNS2_IFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EEEDcOT0_DpOT1_: argument 0"}
!76 = distinct !{!76, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbRKNS2_IFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_EEEDcOT0_DpOT1_"}
!77 = distinct !{!77, !78, !"_ZN4base13BindRepeatingIRPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS2_8FontFaceEEEEEES5_EJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!78 = distinct !{!78, !"_ZN4base13BindRepeatingIRPFbRKNS_17RepeatingCallbackIFbN5blink6MemberINS2_8FontFaceEEEEEES5_EJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!79 = distinct !{!79, !80, !"_ZN3WTF13BindRepeatingIPFbRKN4base17RepeatingCallbackIFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_ES7_EENS2_IT1_EET_DpOT0_: argument 0"}
!80 = distinct !{!80, !"_ZN3WTF13BindRepeatingIPFbRKN4base17RepeatingCallbackIFbN5blink6MemberINS3_8FontFaceEEEEEES6_EJSA_ES7_EENS2_IT1_EET_DpOT0_"}
!81 = !{i8 0, i8 2}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!84 = distinct !{!84, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!87 = distinct !{!87, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashES4_E21MappedListNodeWithKeyENS5_14default_deleteISD_EEEEEEE10EmptyValueEv: argument 0"}
!90 = distinct !{!90, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashES4_E21MappedListNodeWithKeyENS5_14default_deleteISD_EEEEEEE10EmptyValueEv"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!93 = distinct !{!93, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashES4_E21MappedListNodeWithKeyENS5_14default_deleteISD_EEEEEEE10EmptyValueEv: argument 0"}
!96 = distinct !{!96, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashES4_E21MappedListNodeWithKeyENS5_14default_deleteISD_EEEEEEE10EmptyValueEv"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!99 = distinct !{!99, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashES4_E21MappedListNodeWithKeyENS5_14default_deleteISD_EEEEEEE10EmptyValueEv: argument 0"}
!102 = distinct !{!102, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink12FontCacheKeyEEENS1_INSt3__110unique_ptrINS_8LruCacheIS3_13scoped_refptrINS2_17SegmentedFontDataEENS2_16FontCacheKeyHashES4_E21MappedListNodeWithKeyENS5_14default_deleteISD_EEEEEEE10EmptyValueEv"}
