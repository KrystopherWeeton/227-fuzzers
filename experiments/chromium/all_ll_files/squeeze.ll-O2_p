; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/squeeze.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/squeeze.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteSqueezeParams = type { [8 x i32], i32 }

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/squeeze.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"input_num_dims <= 8\00", align 1
@.str.7 = private unnamed_addr constant [75 x i8] c"current >= 0 && current < input_num_dims && input_dims->data[current] == 1\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"op_context.input->bytes\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"op_context.output->bytes\00", align 1
@_ZZN6tflite3ops7builtin16Register_SQUEEZEEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7squeeze7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7squeeze4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7squeeze7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to [8 x i8]*
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %12 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %11, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %12(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %8, i32 1) #4
  br label %230

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %17, i32 1) #4
  br label %230

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %24 = bitcast i8** %23 to %struct.TfLiteSqueezeParams**
  %25 = load %struct.TfLiteSqueezeParams*, %struct.TfLiteSqueezeParams** %24, align 8
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %29, %22
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %22 ]
  %36 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %41 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %40, align 8
  %42 = sext i32 %37 to i64
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 %42
  br label %44

44:                                               ; preds = %34, %39
  %45 = phi %struct.TfLiteTensor* [ %43, %39 ], [ null, %34 ]
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct.TfLiteSqueezeParams, %struct.TfLiteSqueezeParams* %25, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %49, 9
  br i1 %52, label %56, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %55 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %54, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %55(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0)) #4
  br label %230

56:                                               ; preds = %44
  %57 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #4
  store i64 0, i64* %3, align 8
  %58 = icmp eq i32 %51, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = icmp sgt i32 %51, 0
  br i1 %60, label %61, label %180

61:                                               ; preds = %59
  %62 = zext i32 %51 to i64
  br label %153

63:                                               ; preds = %56
  %64 = icmp sgt i32 %49, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %49) #4
  br label %204

67:                                               ; preds = %63
  %68 = zext i32 %49 to i64
  %69 = icmp ult i32 %49, 8
  br i1 %69, label %137, label %70

70:                                               ; preds = %67
  %71 = and i64 %68, 4294967288
  br label %72

72:                                               ; preds = %122, %70
  %73 = phi i64 [ 0, %70 ], [ %127, %122 ]
  %74 = phi <4 x i32> [ zeroinitializer, %70 ], [ %124, %122 ]
  %75 = phi <4 x i32> [ zeroinitializer, %70 ], [ %126, %122 ]
  %76 = or i64 %73, 4
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 %73
  %78 = bitcast i32* %77 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 4
  %80 = getelementptr inbounds i32, i32* %77, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = icmp eq <4 x i32> %79, <i32 1, i32 1, i32 1, i32 1>
  %84 = icmp eq <4 x i32> %82, <i32 1, i32 1, i32 1, i32 1>
  %85 = extractelement <4 x i1> %83, i32 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %72
  %87 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %73
  store i8 1, i8* %87, align 8
  br label %88

88:                                               ; preds = %86, %72
  %89 = extractelement <4 x i1> %83, i32 1
  br i1 %89, label %90, label %93

90:                                               ; preds = %88
  %91 = or i64 %73, 1
  %92 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %91
  store i8 1, i8* %92, align 1
  br label %93

93:                                               ; preds = %90, %88
  %94 = extractelement <4 x i1> %83, i32 2
  br i1 %94, label %95, label %98

95:                                               ; preds = %93
  %96 = or i64 %73, 2
  %97 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %96
  store i8 1, i8* %97, align 2
  br label %98

98:                                               ; preds = %95, %93
  %99 = extractelement <4 x i1> %83, i32 3
  br i1 %99, label %100, label %103

100:                                              ; preds = %98
  %101 = or i64 %73, 3
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %101
  store i8 1, i8* %102, align 1
  br label %103

103:                                              ; preds = %100, %98
  %104 = extractelement <4 x i1> %84, i32 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %76
  store i8 1, i8* %106, align 4
  br label %107

107:                                              ; preds = %105, %103
  %108 = extractelement <4 x i1> %84, i32 1
  br i1 %108, label %109, label %112

109:                                              ; preds = %107
  %110 = or i64 %73, 5
  %111 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %110
  store i8 1, i8* %111, align 1
  br label %112

112:                                              ; preds = %109, %107
  %113 = extractelement <4 x i1> %84, i32 2
  br i1 %113, label %114, label %117

114:                                              ; preds = %112
  %115 = or i64 %73, 6
  %116 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %115
  store i8 1, i8* %116, align 2
  br label %117

117:                                              ; preds = %114, %112
  %118 = extractelement <4 x i1> %84, i32 3
  br i1 %118, label %119, label %122

119:                                              ; preds = %117
  %120 = or i64 %73, 7
  %121 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %120
  store i8 1, i8* %121, align 1
  br label %122

122:                                              ; preds = %119, %117
  %123 = zext <4 x i1> %83 to <4 x i32>
  %124 = add nuw nsw <4 x i32> %74, %123
  %125 = zext <4 x i1> %84 to <4 x i32>
  %126 = add nuw nsw <4 x i32> %75, %125
  %127 = add i64 %73, 8
  %128 = icmp eq i64 %127, %71
  br i1 %128, label %129, label %72, !llvm.loop !2

129:                                              ; preds = %122
  %130 = add nuw <4 x i32> %126, %124
  %131 = shufflevector <4 x i32> %130, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %132 = add <4 x i32> %130, %131
  %133 = shufflevector <4 x i32> %132, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %134 = add <4 x i32> %132, %133
  %135 = extractelement <4 x i32> %134, i32 0
  %136 = icmp eq i64 %71, %68
  br i1 %136, label %180, label %137

137:                                              ; preds = %129, %67
  %138 = phi i64 [ 0, %67 ], [ %71, %129 ]
  %139 = phi i32 [ 0, %67 ], [ %135, %129 ]
  br label %140

140:                                              ; preds = %137, %149
  %141 = phi i64 [ %151, %149 ], [ %138, %137 ]
  %142 = phi i32 [ %150, %149 ], [ %139, %137 ]
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 %141
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %149

146:                                              ; preds = %140
  %147 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %141
  store i8 1, i8* %147, align 1
  %148 = add nsw i32 %142, 1
  br label %149

149:                                              ; preds = %140, %146
  %150 = phi i32 [ %148, %146 ], [ %142, %140 ]
  %151 = add nuw nsw i64 %141, 1
  %152 = icmp eq i64 %151, %68
  br i1 %152, label %180, label %140, !llvm.loop !4

153:                                              ; preds = %169, %61
  %154 = phi i64 [ 0, %61 ], [ %175, %169 ]
  %155 = phi i32 [ 0, %61 ], [ %174, %169 ]
  %156 = getelementptr inbounds %struct.TfLiteSqueezeParams, %struct.TfLiteSqueezeParams* %25, i64 0, i32 0, i64 %154
  %157 = load i32, i32* %156, align 4
  %158 = icmp slt i32 %157, 0
  %159 = select i1 %158, i32 %49, i32 0
  %160 = add nsw i32 %159, %157
  %161 = icmp sgt i32 %160, -1
  %162 = icmp slt i32 %160, %49
  %163 = and i1 %161, %162
  br i1 %163, label %164, label %177

164:                                              ; preds = %153
  %165 = sext i32 %160 to i64
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %177

169:                                              ; preds = %164
  %170 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %165
  %171 = load i8, i8* %170, align 1, !range !6
  %172 = xor i8 %171, 1
  %173 = zext i8 %172 to i32
  %174 = add nuw nsw i32 %155, %173
  store i8 1, i8* %170, align 1
  %175 = add nuw nsw i64 %154, 1
  %176 = icmp eq i64 %175, %62
  br i1 %176, label %180, label %153

177:                                              ; preds = %153, %164
  %178 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %179 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %178, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %179(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.7, i64 0, i64 0)) #4
  br label %228

180:                                              ; preds = %169, %149, %129, %59
  %181 = phi i32 [ 0, %59 ], [ %135, %129 ], [ %150, %149 ], [ %174, %169 ]
  %182 = sub nsw i32 %49, %181
  %183 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %182) #4
  %184 = icmp sgt i32 %49, 0
  br i1 %184, label %185, label %204

185:                                              ; preds = %180
  %186 = zext i32 %49 to i64
  %187 = and i64 %186, 1
  %188 = icmp eq i32 %49, 1
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  %190 = sub nsw i64 %186, %187
  br label %209

191:                                              ; preds = %238, %185
  %192 = phi i64 [ 0, %185 ], [ %240, %238 ]
  %193 = phi i32 [ 0, %185 ], [ %239, %238 ]
  %194 = icmp eq i64 %187, 0
  br i1 %194, label %204, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %192
  %197 = load i8, i8* %196, align 1, !range !6
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %204

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 %192
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %193 to i64
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %202
  store i32 %201, i32* %203, align 4
  br label %204

204:                                              ; preds = %191, %195, %199, %65, %180
  %205 = phi %struct.TfLiteIntArray* [ %66, %65 ], [ %183, %180 ], [ %183, %199 ], [ %183, %195 ], [ %183, %191 ]
  %206 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %207 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %206, align 8
  %208 = tail call i32 %207(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %45, %struct.TfLiteIntArray* %205) #4
  br label %228

209:                                              ; preds = %238, %189
  %210 = phi i64 [ 0, %189 ], [ %240, %238 ]
  %211 = phi i32 [ 0, %189 ], [ %239, %238 ]
  %212 = phi i64 [ %190, %189 ], [ %241, %238 ]
  %213 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %210
  %214 = load i8, i8* %213, align 2, !range !6
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %222

216:                                              ; preds = %209
  %217 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 %210
  %218 = load i32, i32* %217, align 4
  %219 = add nsw i32 %211, 1
  %220 = sext i32 %211 to i64
  %221 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %220
  store i32 %218, i32* %221, align 4
  br label %222

222:                                              ; preds = %209, %216
  %223 = phi i32 [ %211, %209 ], [ %219, %216 ]
  %224 = or i64 %210, 1
  %225 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1, !range !6
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %232, label %238

228:                                              ; preds = %177, %204
  %229 = phi i32 [ %208, %204 ], [ 1, %177 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #4
  br label %230

230:                                              ; preds = %53, %228, %19, %10
  %231 = phi i32 [ 1, %10 ], [ 1, %19 ], [ %229, %228 ], [ 1, %53 ]
  ret i32 %231

232:                                              ; preds = %222
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 %224
  %234 = load i32, i32* %233, align 4
  %235 = add nsw i32 %223, 1
  %236 = sext i32 %223 to i64
  %237 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 %236
  store i32 %234, i32* %237, align 4
  br label %238

238:                                              ; preds = %232, %222
  %239 = phi i32 [ %223, %222 ], [ %235, %232 ]
  %240 = add nuw nsw i64 %210, 2
  %241 = add i64 %212, -2
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %191, label %209
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7squeeze4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %13, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 5
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 5
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %34 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %33, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %34(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i64 %28, i64 %30) #4
  br label %42

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %37 = bitcast %union.TfLitePtrUnion* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %40 = bitcast %union.TfLitePtrUnion* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %41, i64 %28, i1 false)
  br label %42

42:                                               ; preds = %35, %32
  %43 = phi i32 [ 1, %32 ], [ 0, %35 ]
  ret i32 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_SQUEEZEEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_SQUEEZEEvE1r to %struct.TfLiteRegistration*)
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = !{i8 0, i8 2}
