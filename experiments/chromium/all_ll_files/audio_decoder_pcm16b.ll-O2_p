; ModuleID = '../../third_party/webrtc/modules/audio_coding/codecs/pcm16b/audio_decoder_pcm16b.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/codecs/pcm16b/audio_decoder_pcm16b.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::AudioDecoderPcm16B" = type { %"class.webrtc::AudioDecoder", i32, i64 }
%"class.webrtc::AudioDecoder" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::AudioDecoder::ParseResult"*, %"struct.webrtc::AudioDecoder::ParseResult"*, %"class.std::__1::__compressed_pair.7" }
%"struct.webrtc::AudioDecoder::ParseResult" = type { i32, i32, %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.webrtc::AudioDecoder::EncodedAudioFrame"* }
%"class.webrtc::AudioDecoder::EncodedAudioFrame" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.webrtc::AudioDecoder::ParseResult"* }
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.rtc::BufferT.10" = type opaque

$_ZN6webrtc12AudioDecoderD2Ev = comdat any

$_ZN6webrtc18AudioDecoderPcm16BD0Ev = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = comdat any

@_ZTVN6webrtc18AudioDecoderPcm16BE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::AudioDecoder"*)* @_ZN6webrtc12AudioDecoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoderPcm16B"*)* @_ZN6webrtc18AudioDecoderPcm16BD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.webrtc::AudioDecoderPcm16B"*, %"class.rtc::BufferT"*, i32)* @_ZN6webrtc18AudioDecoderPcm16B12ParsePayloadEON3rtc7BufferTIhLb0EEEj to i8*), i8* bitcast (i1 (%"class.webrtc::AudioDecoder"*)* @_ZNK6webrtc12AudioDecoder12HasDecodePlcEv to i8*), i8* bitcast (i64 (%"class.webrtc::AudioDecoder"*, i64, i16*)* @_ZN6webrtc12AudioDecoder9DecodePlcEmPs to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoder"*, i64, %"class.rtc::BufferT.10"*)* @_ZN6webrtc12AudioDecoder11GeneratePlcEmPN3rtc7BufferTIsLb0EEE to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoderPcm16B"*)* @_ZN6webrtc18AudioDecoderPcm16B5ResetEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*)* @_ZN6webrtc12AudioDecoder9ErrorCodeEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcm16B"*, i8*, i64)* @_ZNK6webrtc18AudioDecoderPcm16B14PacketDurationEPKhm to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*, i8*, i64)* @_ZNK6webrtc12AudioDecoder23PacketDurationRedundantEPKhm to i8*), i8* bitcast (i1 (%"class.webrtc::AudioDecoder"*, i8*, i64)* @_ZNK6webrtc12AudioDecoder12PacketHasFecEPKhm to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcm16B"*)* @_ZNK6webrtc18AudioDecoderPcm16B12SampleRateHzEv to i8*), i8* bitcast (i64 (%"class.webrtc::AudioDecoderPcm16B"*)* @_ZNK6webrtc18AudioDecoderPcm16B8ChannelsEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcm16B"*, i8*, i64, i32, i16*, i32*)* @_ZN6webrtc18AudioDecoderPcm16B14DecodeInternalEPKhmiPsPNS_12AudioDecoder10SpeechTypeE to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*, i8*, i64, i32, i16*, i32*)* @_ZN6webrtc12AudioDecoder23DecodeRedundantInternalEPKhmiPsPNS0_10SpeechTypeE to i8*)] }, align 8
@.str = private unnamed_addr constant [43 x i8] c"../../third_party/webrtc/rtc_base/checks.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"a % b == 0\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c" is not evenly divisible by \00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = linkonce_odr hidden constant [7 x i8] c"\0D\01\01\01\09\01\00", comdat, align 1

@_ZN6webrtc18AudioDecoderPcm16BC1Eim = hidden unnamed_addr alias void (%"class.webrtc::AudioDecoderPcm16B"*, i32, i64), void (%"class.webrtc::AudioDecoderPcm16B"*, i32, i64)* @_ZN6webrtc18AudioDecoderPcm16BC2Eim

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc18AudioDecoderPcm16BC2Eim(%"class.webrtc::AudioDecoderPcm16B"* nocapture, i32, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN6webrtc18AudioDecoderPcm16BE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc18AudioDecoderPcm16B5ResetEv(%"class.webrtc::AudioDecoderPcm16B"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc18AudioDecoderPcm16B12SampleRateHzEv(%"class.webrtc::AudioDecoderPcm16B"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc18AudioDecoderPcm16B8ChannelsEv(%"class.webrtc::AudioDecoderPcm16B"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc18AudioDecoderPcm16B14DecodeInternalEPKhmiPsPNS_12AudioDecoder10SpeechTypeE(%"class.webrtc::AudioDecoderPcm16B"* nocapture readnone, i8*, i64, i32, i16*, i32* nocapture) unnamed_addr #3 align 2 {
  %7 = tail call i64 @WebRtcPcm16b_Decode(i8* %1, i64 %2, i16* %4) #8
  %8 = tail call i32 @_ZN6webrtc12AudioDecoder17ConvertSpeechTypeEs(i16 signext 1) #8
  store i32 %8, i32* %5, align 4
  %9 = trunc i64 %7 to i32
  ret i32 %9
}

declare i64 @WebRtcPcm16b_Decode(i8*, i64, i16*) local_unnamed_addr #4

declare i32 @_ZN6webrtc12AudioDecoder17ConvertSpeechTypeEs(i16 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18AudioDecoderPcm16B12ParsePayloadEON3rtc7BufferTIhLb0EEEj(%"class.std::__1::vector"* noalias sret, %"class.webrtc::AudioDecoderPcm16B"*, %"class.rtc::BufferT"* dereferenceable(24), i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = srem i32 %6, 1000
  %8 = sdiv i32 %6, 1000
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %7, i32 0, i32 %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 1000) #9
  unreachable

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %1, i64 0, i32 0
  %13 = shl nsw i32 %8, 1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %1, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = mul i64 %16, %14
  tail call void @_ZN6webrtc23LegacyEncodedAudioFrame14SplitBySamplesEPNS_12AudioDecoderEON3rtc7BufferTIhLb0EEEjmj(%"class.std::__1::vector"* sret %0, %"class.webrtc::AudioDecoder"* %12, %"class.rtc::BufferT"* dereferenceable(24) %2, i32 %3, i64 %17, i32 %8) #8
  ret void
}

declare void @_ZN6webrtc23LegacyEncodedAudioFrame14SplitBySamplesEPNS_12AudioDecoderEON3rtc7BufferTIhLb0EEEjmj(%"class.std::__1::vector"* sret, %"class.webrtc::AudioDecoder"*, %"class.rtc::BufferT"* dereferenceable(24), i32, i64, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc18AudioDecoderPcm16B14PacketDurationEPKhm(%"class.webrtc::AudioDecoderPcm16B"* nocapture readonly, i8* nocapture readnone, i64) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::AudioDecoderPcm16B", %"class.webrtc::AudioDecoderPcm16B"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = shl i64 %5, 1
  %7 = udiv i64 %2, %6
  %8 = trunc i64 %7 to i32
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc12AudioDecoderD2Ev(%"class.webrtc::AudioDecoder"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc18AudioDecoderPcm16BD0Ev(%"class.webrtc::AudioDecoderPcm16B"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.webrtc::AudioDecoderPcm16B"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

declare zeroext i1 @_ZNK6webrtc12AudioDecoder12HasDecodePlcEv(%"class.webrtc::AudioDecoder"*) unnamed_addr #4

declare i64 @_ZN6webrtc12AudioDecoder9DecodePlcEmPs(%"class.webrtc::AudioDecoder"*, i64, i16*) unnamed_addr #4

declare void @_ZN6webrtc12AudioDecoder11GeneratePlcEmPN3rtc7BufferTIsLb0EEE(%"class.webrtc::AudioDecoder"*, i64, %"class.rtc::BufferT.10"*) unnamed_addr #4

declare i32 @_ZN6webrtc12AudioDecoder9ErrorCodeEv(%"class.webrtc::AudioDecoder"*) unnamed_addr #4

declare i32 @_ZNK6webrtc12AudioDecoder23PacketDurationRedundantEPKhm(%"class.webrtc::AudioDecoder"*, i8*, i64) unnamed_addr #4

declare zeroext i1 @_ZNK6webrtc12AudioDecoder12PacketHasFecEPKhm(%"class.webrtc::AudioDecoder"*, i8*, i64) unnamed_addr #4

declare i32 @_ZN6webrtc12AudioDecoder23DecodeRedundantInternalEPKhmiPsPNS0_10SpeechTypeE(%"class.webrtc::AudioDecoder"*, i8*, i64, i32, i16*, i32*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
