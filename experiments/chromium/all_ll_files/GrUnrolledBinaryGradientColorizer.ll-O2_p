; ModuleID = '../../third_party/skia/src/gpu/gradients/generated/GrUnrolledBinaryGradientColorizer.cpp'
source_filename = "../../third_party/skia/src/gpu/gradients/generated/GrUnrolledBinaryGradientColorizer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrUnrolledBinaryGradientColorizer = type { %class.GrFragmentProcessor.base, i32, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRGBA4f, %struct.SkRect, %struct.SkRect }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.3 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.3 = type { %"class.std::__1::unique_ptr.4"*, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%struct.SkRect = type { float, float, float, float }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.1 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrGLSLFragmentProcessor* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.16*, i32, i32 }
%class.SkTArray.16 = type { i32*, i64 }
%class.GrGLSLUnrolledBinaryGradientColorizer = type { %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.26, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.28, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.37], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::vector", i32, %class.SkSTArray.118 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.39, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.39 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.40, i32, [4 x i8] }>
%class.SkSTArray.40 = type { %class.SkAlignedSTStorage.41, %class.SkTArray.16 }
%class.SkAlignedSTStorage.41 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.42, i32, [4 x i8] }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.91, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.45, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.45 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.46, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.85" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.46 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.50 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.47, [4 x i8] }>
%union.anon.47 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.48, i8* }
%class.sk_sp.48 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.49, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.49 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.50 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.51, void (i8*)*, i8* }
%class.SkNVRefCnt.51 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.46, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.82, %class.sk_sp.84, %class.sk_sp.84 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.58, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.58 = type { %class.SkTHashTable.59 }
%class.SkTHashTable.59 = type { i32, i32, %class.SkAutoTArray.60 }
%class.SkAutoTArray.60 = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.67, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.67 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.68" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.73, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.73 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.74 }
%class.SkTHashTable.74 = type { i32, i32, %class.SkAutoTArray.75 }
%class.SkAutoTArray.75 = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.82 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.83, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.83 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.84 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.90 }
%union.anon.90 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.91 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.92, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.92 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.93"*, [24 x i8] }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.99, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.99 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.103 }
%class.SkTArray.103 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::unique_ptr"* }
%class.SkSTArray.118 = type { %class.SkAlignedSTStorage.119, %class.SkTArray.120 }
%class.SkAlignedSTStorage.119 = type { [160 x i8] }
%class.SkTArray.120 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.26 = type { %class.SkAlignedSTStorage.27, %class.SkTArray }
%class.SkAlignedSTStorage.27 = type { [120 x i8] }
%class.SkSTArray.28 = type { %class.SkAlignedSTStorage.29, %class.SkTArray.30 }
%class.SkAlignedSTStorage.29 = type { [16 x i8] }
%class.SkTArray.30 = type { %"class.std::__1::unique_ptr.31"*, i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.37 = type { %class.SkAlignedSTStorage.38, %class.SkTArray }
%class.SkAlignedSTStorage.38 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.26, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.28, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.37], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN33GrUnrolledBinaryGradientColorizerD0Ev = comdat any

$_ZNK33GrUnrolledBinaryGradientColorizer4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN37GrGLSLUnrolledBinaryGradientColorizerD0Ev = comdat any

$_ZN37GrGLSLUnrolledBinaryGradientColorizer8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN37GrGLSLUnrolledBinaryGradientColorizer9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV37GrGLSLUnrolledBinaryGradientColorizer = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [14 x i8] c"intervalCount\00", align 1
@_ZTV33GrUnrolledBinaryGradientColorizer = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrUnrolledBinaryGradientColorizer*)* @_ZN33GrUnrolledBinaryGradientColorizerD0Ev to i8*), i8* bitcast (i8* (%class.GrUnrolledBinaryGradientColorizer*)* @_ZNK33GrUnrolledBinaryGradientColorizer4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrUnrolledBinaryGradientColorizer*)* @_ZNK33GrUnrolledBinaryGradientColorizer5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrUnrolledBinaryGradientColorizer*)* @_ZNK33GrUnrolledBinaryGradientColorizer17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrUnrolledBinaryGradientColorizer*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK33GrUnrolledBinaryGradientColorizer21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrUnrolledBinaryGradientColorizer*, %class.GrFragmentProcessor*)* @_ZNK33GrUnrolledBinaryGradientColorizer9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [32 x i8] c"UnrolledBinaryGradientColorizer\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTV37GrGLSLUnrolledBinaryGradientColorizer = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLUnrolledBinaryGradientColorizer*)* @_ZN37GrGLSLUnrolledBinaryGradientColorizerD0Ev to i8*), i8* bitcast (void (%class.GrGLSLUnrolledBinaryGradientColorizer*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN37GrGLSLUnrolledBinaryGradientColorizer8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLUnrolledBinaryGradientColorizer*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN37GrGLSLUnrolledBinaryGradientColorizer9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"scale0_1\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"scale2_3\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"scale4_5\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"scale6_7\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"scale8_9\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"scale10_11\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"scale12_13\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"scale14_15\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"bias0_1\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"bias2_3\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"bias4_5\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"bias6_7\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"bias8_9\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"bias10_11\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"bias12_13\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"bias14_15\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"thresholds1_7\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"thresholds9_13\00", align 1
@.str.22 = private unnamed_addr constant [851 x i8] c"half t = half(%s.x);\0Afloat4 scale;\0Afloat4 bias;\0A\0Aif (%d <= 4 || t < %s.w) {\0A    if (%d <= 2 || t < %s.y) {\0A        if (%d <= 1 || t < %s.x) {\0A            scale = %s;\0A            bias = %s;\0A        } else {\0A            scale = %s;\0A            bias = %s;\0A        }\0A    } else {\0A        if (%d <= 3 || t < %s.z) {\0A            scale = %s;\0A            bias = %s;\0A        } else {\0A            scale = %s;\0A            bias = %s;\0A        }\0A    }\0A} else {\0A    if (%d <= 6 || t < %s.y) {\0A        if (%d <= 5 || t < %s.x) {\0A            scale = %s;\0A            bias = %s;\0A        } else {\0A            scale = %s;\0A            bias = %s;\0A        }\0A    } else {\0A        if (%d <= 7 || t < %s.z) {\0A            scale = %s;\0A            bias = %s;\0A        } else {\0A            scale = %s;\0A            bias = %s;\0A        }\0A    }\0A}\0Areturn half4(float(t) * scale + bias);\0A\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"float4(0)\00", align 1

@_ZN33GrUnrolledBinaryGradientColorizerC1ERKS_ = hidden unnamed_addr alias void (%class.GrUnrolledBinaryGradientColorizer*, %class.GrUnrolledBinaryGradientColorizer*), void (%class.GrUnrolledBinaryGradientColorizer*, %class.GrUnrolledBinaryGradientColorizer*)* @_ZN33GrUnrolledBinaryGradientColorizerC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK33GrUnrolledBinaryGradientColorizer17onMakeProgramImplEv(%class.GrUnrolledBinaryGradientColorizer* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 112) #13
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV37GrGLSLUnrolledBinaryGradientColorizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 -1, i64 72, i1 false) #12
  %13 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK33GrUnrolledBinaryGradientColorizer21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrUnrolledBinaryGradientColorizer* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %7 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %7, i64 2
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, align 8
  tail call void %9(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK33GrUnrolledBinaryGradientColorizer9onIsEqualERK19GrFragmentProcessor(%class.GrUnrolledBinaryGradientColorizer* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %6 = bitcast [4 x i8]* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %4, %7
  br i1 %8, label %9, label %508

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %11 = bitcast %class.GrFragmentProcessor* %10 to %struct.SkRGBA4f*
  %12 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 2, i32 3
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 2
  %15 = bitcast i32* %14 to float*
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %13, %16
  br i1 %17, label %18, label %508

18:                                               ; preds = %9
  %19 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 2, i32 0
  %20 = load float, float* %19, align 4
  %21 = bitcast %class.GrFragmentProcessor* %10 to float*
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %20, %22
  br i1 %23, label %24, label %508

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 2, i32 1
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %11, i64 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = fcmp oeq float %26, %28
  br i1 %29, label %30, label %508

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 2, i32 2
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %34 = bitcast i32* %33 to float*
  %35 = load float, float* %34, align 4
  %36 = fcmp une float %32, %35
  br i1 %36, label %508, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 1
  %39 = bitcast %class.SkSTArray* %38 to %struct.SkRGBA4f*
  %40 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 3, i32 3
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %39, i64 0, i32 3
  %43 = load float, float* %42, align 4
  %44 = fcmp oeq float %41, %43
  br i1 %44, label %45, label %508

45:                                               ; preds = %37
  %46 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 3, i32 0
  %47 = load float, float* %46, align 4
  %48 = bitcast %class.SkSTArray* %38 to float*
  %49 = load float, float* %48, align 4
  %50 = fcmp oeq float %47, %49
  br i1 %50, label %51, label %508

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 3, i32 1
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 1, i32 0, i32 0, i64 4
  %55 = bitcast i8* %54 to float*
  %56 = load float, float* %55, align 4
  %57 = fcmp oeq float %53, %56
  br i1 %57, label %58, label %508

58:                                               ; preds = %51
  %59 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 3, i32 2
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 1, i32 1
  %62 = bitcast %class.SkTArray.3* %61 to float*
  %63 = load float, float* %62, align 4
  %64 = fcmp une float %60, %63
  br i1 %64, label %508, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 1, i32 1, i32 1
  %67 = bitcast i64* %66 to %struct.SkRGBA4f*
  %68 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 4, i32 3
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %67, i64 0, i32 3
  %71 = load float, float* %70, align 4
  %72 = fcmp oeq float %69, %71
  br i1 %72, label %73, label %508

73:                                               ; preds = %65
  %74 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 4, i32 0
  %75 = load float, float* %74, align 4
  %76 = bitcast i64* %66 to float*
  %77 = load float, float* %76, align 4
  %78 = fcmp oeq float %75, %77
  br i1 %78, label %79, label %508

79:                                               ; preds = %73
  %80 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 4, i32 1
  %81 = load float, float* %80, align 4
  %82 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %67, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = fcmp oeq float %81, %83
  br i1 %84, label %85, label %508

85:                                               ; preds = %79
  %86 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 4, i32 2
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds i64, i64* %66, i64 1
  %89 = bitcast i64* %88 to float*
  %90 = load float, float* %89, align 4
  %91 = fcmp une float %87, %90
  br i1 %91, label %508, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 3
  %94 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 5, i32 3
  %95 = load float, float* %94, align 4
  %96 = getelementptr inbounds i32, i32* %93, i64 3
  %97 = bitcast i32* %96 to float*
  %98 = load float, float* %97, align 4
  %99 = fcmp oeq float %95, %98
  br i1 %99, label %100, label %508

100:                                              ; preds = %92
  %101 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 5, i32 0
  %102 = load float, float* %101, align 4
  %103 = bitcast i32* %93 to float*
  %104 = load float, float* %103, align 4
  %105 = fcmp oeq float %102, %104
  br i1 %105, label %106, label %508

106:                                              ; preds = %100
  %107 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 5, i32 1
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds i32, i32* %93, i64 1
  %110 = bitcast i32* %109 to float*
  %111 = load float, float* %110, align 4
  %112 = fcmp oeq float %108, %111
  br i1 %112, label %113, label %508

113:                                              ; preds = %106
  %114 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 5, i32 2
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds i32, i32* %93, i64 2
  %117 = bitcast i32* %116 to float*
  %118 = load float, float* %117, align 4
  %119 = fcmp une float %115, %118
  br i1 %119, label %508, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2
  %122 = bitcast %class.GrFragmentProcessor* %121 to %struct.SkRGBA4f*
  %123 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 6, i32 3
  %124 = load float, float* %123, align 4
  %125 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 0, i32 2
  %126 = bitcast i32* %125 to float*
  %127 = load float, float* %126, align 4
  %128 = fcmp oeq float %124, %127
  br i1 %128, label %129, label %508

129:                                              ; preds = %120
  %130 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 6, i32 0
  %131 = load float, float* %130, align 4
  %132 = bitcast %class.GrFragmentProcessor* %121 to float*
  %133 = load float, float* %132, align 4
  %134 = fcmp oeq float %131, %133
  br i1 %134, label %135, label %508

135:                                              ; preds = %129
  %136 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 6, i32 1
  %137 = load float, float* %136, align 4
  %138 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %122, i64 0, i32 1
  %139 = load float, float* %138, align 4
  %140 = fcmp oeq float %137, %139
  br i1 %140, label %141, label %508

141:                                              ; preds = %135
  %142 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 6, i32 2
  %143 = load float, float* %142, align 4
  %144 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 0, i32 1
  %145 = bitcast i32* %144 to float*
  %146 = load float, float* %145, align 4
  %147 = fcmp une float %143, %146
  br i1 %147, label %508, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 1
  %150 = bitcast %class.SkSTArray* %149 to %struct.SkRGBA4f*
  %151 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 7, i32 3
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %150, i64 0, i32 3
  %154 = load float, float* %153, align 4
  %155 = fcmp oeq float %152, %154
  br i1 %155, label %156, label %508

156:                                              ; preds = %148
  %157 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 7, i32 0
  %158 = load float, float* %157, align 4
  %159 = bitcast %class.SkSTArray* %149 to float*
  %160 = load float, float* %159, align 4
  %161 = fcmp oeq float %158, %160
  br i1 %161, label %162, label %508

162:                                              ; preds = %156
  %163 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 7, i32 1
  %164 = load float, float* %163, align 4
  %165 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 1, i32 0, i32 0, i64 4
  %166 = bitcast i8* %165 to float*
  %167 = load float, float* %166, align 4
  %168 = fcmp oeq float %164, %167
  br i1 %168, label %169, label %508

169:                                              ; preds = %162
  %170 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 7, i32 2
  %171 = load float, float* %170, align 4
  %172 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 1, i32 1
  %173 = bitcast %class.SkTArray.3* %172 to float*
  %174 = load float, float* %173, align 4
  %175 = fcmp une float %171, %174
  br i1 %175, label %508, label %176

176:                                              ; preds = %169
  %177 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 1, i32 1, i32 1
  %178 = bitcast i64* %177 to %struct.SkRGBA4f*
  %179 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 8, i32 3
  %180 = load float, float* %179, align 4
  %181 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %178, i64 0, i32 3
  %182 = load float, float* %181, align 4
  %183 = fcmp oeq float %180, %182
  br i1 %183, label %184, label %508

184:                                              ; preds = %176
  %185 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 8, i32 0
  %186 = load float, float* %185, align 4
  %187 = bitcast i64* %177 to float*
  %188 = load float, float* %187, align 4
  %189 = fcmp oeq float %186, %188
  br i1 %189, label %190, label %508

190:                                              ; preds = %184
  %191 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 8, i32 1
  %192 = load float, float* %191, align 4
  %193 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %178, i64 0, i32 1
  %194 = load float, float* %193, align 4
  %195 = fcmp oeq float %192, %194
  br i1 %195, label %196, label %508

196:                                              ; preds = %190
  %197 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 8, i32 2
  %198 = load float, float* %197, align 4
  %199 = getelementptr inbounds i64, i64* %177, i64 1
  %200 = bitcast i64* %199 to float*
  %201 = load float, float* %200, align 4
  %202 = fcmp une float %198, %201
  br i1 %202, label %508, label %203

203:                                              ; preds = %196
  %204 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 3
  %205 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 9, i32 3
  %206 = load float, float* %205, align 4
  %207 = getelementptr inbounds i32, i32* %204, i64 3
  %208 = bitcast i32* %207 to float*
  %209 = load float, float* %208, align 4
  %210 = fcmp oeq float %206, %209
  br i1 %210, label %211, label %508

211:                                              ; preds = %203
  %212 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 9, i32 0
  %213 = load float, float* %212, align 4
  %214 = bitcast i32* %204 to float*
  %215 = load float, float* %214, align 4
  %216 = fcmp oeq float %213, %215
  br i1 %216, label %217, label %508

217:                                              ; preds = %211
  %218 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 9, i32 1
  %219 = load float, float* %218, align 4
  %220 = getelementptr inbounds i32, i32* %204, i64 1
  %221 = bitcast i32* %220 to float*
  %222 = load float, float* %221, align 4
  %223 = fcmp oeq float %219, %222
  br i1 %223, label %224, label %508

224:                                              ; preds = %217
  %225 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 9, i32 2
  %226 = load float, float* %225, align 4
  %227 = getelementptr inbounds i32, i32* %204, i64 2
  %228 = bitcast i32* %227 to float*
  %229 = load float, float* %228, align 4
  %230 = fcmp une float %226, %229
  br i1 %230, label %508, label %231

231:                                              ; preds = %224
  %232 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3
  %233 = bitcast %class.GrFragmentProcessor* %232 to %struct.SkRGBA4f*
  %234 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 10, i32 3
  %235 = load float, float* %234, align 4
  %236 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3, i32 0, i32 2
  %237 = bitcast i32* %236 to float*
  %238 = load float, float* %237, align 4
  %239 = fcmp oeq float %235, %238
  br i1 %239, label %240, label %508

240:                                              ; preds = %231
  %241 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 10, i32 0
  %242 = load float, float* %241, align 4
  %243 = bitcast %class.GrFragmentProcessor* %232 to float*
  %244 = load float, float* %243, align 4
  %245 = fcmp oeq float %242, %244
  br i1 %245, label %246, label %508

246:                                              ; preds = %240
  %247 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 10, i32 1
  %248 = load float, float* %247, align 4
  %249 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %233, i64 0, i32 1
  %250 = load float, float* %249, align 4
  %251 = fcmp oeq float %248, %250
  br i1 %251, label %252, label %508

252:                                              ; preds = %246
  %253 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 10, i32 2
  %254 = load float, float* %253, align 4
  %255 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3, i32 0, i32 1
  %256 = bitcast i32* %255 to float*
  %257 = load float, float* %256, align 4
  %258 = fcmp une float %254, %257
  br i1 %258, label %508, label %259

259:                                              ; preds = %252
  %260 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3, i32 1
  %261 = bitcast %class.SkSTArray* %260 to %struct.SkRGBA4f*
  %262 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 11, i32 3
  %263 = load float, float* %262, align 4
  %264 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %261, i64 0, i32 3
  %265 = load float, float* %264, align 4
  %266 = fcmp oeq float %263, %265
  br i1 %266, label %267, label %508

267:                                              ; preds = %259
  %268 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 11, i32 0
  %269 = load float, float* %268, align 4
  %270 = bitcast %class.SkSTArray* %260 to float*
  %271 = load float, float* %270, align 4
  %272 = fcmp oeq float %269, %271
  br i1 %272, label %273, label %508

273:                                              ; preds = %267
  %274 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 11, i32 1
  %275 = load float, float* %274, align 4
  %276 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3, i32 1, i32 0, i32 0, i64 4
  %277 = bitcast i8* %276 to float*
  %278 = load float, float* %277, align 4
  %279 = fcmp oeq float %275, %278
  br i1 %279, label %280, label %508

280:                                              ; preds = %273
  %281 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 11, i32 2
  %282 = load float, float* %281, align 4
  %283 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3, i32 1, i32 1
  %284 = bitcast %class.SkTArray.3* %283 to float*
  %285 = load float, float* %284, align 4
  %286 = fcmp une float %282, %285
  br i1 %286, label %508, label %287

287:                                              ; preds = %280
  %288 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3, i32 1, i32 1, i32 1
  %289 = bitcast i64* %288 to %struct.SkRGBA4f*
  %290 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 12, i32 3
  %291 = load float, float* %290, align 4
  %292 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %289, i64 0, i32 3
  %293 = load float, float* %292, align 4
  %294 = fcmp oeq float %291, %293
  br i1 %294, label %295, label %508

295:                                              ; preds = %287
  %296 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 12, i32 0
  %297 = load float, float* %296, align 4
  %298 = bitcast i64* %288 to float*
  %299 = load float, float* %298, align 4
  %300 = fcmp oeq float %297, %299
  br i1 %300, label %301, label %508

301:                                              ; preds = %295
  %302 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 12, i32 1
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %289, i64 0, i32 1
  %305 = load float, float* %304, align 4
  %306 = fcmp oeq float %303, %305
  br i1 %306, label %307, label %508

307:                                              ; preds = %301
  %308 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 12, i32 2
  %309 = load float, float* %308, align 4
  %310 = getelementptr inbounds i64, i64* %288, i64 1
  %311 = bitcast i64* %310 to float*
  %312 = load float, float* %311, align 4
  %313 = fcmp une float %309, %312
  br i1 %313, label %508, label %314

314:                                              ; preds = %307
  %315 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3, i32 3
  %316 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 13, i32 3
  %317 = load float, float* %316, align 4
  %318 = getelementptr inbounds i32, i32* %315, i64 3
  %319 = bitcast i32* %318 to float*
  %320 = load float, float* %319, align 4
  %321 = fcmp oeq float %317, %320
  br i1 %321, label %322, label %508

322:                                              ; preds = %314
  %323 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 13, i32 0
  %324 = load float, float* %323, align 4
  %325 = bitcast i32* %315 to float*
  %326 = load float, float* %325, align 4
  %327 = fcmp oeq float %324, %326
  br i1 %327, label %328, label %508

328:                                              ; preds = %322
  %329 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 13, i32 1
  %330 = load float, float* %329, align 4
  %331 = getelementptr inbounds i32, i32* %315, i64 1
  %332 = bitcast i32* %331 to float*
  %333 = load float, float* %332, align 4
  %334 = fcmp oeq float %330, %333
  br i1 %334, label %335, label %508

335:                                              ; preds = %328
  %336 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 13, i32 2
  %337 = load float, float* %336, align 4
  %338 = getelementptr inbounds i32, i32* %315, i64 2
  %339 = bitcast i32* %338 to float*
  %340 = load float, float* %339, align 4
  %341 = fcmp une float %337, %340
  br i1 %341, label %508, label %342

342:                                              ; preds = %335
  %343 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 4
  %344 = bitcast %class.GrFragmentProcessor* %343 to %struct.SkRGBA4f*
  %345 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 14, i32 3
  %346 = load float, float* %345, align 4
  %347 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 4, i32 0, i32 2
  %348 = bitcast i32* %347 to float*
  %349 = load float, float* %348, align 4
  %350 = fcmp oeq float %346, %349
  br i1 %350, label %351, label %508

351:                                              ; preds = %342
  %352 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 14, i32 0
  %353 = load float, float* %352, align 4
  %354 = bitcast %class.GrFragmentProcessor* %343 to float*
  %355 = load float, float* %354, align 4
  %356 = fcmp oeq float %353, %355
  br i1 %356, label %357, label %508

357:                                              ; preds = %351
  %358 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 14, i32 1
  %359 = load float, float* %358, align 4
  %360 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %344, i64 0, i32 1
  %361 = load float, float* %360, align 4
  %362 = fcmp oeq float %359, %361
  br i1 %362, label %363, label %508

363:                                              ; preds = %357
  %364 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 14, i32 2
  %365 = load float, float* %364, align 4
  %366 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 4, i32 0, i32 1
  %367 = bitcast i32* %366 to float*
  %368 = load float, float* %367, align 4
  %369 = fcmp une float %365, %368
  br i1 %369, label %508, label %370

370:                                              ; preds = %363
  %371 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 4, i32 1
  %372 = bitcast %class.SkSTArray* %371 to %struct.SkRGBA4f*
  %373 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 15, i32 3
  %374 = load float, float* %373, align 4
  %375 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %372, i64 0, i32 3
  %376 = load float, float* %375, align 4
  %377 = fcmp oeq float %374, %376
  br i1 %377, label %378, label %508

378:                                              ; preds = %370
  %379 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 15, i32 0
  %380 = load float, float* %379, align 4
  %381 = bitcast %class.SkSTArray* %371 to float*
  %382 = load float, float* %381, align 4
  %383 = fcmp oeq float %380, %382
  br i1 %383, label %384, label %508

384:                                              ; preds = %378
  %385 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 15, i32 1
  %386 = load float, float* %385, align 4
  %387 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 4, i32 1, i32 0, i32 0, i64 4
  %388 = bitcast i8* %387 to float*
  %389 = load float, float* %388, align 4
  %390 = fcmp oeq float %386, %389
  br i1 %390, label %391, label %508

391:                                              ; preds = %384
  %392 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 15, i32 2
  %393 = load float, float* %392, align 4
  %394 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 4, i32 1, i32 1
  %395 = bitcast %class.SkTArray.3* %394 to float*
  %396 = load float, float* %395, align 4
  %397 = fcmp une float %393, %396
  br i1 %397, label %508, label %398

398:                                              ; preds = %391
  %399 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 4, i32 1, i32 1, i32 1
  %400 = bitcast i64* %399 to %struct.SkRGBA4f*
  %401 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 16, i32 3
  %402 = load float, float* %401, align 4
  %403 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %400, i64 0, i32 3
  %404 = load float, float* %403, align 4
  %405 = fcmp oeq float %402, %404
  br i1 %405, label %406, label %508

406:                                              ; preds = %398
  %407 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 16, i32 0
  %408 = load float, float* %407, align 4
  %409 = bitcast i64* %399 to float*
  %410 = load float, float* %409, align 4
  %411 = fcmp oeq float %408, %410
  br i1 %411, label %412, label %508

412:                                              ; preds = %406
  %413 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 16, i32 1
  %414 = load float, float* %413, align 4
  %415 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %400, i64 0, i32 1
  %416 = load float, float* %415, align 4
  %417 = fcmp oeq float %414, %416
  br i1 %417, label %418, label %508

418:                                              ; preds = %412
  %419 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 16, i32 2
  %420 = load float, float* %419, align 4
  %421 = getelementptr inbounds i64, i64* %399, i64 1
  %422 = bitcast i64* %421 to float*
  %423 = load float, float* %422, align 4
  %424 = fcmp une float %420, %423
  br i1 %424, label %508, label %425

425:                                              ; preds = %418
  %426 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 4, i32 3
  %427 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 17, i32 3
  %428 = load float, float* %427, align 4
  %429 = getelementptr inbounds i32, i32* %426, i64 3
  %430 = bitcast i32* %429 to float*
  %431 = load float, float* %430, align 4
  %432 = fcmp oeq float %428, %431
  br i1 %432, label %433, label %508

433:                                              ; preds = %425
  %434 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 17, i32 0
  %435 = load float, float* %434, align 4
  %436 = bitcast i32* %426 to float*
  %437 = load float, float* %436, align 4
  %438 = fcmp oeq float %435, %437
  br i1 %438, label %439, label %508

439:                                              ; preds = %433
  %440 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 17, i32 1
  %441 = load float, float* %440, align 4
  %442 = getelementptr inbounds i32, i32* %426, i64 1
  %443 = bitcast i32* %442 to float*
  %444 = load float, float* %443, align 4
  %445 = fcmp oeq float %441, %444
  br i1 %445, label %446, label %508

446:                                              ; preds = %439
  %447 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 17, i32 2
  %448 = load float, float* %447, align 4
  %449 = getelementptr inbounds i32, i32* %426, i64 2
  %450 = bitcast i32* %449 to float*
  %451 = load float, float* %450, align 4
  %452 = fcmp une float %448, %451
  br i1 %452, label %508, label %453

453:                                              ; preds = %446
  %454 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 5
  %455 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 18, i32 0
  %456 = bitcast %class.GrFragmentProcessor* %454 to float*
  %457 = load float, float* %455, align 4
  %458 = load float, float* %456, align 4
  %459 = fcmp une float %457, %458
  br i1 %459, label %508, label %460

460:                                              ; preds = %453
  %461 = getelementptr inbounds float, float* %455, i64 1
  %462 = load float, float* %461, align 4
  %463 = getelementptr inbounds float, float* %456, i64 1
  %464 = load float, float* %463, align 4
  %465 = fcmp une float %462, %464
  br i1 %465, label %508, label %466

466:                                              ; preds = %460
  %467 = getelementptr inbounds float, float* %455, i64 2
  %468 = load float, float* %467, align 4
  %469 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 5, i32 0, i32 1
  %470 = bitcast i32* %469 to float*
  %471 = load float, float* %470, align 4
  %472 = fcmp une float %468, %471
  br i1 %472, label %508, label %473

473:                                              ; preds = %466
  %474 = getelementptr inbounds float, float* %455, i64 3
  %475 = load float, float* %474, align 4
  %476 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 5, i32 0, i32 2
  %477 = bitcast i32* %476 to float*
  %478 = load float, float* %477, align 4
  %479 = fcmp une float %475, %478
  br i1 %479, label %508, label %480

480:                                              ; preds = %473
  %481 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 5, i32 1
  %482 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 19, i32 0
  %483 = bitcast %class.SkSTArray* %481 to float*
  %484 = load float, float* %482, align 4
  %485 = load float, float* %483, align 4
  %486 = fcmp une float %484, %485
  br i1 %486, label %507, label %487

487:                                              ; preds = %480
  %488 = getelementptr inbounds float, float* %482, i64 1
  %489 = load float, float* %488, align 4
  %490 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 5, i32 1, i32 0, i32 0, i64 4
  %491 = bitcast i8* %490 to float*
  %492 = load float, float* %491, align 4
  %493 = fcmp une float %489, %492
  br i1 %493, label %507, label %494

494:                                              ; preds = %487
  %495 = getelementptr inbounds float, float* %482, i64 2
  %496 = load float, float* %495, align 4
  %497 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 5, i32 1, i32 1
  %498 = bitcast %class.SkTArray.3* %497 to float*
  %499 = load float, float* %498, align 4
  %500 = fcmp une float %496, %499
  br i1 %500, label %507, label %501

501:                                              ; preds = %494
  %502 = getelementptr inbounds float, float* %482, i64 3
  %503 = load float, float* %502, align 4
  %504 = getelementptr inbounds float, float* %483, i64 3
  %505 = load float, float* %504, align 4
  %506 = fcmp une float %503, %505
  br i1 %506, label %507, label %508

507:                                              ; preds = %480, %487, %494, %501
  br label %508

508:                                              ; preds = %473, %466, %460, %453, %425, %433, %439, %398, %406, %412, %370, %378, %384, %342, %351, %357, %314, %322, %328, %287, %295, %301, %259, %267, %273, %231, %240, %246, %203, %211, %217, %176, %184, %190, %148, %156, %162, %120, %129, %135, %92, %100, %106, %65, %73, %79, %37, %45, %51, %9, %18, %24, %507, %501, %446, %418, %391, %363, %335, %307, %280, %252, %224, %196, %169, %141, %113, %85, %58, %30, %2
  %509 = phi i1 [ false, %2 ], [ false, %30 ], [ false, %58 ], [ false, %85 ], [ false, %113 ], [ false, %141 ], [ false, %169 ], [ false, %196 ], [ false, %224 ], [ false, %252 ], [ false, %280 ], [ false, %307 ], [ false, %335 ], [ false, %363 ], [ false, %391 ], [ false, %418 ], [ false, %446 ], [ false, %507 ], [ true, %501 ], [ false, %24 ], [ false, %18 ], [ false, %9 ], [ false, %51 ], [ false, %45 ], [ false, %37 ], [ false, %79 ], [ false, %73 ], [ false, %65 ], [ false, %106 ], [ false, %100 ], [ false, %92 ], [ false, %135 ], [ false, %129 ], [ false, %120 ], [ false, %162 ], [ false, %156 ], [ false, %148 ], [ false, %190 ], [ false, %184 ], [ false, %176 ], [ false, %217 ], [ false, %211 ], [ false, %203 ], [ false, %246 ], [ false, %240 ], [ false, %231 ], [ false, %273 ], [ false, %267 ], [ false, %259 ], [ false, %301 ], [ false, %295 ], [ false, %287 ], [ false, %328 ], [ false, %322 ], [ false, %314 ], [ false, %357 ], [ false, %351 ], [ false, %342 ], [ false, %384 ], [ false, %378 ], [ false, %370 ], [ false, %412 ], [ false, %406 ], [ false, %398 ], [ false, %439 ], [ false, %433 ], [ false, %425 ], [ false, %453 ], [ false, %460 ], [ false, %466 ], [ false, %473 ]
  ret i1 %509
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN33GrUnrolledBinaryGradientColorizerC2ERKS_(%class.GrUnrolledBinaryGradientColorizer*, %class.GrUnrolledBinaryGradientColorizer* dereferenceable(352)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrUnrolledBinaryGradientColorizer* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrUnrolledBinaryGradientColorizer* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 0, i32 1
  store i32 83, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.3* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV33GrUnrolledBinaryGradientColorizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 2
  %24 = bitcast %struct.SkRGBA4f* %22 to i8*
  %25 = bitcast %struct.SkRGBA4f* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 16, i1 false)
  %26 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 3
  %27 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 3
  %28 = bitcast %struct.SkRGBA4f* %26 to i8*
  %29 = bitcast %struct.SkRGBA4f* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  %30 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 4
  %31 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 4
  %32 = bitcast %struct.SkRGBA4f* %30 to i8*
  %33 = bitcast %struct.SkRGBA4f* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false)
  %34 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 5
  %35 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 5
  %36 = bitcast %struct.SkRGBA4f* %34 to i8*
  %37 = bitcast %struct.SkRGBA4f* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false)
  %38 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 6
  %39 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 6
  %40 = bitcast %struct.SkRGBA4f* %38 to i8*
  %41 = bitcast %struct.SkRGBA4f* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false)
  %42 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 7
  %43 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 7
  %44 = bitcast %struct.SkRGBA4f* %42 to i8*
  %45 = bitcast %struct.SkRGBA4f* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false)
  %46 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 8
  %47 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 8
  %48 = bitcast %struct.SkRGBA4f* %46 to i8*
  %49 = bitcast %struct.SkRGBA4f* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 16, i1 false)
  %50 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 9
  %51 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 9
  %52 = bitcast %struct.SkRGBA4f* %50 to i8*
  %53 = bitcast %struct.SkRGBA4f* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false)
  %54 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 10
  %55 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 10
  %56 = bitcast %struct.SkRGBA4f* %54 to i8*
  %57 = bitcast %struct.SkRGBA4f* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false)
  %58 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 11
  %59 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 11
  %60 = bitcast %struct.SkRGBA4f* %58 to i8*
  %61 = bitcast %struct.SkRGBA4f* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false)
  %62 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 12
  %63 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 12
  %64 = bitcast %struct.SkRGBA4f* %62 to i8*
  %65 = bitcast %struct.SkRGBA4f* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false)
  %66 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 13
  %67 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 13
  %68 = bitcast %struct.SkRGBA4f* %66 to i8*
  %69 = bitcast %struct.SkRGBA4f* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false)
  %70 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 14
  %71 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 14
  %72 = bitcast %struct.SkRGBA4f* %70 to i8*
  %73 = bitcast %struct.SkRGBA4f* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false)
  %74 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 15
  %75 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 15
  %76 = bitcast %struct.SkRGBA4f* %74 to i8*
  %77 = bitcast %struct.SkRGBA4f* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false)
  %78 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 16
  %79 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 16
  %80 = bitcast %struct.SkRGBA4f* %78 to i8*
  %81 = bitcast %struct.SkRGBA4f* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false)
  %82 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 17
  %83 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 17
  %84 = bitcast %struct.SkRGBA4f* %82 to i8*
  %85 = bitcast %struct.SkRGBA4f* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 16, i1 false)
  %86 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 18
  %87 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 18
  %88 = bitcast %struct.SkRect* %86 to i8*
  %89 = bitcast %struct.SkRect* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false)
  %90 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 19
  %91 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %1, i64 0, i32 19
  %92 = bitcast %struct.SkRect* %90 to i8*
  %93 = bitcast %struct.SkRect* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false)
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #12
  %94 = load i32, i32* %16, align 8
  %95 = or i32 %94, 16
  store i32 %95, i32* %16, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK33GrUnrolledBinaryGradientColorizer5cloneEv(%class.GrUnrolledBinaryGradientColorizer*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 352) #12
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrUnrolledBinaryGradientColorizer* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 83, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV33GrUnrolledBinaryGradientColorizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds i8, i8* %2, i64 64
  %30 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 2
  %31 = bitcast %struct.SkRGBA4f* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %31, i64 16, i1 false) #12
  %32 = getelementptr inbounds i8, i8* %2, i64 80
  %33 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 3
  %34 = bitcast %struct.SkRGBA4f* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %34, i64 16, i1 false) #12
  %35 = getelementptr inbounds i8, i8* %2, i64 96
  %36 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 4
  %37 = bitcast %struct.SkRGBA4f* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %37, i64 16, i1 false) #12
  %38 = getelementptr inbounds i8, i8* %2, i64 112
  %39 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 5
  %40 = bitcast %struct.SkRGBA4f* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %40, i64 16, i1 false) #12
  %41 = getelementptr inbounds i8, i8* %2, i64 128
  %42 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 6
  %43 = bitcast %struct.SkRGBA4f* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %43, i64 16, i1 false) #12
  %44 = getelementptr inbounds i8, i8* %2, i64 144
  %45 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 7
  %46 = bitcast %struct.SkRGBA4f* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %46, i64 16, i1 false) #12
  %47 = getelementptr inbounds i8, i8* %2, i64 160
  %48 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 8
  %49 = bitcast %struct.SkRGBA4f* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %49, i64 16, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %2, i64 176
  %51 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 9
  %52 = bitcast %struct.SkRGBA4f* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 16, i1 false) #12
  %53 = getelementptr inbounds i8, i8* %2, i64 192
  %54 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 10
  %55 = bitcast %struct.SkRGBA4f* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %55, i64 16, i1 false) #12
  %56 = getelementptr inbounds i8, i8* %2, i64 208
  %57 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 11
  %58 = bitcast %struct.SkRGBA4f* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 16, i1 false) #12
  %59 = getelementptr inbounds i8, i8* %2, i64 224
  %60 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 12
  %61 = bitcast %struct.SkRGBA4f* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %61, i64 16, i1 false) #12
  %62 = getelementptr inbounds i8, i8* %2, i64 240
  %63 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 13
  %64 = bitcast %struct.SkRGBA4f* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %64, i64 16, i1 false) #12
  %65 = getelementptr inbounds i8, i8* %2, i64 256
  %66 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 14
  %67 = bitcast %struct.SkRGBA4f* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %67, i64 16, i1 false) #12
  %68 = getelementptr inbounds i8, i8* %2, i64 272
  %69 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 15
  %70 = bitcast %struct.SkRGBA4f* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %70, i64 16, i1 false) #12
  %71 = getelementptr inbounds i8, i8* %2, i64 288
  %72 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 16
  %73 = bitcast %struct.SkRGBA4f* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %73, i64 16, i1 false) #12
  %74 = getelementptr inbounds i8, i8* %2, i64 304
  %75 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 17
  %76 = bitcast %struct.SkRGBA4f* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %76, i64 16, i1 false) #12
  %77 = getelementptr inbounds i8, i8* %2, i64 320
  %78 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 18
  %79 = bitcast %struct.SkRect* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %79, i64 16, i1 false) #12
  %80 = getelementptr inbounds i8, i8* %2, i64 336
  %81 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 19
  %82 = bitcast %struct.SkRect* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %82, i64 16, i1 false) #12
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #12
  %83 = load i32, i32* %21, align 8
  %84 = or i32 %83, 16
  store i32 %84, i32* %21, align 8
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN33GrUnrolledBinaryGradientColorizer4MakeEPK8SkRGBA4fIL11SkAlphaType2EEPKfi(%struct.SkRGBA4f* nocapture readonly, float* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %4 = alloca [8 x %struct.SkRGBA4f], align 16
  %5 = alloca [8 x %struct.SkRGBA4f], align 16
  %6 = alloca [8 x float], align 16
  %7 = icmp sgt i32 %2, 16
  br i1 %7, label %199, label %8

8:                                                ; preds = %3
  %9 = bitcast [8 x %struct.SkRGBA4f]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -1, i64 128, i1 false)
  %10 = bitcast [8 x %struct.SkRGBA4f]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -1, i64 128, i1 false)
  %11 = bitcast [8 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #12
  %12 = getelementptr inbounds [8 x float], [8 x float]* %6, i64 0, i64 2
  %13 = getelementptr inbounds [8 x float], [8 x float]* %6, i64 0, i64 4
  %14 = getelementptr inbounds [8 x float], [8 x float]* %6, i64 0, i64 6
  %15 = add i32 %2, -1
  %16 = icmp sgt i32 %15, 0
  %17 = bitcast [8 x float]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -1, i64 32, i1 false)
  br i1 %16, label %18, label %22

18:                                               ; preds = %8
  %19 = zext i32 %15 to i64
  br label %48

20:                                               ; preds = %83
  %21 = icmp slt i32 %84, 8
  br i1 %21, label %22, label %86

22:                                               ; preds = %8, %20
  %23 = phi i32 [ %84, %20 ], [ 0, %8 ]
  %24 = sext i32 %23 to i64
  %25 = getelementptr [8 x float], [8 x float]* %6, i64 0, i64 %24
  %26 = bitcast float* %25 to i8*
  %27 = sub i32 7, %23
  %28 = zext i32 %27 to i64
  %29 = shl nuw nsw i64 %28, 2
  %30 = add nuw nsw i64 %29, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 %30, i1 false)
  %31 = sub nsw i64 0, %24
  %32 = sub nsw i64 7, %24
  %33 = and i64 %31, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %22, %35
  %36 = phi i64 [ %42, %35 ], [ %24, %22 ]
  %37 = phi i64 [ %43, %35 ], [ %33, %22 ]
  %38 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 %36
  %39 = bitcast %struct.SkRGBA4f* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %39, i8 0, i64 16, i1 false)
  %40 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 %36
  %41 = bitcast %struct.SkRGBA4f* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %41, i8 0, i64 16, i1 false)
  %42 = add nsw i64 %36, 1
  %43 = add i64 %37, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %35, !llvm.loop !2

45:                                               ; preds = %35, %22
  %46 = phi i64 [ %24, %22 ], [ %42, %35 ]
  %47 = icmp ult i64 %32, 3
  br i1 %47, label %86, label %174

48:                                               ; preds = %83, %18
  %49 = phi i64 [ 0, %18 ], [ %55, %83 ]
  %50 = phi i32 [ 0, %18 ], [ %84, %83 ]
  %51 = icmp sgt i32 %50, 7
  br i1 %51, label %197, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds float, float* %1, i64 %49
  %54 = load float, float* %53, align 4
  %55 = add nuw nsw i64 %49, 1
  %56 = getelementptr inbounds float, float* %1, i64 %55
  %57 = load float, float* %56, align 4
  %58 = fsub float %57, %54
  %59 = tail call float @llvm.fabs.f32(float %58) #12
  %60 = fcmp ugt float %59, 0x3F30000000000000
  br i1 %60, label %61, label %83

61:                                               ; preds = %52
  %62 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %0, i64 %49, i32 0
  %63 = bitcast float* %62 to <4 x float>*
  %64 = load <4 x float>, <4 x float>* %63, align 1
  %65 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %0, i64 %55, i32 0
  %66 = bitcast float* %65 to <4 x float>*
  %67 = load <4 x float>, <4 x float>* %66, align 1
  %68 = fsub <4 x float> %67, %64
  %69 = insertelement <4 x float> undef, float %58, i32 0
  %70 = shufflevector <4 x float> %69, <4 x float> undef, <4 x i32> zeroinitializer
  %71 = fdiv <4 x float> %68, %70
  %72 = insertelement <4 x float> undef, float %54, i32 0
  %73 = shufflevector <4 x float> %72, <4 x float> undef, <4 x i32> zeroinitializer
  %74 = fmul <4 x float> %73, %71
  %75 = fsub <4 x float> %64, %74
  %76 = sext i32 %50 to i64
  %77 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 %76
  %78 = bitcast %struct.SkRGBA4f* %77 to <4 x float>*
  store <4 x float> %71, <4 x float>* %78, align 16
  %79 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 %76
  %80 = bitcast %struct.SkRGBA4f* %79 to <4 x float>*
  store <4 x float> %75, <4 x float>* %80, align 16
  %81 = getelementptr inbounds [8 x float], [8 x float]* %6, i64 0, i64 %76
  store float %57, float* %81, align 4
  %82 = add nsw i32 %50, 1
  br label %83

83:                                               ; preds = %52, %61
  %84 = phi i32 [ %82, %61 ], [ %50, %52 ]
  %85 = icmp eq i64 %55, %19
  br i1 %85, label %20, label %48

86:                                               ; preds = %45, %174, %20
  %87 = phi i32 [ 8, %20 ], [ %23, %174 ], [ %23, %45 ]
  %88 = tail call i8* @_ZN11GrProcessornwEm(i64 352) #12
  %89 = bitcast [8 x %struct.SkRGBA4f]* %4 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 16
  %91 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 1
  %92 = bitcast %struct.SkRGBA4f* %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 16
  %94 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 2
  %95 = bitcast %struct.SkRGBA4f* %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 16
  %97 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 3
  %98 = bitcast %struct.SkRGBA4f* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 16
  %100 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 4
  %101 = bitcast %struct.SkRGBA4f* %100 to i8*
  %102 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 5
  %103 = bitcast %struct.SkRGBA4f* %102 to i8*
  %104 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 6
  %105 = bitcast %struct.SkRGBA4f* %104 to i8*
  %106 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 7
  %107 = bitcast %struct.SkRGBA4f* %106 to i8*
  %108 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 1
  %109 = bitcast %struct.SkRGBA4f* %108 to i8*
  %110 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 2
  %111 = bitcast %struct.SkRGBA4f* %110 to i8*
  %112 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 3
  %113 = bitcast %struct.SkRGBA4f* %112 to i8*
  %114 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 4
  %115 = bitcast %struct.SkRGBA4f* %114 to i8*
  %116 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 5
  %117 = bitcast %struct.SkRGBA4f* %116 to i8*
  %118 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 6
  %119 = bitcast %struct.SkRGBA4f* %118 to i8*
  %120 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 7
  %121 = bitcast %struct.SkRGBA4f* %120 to i8*
  %122 = bitcast [8 x float]* %6 to i64*
  %123 = load i64, i64* %122, align 16
  %124 = bitcast float* %12 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast float* %13 to i64*
  %127 = load i64, i64* %126, align 16
  %128 = load float, float* %14, align 8
  %129 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %128, i32 0
  %130 = bitcast i8* %88 to i32 (...)***
  %131 = getelementptr inbounds i8, i8* %88, i64 8
  %132 = bitcast i8* %131 to i32*
  store i32 83, i32* %132, align 8
  %133 = getelementptr inbounds i8, i8* %88, i64 12
  %134 = bitcast i8* %133 to i32*
  store i32 0, i32* %134, align 4
  %135 = getelementptr inbounds i8, i8* %88, i64 24
  %136 = getelementptr inbounds i8, i8* %88, i64 16
  %137 = getelementptr inbounds i8, i8* %88, i64 32
  %138 = bitcast i8* %137 to i64*
  %139 = bitcast i8* %135 to i8**
  store i8* %136, i8** %139, align 8
  store i64 8589934592, i64* %138, align 8
  %140 = getelementptr inbounds i8, i8* %88, i64 40
  %141 = getelementptr inbounds i8, i8* %88, i64 48
  %142 = bitcast i8* %141 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 17, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV33GrUnrolledBinaryGradientColorizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %143 = getelementptr inbounds i8, i8* %88, i64 60
  %144 = bitcast i8* %143 to i32*
  store i32 %87, i32* %144, align 4
  %145 = getelementptr inbounds i8, i8* %88, i64 64
  %146 = bitcast i8* %145 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %146, align 8
  %147 = getelementptr inbounds i8, i8* %88, i64 80
  %148 = bitcast i8* %147 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %148, align 8
  %149 = getelementptr inbounds i8, i8* %88, i64 96
  %150 = bitcast i8* %149 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %150, align 8
  %151 = getelementptr inbounds i8, i8* %88, i64 112
  %152 = bitcast i8* %151 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %152, align 8
  %153 = getelementptr inbounds i8, i8* %88, i64 128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 16 %101, i64 16, i1 false)
  %154 = getelementptr inbounds i8, i8* %88, i64 144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 16 %103, i64 16, i1 false)
  %155 = getelementptr inbounds i8, i8* %88, i64 160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 16 %105, i64 16, i1 false)
  %156 = getelementptr inbounds i8, i8* %88, i64 176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 16 %107, i64 16, i1 false)
  %157 = getelementptr inbounds i8, i8* %88, i64 192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* nonnull align 16 %10, i64 16, i1 false)
  %158 = getelementptr inbounds i8, i8* %88, i64 208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 16 %109, i64 16, i1 false)
  %159 = getelementptr inbounds i8, i8* %88, i64 224
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 16 %111, i64 16, i1 false)
  %160 = getelementptr inbounds i8, i8* %88, i64 240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 16 %113, i64 16, i1 false)
  %161 = getelementptr inbounds i8, i8* %88, i64 256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 16 %115, i64 16, i1 false)
  %162 = getelementptr inbounds i8, i8* %88, i64 272
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 16 %117, i64 16, i1 false)
  %163 = getelementptr inbounds i8, i8* %88, i64 288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 16 %119, i64 16, i1 false)
  %164 = getelementptr inbounds i8, i8* %88, i64 304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 16 %121, i64 16, i1 false)
  %165 = getelementptr inbounds i8, i8* %88, i64 320
  %166 = bitcast i8* %165 to i64*
  store i64 %123, i64* %166, align 8
  %167 = getelementptr inbounds i8, i8* %88, i64 328
  %168 = bitcast i8* %167 to i64*
  store i64 %125, i64* %168, align 8
  %169 = getelementptr inbounds i8, i8* %88, i64 336
  %170 = bitcast i8* %169 to i64*
  store i64 %127, i64* %170, align 8
  %171 = getelementptr inbounds i8, i8* %88, i64 344
  %172 = bitcast i8* %171 to <2 x float>*
  store <2 x float> %129, <2 x float>* %172, align 8
  store i32 16, i32* %142, align 8
  %173 = ptrtoint i8* %88 to i64
  br label %197

174:                                              ; preds = %45, %174
  %175 = phi i64 [ %195, %174 ], [ %46, %45 ]
  %176 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 %175
  %177 = bitcast %struct.SkRGBA4f* %176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %177, i8 0, i64 16, i1 false)
  %178 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 %175
  %179 = bitcast %struct.SkRGBA4f* %178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %179, i8 0, i64 16, i1 false)
  %180 = add nsw i64 %175, 1
  %181 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 %180
  %182 = bitcast %struct.SkRGBA4f* %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %182, i8 0, i64 16, i1 false)
  %183 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 %180
  %184 = bitcast %struct.SkRGBA4f* %183 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %184, i8 0, i64 16, i1 false)
  %185 = add nsw i64 %175, 2
  %186 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 %185
  %187 = bitcast %struct.SkRGBA4f* %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %187, i8 0, i64 16, i1 false)
  %188 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 %185
  %189 = bitcast %struct.SkRGBA4f* %188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %189, i8 0, i64 16, i1 false)
  %190 = add nsw i64 %175, 3
  %191 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %4, i64 0, i64 %190
  %192 = bitcast %struct.SkRGBA4f* %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %192, i8 0, i64 16, i1 false)
  %193 = getelementptr inbounds [8 x %struct.SkRGBA4f], [8 x %struct.SkRGBA4f]* %5, i64 0, i64 %190
  %194 = bitcast %struct.SkRGBA4f* %193 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %194, i8 0, i64 16, i1 false)
  %195 = add nsw i64 %175, 4
  %196 = icmp eq i64 %195, 8
  br i1 %196, label %86, label %174

197:                                              ; preds = %48, %86
  %198 = phi i64 [ %173, %86 ], [ 0, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #12
  br label %199

199:                                              ; preds = %3, %197
  %200 = phi i64 [ %198, %197 ], [ 0, %3 ]
  %201 = inttoptr i64 %200 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %201
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.4"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #12
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #12
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN33GrUnrolledBinaryGradientColorizerD0Ev(%class.GrUnrolledBinaryGradientColorizer*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.3, %class.SkTArray.3* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #12
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.3* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #12
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrUnrolledBinaryGradientColorizer* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK33GrUnrolledBinaryGradientColorizer4nameEv(%class.GrUnrolledBinaryGradientColorizer*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN37GrGLSLUnrolledBinaryGradientColorizerD0Ev(%class.GrGLSLUnrolledBinaryGradientColorizer*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #12
  %3 = bitcast %class.GrGLSLUnrolledBinaryGradientColorizer* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN37GrGLSLUnrolledBinaryGradientColorizer8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLUnrolledBinaryGradientColorizer*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %4 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %3, align 8
  %5 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %6 = bitcast %class.GrFragmentProcessor** %5 to %class.GrUnrolledBinaryGradientColorizer**
  %7 = load %class.GrUnrolledBinaryGradientColorizer*, %class.GrUnrolledBinaryGradientColorizer** %6, align 8
  %8 = getelementptr inbounds %class.GrUnrolledBinaryGradientColorizer, %class.GrUnrolledBinaryGradientColorizer* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %11 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %12 = bitcast %class.GrUnrolledBinaryGradientColorizer* %7 to %class.GrFragmentProcessor*
  %13 = bitcast %class.GrGLSLUniformHandler* %11 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %14 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %14, i64 13
  %16 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %15, align 8
  %17 = tail call i32 %16(%class.GrGLSLUniformHandler* %11, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %18 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 1, i32 0
  store i32 %17, i32* %18, align 8
  %19 = icmp sgt i32 %9, 1
  br i1 %19, label %20, label %82

20:                                               ; preds = %2
  %21 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %22 = bitcast %class.GrGLSLUniformHandler* %21 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %23 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %22, align 8
  %24 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %23, i64 13
  %25 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %24, align 8
  %26 = tail call i32 %25(%class.GrGLSLUniformHandler* %21, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %27 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 2, i32 0
  store i32 %26, i32* %27, align 4
  %28 = icmp eq i32 %9, 2
  br i1 %28, label %82, label %29

29:                                               ; preds = %20
  %30 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %31 = bitcast %class.GrGLSLUniformHandler* %30 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %32 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %31, align 8
  %33 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %32, i64 13
  %34 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %33, align 8
  %35 = tail call i32 %34(%class.GrGLSLUniformHandler* %30, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %36 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 3, i32 0
  store i32 %35, i32* %36, align 8
  %37 = icmp sgt i32 %9, 3
  br i1 %37, label %38, label %82

38:                                               ; preds = %29
  %39 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %40 = bitcast %class.GrGLSLUniformHandler* %39 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %41 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %40, align 8
  %42 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %41, i64 13
  %43 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %42, align 8
  %44 = tail call i32 %43(%class.GrGLSLUniformHandler* %39, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %45 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 4, i32 0
  store i32 %44, i32* %45, align 4
  %46 = icmp eq i32 %9, 4
  br i1 %46, label %82, label %47

47:                                               ; preds = %38
  %48 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %49 = bitcast %class.GrGLSLUniformHandler* %48 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %50 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %49, align 8
  %51 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %50, i64 13
  %52 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %51, align 8
  %53 = tail call i32 %52(%class.GrGLSLUniformHandler* %48, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %54 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 5, i32 0
  store i32 %53, i32* %54, align 8
  %55 = icmp sgt i32 %9, 5
  br i1 %55, label %56, label %82

56:                                               ; preds = %47
  %57 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %58 = bitcast %class.GrGLSLUniformHandler* %57 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %59 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %58, align 8
  %60 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %59, i64 13
  %61 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %60, align 8
  %62 = tail call i32 %61(%class.GrGLSLUniformHandler* %57, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %63 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 6, i32 0
  store i32 %62, i32* %63, align 4
  %64 = icmp eq i32 %9, 6
  br i1 %64, label %82, label %65

65:                                               ; preds = %56
  %66 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %67 = bitcast %class.GrGLSLUniformHandler* %66 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %68 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %67, align 8
  %69 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %68, i64 13
  %70 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %69, align 8
  %71 = tail call i32 %70(%class.GrGLSLUniformHandler* %66, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %72 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 7, i32 0
  store i32 %71, i32* %72, align 8
  %73 = icmp sgt i32 %9, 7
  br i1 %73, label %74, label %82

74:                                               ; preds = %65
  %75 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %76 = bitcast %class.GrGLSLUniformHandler* %75 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %77 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %76, align 8
  %78 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %77, i64 13
  %79 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %78, align 8
  %80 = tail call i32 %79(%class.GrGLSLUniformHandler* %75, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %81 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 8, i32 0
  store i32 %80, i32* %81, align 4
  br label %82

82:                                               ; preds = %56, %38, %20, %2, %29, %47, %74, %65
  %83 = phi i1 [ true, %74 ], [ false, %65 ], [ false, %47 ], [ false, %29 ], [ false, %2 ], [ false, %20 ], [ false, %38 ], [ false, %56 ]
  %84 = phi i1 [ true, %74 ], [ true, %65 ], [ false, %47 ], [ false, %29 ], [ false, %2 ], [ false, %20 ], [ false, %38 ], [ true, %56 ]
  %85 = phi i1 [ true, %74 ], [ true, %65 ], [ true, %47 ], [ false, %29 ], [ false, %2 ], [ false, %20 ], [ true, %38 ], [ true, %56 ]
  %86 = phi i1 [ true, %74 ], [ true, %65 ], [ true, %47 ], [ true, %29 ], [ false, %2 ], [ false, %20 ], [ true, %38 ], [ true, %56 ]
  %87 = phi i1 [ true, %74 ], [ true, %65 ], [ true, %47 ], [ false, %29 ], [ false, %2 ], [ false, %20 ], [ false, %38 ], [ true, %56 ]
  %88 = phi i1 [ true, %74 ], [ true, %65 ], [ false, %47 ], [ false, %29 ], [ false, %2 ], [ false, %20 ], [ false, %38 ], [ false, %56 ]
  %89 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %90 = bitcast %class.GrGLSLUniformHandler* %89 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %91 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %90, align 8
  %92 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %91, i64 13
  %93 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %92, align 8
  %94 = tail call i32 %93(%class.GrGLSLUniformHandler* %89, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %95 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 9, i32 0
  store i32 %94, i32* %95, align 8
  br i1 %19, label %96, label %104

96:                                               ; preds = %82
  %97 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %98 = bitcast %class.GrGLSLUniformHandler* %97 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %99 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %98, align 8
  %100 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %99, i64 13
  %101 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %100, align 8
  %102 = tail call i32 %101(%class.GrGLSLUniformHandler* %97, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %103 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 10, i32 0
  store i32 %102, i32* %103, align 4
  br label %104

104:                                              ; preds = %96, %82
  br i1 %86, label %105, label %113

105:                                              ; preds = %104
  %106 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %107 = bitcast %class.GrGLSLUniformHandler* %106 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %108 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %107, align 8
  %109 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %108, i64 13
  %110 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %109, align 8
  %111 = tail call i32 %110(%class.GrGLSLUniformHandler* %106, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %112 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 11, i32 0
  store i32 %111, i32* %112, align 8
  br label %113

113:                                              ; preds = %105, %104
  br i1 %85, label %114, label %122

114:                                              ; preds = %113
  %115 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %116 = bitcast %class.GrGLSLUniformHandler* %115 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %117 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %116, align 8
  %118 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %117, i64 13
  %119 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %118, align 8
  %120 = tail call i32 %119(%class.GrGLSLUniformHandler* %115, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %121 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 12, i32 0
  store i32 %120, i32* %121, align 4
  br label %122

122:                                              ; preds = %114, %113
  br i1 %87, label %123, label %131

123:                                              ; preds = %122
  %124 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %125 = bitcast %class.GrGLSLUniformHandler* %124 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %126 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %125, align 8
  %127 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %126, i64 13
  %128 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %127, align 8
  %129 = tail call i32 %128(%class.GrGLSLUniformHandler* %124, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %130 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 13, i32 0
  store i32 %129, i32* %130, align 8
  br label %131

131:                                              ; preds = %123, %122
  br i1 %84, label %132, label %140

132:                                              ; preds = %131
  %133 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %134 = bitcast %class.GrGLSLUniformHandler* %133 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %135 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %134, align 8
  %136 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %135, i64 13
  %137 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %136, align 8
  %138 = tail call i32 %137(%class.GrGLSLUniformHandler* %133, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %139 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 14, i32 0
  store i32 %138, i32* %139, align 4
  br label %140

140:                                              ; preds = %132, %131
  br i1 %88, label %141, label %149

141:                                              ; preds = %140
  %142 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %143 = bitcast %class.GrGLSLUniformHandler* %142 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %144 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %143, align 8
  %145 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %144, i64 13
  %146 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %145, align 8
  %147 = tail call i32 %146(%class.GrGLSLUniformHandler* %142, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %148 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 15, i32 0
  store i32 %147, i32* %148, align 8
  br label %149

149:                                              ; preds = %141, %140
  br i1 %83, label %150, label %158

150:                                              ; preds = %149
  %151 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %152 = bitcast %class.GrGLSLUniformHandler* %151 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %153 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %152, align 8
  %154 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %153, i64 13
  %155 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %154, align 8
  %156 = tail call i32 %155(%class.GrGLSLUniformHandler* %151, %class.GrFragmentProcessor* %12, i32 16, i32 24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %157 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 16, i32 0
  store i32 %156, i32* %157, align 4
  br label %158

158:                                              ; preds = %150, %149
  %159 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %160 = bitcast %class.GrGLSLUniformHandler* %159 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %161 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %160, align 8
  %162 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %161, i64 13
  %163 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %162, align 8
  %164 = tail call i32 %163(%class.GrGLSLUniformHandler* %159, %class.GrFragmentProcessor* %12, i32 16, i32 31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %165 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 17, i32 0
  store i32 %164, i32* %165, align 8
  %166 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %167 = bitcast %class.GrGLSLUniformHandler* %166 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %168 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %167, align 8
  %169 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %168, i64 13
  %170 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %169, align 8
  %171 = tail call i32 %170(%class.GrGLSLUniformHandler* %166, %class.GrFragmentProcessor* %12, i32 16, i32 31, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #12
  %172 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 18, i32 0
  store i32 %171, i32* %172, align 4
  %173 = bitcast %class.GrGLSLFPFragmentBuilder* %4 to i8**
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr i8, i8* %174, i64 -24
  %176 = bitcast i8* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %class.GrGLSLFPFragmentBuilder* %4 to i8*
  %179 = getelementptr inbounds i8, i8* %178, i64 %177
  %180 = bitcast i8* %179 to %class.GrGLSLShaderBuilder*
  %181 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 5
  %182 = load i8*, i8** %181, align 8
  %183 = load i32, i32* %8, align 4
  %184 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %185 = load i32, i32* %165, align 8
  %186 = bitcast %class.GrGLSLUniformHandler* %184 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %187 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %186, align 8
  %188 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %187, i64 3
  %189 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %188, align 8
  %190 = tail call i8* %189(%class.GrGLSLUniformHandler* %184, i32 %185) #12
  %191 = load i32, i32* %8, align 4
  %192 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %193 = load i32, i32* %165, align 8
  %194 = bitcast %class.GrGLSLUniformHandler* %192 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %195 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %194, align 8
  %196 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %195, i64 3
  %197 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %196, align 8
  %198 = tail call i8* %197(%class.GrGLSLUniformHandler* %192, i32 %193) #12
  %199 = load i32, i32* %8, align 4
  %200 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %201 = load i32, i32* %165, align 8
  %202 = bitcast %class.GrGLSLUniformHandler* %200 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %203 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %202, align 8
  %204 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %203, i64 3
  %205 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %204, align 8
  %206 = tail call i8* %205(%class.GrGLSLUniformHandler* %200, i32 %201) #12
  %207 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %208 = load i32, i32* %18, align 8
  %209 = bitcast %class.GrGLSLUniformHandler* %207 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %210 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %209, align 8
  %211 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %210, i64 3
  %212 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %211, align 8
  %213 = tail call i8* %212(%class.GrGLSLUniformHandler* %207, i32 %208) #12
  %214 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %215 = load i32, i32* %95, align 8
  %216 = bitcast %class.GrGLSLUniformHandler* %214 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %217 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %216, align 8
  %218 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %217, i64 3
  %219 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %218, align 8
  %220 = tail call i8* %219(%class.GrGLSLUniformHandler* %214, i32 %215) #12
  %221 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 2, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %222, -1
  br i1 %223, label %231, label %224

224:                                              ; preds = %158
  %225 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %226 = bitcast %class.GrGLSLUniformHandler* %225 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %227 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %226, align 8
  %228 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %227, i64 3
  %229 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %228, align 8
  %230 = tail call i8* %229(%class.GrGLSLUniformHandler* %225, i32 %222) #12
  br label %231

231:                                              ; preds = %158, %224
  %232 = phi i8* [ %230, %224 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %158 ]
  %233 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 10, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, -1
  br i1 %235, label %243, label %236

236:                                              ; preds = %231
  %237 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %238 = bitcast %class.GrGLSLUniformHandler* %237 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %239 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %238, align 8
  %240 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %239, i64 3
  %241 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %240, align 8
  %242 = tail call i8* %241(%class.GrGLSLUniformHandler* %237, i32 %234) #12
  br label %243

243:                                              ; preds = %231, %236
  %244 = phi i8* [ %242, %236 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %231 ]
  %245 = load i32, i32* %8, align 4
  %246 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %247 = load i32, i32* %165, align 8
  %248 = bitcast %class.GrGLSLUniformHandler* %246 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %249 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %248, align 8
  %250 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %249, i64 3
  %251 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %250, align 8
  %252 = tail call i8* %251(%class.GrGLSLUniformHandler* %246, i32 %247) #12
  %253 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 3, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, -1
  br i1 %255, label %263, label %256

256:                                              ; preds = %243
  %257 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %258 = bitcast %class.GrGLSLUniformHandler* %257 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %259 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %258, align 8
  %260 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %259, i64 3
  %261 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %260, align 8
  %262 = tail call i8* %261(%class.GrGLSLUniformHandler* %257, i32 %254) #12
  br label %263

263:                                              ; preds = %243, %256
  %264 = phi i8* [ %262, %256 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %243 ]
  %265 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 11, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %266, -1
  br i1 %267, label %275, label %268

268:                                              ; preds = %263
  %269 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %270 = bitcast %class.GrGLSLUniformHandler* %269 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %271 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %270, align 8
  %272 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %271, i64 3
  %273 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %272, align 8
  %274 = tail call i8* %273(%class.GrGLSLUniformHandler* %269, i32 %266) #12
  br label %275

275:                                              ; preds = %263, %268
  %276 = phi i8* [ %274, %268 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %263 ]
  %277 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 4, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, -1
  br i1 %279, label %287, label %280

280:                                              ; preds = %275
  %281 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %282 = bitcast %class.GrGLSLUniformHandler* %281 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %283 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %282, align 8
  %284 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %283, i64 3
  %285 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %284, align 8
  %286 = tail call i8* %285(%class.GrGLSLUniformHandler* %281, i32 %278) #12
  br label %287

287:                                              ; preds = %275, %280
  %288 = phi i8* [ %286, %280 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %275 ]
  %289 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 12, i32 0
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %290, -1
  br i1 %291, label %299, label %292

292:                                              ; preds = %287
  %293 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %294 = bitcast %class.GrGLSLUniformHandler* %293 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %295 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %294, align 8
  %296 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %295, i64 3
  %297 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %296, align 8
  %298 = tail call i8* %297(%class.GrGLSLUniformHandler* %293, i32 %290) #12
  br label %299

299:                                              ; preds = %287, %292
  %300 = phi i8* [ %298, %292 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %287 ]
  %301 = load i32, i32* %8, align 4
  %302 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %303 = load i32, i32* %172, align 4
  %304 = bitcast %class.GrGLSLUniformHandler* %302 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %305 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %304, align 8
  %306 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %305, i64 3
  %307 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %306, align 8
  %308 = tail call i8* %307(%class.GrGLSLUniformHandler* %302, i32 %303) #12
  %309 = load i32, i32* %8, align 4
  %310 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %311 = load i32, i32* %172, align 4
  %312 = bitcast %class.GrGLSLUniformHandler* %310 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %313 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %312, align 8
  %314 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %313, i64 3
  %315 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %314, align 8
  %316 = tail call i8* %315(%class.GrGLSLUniformHandler* %310, i32 %311) #12
  %317 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 5, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %318, -1
  br i1 %319, label %327, label %320

320:                                              ; preds = %299
  %321 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %322 = bitcast %class.GrGLSLUniformHandler* %321 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %323 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %322, align 8
  %324 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %323, i64 3
  %325 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %324, align 8
  %326 = tail call i8* %325(%class.GrGLSLUniformHandler* %321, i32 %318) #12
  br label %327

327:                                              ; preds = %299, %320
  %328 = phi i8* [ %326, %320 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %299 ]
  %329 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 13, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = icmp eq i32 %330, -1
  br i1 %331, label %339, label %332

332:                                              ; preds = %327
  %333 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %334 = bitcast %class.GrGLSLUniformHandler* %333 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %335 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %334, align 8
  %336 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %335, i64 3
  %337 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %336, align 8
  %338 = tail call i8* %337(%class.GrGLSLUniformHandler* %333, i32 %330) #12
  br label %339

339:                                              ; preds = %327, %332
  %340 = phi i8* [ %338, %332 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %327 ]
  %341 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 6, i32 0
  %342 = load i32, i32* %341, align 4
  %343 = icmp eq i32 %342, -1
  br i1 %343, label %351, label %344

344:                                              ; preds = %339
  %345 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %346 = bitcast %class.GrGLSLUniformHandler* %345 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %347 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %346, align 8
  %348 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %347, i64 3
  %349 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %348, align 8
  %350 = tail call i8* %349(%class.GrGLSLUniformHandler* %345, i32 %342) #12
  br label %351

351:                                              ; preds = %339, %344
  %352 = phi i8* [ %350, %344 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %339 ]
  %353 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 14, i32 0
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %354, -1
  br i1 %355, label %363, label %356

356:                                              ; preds = %351
  %357 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %358 = bitcast %class.GrGLSLUniformHandler* %357 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %359 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %358, align 8
  %360 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %359, i64 3
  %361 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %360, align 8
  %362 = tail call i8* %361(%class.GrGLSLUniformHandler* %357, i32 %354) #12
  br label %363

363:                                              ; preds = %351, %356
  %364 = phi i8* [ %362, %356 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %351 ]
  %365 = load i32, i32* %8, align 4
  %366 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %367 = load i32, i32* %172, align 4
  %368 = bitcast %class.GrGLSLUniformHandler* %366 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %369 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %368, align 8
  %370 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %369, i64 3
  %371 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %370, align 8
  %372 = tail call i8* %371(%class.GrGLSLUniformHandler* %366, i32 %367) #12
  %373 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 7, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %374, -1
  br i1 %375, label %383, label %376

376:                                              ; preds = %363
  %377 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %378 = bitcast %class.GrGLSLUniformHandler* %377 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %379 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %378, align 8
  %380 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %379, i64 3
  %381 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %380, align 8
  %382 = tail call i8* %381(%class.GrGLSLUniformHandler* %377, i32 %374) #12
  br label %383

383:                                              ; preds = %363, %376
  %384 = phi i8* [ %382, %376 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %363 ]
  %385 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 15, i32 0
  %386 = load i32, i32* %385, align 4
  %387 = icmp eq i32 %386, -1
  br i1 %387, label %395, label %388

388:                                              ; preds = %383
  %389 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %390 = bitcast %class.GrGLSLUniformHandler* %389 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %391 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %390, align 8
  %392 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %391, i64 3
  %393 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %392, align 8
  %394 = tail call i8* %393(%class.GrGLSLUniformHandler* %389, i32 %386) #12
  br label %395

395:                                              ; preds = %383, %388
  %396 = phi i8* [ %394, %388 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %383 ]
  %397 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 8, i32 0
  %398 = load i32, i32* %397, align 4
  %399 = icmp eq i32 %398, -1
  br i1 %399, label %407, label %400

400:                                              ; preds = %395
  %401 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %402 = bitcast %class.GrGLSLUniformHandler* %401 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %403 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %402, align 8
  %404 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %403, i64 3
  %405 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %404, align 8
  %406 = tail call i8* %405(%class.GrGLSLUniformHandler* %401, i32 %398) #12
  br label %407

407:                                              ; preds = %395, %400
  %408 = phi i8* [ %406, %400 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %395 ]
  %409 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 16, i32 0
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, -1
  br i1 %411, label %419, label %412

412:                                              ; preds = %407
  %413 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %414 = bitcast %class.GrGLSLUniformHandler* %413 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %415 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %414, align 8
  %416 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %415, i64 3
  %417 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %416, align 8
  %418 = tail call i8* %417(%class.GrGLSLUniformHandler* %413, i32 %410) #12
  br label %419

419:                                              ; preds = %407, %412
  %420 = phi i8* [ %418, %412 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), %407 ]
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %180, i8* getelementptr inbounds ([851 x i8], [851 x i8]* @.str.22, i64 0, i64 0), i8* %182, i32 %183, i8* %190, i32 %191, i8* %198, i32 %199, i8* %206, i8* %213, i8* %220, i8* %232, i8* %244, i32 %245, i8* %252, i8* %264, i8* %276, i8* %288, i8* %300, i32 %301, i8* %308, i32 %309, i8* %316, i8* %328, i8* %340, i8* %352, i8* %364, i32 %365, i8* %372, i8* %384, i8* %396, i8* %408, i8* %420)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN37GrGLSLUnrolledBinaryGradientColorizer9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLUnrolledBinaryGradientColorizer*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %7 = bitcast %class.GrFragmentProcessor* %6 to float*
  %8 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %9 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %9, i64 17
  %11 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %10, align 8
  tail call void %11(%class.GrGLSLProgramDataManager* %1, i32 %5, i32 1, float* %7) #12
  %12 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 2, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 1
  %17 = bitcast %class.SkSTArray* %16 to float*
  %18 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %19 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %18, i64 17
  %20 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %19, align 8
  tail call void %20(%class.GrGLSLProgramDataManager* %1, i32 %13, i32 1, float* %17) #12
  br label %21

21:                                               ; preds = %3, %15
  %22 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 3, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 1, i32 1, i32 1
  %27 = bitcast i64* %26 to float*
  %28 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %29 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %28, i64 17
  %30 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %29, align 8
  tail call void %30(%class.GrGLSLProgramDataManager* %1, i32 %23, i32 1, float* %27) #12
  br label %31

31:                                               ; preds = %21, %25
  %32 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 4, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 3
  %37 = bitcast i32* %36 to float*
  %38 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %39 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %38, i64 17
  %40 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %39, align 8
  tail call void %40(%class.GrGLSLProgramDataManager* %1, i32 %33, i32 1, float* %37) #12
  br label %41

41:                                               ; preds = %31, %35
  %42 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 5, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %51, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 2
  %47 = bitcast %class.GrFragmentProcessor* %46 to float*
  %48 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %49 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %48, i64 17
  %50 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %49, align 8
  tail call void %50(%class.GrGLSLProgramDataManager* %1, i32 %43, i32 1, float* %47) #12
  br label %51

51:                                               ; preds = %41, %45
  %52 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 6, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %61, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 2, i32 1
  %57 = bitcast %class.SkSTArray* %56 to float*
  %58 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %59 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %58, i64 17
  %60 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %59, align 8
  tail call void %60(%class.GrGLSLProgramDataManager* %1, i32 %53, i32 1, float* %57) #12
  br label %61

61:                                               ; preds = %51, %55
  %62 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 7, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 2, i32 1, i32 1, i32 1
  %67 = bitcast i64* %66 to float*
  %68 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %69 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %68, i64 17
  %70 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %69, align 8
  tail call void %70(%class.GrGLSLProgramDataManager* %1, i32 %63, i32 1, float* %67) #12
  br label %71

71:                                               ; preds = %61, %65
  %72 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 8, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 2, i32 3
  %77 = bitcast i32* %76 to float*
  %78 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %79 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %78, i64 17
  %80 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %79, align 8
  tail call void %80(%class.GrGLSLProgramDataManager* %1, i32 %73, i32 1, float* %77) #12
  br label %81

81:                                               ; preds = %71, %75
  %82 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 9, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 3
  %85 = bitcast %class.GrFragmentProcessor* %84 to float*
  %86 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %87 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %86, i64 17
  %88 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %87, align 8
  tail call void %88(%class.GrGLSLProgramDataManager* %1, i32 %83, i32 1, float* %85) #12
  %89 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 10, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %98, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 3, i32 1
  %94 = bitcast %class.SkSTArray* %93 to float*
  %95 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %96 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %95, i64 17
  %97 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %96, align 8
  tail call void %97(%class.GrGLSLProgramDataManager* %1, i32 %90, i32 1, float* %94) #12
  br label %98

98:                                               ; preds = %81, %92
  %99 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 11, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %108, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 3, i32 1, i32 1, i32 1
  %104 = bitcast i64* %103 to float*
  %105 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %106 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %105, i64 17
  %107 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %106, align 8
  tail call void %107(%class.GrGLSLProgramDataManager* %1, i32 %100, i32 1, float* %104) #12
  br label %108

108:                                              ; preds = %98, %102
  %109 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 12, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, -1
  br i1 %111, label %118, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 3, i32 3
  %114 = bitcast i32* %113 to float*
  %115 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %116 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %115, i64 17
  %117 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %116, align 8
  tail call void %117(%class.GrGLSLProgramDataManager* %1, i32 %110, i32 1, float* %114) #12
  br label %118

118:                                              ; preds = %108, %112
  %119 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 13, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 4
  %124 = bitcast %class.GrFragmentProcessor* %123 to float*
  %125 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %126 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %125, i64 17
  %127 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %126, align 8
  tail call void %127(%class.GrGLSLProgramDataManager* %1, i32 %120, i32 1, float* %124) #12
  br label %128

128:                                              ; preds = %118, %122
  %129 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 14, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %138, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 4, i32 1
  %134 = bitcast %class.SkSTArray* %133 to float*
  %135 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %136 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %135, i64 17
  %137 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %136, align 8
  tail call void %137(%class.GrGLSLProgramDataManager* %1, i32 %130, i32 1, float* %134) #12
  br label %138

138:                                              ; preds = %128, %132
  %139 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 15, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, -1
  br i1 %141, label %148, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 4, i32 1, i32 1, i32 1
  %144 = bitcast i64* %143 to float*
  %145 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %146 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %145, i64 17
  %147 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %146, align 8
  tail call void %147(%class.GrGLSLProgramDataManager* %1, i32 %140, i32 1, float* %144) #12
  br label %148

148:                                              ; preds = %138, %142
  %149 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 16, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, -1
  br i1 %151, label %158, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 4, i32 3
  %154 = bitcast i32* %153 to float*
  %155 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %156 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %155, i64 17
  %157 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %156, align 8
  tail call void %157(%class.GrGLSLProgramDataManager* %1, i32 %150, i32 1, float* %154) #12
  br label %158

158:                                              ; preds = %148, %152
  %159 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 17, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 5
  %162 = bitcast %class.GrFragmentProcessor* %161 to float*
  %163 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %164 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %163, i64 17
  %165 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %164, align 8
  tail call void %165(%class.GrGLSLProgramDataManager* %1, i32 %160, i32 1, float* %162) #12
  %166 = getelementptr inbounds %class.GrGLSLUnrolledBinaryGradientColorizer, %class.GrGLSLUnrolledBinaryGradientColorizer* %0, i64 0, i32 18, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 5, i32 1
  %169 = bitcast %class.SkSTArray* %168 to float*
  %170 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %8, align 8
  %171 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %170, i64 17
  %172 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %171, align 8
  tail call void %172(%class.GrGLSLProgramDataManager* %1, i32 %167, i32 1, float* %169) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #12
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.1* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #12
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #12
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #12
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #12
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #12

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
