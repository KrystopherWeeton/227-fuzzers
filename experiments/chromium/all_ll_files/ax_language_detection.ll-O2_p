; ModuleID = '../../ui/accessibility/ax_language_detection.cc'
source_filename = "../../ui/accessibility/ax_language_detection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.ui::AXLanguageInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.ui::AXLanguageInfoStats" = type { %"class.std::__1::unordered_map", %"class.std::__1::vector.24", i8, i8, i32, i32, i32, i32, i32, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.31" }
%"class.std::__1::__hash_table.31" = type <{ %"class.std::__1::unique_ptr.32", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__hash_node_base.35"** }
%"struct.std::__1::__hash_node_base.35" = type { %"struct.std::__1::__hash_node_base.35"* }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__bucket_list_deallocator.37" }
%"class.std::__1::__bucket_list_deallocator.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base.35" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.ui::AXLanguageDetectionManager" = type { %"class.chrome_lang_id::NNetLanguageIdentifier", %"class.chrome_lang_id::NNetLanguageIdentifier", %"class.std::__1::unique_ptr.162", %"class.ui::AXTree"*, %"class.ui::AXLanguageInfoStats" }
%"class.chrome_lang_id::NNetLanguageIdentifier" = type { i32, %"class.chrome_lang_id::LanguageIdEmbeddingFeatureExtractor", %"class.chrome_lang_id::WorkspaceRegistry", %"class.chrome_lang_id::LangIdNNParams", %"class.chrome_lang_id::EmbeddingNetwork", %"class.chrome_lang_id::ContinuousBagOfNgramsFunction", i32, i32, i32, i32 }
%"class.chrome_lang_id::LanguageIdEmbeddingFeatureExtractor" = type { %"class.chrome_lang_id::EmbeddingFeatureExtractor" }
%"class.chrome_lang_id::EmbeddingFeatureExtractor" = type { %"class.chrome_lang_id::GenericEmbeddingFeatureExtractor.base", %"class.std::__1::vector.64" }
%"class.chrome_lang_id::GenericEmbeddingFeatureExtractor.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.57", %"class.std::__1::vector.57", i8 }>
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i32*, i32*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i32* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.chrome_lang_id::FeatureExtractor"*, %"class.chrome_lang_id::FeatureExtractor"*, %"class.std::__1::__compressed_pair.66" }
%"class.chrome_lang_id::FeatureExtractor" = type opaque
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.chrome_lang_id::FeatureExtractor"* }
%"class.chrome_lang_id::WorkspaceRegistry" = type { %"class.std::__1::unordered_map.71", %"class.std::__1::unordered_map.99" }
%"class.std::__1::unordered_map.71" = type { %"class.std::__1::__hash_table.72" }
%"class.std::__1::__hash_table.72" = type <{ %"class.std::__1::unique_ptr.73", %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93", [4 x i8] }>
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75", %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base.76"** }
%"struct.std::__1::__hash_node_base.76" = type { %"struct.std::__1::__hash_node_base.76"* }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::__bucket_list_deallocator.78" }
%"class.std::__1::__bucket_list_deallocator.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::__hash_node_base.76" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.99" = type { %"class.std::__1::__hash_table.100" }
%"class.std::__1::__hash_table.100" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.119", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base.104"** }
%"struct.std::__1::__hash_node_base.104" = type { %"struct.std::__1::__hash_node_base.104"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator.106" }
%"class.std::__1::__bucket_list_deallocator.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.104" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.chrome_lang_id::LangIdNNParams" = type { %"class.chrome_lang_id::EmbeddingNetworkParams", [6 x i8*], [6 x i16*], [1 x i8*], [1 x i8*], [1 x i8*], [1 x i8*] }
%"class.chrome_lang_id::EmbeddingNetworkParams" = type { i32 (...)** }
%"class.chrome_lang_id::EmbeddingNetwork" = type { i32 (...)**, %"class.chrome_lang_id::EmbeddingNetworkParams"*, %"class.std::__1::vector.123", %"class.std::__1::vector.130", %"class.std::__1::vector.132", %"class.std::__1::vector.132", %"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.chrome_lang_id::EmbeddingNetwork::EmbeddingMatrix"*, %"class.chrome_lang_id::EmbeddingNetwork::EmbeddingMatrix"*, %"class.std::__1::__compressed_pair.125" }
%"class.chrome_lang_id::EmbeddingNetwork::EmbeddingMatrix" = type { i32, i32, i32, i8*, i32, i16* }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.chrome_lang_id::EmbeddingNetwork::EmbeddingMatrix"* }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.std::__1::vector.132"*, %"class.std::__1::vector.132"*, %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.std::__1::vector.132"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper"*, %"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper"*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper"* }
%"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper" = type <{ float*, i32, [4 x i8] }>
%"class.chrome_lang_id::ContinuousBagOfNgramsFunction" = type <{ %"class.chrome_lang_id::FeatureFunction", i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.chrome_lang_id::FeatureFunction" = type { %"class.chrome_lang_id::GenericFeatureFunction" }
%"class.chrome_lang_id::GenericFeatureFunction" = type { i32 (...)**, %"class.chrome_lang_id::GenericFeatureExtractor"*, %"class.chrome_lang_id::FeatureFunctionDescriptor"*, %"class.chrome_lang_id::FeatureType"*, %"class.std::__1::basic_string" }
%"class.chrome_lang_id::GenericFeatureExtractor" = type { i32 (...)**, %"class.chrome_lang_id::FeatureExtractorDescriptor", %"class.std::__1::vector.154" }
%"class.chrome_lang_id::FeatureExtractorDescriptor" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic.144", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.144" = type { %"struct.std::__1::__atomic_base.145" }
%"struct.std::__1::__atomic_base.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic.149" }
%"struct.std::__1::atomic.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"class.chrome_lang_id::FeatureType"**, %"class.chrome_lang_id::FeatureType"**, %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.chrome_lang_id::FeatureType"** }
%"class.chrome_lang_id::FeatureFunctionDescriptor" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.161", %"class.google::protobuf::RepeatedPtrField", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i32, [4 x i8] }>
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::RepeatedPtrField.161" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.chrome_lang_id::FeatureType" = type <{ i32 (...)**, %"class.std::__1::basic_string", i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.ui::AXLanguageDetectionObserver"* }
%"class.ui::AXLanguageDetectionObserver" = type { %"class.ui::AXTreeObserver", %"class.ui::AXTree"* }
%"class.ui::AXTreeObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.149" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.165" }
%"struct.std::__1::atomic.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__atomic_base.167" }
%"struct.std::__1::__atomic_base.167" = type { %"struct.std::__1::__cxx_atomic_impl.168" }
%"struct.std::__1::__cxx_atomic_impl.168" = type { %"struct.std::__1::__cxx_atomic_base_impl.169" }
%"struct.std::__1::__cxx_atomic_base_impl.169" = type { i8 }
%"class.ui::AXTree" = type { %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr.170", %"class.base::ObserverList", %"class.ui::AXNode"*, %"class.std::__1::unordered_map.274", %"class.std::__1::basic_string", %"struct.ui::AXTreeData", %"class.std::__1::map.302", %"class.std::__1::map.313", %"class.std::__1::map.324", %"class.std::__1::unordered_map.335", i32, [4 x i8], %"class.std::__1::unordered_map.359", i8, i8, %"class.std::__1::vector.383" }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.ui::AXLanguageDetectionManager"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.174", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.177" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector.182", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.268" }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.ui::AXNode"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.189", %"class.std::__1::vector.197", %"class.std::__1::vector.205", %"class.std::__1::vector.213", %"class.std::__1::vector.221", %"class.std::__1::vector.229", %"class.std::__1::vector.237", %"class.std::__1::vector.57", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair.191"* }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"struct.std::__1::pair.199"*, %"struct.std::__1::pair.199"*, %"class.std::__1::__compressed_pair.200" }
%"struct.std::__1::pair.199" = type opaque
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::pair.199"* }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.std::__1::pair.207"*, %"struct.std::__1::pair.207"*, %"class.std::__1::__compressed_pair.208" }
%"struct.std::__1::pair.207" = type opaque
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::pair.207"* }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.std::__1::pair.215"*, %"struct.std::__1::pair.215"*, %"class.std::__1::__compressed_pair.216" }
%"struct.std::__1::pair.215" = type opaque
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::pair.215"* }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"struct.std::__1::pair.223"*, %"struct.std::__1::pair.223"*, %"class.std::__1::__compressed_pair.224" }
%"struct.std::__1::pair.223" = type opaque
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.std::__1::pair.223"* }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"struct.std::__1::pair.231"*, %"struct.std::__1::pair.231"*, %"class.std::__1::__compressed_pair.232" }
%"struct.std::__1::pair.231" = type opaque
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::pair.231"* }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %"struct.std::__1::pair.239"*, %"struct.std::__1::pair.239"*, %"class.std::__1::__compressed_pair.240" }
%"struct.std::__1::pair.239" = type opaque
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.std::__1::pair.239"* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.245" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map", %"class.std::__1::basic_string.259" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::basic_string.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.262 }
%union.anon.262 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.ui::AXLanguageInfo"* }
%"class.std::__1::unordered_map.274" = type { %"class.std::__1::__hash_table.275" }
%"class.std::__1::__hash_table.275" = type <{ %"class.std::__1::unique_ptr.276", %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.296", [4 x i8] }>
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278", %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base.279"** }
%"struct.std::__1::__hash_node_base.279" = type { %"struct.std::__1::__hash_node_base.279"* }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.std::__1::__bucket_list_deallocator.281" }
%"class.std::__1::__bucket_list_deallocator.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::__hash_node_base.279" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.301 }
%union.anon.301 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map.302" = type { %"class.std::__1::__tree.303" }
%"class.std::__1::__tree.303" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.304", %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::map.313" = type { %"class.std::__1::__tree.314" }
%"class.std::__1::__tree.314" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.315", %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::map.324" = type { %"class.std::__1::__tree.325" }
%"class.std::__1::__tree.325" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.326", %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::unordered_map.335" = type { %"class.std::__1::__hash_table.336" }
%"class.std::__1::__hash_table.336" = type <{ %"class.std::__1::unique_ptr.337", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.355", [4 x i8] }>
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339", %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.std::__1::__hash_node_base.340"** }
%"struct.std::__1::__hash_node_base.340" = type { %"struct.std::__1::__hash_node_base.340"* }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.std::__1::__bucket_list_deallocator.342" }
%"class.std::__1::__bucket_list_deallocator.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.std::__1::__hash_node_base.340" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.359" = type { %"class.std::__1::__hash_table.360" }
%"class.std::__1::__hash_table.360" = type <{ %"class.std::__1::unique_ptr.361", %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.379", [4 x i8] }>
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363", %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.364"** }
%"struct.std::__1::__hash_node_base.364" = type { %"struct.std::__1::__hash_node_base.364"* }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.std::__1::__bucket_list_deallocator.366" }
%"class.std::__1::__bucket_list_deallocator.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.std::__1::__hash_node_base.364" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.383" = type { %"class.std::__1::__vector_base.384" }
%"class.std::__1::__vector_base.384" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.385" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.ui::AXEventIntent"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.448" = type { i8 }
%"struct.std::__1::greater" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.54" }
%"struct.std::__1::pair.54" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::vector.394" = type { %"class.std::__1::__vector_base.395" }
%"class.std::__1::__vector_base.395" = type { %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"class.std::__1::__compressed_pair.403" }
%"struct.chrome_lang_id::NNetLanguageIdentifier::Result" = type { %"class.std::__1::basic_string", float, i8, float, %"class.std::__1::vector.396" }
%"class.std::__1::vector.396" = type { %"class.std::__1::__vector_base.397" }
%"class.std::__1::__vector_base.397" = type { %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"*, %"class.std::__1::__compressed_pair.398" }
%"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo" = type { i32, i32, float }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* }
%"class.std::__1::vector.410" = type { %"class.std::__1::__vector_base.411" }
%"class.std::__1::__vector_base.411" = type { %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"*, %"class.std::__1::__compressed_pair.412" }
%"struct.ui::AXLanguageSpan" = type <{ i32, i32, %"class.std::__1::basic_string", float, [4 x i8] }>
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"struct.ui::AXLanguageSpan"* }
%"class.std::__1::vector.420" = type { %"class.std::__1::__vector_base.421" }
%"class.std::__1::__vector_base.421" = type { %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"*, %"class.std::__1::__compressed_pair.422" }
%"struct.ui::AXTreeObserver::Change" = type <{ %"class.ui::AXNode"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.ui::AXTreeObserver::Change"* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2ui14AXTreeObserver20OnNodeDataWillChangeEPNS_6AXTreeERKNS_10AXNodeDataES5_ = comdat any

$_ZN2ui14AXTreeObserver17OnNodeDataChangedEPNS_6AXTreeERKNS_10AXNodeDataES5_ = comdat any

$_ZN2ui14AXTreeObserver13OnRoleChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom4RoleES7_ = comdat any

$_ZN2ui14AXTreeObserver14OnStateChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom5StateEb = comdat any

$_ZN2ui14AXTreeObserver24OnStringAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_ = comdat any

$_ZN2ui14AXTreeObserver21OnIntAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom12IntAttributeEii = comdat any

$_ZN2ui14AXTreeObserver23OnFloatAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom14FloatAttributeEff = comdat any

$_ZN2ui14AXTreeObserver22OnBoolAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom13BoolAttributeEb = comdat any

$_ZN2ui14AXTreeObserver25OnIntListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS8_9allocatorIiEEEESE_ = comdat any

$_ZN2ui14AXTreeObserver28OnStringListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom19StringListAttributeERKNSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEESJ_ = comdat any

$_ZN2ui14AXTreeObserver17OnTreeDataChangedEPNS_6AXTreeERKNS_10AXTreeDataES5_ = comdat any

$_ZN2ui14AXTreeObserver19OnNodeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver22OnSubtreeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver22OnNodeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver25OnSubtreeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver13OnNodeCreatedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver13OnNodeDeletedEPNS_6AXTreeEi = comdat any

$_ZN2ui14AXTreeObserver16OnNodeReparentedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver13OnNodeChangedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver26OnTreeManagerWillBeRemovedENS_8AXTreeIDE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_ = comdat any

$_ZNSt3__16vectorINS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE24__emplace_back_slow_pathIJRKiRKS7_EEEvDpOT_ = comdat any

$_ZNSt3__16__sortIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEvT0_SD_T_ = comdat any

$_ZNSt3__17__sort3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_T_ = comdat any

$_ZNSt3__17__sort4IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_T_ = comdat any

$_ZNSt3__17__sort5IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_SD_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEvT0_SD_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEbT0_SD_T_ = comdat any

$_ZNSt3__16vectorINS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2ui14AXLanguageSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [56 x i8] c"Accessibility.LanguageDetection.CountDetectionAttempted\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"Accessibility.LanguageDetection.PercentageLanguageDetected\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"Accessibility.LanguageDetection.CountLabelled\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"Accessibility.LanguageDetection.PercentageLabelledWithTop\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"Accessibility.LanguageDetection.PercentageOverridden\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"Accessibility.LanguageDetection.LangsPerPage\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.6 = private unnamed_addr constant [32 x i8] c"AXLanguageInfo::DetectLanguages\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"AXLanguageInfo::LabelLanguages\00", align 1
@_ZTVN2ui27AXLanguageDetectionObserverE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXLanguageDetectionObserver"*)* @_ZN2ui27AXLanguageDetectionObserverD2Ev to i8*), i8* bitcast (void (%"class.ui::AXLanguageDetectionObserver"*)* @_ZN2ui27AXLanguageDetectionObserverD0Ev to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*)* @_ZN2ui14AXTreeObserver20OnNodeDataWillChangeEPNS_6AXTreeERKNS_10AXNodeDataES5_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*)* @_ZN2ui14AXTreeObserver17OnNodeDataChangedEPNS_6AXTreeERKNS_10AXNodeDataES5_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i32)* @_ZN2ui14AXTreeObserver13OnRoleChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom4RoleES7_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i1)* @_ZN2ui14AXTreeObserver14OnStateChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom5StateEb to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN2ui14AXTreeObserver24OnStringAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i32, i32)* @_ZN2ui14AXTreeObserver21OnIntAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom12IntAttributeEii to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, float, float)* @_ZN2ui14AXTreeObserver23OnFloatAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom14FloatAttributeEff to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i1)* @_ZN2ui14AXTreeObserver22OnBoolAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom13BoolAttributeEb to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::vector.57"*, %"class.std::__1::vector.57"*)* @_ZN2ui14AXTreeObserver25OnIntListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS8_9allocatorIiEEEESE_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::vector"*, %"class.std::__1::vector"*)* @_ZN2ui14AXTreeObserver28OnStringListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom19StringListAttributeERKNSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEESJ_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXTreeData"*, %"struct.ui::AXTreeData"*)* @_ZN2ui14AXTreeObserver17OnTreeDataChangedEPNS_6AXTreeERKNS_10AXTreeDataES5_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver19OnNodeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver22OnSubtreeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver22OnNodeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver25OnSubtreeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver13OnNodeCreatedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)* @_ZN2ui14AXTreeObserver13OnNodeDeletedEPNS_6AXTreeEi to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver16OnNodeReparentedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver13OnNodeChangedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTreeID"*)* @_ZN2ui14AXTreeObserver26OnTreeManagerWillBeRemovedENS_8AXTreeIDE to i8*), i8* bitcast (void (%"class.ui::AXLanguageDetectionObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.420"*)* @_ZN2ui27AXLanguageDetectionObserver22OnAtomicUpdateFinishedEPNS_6AXTreeEbRKNSt3__16vectorINS_14AXTreeObserver6ChangeENS3_9allocatorIS6_EEEE to i8*)] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN2ui14AXLanguageInfoC1Ev = hidden unnamed_addr alias void (%"struct.ui::AXLanguageInfo"*), void (%"struct.ui::AXLanguageInfo"*)* @_ZN2ui14AXLanguageInfoC2Ev
@_ZN2ui14AXLanguageInfoD1Ev = hidden unnamed_addr alias void (%"struct.ui::AXLanguageInfo"*), void (%"struct.ui::AXLanguageInfo"*)* @_ZN2ui14AXLanguageInfoD2Ev
@_ZN2ui19AXLanguageInfoStatsC1Ev = hidden unnamed_addr alias void (%"class.ui::AXLanguageInfoStats"*), void (%"class.ui::AXLanguageInfoStats"*)* @_ZN2ui19AXLanguageInfoStatsC2Ev
@_ZN2ui19AXLanguageInfoStatsD1Ev = hidden unnamed_addr alias void (%"class.ui::AXLanguageInfoStats"*), void (%"class.ui::AXLanguageInfoStats"*)* @_ZN2ui19AXLanguageInfoStatsD2Ev
@_ZN2ui26AXLanguageDetectionManagerC1EPNS_6AXTreeE = hidden unnamed_addr alias void (%"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXTree"*), void (%"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXTree"*)* @_ZN2ui26AXLanguageDetectionManagerC2EPNS_6AXTreeE
@_ZN2ui26AXLanguageDetectionManagerD1Ev = hidden unnamed_addr alias void (%"class.ui::AXLanguageDetectionManager"*), void (%"class.ui::AXLanguageDetectionManager"*)* @_ZN2ui26AXLanguageDetectionManagerD2Ev
@_ZN2ui27AXLanguageDetectionObserverC1EPNS_6AXTreeE = hidden unnamed_addr alias void (%"class.ui::AXLanguageDetectionObserver"*, %"class.ui::AXTree"*), void (%"class.ui::AXLanguageDetectionObserver"*, %"class.ui::AXTree"*)* @_ZN2ui27AXLanguageDetectionObserverC2EPNS_6AXTreeE
@_ZN2ui27AXLanguageDetectionObserverD1Ev = hidden unnamed_addr alias void (%"class.ui::AXLanguageDetectionObserver"*), void (%"class.ui::AXLanguageDetectionObserver"*)* @_ZN2ui27AXLanguageDetectionObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXLanguageInfoC2Ev(%"struct.ui::AXLanguageInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.ui::AXLanguageInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXLanguageInfoD2Ev(%"struct.ui::AXLanguageInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %1, %26
  %29 = bitcast %"struct.ui::AXLanguageInfo"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %28, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19AXLanguageInfoStatsC2Ev(%"class.ui::AXLanguageInfoStats"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.std::__1::__compressed_pair.21"* %2 to i32*
  %4 = bitcast %"class.ui::AXLanguageInfoStats"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %3, align 4
  %5 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 3
  %8 = bitcast %"class.std::__1::__compressed_pair.49"* %7 to i32*
  %9 = bitcast %"class.std::__1::vector.24"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 26, i1 false)
  %10 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 52, i1 false)
  store i32 1065353216, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19AXLanguageInfoStatsD2Ev(%"class.ui::AXLanguageInfoStats"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.35"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1, %17
  %6 = phi %"struct.std::__1::__hash_node_base.35"* [ %8, %17 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %6, i64 2
  %10 = bitcast %"struct.std::__1::__hash_node_base.35"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %5
  %15 = bitcast %"struct.std::__1::__hash_node_base.35"* %9 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %14, %5
  %18 = bitcast %"struct.std::__1::__hash_node_base.35"* %6 to i8*
  tail call void @_ZdlPv(i8* %18) #15
  %19 = icmp eq %"struct.std::__1::__hash_node_base.35"* %8, null
  br i1 %19, label %20, label %5

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.35"** null, %"struct.std::__1::__hash_node_base.35"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.35"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"struct.std::__1::__hash_node_base.35"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %27, i64 0, i32 0, i32 0
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = icmp eq %"struct.std::__1::pair"* %29, null
  br i1 %30, label %54, label %31

31:                                               ; preds = %26
  %32 = bitcast %"struct.std::__1::pair"* %29 to i8*
  %33 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 1, i32 0, i32 1
  %34 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %33, align 8
  %35 = icmp eq %"struct.std::__1::pair"* %34, %29
  br i1 %35, label %52, label %36

36:                                               ; preds = %31, %47
  %37 = phi %"struct.std::__1::pair"* [ %38, %47 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 -1
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 -1, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %44, %36
  %48 = icmp eq %"struct.std::__1::pair"* %38, %29
  br i1 %48, label %49, label %36

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.24"* %27 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %31
  %53 = phi i8* [ %51, %49 ], [ %32, %31 ]
  store %"struct.std::__1::pair"* %29, %"struct.std::__1::pair"** %33, align 8
  tail call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %26, %52
  %55 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %54, %70
  %59 = phi %"struct.std::__1::__hash_node_base"* [ %61, %70 ], [ %56, %54 ]
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %58
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %67, %58
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i8*
  tail call void @_ZdlPv(i8* %71) #15
  %72 = icmp eq %"struct.std::__1::__hash_node_base"* %61, null
  br i1 %72, label %73, label %58

73:                                               ; preds = %70, %54
  %74 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %74, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"** %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = bitcast %"struct.std::__1::__hash_node_base"** %75 to i8*
  tail call void @_ZdlPv(i8* %78) #15
  br label %79

79:                                               ; preds = %73, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19AXLanguageInfoStats3AddERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.ui::AXLanguageInfoStats"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.448", align 1
  %5 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string"* %9, %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::tuple.448", %"class.std::__1::tuple.448"* %4, i64 0, i32 0
  %18 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0
  br label %21

19:                                               ; preds = %33, %2
  %20 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 2
  store i8 0, i8* %20, align 8
  ret void

21:                                               ; preds = %13, %33
  %22 = phi i32 [ 3, %13 ], [ %34, %33 ]
  %23 = phi %"class.std::__1::basic_string"* [ %9, %13 ], [ %35, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  store %"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #16
  %24 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, %"class.std::__1::basic_string"* dereferenceable(24) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.448"* nonnull dereferenceable(1) %4) #16
  %25 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 5
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, %22
  store i32 %29, i32* %27, align 4
  %30 = icmp eq i32 %22, 3
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = call { %"struct.std::__1::__hash_node_base.35"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.31"* %18, %"class.std::__1::basic_string"* dereferenceable(24) %23, %"class.std::__1::basic_string"* dereferenceable(24) %23) #16
  br label %33

33:                                               ; preds = %31, %21
  %34 = add nsw i32 %22, -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 1
  %36 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %36, label %19, label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui19AXLanguageInfoStats20InvalidateTopResultsEv(%"class.ui::AXLanguageInfoStats"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 2
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui19AXLanguageInfoStats8GetScoreERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.ui::AXLanguageInfoStats"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 5
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to i32*
  %9 = load i32, i32* %8, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui19AXLanguageInfoStats22CheckLanguageWithinTopERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.ui::AXLanguageInfoStats"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN2ui19AXLanguageInfoStats18GenerateTopResultsEv(%"class.ui::AXLanguageInfoStats"* %0)
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = icmp eq %"struct.std::__1::pair"* %9, %11
  br i1 %12, label %64, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %17, i8* %23, i8* %24
  %26 = icmp eq i64 %21, 0
  br label %27

27:                                               ; preds = %13, %61
  %28 = phi %"struct.std::__1::pair"* [ %9, %13 ], [ %62, %61 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = icmp eq i64 %21, %37
  br i1 %38, label %39, label %61

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %43 = select i1 %33, i8* %41, i8* %42
  br i1 %17, label %45, label %44

44:                                               ; preds = %39
  br i1 %26, label %64, label %46

45:                                               ; preds = %39
  br i1 %26, label %64, label %58

46:                                               ; preds = %44, %53
  %47 = phi i8* [ %56, %53 ], [ %43, %44 ]
  %48 = phi i8* [ %55, %53 ], [ %24, %44 ]
  %49 = phi i64 [ %54, %53 ], [ %20, %44 ]
  %50 = load i8, i8* %48, align 1
  %51 = load i8, i8* %47, align 1
  %52 = icmp eq i8 %50, %51
  br i1 %52, label %53, label %61

53:                                               ; preds = %46
  %54 = add i64 %49, -1
  %55 = getelementptr inbounds i8, i8* %48, i64 1
  %56 = getelementptr inbounds i8, i8* %47, i64 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %64, label %46

58:                                               ; preds = %45
  %59 = tail call i32 @bcmp(i8* %25, i8* %43, i64 %21) #16
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %46, %27, %58
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 1
  %63 = icmp eq %"struct.std::__1::pair"* %62, %11
  br i1 %63, label %64, label %27

64:                                               ; preds = %58, %45, %44, %61, %53, %7
  %65 = phi i1 [ false, %7 ], [ true, %53 ], [ true, %58 ], [ true, %45 ], [ true, %44 ], [ false, %61 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19AXLanguageInfoStats18GenerateTopResultsEv(%"class.ui::AXLanguageInfoStats"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.std::__1::greater", align 1
  %3 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %7, %5
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %20
  %10 = phi %"struct.std::__1::pair"* [ %11, %20 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 -1
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 -1, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %17, %9
  %21 = icmp eq %"struct.std::__1::pair"* %11, %5
  br i1 %21, label %22, label %9

22:                                               ; preds = %20, %1
  store %"struct.std::__1::pair"* %5, %"struct.std::__1::pair"** %6, align 8
  %23 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = bitcast %"struct.std::__1::__hash_node_base"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = bitcast %"struct.std::__1::pair"** %6 to i64*
  br label %32

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair"** %6 to i64*
  br label %68

32:                                               ; preds = %96, %27
  %33 = phi i64* [ %28, %27 ], [ %31, %96 ]
  %34 = phi %"struct.std::__1::pair"* [ %5, %27 ], [ %100, %96 ]
  %35 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %36 = getelementptr inbounds %"struct.std::__1::greater", %"struct.std::__1::greater"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36)
  call void @_ZNSt3__16__sortIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEvT0_SD_T_(%"struct.std::__1::pair"* %35, %"struct.std::__1::pair"* %34, %"struct.std::__1::greater"* nonnull dereferenceable(1) %2) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36)
  %37 = load i64, i64* %33, align 8
  %38 = bitcast %"class.std::__1::vector.24"* %3 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 5
  %42 = icmp ult i64 %41, 3
  %43 = inttoptr i64 %39 to %"struct.std::__1::pair"*
  %44 = inttoptr i64 %37 to %"struct.std::__1::pair"*
  br i1 %42, label %45, label %47

45:                                               ; preds = %32
  %46 = sub nuw nsw i64 3, %41
  call void @_ZNSt3__16vectorINS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE8__appendEm(%"class.std::__1::vector.24"* %3, i64 %46) #16
  br label %66

47:                                               ; preds = %32
  %48 = icmp eq i64 %40, 96
  br i1 %48, label %66, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 3
  %51 = icmp eq %"struct.std::__1::pair"* %50, %44
  br i1 %51, label %65, label %52

52:                                               ; preds = %49, %63
  %53 = phi %"struct.std::__1::pair"* [ %54, %63 ], [ %44, %49 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %60, %52
  %64 = icmp eq %"struct.std::__1::pair"* %54, %50
  br i1 %64, label %65, label %52

65:                                               ; preds = %63, %49
  store %"struct.std::__1::pair"* %50, %"struct.std::__1::pair"** %6, align 8
  br label %66

66:                                               ; preds = %47, %45, %65
  %67 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 2
  store i8 1, i8* %67, align 8
  ret void

68:                                               ; preds = %96, %29
  %69 = phi %"struct.std::__1::pair"* [ %5, %29 ], [ %100, %96 ]
  %70 = phi i64 [ %25, %29 ], [ %98, %96 ]
  %71 = inttoptr i64 %70 to %"struct.std::__1::__hash_node"*
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %71, i64 0, i32 2, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %71, i64 0, i32 2, i32 0, i32 0
  %74 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %75 = icmp ult %"struct.std::__1::pair"* %69, %74
  br i1 %75, label %76, label %95

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0
  %78 = load i32, i32* %72, align 4
  store i32 %78, i32* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 1
  %80 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %76
  %85 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #16
  br label %92

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %79, i8* %89, i64 %91) #16
  br label %92

92:                                               ; preds = %87, %84
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 1
  %94 = ptrtoint %"struct.std::__1::pair"* %93 to i64
  store i64 %94, i64* %31, align 8
  br label %96

95:                                               ; preds = %68
  tail call void @_ZNSt3__16vectorINS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE24__emplace_back_slow_pathIJRKiRKS7_EEEvDpOT_(%"class.std::__1::vector.24"* %3, i32* dereferenceable(4) %72, %"class.std::__1::basic_string"* dereferenceable(24) %73) #16
  br label %96

96:                                               ; preds = %92, %95
  %97 = inttoptr i64 %70 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  %100 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  br i1 %99, label %32, label %68
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2ui19AXLanguageInfoStats21RecordLabelStatisticsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_b(%"class.ui::AXLanguageInfoStats"* nocapture, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  br i1 %3, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  br label %12

12:                                               ; preds = %8, %4
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp eq i64 %20, %28
  br i1 %29, label %30, label %62

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %34 = select i1 %16, i8* %32, i8* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %38 = select i1 %24, i8* %36, i8* %37
  %39 = icmp eq i64 %20, 0
  br i1 %16, label %46, label %40

40:                                               ; preds = %30
  br i1 %39, label %66, label %41

41:                                               ; preds = %40
  %42 = ptrtoint i8* %32 to i64
  %43 = trunc i64 %42 to i8
  %44 = load i8, i8* %38, align 1
  %45 = icmp eq i8 %44, %43
  br i1 %45, label %47, label %62

46:                                               ; preds = %30
  br i1 %39, label %66, label %59

47:                                               ; preds = %41, %54
  %48 = phi i64 [ %51, %54 ], [ %19, %41 ]
  %49 = phi i8* [ %52, %54 ], [ %33, %41 ]
  %50 = phi i8* [ %55, %54 ], [ %38, %41 ]
  %51 = add i64 %48, -1
  %52 = getelementptr inbounds i8, i8* %49, i64 1
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %66, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds i8, i8* %50, i64 1
  %56 = load i8, i8* %52, align 1
  %57 = load i8, i8* %55, align 1
  %58 = icmp eq i8 %56, %57
  br i1 %58, label %47, label %62

59:                                               ; preds = %46
  %60 = tail call i32 @bcmp(i8* %34, i8* %38, i64 %20) #16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %54, %41, %59, %12
  %63 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 8
  %64 = load i32, i32* %63, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 4
  br label %66

66:                                               ; preds = %47, %59, %40, %46, %62
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui19AXLanguageInfoStats22RecordDetectionAttemptEv(%"class.ui::AXLanguageInfoStats"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19AXLanguageInfoStats13ReportMetricsEv(%"class.ui::AXLanguageInfoStats"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %96, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base24UmaHistogramCustomCountsEPKciiii(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 %3, i32 1, i32 1000, i32 50) #16
  %6 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = mul nsw i32 %7, 100
  %9 = load i32, i32* %2, align 4
  %10 = sdiv i32 %8, %9
  tail call void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseEPKci(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 %10) #16
  %11 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  tail call void @_ZN4base24UmaHistogramCustomCountsEPKciiii(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 %12, i32 1, i32 1000, i32 50) #16
  %13 = load i32, i32* %11, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 7
  %17 = load i32, i32* %16, align 8
  %18 = mul nsw i32 %17, 100
  %19 = sdiv i32 %18, %13
  tail call void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseEPKci(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i32 %19) #16
  %20 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = mul nsw i32 %21, 100
  %23 = load i32, i32* %11, align 4
  %24 = sdiv i32 %22, %23
  tail call void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseEPKci(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0), i32 %24) #16
  br label %25

25:                                               ; preds = %5, %15
  %26 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i32 %28, i32 15) #16
  %29 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %96

32:                                               ; preds = %25
  %33 = load i64, i64* %26, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %94, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.35"* %37, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %35, %51
  %40 = phi %"struct.std::__1::__hash_node_base.35"* [ %42, %51 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %40, i64 2
  %44 = bitcast %"struct.std::__1::__hash_node_base.35"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %39
  %49 = bitcast %"struct.std::__1::__hash_node_base.35"* %43 to i8**
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #15
  br label %51

51:                                               ; preds = %48, %39
  %52 = bitcast %"struct.std::__1::__hash_node_base.35"* %40 to i8*
  tail call void @_ZdlPv(i8* %52) #15
  %53 = icmp eq %"struct.std::__1::__hash_node_base.35"* %42, null
  br i1 %53, label %54, label %39

54:                                               ; preds = %51, %35
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %36, align 8
  %55 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %76, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = add i64 %56, -1
  %61 = and i64 %56, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = sub i64 %56, %61
  br label %77

65:                                               ; preds = %77, %58
  %66 = phi i64 [ 0, %58 ], [ %91, %77 ]
  %67 = icmp eq i64 %61, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %73, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %74, %68 ], [ %61, %65 ]
  %71 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %59, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %71, i64 %69
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %72, align 8
  %73 = add nuw i64 %69, 1
  %74 = add i64 %70, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %68, !llvm.loop !3

76:                                               ; preds = %65, %68, %54
  store i64 0, i64* %26, align 8
  br label %94

77:                                               ; preds = %77, %63
  %78 = phi i64 [ 0, %63 ], [ %91, %77 ]
  %79 = phi i64 [ %64, %63 ], [ %92, %77 ]
  %80 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %59, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %80, i64 %78
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %81, align 8
  %82 = or i64 %78, 1
  %83 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %59, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %83, i64 %82
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %84, align 8
  %85 = or i64 %78, 2
  %86 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %59, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %86, i64 %85
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %87, align 8
  %88 = or i64 %78, 3
  %89 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %59, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %89, i64 %88
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %90, align 8
  %91 = add nuw i64 %78, 4
  %92 = add i64 %79, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %65, label %77

94:                                               ; preds = %76, %32
  %95 = bitcast i32* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %95, i8 0, i64 20, i1 false) #16
  br label %96

96:                                               ; preds = %94, %25, %1
  ret void
}

declare void @_ZN4base24UmaHistogramCustomCountsEPKciiii(i8*, i32, i32, i32, i32) local_unnamed_addr #5

declare void @_ZN4base38UmaHistogramPercentageObsoleteDoNotUseEPKci(i8*, i32) local_unnamed_addr #5

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19AXLanguageInfoStats12ClearMetricsEv(%"class.ui::AXLanguageInfoStats"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %71

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.35"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %9, %25
  %14 = phi %"struct.std::__1::__hash_node_base.35"* [ %16, %25 ], [ %11, %9 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %14, i64 2
  %18 = bitcast %"struct.std::__1::__hash_node_base.35"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %13
  %23 = bitcast %"struct.std::__1::__hash_node_base.35"* %17 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %22, %13
  %26 = bitcast %"struct.std::__1::__hash_node_base.35"* %14 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  %27 = icmp eq %"struct.std::__1::__hash_node_base.35"* %16, null
  br i1 %27, label %28, label %13

28:                                               ; preds = %25, %9
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %10, align 8
  %29 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %50, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = add i64 %30, -1
  %35 = and i64 %30, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = sub i64 %30, %35
  br label %51

39:                                               ; preds = %51, %32
  %40 = phi i64 [ 0, %32 ], [ %65, %51 ]
  %41 = icmp eq i64 %35, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %39, %42
  %43 = phi i64 [ %47, %42 ], [ %40, %39 ]
  %44 = phi i64 [ %48, %42 ], [ %35, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %33, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %45, i64 %43
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %46, align 8
  %47 = add nuw i64 %43, 1
  %48 = add i64 %44, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %42, !llvm.loop !5

50:                                               ; preds = %39, %42, %28
  store i64 0, i64* %6, align 8
  br label %68

51:                                               ; preds = %51, %37
  %52 = phi i64 [ 0, %37 ], [ %65, %51 ]
  %53 = phi i64 [ %38, %37 ], [ %66, %51 ]
  %54 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %33, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %54, i64 %52
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %55, align 8
  %56 = or i64 %52, 1
  %57 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %33, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %57, i64 %56
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %58, align 8
  %59 = or i64 %52, 2
  %60 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %33, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %60, i64 %59
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %61, align 8
  %62 = or i64 %52, 3
  %63 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %33, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %64, align 8
  %65 = add nuw i64 %52, 4
  %66 = add i64 %53, -4
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %39, label %51

68:                                               ; preds = %5, %50
  %69 = getelementptr inbounds %"class.ui::AXLanguageInfoStats", %"class.ui::AXLanguageInfoStats"* %0, i64 0, i32 4
  %70 = bitcast i32* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 20, i1 false)
  br label %71

71:                                               ; preds = %1, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManagerC2EPNS_6AXTreeE(%"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXTree"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 0
  tail call void @_ZN14chrome_lang_id22NNetLanguageIdentifierC1Ev(%"class.chrome_lang_id::NNetLanguageIdentifier"* %3) #16
  %4 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 1
  tail call void @_ZN14chrome_lang_id22NNetLanguageIdentifierC1Eii(%"class.chrome_lang_id::NNetLanguageIdentifier"* %4, i32 1, i32 1000) #16
  %5 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::unique_ptr.162"* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 3
  store %"class.ui::AXTree"* %1, %"class.ui::AXTree"** %7, align 8
  %8 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.21"* %9 to i32*
  %11 = bitcast %"class.ui::AXLanguageInfoStats"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 1
  %13 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 4
  %14 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 9, i32 0, i32 3
  %15 = bitcast %"class.std::__1::__compressed_pair.49"* %14 to i32*
  %16 = bitcast %"class.std::__1::vector.24"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 26, i1 false) #16
  %17 = bitcast i32* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 52, i1 false) #16
  store i32 1065353216, i32* %15, align 4
  ret void
}

declare void @_ZN14chrome_lang_id22NNetLanguageIdentifierC1Ev(%"class.chrome_lang_id::NNetLanguageIdentifier"*) unnamed_addr #5

declare void @_ZN14chrome_lang_id22NNetLanguageIdentifierC1Eii(%"class.chrome_lang_id::NNetLanguageIdentifier"*, i32, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManagerD2Ev(%"class.ui::AXLanguageDetectionManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4
  tail call void @_ZN2ui19AXLanguageInfoStatsD2Ev(%"class.ui::AXLanguageInfoStats"* %2) #16
  %3 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::AXLanguageDetectionObserver"*, %"class.ui::AXLanguageDetectionObserver"** %3, align 8
  store %"class.ui::AXLanguageDetectionObserver"* null, %"class.ui::AXLanguageDetectionObserver"** %3, align 8
  %5 = icmp eq %"class.ui::AXLanguageDetectionObserver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::AXLanguageDetectionObserver"* %4 to void (%"class.ui::AXLanguageDetectionObserver"*)***
  %8 = load void (%"class.ui::AXLanguageDetectionObserver"*)**, void (%"class.ui::AXLanguageDetectionObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::AXLanguageDetectionObserver"*)*, void (%"class.ui::AXLanguageDetectionObserver"*)** %8, i64 1
  %10 = load void (%"class.ui::AXLanguageDetectionObserver"*)*, void (%"class.ui::AXLanguageDetectionObserver"*)** %9, align 8
  tail call void %10(%"class.ui::AXLanguageDetectionObserver"* nonnull %4) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 1
  tail call void @_ZN14chrome_lang_id22NNetLanguageIdentifierD1Ev(%"class.chrome_lang_id::NNetLanguageIdentifier"* %12) #16
  %13 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 0
  tail call void @_ZN14chrome_lang_id22NNetLanguageIdentifierD1Ev(%"class.chrome_lang_id::NNetLanguageIdentifier"* %13) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN14chrome_lang_id22NNetLanguageIdentifierD1Ev(%"class.chrome_lang_id::NNetLanguageIdentifier"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui26AXLanguageDetectionManager32IsStaticLanguageDetectionEnabledEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN8features39IsAccessibilityLanguageDetectionEnabledEv() #16
  br i1 %1, label %4, label %2

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @_ZN8switches51IsExperimentalAccessibilityLanguageDetectionEnabledEv() #16
  br label %4

4:                                                ; preds = %2, %0
  %5 = phi i1 [ true, %0 ], [ %3, %2 ]
  ret i1 %5
}

declare zeroext i1 @_ZN8features39IsAccessibilityLanguageDetectionEnabledEv() local_unnamed_addr #5

declare zeroext i1 @_ZN8switches51IsExperimentalAccessibilityLanguageDetectionEnabledEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui26AXLanguageDetectionManager33IsDynamicLanguageDetectionEnabledEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN8features39IsAccessibilityLanguageDetectionEnabledEv() #16
  br i1 %1, label %4, label %2

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @_ZN8switches58IsExperimentalAccessibilityLanguageDetectionDynamicEnabledEv() #16
  br label %4

4:                                                ; preds = %2, %0
  %5 = phi i1 [ true, %0 ], [ %3, %2 ]
  ret i1 %5
}

declare zeroext i1 @_ZN8switches58IsExperimentalAccessibilityLanguageDetectionDynamicEnabledEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManager33RegisterLanguageDetectionObserverEv(%"class.ui::AXLanguageDetectionManager"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN8features39IsAccessibilityLanguageDetectionEnabledEv() #16
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZN8switches58IsExperimentalAccessibilityLanguageDetectionDynamicEnabledEv() #16
  br i1 %4, label %5, label %24

5:                                                ; preds = %1, %3
  %6 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 3
  %7 = tail call i8* @_Znwm(i64 32) #15
  %8 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %6, align 8
  %9 = bitcast i8* %7 to %"class.ui::AXTreeObserver"*
  tail call void @_ZN2ui14AXTreeObserverC2Ev(%"class.ui::AXTreeObserver"* nonnull %9) #16
  %10 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2ui27AXLanguageDetectionObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 24
  %12 = bitcast i8* %11 to %"class.ui::AXTree"**
  store %"class.ui::AXTree"* %8, %"class.ui::AXTree"** %12, align 8
  tail call void @_ZN2ui6AXTree11AddObserverEPNS_14AXTreeObserverE(%"class.ui::AXTree"* %8, %"class.ui::AXTreeObserver"* nonnull %9) #16
  %13 = ptrtoint i8* %7 to i64
  %14 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.ui::AXLanguageDetectionObserver"*, %"class.ui::AXLanguageDetectionObserver"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.162"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.ui::AXLanguageDetectionObserver"* %16, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %5
  %20 = bitcast %"class.ui::AXLanguageDetectionObserver"* %16 to void (%"class.ui::AXLanguageDetectionObserver"*)***
  %21 = load void (%"class.ui::AXLanguageDetectionObserver"*)**, void (%"class.ui::AXLanguageDetectionObserver"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.ui::AXLanguageDetectionObserver"*)*, void (%"class.ui::AXLanguageDetectionObserver"*)** %21, i64 1
  %23 = load void (%"class.ui::AXLanguageDetectionObserver"*)*, void (%"class.ui::AXLanguageDetectionObserver"*)** %22, align 8
  tail call void %23(%"class.ui::AXLanguageDetectionObserver"* nonnull %16) #16
  br label %24

24:                                               ; preds = %5, %19, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManager15DetectLanguagesEv(%"class.ui::AXLanguageDetectionManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 3, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !6

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 3, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 3, i32 0), %6 ]
  %16 = call zeroext i1 @_ZN8features39IsAccessibilityLanguageDetectionEnabledEv() #16
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = call zeroext i1 @_ZN8switches51IsExperimentalAccessibilityLanguageDetectionEnabledEv() #16
  br i1 %18, label %19, label %24

19:                                               ; preds = %12, %17
  %20 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 3
  %21 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %20, align 8
  %22 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %21, i64 0, i32 3
  %23 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, align 8
  call void @_ZN2ui26AXLanguageDetectionManager25DetectLanguagesForSubtreeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"* %0, %"class.ui::AXNode"* %23)
  br label %24

24:                                               ; preds = %17, %19
  %25 = icmp eq i8* %15, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = load i8, i8* %15, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #16
  br label %30

30:                                               ; preds = %24, %26, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManager25DetectLanguagesForSubtreeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 159
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN2ui26AXLanguageDetectionManager22DetectLanguagesForNodeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"* %0, %"class.ui::AXNode"* %1)
  br label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 6, i32 0, i32 0
  %9 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %8, align 8
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 6, i32 0, i32 1
  %11 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %10, align 8
  %12 = icmp eq %"class.ui::AXNode"** %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %7, %13
  %14 = phi %"class.ui::AXNode"** [ %16, %13 ], [ %9, %7 ]
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  tail call void @_ZN2ui26AXLanguageDetectionManager25DetectLanguagesForSubtreeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"* %0, %"class.ui::AXNode"* %15)
  %16 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, i64 1
  %17 = icmp eq %"class.ui::AXNode"** %16, %11
  br i1 %17, label %18, label %13

18:                                               ; preds = %13, %7, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManager22DetectLanguagesForNodeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.448", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.394", align 8
  %7 = alloca %"class.std::__1::vector", align 16
  %8 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 4
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %13, i32 21) #16
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %21, i64 24, i1 false) #16
  br label %27

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %24, i64 %26) #16
  br label %27

27:                                               ; preds = %20, %22
  %28 = bitcast %"class.std::__1::vector.394"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.std::__1::vector.394", %"class.std::__1::vector.394"* %6, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector.394", %"class.std::__1::vector.394"* %6, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 0
  %32 = bitcast %"class.std::__1::vector.394"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZN14chrome_lang_id22NNetLanguageIdentifier21FindTopNMostFreqLangsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::vector.394"* nonnull sret %6, %"class.chrome_lang_id::NNetLanguageIdentifier"* %31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 3) #16
  %33 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false) #16
  %37 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %29, align 8
  %38 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %30, align 8
  %39 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %37, %38
  br i1 %39, label %211, label %40

40:                                               ; preds = %27
  %41 = bitcast %"class.std::__1::basic_string"** %35 to i64*
  br label %48

42:                                               ; preds = %75
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"class.std::__1::vector"* %7 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = icmp eq i64 %43, %45
  %47 = inttoptr i64 %45 to %"class.std::__1::basic_string"*
  br i1 %46, label %185, label %78

48:                                               ; preds = %40, %75
  %49 = phi %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* [ %37, %40 ], [ %76, %75 ]
  %50 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %49, i64 0, i32 2
  %51 = load i8, i8* %50, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %75, label %53

53:                                               ; preds = %48
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 16
  %56 = icmp eq %"class.std::__1::basic_string"* %54, %55
  br i1 %56, label %73, label %57

57:                                               ; preds = %53
  %58 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %64 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #16
  br label %70

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %54, i8* %67, i64 %69) #16
  br label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 1
  %72 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %72, i64* %41, align 8
  br label %75

73:                                               ; preds = %53
  %74 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %49, i64 0, i32 0
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %74) #16
  br label %75

75:                                               ; preds = %73, %70, %48
  %76 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %49, i64 1
  %77 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %76, %38
  br i1 %77, label %42, label %48

78:                                               ; preds = %42
  %79 = call %"struct.ui::AXLanguageInfo"* @_ZNK2ui6AXNode15GetLanguageInfoEv(%"class.ui::AXNode"* %1) #16
  %80 = icmp eq %"struct.ui::AXLanguageInfo"* %79, null
  br i1 %80, label %110, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %79, i64 0, i32 1, i32 0, i32 0
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %79, i64 0, i32 1, i32 0, i32 1
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  %86 = icmp eq %"class.std::__1::basic_string"* %85, %83
  br i1 %86, label %99, label %87

87:                                               ; preds = %81, %97
  %88 = phi %"class.std::__1::basic_string"* [ %89, %97 ], [ %85, %81 ]
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 -1
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %94, %87
  %98 = icmp eq %"class.std::__1::basic_string"* %89, %83
  br i1 %98, label %99, label %87

99:                                               ; preds = %97, %81
  store %"class.std::__1::basic_string"* %83, %"class.std::__1::basic_string"** %84, align 8
  %100 = bitcast %"struct.ui::AXLanguageInfo"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  store i8 0, i8* %106, align 1
  %107 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %107, align 8
  br label %114

108:                                              ; preds = %99
  %109 = bitcast %"struct.ui::AXLanguageInfo"* %79 to i8*
  store i8 0, i8* %109, align 1
  store i8 0, i8* %101, align 1
  br label %114

110:                                              ; preds = %78
  %111 = call i8* @_Znwm(i64 48) #15
  %112 = bitcast i8* %111 to %"struct.ui::AXLanguageInfo"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 48, i1 false) #16
  call void @_ZN2ui6AXNode15SetLanguageInfoENSt3__110unique_ptrINS_14AXLanguageInfoENS1_14default_deleteIS3_EEEE(%"class.ui::AXNode"* %1, %"struct.ui::AXLanguageInfo"* nonnull %112) #16
  %113 = call %"struct.ui::AXLanguageInfo"* @_ZNK2ui6AXNode15GetLanguageInfoEv(%"class.ui::AXNode"* %1) #16
  br label %114

114:                                              ; preds = %108, %104, %110
  %115 = phi %"struct.ui::AXLanguageInfo"* [ %113, %110 ], [ %79, %104 ], [ %79, %108 ]
  %116 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %115, i64 0, i32 1
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %117, align 8
  %119 = icmp eq %"class.std::__1::basic_string"* %118, null
  br i1 %119, label %143, label %120

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  %122 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %115, i64 0, i32 1, i32 0, i32 1
  %123 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %122, align 8
  %124 = icmp eq %"class.std::__1::basic_string"* %123, %118
  br i1 %124, label %140, label %125

125:                                              ; preds = %120, %135
  %126 = phi %"class.std::__1::basic_string"* [ %127, %135 ], [ %123, %120 ]
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 -1
  %128 = bitcast %"class.std::__1::basic_string"* %127 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #15
  br label %135

135:                                              ; preds = %132, %125
  %136 = icmp eq %"class.std::__1::basic_string"* %127, %118
  br i1 %136, label %137, label %125

137:                                              ; preds = %135
  %138 = bitcast %"class.std::__1::vector"* %116 to i8**
  %139 = load i8*, i8** %138, align 8
  br label %140

140:                                              ; preds = %137, %120
  %141 = phi i8* [ %139, %137 ], [ %121, %120 ]
  store %"class.std::__1::basic_string"* %118, %"class.std::__1::basic_string"** %122, align 8
  call void @_ZdlPv(i8* %141) #15
  %142 = bitcast %"class.std::__1::vector"* %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #16
  br label %143

143:                                              ; preds = %114, %140
  %144 = bitcast %"class.std::__1::vector"* %7 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 16
  %146 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %115, i64 0, i32 1, i32 0, i32 1
  %147 = bitcast %"class.std::__1::vector"* %116 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %147, align 8
  %148 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  %149 = load i64, i64* %148, align 16
  %150 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %115, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %151 = bitcast %"class.std::__1::basic_string"** %150 to i64*
  store i64 %149, i64* %151, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false) #16
  %152 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 5
  %153 = load i32, i32* %152, align 8
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %152, align 8
  %155 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %117, align 8
  %156 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %146, align 8
  %157 = icmp eq %"class.std::__1::basic_string"* %155, %156
  br i1 %157, label %182, label %158

158:                                              ; preds = %143
  %159 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 0, i32 0
  %160 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %161 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.std::__1::tuple.448", %"class.std::__1::tuple.448"* %4, i64 0, i32 0
  %163 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 9, i32 0
  br label %164

164:                                              ; preds = %176, %158
  %165 = phi i32 [ 3, %158 ], [ %177, %176 ]
  %166 = phi %"class.std::__1::basic_string"* [ %155, %158 ], [ %178, %176 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #16
  store %"class.std::__1::basic_string"* %166, %"class.std::__1::basic_string"** %161, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %162) #16
  %167 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %159, %"class.std::__1::basic_string"* dereferenceable(24) %166, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.448"* nonnull dereferenceable(1) %4) #16
  %168 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %167, 0
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %168, i64 5
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %169 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %162) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #16
  %171 = load i32, i32* %170, align 4
  %172 = add nsw i32 %171, %165
  store i32 %172, i32* %170, align 4
  %173 = icmp eq i32 %165, 3
  br i1 %173, label %174, label %176

174:                                              ; preds = %164
  %175 = call { %"struct.std::__1::__hash_node_base.35"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.31"* %163, %"class.std::__1::basic_string"* dereferenceable(24) %166, %"class.std::__1::basic_string"* dereferenceable(24) %166) #16
  br label %176

176:                                              ; preds = %174, %164
  %177 = add nsw i32 %165, -1
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %166, i64 1
  %179 = icmp eq %"class.std::__1::basic_string"* %178, %156
  br i1 %179, label %180, label %164

180:                                              ; preds = %176
  %181 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 16
  br label %182

182:                                              ; preds = %180, %143
  %183 = phi %"class.std::__1::basic_string"* [ %181, %180 ], [ null, %143 ]
  %184 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 2
  store i8 0, i8* %184, align 8
  br label %185

185:                                              ; preds = %42, %182
  %186 = phi %"class.std::__1::basic_string"* [ %47, %42 ], [ %183, %182 ]
  %187 = icmp eq %"class.std::__1::basic_string"* %186, null
  br i1 %187, label %209, label %188

188:                                              ; preds = %185
  %189 = bitcast %"class.std::__1::basic_string"* %186 to i8*
  %190 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  %191 = icmp eq %"class.std::__1::basic_string"* %190, %186
  br i1 %191, label %207, label %192

192:                                              ; preds = %188, %202
  %193 = phi %"class.std::__1::basic_string"* [ %194, %202 ], [ %190, %188 ]
  %194 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 -1
  %195 = bitcast %"class.std::__1::basic_string"* %194 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %195, i64 0, i32 1, i32 0
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %202

199:                                              ; preds = %192
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %201) #15
  br label %202

202:                                              ; preds = %199, %192
  %203 = icmp eq %"class.std::__1::basic_string"* %194, %186
  br i1 %203, label %204, label %192

204:                                              ; preds = %202
  %205 = bitcast %"class.std::__1::vector"* %7 to i8**
  %206 = load i8*, i8** %205, align 16
  br label %207

207:                                              ; preds = %204, %188
  %208 = phi i8* [ %206, %204 ], [ %189, %188 ]
  store %"class.std::__1::basic_string"* %186, %"class.std::__1::basic_string"** %35, align 8
  call void @_ZdlPv(i8* %208) #15
  br label %209

209:                                              ; preds = %207, %185
  %210 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %29, align 8
  br label %211

211:                                              ; preds = %209, %27
  %212 = phi %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* [ %210, %209 ], [ %37, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #16
  %213 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %212, null
  br i1 %213, label %244, label %214

214:                                              ; preds = %211
  %215 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %212 to i8*
  %216 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %30, align 8
  %217 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %216, %212
  br i1 %217, label %242, label %218

218:                                              ; preds = %214, %237
  %219 = phi %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* [ %220, %237 ], [ %216, %214 ]
  %220 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %219, i64 -1
  %221 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %219, i64 -1, i32 4, i32 0, i32 0
  %222 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"** %221, align 8
  %223 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %222, null
  br i1 %223, label %229, label %224

224:                                              ; preds = %218
  %225 = ptrtoint %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %222 to i64
  %226 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %219, i64 -1, i32 4, i32 0, i32 1
  %227 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"** %226 to i64*
  store i64 %225, i64* %227, align 8
  %228 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %222 to i8*
  call void @_ZdlPv(i8* %228) #15
  br label %229

229:                                              ; preds = %224, %218
  %230 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %220 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %220, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %236) #15
  br label %237

237:                                              ; preds = %234, %229
  %238 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %220, %212
  br i1 %238, label %239, label %218

239:                                              ; preds = %237
  %240 = bitcast %"class.std::__1::vector.394"* %6 to i8**
  %241 = load i8*, i8** %240, align 8
  br label %242

242:                                              ; preds = %239, %214
  %243 = phi i8* [ %241, %239 ], [ %215, %214 ]
  store %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %212, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %30, align 8
  call void @_ZdlPv(i8* %243) #15
  br label %244

244:                                              ; preds = %211, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  %245 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %245, i64 0, i32 1, i32 0
  %247 = load i8, i8* %246, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %244
  %250 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %250) #15
  br label %251

251:                                              ; preds = %244, %249
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  ret void
}

declare void @_ZN14chrome_lang_id22NNetLanguageIdentifier21FindTopNMostFreqLangsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::vector.394"* sret, %"class.chrome_lang_id::NNetLanguageIdentifier"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #5

declare %"struct.ui::AXLanguageInfo"* @_ZNK2ui6AXNode15GetLanguageInfoEv(%"class.ui::AXNode"*) local_unnamed_addr #5

declare void @_ZN2ui6AXNode15SetLanguageInfoENSt3__110unique_ptrINS_14AXLanguageInfoENS1_14default_deleteIS3_EEEE(%"class.ui::AXNode"*, %"struct.ui::AXLanguageInfo"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManager14LabelLanguagesEv(%"class.ui::AXLanguageDetectionManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 3, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !6

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 3, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 3, i32 0), %6 ]
  %16 = call zeroext i1 @_ZN8features39IsAccessibilityLanguageDetectionEnabledEv() #16
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = call zeroext i1 @_ZN8switches51IsExperimentalAccessibilityLanguageDetectionEnabledEv() #16
  br i1 %18, label %19, label %25

19:                                               ; preds = %12, %17
  %20 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 3
  %21 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %20, align 8
  %22 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %21, i64 0, i32 3
  %23 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, align 8
  call void @_ZN2ui26AXLanguageDetectionManager24LabelLanguagesForSubtreeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"* %0, %"class.ui::AXNode"* %23)
  %24 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4
  call void @_ZN2ui19AXLanguageInfoStats13ReportMetricsEv(%"class.ui::AXLanguageInfoStats"* %24)
  br label %25

25:                                               ; preds = %17, %19
  %26 = icmp eq i8* %15, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = load i8, i8* %15, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #16
  br label %31

31:                                               ; preds = %25, %27, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManager24LabelLanguagesForSubtreeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2ui26AXLanguageDetectionManager21LabelLanguagesForNodeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"* %0, %"class.ui::AXNode"* %1)
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 6, i32 0, i32 1
  %6 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %5, align 8
  %7 = icmp eq %"class.ui::AXNode"** %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.ui::AXNode"** [ %12, %9 ], [ %4, %2 ]
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  tail call void @_ZN2ui26AXLanguageDetectionManager24LabelLanguagesForSubtreeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"* %0, %"class.ui::AXNode"* %11)
  %12 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, i64 1
  %13 = icmp eq %"class.ui::AXNode"** %12, %6
  br i1 %13, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManager21LabelLanguagesForNodeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"struct.ui::AXLanguageInfo"* @_ZNK2ui6AXNode15GetLanguageInfoEv(%"class.ui::AXNode"* %1) #16
  %4 = icmp eq %"struct.ui::AXLanguageInfo"* %3, null
  br i1 %4, label %188, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %3, i64 0, i32 0
  %7 = bitcast %"struct.ui::AXLanguageInfo"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %5
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %188

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %3, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %22 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %3, i64 0, i32 1, i32 0, i32 1
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = icmp eq %"class.std::__1::basic_string"* %21, %23
  br i1 %24, label %187, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 2
  %27 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %29 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  br label %30

30:                                               ; preds = %25, %183
  %31 = phi i8 [ 1, %25 ], [ 0, %183 ]
  %32 = phi %"class.std::__1::basic_string"* [ %21, %25 ], [ %184, %183 ]
  %33 = load i8, i8* %26, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  tail call void @_ZN2ui19AXLanguageInfoStats18GenerateTopResultsEv(%"class.ui::AXLanguageInfoStats"* %27) #16
  br label %36

36:                                               ; preds = %35, %30
  %37 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %29, align 8
  %39 = icmp eq %"struct.std::__1::pair"* %37, %38
  br i1 %39, label %183, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %52 = select i1 %44, i8* %50, i8* %51
  %53 = icmp eq i64 %48, 0
  br label %54

54:                                               ; preds = %88, %40
  %55 = phi %"struct.std::__1::pair"* [ %37, %40 ], [ %89, %88 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = zext i8 %59 to i64
  %64 = select i1 %60, i64 %62, i64 %63
  %65 = icmp eq i64 %48, %64
  br i1 %65, label %66, label %88

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %70 = select i1 %60, i8* %68, i8* %69
  br i1 %44, label %72, label %71

71:                                               ; preds = %66
  br i1 %53, label %91, label %73

72:                                               ; preds = %66
  br i1 %53, label %91, label %85

73:                                               ; preds = %71, %80
  %74 = phi i8* [ %83, %80 ], [ %70, %71 ]
  %75 = phi i8* [ %82, %80 ], [ %51, %71 ]
  %76 = phi i64 [ %81, %80 ], [ %47, %71 ]
  %77 = load i8, i8* %75, align 1
  %78 = load i8, i8* %74, align 1
  %79 = icmp eq i8 %77, %78
  br i1 %79, label %80, label %88

80:                                               ; preds = %73
  %81 = add i64 %76, -1
  %82 = getelementptr inbounds i8, i8* %75, i64 1
  %83 = getelementptr inbounds i8, i8* %74, i64 1
  %84 = icmp eq i64 %81, 0
  br i1 %84, label %91, label %73

85:                                               ; preds = %72
  %86 = tail call i32 @bcmp(i8* %52, i8* %70, i64 %48) #16
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %73, %85, %54
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1
  %90 = icmp eq %"struct.std::__1::pair"* %89, %38
  br i1 %90, label %183, label %54

91:                                               ; preds = %85, %72, %71, %80
  %92 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %97 = icmp eq %"class.std::__1::basic_string"* %6, %32
  br i1 %97, label %108, label %98

98:                                               ; preds = %91
  %99 = load i8, i8* %8, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %98
  br i1 %44, label %104, label %102

102:                                              ; preds = %101
  %103 = bitcast %"struct.ui::AXLanguageInfo"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 %93, i64 24, i1 false) #16
  br label %108

104:                                              ; preds = %101
  %105 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %50, i64 %46) #16
  br label %108

106:                                              ; preds = %98
  %107 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %52, i64 %48) #16
  br label %108

108:                                              ; preds = %91, %102, %104, %106
  %109 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui6AXNode27GetInheritedStringAttributeEN2ax5mojom15StringAttributeE(%"class.ui::AXNode"* %1, i32 20) #16
  %110 = icmp eq i8 %31, 0
  %111 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 6
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %111, align 4
  br i1 %110, label %118, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 7
  %116 = load i32, i32* %115, align 8
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %115, align 8
  br label %118

118:                                              ; preds = %108, %114
  %119 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = zext i8 %121 to i64
  %126 = select i1 %122, i64 %124, i64 %125
  %127 = load i8, i8* %96, align 1
  %128 = icmp slt i8 %127, 0
  %129 = load i64, i64* %95, align 8
  %130 = zext i8 %127 to i64
  %131 = select i1 %128, i64 %129, i64 %130
  %132 = icmp eq i64 %126, %131
  br i1 %132, label %133, label %163

133:                                              ; preds = %118
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %137 = select i1 %122, i8* %135, i8* %136
  %138 = load i8*, i8** %94, align 8
  %139 = select i1 %128, i8* %138, i8* %93
  %140 = icmp eq i64 %126, 0
  br i1 %122, label %147, label %141

141:                                              ; preds = %133
  br i1 %140, label %167, label %142

142:                                              ; preds = %141
  %143 = ptrtoint i8* %135 to i64
  %144 = trunc i64 %143 to i8
  %145 = load i8, i8* %139, align 1
  %146 = icmp eq i8 %145, %144
  br i1 %146, label %148, label %163

147:                                              ; preds = %133
  br i1 %140, label %167, label %160

148:                                              ; preds = %142, %155
  %149 = phi i64 [ %152, %155 ], [ %125, %142 ]
  %150 = phi i8* [ %153, %155 ], [ %136, %142 ]
  %151 = phi i8* [ %156, %155 ], [ %139, %142 ]
  %152 = add i64 %149, -1
  %153 = getelementptr inbounds i8, i8* %150, i64 1
  %154 = icmp eq i64 %152, 0
  br i1 %154, label %167, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds i8, i8* %151, i64 1
  %157 = load i8, i8* %153, align 1
  %158 = load i8, i8* %156, align 1
  %159 = icmp eq i8 %157, %158
  br i1 %159, label %148, label %163

160:                                              ; preds = %147
  %161 = tail call i32 @bcmp(i8* %137, i8* %139, i64 %126) #16
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %155, %160, %142, %118
  %164 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %0, i64 0, i32 4, i32 8
  %165 = load i32, i32* %164, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %164, align 4
  br label %167

167:                                              ; preds = %148, %141, %147, %160, %163
  %168 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %169 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %170 = icmp eq %"class.std::__1::basic_string"* %169, %168
  br i1 %170, label %186, label %171

171:                                              ; preds = %167, %181
  %172 = phi %"class.std::__1::basic_string"* [ %173, %181 ], [ %169, %167 ]
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 -1
  %174 = bitcast %"class.std::__1::basic_string"* %173 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %174, i64 0, i32 1, i32 0
  %176 = load i8, i8* %175, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  tail call void @_ZdlPv(i8* %180) #15
  br label %181

181:                                              ; preds = %178, %171
  %182 = icmp eq %"class.std::__1::basic_string"* %173, %168
  br i1 %182, label %186, label %171

183:                                              ; preds = %88, %36
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 1
  %185 = icmp eq %"class.std::__1::basic_string"* %184, %23
  br i1 %185, label %187, label %30

186:                                              ; preds = %181, %167
  store %"class.std::__1::basic_string"* %168, %"class.std::__1::basic_string"** %22, align 8
  br label %188

187:                                              ; preds = %183, %19
  tail call void @_ZN2ui6AXNode17ClearLanguageInfoEv(%"class.ui::AXNode"* %1) #16
  br label %188

188:                                              ; preds = %186, %187, %16, %2
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui6AXNode27GetInheritedStringAttributeEN2ax5mojom15StringAttributeE(%"class.ui::AXNode"*, i32) local_unnamed_addr #5

declare void @_ZN2ui6AXNode17ClearLanguageInfoEv(%"class.ui::AXNode"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS_6AXNodeEN2ax5mojom15StringAttributeE(%"class.std::__1::vector.410"* noalias sret, %"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXNode"* dereferenceable(456), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.ui::AXLanguageSpan", align 8
  %7 = alloca %"class.std::__1::vector.394", align 8
  %8 = alloca %"struct.ui::AXLanguageSpan", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.410", %"class.std::__1::vector.410"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.410", %"class.std::__1::vector.410"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.410", %"class.std::__1::vector.410"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::vector.410"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #16
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %2, i64 0, i32 7
  %14 = tail call zeroext i1 @_ZNK2ui10AXNodeData18HasStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %13, i32 %3) #16
  br i1 %14, label %15, label %208

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  %20 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %13, i32 %3) #16
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %15
  %26 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %26, i64 24, i1 false) #16
  br label %32

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %29, i64 %31) #16
  br label %32

32:                                               ; preds = %25, %27
  %33 = call zeroext i1 @_ZNK2ui10AXNodeData18HasStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %13, i32 20) #16
  br i1 %33, label %34, label %88

34:                                               ; preds = %32
  %35 = bitcast %"struct.ui::AXLanguageSpan"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %6, i64 0, i32 0
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %6, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i64, i64* %18, align 8
  %43 = zext i8 %40 to i64
  %44 = select i1 %41, i64 %42, i64 %43
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* %37, align 4
  %46 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %6, i64 0, i32 2
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %13, i32 20) #16
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %34
  %53 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #16
  br label %60

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %46, i8* %57, i64 %59) #16
  br label %60

60:                                               ; preds = %52, %55
  %61 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %6, i64 0, i32 3
  store float 1.000000e+00, float* %61, align 8
  %62 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %10, align 8
  %63 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %11, align 8
  %64 = icmp ult %"struct.ui::AXLanguageSpan"* %62, %63
  br i1 %64, label %65, label %79

65:                                               ; preds = %60
  %66 = bitcast %"struct.ui::AXLanguageSpan"* %6 to i64*
  %67 = bitcast %"struct.ui::AXLanguageSpan"* %62 to i64*
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %62, i64 0, i32 2
  %70 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  %71 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #16
  %72 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %62, i64 0, i32 3
  %73 = bitcast float* %61 to i32*
  %74 = load i32, i32* %73, align 8
  %75 = bitcast float* %72 to i32*
  store i32 %74, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %62, i64 1
  %77 = ptrtoint %"struct.ui::AXLanguageSpan"* %76 to i64
  %78 = bitcast %"struct.ui::AXLanguageSpan"** %10 to i64*
  store i64 %77, i64* %78, align 8
  br label %87

79:                                               ; preds = %60
  call void @_ZNSt3__16vectorIN2ui14AXLanguageSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.410"* %0, %"struct.ui::AXLanguageSpan"* nonnull dereferenceable(40) %6) #16
  %80 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %65, %79, %84
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #16
  br label %200

88:                                               ; preds = %32
  %89 = bitcast %"class.std::__1::vector.394"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #16
  %90 = getelementptr inbounds %"class.std::__1::vector.394", %"class.std::__1::vector.394"* %7, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::vector.394", %"class.std::__1::vector.394"* %7, i64 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %1, i64 0, i32 1
  %93 = bitcast %"class.std::__1::vector.394"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false)
  call void @_ZN14chrome_lang_id22NNetLanguageIdentifier21FindTopNMostFreqLangsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::vector.394"* nonnull sret %7, %"class.chrome_lang_id::NNetLanguageIdentifier"* %92, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 3) #16
  %94 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %90, align 8
  %95 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %91, align 8
  %96 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %94, %95
  br i1 %96, label %110, label %97

97:                                               ; preds = %88
  %98 = bitcast %"struct.ui::AXLanguageSpan"* %8 to i8*
  %99 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %8, i64 0, i32 0
  %100 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %8, i64 0, i32 1
  %101 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %8, i64 0, i32 2
  %102 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %103 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %8, i64 0, i32 3
  %104 = bitcast float* %103 to i32*
  %105 = bitcast %"struct.ui::AXLanguageSpan"* %8 to i64*
  %106 = bitcast %"struct.ui::AXLanguageSpan"** %10 to i64*
  %107 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %115

110:                                              ; preds = %128, %88
  %111 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %9, align 8
  %112 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %10, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEvT0_SD_T_"(%"struct.ui::AXLanguageSpan"* %111, %"struct.ui::AXLanguageSpan"* %112) #16
  %113 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %90, align 8
  %114 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %113, null
  br i1 %114, label %198, label %168

115:                                              ; preds = %97, %128
  %116 = phi %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* [ %94, %97 ], [ %129, %128 ]
  %117 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %116, i64 0, i32 4, i32 0, i32 0
  %118 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"** %117, align 8
  %119 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %116, i64 0, i32 4, i32 0, i32 1
  %120 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"** %119, align 8
  %121 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %118, %120
  br i1 %121, label %128, label %122

122:                                              ; preds = %115
  %123 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %116 to i8*
  %126 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %131

128:                                              ; preds = %165, %115
  %129 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %116, i64 1
  %130 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %129, %95
  br i1 %130, label %110, label %115

131:                                              ; preds = %122, %165
  %132 = phi %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* [ %118, %122 ], [ %166, %165 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #16
  %133 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo", %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %132, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  store i32 %134, i32* %99, align 8
  %135 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo", %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %132, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  store i32 %136, i32* %100, align 4
  %137 = load i8, i8* %124, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %125, i64 24, i1 false) #16
  br label %143

140:                                              ; preds = %131
  %141 = load i8*, i8** %126, align 8
  %142 = load i64, i64* %127, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %101, i8* %141, i64 %142) #16
  br label %143

143:                                              ; preds = %139, %140
  %144 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo", %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %132, i64 0, i32 2
  %145 = bitcast float* %144 to i32*
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %104, align 8
  %147 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %10, align 8
  %148 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %11, align 8
  %149 = icmp ult %"struct.ui::AXLanguageSpan"* %147, %148
  br i1 %149, label %150, label %160

150:                                              ; preds = %143
  %151 = bitcast %"struct.ui::AXLanguageSpan"* %147 to i64*
  %152 = load i64, i64* %105, align 8
  store i64 %152, i64* %151, align 8
  %153 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %147, i64 0, i32 2
  %154 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %102, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #16
  %155 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %147, i64 0, i32 3
  %156 = load i32, i32* %104, align 8
  %157 = bitcast float* %155 to i32*
  store i32 %156, i32* %157, align 8
  %158 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %147, i64 1
  %159 = ptrtoint %"struct.ui::AXLanguageSpan"* %158 to i64
  store i64 %159, i64* %106, align 8
  br label %165

160:                                              ; preds = %143
  call void @_ZNSt3__16vectorIN2ui14AXLanguageSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.410"* %0, %"struct.ui::AXLanguageSpan"* nonnull dereferenceable(40) %8) #16
  %161 = load i8, i8* %108, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %160
  %164 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %164) #15
  br label %165

165:                                              ; preds = %150, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #16
  %166 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo", %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %132, i64 1
  %167 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %166, %120
  br i1 %167, label %128, label %131

168:                                              ; preds = %110
  %169 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %113 to i8*
  %170 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %91, align 8
  %171 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %170, %113
  br i1 %171, label %196, label %172

172:                                              ; preds = %168, %191
  %173 = phi %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* [ %174, %191 ], [ %170, %168 ]
  %174 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %173, i64 -1
  %175 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %173, i64 -1, i32 4, i32 0, i32 0
  %176 = load %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"*, %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"** %175, align 8
  %177 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %172
  %179 = ptrtoint %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %176 to i64
  %180 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %173, i64 -1, i32 4, i32 0, i32 1
  %181 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"** %180 to i64*
  store i64 %179, i64* %181, align 8
  %182 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::SpanInfo"* %176 to i8*
  call void @_ZdlPv(i8* %182) #15
  br label %183

183:                                              ; preds = %178, %172
  %184 = bitcast %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %174 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"struct.chrome_lang_id::NNetLanguageIdentifier::Result", %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  call void @_ZdlPv(i8* %190) #15
  br label %191

191:                                              ; preds = %188, %183
  %192 = icmp eq %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %174, %113
  br i1 %192, label %193, label %172

193:                                              ; preds = %191
  %194 = bitcast %"class.std::__1::vector.394"* %7 to i8**
  %195 = load i8*, i8** %194, align 8
  br label %196

196:                                              ; preds = %193, %168
  %197 = phi i8* [ %195, %193 ], [ %169, %168 ]
  store %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"* %113, %"struct.chrome_lang_id::NNetLanguageIdentifier::Result"** %91, align 8
  call void @_ZdlPv(i8* %197) #15
  br label %198

198:                                              ; preds = %110, %196
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #16
  %199 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %200

200:                                              ; preds = %198, %87
  %201 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %199, %198 ], [ %38, %87 ]
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  %206 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %206) #15
  br label %207

207:                                              ; preds = %200, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16
  br label %208

208:                                              ; preds = %207, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27AXLanguageDetectionObserverC2EPNS_6AXTreeE(%"class.ui::AXLanguageDetectionObserver"*, %"class.ui::AXTree"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 0
  tail call void @_ZN2ui14AXTreeObserverC2Ev(%"class.ui::AXTreeObserver"* %3) #16
  %4 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2ui27AXLanguageDetectionObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 1
  store %"class.ui::AXTree"* %1, %"class.ui::AXTree"** %5, align 8
  tail call void @_ZN2ui6AXTree11AddObserverEPNS_14AXTreeObserverE(%"class.ui::AXTree"* %1, %"class.ui::AXTreeObserver"* %3) #16
  ret void
}

declare void @_ZN2ui14AXTreeObserverC2Ev(%"class.ui::AXTreeObserver"*) unnamed_addr #5

declare void @_ZN2ui6AXTree11AddObserverEPNS_14AXTreeObserverE(%"class.ui::AXTree"*, %"class.ui::AXTreeObserver"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27AXLanguageDetectionObserverD2Ev(%"class.ui::AXLanguageDetectionObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2ui27AXLanguageDetectionObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 1
  %4 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %3, align 8
  %5 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 0
  tail call void @_ZN2ui6AXTree14RemoveObserverEPNS_14AXTreeObserverE(%"class.ui::AXTree"* %4, %"class.ui::AXTreeObserver"* %5) #16
  tail call void @_ZN2ui14AXTreeObserverD2Ev(%"class.ui::AXTreeObserver"* %5) #16
  ret void
}

declare void @_ZN2ui6AXTree14RemoveObserverEPNS_14AXTreeObserverE(%"class.ui::AXTree"*, %"class.ui::AXTreeObserver"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2ui14AXTreeObserverD2Ev(%"class.ui::AXTreeObserver"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27AXLanguageDetectionObserverD0Ev(%"class.ui::AXLanguageDetectionObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2ui27AXLanguageDetectionObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 1
  %4 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %3, align 8
  %5 = getelementptr inbounds %"class.ui::AXLanguageDetectionObserver", %"class.ui::AXLanguageDetectionObserver"* %0, i64 0, i32 0
  tail call void @_ZN2ui6AXTree14RemoveObserverEPNS_14AXTreeObserverE(%"class.ui::AXTree"* %4, %"class.ui::AXTreeObserver"* %5) #16
  tail call void @_ZN2ui14AXTreeObserverD2Ev(%"class.ui::AXTreeObserver"* %5) #16
  %6 = bitcast %"class.ui::AXLanguageDetectionObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27AXLanguageDetectionObserver22OnAtomicUpdateFinishedEPNS_6AXTreeEbRKNSt3__16vectorINS_14AXTreeObserver6ChangeENS3_9allocatorIS6_EEEE(%"class.ui::AXLanguageDetectionObserver"* nocapture readnone, %"class.ui::AXTree"* nocapture readonly, i1 zeroext, %"class.std::__1::vector.420"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %3, i64 0, i32 0, i32 0
  %6 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.420", %"class.std::__1::vector.420"* %3, i64 0, i32 0, i32 1
  %8 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %7, align 8
  %9 = icmp eq %"struct.ui::AXTreeObserver::Change"* %6, %8
  br i1 %9, label %30, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %18

12:                                               ; preds = %27
  %13 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %5, align 8
  %14 = load %"struct.ui::AXTreeObserver::Change"*, %"struct.ui::AXTreeObserver::Change"** %7, align 8
  %15 = icmp eq %"struct.ui::AXTreeObserver::Change"* %13, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %34

18:                                               ; preds = %10, %27
  %19 = phi %"struct.ui::AXTreeObserver::Change"* [ %6, %10 ], [ %28, %27 ]
  %20 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %19, i64 0, i32 0
  %21 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %20, align 8
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %21, i64 0, i32 7, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 159
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = load %"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXLanguageDetectionManager"** %11, align 8
  tail call void @_ZN2ui26AXLanguageDetectionManager22DetectLanguagesForNodeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"* %26, %"class.ui::AXNode"* %21)
  br label %27

27:                                               ; preds = %25, %18
  %28 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %19, i64 1
  %29 = icmp eq %"struct.ui::AXTreeObserver::Change"* %28, %8
  br i1 %29, label %12, label %18

30:                                               ; preds = %43, %4, %12
  %31 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXLanguageDetectionManager"** %31, align 8
  %33 = getelementptr inbounds %"class.ui::AXLanguageDetectionManager", %"class.ui::AXLanguageDetectionManager"* %32, i64 0, i32 4
  tail call void @_ZN2ui19AXLanguageInfoStats13ReportMetricsEv(%"class.ui::AXLanguageInfoStats"* %33)
  ret void

34:                                               ; preds = %16, %43
  %35 = phi %"struct.ui::AXTreeObserver::Change"* [ %13, %16 ], [ %44, %43 ]
  %36 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %35, i64 0, i32 0
  %37 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %36, align 8
  %38 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %37, i64 0, i32 7, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 159
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = load %"class.ui::AXLanguageDetectionManager"*, %"class.ui::AXLanguageDetectionManager"** %17, align 8
  tail call void @_ZN2ui26AXLanguageDetectionManager21LabelLanguagesForNodeEPNS_6AXNodeE(%"class.ui::AXLanguageDetectionManager"* %42, %"class.ui::AXNode"* %37)
  br label %43

43:                                               ; preds = %41, %34
  %44 = getelementptr inbounds %"struct.ui::AXTreeObserver::Change", %"struct.ui::AXTreeObserver::Change"* %35, i64 1
  %45 = icmp eq %"struct.ui::AXTreeObserver::Change"* %44, %14
  br i1 %45, label %30, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver20OnNodeDataWillChangeEPNS_6AXTreeERKNS_10AXNodeDataES5_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXNodeData"* dereferenceable(264), %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver17OnNodeDataChangedEPNS_6AXTreeERKNS_10AXNodeDataES5_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXNodeData"* dereferenceable(264), %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver13OnRoleChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom4RoleES7_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver14OnStateChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom5StateEb(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver24OnStringAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver21OnIntAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom12IntAttributeEii(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver23OnFloatAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom14FloatAttributeEff(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, float, float) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver22OnBoolAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom13BoolAttributeEb(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver25OnIntListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS8_9allocatorIiEEEESE_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::vector.57"* dereferenceable(24), %"class.std::__1::vector.57"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver28OnStringListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom19StringListAttributeERKNSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEESJ_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver17OnTreeDataChangedEPNS_6AXTreeERKNS_10AXTreeDataES5_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXTreeData"* dereferenceable(248), %"struct.ui::AXTreeData"* dereferenceable(248)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver19OnNodeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver22OnSubtreeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver22OnNodeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver25OnSubtreeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver13OnNodeCreatedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver13OnNodeDeletedEPNS_6AXTreeEi(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver16OnNodeReparentedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver13OnNodeChangedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver26OnTreeManagerWillBeRemovedENS_8AXTreeIDE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTreeID"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #5

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #5

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #5

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK2ui10AXNodeData18HasStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.448"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #16
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #16, !range !7
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %216, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %216, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #16
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %216, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %216, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 48) #15, !noalias !8
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %118, align 8, !noalias !8
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1, !noalias !8
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %125, i64 24, i1 false) #16, !noalias !8
  br label %132

126:                                              ; preds = %114
  %127 = bitcast i8* %117 to %"class.std::__1::basic_string"*
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8, !noalias !8
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %127, i8* %129, i64 %131) #16, !noalias !8
  br label %132

132:                                              ; preds = %124, %126
  %133 = getelementptr inbounds i8, i8* %116, i64 40
  %134 = bitcast i8* %133 to i32*
  store i32 0, i32* %134, align 8, !noalias !8
  %135 = getelementptr inbounds i8, i8* %116, i64 8
  %136 = bitcast i8* %135 to i64*
  store i64 %20, i64* %136, align 8, !noalias !8
  %137 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %137, align 8, !noalias !8
  %138 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  %141 = uitofp i64 %140 to float
  %142 = uitofp i64 %22 to float
  %143 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %144 = load float, float* %143, align 4
  %145 = fmul float %144, %142
  %146 = fcmp olt float %145, %141
  %147 = or i1 %23, %146
  br i1 %147, label %148, label %171

148:                                              ; preds = %132
  %149 = shl i64 %22, 1
  %150 = icmp ult i64 %22, 3
  %151 = call i64 @llvm.ctpop.i64(i64 %22) #16, !range !7
  %152 = icmp ugt i64 %151, 1
  %153 = or i1 %150, %152
  %154 = zext i1 %153 to i64
  %155 = or i64 %149, %154
  %156 = fdiv float %141, %144
  %157 = call float @llvm.ceil.f32(float %156) #16
  %158 = fptoui float %157 to i64
  %159 = icmp ult i64 %155, %158
  %160 = select i1 %159, i64 %158, i64 %155
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %160)
  %161 = load i64, i64* %21, align 8
  %162 = call i64 @llvm.ctpop.i64(i64 %161) #16, !range !7
  %163 = icmp ugt i64 %162, 1
  br i1 %163, label %167, label %164

164:                                              ; preds = %148
  %165 = add i64 %161, -1
  %166 = and i64 %165, %20
  br label %171

167:                                              ; preds = %148
  %168 = icmp ult i64 %20, %161
  br i1 %168, label %171, label %169

169:                                              ; preds = %167
  %170 = urem i64 %20, %161
  br label %171

171:                                              ; preds = %169, %167, %164, %132
  %172 = phi i64 [ %22, %132 ], [ %161, %164 ], [ %161, %167 ], [ %161, %169 ]
  %173 = phi i64 [ %115, %132 ], [ %166, %164 ], [ %20, %167 ], [ %170, %169 ]
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %175, i64 %173
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %179, label %205

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %181 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast i8* %116 to i64*
  store i64 %182, i64* %183, align 8
  %184 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i8**
  store i8* %116, i8** %184, align 8
  store %"struct.std::__1::__hash_node_base"* %180, %"struct.std::__1::__hash_node_base"** %176, align 8
  %185 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %137, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base"* %185, null
  br i1 %186, label %212, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %185, i64 1
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = call i64 @llvm.ctpop.i64(i64 %172) #16, !range !7
  %192 = icmp ugt i64 %191, 1
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = add i64 %172, -1
  %195 = and i64 %190, %194
  br label %200

196:                                              ; preds = %187
  %197 = icmp ult i64 %190, %172
  br i1 %197, label %200, label %198

198:                                              ; preds = %196
  %199 = urem i64 %190, %172
  br label %200

200:                                              ; preds = %193, %196, %198
  %201 = phi i64 [ %195, %193 ], [ %199, %198 ], [ %190, %196 ]
  %202 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %174, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %202, i64 %201
  %204 = bitcast %"struct.std::__1::__hash_node_base"** %203 to i8**
  br label %210

205:                                              ; preds = %171
  %206 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast i8* %116 to i64*
  store i64 %207, i64* %208, align 8
  %209 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i8**
  br label %210

210:                                              ; preds = %200, %205
  %211 = phi i8** [ %209, %205 ], [ %204, %200 ]
  store i8* %116, i8** %211, align 8
  br label %212

212:                                              ; preds = %210, %179
  %213 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"*
  %214 = load i64, i64* %138, align 8
  %215 = add i64 %214, 1
  store i64 %215, i64* %138, align 8
  br label %216

216:                                              ; preds = %88, %94, %95, %102, %212
  %217 = phi i8 [ 1, %212 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %218 = phi %"struct.std::__1::__hash_node_base"* [ %213, %212 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %219 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %218, 0
  %220 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %219, i8 %217, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %220
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !7
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !7
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !7
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !11

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !7
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #16
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #15
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.35"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.31"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #16
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #16
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #16, !range !7
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.35"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.35"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base.35"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.35"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.35"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.35"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base.35"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base.35"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #16
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.35"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #15, !noalias !12
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !12
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #16, !noalias !12
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !12
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !12
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #16, !noalias !12
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !12
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.35"**
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %131, align 8, !noalias !12
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #16, !range !7
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #16
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.31"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #16, !range !7
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.35"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base.35"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base.35"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base.35"* %174, %"struct.std::__1::__hash_node_base.35"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.35"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base.35"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #16, !range !7
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base.35"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base.35"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base.35"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.35"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base.35"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base.35"*, i8 } undef, %"struct.std::__1::__hash_node_base.35"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base.35"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base.35"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.31"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !7
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.31"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !7
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !7
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.31"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.31"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.31"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.35"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.35"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.37", %"class.std::__1::__bucket_list_deallocator.37"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.35"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.35"* null, %"struct.std::__1::__hash_node_base.35"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.35"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !7
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.35"* %36, %"struct.std::__1::__hash_node_base.35"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.35"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.35"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.35"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.35"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.35"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.35"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.35"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.35"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.35"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.35"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.35"* %82, %"struct.std::__1::__hash_node_base.35"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.35"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.35"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.35"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.35"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.35"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.35"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #16
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.35"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.35"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.35"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.35"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.35"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.35"* %80, %"struct.std::__1::__hash_node_base.35"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.35"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.35", %"struct.std::__1::__hash_node_base.35"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.35"*, %"struct.std::__1::__hash_node_base.35"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.35"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.31", %"class.std::__1::__hash_table.31"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.35"**, %"struct.std::__1::__hash_node_base.35"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.35"** null, %"struct.std::__1::__hash_node_base.35"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.35"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.35"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #15
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.37", %"class.std::__1::__bucket_list_deallocator.37"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #16
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #16
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #16, !range !7
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #16
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE24__emplace_back_slow_pathIJRKiRKS7_EEEvDpOT_(%"class.std::__1::vector.24"*, i32* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.24"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.24"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #17
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #15
  %34 = bitcast i8* %33 to %"struct.std::__1::pair"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"struct.std::__1::pair"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %10
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %36
  %40 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 0
  %42 = load i32, i32* %1, align 4
  store i32 %42, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %10, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %35
  %49 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #16
  br label %56

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %53, i64 %55) #16
  br label %56

56:                                               ; preds = %48, %51
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 1
  %58 = ptrtoint %"struct.std::__1::pair"* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 0
  %60 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %59, align 8
  %61 = ptrtoint %"struct.std::__1::pair"* %60 to i64
  %62 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %63 = icmp eq %"struct.std::__1::pair"* %62, %60
  br i1 %63, label %109, label %64

64:                                               ; preds = %56
  %65 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %62, i64 -1, i32 0
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %61
  %68 = and i64 %67, 32
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %80

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %62, i64 -1
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1, i32 0
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1, i32 1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %62, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #16
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 -1
  br label %80

80:                                               ; preds = %70, %64
  %81 = phi %"struct.std::__1::pair"* [ undef, %64 ], [ %79, %70 ]
  %82 = phi %"struct.std::__1::pair"* [ %38, %64 ], [ %79, %70 ]
  %83 = phi %"struct.std::__1::pair"* [ %62, %64 ], [ %71, %70 ]
  %84 = icmp ult i64 %67, 32
  br i1 %84, label %105, label %85

85:                                               ; preds = %80, %85
  %86 = phi %"struct.std::__1::pair"* [ %103, %85 ], [ %82, %80 ]
  %87 = phi %"struct.std::__1::pair"* [ %95, %85 ], [ %83, %80 ]
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -1, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -1, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %88, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -1, i32 1
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -1, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #16
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -2
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -2, i32 0
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  store i32 %98, i32* %96, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -2, i32 1
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -2, i32 1
  %101 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  %102 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #16
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 -2
  %104 = icmp eq %"struct.std::__1::pair"* %95, %60
  br i1 %104, label %105, label %85

105:                                              ; preds = %85, %80
  %106 = phi %"struct.std::__1::pair"* [ %81, %80 ], [ %103, %85 ]
  %107 = load i64, i64* %7, align 8
  %108 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %109

109:                                              ; preds = %56, %105
  %110 = phi %"struct.std::__1::pair"* [ %108, %105 ], [ %60, %56 ]
  %111 = phi %"struct.std::__1::pair"* [ %106, %105 ], [ %38, %56 ]
  %112 = phi i64 [ %107, %105 ], [ %61, %56 ]
  %113 = ptrtoint %"struct.std::__1::pair"* %111 to i64
  store i64 %113, i64* %7, align 8
  store i64 %58, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %114 = inttoptr i64 %112 to %"struct.std::__1::pair"*
  %115 = icmp eq %"struct.std::__1::pair"* %110, %114
  br i1 %115, label %129, label %116

116:                                              ; preds = %109, %127
  %117 = phi %"struct.std::__1::pair"* [ %118, %127 ], [ %110, %109 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 -1
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 -1, i32 1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #15
  br label %127

127:                                              ; preds = %124, %116
  %128 = icmp eq %"struct.std::__1::pair"* %118, %114
  br i1 %128, label %129, label %116

129:                                              ; preds = %127, %109
  %130 = icmp eq i64 %112, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = inttoptr i64 %112 to i8*
  tail call void @_ZdlPv(i8* %132) #15
  br label %133

133:                                              ; preds = %129, %131
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEvT0_SD_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::greater"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %644, %3
  %5 = phi %"struct.std::__1::pair"* [ %1, %3 ], [ %577, %644 ]
  %6 = phi %"struct.std::__1::pair"* [ %0, %3 ], [ %25, %644 ]
  %7 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -2
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.std::__1::basic_string"* %17 to <2 x i64>*
  %21 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  br label %22

22:                                               ; preds = %653, %4
  %23 = phi %"struct.std::__1::pair"* [ %6, %4 ], [ %654, %653 ]
  br label %24

24:                                               ; preds = %370, %22
  %25 = phi %"struct.std::__1::pair"* [ %23, %22 ], [ %287, %370 ]
  %26 = ptrtoint %"struct.std::__1::pair"* %25 to i64
  %27 = sub i64 %7, %26
  %28 = ashr exact i64 %27, 5
  switch i64 %28, label %100 [
    i64 0, label %657
    i64 1, label %657
    i64 2, label %29
    i64 3, label %85
    i64 4, label %89
    i64 5, label %94
  ]

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %74, label %35

35:                                               ; preds = %29
  %36 = icmp slt i32 %33, %31
  br i1 %36, label %657, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i64 %53, i64 %54
  %56 = icmp ult i64 %47, %55
  %57 = select i1 %56, i64 %47, i64 %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %63 = select i1 %51, i8* %61, i8* %62
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %67 = select i1 %43, i8* %65, i8* %66
  %68 = tail call i32 @memcmp(i8* %63, i8* %67, i64 %57) #16
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %59, %37
  %71 = icmp ult i64 %55, %47
  br i1 %71, label %74, label %657

72:                                               ; preds = %59
  %73 = icmp slt i32 %68, 0
  br i1 %73, label %74, label %657

74:                                               ; preds = %70, %29, %72
  store i32 %33, i32* %30, align 4
  store i32 %31, i32* %32, align 4
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %75 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #16
  %83 = bitcast %"class.std::__1::basic_string"* %76 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %80, i64* %84, align 8
  br label %657

85:                                               ; preds = %24
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %88 = tail call i32 @_ZNSt3__17__sort3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_T_(%"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %86, %"struct.std::__1::pair"* %87, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %657

89:                                               ; preds = %24
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 2
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %93 = tail call i32 @_ZNSt3__17__sort4IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_T_(%"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %90, %"struct.std::__1::pair"* %91, %"struct.std::__1::pair"* %92, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %657

94:                                               ; preds = %24
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 2
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 3
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %99 = tail call i32 @_ZNSt3__17__sort5IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_SD_T_(%"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %95, %"struct.std::__1::pair"* %96, %"struct.std::__1::pair"* %97, %"struct.std::__1::pair"* %98, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %657

100:                                              ; preds = %24
  %101 = icmp slt i64 %27, 224
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEvT0_SD_T_(%"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %5, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %657

103:                                              ; preds = %100
  %104 = icmp sgt i64 %27, 31968
  %105 = sdiv i64 %28, 2
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 %105
  br i1 %104, label %107, label %112

107:                                              ; preds = %103
  %108 = sdiv i64 %28, 4
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 %108
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 %108
  %111 = tail call i32 @_ZNSt3__17__sort5IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_SD_T_(%"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %109, %"struct.std::__1::pair"* %106, %"struct.std::__1::pair"* %110, %"struct.std::__1::pair"* %8, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %114

112:                                              ; preds = %103
  %113 = tail call i32 @_ZNSt3__17__sort3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_T_(%"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %106, %"struct.std::__1::pair"* %8, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %114

114:                                              ; preds = %112, %107
  %115 = phi i32 [ %111, %107 ], [ %113, %112 ]
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp slt i32 %117, %119
  br i1 %120, label %440, label %121

121:                                              ; preds = %114
  %122 = icmp slt i32 %119, %117
  br i1 %122, label %160, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 %105, i32 1
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %126 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = zext i8 %128 to i64
  %133 = select i1 %129, i64 %131, i64 %132
  %134 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 %105, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = zext i8 %136 to i64
  %141 = select i1 %137, i64 %139, i64 %140
  %142 = icmp ult i64 %133, %141
  %143 = select i1 %142, i64 %133, i64 %141
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %123
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  %149 = select i1 %137, i8* %147, i8* %148
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  %153 = select i1 %129, i8* %151, i8* %152
  %154 = tail call i32 @memcmp(i8* %149, i8* %153, i64 %143) #16
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %145, %123
  %157 = icmp ult i64 %141, %133
  br i1 %157, label %440, label %160

158:                                              ; preds = %145
  %159 = icmp slt i32 %154, 0
  br i1 %159, label %440, label %160

160:                                              ; preds = %156, %158, %121
  %161 = icmp eq %"struct.std::__1::pair"* %25, %9
  br i1 %161, label %169, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 %105, i32 1
  %164 = bitcast %"class.std::__1::basic_string"* %163 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 %105, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = bitcast %"class.std::__1::basic_string"* %163 to i8*
  br label %385

169:                                              ; preds = %424, %160
  %170 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %171 = load i32, i32* %10, align 8
  %172 = icmp slt i32 %171, %119
  br i1 %172, label %265, label %173

173:                                              ; preds = %169
  %174 = icmp slt i32 %119, %171
  br i1 %174, label %206, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %177 = bitcast %"class.std::__1::basic_string"* %176 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = zext i8 %179 to i64
  %184 = select i1 %180, i64 %182, i64 %183
  %185 = load i8, i8* %13, align 1
  %186 = icmp slt i8 %185, 0
  %187 = load i64, i64* %14, align 8
  %188 = zext i8 %185 to i64
  %189 = select i1 %186, i64 %187, i64 %188
  %190 = icmp ult i64 %184, %189
  %191 = select i1 %190, i64 %184, i64 %189
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %175
  %194 = load i8*, i8** %15, align 8
  %195 = select i1 %186, i8* %194, i8* %16
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  %199 = select i1 %180, i8* %197, i8* %198
  %200 = tail call i32 @memcmp(i8* %195, i8* %199, i64 %191) #16
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %193, %175
  %203 = icmp ult i64 %189, %184
  br i1 %203, label %265, label %206

204:                                              ; preds = %193
  %205 = icmp slt i32 %200, 0
  br i1 %205, label %265, label %206

206:                                              ; preds = %202, %204, %173
  %207 = icmp eq %"struct.std::__1::pair"* %170, %8
  br i1 %207, label %657, label %208

208:                                              ; preds = %206
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  br label %215

215:                                              ; preds = %208, %262
  %216 = phi %"struct.std::__1::pair"* [ %170, %208 ], [ %263, %262 ]
  %217 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 0, i32 0
  %218 = load i32, i32* %217, align 8
  %219 = icmp slt i32 %218, %119
  br i1 %219, label %253, label %220

220:                                              ; preds = %215
  %221 = icmp slt i32 %119, %218
  br i1 %221, label %262, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 0, i32 1
  %224 = load i8, i8* %211, align 1
  %225 = icmp slt i8 %224, 0
  %226 = load i64, i64* %212, align 8
  %227 = zext i8 %224 to i64
  %228 = select i1 %225, i64 %226, i64 %227
  %229 = bitcast %"class.std::__1::basic_string"* %223 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  %233 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %234 = load i64, i64* %233, align 8
  %235 = zext i8 %231 to i64
  %236 = select i1 %232, i64 %234, i64 %235
  %237 = icmp ult i64 %228, %236
  %238 = select i1 %237, i64 %228, i64 %236
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %249, label %240

240:                                              ; preds = %222
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = bitcast %"class.std::__1::basic_string"* %223 to i8*
  %244 = select i1 %232, i8* %242, i8* %243
  %245 = load i8*, i8** %213, align 8
  %246 = select i1 %225, i8* %245, i8* %214
  %247 = tail call i32 @memcmp(i8* %244, i8* %246, i64 %238) #16
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %240, %222
  %250 = icmp ult i64 %236, %228
  br i1 %250, label %253, label %262

251:                                              ; preds = %240
  %252 = icmp slt i32 %247, 0
  br i1 %252, label %253, label %262

253:                                              ; preds = %249, %215, %251
  %254 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 0, i32 0
  store i32 %171, i32* %254, align 4
  store i32 %218, i32* %10, align 4
  %255 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 0, i32 1
  %256 = bitcast %"class.std::__1::basic_string"* %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8
  %258 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.std::__1::basic_string"* %255 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %18, i64 24, i1 false) #16
  store <2 x i64> %257, <2 x i64>* %20, align 8
  store i64 %259, i64* %19, align 8
  %261 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 1
  br label %265

262:                                              ; preds = %249, %220, %251
  %263 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 1
  %264 = icmp eq %"struct.std::__1::pair"* %263, %8
  br i1 %264, label %657, label %215

265:                                              ; preds = %202, %169, %204, %253
  %266 = phi %"struct.std::__1::pair"* [ %261, %253 ], [ %170, %204 ], [ %170, %169 ], [ %170, %202 ]
  %267 = icmp eq %"struct.std::__1::pair"* %266, %8
  br i1 %267, label %657, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %270 = bitcast %"class.std::__1::basic_string"* %269 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  %272 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %273 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %269, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = bitcast %"class.std::__1::basic_string"* %269 to i8*
  br label %275

275:                                              ; preds = %268, %372
  %276 = phi %"struct.std::__1::pair"* [ %384, %372 ], [ %266, %268 ]
  %277 = phi %"struct.std::__1::pair"* [ %332, %372 ], [ %8, %268 ]
  %278 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %276, i64 0, i32 0
  %279 = load i32, i32* %278, align 8
  %280 = load i32, i32* %118, align 8
  %281 = icmp slt i32 %279, %280
  br i1 %281, label %286, label %290

282:                                              ; preds = %322, %324, %326
  %283 = phi i32* [ %327, %326 ], [ %292, %324 ], [ %292, %322 ]
  %284 = phi i32 [ %328, %326 ], [ %291, %324 ], [ %291, %322 ]
  %285 = bitcast i32* %283 to %"struct.std::__1::pair"*
  br label %286

286:                                              ; preds = %282, %275
  %287 = phi %"struct.std::__1::pair"* [ %276, %275 ], [ %285, %282 ]
  %288 = phi i32* [ %278, %275 ], [ %283, %282 ]
  %289 = phi i32 [ %279, %275 ], [ %284, %282 ]
  br label %330

290:                                              ; preds = %275, %326
  %291 = phi i32 [ %328, %326 ], [ %279, %275 ]
  %292 = phi i32* [ %327, %326 ], [ %278, %275 ]
  %293 = icmp slt i32 %280, %291
  br i1 %293, label %326, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds i32, i32* %292, i64 2
  %296 = load i8, i8* %271, align 1
  %297 = icmp slt i8 %296, 0
  %298 = load i64, i64* %272, align 8
  %299 = zext i8 %296 to i64
  %300 = select i1 %297, i64 %298, i64 %299
  %301 = bitcast i32* %295 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %301, i64 0, i32 1, i32 0
  %303 = load i8, i8* %302, align 1
  %304 = icmp slt i8 %303, 0
  %305 = getelementptr inbounds i32, i32* %292, i64 4
  %306 = bitcast i32* %305 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = zext i8 %303 to i64
  %309 = select i1 %304, i64 %307, i64 %308
  %310 = icmp ult i64 %300, %309
  %311 = select i1 %310, i64 %300, i64 %309
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %322, label %313

313:                                              ; preds = %294
  %314 = bitcast i32* %295 to i8**
  %315 = load i8*, i8** %314, align 8
  %316 = bitcast i32* %295 to i8*
  %317 = select i1 %304, i8* %315, i8* %316
  %318 = load i8*, i8** %273, align 8
  %319 = select i1 %297, i8* %318, i8* %274
  %320 = tail call i32 @memcmp(i8* %317, i8* %319, i64 %311) #16
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %324

322:                                              ; preds = %313, %294
  %323 = icmp ult i64 %309, %300
  br i1 %323, label %282, label %326

324:                                              ; preds = %313
  %325 = icmp slt i32 %320, 0
  br i1 %325, label %282, label %326

326:                                              ; preds = %322, %290, %324
  %327 = getelementptr inbounds i32, i32* %292, i64 8
  %328 = load i32, i32* %327, align 8
  %329 = icmp slt i32 %328, %280
  br i1 %329, label %282, label %290

330:                                              ; preds = %367, %286
  %331 = phi %"struct.std::__1::pair"* [ %277, %286 ], [ %332, %367 ]
  %332 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 -1
  %333 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %332, i64 0, i32 0
  %334 = load i32, i32* %333, align 8
  %335 = icmp slt i32 %334, %280
  br i1 %335, label %367, label %336

336:                                              ; preds = %330
  %337 = icmp slt i32 %280, %334
  br i1 %337, label %370, label %338

338:                                              ; preds = %336
  %339 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 -1, i32 1
  %340 = load i8, i8* %271, align 1
  %341 = icmp slt i8 %340, 0
  %342 = load i64, i64* %272, align 8
  %343 = zext i8 %340 to i64
  %344 = select i1 %341, i64 %342, i64 %343
  %345 = bitcast %"class.std::__1::basic_string"* %339 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %345, i64 0, i32 1, i32 0
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 0
  %349 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %350 = load i64, i64* %349, align 8
  %351 = zext i8 %347 to i64
  %352 = select i1 %348, i64 %350, i64 %351
  %353 = icmp ult i64 %344, %352
  %354 = select i1 %353, i64 %344, i64 %352
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %365, label %356

356:                                              ; preds = %338
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = bitcast %"class.std::__1::basic_string"* %339 to i8*
  %360 = select i1 %348, i8* %358, i8* %359
  %361 = load i8*, i8** %273, align 8
  %362 = select i1 %341, i8* %361, i8* %274
  %363 = tail call i32 @memcmp(i8* %360, i8* %362, i64 %354) #16
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %368

365:                                              ; preds = %356, %338
  %366 = icmp ult i64 %352, %344
  br i1 %366, label %367, label %370

367:                                              ; preds = %365, %368, %330
  br label %330

368:                                              ; preds = %356
  %369 = icmp slt i32 %363, 0
  br i1 %369, label %367, label %370

370:                                              ; preds = %365, %336, %368
  %371 = icmp ult %"struct.std::__1::pair"* %287, %332
  br i1 %371, label %372, label %24

372:                                              ; preds = %370
  %373 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %332, i64 0, i32 0
  store i32 %334, i32* %288, align 4
  store i32 %289, i32* %373, align 4
  %374 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %287, i64 0, i32 1
  %375 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 -1, i32 1
  %376 = bitcast %"class.std::__1::basic_string"* %374 to <2 x i64>*
  %377 = load <2 x i64>, <2 x i64>* %376, align 8
  %378 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %287, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %379 = load i64, i64* %378, align 8
  %380 = bitcast %"class.std::__1::basic_string"* %374 to i8*
  %381 = bitcast %"class.std::__1::basic_string"* %375 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %381, i64 24, i1 false) #16
  %382 = bitcast %"class.std::__1::basic_string"* %375 to <2 x i64>*
  store <2 x i64> %377, <2 x i64>* %382, align 8
  %383 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %379, i64* %383, align 8
  %384 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %287, i64 1
  br label %275

385:                                              ; preds = %162, %424
  %386 = phi %"struct.std::__1::pair"* [ %9, %162 ], [ %425, %424 ]
  %387 = phi %"struct.std::__1::pair"* [ %8, %162 ], [ %386, %424 ]
  %388 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %386, i64 0, i32 0
  %389 = load i32, i32* %388, align 8
  %390 = icmp slt i32 %117, %389
  br i1 %390, label %427, label %391

391:                                              ; preds = %385
  %392 = icmp slt i32 %389, %117
  br i1 %392, label %424, label %393

393:                                              ; preds = %391
  %394 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %387, i64 -1, i32 1
  %395 = bitcast %"class.std::__1::basic_string"* %394 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %395, i64 0, i32 1, i32 0
  %397 = load i8, i8* %396, align 1
  %398 = icmp slt i8 %397, 0
  %399 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %387, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %400 = load i64, i64* %399, align 8
  %401 = zext i8 %397 to i64
  %402 = select i1 %398, i64 %400, i64 %401
  %403 = load i8, i8* %165, align 1
  %404 = icmp slt i8 %403, 0
  %405 = load i64, i64* %166, align 8
  %406 = zext i8 %403 to i64
  %407 = select i1 %404, i64 %405, i64 %406
  %408 = icmp ult i64 %402, %407
  %409 = select i1 %408, i64 %402, i64 %407
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %420, label %411

411:                                              ; preds = %393
  %412 = load i8*, i8** %167, align 8
  %413 = select i1 %404, i8* %412, i8* %168
  %414 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load i8*, i8** %414, align 8
  %416 = bitcast %"class.std::__1::basic_string"* %394 to i8*
  %417 = select i1 %398, i8* %415, i8* %416
  %418 = tail call i32 @memcmp(i8* %413, i8* %417, i64 %409) #16
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %422

420:                                              ; preds = %411, %393
  %421 = icmp ult i64 %407, %402
  br i1 %421, label %427, label %424

422:                                              ; preds = %411
  %423 = icmp slt i32 %418, 0
  br i1 %423, label %427, label %424

424:                                              ; preds = %420, %422, %391
  %425 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %386, i64 -1
  %426 = icmp eq %"struct.std::__1::pair"* %25, %425
  br i1 %426, label %169, label %385

427:                                              ; preds = %420, %385, %422
  %428 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %386, i64 0, i32 0
  store i32 %389, i32* %118, align 4
  store i32 %119, i32* %428, align 4
  %429 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1
  %430 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %387, i64 -1, i32 1
  %431 = bitcast %"class.std::__1::basic_string"* %429 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8
  %433 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %434 = load i64, i64* %433, align 8
  %435 = bitcast %"class.std::__1::basic_string"* %429 to i8*
  %436 = bitcast %"class.std::__1::basic_string"* %430 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %435, i8* align 8 %436, i64 24, i1 false) #16
  %437 = bitcast %"class.std::__1::basic_string"* %430 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %437, align 8
  %438 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %387, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %434, i64* %438, align 8
  %439 = add i32 %115, 1
  br label %440

440:                                              ; preds = %156, %114, %158, %427
  %441 = phi i32 [ %439, %427 ], [ %115, %158 ], [ %115, %114 ], [ %115, %156 ]
  %442 = phi %"struct.std::__1::pair"* [ %386, %427 ], [ %8, %158 ], [ %8, %114 ], [ %8, %156 ]
  %443 = ptrtoint %"struct.std::__1::pair"* %25 to i64
  %444 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %445 = icmp ult %"struct.std::__1::pair"* %444, %442
  br i1 %445, label %446, label %574

446:                                              ; preds = %440, %559
  %447 = phi %"struct.std::__1::pair"* [ %572, %559 ], [ %106, %440 ]
  %448 = phi i32 [ %570, %559 ], [ %441, %440 ]
  %449 = phi %"struct.std::__1::pair"* [ %573, %559 ], [ %444, %440 ]
  %450 = phi %"struct.std::__1::pair"* [ %555, %559 ], [ %442, %440 ]
  %451 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %447, i64 0, i32 0
  %452 = load i32, i32* %451, align 8
  %453 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %447, i64 0, i32 1
  %454 = bitcast %"class.std::__1::basic_string"* %453 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %455 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %454, i64 0, i32 1, i32 0
  %456 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %447, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %457 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %453, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = bitcast %"class.std::__1::basic_string"* %453 to i8*
  br label %459

459:                                              ; preds = %503, %446
  %460 = phi %"struct.std::__1::pair"* [ %449, %446 ], [ %504, %503 ]
  %461 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %460, i64 0, i32 0
  %462 = load i32, i32* %461, align 8
  %463 = icmp slt i32 %452, %462
  br i1 %463, label %503, label %464

464:                                              ; preds = %459
  %465 = icmp slt i32 %462, %452
  br i1 %465, label %466, label %472

466:                                              ; preds = %499, %501, %464
  %467 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %460, i64 0, i32 0
  %468 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %450, i64 -1
  %469 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %468, i64 0, i32 0
  %470 = load i32, i32* %469, align 8
  %471 = icmp slt i32 %452, %470
  br i1 %471, label %553, label %505

472:                                              ; preds = %464
  %473 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %460, i64 0, i32 1
  %474 = bitcast %"class.std::__1::basic_string"* %473 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %475 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %474, i64 0, i32 1, i32 0
  %476 = load i8, i8* %475, align 1
  %477 = icmp slt i8 %476, 0
  %478 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %460, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %479 = load i64, i64* %478, align 8
  %480 = zext i8 %476 to i64
  %481 = select i1 %477, i64 %479, i64 %480
  %482 = load i8, i8* %455, align 1
  %483 = icmp slt i8 %482, 0
  %484 = load i64, i64* %456, align 8
  %485 = zext i8 %482 to i64
  %486 = select i1 %483, i64 %484, i64 %485
  %487 = icmp ult i64 %481, %486
  %488 = select i1 %487, i64 %481, i64 %486
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %499, label %490

490:                                              ; preds = %472
  %491 = load i8*, i8** %457, align 8
  %492 = select i1 %483, i8* %491, i8* %458
  %493 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %473, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load i8*, i8** %493, align 8
  %495 = bitcast %"class.std::__1::basic_string"* %473 to i8*
  %496 = select i1 %477, i8* %494, i8* %495
  %497 = tail call i32 @memcmp(i8* %492, i8* %496, i64 %488) #16
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %501

499:                                              ; preds = %490, %472
  %500 = icmp ult i64 %486, %481
  br i1 %500, label %503, label %466

501:                                              ; preds = %490
  %502 = icmp slt i32 %497, 0
  br i1 %502, label %503, label %466

503:                                              ; preds = %499, %459, %501
  %504 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %460, i64 1
  br label %459

505:                                              ; preds = %466, %542
  %506 = phi i32 [ %544, %542 ], [ %470, %466 ]
  %507 = phi i32* [ %543, %542 ], [ %469, %466 ]
  %508 = phi %"struct.std::__1::pair"* [ %509, %542 ], [ %450, %466 ]
  %509 = bitcast i32* %507 to %"struct.std::__1::pair"*
  %510 = icmp slt i32 %506, %452
  br i1 %510, label %542, label %511

511:                                              ; preds = %505
  %512 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %508, i64 -1, i32 1
  %513 = bitcast %"class.std::__1::basic_string"* %512 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %514 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %513, i64 0, i32 1, i32 0
  %515 = load i8, i8* %514, align 1
  %516 = icmp slt i8 %515, 0
  %517 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %508, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %518 = load i64, i64* %517, align 8
  %519 = zext i8 %515 to i64
  %520 = select i1 %516, i64 %518, i64 %519
  %521 = load i8, i8* %455, align 1
  %522 = icmp slt i8 %521, 0
  %523 = load i64, i64* %456, align 8
  %524 = zext i8 %521 to i64
  %525 = select i1 %522, i64 %523, i64 %524
  %526 = icmp ult i64 %520, %525
  %527 = select i1 %526, i64 %520, i64 %525
  %528 = icmp eq i64 %527, 0
  br i1 %528, label %538, label %529

529:                                              ; preds = %511
  %530 = load i8*, i8** %457, align 8
  %531 = select i1 %522, i8* %530, i8* %458
  %532 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %512, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load i8*, i8** %532, align 8
  %534 = bitcast %"class.std::__1::basic_string"* %512 to i8*
  %535 = select i1 %516, i8* %533, i8* %534
  %536 = tail call i32 @memcmp(i8* %531, i8* %535, i64 %527) #16
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %538, label %540

538:                                              ; preds = %529, %511
  %539 = icmp ult i64 %525, %520
  br i1 %539, label %546, label %542

540:                                              ; preds = %529
  %541 = icmp slt i32 %536, 0
  br i1 %541, label %551, label %542

542:                                              ; preds = %538, %540, %505
  %543 = getelementptr inbounds i32, i32* %507, i64 -8
  %544 = load i32, i32* %543, align 8
  %545 = icmp slt i32 %452, %544
  br i1 %545, label %548, label %505

546:                                              ; preds = %538
  %547 = bitcast i32* %507 to %"struct.std::__1::pair"*
  br label %553

548:                                              ; preds = %542
  %549 = bitcast i32* %507 to %"struct.std::__1::pair"*
  %550 = bitcast i32* %543 to %"struct.std::__1::pair"*
  br label %553

551:                                              ; preds = %540
  %552 = bitcast i32* %507 to %"struct.std::__1::pair"*
  br label %553

553:                                              ; preds = %546, %548, %551, %466
  %554 = phi %"struct.std::__1::pair"* [ %450, %466 ], [ %508, %546 ], [ %549, %548 ], [ %508, %551 ]
  %555 = phi %"struct.std::__1::pair"* [ %468, %466 ], [ %547, %546 ], [ %550, %548 ], [ %552, %551 ]
  %556 = phi i32* [ %469, %466 ], [ %507, %546 ], [ %543, %548 ], [ %507, %551 ]
  %557 = phi i32 [ %470, %466 ], [ %506, %546 ], [ %544, %548 ], [ %506, %551 ]
  %558 = icmp ugt %"struct.std::__1::pair"* %460, %555
  br i1 %558, label %574, label %559

559:                                              ; preds = %553
  store i32 %557, i32* %467, align 4
  store i32 %462, i32* %556, align 4
  %560 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %460, i64 0, i32 1
  %561 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %554, i64 -1, i32 1
  %562 = bitcast %"class.std::__1::basic_string"* %560 to <2 x i64>*
  %563 = load <2 x i64>, <2 x i64>* %562, align 8
  %564 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %460, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %565 = load i64, i64* %564, align 8
  %566 = bitcast %"class.std::__1::basic_string"* %560 to i8*
  %567 = bitcast %"class.std::__1::basic_string"* %561 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %566, i8* align 8 %567, i64 24, i1 false) #16
  %568 = bitcast %"class.std::__1::basic_string"* %561 to <2 x i64>*
  store <2 x i64> %563, <2 x i64>* %568, align 8
  %569 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %554, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %565, i64* %569, align 8
  %570 = add i32 %448, 1
  %571 = icmp eq %"struct.std::__1::pair"* %447, %460
  %572 = select i1 %571, %"struct.std::__1::pair"* %555, %"struct.std::__1::pair"* %447
  %573 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %460, i64 1
  br label %446

574:                                              ; preds = %553, %440
  %575 = phi %"struct.std::__1::pair"* [ %106, %440 ], [ %447, %553 ]
  %576 = phi i32 [ %441, %440 ], [ %448, %553 ]
  %577 = phi %"struct.std::__1::pair"* [ %444, %440 ], [ %460, %553 ]
  %578 = icmp eq %"struct.std::__1::pair"* %577, %575
  br i1 %578, label %636, label %579

579:                                              ; preds = %574
  %580 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %577, i64 0, i32 0
  %581 = load i32, i32* %580, align 8
  %582 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %575, i64 0, i32 0
  %583 = load i32, i32* %582, align 8
  %584 = icmp slt i32 %581, %583
  br i1 %584, label %624, label %585

585:                                              ; preds = %579
  %586 = icmp slt i32 %583, %581
  br i1 %586, label %636, label %587

587:                                              ; preds = %585
  %588 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %577, i64 0, i32 1
  %589 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %575, i64 0, i32 1
  %590 = bitcast %"class.std::__1::basic_string"* %589 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %591 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %590, i64 0, i32 1, i32 0
  %592 = load i8, i8* %591, align 1
  %593 = icmp slt i8 %592, 0
  %594 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %575, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %595 = load i64, i64* %594, align 8
  %596 = zext i8 %592 to i64
  %597 = select i1 %593, i64 %595, i64 %596
  %598 = bitcast %"class.std::__1::basic_string"* %588 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %599 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %598, i64 0, i32 1, i32 0
  %600 = load i8, i8* %599, align 1
  %601 = icmp slt i8 %600, 0
  %602 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %577, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %603 = load i64, i64* %602, align 8
  %604 = zext i8 %600 to i64
  %605 = select i1 %601, i64 %603, i64 %604
  %606 = icmp ult i64 %597, %605
  %607 = select i1 %606, i64 %597, i64 %605
  %608 = icmp eq i64 %607, 0
  br i1 %608, label %620, label %609

609:                                              ; preds = %587
  %610 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %588, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load i8*, i8** %610, align 8
  %612 = bitcast %"class.std::__1::basic_string"* %588 to i8*
  %613 = select i1 %601, i8* %611, i8* %612
  %614 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %589, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %615 = load i8*, i8** %614, align 8
  %616 = bitcast %"class.std::__1::basic_string"* %589 to i8*
  %617 = select i1 %593, i8* %615, i8* %616
  %618 = tail call i32 @memcmp(i8* %613, i8* %617, i64 %607) #16
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %622

620:                                              ; preds = %609, %587
  %621 = icmp ult i64 %605, %597
  br i1 %621, label %624, label %636

622:                                              ; preds = %609
  %623 = icmp slt i32 %618, 0
  br i1 %623, label %624, label %636

624:                                              ; preds = %620, %579, %622
  store i32 %583, i32* %580, align 4
  store i32 %581, i32* %582, align 4
  %625 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %577, i64 0, i32 1
  %626 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %575, i64 0, i32 1
  %627 = bitcast %"class.std::__1::basic_string"* %625 to <2 x i64>*
  %628 = load <2 x i64>, <2 x i64>* %627, align 8
  %629 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %577, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %630 = load i64, i64* %629, align 8
  %631 = bitcast %"class.std::__1::basic_string"* %625 to i8*
  %632 = bitcast %"class.std::__1::basic_string"* %626 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %631, i8* align 8 %632, i64 24, i1 false) #16
  %633 = bitcast %"class.std::__1::basic_string"* %626 to <2 x i64>*
  store <2 x i64> %628, <2 x i64>* %633, align 8
  %634 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %575, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %630, i64* %634, align 8
  %635 = add i32 %576, 1
  br label %636

636:                                              ; preds = %620, %585, %574, %624, %622
  %637 = phi i32 [ %635, %624 ], [ %576, %622 ], [ %576, %574 ], [ %576, %585 ], [ %576, %620 ]
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %639, label %646

639:                                              ; preds = %636
  %640 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEbT0_SD_T_(%"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %577, %"struct.std::__1::greater"* dereferenceable(1) %2)
  %641 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %577, i64 1
  %642 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEbT0_SD_T_(%"struct.std::__1::pair"* %641, %"struct.std::__1::pair"* %5, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br i1 %642, label %643, label %645

643:                                              ; preds = %639
  br i1 %640, label %657, label %644

644:                                              ; preds = %643, %655
  br label %4

645:                                              ; preds = %639
  br i1 %640, label %653, label %646

646:                                              ; preds = %645, %636
  %647 = ptrtoint %"struct.std::__1::pair"* %577 to i64
  %648 = sub i64 %647, %443
  %649 = sub i64 %21, %647
  %650 = icmp slt i64 %648, %649
  br i1 %650, label %651, label %655

651:                                              ; preds = %646
  tail call void @_ZNSt3__16__sortIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEvT0_SD_T_(%"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %577, %"struct.std::__1::greater"* dereferenceable(1) %2)
  %652 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %577, i64 1
  br label %653

653:                                              ; preds = %651, %645
  %654 = phi %"struct.std::__1::pair"* [ %641, %645 ], [ %652, %651 ]
  br label %22

655:                                              ; preds = %646
  %656 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %577, i64 1
  tail call void @_ZNSt3__16__sortIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEvT0_SD_T_(%"struct.std::__1::pair"* %656, %"struct.std::__1::pair"* %5, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %644

657:                                              ; preds = %643, %265, %24, %24, %206, %262, %70, %35, %72, %74, %85, %89, %94, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::greater"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %52, label %10

10:                                               ; preds = %4
  %11 = icmp slt i32 %8, %6
  br i1 %11, label %52, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp ult i64 %22, %30
  %32 = select i1 %31, i64 %22, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %38 = select i1 %26, i8* %36, i8* %37
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %42 = select i1 %18, i8* %40, i8* %41
  %43 = tail call i32 @memcmp(i8* %38, i8* %42, i64 %32) #16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %34, %12
  %46 = icmp ult i64 %30, %22
  %47 = zext i1 %31 to i32
  %48 = select i1 %46, i32 -1, i32 %47
  br label %49

49:                                               ; preds = %45, %34
  %50 = phi i32 [ %48, %45 ], [ %43, %34 ]
  %51 = icmp slt i32 %50, 0
  br label %52

52:                                               ; preds = %4, %10, %49
  %53 = phi i1 [ true, %4 ], [ false, %10 ], [ %51, %49 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %8, %55
  br i1 %56, label %99, label %57

57:                                               ; preds = %52
  %58 = icmp slt i32 %55, %8
  br i1 %58, label %99, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %64 to i64
  %69 = select i1 %65, i64 %67, i64 %68
  %70 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i64 %75, i64 %76
  %78 = icmp ult i64 %69, %77
  %79 = select i1 %78, i64 %69, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %59
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %85 = select i1 %73, i8* %83, i8* %84
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %89 = select i1 %65, i8* %87, i8* %88
  %90 = tail call i32 @memcmp(i8* %85, i8* %89, i64 %79) #16
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %81, %59
  %93 = icmp ult i64 %77, %69
  %94 = zext i1 %78 to i32
  %95 = select i1 %93, i32 -1, i32 %94
  br label %96

96:                                               ; preds = %92, %81
  %97 = phi i32 [ %95, %92 ], [ %90, %81 ]
  %98 = icmp slt i32 %97, 0
  br label %99

99:                                               ; preds = %52, %57, %96
  %100 = phi i1 [ true, %52 ], [ false, %57 ], [ %98, %96 ]
  br i1 %53, label %161, label %101

101:                                              ; preds = %99
  br i1 %100, label %102, label %230

102:                                              ; preds = %101
  store i32 %55, i32* %7, align 4
  store i32 %8, i32* %54, align 4
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = bitcast %"class.std::__1::basic_string"* %103 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  %111 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 24, i1 false) #16
  %112 = bitcast %"class.std::__1::basic_string"* %104 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %109, i64* %113, align 8
  %114 = load i32, i32* %5, align 8
  %115 = load i32, i32* %7, align 8
  %116 = icmp slt i32 %114, %115
  br i1 %116, label %153, label %117

117:                                              ; preds = %102
  %118 = icmp slt i32 %115, %114
  br i1 %118, label %230, label %119

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %121 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = load i64, i64* %105, align 8
  %126 = zext i8 %123 to i64
  %127 = select i1 %124, i64 %125, i64 %126
  %128 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = zext i8 %130 to i64
  %135 = select i1 %131, i64 %133, i64 %134
  %136 = icmp ult i64 %127, %135
  %137 = select i1 %136, i64 %127, i64 %135
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %149, label %139

139:                                              ; preds = %119
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  %143 = select i1 %131, i8* %141, i8* %142
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = select i1 %124, i8* %145, i8* %110
  %147 = tail call i32 @memcmp(i8* %143, i8* %146, i64 %137) #16
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %139, %119
  %150 = icmp ult i64 %135, %127
  br i1 %150, label %153, label %230

151:                                              ; preds = %139
  %152 = icmp slt i32 %147, 0
  br i1 %152, label %153, label %230

153:                                              ; preds = %149, %102, %151
  store i32 %115, i32* %5, align 4
  store i32 %114, i32* %7, align 4
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %155 = bitcast %"class.std::__1::basic_string"* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %110, i64 24, i1 false) #16
  %160 = bitcast %"class.std::__1::basic_string"* %103 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %160, align 8
  store i64 %158, i64* %108, align 8
  br label %230

161:                                              ; preds = %99
  br i1 %100, label %162, label %173

162:                                              ; preds = %161
  store i32 %55, i32* %5, align 4
  store i32 %6, i32* %54, align 4
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %165 = bitcast %"class.std::__1::basic_string"* %163 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.std::__1::basic_string"* %163 to i8*
  %170 = bitcast %"class.std::__1::basic_string"* %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 24, i1 false) #16
  %171 = bitcast %"class.std::__1::basic_string"* %164 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %171, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %168, i64* %172, align 8
  br label %230

173:                                              ; preds = %161
  store i32 %8, i32* %5, align 4
  store i32 %6, i32* %7, align 4
  %174 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %175 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %176 = bitcast %"class.std::__1::basic_string"* %174 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::basic_string"* %174 to i8*
  %183 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 24, i1 false) #16
  %184 = bitcast %"class.std::__1::basic_string"* %175 to i64*
  store i64 %177, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %179, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %181, i64* %186, align 8
  %187 = load i32, i32* %7, align 8
  %188 = load i32, i32* %54, align 8
  %189 = icmp slt i32 %187, %188
  %190 = lshr i64 %181, 56
  %191 = trunc i64 %190 to i8
  %192 = inttoptr i64 %177 to i8*
  br i1 %189, label %222, label %193

193:                                              ; preds = %173
  %194 = icmp slt i32 %188, %187
  br i1 %194, label %230, label %195

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %197 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = zext i8 %199 to i64
  %204 = select i1 %200, i64 %202, i64 %203
  %205 = icmp slt i8 %191, 0
  %206 = select i1 %205, i64 %179, i64 %190
  %207 = icmp ult i64 %204, %206
  %208 = select i1 %207, i64 %204, i64 %206
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %218, label %210

210:                                              ; preds = %195
  %211 = select i1 %205, i8* %192, i8* %183
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  %215 = select i1 %200, i8* %213, i8* %214
  %216 = tail call i32 @memcmp(i8* %211, i8* %215, i64 %208) #16
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %210, %195
  %219 = icmp ult i64 %206, %204
  br i1 %219, label %222, label %230

220:                                              ; preds = %210
  %221 = icmp slt i32 %216, 0
  br i1 %221, label %222, label %230

222:                                              ; preds = %218, %173, %220
  store i32 %188, i32* %7, align 4
  store i32 %187, i32* %54, align 4
  %223 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %224 = bitcast %"class.std::__1::basic_string"* %175 to <2 x i64>*
  %225 = load <2 x i64>, <2 x i64>* %224, align 8
  %226 = load i64, i64* %186, align 8
  %227 = bitcast %"class.std::__1::basic_string"* %223 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %227, i64 24, i1 false) #16
  %228 = bitcast %"class.std::__1::basic_string"* %223 to <2 x i64>*
  store <2 x i64> %225, <2 x i64>* %228, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %226, i64* %229, align 8
  br label %230

230:                                              ; preds = %218, %193, %149, %117, %220, %222, %151, %153, %101, %162
  %231 = phi i32 [ 1, %162 ], [ 0, %101 ], [ 2, %153 ], [ 1, %151 ], [ 2, %222 ], [ 1, %220 ], [ 1, %117 ], [ 1, %149 ], [ 1, %193 ], [ 1, %218 ]
  ret i32 %231
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::greater"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2, %"struct.std::__1::greater"* dereferenceable(1) %4)
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %51, label %12

12:                                               ; preds = %5
  %13 = icmp slt i32 %10, %8
  br i1 %13, label %163, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp ult i64 %24, %32
  %34 = select i1 %33, i64 %24, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %14
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %40 = select i1 %28, i8* %38, i8* %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %44 = select i1 %20, i8* %42, i8* %43
  %45 = tail call i32 @memcmp(i8* %40, i8* %44, i64 %34) #16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %36, %14
  %48 = icmp ult i64 %32, %24
  br i1 %48, label %51, label %163

49:                                               ; preds = %36
  %50 = icmp slt i32 %45, 0
  br i1 %50, label %51, label %163

51:                                               ; preds = %47, %5, %49
  store i32 %10, i32* %7, align 4
  store i32 %8, i32* %9, align 4
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %52 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #16
  %61 = bitcast %"class.std::__1::basic_string"* %53 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %58, i64* %62, align 8
  %63 = add i32 %6, 1
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = load i32, i32* %7, align 8
  %67 = icmp slt i32 %65, %66
  br i1 %67, label %104, label %68

68:                                               ; preds = %51
  %69 = icmp slt i32 %66, %65
  br i1 %69, label %163, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = load i64, i64* %54, align 8
  %77 = zext i8 %74 to i64
  %78 = select i1 %75, i64 %76, i64 %77
  %79 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i64 %84, i64 %85
  %87 = icmp ult i64 %78, %86
  %88 = select i1 %87, i64 %78, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %70
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %94 = select i1 %82, i8* %92, i8* %93
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = select i1 %75, i8* %96, i8* %59
  %98 = tail call i32 @memcmp(i8* %94, i8* %97, i64 %88) #16
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %90, %70
  %101 = icmp ult i64 %86, %78
  br i1 %101, label %104, label %163

102:                                              ; preds = %90
  %103 = icmp slt i32 %98, 0
  br i1 %103, label %104, label %163

104:                                              ; preds = %100, %51, %102
  store i32 %66, i32* %64, align 4
  store i32 %65, i32* %7, align 4
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = bitcast %"class.std::__1::basic_string"* %105 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %59, i64 24, i1 false) #16
  %112 = bitcast %"class.std::__1::basic_string"* %52 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8
  store i64 %110, i64* %57, align 8
  %113 = add i32 %6, 2
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = load i32, i32* %64, align 8
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %154, label %118

118:                                              ; preds = %104
  %119 = icmp slt i32 %116, %115
  br i1 %119, label %163, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %122 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  %126 = load i64, i64* %106, align 8
  %127 = zext i8 %124 to i64
  %128 = select i1 %125, i64 %126, i64 %127
  %129 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = zext i8 %131 to i64
  %136 = select i1 %132, i64 %134, i64 %135
  %137 = icmp ult i64 %128, %136
  %138 = select i1 %137, i64 %128, i64 %136
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %150, label %140

140:                                              ; preds = %120
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  %144 = select i1 %132, i8* %142, i8* %143
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = select i1 %125, i8* %146, i8* %111
  %148 = tail call i32 @memcmp(i8* %144, i8* %147, i64 %138) #16
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %140, %120
  %151 = icmp ult i64 %136, %128
  br i1 %151, label %154, label %163

152:                                              ; preds = %140
  %153 = icmp slt i32 %148, 0
  br i1 %153, label %154, label %163

154:                                              ; preds = %150, %104, %152
  store i32 %116, i32* %114, align 4
  store i32 %115, i32* %64, align 4
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %156 = bitcast %"class.std::__1::basic_string"* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.std::__1::basic_string"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %111, i64 24, i1 false) #16
  %161 = bitcast %"class.std::__1::basic_string"* %105 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %161, align 8
  store i64 %159, i64* %109, align 8
  %162 = add i32 %6, 3
  br label %163

163:                                              ; preds = %150, %118, %100, %68, %47, %12, %102, %154, %152, %49
  %164 = phi i32 [ %162, %154 ], [ %113, %152 ], [ %63, %102 ], [ %6, %49 ], [ %6, %12 ], [ %6, %47 ], [ %63, %68 ], [ %63, %100 ], [ %113, %118 ], [ %113, %150 ]
  ret i32 %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_SD_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::greater"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2, %"struct.std::__1::pair"* %3, %"struct.std::__1::greater"* dereferenceable(1) %5)
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %9, %11
  br i1 %12, label %52, label %13

13:                                               ; preds = %6
  %14 = icmp slt i32 %11, %9
  br i1 %14, label %214, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %25, %33
  %35 = select i1 %34, i64 %25, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %15
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %45 = select i1 %21, i8* %43, i8* %44
  %46 = tail call i32 @memcmp(i8* %41, i8* %45, i64 %35) #16
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %37, %15
  %49 = icmp ult i64 %33, %25
  br i1 %49, label %52, label %214

50:                                               ; preds = %37
  %51 = icmp slt i32 %46, 0
  br i1 %51, label %52, label %214

52:                                               ; preds = %48, %6, %50
  store i32 %11, i32* %8, align 4
  store i32 %9, i32* %10, align 4
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %53 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #16
  %62 = bitcast %"class.std::__1::basic_string"* %54 to <2 x i64>*
  store <2 x i64> %57, <2 x i64>* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %59, i64* %63, align 8
  %64 = add i32 %7, 1
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = load i32, i32* %8, align 8
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %105, label %69

69:                                               ; preds = %52
  %70 = icmp slt i32 %67, %66
  br i1 %70, label %214, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %73 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i64, i64* %55, align 8
  %78 = zext i8 %75 to i64
  %79 = select i1 %76, i64 %77, i64 %78
  %80 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %82 to i64
  %87 = select i1 %83, i64 %85, i64 %86
  %88 = icmp ult i64 %79, %87
  %89 = select i1 %88, i64 %79, i64 %87
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %71
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %95 = select i1 %83, i8* %93, i8* %94
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = select i1 %76, i8* %97, i8* %60
  %99 = tail call i32 @memcmp(i8* %95, i8* %98, i64 %89) #16
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %91, %71
  %102 = icmp ult i64 %87, %79
  br i1 %102, label %105, label %214

103:                                              ; preds = %91
  %104 = icmp slt i32 %99, 0
  br i1 %104, label %105, label %214

105:                                              ; preds = %101, %52, %103
  store i32 %67, i32* %65, align 4
  store i32 %66, i32* %8, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = bitcast %"class.std::__1::basic_string"* %106 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %60, i64 24, i1 false) #16
  %113 = bitcast %"class.std::__1::basic_string"* %53 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %113, align 8
  store i64 %111, i64* %58, align 8
  %114 = add i32 %7, 2
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = load i32, i32* %65, align 8
  %118 = icmp slt i32 %116, %117
  br i1 %118, label %155, label %119

119:                                              ; preds = %105
  %120 = icmp slt i32 %117, %116
  br i1 %120, label %214, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %123 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = load i64, i64* %107, align 8
  %128 = zext i8 %125 to i64
  %129 = select i1 %126, i64 %127, i64 %128
  %130 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = zext i8 %132 to i64
  %137 = select i1 %133, i64 %135, i64 %136
  %138 = icmp ult i64 %129, %137
  %139 = select i1 %138, i64 %129, i64 %137
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %121
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  %145 = select i1 %133, i8* %143, i8* %144
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = select i1 %126, i8* %147, i8* %112
  %149 = tail call i32 @memcmp(i8* %145, i8* %148, i64 %139) #16
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %141, %121
  %152 = icmp ult i64 %137, %129
  br i1 %152, label %155, label %214

153:                                              ; preds = %141
  %154 = icmp slt i32 %149, 0
  br i1 %154, label %155, label %214

155:                                              ; preds = %151, %105, %153
  store i32 %117, i32* %115, align 4
  store i32 %116, i32* %65, align 4
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %158 = bitcast %"class.std::__1::basic_string"* %156 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.std::__1::basic_string"* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 %112, i64 24, i1 false) #16
  %163 = bitcast %"class.std::__1::basic_string"* %106 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %163, align 8
  store i64 %161, i64* %110, align 8
  %164 = add i32 %7, 3
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = load i32, i32* %115, align 8
  %168 = icmp slt i32 %166, %167
  br i1 %168, label %205, label %169

169:                                              ; preds = %155
  %170 = icmp slt i32 %167, %166
  br i1 %170, label %214, label %171

171:                                              ; preds = %169
  %172 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %173 = bitcast %"class.std::__1::basic_string"* %156 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  %177 = load i64, i64* %157, align 8
  %178 = zext i8 %175 to i64
  %179 = select i1 %176, i64 %177, i64 %178
  %180 = bitcast %"class.std::__1::basic_string"* %172 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  %184 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = zext i8 %182 to i64
  %187 = select i1 %183, i64 %185, i64 %186
  %188 = icmp ult i64 %179, %187
  %189 = select i1 %188, i64 %179, i64 %187
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %201, label %191

191:                                              ; preds = %171
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = bitcast %"class.std::__1::basic_string"* %172 to i8*
  %195 = select i1 %183, i8* %193, i8* %194
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = select i1 %176, i8* %197, i8* %162
  %199 = tail call i32 @memcmp(i8* %195, i8* %198, i64 %189) #16
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %191, %171
  %202 = icmp ult i64 %187, %179
  br i1 %202, label %205, label %214

203:                                              ; preds = %191
  %204 = icmp slt i32 %199, 0
  br i1 %204, label %205, label %214

205:                                              ; preds = %201, %155, %203
  store i32 %167, i32* %165, align 4
  store i32 %166, i32* %115, align 4
  %206 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %207 = bitcast %"class.std::__1::basic_string"* %206 to <2 x i64>*
  %208 = load <2 x i64>, <2 x i64>* %207, align 8
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.std::__1::basic_string"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %162, i64 24, i1 false) #16
  %212 = bitcast %"class.std::__1::basic_string"* %156 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %212, align 8
  store i64 %210, i64* %160, align 8
  %213 = add i32 %7, 4
  br label %214

214:                                              ; preds = %201, %169, %151, %119, %101, %69, %48, %13, %103, %203, %205, %153, %50
  %215 = phi i32 [ %213, %205 ], [ %164, %203 ], [ %114, %153 ], [ %64, %103 ], [ %7, %50 ], [ %7, %13 ], [ %7, %48 ], [ %64, %69 ], [ %64, %101 ], [ %114, %119 ], [ %114, %151 ], [ %164, %169 ], [ %164, %201 ]
  ret i32 %215
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEvT0_SD_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::greater"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %6 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %7 = tail call i32 @_ZNSt3__17__sort3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %6, %"struct.std::__1::pair"* %5, %"struct.std::__1::greater"* dereferenceable(1) %2)
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %9 = icmp eq %"struct.std::__1::pair"* %8, %1
  br i1 %9, label %20, label %10

10:                                               ; preds = %3
  %11 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::pair"* %4 to i64*
  br label %21

20:                                               ; preds = %139, %3
  ret void

21:                                               ; preds = %10, %139
  %22 = phi %"struct.std::__1::pair"* [ %8, %10 ], [ %140, %139 ]
  %23 = phi %"struct.std::__1::pair"* [ %5, %10 ], [ %22, %139 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %68, label %29

29:                                               ; preds = %21
  %30 = icmp slt i32 %27, %25
  br i1 %30, label %139, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %44 to i64
  %49 = select i1 %45, i64 %47, i64 %48
  %50 = icmp ult i64 %41, %49
  %51 = select i1 %50, i64 %41, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %31
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %57 = select i1 %45, i8* %55, i8* %56
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %61 = select i1 %37, i8* %59, i8* %60
  %62 = tail call i32 @memcmp(i8* %57, i8* %61, i64 %51) #16
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %53, %31
  %65 = icmp ult i64 %49, %41
  br i1 %65, label %68, label %139

66:                                               ; preds = %53
  %67 = icmp slt i32 %62, 0
  br i1 %67, label %68, label %139

68:                                               ; preds = %64, %21, %66
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #16
  store i64 -6148914691236517206, i64* %19, align 8
  store i32 %27, i32* %12, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 1
  %70 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %70, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #16
  %71 = load i32, i32* %24, align 4
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 1
  %75 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %76 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false) #16
  %77 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  store i8 0, i8* %78, align 1
  store i8 0, i8* %76, align 1
  %79 = icmp eq %"struct.std::__1::pair"* %23, %0
  br i1 %79, label %80, label %83

80:                                               ; preds = %124, %68
  %81 = phi %"class.std::__1::basic_string"* [ %73, %68 ], [ %126, %124 ]
  %82 = load i32, i32* %12, align 8
  br label %133

83:                                               ; preds = %68, %124
  %84 = phi %"class.std::__1::basic_string"* [ %126, %124 ], [ %73, %68 ]
  %85 = phi %"struct.std::__1::pair"* [ %86, %124 ], [ %23, %68 ]
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 -1
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = load i32, i32* %12, align 8
  %90 = icmp slt i32 %88, %89
  br i1 %90, label %124, label %91

91:                                               ; preds = %83
  %92 = icmp slt i32 %89, %88
  br i1 %92, label %133, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 -1, i32 1
  %95 = load i8, i8* %16, align 1
  %96 = icmp slt i8 %95, 0
  %97 = load i64, i64* %17, align 8
  %98 = zext i8 %95 to i64
  %99 = select i1 %96, i64 %97, i64 %98
  %100 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %102 to i64
  %107 = select i1 %103, i64 %105, i64 %106
  %108 = icmp ult i64 %99, %107
  %109 = select i1 %108, i64 %99, i64 %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %120, label %111

111:                                              ; preds = %93
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %115 = select i1 %103, i8* %113, i8* %114
  %116 = load i8*, i8** %18, align 8
  %117 = select i1 %96, i8* %116, i8* %14
  %118 = call i32 @memcmp(i8* %115, i8* %117, i64 %109) #16
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %111, %93
  %121 = icmp ult i64 %107, %99
  br i1 %121, label %124, label %133

122:                                              ; preds = %111
  %123 = icmp slt i32 %118, 0
  br i1 %123, label %124, label %133

124:                                              ; preds = %120, %122, %83
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 0
  store i32 %88, i32* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 -1, i32 1
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 1
  %128 = bitcast %"class.std::__1::basic_string"* %127 to i8*
  %129 = bitcast %"class.std::__1::basic_string"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 24, i1 false) #16
  %130 = bitcast %"class.std::__1::basic_string"* %126 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  store i8 0, i8* %131, align 1
  store i8 0, i8* %129, align 1
  %132 = icmp eq %"struct.std::__1::pair"* %86, %0
  br i1 %132, label %80, label %83

133:                                              ; preds = %120, %91, %122, %80
  %134 = phi %"class.std::__1::basic_string"* [ %81, %80 ], [ %84, %122 ], [ %84, %91 ], [ %84, %120 ]
  %135 = phi i32 [ %82, %80 ], [ %89, %122 ], [ %89, %91 ], [ %89, %120 ]
  %136 = phi %"struct.std::__1::pair"* [ %0, %80 ], [ %85, %122 ], [ %85, %91 ], [ %85, %120 ]
  %137 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %136, i64 0, i32 0
  store i32 %135, i32* %138, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %14, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #16
  br label %139

139:                                              ; preds = %64, %29, %133, %66
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1
  %141 = icmp eq %"struct.std::__1::pair"* %140, %1
  br i1 %141, label %20, label %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEbT0_SD_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::greater"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = ptrtoint %"struct.std::__1::pair"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = ashr exact i64 %7, 5
  switch i64 %8, label %80 [
    i64 0, label %224
    i64 1, label %224
    i64 2, label %9
    i64 3, label %65
    i64 4, label %69
    i64 5, label %74
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %11, %13
  br i1 %14, label %54, label %15

15:                                               ; preds = %9
  %16 = icmp slt i32 %13, %11
  br i1 %16, label %224, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %30 to i64
  %35 = select i1 %31, i64 %33, i64 %34
  %36 = icmp ult i64 %27, %35
  %37 = select i1 %36, i64 %27, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %50, label %39

39:                                               ; preds = %17
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %43 = select i1 %31, i8* %41, i8* %42
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %47 = select i1 %23, i8* %45, i8* %46
  %48 = tail call i32 @memcmp(i8* %43, i8* %47, i64 %37) #16
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %39, %17
  %51 = icmp ult i64 %35, %27
  br i1 %51, label %54, label %224

52:                                               ; preds = %39
  %53 = icmp slt i32 %48, 0
  br i1 %53, label %54, label %224

54:                                               ; preds = %50, %9, %52
  store i32 %13, i32* %10, align 4
  store i32 %11, i32* %12, align 4
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %55 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #16
  %63 = bitcast %"class.std::__1::basic_string"* %56 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %63, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %60, i64* %64, align 8
  br label %224

65:                                               ; preds = %3
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %68 = tail call i32 @_ZNSt3__17__sort3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %66, %"struct.std::__1::pair"* %67, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %224

69:                                               ; preds = %3
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %73 = tail call i32 @_ZNSt3__17__sort4IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %70, %"struct.std::__1::pair"* %71, %"struct.std::__1::pair"* %72, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %224

74:                                               ; preds = %3
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort5IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_SD_SD_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %75, %"struct.std::__1::pair"* %76, %"struct.std::__1::pair"* %77, %"struct.std::__1::pair"* %78, %"struct.std::__1::greater"* dereferenceable(1) %2)
  br label %224

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %83 = tail call i32 @_ZNSt3__17__sort3IRNS_7greaterIvEEPNS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEEjT0_SD_SD_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %82, %"struct.std::__1::pair"* %81, %"struct.std::__1::greater"* dereferenceable(1) %2)
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %85 = icmp eq %"struct.std::__1::pair"* %84, %1
  br i1 %85, label %224, label %86

86:                                               ; preds = %80
  %87 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %90 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %91 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = bitcast %"struct.std::__1::pair"* %4 to i64*
  br label %96

96:                                               ; preds = %86, %217
  %97 = phi %"struct.std::__1::pair"* [ %84, %86 ], [ %219, %217 ]
  %98 = phi i32 [ 0, %86 ], [ %218, %217 ]
  %99 = phi %"struct.std::__1::pair"* [ %81, %86 ], [ %97, %217 ]
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = icmp slt i32 %101, %103
  br i1 %104, label %144, label %105

105:                                              ; preds = %96
  %106 = icmp slt i32 %103, %101
  br i1 %106, label %217, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 1
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = zext i8 %112 to i64
  %117 = select i1 %113, i64 %115, i64 %116
  %118 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = zext i8 %120 to i64
  %125 = select i1 %121, i64 %123, i64 %124
  %126 = icmp ult i64 %117, %125
  %127 = select i1 %126, i64 %117, i64 %125
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %140, label %129

129:                                              ; preds = %107
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  %133 = select i1 %121, i8* %131, i8* %132
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %137 = select i1 %113, i8* %135, i8* %136
  %138 = tail call i32 @memcmp(i8* %133, i8* %137, i64 %127) #16
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %129, %107
  %141 = icmp ult i64 %125, %117
  br i1 %141, label %144, label %217

142:                                              ; preds = %129
  %143 = icmp slt i32 %138, 0
  br i1 %143, label %144, label %217

144:                                              ; preds = %140, %96, %142
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %87) #16
  store i64 -6148914691236517206, i64* %95, align 8
  store i32 %103, i32* %88, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1
  %146 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %146, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 24, i1 false) #16
  %147 = load i32, i32* %100, align 4
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0
  store i32 %147, i32* %148, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 1
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1
  %151 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  %152 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 24, i1 false) #16
  %153 = bitcast %"class.std::__1::basic_string"* %149 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  store i8 0, i8* %154, align 1
  store i8 0, i8* %152, align 1
  %155 = icmp eq %"struct.std::__1::pair"* %99, %0
  br i1 %155, label %156, label %159

156:                                              ; preds = %200, %144
  %157 = phi %"class.std::__1::basic_string"* [ %149, %144 ], [ %202, %200 ]
  %158 = load i32, i32* %88, align 8
  br label %209

159:                                              ; preds = %144, %200
  %160 = phi %"class.std::__1::basic_string"* [ %202, %200 ], [ %149, %144 ]
  %161 = phi %"struct.std::__1::pair"* [ %162, %200 ], [ %99, %144 ]
  %162 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 -1
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 8
  %165 = load i32, i32* %88, align 8
  %166 = icmp slt i32 %164, %165
  br i1 %166, label %200, label %167

167:                                              ; preds = %159
  %168 = icmp slt i32 %165, %164
  br i1 %168, label %209, label %169

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 -1, i32 1
  %171 = load i8, i8* %92, align 1
  %172 = icmp slt i8 %171, 0
  %173 = load i64, i64* %93, align 8
  %174 = zext i8 %171 to i64
  %175 = select i1 %172, i64 %173, i64 %174
  %176 = bitcast %"class.std::__1::basic_string"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = zext i8 %178 to i64
  %183 = select i1 %179, i64 %181, i64 %182
  %184 = icmp ult i64 %175, %183
  %185 = select i1 %184, i64 %175, i64 %183
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %169
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::basic_string"* %170 to i8*
  %191 = select i1 %179, i8* %189, i8* %190
  %192 = load i8*, i8** %94, align 8
  %193 = select i1 %172, i8* %192, i8* %90
  %194 = call i32 @memcmp(i8* %191, i8* %193, i64 %185) #16
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %187, %169
  %197 = icmp ult i64 %183, %175
  br i1 %197, label %200, label %209

198:                                              ; preds = %187
  %199 = icmp slt i32 %194, 0
  br i1 %199, label %200, label %209

200:                                              ; preds = %196, %198, %159
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 0, i32 0
  store i32 %164, i32* %201, align 8
  %202 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 -1, i32 1
  %203 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 0, i32 1
  %204 = bitcast %"class.std::__1::basic_string"* %203 to i8*
  %205 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %205, i64 24, i1 false) #16
  %206 = bitcast %"class.std::__1::basic_string"* %202 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  store i8 0, i8* %207, align 1
  store i8 0, i8* %205, align 1
  %208 = icmp eq %"struct.std::__1::pair"* %162, %0
  br i1 %208, label %156, label %159

209:                                              ; preds = %196, %167, %198, %156
  %210 = phi %"class.std::__1::basic_string"* [ %157, %156 ], [ %160, %198 ], [ %160, %167 ], [ %160, %196 ]
  %211 = phi i32 [ %158, %156 ], [ %165, %198 ], [ %165, %167 ], [ %165, %196 ]
  %212 = phi %"struct.std::__1::pair"* [ %0, %156 ], [ %161, %198 ], [ %161, %167 ], [ %161, %196 ]
  %213 = bitcast %"class.std::__1::basic_string"* %210 to i8*
  %214 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %212, i64 0, i32 0
  store i32 %211, i32* %214, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* align 8 %90, i64 24, i1 false) #16
  %215 = add i32 %98, 1
  %216 = icmp eq i32 %215, 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %87) #16
  br i1 %216, label %221, label %217

217:                                              ; preds = %209, %140, %105, %142
  %218 = phi i32 [ %215, %209 ], [ %98, %142 ], [ %98, %105 ], [ %98, %140 ]
  %219 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 1
  %220 = icmp eq %"struct.std::__1::pair"* %219, %1
  br i1 %220, label %224, label %96

221:                                              ; preds = %209
  %222 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 1
  %223 = icmp eq %"struct.std::__1::pair"* %222, %1
  br label %224

224:                                              ; preds = %217, %221, %80, %50, %15, %52, %54, %3, %3, %74, %69, %65
  %225 = phi i1 [ true, %74 ], [ true, %69 ], [ true, %65 ], [ true, %3 ], [ true, %3 ], [ true, %54 ], [ true, %52 ], [ true, %15 ], [ true, %50 ], [ true, %80 ], [ %223, %221 ], [ true, %217 ]
  ret i1 %225
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE8__appendEm(%"class.std::__1::vector.24"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %67, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.std::__1::pair"*
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %12
  %17 = shl nsw i64 %1, 5
  %18 = add i64 %17, -32
  %19 = lshr exact i64 %18, 5
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"struct.std::__1::pair"* [ %29, %23 ], [ %13, %16 ]
  %25 = phi i64 [ %30, %23 ], [ %21, %16 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #16
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %23, !llvm.loop !16

32:                                               ; preds = %23, %16
  %33 = phi %"struct.std::__1::pair"* [ %13, %16 ], [ %29, %23 ]
  %34 = icmp ult i64 %18, 224
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  br label %65

37:                                               ; preds = %32, %37
  %38 = phi %"struct.std::__1::pair"* [ %63, %37 ], [ %33, %32 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 0
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #16
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 1, i32 0
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 1, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #16
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 2, i32 0
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 2, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #16
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 3, i32 0
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 3, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #16
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 4, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 4, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #16
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 5, i32 0
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 5, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #16
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 6, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 6, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #16
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 7, i32 0
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 7, i32 1
  %62 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #16
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 8
  %64 = icmp eq %"struct.std::__1::pair"* %63, %14
  br i1 %64, label %35, label %37

65:                                               ; preds = %12, %35
  %66 = phi i64 [ %36, %35 ], [ %8, %12 ]
  store i64 %66, i64* %7, align 8
  br label %222

67:                                               ; preds = %2
  %68 = bitcast %"class.std::__1::vector.24"* %0 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %8, %69
  %71 = ashr exact i64 %70, 5
  %72 = add i64 %71, %1
  %73 = icmp ugt i64 %72, 576460752303423487
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.24"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #17
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %5, %69
  %78 = ashr exact i64 %77, 5
  %79 = icmp ult i64 %78, 288230376151711743
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = ashr exact i64 %77, 4
  %82 = icmp ult i64 %81, %72
  %83 = select i1 %82, i64 %72, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 576460752303423487
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call void @abort() #17
  unreachable

88:                                               ; preds = %76, %85
  %89 = phi i64 [ %83, %85 ], [ 576460752303423487, %76 ]
  %90 = shl i64 %89, 5
  %91 = tail call i8* @_Znwm(i64 %90) #15
  %92 = bitcast i8* %91 to %"struct.std::__1::pair"*
  br label %93

93:                                               ; preds = %80, %88
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"struct.std::__1::pair"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 %71
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 %94
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 %1
  %99 = shl nsw i64 %1, 5
  %100 = add i64 %99, -32
  %101 = lshr exact i64 %100, 5
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 7
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %114, label %105

105:                                              ; preds = %93, %105
  %106 = phi %"struct.std::__1::pair"* [ %111, %105 ], [ %96, %93 ]
  %107 = phi i64 [ %112, %105 ], [ %103, %93 ]
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 0, i32 0
  store i32 0, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 0, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #16
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 1
  %112 = add i64 %107, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %105, !llvm.loop !17

114:                                              ; preds = %105, %93
  %115 = phi %"struct.std::__1::pair"* [ %96, %93 ], [ %111, %105 ]
  %116 = icmp ult i64 %100, 224
  br i1 %116, label %145, label %117

117:                                              ; preds = %114, %117
  %118 = phi %"struct.std::__1::pair"* [ %143, %117 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 0, i32 0
  store i32 0, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 0, i32 1
  %121 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #16
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 1, i32 0
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 1, i32 1
  %124 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #16
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 2, i32 0
  store i32 0, i32* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 2, i32 1
  %127 = bitcast %"class.std::__1::basic_string"* %126 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #16
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 3, i32 0
  store i32 0, i32* %128, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 3, i32 1
  %130 = bitcast %"class.std::__1::basic_string"* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #16
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 4, i32 0
  store i32 0, i32* %131, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 4, i32 1
  %133 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #16
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 5, i32 0
  store i32 0, i32* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 5, i32 1
  %136 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #16
  %137 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 6, i32 0
  store i32 0, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 6, i32 1
  %139 = bitcast %"class.std::__1::basic_string"* %138 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #16
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 7, i32 0
  store i32 0, i32* %140, align 8
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 7, i32 1
  %142 = bitcast %"class.std::__1::basic_string"* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #16
  %143 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 8
  %144 = icmp eq %"struct.std::__1::pair"* %98, %143
  br i1 %144, label %145, label %117

145:                                              ; preds = %117, %114
  %146 = ptrtoint %"struct.std::__1::pair"* %97 to i64
  %147 = ptrtoint %"struct.std::__1::pair"* %98 to i64
  %148 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 0
  %149 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %150 = ptrtoint %"struct.std::__1::pair"* %149 to i64
  %151 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %152 = icmp eq %"struct.std::__1::pair"* %151, %149
  br i1 %152, label %198, label %153

153:                                              ; preds = %145
  %154 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1, i32 0
  %155 = ptrtoint i32* %154 to i64
  %156 = sub i64 %155, %150
  %157 = and i64 %156, 32
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %169

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1
  %161 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 -1, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %160, i64 0, i32 0
  %163 = load i32, i32* %162, align 8
  store i32 %163, i32* %161, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 -1, i32 1
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1, i32 1
  %166 = bitcast %"class.std::__1::basic_string"* %164 to i8*
  %167 = bitcast %"class.std::__1::basic_string"* %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #16
  %168 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 -1
  br label %169

169:                                              ; preds = %159, %153
  %170 = phi %"struct.std::__1::pair"* [ undef, %153 ], [ %168, %159 ]
  %171 = phi %"struct.std::__1::pair"* [ %96, %153 ], [ %168, %159 ]
  %172 = phi %"struct.std::__1::pair"* [ %151, %153 ], [ %160, %159 ]
  %173 = icmp ult i64 %156, 32
  br i1 %173, label %194, label %174

174:                                              ; preds = %169, %174
  %175 = phi %"struct.std::__1::pair"* [ %192, %174 ], [ %171, %169 ]
  %176 = phi %"struct.std::__1::pair"* [ %184, %174 ], [ %172, %169 ]
  %177 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 -1, i32 0
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -1, i32 0
  %179 = load i32, i32* %178, align 8
  store i32 %179, i32* %177, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 -1, i32 1
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -1, i32 1
  %182 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  %183 = bitcast %"class.std::__1::basic_string"* %181 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 24, i1 false) #16
  %184 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -2
  %185 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 -2, i32 0
  %186 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 0, i32 0
  %187 = load i32, i32* %186, align 8
  store i32 %187, i32* %185, align 8
  %188 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 -2, i32 1
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -2, i32 1
  %190 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  %191 = bitcast %"class.std::__1::basic_string"* %189 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 8 %191, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #16
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 -2
  %193 = icmp eq %"struct.std::__1::pair"* %184, %149
  br i1 %193, label %194, label %174

194:                                              ; preds = %174, %169
  %195 = phi %"struct.std::__1::pair"* [ %170, %169 ], [ %192, %174 ]
  %196 = load i64, i64* %68, align 8
  %197 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  br label %198

198:                                              ; preds = %145, %194
  %199 = phi %"struct.std::__1::pair"* [ %197, %194 ], [ %149, %145 ]
  %200 = phi %"struct.std::__1::pair"* [ %195, %194 ], [ %96, %145 ]
  %201 = phi i64 [ %196, %194 ], [ %150, %145 ]
  %202 = ptrtoint %"struct.std::__1::pair"* %200 to i64
  store i64 %202, i64* %68, align 8
  store i64 %147, i64* %7, align 8
  store i64 %146, i64* %4, align 8
  %203 = inttoptr i64 %201 to %"struct.std::__1::pair"*
  %204 = icmp eq %"struct.std::__1::pair"* %199, %203
  br i1 %204, label %218, label %205

205:                                              ; preds = %198, %216
  %206 = phi %"struct.std::__1::pair"* [ %207, %216 ], [ %199, %198 ]
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 -1
  %208 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 -1, i32 1
  %209 = bitcast %"class.std::__1::basic_string"* %208 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %208, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  tail call void @_ZdlPv(i8* %215) #15
  br label %216

216:                                              ; preds = %213, %205
  %217 = icmp eq %"struct.std::__1::pair"* %207, %203
  br i1 %217, label %218, label %205

218:                                              ; preds = %216, %198
  %219 = icmp eq i64 %201, 0
  br i1 %219, label %222, label %220

220:                                              ; preds = %218
  %221 = inttoptr i64 %201 to i8*
  tail call void @_ZdlPv(i8* %221) #15
  br label %222

222:                                              ; preds = %220, %218, %65
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #16
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #16
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #16
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #15
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #15
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui14AXLanguageSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.410"*, %"struct.ui::AXLanguageSpan"* dereferenceable(40)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.410", %"class.std::__1::vector.410"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ui::AXLanguageSpan"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.410"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.410"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.410", %"class.std::__1::vector.410"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ui::AXLanguageSpan"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"struct.ui::AXLanguageSpan"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.ui::AXLanguageSpan"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %33, i64 %32
  %36 = ptrtoint %"struct.ui::AXLanguageSpan"* %35 to i64
  %37 = bitcast %"struct.ui::AXLanguageSpan"* %1 to i64*
  %38 = bitcast %"struct.ui::AXLanguageSpan"* %34 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %33, i64 %9, i32 2
  %41 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #16
  %44 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %33, i64 %9, i32 3
  %45 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 3
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = bitcast float* %44 to i32*
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %34, i64 1
  %50 = ptrtoint %"struct.ui::AXLanguageSpan"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.410", %"class.std::__1::vector.410"* %0, i64 0, i32 0, i32 0
  %52 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %51, align 8
  %53 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %3, align 8
  %54 = icmp eq %"struct.ui::AXLanguageSpan"* %53, %52
  br i1 %54, label %55, label %57

55:                                               ; preds = %31
  %56 = ptrtoint %"struct.ui::AXLanguageSpan"* %52 to i64
  br label %78

57:                                               ; preds = %31, %57
  %58 = phi %"struct.ui::AXLanguageSpan"* [ %60, %57 ], [ %34, %31 ]
  %59 = phi %"struct.ui::AXLanguageSpan"* [ %61, %57 ], [ %53, %31 ]
  %60 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %58, i64 -1
  %61 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %59, i64 -1
  %62 = bitcast %"struct.ui::AXLanguageSpan"* %61 to i64*
  %63 = bitcast %"struct.ui::AXLanguageSpan"* %60 to i64*
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %58, i64 -1, i32 2
  %66 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %59, i64 -1, i32 2
  %67 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #16
  %69 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %58, i64 -1, i32 3
  %70 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %59, i64 -1, i32 3
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = bitcast float* %69 to i32*
  store i32 %72, i32* %73, align 8
  %74 = icmp eq %"struct.ui::AXLanguageSpan"* %61, %52
  br i1 %74, label %75, label %57

75:                                               ; preds = %57
  %76 = load i64, i64* %6, align 8
  %77 = load %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"** %3, align 8
  br label %78

78:                                               ; preds = %55, %75
  %79 = phi %"struct.ui::AXLanguageSpan"* [ %52, %55 ], [ %77, %75 ]
  %80 = phi %"struct.ui::AXLanguageSpan"* [ %34, %55 ], [ %60, %75 ]
  %81 = phi i64 [ %56, %55 ], [ %76, %75 ]
  %82 = ptrtoint %"struct.ui::AXLanguageSpan"* %80 to i64
  store i64 %82, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %83 = inttoptr i64 %81 to %"struct.ui::AXLanguageSpan"*
  %84 = icmp eq %"struct.ui::AXLanguageSpan"* %79, %83
  br i1 %84, label %98, label %85

85:                                               ; preds = %78, %96
  %86 = phi %"struct.ui::AXLanguageSpan"* [ %87, %96 ], [ %79, %78 ]
  %87 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %86, i64 -1
  %88 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %86, i64 -1, i32 2
  %89 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %93, %85
  %97 = icmp eq %"struct.ui::AXLanguageSpan"* %87, %83
  br i1 %97, label %98, label %85

98:                                               ; preds = %96, %78
  %99 = icmp eq i64 %81, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %101) #15
  br label %102

102:                                              ; preds = %98, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEvT0_SD_T_"(%"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %417, %2
  %4 = phi %"struct.ui::AXLanguageSpan"* [ %1, %2 ], [ %369, %417 ]
  %5 = phi %"struct.ui::AXLanguageSpan"* [ %0, %2 ], [ %24, %417 ]
  %6 = ptrtoint %"struct.ui::AXLanguageSpan"* %4 to i64
  %7 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1
  %8 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %7, i64 0, i32 0
  %9 = bitcast %"struct.ui::AXLanguageSpan"* %7 to i64*
  %10 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1, i32 3
  %15 = bitcast float* %14 to i32*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast i8** %17 to <2 x i64>*
  %20 = ptrtoint %"struct.ui::AXLanguageSpan"* %4 to i64
  br label %21

21:                                               ; preds = %428, %3
  %22 = phi %"struct.ui::AXLanguageSpan"* [ %5, %3 ], [ %429, %428 ]
  br label %23

23:                                               ; preds = %236, %21
  %24 = phi %"struct.ui::AXLanguageSpan"* [ %22, %21 ], [ %225, %236 ]
  %25 = ptrtoint %"struct.ui::AXLanguageSpan"* %24 to i64
  %26 = sub i64 %6, %25
  %27 = sdiv exact i64 %26, 40
  switch i64 %27, label %81 [
    i64 0, label %432
    i64 1, label %432
    i64 2, label %28
    i64 3, label %66
    i64 4, label %70
    i64 5, label %75
  ]

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1
  %30 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %31, %33
  br i1 %34, label %432, label %35

35:                                               ; preds = %28
  %36 = bitcast %"struct.ui::AXLanguageSpan"* %24 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 2
  %39 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %40 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast i8** %40 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #16
  %45 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 3
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.ui::AXLanguageSpan"* %29 to i64*
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %36, align 8
  %50 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1, i32 2
  %51 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %51, i64 24, i1 false) #16
  %52 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  store i8 0, i8* %53, align 1
  store i8 0, i8* %51, align 1
  %54 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1, i32 3
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %46, align 8
  store i64 %37, i64* %48, align 8
  %57 = load i8, i8* %53, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %35
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %35, %59
  %63 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast i8** %63 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %64, align 8
  %65 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %44, i64* %65, align 8
  store i32 %47, i32* %55, align 8
  br label %432

66:                                               ; preds = %23
  %67 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 1
  %68 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1
  %69 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %24, %"struct.ui::AXLanguageSpan"* %67, %"struct.ui::AXLanguageSpan"* %68)
  br label %432

70:                                               ; preds = %23
  %71 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 1
  %72 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 2
  %73 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1
  %74 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %24, %"struct.ui::AXLanguageSpan"* %71, %"struct.ui::AXLanguageSpan"* %72, %"struct.ui::AXLanguageSpan"* %73)
  br label %432

75:                                               ; preds = %23
  %76 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 1
  %77 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 2
  %78 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 3
  %79 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 -1
  %80 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %24, %"struct.ui::AXLanguageSpan"* %76, %"struct.ui::AXLanguageSpan"* %77, %"struct.ui::AXLanguageSpan"* %78, %"struct.ui::AXLanguageSpan"* %79)
  br label %432

81:                                               ; preds = %23
  %82 = icmp slt i64 %26, 280
  br i1 %82, label %83, label %160

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 2
  %85 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 1
  %86 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %24, %"struct.ui::AXLanguageSpan"* %85, %"struct.ui::AXLanguageSpan"* %84) #16
  %87 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 3
  %88 = icmp eq %"struct.ui::AXLanguageSpan"* %87, %4
  br i1 %88, label %432, label %89

89:                                               ; preds = %83, %157
  %90 = phi %"struct.ui::AXLanguageSpan"* [ %158, %157 ], [ %87, %83 ]
  %91 = phi %"struct.ui::AXLanguageSpan"* [ %90, %157 ], [ %84, %83 ]
  %92 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %90, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %91, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = icmp sgt i32 %93, %95
  br i1 %96, label %157, label %97

97:                                               ; preds = %89
  %98 = bitcast %"struct.ui::AXLanguageSpan"* %90 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %99 to i32
  %101 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %90, i64 0, i32 2
  %102 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %103 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = bitcast i8** %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8
  %106 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %107 = load i64, i64* %106, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #16
  %108 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %90, i64 0, i32 3
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 8
  br label %111

111:                                              ; preds = %137, %97
  %112 = phi %"struct.ui::AXLanguageSpan"* [ %90, %97 ], [ %113, %137 ]
  %113 = phi %"struct.ui::AXLanguageSpan"* [ %91, %97 ], [ %138, %137 ]
  %114 = bitcast %"struct.ui::AXLanguageSpan"* %113 to i64*
  %115 = bitcast %"struct.ui::AXLanguageSpan"* %112 to i64*
  %116 = load i64, i64* %114, align 8
  store i64 %116, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %112, i64 0, i32 2
  %118 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %113, i64 0, i32 2
  %119 = bitcast %"class.std::__1::basic_string"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %111
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  tail call void @_ZdlPv(i8* %125) #15
  br label %126

126:                                              ; preds = %123, %111
  %127 = bitcast %"class.std::__1::basic_string"* %117 to i8*
  %128 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 24, i1 false) #16
  %129 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  store i8 0, i8* %130, align 1
  store i8 0, i8* %128, align 1
  %131 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %113, i64 0, i32 3
  %132 = bitcast float* %131 to i32*
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %112, i64 0, i32 3
  %135 = bitcast float* %134 to i32*
  store i32 %133, i32* %135, align 8
  %136 = icmp eq %"struct.ui::AXLanguageSpan"* %113, %24
  br i1 %136, label %142, label %137

137:                                              ; preds = %126
  %138 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %113, i64 -1
  %139 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %138, i64 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp slt i32 %140, %100
  br i1 %141, label %142, label %111

142:                                              ; preds = %137, %126
  %143 = phi %"struct.ui::AXLanguageSpan"* [ %24, %126 ], [ %113, %137 ]
  %144 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = bitcast %"struct.ui::AXLanguageSpan"* %143 to i64*
  %146 = bitcast float* %131 to i32*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  store i64 %99, i64* %145, align 8
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  tail call void @_ZdlPv(i8* %152) #15
  br label %153

153:                                              ; preds = %150, %142
  %154 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = bitcast i8** %154 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %155, align 8
  %156 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %156, align 8
  store i32 %110, i32* %146, align 8
  br label %157

157:                                              ; preds = %153, %89
  %158 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %90, i64 1
  %159 = icmp eq %"struct.ui::AXLanguageSpan"* %158, %4
  br i1 %159, label %432, label %89

160:                                              ; preds = %81
  %161 = icmp sgt i64 %26, 39960
  %162 = udiv i64 %26, 80
  %163 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 %162
  br i1 %161, label %164, label %169

164:                                              ; preds = %160
  %165 = udiv i64 %26, 160
  %166 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 %165
  %167 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %163, i64 %165
  %168 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %24, %"struct.ui::AXLanguageSpan"* %166, %"struct.ui::AXLanguageSpan"* %163, %"struct.ui::AXLanguageSpan"* %167, %"struct.ui::AXLanguageSpan"* %7)
  br label %171

169:                                              ; preds = %160
  %170 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %24, %"struct.ui::AXLanguageSpan"* %163, %"struct.ui::AXLanguageSpan"* %7)
  br label %171

171:                                              ; preds = %169, %164
  %172 = phi i32 [ %168, %164 ], [ %170, %169 ]
  %173 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %163, i64 0, i32 0
  %176 = load i32, i32* %175, align 8
  %177 = icmp sgt i32 %174, %176
  br i1 %177, label %178, label %305

178:                                              ; preds = %171, %269
  %179 = phi %"struct.ui::AXLanguageSpan"* [ %180, %269 ], [ %7, %171 ]
  %180 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %179, i64 -1
  %181 = icmp eq %"struct.ui::AXLanguageSpan"* %24, %180
  br i1 %181, label %182, label %269

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 1
  %184 = load i32, i32* %8, align 8
  %185 = icmp sgt i32 %174, %184
  br i1 %185, label %186, label %217

186:                                              ; preds = %182
  %187 = icmp eq %"struct.ui::AXLanguageSpan"* %183, %7
  br i1 %187, label %432, label %188

188:                                              ; preds = %186, %214
  %189 = phi %"struct.ui::AXLanguageSpan"* [ %215, %214 ], [ %183, %186 ]
  %190 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %189, i64 0, i32 0
  %191 = load i32, i32* %190, align 8
  %192 = icmp sgt i32 %174, %191
  br i1 %192, label %214, label %193

193:                                              ; preds = %188
  %194 = bitcast %"struct.ui::AXLanguageSpan"* %189 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %189, i64 0, i32 2
  %197 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  %198 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = bitcast i8** %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 8
  %201 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %202 = load i64, i64* %201, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 24, i1 false) #16
  %203 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %189, i64 0, i32 3
  %204 = bitcast float* %203 to i32*
  %205 = load i32, i32* %204, align 8
  %206 = load i64, i64* %9, align 8
  store i64 %206, i64* %194, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %11, i64 24, i1 false) #16
  store i8 0, i8* %13, align 1
  store i8 0, i8* %11, align 1
  %207 = load i32, i32* %15, align 8
  store i32 %207, i32* %204, align 8
  store i64 %195, i64* %9, align 8
  %208 = load i8, i8* %13, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %193
  %211 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %211) #15
  br label %212

212:                                              ; preds = %193, %210
  store <2 x i64> %200, <2 x i64>* %19, align 8
  store i64 %202, i64* %18, align 8
  store i32 %205, i32* %15, align 8
  %213 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %189, i64 1
  br label %217

214:                                              ; preds = %188
  %215 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %189, i64 1
  %216 = icmp eq %"struct.ui::AXLanguageSpan"* %215, %7
  br i1 %216, label %432, label %188

217:                                              ; preds = %182, %212
  %218 = phi %"struct.ui::AXLanguageSpan"* [ %183, %182 ], [ %213, %212 ]
  %219 = icmp eq %"struct.ui::AXLanguageSpan"* %218, %7
  br i1 %219, label %432, label %220

220:                                              ; preds = %217, %265
  %221 = phi %"struct.ui::AXLanguageSpan"* [ %229, %265 ], [ %218, %217 ]
  %222 = phi %"struct.ui::AXLanguageSpan"* [ %232, %265 ], [ %7, %217 ]
  %223 = load i32, i32* %173, align 8
  br label %224

224:                                              ; preds = %224, %220
  %225 = phi %"struct.ui::AXLanguageSpan"* [ %221, %220 ], [ %229, %224 ]
  %226 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %225, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = icmp sgt i32 %223, %227
  %229 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %225, i64 1
  br i1 %228, label %224, label %230

230:                                              ; preds = %224, %230
  %231 = phi %"struct.ui::AXLanguageSpan"* [ %232, %230 ], [ %222, %224 ]
  %232 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %231, i64 -1
  %233 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %232, i64 0, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = icmp sgt i32 %223, %234
  br i1 %235, label %236, label %230

236:                                              ; preds = %230
  %237 = icmp ult %"struct.ui::AXLanguageSpan"* %225, %232
  br i1 %237, label %238, label %23

238:                                              ; preds = %236
  %239 = bitcast %"struct.ui::AXLanguageSpan"* %225 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %225, i64 0, i32 2
  %242 = bitcast %"class.std::__1::basic_string"* %241 to i8*
  %243 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = bitcast i8** %243 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8
  %246 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %247 = load i64, i64* %246, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 24, i1 false) #16
  %248 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %225, i64 0, i32 3
  %249 = bitcast float* %248 to i32*
  %250 = load i32, i32* %249, align 8
  %251 = bitcast %"struct.ui::AXLanguageSpan"* %232 to i64*
  %252 = load i64, i64* %251, align 8
  store i64 %252, i64* %239, align 8
  %253 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %231, i64 -1, i32 2
  %254 = bitcast %"class.std::__1::basic_string"* %253 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %254, i64 24, i1 false) #16
  %255 = bitcast %"class.std::__1::basic_string"* %253 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %256 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %255, i64 0, i32 1, i32 0
  store i8 0, i8* %256, align 1
  store i8 0, i8* %254, align 1
  %257 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %231, i64 -1, i32 3
  %258 = bitcast float* %257 to i32*
  %259 = load i32, i32* %258, align 8
  store i32 %259, i32* %249, align 8
  store i64 %240, i64* %251, align 8
  %260 = load i8, i8* %256, align 1
  %261 = icmp slt i8 %260, 0
  br i1 %261, label %262, label %265

262:                                              ; preds = %238
  %263 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load i8*, i8** %263, align 8
  tail call void @_ZdlPv(i8* %264) #15
  br label %265

265:                                              ; preds = %238, %262
  %266 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %231, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = bitcast i8** %266 to <2 x i64>*
  store <2 x i64> %245, <2 x i64>* %267, align 8
  %268 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %231, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %247, i64* %268, align 8
  store i32 %250, i32* %258, align 8
  br label %220

269:                                              ; preds = %178
  %270 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %180, i64 0, i32 0
  %271 = load i32, i32* %270, align 8
  %272 = icmp sgt i32 %271, %176
  br i1 %272, label %178, label %273

273:                                              ; preds = %269
  %274 = bitcast %"struct.ui::AXLanguageSpan"* %24 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 2
  %277 = bitcast %"class.std::__1::basic_string"* %276 to i8*
  %278 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = bitcast i8** %278 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8
  %281 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %282 = load i64, i64* %281, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %277, i8 0, i64 24, i1 false) #16
  %283 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 0, i32 3
  %284 = bitcast float* %283 to i32*
  %285 = load i32, i32* %284, align 8
  %286 = bitcast %"struct.ui::AXLanguageSpan"* %180 to i64*
  %287 = load i64, i64* %286, align 8
  store i64 %287, i64* %274, align 8
  %288 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %179, i64 -1, i32 2
  %289 = bitcast %"class.std::__1::basic_string"* %288 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 8 %289, i64 24, i1 false) #16
  %290 = bitcast %"class.std::__1::basic_string"* %288 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %291 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %290, i64 0, i32 1, i32 0
  store i8 0, i8* %291, align 1
  store i8 0, i8* %289, align 1
  %292 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %179, i64 -1, i32 3
  %293 = bitcast float* %292 to i32*
  %294 = load i32, i32* %293, align 8
  store i32 %294, i32* %284, align 8
  store i64 %275, i64* %286, align 8
  %295 = load i8, i8* %291, align 1
  %296 = icmp slt i8 %295, 0
  br i1 %296, label %297, label %300

297:                                              ; preds = %273
  %298 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %288, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i8*, i8** %298, align 8
  tail call void @_ZdlPv(i8* %299) #15
  br label %300

300:                                              ; preds = %273, %297
  %301 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %179, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = bitcast i8** %301 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %302, align 8
  %303 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %179, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %282, i64* %303, align 8
  store i32 %285, i32* %293, align 8
  %304 = add i32 %172, 1
  br label %305

305:                                              ; preds = %171, %300
  %306 = phi i32 [ %304, %300 ], [ %172, %171 ]
  %307 = phi %"struct.ui::AXLanguageSpan"* [ %180, %300 ], [ %7, %171 ]
  %308 = ptrtoint %"struct.ui::AXLanguageSpan"* %24 to i64
  %309 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %24, i64 1
  %310 = icmp ult %"struct.ui::AXLanguageSpan"* %309, %307
  br i1 %310, label %311, label %366

311:                                              ; preds = %305, %359
  %312 = phi %"struct.ui::AXLanguageSpan"* [ %365, %359 ], [ %163, %305 ]
  %313 = phi i32 [ %363, %359 ], [ %306, %305 ]
  %314 = phi %"struct.ui::AXLanguageSpan"* [ %323, %359 ], [ %309, %305 ]
  %315 = phi %"struct.ui::AXLanguageSpan"* [ %326, %359 ], [ %307, %305 ]
  %316 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %312, i64 0, i32 0
  %317 = load i32, i32* %316, align 8
  br label %318

318:                                              ; preds = %318, %311
  %319 = phi %"struct.ui::AXLanguageSpan"* [ %314, %311 ], [ %323, %318 ]
  %320 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %319, i64 0, i32 0
  %321 = load i32, i32* %320, align 8
  %322 = icmp sgt i32 %321, %317
  %323 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %319, i64 1
  br i1 %322, label %324, label %318

324:                                              ; preds = %318, %324
  %325 = phi %"struct.ui::AXLanguageSpan"* [ %326, %324 ], [ %315, %318 ]
  %326 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %325, i64 -1
  %327 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %326, i64 0, i32 0
  %328 = load i32, i32* %327, align 8
  %329 = icmp sgt i32 %328, %317
  br i1 %329, label %324, label %330

330:                                              ; preds = %324
  %331 = icmp ugt %"struct.ui::AXLanguageSpan"* %319, %326
  br i1 %331, label %366, label %332

332:                                              ; preds = %330
  %333 = bitcast %"struct.ui::AXLanguageSpan"* %319 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %319, i64 0, i32 2
  %336 = bitcast %"class.std::__1::basic_string"* %335 to i8*
  %337 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = bitcast i8** %337 to <2 x i64>*
  %339 = load <2 x i64>, <2 x i64>* %338, align 8
  %340 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %341 = load i64, i64* %340, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %336, i8 0, i64 24, i1 false) #16
  %342 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %319, i64 0, i32 3
  %343 = bitcast float* %342 to i32*
  %344 = load i32, i32* %343, align 8
  %345 = bitcast %"struct.ui::AXLanguageSpan"* %326 to i64*
  %346 = load i64, i64* %345, align 8
  store i64 %346, i64* %333, align 8
  %347 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %325, i64 -1, i32 2
  %348 = bitcast %"class.std::__1::basic_string"* %347 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %336, i8* align 8 %348, i64 24, i1 false) #16
  %349 = bitcast %"class.std::__1::basic_string"* %347 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %350 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %349, i64 0, i32 1, i32 0
  store i8 0, i8* %350, align 1
  store i8 0, i8* %348, align 1
  %351 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %325, i64 -1, i32 3
  %352 = bitcast float* %351 to i32*
  %353 = load i32, i32* %352, align 8
  store i32 %353, i32* %343, align 8
  store i64 %334, i64* %345, align 8
  %354 = load i8, i8* %350, align 1
  %355 = icmp slt i8 %354, 0
  br i1 %355, label %356, label %359

356:                                              ; preds = %332
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %347, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load i8*, i8** %357, align 8
  tail call void @_ZdlPv(i8* %358) #15
  br label %359

359:                                              ; preds = %332, %356
  %360 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %325, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = bitcast i8** %360 to <2 x i64>*
  store <2 x i64> %339, <2 x i64>* %361, align 8
  %362 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %325, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %341, i64* %362, align 8
  store i32 %344, i32* %352, align 8
  %363 = add i32 %313, 1
  %364 = icmp eq %"struct.ui::AXLanguageSpan"* %312, %319
  %365 = select i1 %364, %"struct.ui::AXLanguageSpan"* %326, %"struct.ui::AXLanguageSpan"* %312
  br label %311

366:                                              ; preds = %330, %305
  %367 = phi %"struct.ui::AXLanguageSpan"* [ %163, %305 ], [ %312, %330 ]
  %368 = phi i32 [ %306, %305 ], [ %313, %330 ]
  %369 = phi %"struct.ui::AXLanguageSpan"* [ %309, %305 ], [ %319, %330 ]
  %370 = icmp eq %"struct.ui::AXLanguageSpan"* %369, %367
  br i1 %370, label %409, label %371

371:                                              ; preds = %366
  %372 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %367, i64 0, i32 0
  %373 = load i32, i32* %372, align 8
  %374 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %369, i64 0, i32 0
  %375 = load i32, i32* %374, align 8
  %376 = icmp sgt i32 %373, %375
  br i1 %376, label %409, label %377

377:                                              ; preds = %371
  %378 = bitcast %"struct.ui::AXLanguageSpan"* %369 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %369, i64 0, i32 2
  %381 = bitcast %"class.std::__1::basic_string"* %380 to i8*
  %382 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %369, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = bitcast i8** %382 to <2 x i64>*
  %384 = load <2 x i64>, <2 x i64>* %383, align 8
  %385 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %369, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %386 = load i64, i64* %385, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %381, i8 0, i64 24, i1 false) #16
  %387 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %369, i64 0, i32 3
  %388 = bitcast float* %387 to i32*
  %389 = load i32, i32* %388, align 8
  %390 = bitcast %"struct.ui::AXLanguageSpan"* %367 to i64*
  %391 = load i64, i64* %390, align 8
  store i64 %391, i64* %378, align 8
  %392 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %367, i64 0, i32 2
  %393 = bitcast %"class.std::__1::basic_string"* %392 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %381, i8* align 8 %393, i64 24, i1 false) #16
  %394 = bitcast %"class.std::__1::basic_string"* %392 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %395 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %394, i64 0, i32 1, i32 0
  store i8 0, i8* %395, align 1
  store i8 0, i8* %393, align 1
  %396 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %367, i64 0, i32 3
  %397 = bitcast float* %396 to i32*
  %398 = load i32, i32* %397, align 8
  store i32 %398, i32* %388, align 8
  store i64 %379, i64* %390, align 8
  %399 = load i8, i8* %395, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %401, label %404

401:                                              ; preds = %377
  %402 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %392, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8
  tail call void @_ZdlPv(i8* %403) #15
  br label %404

404:                                              ; preds = %377, %401
  %405 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = bitcast i8** %405 to <2 x i64>*
  store <2 x i64> %384, <2 x i64>* %406, align 8
  %407 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %386, i64* %407, align 8
  store i32 %389, i32* %397, align 8
  %408 = add i32 %368, 1
  br label %409

409:                                              ; preds = %371, %366, %404
  %410 = phi i32 [ %408, %404 ], [ %368, %371 ], [ %368, %366 ]
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %419

412:                                              ; preds = %409
  %413 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEbT0_SD_T_"(%"struct.ui::AXLanguageSpan"* %24, %"struct.ui::AXLanguageSpan"* %369)
  %414 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %369, i64 1
  %415 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEbT0_SD_T_"(%"struct.ui::AXLanguageSpan"* %414, %"struct.ui::AXLanguageSpan"* %4)
  br i1 %415, label %416, label %418

416:                                              ; preds = %412
  br i1 %413, label %432, label %417

417:                                              ; preds = %416, %430
  br label %3

418:                                              ; preds = %412
  br i1 %413, label %428, label %419

419:                                              ; preds = %418, %409
  %420 = ptrtoint %"struct.ui::AXLanguageSpan"* %369 to i64
  %421 = sub i64 %420, %308
  %422 = sdiv exact i64 %421, 40
  %423 = sub i64 %20, %420
  %424 = sdiv exact i64 %423, 40
  %425 = icmp slt i64 %422, %424
  br i1 %425, label %426, label %430

426:                                              ; preds = %419
  tail call fastcc void @"_ZNSt3__16__sortIRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEvT0_SD_T_"(%"struct.ui::AXLanguageSpan"* %24, %"struct.ui::AXLanguageSpan"* %369)
  %427 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %369, i64 1
  br label %428

428:                                              ; preds = %426, %418
  %429 = phi %"struct.ui::AXLanguageSpan"* [ %414, %418 ], [ %427, %426 ]
  br label %21

430:                                              ; preds = %419
  %431 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %369, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEvT0_SD_T_"(%"struct.ui::AXLanguageSpan"* %431, %"struct.ui::AXLanguageSpan"* %4)
  br label %417

432:                                              ; preds = %416, %217, %23, %23, %186, %214, %157, %28, %83, %62, %66, %70, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* nocapture, %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"* nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %5, %7
  %9 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp sle i32 %10, %5
  br i1 %8, label %12, label %71

12:                                               ; preds = %3
  br i1 %11, label %13, label %152

13:                                               ; preds = %12
  %14 = bitcast %"struct.ui::AXLanguageSpan"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %18 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast i8** %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #16
  %23 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 3
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = bitcast %"struct.ui::AXLanguageSpan"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %14, align 8
  %28 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2
  %29 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %29, i64 24, i1 false) #16
  %30 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 0, i8* %31, align 1
  store i8 0, i8* %29, align 1
  %32 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 3
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %24, align 8
  store i64 %15, i64* %26, align 8
  %35 = load i8, i8* %31, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %13
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #15
  br label %40

40:                                               ; preds = %13, %37
  %41 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast i8** %41 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %42, align 8
  %43 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %43, align 8
  store i32 %25, i32* %33, align 8
  %44 = load i32, i32* %4, align 8
  %45 = load i32, i32* %6, align 8
  %46 = icmp sgt i32 %44, %45
  br i1 %46, label %152, label %47

47:                                               ; preds = %40
  %48 = bitcast %"struct.ui::AXLanguageSpan"* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %52 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast i8** %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  %55 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i64, i64* %55, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #16
  %57 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 3
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = load i64, i64* %14, align 8
  store i64 %60, i64* %48, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %17, i64 24, i1 false) #16
  %61 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 0, i8* %62, align 1
  store i8 0, i8* %17, align 1
  %63 = load i32, i32* %24, align 8
  store i32 %63, i32* %58, align 8
  store i64 %49, i64* %14, align 8
  %64 = load i8, i8* %62, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %47
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %47, %66
  %70 = bitcast i8** %18 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %70, align 8
  store i64 %56, i64* %21, align 8
  store i32 %59, i32* %24, align 8
  br label %152

71:                                               ; preds = %3
  %72 = bitcast %"struct.ui::AXLanguageSpan"* %0 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2
  %75 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %76 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = load i64, i64* %81, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #16
  %83 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 3
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 8
  br i1 %11, label %86, label %106

86:                                               ; preds = %71
  %87 = bitcast %"struct.ui::AXLanguageSpan"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %72, align 8
  %89 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2
  %90 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %90, i64 24, i1 false) #16
  %91 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  store i8 0, i8* %92, align 1
  store i8 0, i8* %90, align 1
  %93 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 3
  %94 = bitcast float* %93 to i32*
  %95 = load i32, i32* %94, align 8
  store i32 %95, i32* %84, align 8
  store i64 %73, i64* %87, align 8
  %96 = load i8, i8* %92, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %86
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  tail call void @_ZdlPv(i8* %100) #15
  br label %101

101:                                              ; preds = %86, %98
  %102 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = bitcast i8** %102 to i64*
  store i64 %78, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %80, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %82, i64* %105, align 8
  store i32 %85, i32* %94, align 8
  br label %152

106:                                              ; preds = %71
  %107 = bitcast %"struct.ui::AXLanguageSpan"* %1 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %72, align 8
  %109 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2
  %110 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %110, i64 24, i1 false) #16
  %111 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  store i8 0, i8* %112, align 1
  store i8 0, i8* %110, align 1
  %113 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 3
  %114 = bitcast float* %113 to i32*
  %115 = load i32, i32* %114, align 8
  store i32 %115, i32* %84, align 8
  store i64 %73, i64* %107, align 8
  %116 = load i8, i8* %112, align 1
  %117 = icmp slt i8 %116, 0
  %118 = trunc i64 %73 to i32
  br i1 %117, label %119, label %123

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #15
  %122 = load i32, i32* %4, align 8
  br label %123

123:                                              ; preds = %106, %119
  %124 = phi i32 [ %118, %106 ], [ %122, %119 ]
  %125 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = bitcast i8** %125 to i64*
  store i64 %78, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %80, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %82, i64* %128, align 8
  store i32 %85, i32* %114, align 8
  %129 = load i32, i32* %9, align 8
  %130 = icmp sgt i32 %129, %124
  br i1 %130, label %152, label %131

131:                                              ; preds = %123
  %132 = load i64, i64* %107, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #16
  %133 = bitcast %"struct.ui::AXLanguageSpan"* %2 to i64*
  %134 = load i64, i64* %133, align 8
  store i64 %134, i64* %107, align 8
  %135 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2
  %136 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %136, i64 24, i1 false) #16
  %137 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  store i8 0, i8* %138, align 1
  store i8 0, i8* %136, align 1
  %139 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 3
  %140 = bitcast float* %139 to i32*
  %141 = load i32, i32* %140, align 8
  store i32 %141, i32* %114, align 8
  store i64 %132, i64* %133, align 8
  %142 = load i8, i8* %138, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %131
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  tail call void @_ZdlPv(i8* %146) #15
  br label %147

147:                                              ; preds = %131, %144
  %148 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = bitcast i8** %148 to i64*
  store i64 %78, i64* %149, align 8
  %150 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %80, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %82, i64* %151, align 8
  store i32 %85, i32* %140, align 8
  br label %152

152:                                              ; preds = %123, %40, %147, %69, %12, %101
  %153 = phi i32 [ 1, %101 ], [ 0, %12 ], [ 2, %69 ], [ 1, %40 ], [ 2, %147 ], [ 1, %123 ]
  ret i32 %153
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* nocapture, %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"* nocapture, %"struct.ui::AXLanguageSpan"* nocapture) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %0, %"struct.ui::AXLanguageSpan"* %1, %"struct.ui::AXLanguageSpan"* %2)
  %6 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %7, %9
  br i1 %10, label %101, label %11

11:                                               ; preds = %4
  %12 = bitcast %"struct.ui::AXLanguageSpan"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %16 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast i8** %16 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i64, i64* %19, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #16
  %21 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 3
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = bitcast %"struct.ui::AXLanguageSpan"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %12, align 8
  %26 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %27, i64 24, i1 false) #16
  %28 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 0, i8* %29, align 1
  store i8 0, i8* %27, align 1
  %30 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 3
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %22, align 8
  store i64 %13, i64* %24, align 8
  %33 = load i8, i8* %29, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %11
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %11, %35
  %39 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast i8** %39 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %41, align 8
  store i32 %23, i32* %31, align 8
  %42 = add i32 %5, 1
  %43 = load i32, i32* %8, align 8
  %44 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp sgt i32 %43, %45
  br i1 %46, label %101, label %47

47:                                               ; preds = %38
  %48 = bitcast %"struct.ui::AXLanguageSpan"* %1 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %52 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast i8** %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  %55 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i64, i64* %55, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #16
  %57 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 3
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = load i64, i64* %12, align 8
  store i64 %60, i64* %48, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %15, i64 24, i1 false) #16
  %61 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 0, i8* %62, align 1
  store i8 0, i8* %15, align 1
  %63 = load i32, i32* %22, align 8
  store i32 %63, i32* %58, align 8
  store i64 %49, i64* %12, align 8
  %64 = load i8, i8* %62, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %47
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %47, %66
  %70 = bitcast i8** %16 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %70, align 8
  store i64 %56, i64* %19, align 8
  store i32 %59, i32* %22, align 8
  %71 = add i32 %5, 2
  %72 = load i32, i32* %44, align 8
  %73 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp sgt i32 %72, %74
  br i1 %75, label %101, label %76

76:                                               ; preds = %69
  %77 = bitcast %"struct.ui::AXLanguageSpan"* %0 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2
  %80 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %81 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast i8** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8
  %84 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %85 = load i64, i64* %84, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #16
  %86 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 3
  %87 = bitcast float* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = load i64, i64* %48, align 8
  store i64 %89, i64* %77, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %51, i64 24, i1 false) #16
  %90 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 0, i8* %91, align 1
  store i8 0, i8* %51, align 1
  %92 = load i32, i32* %58, align 8
  store i32 %92, i32* %87, align 8
  store i64 %78, i64* %48, align 8
  %93 = load i8, i8* %91, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %76
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  tail call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %76, %95
  %99 = bitcast i8** %52 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %99, align 8
  store i64 %85, i64* %55, align 8
  store i32 %88, i32* %58, align 8
  %100 = add i32 %5, 3
  br label %101

101:                                              ; preds = %69, %38, %4, %98
  %102 = phi i32 [ %100, %98 ], [ %71, %69 ], [ %42, %38 ], [ %5, %4 ]
  ret i32 %102
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* nocapture, %"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"* nocapture, %"struct.ui::AXLanguageSpan"* nocapture, %"struct.ui::AXLanguageSpan"* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %0, %"struct.ui::AXLanguageSpan"* %1, %"struct.ui::AXLanguageSpan"* %2, %"struct.ui::AXLanguageSpan"* %3)
  %7 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %8, %10
  br i1 %11, label %131, label %12

12:                                               ; preds = %5
  %13 = bitcast %"struct.ui::AXLanguageSpan"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %17 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast i8** %17 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #16
  %22 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %3, i64 0, i32 3
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = bitcast %"struct.ui::AXLanguageSpan"* %4 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %13, align 8
  %27 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 0, i32 2
  %28 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %28, i64 24, i1 false) #16
  %29 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 0, i8* %30, align 1
  store i8 0, i8* %28, align 1
  %31 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 0, i32 3
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %23, align 8
  store i64 %14, i64* %25, align 8
  %34 = load i8, i8* %30, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #15
  br label %39

39:                                               ; preds = %12, %36
  %40 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast i8** %40 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %42, align 8
  store i32 %24, i32* %32, align 8
  %43 = add i32 %6, 1
  %44 = load i32, i32* %9, align 8
  %45 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %44, %46
  br i1 %47, label %131, label %48

48:                                               ; preds = %39
  %49 = bitcast %"struct.ui::AXLanguageSpan"* %2 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2
  %52 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %53 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast i8** %53 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i64, i64* %56, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #16
  %58 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %2, i64 0, i32 3
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = load i64, i64* %13, align 8
  store i64 %61, i64* %49, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %16, i64 24, i1 false) #16
  %62 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 0, i8* %63, align 1
  store i8 0, i8* %16, align 1
  %64 = load i32, i32* %23, align 8
  store i32 %64, i32* %59, align 8
  store i64 %50, i64* %13, align 8
  %65 = load i8, i8* %63, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %48
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %48, %67
  %71 = bitcast i8** %17 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %71, align 8
  store i64 %57, i64* %20, align 8
  store i32 %60, i32* %23, align 8
  %72 = add i32 %6, 2
  %73 = load i32, i32* %45, align 8
  %74 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = icmp sgt i32 %73, %75
  br i1 %76, label %131, label %77

77:                                               ; preds = %70
  %78 = bitcast %"struct.ui::AXLanguageSpan"* %1 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2
  %81 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  %82 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast i8** %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8
  %85 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %86 = load i64, i64* %85, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #16
  %87 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 0, i32 3
  %88 = bitcast float* %87 to i32*
  %89 = load i32, i32* %88, align 8
  %90 = load i64, i64* %49, align 8
  store i64 %90, i64* %78, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %52, i64 24, i1 false) #16
  %91 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  store i8 0, i8* %92, align 1
  store i8 0, i8* %52, align 1
  %93 = load i32, i32* %59, align 8
  store i32 %93, i32* %88, align 8
  store i64 %79, i64* %49, align 8
  %94 = load i8, i8* %92, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %77
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %77, %96
  %100 = bitcast i8** %53 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %100, align 8
  store i64 %86, i64* %56, align 8
  store i32 %89, i32* %59, align 8
  %101 = add i32 %6, 3
  %102 = load i32, i32* %74, align 8
  %103 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %102, %104
  br i1 %105, label %131, label %106

106:                                              ; preds = %99
  %107 = bitcast %"struct.ui::AXLanguageSpan"* %0 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2
  %110 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %111 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = bitcast i8** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8
  %114 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %115 = load i64, i64* %114, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #16
  %116 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 3
  %117 = bitcast float* %116 to i32*
  %118 = load i32, i32* %117, align 8
  %119 = load i64, i64* %78, align 8
  store i64 %119, i64* %107, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %81, i64 24, i1 false) #16
  %120 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 0, i8* %121, align 1
  store i8 0, i8* %81, align 1
  %122 = load i32, i32* %88, align 8
  store i32 %122, i32* %117, align 8
  store i64 %108, i64* %78, align 8
  %123 = load i8, i8* %121, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %106
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  tail call void @_ZdlPv(i8* %127) #15
  br label %128

128:                                              ; preds = %106, %125
  %129 = bitcast i8** %82 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %129, align 8
  store i64 %115, i64* %85, align 8
  store i32 %118, i32* %88, align 8
  %130 = add i32 %6, 4
  br label %131

131:                                              ; preds = %99, %70, %39, %5, %128
  %132 = phi i32 [ %130, %128 ], [ %101, %99 ], [ %72, %70 ], [ %43, %39 ], [ %6, %5 ]
  ret i32 %132
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEbT0_SD_T_"(%"struct.ui::AXLanguageSpan"*, %"struct.ui::AXLanguageSpan"*) unnamed_addr #0 {
  %3 = ptrtoint %"struct.ui::AXLanguageSpan"* %1 to i64
  %4 = ptrtoint %"struct.ui::AXLanguageSpan"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = sdiv exact i64 %5, 40
  switch i64 %6, label %60 [
    i64 0, label %144
    i64 1, label %144
    i64 2, label %7
    i64 3, label %45
    i64 4, label %49
    i64 5, label %54
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %10, %12
  br i1 %13, label %144, label %14

14:                                               ; preds = %7
  %15 = bitcast %"struct.ui::AXLanguageSpan"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %19 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast i8** %19 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i64, i64* %22, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #16
  %24 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 0, i32 3
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"struct.ui::AXLanguageSpan"* %8 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %15, align 8
  %29 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 -1, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %30, i64 24, i1 false) #16
  %31 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 0, i8* %32, align 1
  store i8 0, i8* %30, align 1
  %33 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 -1, i32 3
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %25, align 8
  store i64 %16, i64* %27, align 8
  %36 = load i8, i8* %32, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %14
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %14, %38
  %42 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast i8** %42 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %43, align 8
  %44 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %44, align 8
  store i32 %26, i32* %34, align 8
  br label %144

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 1
  %47 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 -1
  %48 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %0, %"struct.ui::AXLanguageSpan"* %46, %"struct.ui::AXLanguageSpan"* %47)
  br label %144

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 1
  %51 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 2
  %52 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 -1
  %53 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %0, %"struct.ui::AXLanguageSpan"* %50, %"struct.ui::AXLanguageSpan"* %51, %"struct.ui::AXLanguageSpan"* %52)
  br label %144

54:                                               ; preds = %2
  %55 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 1
  %56 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 2
  %57 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 3
  %58 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %1, i64 -1
  %59 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %0, %"struct.ui::AXLanguageSpan"* %55, %"struct.ui::AXLanguageSpan"* %56, %"struct.ui::AXLanguageSpan"* %57, %"struct.ui::AXLanguageSpan"* %58)
  br label %144

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 2
  %62 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 1
  %63 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui26AXLanguageDetectionManager39GetLanguageAnnotationForStringAttributeERKNS1_6AXNodeEN2ax5mojom15StringAttributeEE3$_0PNS1_14AXLanguageSpanEEEjT0_SD_SD_T_"(%"struct.ui::AXLanguageSpan"* %0, %"struct.ui::AXLanguageSpan"* %62, %"struct.ui::AXLanguageSpan"* %61)
  %64 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %0, i64 3
  %65 = icmp eq %"struct.ui::AXLanguageSpan"* %64, %1
  br i1 %65, label %144, label %66

66:                                               ; preds = %60, %137
  %67 = phi %"struct.ui::AXLanguageSpan"* [ %139, %137 ], [ %64, %60 ]
  %68 = phi i32 [ %138, %137 ], [ 0, %60 ]
  %69 = phi %"struct.ui::AXLanguageSpan"* [ %67, %137 ], [ %61, %60 ]
  %70 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %67, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %69, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp sgt i32 %71, %73
  br i1 %74, label %137, label %75

75:                                               ; preds = %66
  %76 = bitcast %"struct.ui::AXLanguageSpan"* %67 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %67, i64 0, i32 2
  %80 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %81 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast i8** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8
  %84 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %85 = load i64, i64* %84, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #16
  %86 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %67, i64 0, i32 3
  %87 = bitcast float* %86 to i32*
  %88 = load i32, i32* %87, align 8
  br label %89

89:                                               ; preds = %115, %75
  %90 = phi %"struct.ui::AXLanguageSpan"* [ %67, %75 ], [ %91, %115 ]
  %91 = phi %"struct.ui::AXLanguageSpan"* [ %69, %75 ], [ %116, %115 ]
  %92 = bitcast %"struct.ui::AXLanguageSpan"* %91 to i64*
  %93 = bitcast %"struct.ui::AXLanguageSpan"* %90 to i64*
  %94 = load i64, i64* %92, align 8
  store i64 %94, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %90, i64 0, i32 2
  %96 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %91, i64 0, i32 2
  %97 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %89
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %89, %101
  %105 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #16
  %107 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  store i8 0, i8* %108, align 1
  store i8 0, i8* %106, align 1
  %109 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %91, i64 0, i32 3
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %90, i64 0, i32 3
  %113 = bitcast float* %112 to i32*
  store i32 %111, i32* %113, align 8
  %114 = icmp eq %"struct.ui::AXLanguageSpan"* %91, %0
  br i1 %114, label %120, label %115

115:                                              ; preds = %104
  %116 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %91, i64 -1
  %117 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %116, i64 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = icmp slt i32 %118, %78
  br i1 %119, label %120, label %89

120:                                              ; preds = %104, %115
  %121 = phi %"struct.ui::AXLanguageSpan"* [ %91, %115 ], [ %0, %104 ]
  %122 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = bitcast float* %109 to i32*
  %125 = bitcast %"struct.ui::AXLanguageSpan"* %121 to i64*
  store i64 %77, i64* %125, align 8
  %126 = load i8, i8* %123, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  tail call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %128, %120
  %132 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = bitcast i8** %132 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %133, align 8
  %134 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %85, i64* %134, align 8
  store i32 %88, i32* %124, align 8
  %135 = add i32 %68, 1
  %136 = icmp eq i32 %135, 8
  br i1 %136, label %141, label %137

137:                                              ; preds = %131, %66
  %138 = phi i32 [ %135, %131 ], [ %68, %66 ]
  %139 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %67, i64 1
  %140 = icmp eq %"struct.ui::AXLanguageSpan"* %139, %1
  br i1 %140, label %144, label %66

141:                                              ; preds = %131
  %142 = getelementptr inbounds %"struct.ui::AXLanguageSpan", %"struct.ui::AXLanguageSpan"* %67, i64 1
  %143 = icmp eq %"struct.ui::AXLanguageSpan"* %142, %1
  br label %144

144:                                              ; preds = %137, %141, %60, %7, %41, %2, %2, %54, %49, %45
  %145 = phi i1 [ true, %54 ], [ true, %49 ], [ true, %45 ], [ true, %2 ], [ true, %2 ], [ true, %41 ], [ true, %7 ], [ true, %60 ], [ %143, %141 ], [ true, %137 ]
  ret i1 %145
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{i64 0, i64 65}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISV_EEEEEEmOT_DpOT0_"}
!11 = distinct !{!11, !4}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !4}
!16 = distinct !{!16, !4}
!17 = distinct !{!17, !4}
