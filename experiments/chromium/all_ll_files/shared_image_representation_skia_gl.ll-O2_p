; ModuleID = '../../gpu/command_buffer/service/shared_image_representation_skia_gl.cc'
source_filename = "../../gpu/command_buffer/service/shared_image_representation_skia_gl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::SharedImageRepresentationSkiaGL" = type <{ %"class.gpu::SharedImageRepresentationSkia.base", [6 x i8], %"class.std::__1::unique_ptr.24", %class.sk_sp, %class.scoped_refptr.34, %class.sk_sp.203, i32, [4 x i8] }>
%"class.gpu::SharedImageRepresentationSkia.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.gpu::SharedImageRepresentationGLTextureBase"* }
%class.sk_sp = type { %class.SkPromiseImageTexture* }
%class.SkPromiseImageTexture = type <{ %class.SkNVRefCnt, [4 x i8], %class.SkSTArray, %class.GrBackendTexture, i32, [4 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.29, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.28, [4 x i8] }>
%union.anon.28 = type { [7 x i32] }
%class.sk_sp.29 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.30, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.30 = type { %"struct.std::__1::atomic" }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.31, %class.sk_sp.33 }
%union.anon.31 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.32, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.32 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.33 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.scoped_refptr.34 = type { %"class.gpu::SharedContextState"* }
%class.sk_sp.203 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.gpu::SharedImageRepresentationGLTextureBase" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.gpu::SharedContextState" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.gpu::GLContextVirtualDelegate", %"class.base::RefCounted", %"class.GrContextOptions::ShaderErrorHandler", i8, i8, i8, %"class.base::OnceCallback", i32, %"class.gpu::SharedContextState::MemoryTrackerObserver", %"class.gpu::SharedContextState::MemoryTracker", %"class.gpu::MemoryTypeTracker", %"class.viz::VulkanContextProvider"*, %"class.viz::MetalContextProvider"*, %"class.viz::DawnContextProvider"*, %class.GrDirectContext*, %class.scoped_refptr.112, %class.scoped_refptr.122, %class.scoped_refptr.122, %class.scoped_refptr.123, %"class.gl::GLSurface"*, %class.scoped_refptr.124, %"class.std::__1::unique_ptr.147", %"class.gl::ProgressReporter"*, %class.sk_sp.153, %"class.std::__1::unique_ptr.154", i64, %"class.std::__1::vector.160", %"class.gpu::raster::GrShaderCache"*, i8, %"class.absl::optional.167", [4 x i8], %"class.base::ObserverList", %"class.base::MRUCache", i8, %"class.base::Time", i8, %"class.std::__1::unique_ptr.196", %"class.base::WeakPtrFactory.202" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.36", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.gpu::SharedContextState::MemoryTrackerObserver" = type { %"class.gpu::MemoryTracker::Observer", i64, %"class.base::WeakPtr" }
%"class.gpu::MemoryTracker::Observer" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.18", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"class.gpu::SharedContextState::MemoryTracker" = type { %"class.gpu::MemoryTracker", %"class.util::IdType", i64, %"class.gpu::MemoryTracker::Observer"*, i64 }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr, %"class.base::WeakPtrFactory" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.viz::VulkanContextProvider" = type opaque
%"class.viz::MetalContextProvider" = type opaque
%"class.viz::DawnContextProvider" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %class.sk_sp.81, %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.39", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.38 }
%class.sk_sp.38 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.81 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.scoped_refptr.112 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.113", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.113" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i64 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.207", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.244", %"class.gl::RealGLApi"*, %class.scoped_refptr.112, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.141", i8, [7 x i8] }>
%"class.base::RefCounted.207" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.210 }
%union.anon.210 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::GLVersionInfo"* }
%class.scoped_refptr.122 = type { %"class.gl::GLContext"* }
%class.scoped_refptr.123 = type { %"class.gl::GLSurface"* }
%"class.gl::GLSurface" = type opaque
%class.scoped_refptr.124 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.125", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree.133", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.141" }
%"class.base::RefCounted.125" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector.126" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { i32*, i32*, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { i32* }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree.133" = type { %"class.std::__1::vector.134" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.136" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.gpu::gles2::ContextState"* }
%"struct.gpu::gles2::ContextState" = type opaque
%"class.gl::ProgressReporter" = type { i32 (...)** }
%class.sk_sp.153 = type { %class.GrDirectContext* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.gpu::ServiceTransferCache"* }
%"class.gpu::ServiceTransferCache" = type opaque
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { i8*, i8*, %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { i8* }
%"class.gpu::raster::GrShaderCache" = type opaque
%"class.absl::optional.167" = type { %"class.absl::optional_internal::optional_data.168" }
%"class.absl::optional_internal::optional_data.168" = type { %"class.absl::optional_internal::optional_data_base.169" }
%"class.absl::optional_internal::optional_data_base.169" = type { %"class.absl::optional_internal::optional_data_dtor_base.170" }
%"class.absl::optional_internal::optional_data_dtor_base.170" = type { i8, %union.anon.171 }
%union.anon.171 = type { i32 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.176", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.183" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.gpu::ExternalSemaphorePool"* }
%"class.gpu::ExternalSemaphorePool" = type opaque
%"class.base::WeakPtrFactory.202" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Lock" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr.0" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr.0"* }
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.4", %"class.std::__1::vector.9" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gpu::SharedImageFactory" = type opaque
%"class.absl::optional.4" = type { %"class.absl::optional_internal::optional_data.5" }
%"class.absl::optional_internal::optional_data.5" = type { %"class.absl::optional_internal::optional_data_base.6" }
%"class.absl::optional_internal::optional_data_base.6" = type { %"class.absl::optional_internal::optional_data_dtor_base.7" }
%"class.absl::optional_internal::optional_data_dtor_base.7" = type { i8, %union.anon.8 }
%union.anon.8 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.11" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.gpu::TextureBase" = type { i32 (...)**, i32, i32, %"class.gpu::MailboxManager"* }
%"class.gpu::MailboxManager" = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::vector.256" = type opaque
%class.sk_sp.257 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.258, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.258 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.19" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %class.GrBackendSurfaceMutableState* }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.262, i32, i8, [3 x i8] }>
%union.anon.262 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.263", %"struct.std::__1::atomic.267" }
%"struct.std::__1::atomic.263" = type { %"struct.std::__1::__atomic_base.264" }
%"struct.std::__1::__atomic_base.264" = type { %"struct.std::__1::__cxx_atomic_impl.265" }
%"struct.std::__1::__cxx_atomic_impl.265" = type { %"struct.std::__1::__cxx_atomic_base_impl.266" }
%"struct.std::__1::__cxx_atomic_base_impl.266" = type { i32 }
%"struct.std::__1::atomic.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i32 }
%"class.gpu::SharedImageRepresentationSkia" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [6 x i8] c"kNone\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"kRead\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"kWrite\00", align 1
@_ZTVN3gpu31SharedImageRepresentationSkiaGLE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::SharedImageRepresentationSkiaGL"*)* @_ZN3gpu31SharedImageRepresentationSkiaGLD2Ev to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationSkiaGL"*)* @_ZN3gpu31SharedImageRepresentationSkiaGLD0Ev to i8*), i8* bitcast (i1 (%"class.gpu::SharedImageRepresentationSkiaGL"*)* @_ZN3gpu31SharedImageRepresentationSkiaGL36SupportsMultipleConcurrentReadAccessEv to i8*), i8* bitcast (void (%class.sk_sp.203*, %"class.gpu::SharedImageRepresentationSkia"*, i32, %class.SkSurfaceProps*, %"class.std::__1::vector.256"*, %"class.std::__1::vector.256"*, %"class.std::__1::unique_ptr.259"*)* @_ZN3gpu29SharedImageRepresentationSkia16BeginWriteAccessEiRK14SkSurfacePropsPNSt3__16vectorI18GrBackendSemaphoreNS4_9allocatorIS6_EEEESA_PNS4_10unique_ptrI28GrBackendSurfaceMutableStateNS4_14default_deleteISC_EEEE to i8*), i8* bitcast (void (%class.sk_sp.203*, %"class.gpu::SharedImageRepresentationSkiaGL"*, i32, %class.SkSurfaceProps*, %"class.std::__1::vector.256"*, %"class.std::__1::vector.256"*)* @_ZN3gpu31SharedImageRepresentationSkiaGL16BeginWriteAccessEiRK14SkSurfacePropsPNSt3__16vectorI18GrBackendSemaphoreNS4_9allocatorIS6_EEEESA_ to i8*), i8* bitcast (void (%class.sk_sp*, %"class.gpu::SharedImageRepresentationSkiaGL"*, %"class.std::__1::vector.256"*, %"class.std::__1::vector.256"*, %"class.std::__1::unique_ptr.259"*)* @_ZN3gpu31SharedImageRepresentationSkiaGL16BeginWriteAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_PNS1_10unique_ptrI28GrBackendSurfaceMutableStateNS1_14default_deleteIS9_EEEE to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationSkiaGL"*, %class.sk_sp.203*)* @_ZN3gpu31SharedImageRepresentationSkiaGL14EndWriteAccessE5sk_spI9SkSurfaceE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.gpu::SharedImageRepresentationSkia"*, %"class.std::__1::vector.256"*, %"class.std::__1::vector.256"*, %"class.std::__1::unique_ptr.259"*)* @_ZN3gpu29SharedImageRepresentationSkia15BeginReadAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_PNS1_10unique_ptrI28GrBackendSurfaceMutableStateNS1_14default_deleteIS9_EEEE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.gpu::SharedImageRepresentationSkiaGL"*, %"class.std::__1::vector.256"*, %"class.std::__1::vector.256"*)* @_ZN3gpu31SharedImageRepresentationSkiaGL15BeginReadAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_ to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationSkiaGL"*)* @_ZN3gpu31SharedImageRepresentationSkiaGL13EndReadAccessEv to i8*)] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu31SharedImageRepresentationSkiaGLC1ENSt3__110unique_ptrINS_38SharedImageRepresentationGLTextureBaseENS1_14default_deleteIS3_EEEE5sk_spI21SkPromiseImageTextureE13scoped_refptrINS_18SharedContextStateEEPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE = hidden unnamed_addr alias void (%"class.gpu::SharedImageRepresentationSkiaGL"*, %"class.gpu::SharedImageRepresentationGLTextureBase"*, %class.sk_sp*, %"class.gpu::SharedContextState"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*), void (%"class.gpu::SharedImageRepresentationSkiaGL"*, %"class.gpu::SharedImageRepresentationGLTextureBase"*, %class.sk_sp*, %"class.gpu::SharedContextState"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu31SharedImageRepresentationSkiaGLC2ENSt3__110unique_ptrINS_38SharedImageRepresentationGLTextureBaseENS1_14default_deleteIS3_EEEE5sk_spI21SkPromiseImageTextureE13scoped_refptrINS_18SharedContextStateEEPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE
@_ZN3gpu31SharedImageRepresentationSkiaGLD1Ev = hidden unnamed_addr alias void (%"class.gpu::SharedImageRepresentationSkiaGL"*), void (%"class.gpu::SharedImageRepresentationSkiaGL"*)* @_ZN3gpu31SharedImageRepresentationSkiaGLD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3gpulsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_24RepresentationAccessModeE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), i32) local_unnamed_addr #0 {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #7
  br label %9

5:                                                ; preds = %2
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #7
  br label %9

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #7
  br label %9

9:                                                ; preds = %2, %7, %5, %3
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationSkiaGL"* @_ZN3gpu31SharedImageRepresentationSkiaGL6CreateENSt3__110unique_ptrINS_38SharedImageRepresentationGLTextureBaseENS1_14default_deleteIS3_EEEE13scoped_refptrINS_18SharedContextStateEEPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentationGLTextureBase"*, %"class.gpu::SharedContextState"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.GrBackendTexture, align 8
  %7 = ptrtoint %"class.gpu::SharedImageRepresentationGLTextureBase"* %0 to i64
  %8 = ptrtoint %"class.gpu::SharedContextState"* %1 to i64
  %9 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 176, i1 false)
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* nonnull %6) #7
  %10 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %1, i64 0, i32 21, i32 0
  %11 = load %"class.gpu::gles2::FeatureInfo"*, %"class.gpu::gles2::FeatureInfo"** %10, align 8
  %12 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"* %0 to %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)***
  %13 = load %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)**, %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %13, i64 2
  %15 = load %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %14, align 8
  %16 = call %"class.gpu::TextureBase"* %15(%"class.gpu::SharedImageRepresentationGLTextureBase"* %0) #7
  %17 = getelementptr inbounds %"class.gpu::TextureBase", %"class.gpu::TextureBase"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %3, i64 0, i32 4
  %20 = load %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)**, %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*** %12, align 8
  %21 = getelementptr inbounds %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %20, i64 2
  %22 = load %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, %"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %21, align 8
  %23 = call %"class.gpu::TextureBase"* %22(%"class.gpu::SharedImageRepresentationGLTextureBase"* %0) #7
  %24 = getelementptr inbounds %"class.gpu::TextureBase", %"class.gpu::TextureBase"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %3, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = call zeroext i1 @_ZN3gpu19GetGrBackendTextureEPKNS_5gles211FeatureInfoEjRKN3gfx4SizeEjN3viz14ResourceFormatEP16GrBackendTexture(%"class.gpu::gles2::FeatureInfo"* %11, i32 %18, %"class.gfx::Size"* dereferenceable(8) %19, i32 %25, i32 %27, %class.GrBackendTexture* nonnull %6) #7
  br i1 %28, label %29, label %55

29:                                               ; preds = %5
  %30 = load i8, i8* %9, align 8, !range !2, !noalias !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %50, label %32

32:                                               ; preds = %29
  %33 = call i8* @_Znwm(i64 272) #8, !noalias !3
  %34 = bitcast i8* %33 to %class.SkPromiseImageTexture*
  call void @_ZN21SkPromiseImageTextureC1ERK16GrBackendTexture(%class.SkPromiseImageTexture* nonnull %34, %class.GrBackendTexture* nonnull dereferenceable(176) %6) #7, !noalias !3
  %35 = ptrtoint i8* %33 to i64
  %36 = call i8* @_Znwm(i64 80) #8
  %37 = bitcast i8* %36 to %"class.gpu::SharedImageRepresentation"*
  call void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"* nonnull %37, %"class.gpu::SharedImageManager"* %2, %"class.gpu::SharedImageBacking"* %3, %"class.gpu::MemoryTypeTracker"* %4) #7
  %38 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu31SharedImageRepresentationSkiaGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 40
  %40 = bitcast i8* %39 to i64*
  store i64 %7, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %36, i64 48
  %42 = bitcast i8* %41 to i64*
  store i64 %35, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 56
  %44 = bitcast i8* %43 to i64*
  store i64 %8, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %36, i64 64
  %46 = bitcast i8* %45 to %class.SkSurface**
  store %class.SkSurface* null, %class.SkSurface** %46, align 8
  %47 = getelementptr inbounds i8, i8* %36, i64 72
  %48 = bitcast i8* %47 to i32*
  store i32 0, i32* %48, align 8
  %49 = ptrtoint i8* %36 to i64
  br label %50

50:                                               ; preds = %32, %29
  %51 = phi i64 [ 0, %32 ], [ %8, %29 ]
  %52 = phi i64 [ 0, %32 ], [ %7, %29 ]
  %53 = phi i64 [ %49, %32 ], [ 0, %29 ]
  %54 = inttoptr i64 %51 to %"class.gpu::SharedContextState"*
  br label %55

55:                                               ; preds = %5, %50
  %56 = phi %"class.gpu::SharedContextState"* [ %54, %50 ], [ %1, %5 ]
  %57 = phi i64 [ %52, %50 ], [ %7, %5 ]
  %58 = phi i64 [ %53, %50 ], [ 0, %5 ]
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %9) #7
  %59 = icmp eq %"class.gpu::SharedContextState"* %56, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %56, i64 0, i32 2
  %62 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %61, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #7
  %63 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %61, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %61, i64 -4
  %68 = bitcast %"class.base::RefCounted"* %67 to %"class.gpu::SharedContextState"*
  %69 = bitcast %"class.base::RefCounted"* %67 to void (%"class.gpu::SharedContextState"*)***
  %70 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %70, i64 1
  %72 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %71, align 8
  call void %72(%"class.gpu::SharedContextState"* nonnull %68) #7
  br label %73

73:                                               ; preds = %55, %60, %66
  %74 = icmp eq i64 %57, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %73
  %76 = inttoptr i64 %57 to %"class.gpu::SharedImageRepresentationGLTextureBase"*
  %77 = inttoptr i64 %57 to void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)***
  %78 = load void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)**, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %78, i64 1
  %80 = load void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %79, align 8
  call void %80(%"class.gpu::SharedImageRepresentationGLTextureBase"* nonnull %76) #7
  br label %81

81:                                               ; preds = %73, %75
  %82 = inttoptr i64 %58 to %"class.gpu::SharedImageRepresentationSkiaGL"*
  ret %"class.gpu::SharedImageRepresentationSkiaGL"* %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture*) unnamed_addr #2

declare zeroext i1 @_ZN3gpu19GetGrBackendTextureEPKNS_5gles211FeatureInfoEjRKN3gfx4SizeEjN3viz14ResourceFormatEP16GrBackendTexture(%"class.gpu::gles2::FeatureInfo"*, i32, %"class.gfx::Size"* dereferenceable(8), i32, i32, %class.GrBackendTexture*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGLC2ENSt3__110unique_ptrINS_38SharedImageRepresentationGLTextureBaseENS1_14default_deleteIS3_EEEE5sk_spI21SkPromiseImageTextureE13scoped_refptrINS_18SharedContextStateEEPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentationSkiaGL"*, %"class.gpu::SharedImageRepresentationGLTextureBase"*, %class.sk_sp* nocapture, %"class.gpu::SharedContextState"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*) unnamed_addr #0 align 2 {
  %8 = ptrtoint %"class.gpu::SharedImageRepresentationGLTextureBase"* %1 to i64
  %9 = ptrtoint %"class.gpu::SharedContextState"* %3 to i64
  %10 = bitcast %"class.gpu::SharedImageRepresentationSkiaGL"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"* %10, %"class.gpu::SharedImageManager"* %4, %"class.gpu::SharedImageBacking"* %5, %"class.gpu::MemoryTypeTracker"* %6) #7
  %11 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu31SharedImageRepresentationSkiaGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::unique_ptr.24"* %12 to i64*
  store i64 %8, i64* %13, align 8
  %14 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %16 = bitcast %class.sk_sp* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.SkPromiseImageTexture* null, %class.SkPromiseImageTexture** %15, align 8
  %18 = bitcast %class.sk_sp* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 4
  %20 = bitcast %class.scoped_refptr.34* %19 to i64*
  store i64 %9, i64* %20, align 8
  %21 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 5, i32 0
  store %class.SkSurface* null, %class.SkSurface** %21, align 8
  %22 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 6
  store i32 0, i32* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGLD2Ev(%"class.gpu::SharedImageRepresentationSkiaGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu31SharedImageRepresentationSkiaGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 5, i32 0
  %4 = load %class.SkSurface*, %class.SkSurface** %3, align 8
  store %class.SkSurface* null, %class.SkSurface** %3, align 8
  %5 = icmp eq %class.SkSurface* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkSurface* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkSurface* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #7
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.gpu::SharedImageRepresentationSkiaGL"* %0 to %"class.gpu::SharedImageRepresentation"*
  %18 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 0, i32 0, i32 4
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"** %22 to %"class.gpu::SharedImageRepresentation"**
  %24 = load %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %23, align 8
  %25 = getelementptr inbounds %"class.gpu::SharedImageRepresentation", %"class.gpu::SharedImageRepresentation"* %24, i64 0, i32 4
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.gpu::SharedImageRepresentation", %"class.gpu::SharedImageRepresentation"* %24, i64 0, i32 2
  %27 = load %"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageBacking"** %26, align 8
  tail call void @_ZN3gpu18SharedImageBacking13OnContextLostEv(%"class.gpu::SharedImageBacking"* %27) #7
  br label %28

28:                                               ; preds = %16, %21
  %29 = load %class.SkSurface*, %class.SkSurface** %3, align 8
  %30 = icmp eq %class.SkSurface* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %29, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkSurface* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkSurface* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #7
  br label %41

41:                                               ; preds = %28, %31, %35
  %42 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 4, i32 0
  %43 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %42, align 8
  %44 = icmp eq %"class.gpu::SharedContextState"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %43, i64 0, i32 2
  %47 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %46, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %47) #7
  %48 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %46, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %46, i64 -4
  %53 = bitcast %"class.base::RefCounted"* %52 to %"class.gpu::SharedContextState"*
  %54 = bitcast %"class.base::RefCounted"* %52 to void (%"class.gpu::SharedContextState"*)***
  %55 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %55, i64 1
  %57 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %56, align 8
  tail call void %57(%"class.gpu::SharedContextState"* nonnull %53) #7
  br label %58

58:                                               ; preds = %41, %45, %51
  %59 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 3, i32 0
  %60 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %59, align 8
  %61 = icmp eq %class.SkPromiseImageTexture* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  tail call void @_ZN21SkPromiseImageTextureD1Ev(%class.SkPromiseImageTexture* nonnull %60) #7
  %67 = bitcast %class.SkPromiseImageTexture* %60 to i8*
  tail call void @_ZdlPv(i8* %67) #8
  br label %68

68:                                               ; preds = %58, %62, %66
  %69 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"class.gpu::SharedImageRepresentationGLTextureBase"*, %"class.gpu::SharedImageRepresentationGLTextureBase"** %69, align 8
  store %"class.gpu::SharedImageRepresentationGLTextureBase"* null, %"class.gpu::SharedImageRepresentationGLTextureBase"** %69, align 8
  %71 = icmp eq %"class.gpu::SharedImageRepresentationGLTextureBase"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"* %70 to void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)***
  %74 = load void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)**, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %74, i64 1
  %76 = load void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %75, align 8
  tail call void %76(%"class.gpu::SharedImageRepresentationGLTextureBase"* nonnull %70) #7
  br label %77

77:                                               ; preds = %68, %72
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %17) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGLD0Ev(%"class.gpu::SharedImageRepresentationSkiaGL"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu31SharedImageRepresentationSkiaGLD2Ev(%"class.gpu::SharedImageRepresentationSkiaGL"* %0) #7
  %2 = bitcast %"class.gpu::SharedImageRepresentationSkiaGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGL16BeginWriteAccessEiRK14SkSurfacePropsPNSt3__16vectorI18GrBackendSemaphoreNS4_9allocatorIS6_EEEESA_(%class.sk_sp.203* noalias nocapture sret, %"class.gpu::SharedImageRepresentationSkiaGL"*, i32, %class.SkSurfaceProps* dereferenceable(8), %"class.std::__1::vector.256"* nocapture readnone, %"class.std::__1::vector.256"* nocapture readnone) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.203, align 8
  %8 = alloca %class.GrBackendTexture, align 8
  %9 = alloca %class.sk_sp.257, align 8
  %10 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.gpu::SharedImageRepresentationGLTextureBase"*, %"class.gpu::SharedImageRepresentationGLTextureBase"** %10, align 8
  %12 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"* %11 to i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)***
  %13 = load i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)**, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)** %13, i64 5
  %15 = load i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.gpu::SharedImageRepresentationGLTextureBase"* %11, i32 35575) #7
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %18, align 8
  br label %84

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 6
  store i32 2, i32* %20, align 8
  %21 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 5
  %22 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %21, i64 0, i32 0
  %23 = load %class.SkSurface*, %class.SkSurface** %22, align 8
  %24 = icmp eq %class.SkSurface* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %0, i64 0, i32 0
  %27 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic
  store %class.SkSurface* %23, %class.SkSurface** %26, align 8
  br label %84

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 0, i32 0, i32 2
  %31 = load %"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageBacking"** %30, align 8
  %32 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %31, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = tail call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext true, i32 %33) #7
  %35 = bitcast %class.sk_sp.203* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %7, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %36, align 8
  %37 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 4, i32 0
  %38 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %37, align 8
  %39 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %38, i64 0, i32 15
  %40 = load %class.GrDirectContext*, %class.GrDirectContext** %39, align 8
  %41 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %40, i64 0, i32 0
  %42 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %42) #7
  %43 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 3, i32 0
  %44 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %43, align 8
  %45 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %44, i64 0, i32 3
  call void @_ZN16GrBackendTextureC1ERKS_(%class.GrBackendTexture* nonnull %8, %class.GrBackendTexture* dereferenceable(176) %45) #7
  %46 = load %"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageBacking"** %30, align 8
  %47 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %46, i64 0, i32 6
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %46, i64 0, i32 5
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp.257* nonnull sret %9, %"class.gfx::ColorSpace"* %49) #7
  call void @_ZN9SkSurface22MakeFromBackendTextureEP18GrRecordingContextRK16GrBackendTexture15GrSurfaceOrigini11SkColorType5sk_spI12SkColorSpaceEPK14SkSurfacePropsPFvPvESD_(%class.sk_sp.203* nonnull sret %7, %class.GrRecordingContext* %41, %class.GrBackendTexture* nonnull dereferenceable(176) %8, i32 %48, i32 %2, i32 %34, %class.sk_sp.257* nonnull %9, %class.SkSurfaceProps* %3, void (i8*)* null, i8* null) #7
  %50 = getelementptr inbounds %class.sk_sp.257, %class.sk_sp.257* %9, i64 0, i32 0
  %51 = load %class.SkColorSpace*, %class.SkColorSpace** %50, align 8
  %52 = icmp eq %class.SkColorSpace* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %29
  %54 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = bitcast %class.SkColorSpace* %51 to i8*
  call void @_ZdlPv(i8* %58) #8
  br label %59

59:                                               ; preds = %29, %53, %57
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %42) #7
  %60 = icmp eq %class.sk_sp.203* %21, %7
  br i1 %60, label %80, label %61

61:                                               ; preds = %59
  %62 = load %class.SkSurface*, %class.SkSurface** %36, align 8
  %63 = icmp eq %class.SkSurface* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %64, %61
  %68 = load %class.SkSurface*, %class.SkSurface** %22, align 8
  store %class.SkSurface* %62, %class.SkSurface** %22, align 8
  %69 = icmp eq %class.SkSurface* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %68, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkSurface* %68 to %class.SkRefCntBase*
  %76 = bitcast %class.SkSurface* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #7
  br label %80

80:                                               ; preds = %74, %70, %67, %59
  %81 = bitcast %class.sk_sp.203* %7 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %class.sk_sp.203* %0 to i64*
  store i64 %82, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  br label %84

84:                                               ; preds = %80, %25, %17
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGL12CheckContextEv(%"class.gpu::SharedImageRepresentationSkiaGL"* nocapture) local_unnamed_addr #6 align 2 {
  ret void
}

declare i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext, i32) local_unnamed_addr #2

declare void @_ZN9SkSurface22MakeFromBackendTextureEP18GrRecordingContextRK16GrBackendTexture15GrSurfaceOrigini11SkColorType5sk_spI12SkColorSpaceEPK14SkSurfacePropsPFvPvESD_(%class.sk_sp.203* sret, %class.GrRecordingContext*, %class.GrBackendTexture* dereferenceable(176), i32, i32, i32, %class.sk_sp.257*, %class.SkSurfaceProps*, void (i8*)*, i8*) local_unnamed_addr #2

declare void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp.257* sret, %"class.gfx::ColorSpace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGL16BeginWriteAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_PNS1_10unique_ptrI28GrBackendSurfaceMutableStateNS1_14default_deleteIS9_EEEE(%class.sk_sp* noalias nocapture sret, %"class.gpu::SharedImageRepresentationSkiaGL"* nocapture, %"class.std::__1::vector.256"* nocapture readnone, %"class.std::__1::vector.256"* nocapture readnone, %"class.std::__1::unique_ptr.259"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.gpu::SharedImageRepresentationGLTextureBase"*, %"class.gpu::SharedImageRepresentationGLTextureBase"** %6, align 8
  %8 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"* %7 to i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)***
  %9 = load i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)**, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)** %9, i64 5
  %11 = load i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.gpu::SharedImageRepresentationGLTextureBase"* %7, i32 35575) #7
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPromiseImageTexture* null, %class.SkPromiseImageTexture** %14, align 8
  br label %25

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 6
  store i32 2, i32* %16, align 8
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 3, i32 0
  %19 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %18, align 8
  %20 = icmp eq %class.SkPromiseImageTexture* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %15, %21
  store %class.SkPromiseImageTexture* %19, %class.SkPromiseImageTexture** %17, align 8
  br label %25

25:                                               ; preds = %24, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGL14EndWriteAccessE5sk_spI9SkSurfaceE(%"class.gpu::SharedImageRepresentationSkiaGL"* nocapture, %class.sk_sp.203* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %1, i64 0, i32 0
  %4 = load %class.SkSurface*, %class.SkSurface** %3, align 8
  %5 = icmp eq %class.SkSurface* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  store %class.SkSurface* null, %class.SkSurface** %3, align 8
  %7 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkSurface* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkSurface* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #7
  br label %16

16:                                               ; preds = %2, %10, %6
  %17 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %"class.gpu::SharedImageRepresentationGLTextureBase"*, %"class.gpu::SharedImageRepresentationGLTextureBase"** %17, align 8
  %19 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"* %18 to void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)***
  %20 = load void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)**, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %20, i64 6
  %22 = load void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %21, align 8
  tail call void %22(%"class.gpu::SharedImageRepresentationGLTextureBase"* %18) #7
  %23 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 6
  store i32 0, i32* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGL15BeginReadAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_(%class.sk_sp* noalias nocapture sret, %"class.gpu::SharedImageRepresentationSkiaGL"* nocapture, %"class.std::__1::vector.256"* nocapture readnone, %"class.std::__1::vector.256"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.gpu::SharedImageRepresentationGLTextureBase"*, %"class.gpu::SharedImageRepresentationGLTextureBase"** %5, align 8
  %7 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"* %6 to i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)***
  %8 = load i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)**, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)** %8, i64 5
  %10 = load i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)*, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.gpu::SharedImageRepresentationGLTextureBase"* %6, i32 35574) #7
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPromiseImageTexture* null, %class.SkPromiseImageTexture** %13, align 8
  br label %24

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 6
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %1, i64 0, i32 3, i32 0
  %18 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %17, align 8
  %19 = icmp eq %class.SkPromiseImageTexture* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %14, %20
  store %class.SkPromiseImageTexture* %18, %class.SkPromiseImageTexture** %16, align 8
  br label %24

24:                                               ; preds = %23, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31SharedImageRepresentationSkiaGL13EndReadAccessEv(%"class.gpu::SharedImageRepresentationSkiaGL"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::SharedImageRepresentationGLTextureBase"*, %"class.gpu::SharedImageRepresentationGLTextureBase"** %2, align 8
  %4 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"* %3 to void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)***
  %5 = load void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)**, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %5, i64 6
  %7 = load void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, void (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %6, align 8
  tail call void %7(%"class.gpu::SharedImageRepresentationGLTextureBase"* %3) #7
  %8 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 6
  store i32 0, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu31SharedImageRepresentationSkiaGL36SupportsMultipleConcurrentReadAccessEv(%"class.gpu::SharedImageRepresentationSkiaGL"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkiaGL", %"class.gpu::SharedImageRepresentationSkiaGL"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::SharedImageRepresentationGLTextureBase"*, %"class.gpu::SharedImageRepresentationGLTextureBase"** %2, align 8
  %4 = bitcast %"class.gpu::SharedImageRepresentationGLTextureBase"* %3 to i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*)***
  %5 = load i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*)**, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %5, i64 7
  %7 = load i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*)*, i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.gpu::SharedImageRepresentationGLTextureBase"* %3) #7
  ret i1 %8
}

declare void @_ZN3gpu29SharedImageRepresentationSkia16BeginWriteAccessEiRK14SkSurfacePropsPNSt3__16vectorI18GrBackendSemaphoreNS4_9allocatorIS6_EEEESA_PNS4_10unique_ptrI28GrBackendSurfaceMutableStateNS4_14default_deleteISC_EEEE(%class.sk_sp.203* sret, %"class.gpu::SharedImageRepresentationSkia"*, i32, %class.SkSurfaceProps* dereferenceable(8), %"class.std::__1::vector.256"*, %"class.std::__1::vector.256"*, %"class.std::__1::unique_ptr.259"*) unnamed_addr #2

declare void @_ZN3gpu29SharedImageRepresentationSkia15BeginReadAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_PNS1_10unique_ptrI28GrBackendSurfaceMutableStateNS1_14default_deleteIS9_EEEE(%class.sk_sp* sret, %"class.gpu::SharedImageRepresentationSkia"*, %"class.std::__1::vector.256"*, %"class.std::__1::vector.256"*, %"class.std::__1::unique_ptr.259"*) unnamed_addr #2

declare void @_ZN21SkPromiseImageTextureC1ERK16GrBackendTexture(%class.SkPromiseImageTexture*, %class.GrBackendTexture* dereferenceable(176)) unnamed_addr #2

declare void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*) unnamed_addr #2

declare void @_ZN3gpu18SharedImageBacking13OnContextLostEv(%"class.gpu::SharedImageBacking"*) local_unnamed_addr #2

declare void @_ZN16GrBackendTextureC1ERKS_(%class.GrBackendTexture*, %class.GrBackendTexture* dereferenceable(176)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #7
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #7
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #7
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #7
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #7
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #8
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #7
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #7
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #8
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #7
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN21SkPromiseImageTextureD1Ev(%class.SkPromiseImageTexture*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN21SkPromiseImageTexture4MakeERK16GrBackendTexture: argument 0"}
!5 = distinct !{!5, !"_ZN21SkPromiseImageTexture4MakeERK16GrBackendTexture"}
