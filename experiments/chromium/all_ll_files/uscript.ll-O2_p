; ModuleID = '../../third_party/icu/source/common/uscript.cpp'
source_filename = "../../third_party/icu/source/common/uscript.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::CharStringByteSink" = type { %"class.icu_69::ByteSink", %"class.icu_69::CharString"* }
%"class.icu_69::ByteSink" = type { i32 (...)** }

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@.str = private unnamed_addr constant [3 x i8] c"ja\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"ko\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"zh\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"Hant\00", align 1

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #9
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #9
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #9
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #9
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #9
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #9
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #9
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uscript_getCode_69(i8*, i32*, i32, i32* nocapture) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.icu_69::CharString", align 8
  %7 = alloca %"class.icu_69::CharStringByteSink", align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  store i32 -1431655766, i32* %5, align 4
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %83

11:                                               ; preds = %4
  %12 = icmp eq i8* %0, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %11
  %14 = icmp eq i32* %1, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = icmp eq i32 %2, 0
  br i1 %16, label %20, label %19

17:                                               ; preds = %13
  %18 = icmp slt i32 %2, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %17, %11
  store i32 1, i32* %3, align 4
  br label %83

20:                                               ; preds = %15, %17
  %21 = tail call i8* @strchr(i8* nonnull %0, i32 45) #10
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %36

23:                                               ; preds = %20
  %24 = tail call i8* @strchr(i8* nonnull %0, i32 95) #10
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %36

26:                                               ; preds = %23
  %27 = tail call i32 @u_getPropertyValueEnum_69(i32 4106, i8* nonnull %0) #9
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %36, label %29

29:                                               ; preds = %26
  %30 = load i32, i32* %3, align 4
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %32, label %83

32:                                               ; preds = %29
  %33 = icmp slt i32 %2, 1
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  store i32 15, i32* %3, align 4
  br label %83

35:                                               ; preds = %32
  store i32 %27, i32* %1, align 4
  br label %83

36:                                               ; preds = %26, %23, %20
  %37 = phi i8 [ 0, %23 ], [ 0, %20 ], [ 1, %26 ]
  store i32 0, i32* %5, align 4
  %38 = tail call fastcc i32 @_ZL18getCodesFromLocalePKcP11UScriptCodeiP10UErrorCode(i8* nonnull %0, i32* %1, i32 %2, i32* %3)
  %39 = load i32, i32* %3, align 4
  %40 = icmp sgt i32 %39, 0
  %41 = icmp ne i32 %38, 0
  %42 = or i1 %41, %40
  br i1 %42, label %83, label %43

43:                                               ; preds = %36
  %44 = bitcast %"class.icu_69::CharString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 64, i1 false)
  %45 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %6, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %6, i64 0, i32 0, i32 3, i64 0
  store i8* %46, i8** %45, align 8
  %47 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %6, i64 0, i32 0, i32 1
  store i32 40, i32* %47, align 8
  %48 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %6, i64 0, i32 0, i32 2
  store i8 0, i8* %48, align 4
  %49 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %6, i64 0, i32 1
  store i32 0, i32* %49, align 8
  store i8 0, i8* %46, align 1
  %50 = bitcast %"class.icu_69::CharStringByteSink"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = bitcast %"class.icu_69::CharStringByteSink"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  call void @_ZN6icu_6918CharStringByteSinkC1EPNS_10CharStringE(%"class.icu_69::CharStringByteSink"* nonnull %7, %"class.icu_69::CharString"* nonnull %6) #9
  %52 = getelementptr inbounds %"class.icu_69::CharStringByteSink", %"class.icu_69::CharStringByteSink"* %7, i64 0, i32 0
  call void @ulocimp_addLikelySubtags_69(i8* nonnull %0, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %52, i32* nonnull %5) #9
  call void @_ZN6icu_6918CharStringByteSinkD1Ev(%"class.icu_69::CharStringByteSink"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  %53 = load i32, i32* %5, align 4
  %54 = icmp slt i32 %53, 1
  %55 = icmp ne i32 %53, -124
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %43
  %58 = load i8*, i8** %45, align 8
  %59 = call fastcc i32 @_ZL18getCodesFromLocalePKcP11UScriptCodeiP10UErrorCode(i8* %58, i32* %1, i32 %2, i32* %3)
  %60 = load i32, i32* %3, align 4
  %61 = icmp sgt i32 %60, 0
  %62 = icmp ne i32 %59, 0
  %63 = or i1 %62, %61
  br i1 %63, label %76, label %64

64:                                               ; preds = %57, %43
  %65 = icmp eq i8 %37, 0
  br i1 %65, label %66, label %76

66:                                               ; preds = %64
  %67 = call i32 @u_getPropertyValueEnum_69(i32 4106, i8* nonnull %0) #9
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %76, label %69

69:                                               ; preds = %66
  %70 = load i32, i32* %3, align 4
  %71 = icmp slt i32 %70, 1
  br i1 %71, label %72, label %76

72:                                               ; preds = %69
  %73 = icmp slt i32 %2, 1
  br i1 %73, label %74, label %75

74:                                               ; preds = %72
  store i32 15, i32* %3, align 4
  br label %76

75:                                               ; preds = %72
  store i32 %67, i32* %1, align 4
  br label %76

76:                                               ; preds = %75, %74, %69, %64, %66, %57
  %77 = phi i32 [ %59, %57 ], [ 0, %66 ], [ 0, %64 ], [ 0, %69 ], [ 1, %75 ], [ 1, %74 ]
  %78 = load i8, i8* %48, align 4
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = load i8*, i8** %45, align 8
  call void @uprv_free_69(i8* %81) #9
  br label %82

82:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %44) #9
  br label %83

83:                                               ; preds = %35, %34, %29, %36, %4, %82, %19
  %84 = phi i32 [ 0, %19 ], [ %77, %82 ], [ 0, %4 ], [ %38, %36 ], [ 0, %29 ], [ 1, %35 ], [ 1, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  ret i32 %84
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #5

declare i32 @u_getPropertyValueEnum_69(i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL18getCodesFromLocalePKcP11UScriptCodeiP10UErrorCode(i8*, i32* nocapture, i32, i32* nocapture) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  store i32 0, i32* %5, align 4
  %9 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store i64 0, i64* %6, align 8
  %10 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store i64 0, i64* %7, align 8
  %11 = load i32, i32* %3, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %77

13:                                               ; preds = %4
  %14 = call i32 @uloc_getLanguage_69(i8* %0, i8* nonnull %9, i32 8, i32* nonnull %5) #9
  %15 = load i32, i32* %5, align 4
  %16 = icmp sgt i32 %15, 0
  %17 = icmp eq i32 %15, -124
  %18 = or i1 %16, %17
  br i1 %18, label %77, label %19

19:                                               ; preds = %13
  %20 = call i32 @bcmp(i8* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 3)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %31

22:                                               ; preds = %19
  %23 = load i32, i32* %3, align 4
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %77

25:                                               ; preds = %22
  %26 = icmp slt i32 %2, 3
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  store i32 22, i32* %1, align 4
  %28 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 20, i32* %28, align 4
  %29 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 17, i32* %29, align 4
  br label %77

30:                                               ; preds = %25
  store i32 15, i32* %3, align 4
  br label %77

31:                                               ; preds = %19
  %32 = call i32 @bcmp(i8* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 3)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = load i32, i32* %3, align 4
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %37, label %77

37:                                               ; preds = %34
  %38 = icmp slt i32 %2, 2
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  store i32 18, i32* %1, align 4
  %40 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 17, i32* %40, align 4
  br label %77

41:                                               ; preds = %37
  store i32 15, i32* %3, align 4
  br label %77

42:                                               ; preds = %31
  %43 = call i32 @uloc_getScript_69(i8* %0, i8* nonnull %10, i32 8, i32* nonnull %5) #9
  %44 = load i32, i32* %5, align 4
  %45 = icmp sgt i32 %44, 0
  %46 = icmp eq i32 %44, -124
  %47 = or i1 %45, %46
  br i1 %47, label %77, label %48

48:                                               ; preds = %42
  %49 = call i32 @bcmp(i8* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 3)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %62

51:                                               ; preds = %48
  %52 = call i32 @bcmp(i8* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 5)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %51
  %55 = load i32, i32* %3, align 4
  %56 = icmp slt i32 %55, 1
  br i1 %56, label %57, label %77

57:                                               ; preds = %54
  %58 = icmp slt i32 %2, 2
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  store i32 17, i32* %1, align 4
  %60 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 5, i32* %60, align 4
  br label %77

61:                                               ; preds = %57
  store i32 15, i32* %3, align 4
  br label %77

62:                                               ; preds = %51, %48
  %63 = icmp eq i32 %43, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %62
  %65 = call i32 @u_getPropertyValueEnum_69(i32 4106, i8* nonnull %10) #9
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = add i32 %65, -73
  %69 = icmp ult i32 %68, 2
  %70 = select i1 %69, i32 17, i32 %65
  %71 = load i32, i32* %3, align 4
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %73, label %77

73:                                               ; preds = %67
  %74 = icmp slt i32 %2, 1
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  store i32 15, i32* %3, align 4
  br label %77

76:                                               ; preds = %73
  store i32 %70, i32* %1, align 4
  br label %77

77:                                               ; preds = %59, %39, %27, %76, %75, %67, %62, %64, %61, %54, %41, %34, %30, %22, %42, %13, %4
  %78 = phi i32 [ 0, %4 ], [ 0, %13 ], [ 0, %42 ], [ 3, %30 ], [ 0, %22 ], [ 2, %41 ], [ 0, %34 ], [ 2, %61 ], [ 0, %54 ], [ 0, %64 ], [ 0, %62 ], [ 0, %67 ], [ 1, %76 ], [ 1, %75 ], [ 3, %27 ], [ 2, %39 ], [ 2, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  ret i32 %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6icu_6918CharStringByteSinkC1EPNS_10CharStringE(%"class.icu_69::CharStringByteSink"*, %"class.icu_69::CharString"*) unnamed_addr #4

declare void @ulocimp_addLikelySubtags_69(i8*, %"class.icu_69::ByteSink"* dereferenceable(8), i32*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6918CharStringByteSinkD1Ev(%"class.icu_69::CharStringByteSink"*) unnamed_addr #6

declare i32 @uloc_getLanguage_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare i32 @uloc_getScript_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
