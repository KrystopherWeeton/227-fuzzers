; ModuleID = '../../base/environment.cc'
source_filename = "../../base/environment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::Environment" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::(anonymous namespace)::EnvironmentImpl" = type { %"class.base::Environment" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN4base8env_vars5kHomeE = hidden local_unnamed_addr constant [5 x i8] c"HOME\00", align 1
@_ZTVN4base11EnvironmentE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Environment"*)* @_ZN4base11EnvironmentD2Ev to i8*), i8* bitcast (void (%"class.base::Environment"*)* @_ZN4base11EnvironmentD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.base::Environment"*, i8*, i64)* @_ZN4base11Environment6HasVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN4base12_GLOBAL__N_115EnvironmentImplE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Environment"*)* @_ZN4base11EnvironmentD2Ev to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::EnvironmentImpl"*)* @_ZN4base12_GLOBAL__N_115EnvironmentImplD0Ev to i8*), i8* bitcast (i1 (%"class.base::(anonymous namespace)::EnvironmentImpl"*, i8*, i64, %"class.std::__1::basic_string"*)* @_ZN4base12_GLOBAL__N_115EnvironmentImpl6GetVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::Environment"*, i8*, i64)* @_ZN4base11Environment6HasVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (i1 (%"class.base::(anonymous namespace)::EnvironmentImpl"*, i8*, i64, %"class.std::__1::basic_string"*)* @_ZN4base12_GLOBAL__N_115EnvironmentImpl6SetVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::(anonymous namespace)::EnvironmentImpl"*, i8*, i64)* @_ZN4base12_GLOBAL__N_115EnvironmentImpl8UnSetVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*)] }, align 8

@_ZN4base11EnvironmentD1Ev = hidden unnamed_addr alias void (%"class.base::Environment"*), void (%"class.base::Environment"*)* @_ZN4base11EnvironmentD2Ev

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base11EnvironmentD0Ev(%"class.base::Environment"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Environment"* @_ZN4base11Environment6CreateEv() local_unnamed_addr #2 align 2 {
  %1 = tail call i8* @_Znwm(i64 8) #16
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base12_GLOBAL__N_115EnvironmentImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %"class.base::Environment"*
  ret %"class.base::Environment"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11Environment6HasVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Environment"*, i8*, i64) unnamed_addr #2 align 2 {
  %4 = bitcast %"class.base::Environment"* %0 to i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)***
  %5 = load i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)**, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)** %5, i64 2
  %7 = load i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.base::Environment"* %0, i8* %1, i64 %2, %"class.std::__1::basic_string"* null) #17
  ret i1 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base11EnvironmentD2Ev(%"class.base::Environment"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_115EnvironmentImplD0Ev(%"class.base::(anonymous namespace)::EnvironmentImpl"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.base::(anonymous namespace)::EnvironmentImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base12_GLOBAL__N_115EnvironmentImpl6GetVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::(anonymous namespace)::EnvironmentImpl"* nocapture readnone, i8*, i64, %"class.std::__1::basic_string"*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %2, i64* %10, align 8
  %11 = tail call i8* @getenv(i8* %1) #17
  %12 = icmp eq i8* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %4
  %14 = icmp eq %"class.std::__1::basic_string"* %3, null
  br i1 %14, label %107, label %15

15:                                               ; preds = %13
  %16 = load i8, i8* %11, align 1
  %17 = tail call i1 @llvm.is.constant.i8(i8 %16) #17
  br i1 %17, label %18, label %41

18:                                               ; preds = %15
  %19 = tail call i64 @strlen(i8* nonnull %11) #17
  %20 = icmp ult i64 %19, 23
  br i1 %20, label %21, label %39

21:                                               ; preds = %18
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  br label %33

30:                                               ; preds = %21
  %31 = trunc i64 %19 to i8
  store i8 %31, i8* %23, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %33

33:                                               ; preds = %30, %26
  %34 = phi i8* [ %29, %26 ], [ %32, %30 ]
  %35 = icmp eq i64 %19, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %34, i8* nonnull align 1 %11, i64 %19, i1 false) #17
  br label %37

37:                                               ; preds = %36, %33
  %38 = getelementptr inbounds i8, i8* %34, i64 %19
  store i8 0, i8* %38, align 1
  br label %107

39:                                               ; preds = %18
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* nonnull %11, i64 %19) #17
  br label %107

41:                                               ; preds = %15
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* nonnull %11) #17
  br label %107

43:                                               ; preds = %4
  %44 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 0) #17
  %45 = load i8, i8* %44, align 1
  %46 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #17
  %48 = add i8 %45, -97
  %49 = icmp ult i8 %48, 26
  br i1 %49, label %50, label %54

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #17
  %52 = load i8*, i8** %9, align 8
  %53 = load i64, i64* %10, align 8
  call void @_ZN4base12ToUpperASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %52, i64 %53) #17
  br label %61

54:                                               ; preds = %43
  %55 = add i8 %45, -65
  %56 = icmp ult i8 %55, 26
  br i1 %56, label %57, label %105

57:                                               ; preds = %54
  %58 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #17
  %59 = load i8*, i8** %9, align 8
  %60 = load i64, i64* %10, align 8
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i8* %59, i64 %60) #17
  br label %61

61:                                               ; preds = %57, %50
  %62 = phi i8* [ %58, %57 ], [ %51, %50 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %62, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #17
  %63 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %47, align 8
  %68 = select i1 %66, i8* %67, i8* %46
  %69 = call i8* @getenv(i8* %68) #17
  %70 = icmp eq i8* %69, null
  br i1 %70, label %101, label %71

71:                                               ; preds = %61
  %72 = icmp eq %"class.std::__1::basic_string"* %3, null
  br i1 %72, label %101, label %73

73:                                               ; preds = %71
  %74 = load i8, i8* %69, align 1
  %75 = call i1 @llvm.is.constant.i8(i8 %74) #17
  br i1 %75, label %76, label %99

76:                                               ; preds = %73
  %77 = call i64 @strlen(i8* nonnull %69) #17
  %78 = icmp ult i64 %77, 23
  br i1 %78, label %79, label %97

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %77, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  br label %91

88:                                               ; preds = %79
  %89 = trunc i64 %77 to i8
  store i8 %89, i8* %81, align 1
  %90 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %91

91:                                               ; preds = %88, %84
  %92 = phi i8* [ %87, %84 ], [ %90, %88 ]
  %93 = icmp eq i64 %77, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %91
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %92, i8* nonnull align 1 %69, i64 %77, i1 false) #17
  br label %95

95:                                               ; preds = %94, %91
  %96 = getelementptr inbounds i8, i8* %92, i64 %77
  store i8 0, i8* %96, align 1
  br label %101

97:                                               ; preds = %76
  %98 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* nonnull %69, i64 %77) #17
  br label %101

99:                                               ; preds = %73
  %100 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* nonnull %69) #17
  br label %101

101:                                              ; preds = %99, %97, %95, %71, %61
  %102 = phi i1 [ false, %61 ], [ true, %71 ], [ true, %95 ], [ true, %97 ], [ true, %99 ]
  %103 = icmp slt i8 %65, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZdlPv(i8* %67) #16
  br label %105

105:                                              ; preds = %54, %101, %104
  %106 = phi i1 [ %102, %101 ], [ %102, %104 ], [ false, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #17
  br label %107

107:                                              ; preds = %41, %39, %37, %13, %105
  %108 = phi i1 [ %106, %105 ], [ true, %13 ], [ true, %37 ], [ true, %39 ], [ true, %41 ]
  ret i1 %108
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base12_GLOBAL__N_115EnvironmentImpl6SetVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::(anonymous namespace)::EnvironmentImpl"* nocapture readnone, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = tail call i32 @setenv(i8* %1, i8* %12, i32 1) #17
  %14 = icmp eq i32 %13, 0
  ret i1 %14
}

; Function Attrs: nofree nounwind ssp uwtable
define internal zeroext i1 @_ZN4base12_GLOBAL__N_115EnvironmentImpl8UnSetVarENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::(anonymous namespace)::EnvironmentImpl"* nocapture readnone, i8* nocapture readonly, i64) unnamed_addr #7 align 2 {
  %4 = tail call i32 @unsetenv(i8* %1) #17
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN4base12ToUpperASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #9

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #2 align 2

; Function Attrs: nounwind
declare i32 @setenv(i8*, i8*, i32) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare i32 @unsetenv(i8* nocapture readonly) local_unnamed_addr #14

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
