; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_event.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_event.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }
%class.CFWL_Widget = type opaque

@_ZTV10CFWL_Event = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_Event*)* @_ZN10CFWL_EventD2Ev to i8*), i8* bitcast (void (%class.CFWL_Event*)* @_ZN10CFWL_EventD0Ev to i8*)] }, align 8

@_ZN10CFWL_EventC1ENS_4TypeE = hidden unnamed_addr alias void (%class.CFWL_Event*, i32), void (%class.CFWL_Event*, i32)* @_ZN10CFWL_EventC2ENS_4TypeE
@_ZN10CFWL_EventC1ENS_4TypeEP11CFWL_Widget = hidden unnamed_addr alias void (%class.CFWL_Event*, i32, %class.CFWL_Widget*), void (%class.CFWL_Event*, i32, %class.CFWL_Widget*)* @_ZN10CFWL_EventC2ENS_4TypeEP11CFWL_Widget
@_ZN10CFWL_EventC1ENS_4TypeEP11CFWL_WidgetS2_ = hidden unnamed_addr alias void (%class.CFWL_Event*, i32, %class.CFWL_Widget*, %class.CFWL_Widget*), void (%class.CFWL_Event*, i32, %class.CFWL_Widget*, %class.CFWL_Widget*)* @_ZN10CFWL_EventC2ENS_4TypeEP11CFWL_WidgetS2_
@_ZN10CFWL_EventD1Ev = hidden unnamed_addr alias void (%class.CFWL_Event*), void (%class.CFWL_Event*)* @_ZN10CFWL_EventD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10CFWL_EventC2ENS_4TypeE(%class.CFWL_Event* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV10CFWL_Event, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 2
  %6 = bitcast %class.CFWL_Widget** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10CFWL_EventC2ENS_4TypeEP11CFWL_Widget(%class.CFWL_Event* nocapture, i32, %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV10CFWL_Event, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 2
  store %class.CFWL_Widget* %2, %class.CFWL_Widget** %6, align 8
  %7 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 3
  store %class.CFWL_Widget* null, %class.CFWL_Widget** %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10CFWL_EventC2ENS_4TypeEP11CFWL_WidgetS2_(%class.CFWL_Event* nocapture, i32, %class.CFWL_Widget*, %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV10CFWL_Event, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 2
  store %class.CFWL_Widget* %2, %class.CFWL_Widget** %7, align 8
  %8 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %0, i64 0, i32 3
  store %class.CFWL_Widget* %3, %class.CFWL_Widget** %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10CFWL_EventD2Ev(%class.CFWL_Event* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CFWL_EventD0Ev(%class.CFWL_Event*) unnamed_addr #2 align 2 {
  %2 = bitcast %class.CFWL_Event* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
