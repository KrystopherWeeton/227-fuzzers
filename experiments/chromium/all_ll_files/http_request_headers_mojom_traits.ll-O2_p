; ModuleID = '../../services/network/public/cpp/http_request_headers_mojom_traits.cc'
source_filename = "../../services/network/public/cpp/http_request_headers_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.network::mojom::internal::HttpRequestHeaders_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.25" }
%"struct.mojo::internal::Pointer.25" = type { i64 }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }

@.str = private unnamed_addr constant [11 x i8] c"header_key\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"header_value\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom37HttpRequestHeaderKeyValuePairDataViewEN3net18HttpRequestHeaders18HeaderKeyValuePairEE4ReadES3_PS6_(%"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"*, %"class.mojo::Message"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data", %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = bitcast %"struct.mojo::internal::Pointer"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  br i1 %10, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2 to i8*
  br label %60

15:                                               ; preds = %3
  %16 = getelementptr inbounds i8, i8* %12, i64 8
  %17 = getelementptr inbounds i8, i8* %12, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = zext i32 %19 to i64
  %21 = tail call i1 @llvm.is.constant.i64(i64 %20) #7
  %22 = icmp ult i32 %19, 23
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %42

24:                                               ; preds = %15
  %25 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  br label %36

33:                                               ; preds = %24
  %34 = trunc i32 %19 to i8
  store i8 %34, i8* %26, align 1
  %35 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2 to i8*
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi i8* [ %32, %29 ], [ %35, %33 ]
  %38 = icmp eq i32 %19, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %16, i64 %20, i1 false) #7
  br label %40

40:                                               ; preds = %39, %36
  %41 = getelementptr inbounds i8, i8* %37, i64 %20
  store i8 0, i8* %41, align 1
  br label %45

42:                                               ; preds = %15
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %16, i64 %20) #7
  %44 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %45

45:                                               ; preds = %42, %40
  %46 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %25, %40 ]
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2 to i8*
  %53 = select i1 %49, i8* %51, i8* %52
  %54 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %48 to i64
  %57 = select i1 %49, i64 %55, i64 %56
  %58 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %53, i64 %57) #7
  br i1 %58, label %60, label %59

59:                                               ; preds = %45
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #7
  br label %60

60:                                               ; preds = %13, %59, %45
  %61 = phi i8* [ %14, %13 ], [ %52, %59 ], [ %52, %45 ]
  %62 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = select i1 %65, i8* %67, i8* %61
  %69 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %64 to i64
  %72 = select i1 %65, i64 %70, i64 %71
  %73 = tail call zeroext i1 @_ZN3net8HttpUtil17IsValidHeaderNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %68, i64 %72) #7
  br i1 %73, label %75, label %74

74:                                               ; preds = %60
  tail call void @_ZN7network5debug32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10) #7
  br label %187

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 1
  %77 = getelementptr inbounds %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data", %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"* %0, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %77, i64 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  %81 = bitcast %"struct.mojo::internal::Pointer"* %77 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 %79
  br i1 %80, label %83, label %85

83:                                               ; preds = %75
  %84 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  br label %130

85:                                               ; preds = %75
  %86 = getelementptr inbounds i8, i8* %82, i64 8
  %87 = getelementptr inbounds i8, i8* %82, i64 4
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 1
  %90 = zext i32 %89 to i64
  %91 = tail call i1 @llvm.is.constant.i64(i64 %90) #7
  %92 = icmp ult i32 %89, 23
  %93 = and i1 %92, %91
  br i1 %93, label %94, label %112

94:                                               ; preds = %85
  %95 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %90, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  br label %106

103:                                              ; preds = %94
  %104 = trunc i32 %89 to i8
  store i8 %104, i8* %96, align 1
  %105 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  br label %106

106:                                              ; preds = %103, %99
  %107 = phi i8* [ %102, %99 ], [ %105, %103 ]
  %108 = icmp eq i32 %89, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %86, i64 %90, i1 false) #7
  br label %110

110:                                              ; preds = %109, %106
  %111 = getelementptr inbounds i8, i8* %107, i64 %90
  store i8 0, i8* %111, align 1
  br label %115

112:                                              ; preds = %85
  %113 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %76, i8* %86, i64 %90) #7
  %114 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %115

115:                                              ; preds = %112, %110
  %116 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %114, %112 ], [ %95, %110 ]
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %123 = select i1 %119, i8* %121, i8* %122
  %124 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = zext i8 %118 to i64
  %127 = select i1 %119, i64 %125, i64 %126
  %128 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %123, i64 %127) #7
  br i1 %128, label %130, label %129

129:                                              ; preds = %115
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #7
  br label %130

130:                                              ; preds = %83, %129, %115
  %131 = phi i8* [ %84, %83 ], [ %122, %129 ], [ %122, %115 ]
  %132 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #7
  %133 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #7
  %134 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %135 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = select i1 %138, i8* %140, i8* %131
  store i8* %141, i8** %134, align 8
  %142 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %143 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %137 to i64
  %146 = select i1 %138, i64 %144, i64 %145
  store i64 %146, i64* %142, align 8
  %147 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #7
  %148 = extractvalue { i8*, i64 } %147, 0
  %149 = extractvalue { i8*, i64 } %147, 1
  %150 = icmp ugt i64 %149, -17
  br i1 %150, label %151, label %153

151:                                              ; preds = %130
  %152 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %152) #8
  unreachable

153:                                              ; preds = %130
  %154 = icmp ult i64 %149, 23
  br i1 %154, label %163, label %155

155:                                              ; preds = %153
  %156 = add nuw i64 %149, 16
  %157 = and i64 %156, -16
  %158 = call i8* @_Znwm(i64 %157) #9
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %158, i8** %159, align 8, !alias.scope !2
  %160 = or i64 %157, -9223372036854775808
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %160, i64* %161, align 8, !alias.scope !2
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %149, i64* %162, align 8, !alias.scope !2
  br label %168

163:                                              ; preds = %153
  %164 = trunc i64 %149 to i8
  %165 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  store i8 %164, i8* %166, align 1, !alias.scope !2
  %167 = icmp eq i64 %149, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %163, %155
  %169 = phi i8* [ %158, %155 ], [ %132, %163 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* align 1 %148, i64 %149, i1 false) #7
  br label %170

170:                                              ; preds = %163, %168
  %171 = phi i8* [ %132, %163 ], [ %169, %168 ]
  %172 = getelementptr inbounds i8, i8* %171, i64 %149
  store i8 0, i8* %172, align 1
  %173 = load i8, i8* %136, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %170
  %176 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %176) #9
  br label %177

177:                                              ; preds = %175, %170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %132, i64 24, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #7
  %178 = load i8, i8* %136, align 1
  %179 = icmp slt i8 %178, 0
  %180 = load i8*, i8** %139, align 8
  %181 = select i1 %179, i8* %180, i8* %131
  %182 = load i64, i64* %143, align 8
  %183 = zext i8 %178 to i64
  %184 = select i1 %179, i64 %182, i64 %183
  %185 = call zeroext i1 @_ZN3net8HttpUtil18IsValidHeaderValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %181, i64 %184) #7
  br i1 %185, label %187, label %186

186:                                              ; preds = %177
  call void @_ZN7network5debug32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12) #7
  br label %187

187:                                              ; preds = %177, %186, %74
  %188 = phi i1 [ false, %74 ], [ false, %186 ], [ true, %177 ]
  ret i1 %188
}

declare zeroext i1 @_ZN3net8HttpUtil17IsValidHeaderNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZN7network5debug32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN3net8HttpUtil18IsValidHeaderValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom26HttpRequestHeadersDataViewEN3net18HttpRequestHeadersEE4ReadES3_PS5_(%"class.network::mojom::internal::HttpRequestHeaders_Data"*, %"class.mojo::Message"*, %"class.net::HttpRequestHeaders"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = getelementptr inbounds %"class.network::mojom::internal::HttpRequestHeaders_Data", %"class.network::mojom::internal::HttpRequestHeaders_Data"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer.25", %"struct.mojo::internal::Pointer.25"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = bitcast %"struct.mojo::internal::Pointer.25"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.mojo::internal::Array_Data"*
  %14 = select i1 %10, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %13
  %15 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %14, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %82, label %18

18:                                               ; preds = %3
  %19 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %4 to i8*
  %20 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %4, i64 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %14, i64 1
  %26 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %28 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %31 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %37 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %4 to i8*
  br label %42

38:                                               ; preds = %79
  %39 = load i32, i32* %15, align 1
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %81, %40
  br i1 %41, label %42, label %82

42:                                               ; preds = %18, %38
  %43 = phi i64 [ 0, %18 ], [ %81, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN3net18HttpRequestHeaders18HeaderKeyValuePairC1Ev(%"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* nonnull %4) #7
  %44 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %25, i64 %43
  %45 = bitcast %"class.mojo::internal::Array_Data"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.mojo::internal::Array_Data"* %44 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 %46
  %51 = bitcast i8* %50 to %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"*
  %52 = call zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom37HttpRequestHeaderKeyValuePairDataViewEN3net18HttpRequestHeaders18HeaderKeyValuePairEE4ReadES3_PS6_(%"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"* nonnull %51, %"class.mojo::Message"* %1, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* nonnull %4) #7
  br i1 %52, label %53, label %68

53:                                               ; preds = %42, %48
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7
  %54 = load i8, i8* %29, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i8*, i8** %20, align 8
  %57 = select i1 %55, i8* %56, i8* %19
  store i8* %57, i8** %27, align 8
  %58 = load i64, i64* %21, align 8
  %59 = zext i8 %54 to i64
  %60 = select i1 %55, i64 %58, i64 %59
  store i64 %60, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  %61 = load i8, i8* %34, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i8*, i8** %23, align 8
  %64 = select i1 %62, i8* %63, i8* %35
  store i8* %64, i8** %32, align 8
  %65 = load i64, i64* %24, align 8
  %66 = zext i8 %61 to i64
  %67 = select i1 %62, i64 %65, i64 %66
  store i64 %67, i64* %36, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %2, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  br label %68

68:                                               ; preds = %48, %53
  %69 = phi i32 [ 0, %53 ], [ 1, %48 ]
  %70 = load i8, i8* %34, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %73) #9
  br label %74

74:                                               ; preds = %72, %68
  %75 = load i8, i8* %29, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %74, %77
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #7
  %80 = icmp eq i32 %69, 0
  %81 = add nuw nsw i64 %43, 1
  br i1 %80, label %38, label %82

82:                                               ; preds = %79, %38, %3
  %83 = phi i1 [ true, %3 ], [ true, %38 ], [ false, %79 ]
  ret i1 %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3net18HttpRequestHeaders18HeaderKeyValuePairC1Ev(%"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*) unnamed_addr #1

declare void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
